set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999911446892719	WITHOUT_CLASSIFICATION	8.855310728148584E-6	DEFECT
line 335	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9998479251708446	WITHOUT_CLASSIFICATION	1.520748291552865E-4	DEFECT
line 362	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
line 391	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
^D	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
^Z	WITHOUT_CLASSIFICATION	0.9999750576209548	WITHOUT_CLASSIFICATION	2.494237904520493E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999972062517857	WITHOUT_CLASSIFICATION	2.7937482141831813E-6	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999972062517857	WITHOUT_CLASSIFICATION	2.7937482141831813E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
return result	WITHOUT_CLASSIFICATION	0.999955008113126	WITHOUT_CLASSIFICATION	4.499188687402227E-5	DEFECT
name	WITHOUT_CLASSIFICATION	0.9999751714585856	WITHOUT_CLASSIFICATION	2.482854141433119E-5	DEFECT
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9997732663900601	WITHOUT_CLASSIFICATION	2.2673360993989816E-4	DEFECT
Accessor methods.	WITHOUT_CLASSIFICATION	0.9998820742608217	WITHOUT_CLASSIFICATION	1.1792573917830363E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9998545794881926	WITHOUT_CLASSIFICATION	1.4542051180744235E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9998545794881926	WITHOUT_CLASSIFICATION	1.4542051180744235E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9998545794881926	WITHOUT_CLASSIFICATION	1.4542051180744235E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9998545794881926	WITHOUT_CLASSIFICATION	1.4542051180744235E-4	DEFECT
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9991175895500305	WITHOUT_CLASSIFICATION	8.824104499694117E-4	DEFECT
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9997185171939651	WITHOUT_CLASSIFICATION	2.814828060348582E-4	DEFECT
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999808863421483	WITHOUT_CLASSIFICATION	1.9113657851671475E-5	DEFECT
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9997950689845178	WITHOUT_CLASSIFICATION	2.04931015482278E-4	DEFECT
Version information:	WITHOUT_CLASSIFICATION	0.9998869151487895	WITHOUT_CLASSIFICATION	1.1308485121049458E-4	DEFECT
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999390341634553	WITHOUT_CLASSIFICATION	6.096583654470178E-5	DEFECT
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999344182896364	WITHOUT_CLASSIFICATION	6.558171036359483E-5	DEFECT
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999538889830732	WITHOUT_CLASSIFICATION	4.6111016926798524E-5	DEFECT
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999597610841522	WITHOUT_CLASSIFICATION	4.023891584779911E-5	DEFECT
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9956318887874014	WITHOUT_CLASSIFICATION	0.004368111212598639	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998147415917582	WITHOUT_CLASSIFICATION	1.8525840824192225E-4	DEFECT
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999742593598462	WITHOUT_CLASSIFICATION	2.5740640153765118E-5	DEFECT
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9995435441687904	WITHOUT_CLASSIFICATION	4.564558312095028E-4	DEFECT
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999803916315059	WITHOUT_CLASSIFICATION	1.9608368494040487E-5	DEFECT
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998268764639832	WITHOUT_CLASSIFICATION	1.7312353601687077E-4	DEFECT
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9979785174503056	WITHOUT_CLASSIFICATION	0.0020214825496944165	DEFECT
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999954856021314	WITHOUT_CLASSIFICATION	4.51439786860243E-6	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9998545794881926	WITHOUT_CLASSIFICATION	1.4542051180744235E-4	DEFECT
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998605356516038	WITHOUT_CLASSIFICATION	1.394643483962006E-4	DEFECT
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999927080984793	WITHOUT_CLASSIFICATION	7.291901520796512E-6	DEFECT
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998144792077405	WITHOUT_CLASSIFICATION	1.8552079225949027E-4	DEFECT
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998372313978445	WITHOUT_CLASSIFICATION	1.6276860215548111E-4	DEFECT
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998445451914493	WITHOUT_CLASSIFICATION	1.5545480855079426E-4	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999174564050425	WITHOUT_CLASSIFICATION	8.254359495756447E-5	DEFECT
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999614594004592	WITHOUT_CLASSIFICATION	3.8540599540770715E-5	DEFECT
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999849903541173	WITHOUT_CLASSIFICATION	1.5009645882735782E-5	DEFECT
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9998332951789002	WITHOUT_CLASSIFICATION	1.6670482109973188E-4	DEFECT
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.999877788894422	WITHOUT_CLASSIFICATION	1.2221110557800627E-4	DEFECT
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9946583192405563	WITHOUT_CLASSIFICATION	0.0053416807594437645	DEFECT
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998318031363244	WITHOUT_CLASSIFICATION	1.6819686367557739E-4	DEFECT
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
IOT is also 6	WITHOUT_CLASSIFICATION	0.9996628784919352	WITHOUT_CLASSIFICATION	3.371215080646891E-4	DEFECT
CLD is also 20	WITHOUT_CLASSIFICATION	0.9999083295389214	WITHOUT_CLASSIFICATION	9.167046107855569E-5	DEFECT
RubySignal	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9990807350070414	WITHOUT_CLASSIFICATION	9.192649929585597E-4	DEFECT
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9995340999999731	WITHOUT_CLASSIFICATION	4.6590000002694133E-4	DEFECT
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9995964464181089	WITHOUT_CLASSIFICATION	4.0355358189112726E-4	DEFECT
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9982113670966024	WITHOUT_CLASSIFICATION	0.0017886329033976274	DEFECT
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998932666376242	WITHOUT_CLASSIFICATION	1.0673336237571941E-4	DEFECT
io.finish();	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9995176115221399	WITHOUT_CLASSIFICATION	4.823884778601125E-4	DEFECT
hmm...	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999816077581862	WITHOUT_CLASSIFICATION	1.839224181374386E-5	DEFECT
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999307456294468	WITHOUT_CLASSIFICATION	6.925437055317507E-5	DEFECT
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999198617096322	WITHOUT_CLASSIFICATION	8.013829036782738E-5	DEFECT
float number of seconds	WITHOUT_CLASSIFICATION	0.9998965350240058	WITHOUT_CLASSIFICATION	1.0346497599427345E-4	DEFECT
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999536410595292	WITHOUT_CLASSIFICATION	4.635894047079577E-4	DEFECT
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9993755413507773	WITHOUT_CLASSIFICATION	6.244586492226382E-4	DEFECT
Time class methods	WITHOUT_CLASSIFICATION	0.999741810397707	WITHOUT_CLASSIFICATION	2.5818960229298944E-4	DEFECT
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9994021767980749	WITHOUT_CLASSIFICATION	5.978232019251106E-4	DEFECT
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.999863571618784	WITHOUT_CLASSIFICATION	1.3642838121595E-4	DEFECT
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999625421563343	WITHOUT_CLASSIFICATION	3.745784366570025E-5	DEFECT
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9999000531049869	WITHOUT_CLASSIFICATION	9.994689501318537E-5	DEFECT
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999933140383769	WITHOUT_CLASSIFICATION	6.685961623100319E-5	DEFECT
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9995444977638025	WITHOUT_CLASSIFICATION	4.5550223619749905E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997911707370556	WITHOUT_CLASSIFICATION	2.0882926294436572E-4	DEFECT
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999766164640331	WITHOUT_CLASSIFICATION	2.3383535966855966E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998598129759116	WITHOUT_CLASSIFICATION	1.4018702408839846E-4	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9996827370456106	WITHOUT_CLASSIFICATION	3.172629543894689E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997177786731802	WITHOUT_CLASSIFICATION	2.822213268197761E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997177786731802	WITHOUT_CLASSIFICATION	2.822213268197761E-4	DEFECT
no bignorm here needed	WITHOUT_CLASSIFICATION	0.999965008090447	WITHOUT_CLASSIFICATION	3.499190955313793E-5	DEFECT
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9998627852013311	WITHOUT_CLASSIFICATION	1.3721479866901247E-4	DEFECT
Pad with a 0	WITHOUT_CLASSIFICATION	0.9998997188183107	WITHOUT_CLASSIFICATION	1.0028118168934244E-4	DEFECT
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9982410339206316	WITHOUT_CLASSIFICATION	0.001758966079368465	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9882048877563065	WITHOUT_CLASSIFICATION	0.0117951122436934	DEFECT
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9899313062947241	WITHOUT_CLASSIFICATION	0.010068693705275729	DEFECT
???	WITHOUT_CLASSIFICATION	0.9999763305834416	WITHOUT_CLASSIFICATION	2.3669416558333258E-5	DEFECT
PID	WITHOUT_CLASSIFICATION	0.9999749610012442	WITHOUT_CLASSIFICATION	2.5038998755820567E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998598129759116	WITHOUT_CLASSIFICATION	1.4018702408839846E-4	DEFECT
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999296537816934	WITHOUT_CLASSIFICATION	7.034621830665192E-5	DEFECT
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999647772718188	WITHOUT_CLASSIFICATION	3.522272818134112E-5	DEFECT
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999966360995064	WITHOUT_CLASSIFICATION	3.363900493538731E-6	DEFECT
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9999662581049614	WITHOUT_CLASSIFICATION	3.3741895038493334E-5	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9997814215451302	WITHOUT_CLASSIFICATION	2.1857845486976022E-4	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9997814215451302	WITHOUT_CLASSIFICATION	2.1857845486976022E-4	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9997814215451302	WITHOUT_CLASSIFICATION	2.1857845486976022E-4	DEFECT
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.999865234384114	WITHOUT_CLASSIFICATION	1.3476561588594518E-4	DEFECT
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9998981805951627	WITHOUT_CLASSIFICATION	1.0181940483733677E-4	DEFECT
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999701565108468	WITHOUT_CLASSIFICATION	2.984348915317004E-5	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9943365511054135	WITHOUT_CLASSIFICATION	0.005663448894586442	DEFECT
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9992902668432414	WITHOUT_CLASSIFICATION	7.097331567587199E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999928196529609	WITHOUT_CLASSIFICATION	7.180347039124803E-6	DEFECT
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9985445808176104	WITHOUT_CLASSIFICATION	0.0014554191823895391	DEFECT
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9994628116810238	WITHOUT_CLASSIFICATION	5.371883189761606E-4	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9998813132531355	WITHOUT_CLASSIFICATION	1.1868674686448612E-4	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999060129718351	WITHOUT_CLASSIFICATION	9.398702816484546E-5	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998855270254332	WITHOUT_CLASSIFICATION	1.1447297456675358E-4	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998855270254332	WITHOUT_CLASSIFICATION	1.1447297456675358E-4	DEFECT
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997223264965829	WITHOUT_CLASSIFICATION	2.7767350341721295E-4	DEFECT
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9996997403655311	WITHOUT_CLASSIFICATION	3.002596344689728E-4	DEFECT
root fiber	WITHOUT_CLASSIFICATION	0.9999696107119614	WITHOUT_CLASSIFICATION	3.0389288038611283E-5	DEFECT
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9996782557796616	WITHOUT_CLASSIFICATION	3.2174422033841494E-4	DEFECT
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9997980646765702	WITHOUT_CLASSIFICATION	2.0193532342985133E-4	DEFECT
extras flag	WITHOUT_CLASSIFICATION	0.999905790338293	WITHOUT_CLASSIFICATION	9.420966170713732E-5	DEFECT
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
...nothing	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
utility method	WITHOUT_CLASSIFICATION	0.9999836695763685	WITHOUT_CLASSIFICATION	1.6330423631495004E-5	DEFECT
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999158289564176	WITHOUT_CLASSIFICATION	8.41710435823831E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998598129759116	WITHOUT_CLASSIFICATION	1.4018702408839846E-4	DEFECT
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999824860871003	WITHOUT_CLASSIFICATION	1.7513912899615836E-5	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998222394871924	WITHOUT_CLASSIFICATION	1.777605128075267E-4	DEFECT
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.996426856125538	WITHOUT_CLASSIFICATION	0.0035731438744621	DEFECT
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999632172986807	WITHOUT_CLASSIFICATION	3.6782701319323566E-5	DEFECT
MRI does it!	WITHOUT_CLASSIFICATION	0.9994782946870352	WITHOUT_CLASSIFICATION	5.217053129647714E-4	DEFECT
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996085845746703	WITHOUT_CLASSIFICATION	3.914154253297206E-4	DEFECT
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996668368775756	WITHOUT_CLASSIFICATION	3.331631224243908E-4	DEFECT
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9969483730168693	WITHOUT_CLASSIFICATION	0.003051626983130747	DEFECT
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9997266468174111	WITHOUT_CLASSIFICATION	2.7335318258895155E-4	DEFECT
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999322631951845	WITHOUT_CLASSIFICATION	6.773680481553591E-5	DEFECT
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999672565216242	WITHOUT_CLASSIFICATION	3.274347837575381E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999241560758938	WITHOUT_CLASSIFICATION	7.584392410615005E-5	DEFECT
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9996591413557928	WITHOUT_CLASSIFICATION	3.408586442071892E-4	DEFECT
recheck condition	WITHOUT_CLASSIFICATION	0.9976976596381998	WITHOUT_CLASSIFICATION	0.0023023403618002538	DEFECT
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999960161715662	WITHOUT_CLASSIFICATION	3.983828433796377E-5	DEFECT
Construct key services	WITHOUT_CLASSIFICATION	0.9999327579407019	WITHOUT_CLASSIFICATION	6.724205929800225E-5	DEFECT
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9985189563698369	WITHOUT_CLASSIFICATION	0.0014810436301631454	DEFECT
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999755461864034	WITHOUT_CLASSIFICATION	2.4453813596568258E-5	DEFECT
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999862100977605	WITHOUT_CLASSIFICATION	1.3789902239630785E-5	DEFECT
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999477584488948	WITHOUT_CLASSIFICATION	5.2241551105206483E-5	DEFECT
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9996496775852617	WITHOUT_CLASSIFICATION	3.503224147382101E-4	DEFECT
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9998399511127607	WITHOUT_CLASSIFICATION	1.6004888723923828E-4	DEFECT
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999871943245038	WITHOUT_CLASSIFICATION	1.2805675496314703E-5	DEFECT
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9995608509385449	WITHOUT_CLASSIFICATION	4.3914906145521755E-4	DEFECT
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9993430556089938	WITHOUT_CLASSIFICATION	6.569443910060247E-4	DEFECT
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999902011512225	WITHOUT_CLASSIFICATION	9.798848777500856E-5	DEFECT
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999059510903421	WITHOUT_CLASSIFICATION	9.404890965789344E-4	DEFECT
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999583332913347	WITHOUT_CLASSIFICATION	4.166670866533877E-5	DEFECT
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999774657130035	WITHOUT_CLASSIFICATION	2.2534286996503942E-4	DEFECT
determine spacing	WITHOUT_CLASSIFICATION	0.9999372212615032	WITHOUT_CLASSIFICATION	6.277873849687485E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9998757849250667	WITHOUT_CLASSIFICATION	1.2421507493340614E-4	DEFECT
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999489699693231	WITHOUT_CLASSIFICATION	5.1030030676822686E-5	DEFECT
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9983694731699091	WITHOUT_CLASSIFICATION	0.0016305268300908864	DEFECT
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997695374870362	WITHOUT_CLASSIFICATION	2.3046251296383758E-4	DEFECT
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999390666674571	WITHOUT_CLASSIFICATION	6.0933332542950256E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9907609364061549	WITHOUT_CLASSIFICATION	0.009239063593845097	DEFECT
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999309297534426	WITHOUT_CLASSIFICATION	6.90702465573961E-5	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9997313826581409	WITHOUT_CLASSIFICATION	2.6861734185910143E-4	DEFECT
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999824793949014	WITHOUT_CLASSIFICATION	1.752060509866302E-5	DEFECT
Default objects	WITHOUT_CLASSIFICATION	0.9998177852080666	WITHOUT_CLASSIFICATION	1.8221479193331874E-4	DEFECT
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9993331285597726	WITHOUT_CLASSIFICATION	6.668714402274337E-4	DEFECT
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999577361810853	WITHOUT_CLASSIFICATION	4.2263818914679556E-5	DEFECT
Java support	WITHOUT_CLASSIFICATION	0.9995592616131197	WITHOUT_CLASSIFICATION	4.4073838688029644E-4	DEFECT
Parser stats	WITHOUT_CLASSIFICATION	0.9998841706721409	WITHOUT_CLASSIFICATION	1.1582932785921193E-4	DEFECT
Compilation	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9993780057838322	WITHOUT_CLASSIFICATION	6.219942161678919E-4	DEFECT
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9991238776288103	WITHOUT_CLASSIFICATION	8.761223711897027E-4	DEFECT
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998709647798819	WITHOUT_CLASSIFICATION	1.2903522011810254E-4	DEFECT
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998836629214283	WITHOUT_CLASSIFICATION	1.1633707857167684E-4	DEFECT
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9993921021299138	WITHOUT_CLASSIFICATION	6.078978700862191E-4	DEFECT
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997746586320686	WITHOUT_CLASSIFICATION	2.2534136793133232E-4	DEFECT
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9998777232479139	WITHOUT_CLASSIFICATION	1.2227675208599216E-4	DEFECT
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.997543709354194	WITHOUT_CLASSIFICATION	0.0024562906458060092	DEFECT
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9996553497130577	WITHOUT_CLASSIFICATION	3.446502869422377E-4	DEFECT
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9983936887170956	WITHOUT_CLASSIFICATION	0.00160631128290457	DEFECT
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9998049456654393	WITHOUT_CLASSIFICATION	1.9505433456059974E-4	DEFECT
quoted-printable	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
default options	WITHOUT_CLASSIFICATION	0.9999827736862397	WITHOUT_CLASSIFICATION	1.7226313760294033E-5	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.999975296412625	WITHOUT_CLASSIFICATION	2.4703587375068665E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.999975296412625	WITHOUT_CLASSIFICATION	2.4703587375068665E-5	DEFECT
long name option	WITHOUT_CLASSIFICATION	0.9999346950219804	WITHOUT_CLASSIFICATION	6.530497801962176E-5	DEFECT
conversion	WITHOUT_CLASSIFICATION	0.9999847493064457	WITHOUT_CLASSIFICATION	1.5250693554312376E-5	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.999808681364735	WITHOUT_CLASSIFICATION	1.913186352650751E-4	DEFECT
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9996647759970949	WITHOUT_CLASSIFICATION	3.352240029051382E-4	DEFECT
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999472519645998	WITHOUT_CLASSIFICATION	5.2748035400278924E-5	DEFECT
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9995686869210837	WITHOUT_CLASSIFICATION	4.3131307891626443E-4	DEFECT
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998716793986574	WITHOUT_CLASSIFICATION	1.2832060134259314E-4	DEFECT
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999650739336963	WITHOUT_CLASSIFICATION	3.49260663037935E-5	DEFECT
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999219642070485	WITHOUT_CLASSIFICATION	7.80357929515651E-5	DEFECT
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999994986597015	WITHOUT_CLASSIFICATION	5.013402985056988E-6	DEFECT
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9998214895002643	WITHOUT_CLASSIFICATION	1.785104997356402E-4	DEFECT
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9969441724222479	WITHOUT_CLASSIFICATION	0.0030558275777521618	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9679574632865239	WITHOUT_CLASSIFICATION	0.032042536713476	DEFECT
must not reallocate	WITHOUT_CLASSIFICATION	0.9996735851060777	WITHOUT_CLASSIFICATION	3.264148939223211E-4	DEFECT
Illegal combination	WITHOUT_CLASSIFICATION	0.9998817932118274	WITHOUT_CLASSIFICATION	1.1820678817265292E-4	DEFECT
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998223475498998	WITHOUT_CLASSIFICATION	1.7765245010008208E-4	DEFECT
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999501962702301	WITHOUT_CLASSIFICATION	4.980372977000151E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999820647710356	WITHOUT_CLASSIFICATION	1.7935228964451125E-5	DEFECT
len + margin	WITHOUT_CLASSIFICATION	0.9998622629615393	WITHOUT_CLASSIFICATION	1.3773703846068093E-4	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999894349388393	WITHOUT_CLASSIFICATION	1.056506116061371E-5	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999894349388393	WITHOUT_CLASSIFICATION	1.056506116061371E-5	DEFECT
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9999308090873812	WITHOUT_CLASSIFICATION	6.91909126187632E-5	DEFECT
string given	WITHOUT_CLASSIFICATION	0.9999826672305231	WITHOUT_CLASSIFICATION	1.7332769476985323E-5	DEFECT
hash given	WITHOUT_CLASSIFICATION	0.9999886679218581	WITHOUT_CLASSIFICATION	1.1332078141947107E-5	DEFECT
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9980907863532354	WITHOUT_CLASSIFICATION	0.0019092136467644691	DEFECT
substring longer than string	WITHOUT_CLASSIFICATION	0.9997987067434302	WITHOUT_CLASSIFICATION	2.01293256569746E-4	DEFECT
rb_str_substr	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999892909644055	WITHOUT_CLASSIFICATION	1.0709035594435264E-5	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999892909644055	WITHOUT_CLASSIFICATION	1.0709035594435264E-5	DEFECT
rb_str_splice	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9411416296061237	WITHOUT_CLASSIFICATION	0.0588583703938764	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999798729222867	WITHOUT_CLASSIFICATION	2.0127077713370436E-5	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999798729222867	WITHOUT_CLASSIFICATION	2.0127077713370436E-5	DEFECT
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.999511587817033	WITHOUT_CLASSIFICATION	4.884121829670623E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9990388798392402	WITHOUT_CLASSIFICATION	9.611201607598621E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9990388798392402	WITHOUT_CLASSIFICATION	9.611201607598621E-4	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999848488346545	WITHOUT_CLASSIFICATION	1.5151165345443693E-5	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999848488346545	WITHOUT_CLASSIFICATION	1.5151165345443693E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
QTRUE	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9999213888538505	WITHOUT_CLASSIFICATION	7.861114614942862E-5	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999952737411534	WITHOUT_CLASSIFICATION	4.726258846595409E-6	DEFECT
long size bits in byte	WITHOUT_CLASSIFICATION	0.9998842268591257	WITHOUT_CLASSIFICATION	1.1577314087429859E-4	DEFECT
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9998293503557009	WITHOUT_CLASSIFICATION	1.706496442992258E-4	DEFECT
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9996478038798248	WITHOUT_CLASSIFICATION	3.521961201752892E-4	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999923639028491	WITHOUT_CLASSIFICATION	7.636097150894769E-5	DEFECT
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9998607737208327	WITHOUT_CLASSIFICATION	1.3922627916716592E-4	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999923639028491	WITHOUT_CLASSIFICATION	7.636097150894769E-5	DEFECT
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.997532995321346	WITHOUT_CLASSIFICATION	0.002467004678654059	DEFECT
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999250520560194	WITHOUT_CLASSIFICATION	7.494794398049894E-5	DEFECT
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998809194066609	WITHOUT_CLASSIFICATION	1.190805933391221E-4	DEFECT
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999123606825656	WITHOUT_CLASSIFICATION	8.763931743443187E-5	DEFECT
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998992258769336	WITHOUT_CLASSIFICATION	1.0077412306633049E-4	DEFECT
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9943782844847637	WITHOUT_CLASSIFICATION	0.005621715515236216	DEFECT
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999295740844917	WITHOUT_CLASSIFICATION	7.042591550838972E-5	DEFECT
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9998824135321013	WITHOUT_CLASSIFICATION	1.1758646789867133E-4	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9996951372671758	WITHOUT_CLASSIFICATION	3.0486273282416386E-4	DEFECT
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9996689527007956	WITHOUT_CLASSIFICATION	3.3104729920441196E-4	DEFECT
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9997079899448976	WITHOUT_CLASSIFICATION	2.920100551023193E-4	DEFECT
file not given	WITHOUT_CLASSIFICATION	0.9997891434356659	WITHOUT_CLASSIFICATION	2.1085656433415874E-4	DEFECT
string to eval	WITHOUT_CLASSIFICATION	0.999928649227784	WITHOUT_CLASSIFICATION	7.135077221598509E-5	DEFECT
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9997638699336198	WITHOUT_CLASSIFICATION	2.3613006638037895E-4	DEFECT
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999327082034681	WITHOUT_CLASSIFICATION	6.729179653182147E-5	DEFECT
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999007161523632	WITHOUT_CLASSIFICATION	9.928384763680186E-4	DEFECT
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9995428653461635	WITHOUT_CLASSIFICATION	4.5713465383648153E-4	DEFECT
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9996138657004511	WITHOUT_CLASSIFICATION	3.861342995489774E-4	DEFECT
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9994589640642294	WITHOUT_CLASSIFICATION	5.410359357705524E-4	DEFECT
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9601590837418928	WITHOUT_CLASSIFICATION	0.03984091625810708	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999466655503173	WITHOUT_CLASSIFICATION	5.333444968269048E-4	DEFECT
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999890805855314	WITHOUT_CLASSIFICATION	1.0919414468562817E-5	DEFECT
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999909596146451	WITHOUT_CLASSIFICATION	9.040385354871665E-6	DEFECT
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999233112337006	WITHOUT_CLASSIFICATION	7.668876629943932E-5	DEFECT
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999660882070786	WITHOUT_CLASSIFICATION	3.391179292150989E-5	DEFECT
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999040053635851	WITHOUT_CLASSIFICATION	9.599463641481805E-5	DEFECT
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999847359037282	WITHOUT_CLASSIFICATION	1.526409627176026E-5	DEFECT
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999772663132436	WITHOUT_CLASSIFICATION	2.2733686756358945E-5	DEFECT
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999319772172097	WITHOUT_CLASSIFICATION	6.802278279027816E-5	DEFECT
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999268273894231	WITHOUT_CLASSIFICATION	7.317261057693548E-5	DEFECT
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999706459446951	WITHOUT_CLASSIFICATION	2.9354055304958462E-5	DEFECT
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999801936779509	WITHOUT_CLASSIFICATION	1.980632204916838E-5	DEFECT
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998960763139655	WITHOUT_CLASSIFICATION	1.0392368603453724E-4	DEFECT
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9998949549200614	WITHOUT_CLASSIFICATION	1.0504507993854341E-4	DEFECT
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999110943339901	WITHOUT_CLASSIFICATION	8.890566600993179E-5	DEFECT
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998723800750211	WITHOUT_CLASSIFICATION	1.276199249788855E-4	DEFECT
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999430054166739	WITHOUT_CLASSIFICATION	5.699458332618304E-5	DEFECT
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999570596772358	WITHOUT_CLASSIFICATION	4.294032276410738E-5	DEFECT
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998723800750211	WITHOUT_CLASSIFICATION	1.276199249788855E-4	DEFECT
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999708387265451	WITHOUT_CLASSIFICATION	2.9161273454827623E-5	DEFECT
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9998880875679871	WITHOUT_CLASSIFICATION	1.1191243201299388E-4	DEFECT
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999052820007571	WITHOUT_CLASSIFICATION	9.471799924283333E-5	DEFECT
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999369586699056	WITHOUT_CLASSIFICATION	6.304133009431208E-5	DEFECT
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999709623185872	WITHOUT_CLASSIFICATION	2.9037681412911854E-5	DEFECT
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999490709555385	WITHOUT_CLASSIFICATION	5.092904446137928E-5	DEFECT
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999916494915555	WITHOUT_CLASSIFICATION	8.350508444500282E-5	DEFECT
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999756078550046	WITHOUT_CLASSIFICATION	2.439214499537405E-5	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998595912334262	WITHOUT_CLASSIFICATION	1.4040876657392997E-4	DEFECT
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9996966271915289	WITHOUT_CLASSIFICATION	3.033728084711462E-4	DEFECT
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999009231979819	WITHOUT_CLASSIFICATION	9.907680201811575E-5	DEFECT
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999943652687878	WITHOUT_CLASSIFICATION	5.634731212152625E-6	DEFECT
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.998765926781213	WITHOUT_CLASSIFICATION	0.0012340732187869838	DEFECT
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999860900217082	WITHOUT_CLASSIFICATION	1.390997829187706E-5	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.99999696981491	WITHOUT_CLASSIFICATION	3.0301850898935124E-6	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.99999696981491	WITHOUT_CLASSIFICATION	3.0301850898935124E-6	DEFECT
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9988642964915352	WITHOUT_CLASSIFICATION	0.0011357035084648595	DEFECT
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9995778431903592	WITHOUT_CLASSIFICATION	4.2215680964077166E-4	DEFECT
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9927388121450982	WITHOUT_CLASSIFICATION	0.007261187854901753	DEFECT
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999474292176169	WITHOUT_CLASSIFICATION	5.2570782382989083E-5	DEFECT
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9998818175911393	WITHOUT_CLASSIFICATION	1.1818240886081924E-4	DEFECT
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999480064639877	WITHOUT_CLASSIFICATION	5.1993536012309796E-5	DEFECT
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.970624448205432	WITHOUT_CLASSIFICATION	0.02937555179456792	DEFECT
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999972184486542	WITHOUT_CLASSIFICATION	2.7815513458035875E-5	DEFECT
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9997550605902193	WITHOUT_CLASSIFICATION	2.4493940978066313E-4	DEFECT
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999833548083938	WITHOUT_CLASSIFICATION	1.6645191606198614E-4	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999947671567455	WITHOUT_CLASSIFICATION	5.232843254483368E-6	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999947671567455	WITHOUT_CLASSIFICATION	5.232843254483368E-6	DEFECT
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9998251509845538	WITHOUT_CLASSIFICATION	1.7484901544616838E-4	DEFECT
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9996576371895072	WITHOUT_CLASSIFICATION	3.423628104928404E-4	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9985628637116422	WITHOUT_CLASSIFICATION	0.0014371362883578286	DEFECT
Create Constants class	WITHOUT_CLASSIFICATION	0.9997446908341165	WITHOUT_CLASSIFICATION	2.553091658833937E-4	DEFECT
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999708406369433	WITHOUT_CLASSIFICATION	2.9159363056734395E-5	DEFECT
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999885011042501	WITHOUT_CLASSIFICATION	1.1498895749865075E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.999962402404424	WITHOUT_CLASSIFICATION	3.75975955760226E-5	DEFECT
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9995496945654306	WITHOUT_CLASSIFICATION	4.5030543456934906E-4	DEFECT
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999990562258442	WITHOUT_CLASSIFICATION	9.437741557740523E-7	DEFECT
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9997656036146313	WITHOUT_CLASSIFICATION	2.3439638536865848E-4	DEFECT
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9998401563821029	WITHOUT_CLASSIFICATION	1.598436178971303E-4	DEFECT
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9989756989917818	WITHOUT_CLASSIFICATION	0.001024301008218148	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9998482899837495	WITHOUT_CLASSIFICATION	1.5171001625040575E-4	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9998482899837495	WITHOUT_CLASSIFICATION	1.5171001625040575E-4	DEFECT
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9988033464009572	WITHOUT_CLASSIFICATION	0.0011966535990427715	DEFECT
Should we do anything?	WITHOUT_CLASSIFICATION	0.99999113608161	WITHOUT_CLASSIFICATION	8.863918389953763E-6	DEFECT
File class methods	WITHOUT_CLASSIFICATION	0.9996813772190749	WITHOUT_CLASSIFICATION	3.186227809249901E-4	DEFECT
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999432469091606	WITHOUT_CLASSIFICATION	5.675309083940988E-4	DEFECT
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9998253364979369	WITHOUT_CLASSIFICATION	1.746635020630203E-4	DEFECT
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9997708132463059	WITHOUT_CLASSIFICATION	2.2918675369404238E-4	DEFECT
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999519281164206	WITHOUT_CLASSIFICATION	4.8071883579402095E-4	DEFECT
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9998991629400196	WITHOUT_CLASSIFICATION	1.0083705998037948E-4	DEFECT
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9976147465349063	WITHOUT_CLASSIFICATION	0.0023852534650937035	DEFECT
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9999052616509879	WITHOUT_CLASSIFICATION	9.473834901210717E-5	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9985628637116422	WITHOUT_CLASSIFICATION	0.0014371362883578286	DEFECT
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9993482723420598	WITHOUT_CLASSIFICATION	6.517276579402666E-4	DEFECT
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9984062042760141	WITHOUT_CLASSIFICATION	0.0015937957239859427	DEFECT
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999930427846733	WITHOUT_CLASSIFICATION	6.957215326820032E-6	DEFECT
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999226726381555	WITHOUT_CLASSIFICATION	7.732736184448755E-5	DEFECT
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999006092747614	WITHOUT_CLASSIFICATION	9.939072523852257E-5	DEFECT
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9998791546924557	WITHOUT_CLASSIFICATION	1.2084530754420055E-4	DEFECT
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999925935694594	WITHOUT_CLASSIFICATION	7.406430540679881E-6	DEFECT
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9995521125353876	WITHOUT_CLASSIFICATION	4.4788746461242715E-4	DEFECT
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9997996633519888	WITHOUT_CLASSIFICATION	2.0033664801119441E-4	DEFECT
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999247094603887	WITHOUT_CLASSIFICATION	7.52905396112823E-5	DEFECT
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999247094603887	WITHOUT_CLASSIFICATION	7.52905396112823E-5	DEFECT
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999947786945024	WITHOUT_CLASSIFICATION	5.2213054975465576E-6	DEFECT
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.99996007908116	WITHOUT_CLASSIFICATION	3.992091883993333E-5	DEFECT
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9997794592478472	WITHOUT_CLASSIFICATION	2.205407521528365E-4	DEFECT
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997343589694584	WITHOUT_CLASSIFICATION	2.6564103054157974E-4	DEFECT
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9998816273361586	WITHOUT_CLASSIFICATION	1.183726638414482E-4	DEFECT
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9969961773203605	WITHOUT_CLASSIFICATION	0.0030038226796394976	DEFECT
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rb: readable	WITHOUT_CLASSIFICATION	0.9998859266971812	WITHOUT_CLASSIFICATION	1.1407330281870215E-4	DEFECT
rename is successful	WITHOUT_CLASSIFICATION	0.9997487779169989	WITHOUT_CLASSIFICATION	2.512220830011244E-4	DEFECT
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9980031435845157	WITHOUT_CLASSIFICATION	0.001996856415484315	DEFECT
try to rename one more time	WITHOUT_CLASSIFICATION	0.9999960164646577	WITHOUT_CLASSIFICATION	3.9835353422635905E-6	DEFECT
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999501327213868	WITHOUT_CLASSIFICATION	4.986727861329646E-5	DEFECT
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9962972823703513	WITHOUT_CLASSIFICATION	0.003702717629648633	DEFECT
RubyContinuation	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.999815552284848	WITHOUT_CLASSIFICATION	1.8444771515194243E-4	DEFECT
16 ?	WITHOUT_CLASSIFICATION	0.9999773330404408	WITHOUT_CLASSIFICATION	2.266695955930765E-5	DEFECT
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9997502178625721	WITHOUT_CLASSIFICATION	2.497821374278238E-4	DEFECT
size + 1;	WITHOUT_CLASSIFICATION	0.9999697035617439	WITHOUT_CLASSIFICATION	3.029643825609002E-5	DEFECT
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9908126966912283	WITHOUT_CLASSIFICATION	0.009187303308771749	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9998914333643336	WITHOUT_CLASSIFICATION	1.0856663566646368E-4	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9998914333643336	WITHOUT_CLASSIFICATION	1.0856663566646368E-4	DEFECT
put implementation	WITHOUT_CLASSIFICATION	0.9997803070145902	WITHOUT_CLASSIFICATION	2.1969298540973117E-4	DEFECT
get implementation	WITHOUT_CLASSIFICATION	0.9997532557925686	WITHOUT_CLASSIFICATION	2.4674420743138334E-4	DEFECT
specialized for value	WITHOUT_CLASSIFICATION	0.9999061247769752	WITHOUT_CLASSIFICATION	9.387522302488845E-5	DEFECT
delete implementation	WITHOUT_CLASSIFICATION	0.999807461015004	WITHOUT_CLASSIFICATION	1.9253898499600085E-4	DEFECT
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999795481915966	WITHOUT_CLASSIFICATION	2.0451808403373788E-5	DEFECT
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9999023543036771	WITHOUT_CLASSIFICATION	9.764569632276342E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998598129759116	WITHOUT_CLASSIFICATION	1.4018702408839846E-4	DEFECT
update the hash value	WITHOUT_CLASSIFICATION	0.9999621617728366	WITHOUT_CLASSIFICATION	3.783822716338252E-5	DEFECT
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9984138891210562	WITHOUT_CLASSIFICATION	0.0015861108789437864	DEFECT
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.999837587822482	WITHOUT_CLASSIFICATION	1.62412177517989E-4	DEFECT
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997223264965829	WITHOUT_CLASSIFICATION	2.7767350341721295E-4	DEFECT
remain where we are	WITHOUT_CLASSIFICATION	0.9999790360609753	WITHOUT_CLASSIFICATION	2.0963939024763653E-5	DEFECT
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9965536979119616	WITHOUT_CLASSIFICATION	0.0034463020880383818	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9997313826581409	WITHOUT_CLASSIFICATION	2.6861734185910143E-4	DEFECT
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9998667189539264	WITHOUT_CLASSIFICATION	1.3328104607357455E-4	DEFECT
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9996879038183066	WITHOUT_CLASSIFICATION	3.120961816933228E-4	DEFECT
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999131961138376	WITHOUT_CLASSIFICATION	8.680388616240515E-5	DEFECT
first try as directory	WITHOUT_CLASSIFICATION	0.9999990527177143	WITHOUT_CLASSIFICATION	9.472822856790094E-7	DEFECT
next as regular file	WITHOUT_CLASSIFICATION	0.9998115390308094	WITHOUT_CLASSIFICATION	1.8846096919058664E-4	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9996782942961215	WITHOUT_CLASSIFICATION	3.2170570387856257E-4	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Stream-based	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999808578197539	WITHOUT_CLASSIFICATION	1.9142180246096706E-4	DEFECT
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9994875156132617	WITHOUT_CLASSIFICATION	5.12484386738462E-4	DEFECT
Constants for seek	WITHOUT_CLASSIFICATION	0.9998823468711112	WITHOUT_CLASSIFICATION	1.1765312888889457E-4	DEFECT
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9990798219766432	WITHOUT_CLASSIFICATION	9.20178023356682E-4	DEFECT
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999060223587742	WITHOUT_CLASSIFICATION	9.39776412257054E-5	DEFECT
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9998605887238667	WITHOUT_CLASSIFICATION	1.3941127613325394E-4	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999935429153575	WITHOUT_CLASSIFICATION	6.4570846425767925E-6	DEFECT
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999266273875483	WITHOUT_CLASSIFICATION	7.33726124516834E-5	DEFECT
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.999885524877446	WITHOUT_CLASSIFICATION	1.144751225540492E-4	DEFECT
re-register	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9997782634650539	WITHOUT_CLASSIFICATION	2.2173653494594108E-4	DEFECT
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999891796259407	WITHOUT_CLASSIFICATION	1.0820374059252392E-5	DEFECT
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999328486183642	WITHOUT_CLASSIFICATION	6.715138163589168E-5	DEFECT
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999692747122282	WITHOUT_CLASSIFICATION	3.072528777175601E-5	DEFECT
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9997100091372543	WITHOUT_CLASSIFICATION	2.8999086274570475E-4	DEFECT
IO class methods.	WITHOUT_CLASSIFICATION	0.9997526213495661	WITHOUT_CLASSIFICATION	2.473786504338919E-4	DEFECT
use original modes	WITHOUT_CLASSIFICATION	0.9997701281087823	WITHOUT_CLASSIFICATION	2.298718912177556E-4	DEFECT
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999975614227927	WITHOUT_CLASSIFICATION	2.4385772072640492E-6	DEFECT
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999901326696653	WITHOUT_CLASSIFICATION	9.867330334630312E-6	DEFECT
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998075582541782	WITHOUT_CLASSIFICATION	1.924417458217274E-4	DEFECT
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999304070935925	WITHOUT_CLASSIFICATION	6.959290640742766E-5	DEFECT
isRetained=true	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.8896452160996886	WITHOUT_CLASSIFICATION	0.11035478390031148	DEFECT
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9978920768089313	WITHOUT_CLASSIFICATION	0.002107923191068612	DEFECT
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.99714818337157	WITHOUT_CLASSIFICATION	0.0028518166284300186	DEFECT
Everything written	WITHOUT_CLASSIFICATION	0.9999123209980277	WITHOUT_CLASSIFICATION	8.767900197222325E-5	DEFECT
return len - n;	WITHOUT_CLASSIFICATION	0.9998871652456326	WITHOUT_CLASSIFICATION	1.1283475436740242E-4	DEFECT
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998436186108187	WITHOUT_CLASSIFICATION	1.5638138918128098E-4	DEFECT
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9973363205211919	WITHOUT_CLASSIFICATION	0.0026636794788080596	DEFECT
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9989081730061609	WITHOUT_CLASSIFICATION	0.0010918269938391212	DEFECT
Register the new descriptor	WITHOUT_CLASSIFICATION	0.999952322272561	WITHOUT_CLASSIFICATION	4.767772743897669E-5	DEFECT
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999254649104475	WITHOUT_CLASSIFICATION	7.453508955247532E-5	DEFECT
hmmmm	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9988504356945348	WITHOUT_CLASSIFICATION	0.00114956430546518	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9995441205981201	WITHOUT_CLASSIFICATION	4.5587940187985737E-4	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9998704597474232	WITHOUT_CLASSIFICATION	1.2954025257691038E-4	DEFECT
Length to read	WITHOUT_CLASSIFICATION	0.9999443889962127	WITHOUT_CLASSIFICATION	5.561100378735074E-5	DEFECT
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999058362367332	WITHOUT_CLASSIFICATION	9.416376326671624E-5	DEFECT
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999242459836317	WITHOUT_CLASSIFICATION	7.575401636819115E-5	DEFECT
select until read is ready	WITHOUT_CLASSIFICATION	0.9996377927434028	WITHOUT_CLASSIFICATION	3.6220725659727763E-4	DEFECT
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998590910113431	WITHOUT_CLASSIFICATION	1.409089886569005E-4	DEFECT
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998557131441235	WITHOUT_CLASSIFICATION	1.4428685587644026E-4	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998898742375857	WITHOUT_CLASSIFICATION	1.10125762414261E-4	DEFECT
rb: writable	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998898742375857	WITHOUT_CLASSIFICATION	1.10125762414261E-4	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9971956258649719	WITHOUT_CLASSIFICATION	0.0028043741350281867	DEFECT
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9220090716147731	WITHOUT_CLASSIFICATION	0.07799092838522688	DEFECT
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999110936276061	WITHOUT_CLASSIFICATION	8.890637239389883E-5	DEFECT
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9586051837503569	WITHOUT_CLASSIFICATION	0.041394816249643133	DEFECT
class methods for IO	WITHOUT_CLASSIFICATION	0.9998307598706755	WITHOUT_CLASSIFICATION	1.6924012932449133E-4	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.999967711609995	WITHOUT_CLASSIFICATION	3.228839000497403E-5	DEFECT
write	WITHOUT_CLASSIFICATION	0.9999833808574314	WITHOUT_CLASSIFICATION	1.6619142568534674E-5	DEFECT
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9921499842988907	WITHOUT_CLASSIFICATION	0.00785001570110931	DEFECT
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997465605077	WITHOUT_CLASSIFICATION	2.534394922175398E-7	DEFECT
FIXME: process options	WITHOUT_CLASSIFICATION	0.9976891137106954	WITHOUT_CLASSIFICATION	0.002310886289304576	DEFECT
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9991849508539249	WITHOUT_CLASSIFICATION	8.150491460751778E-4	DEFECT
NIO based pipe	WITHOUT_CLASSIFICATION	0.9999397841465624	WITHOUT_CLASSIFICATION	6.021585343769271E-5	DEFECT
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9991360749291054	WITHOUT_CLASSIFICATION	8.639250708945375E-4	DEFECT
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999782503648655	WITHOUT_CLASSIFICATION	2.174963513450036E-5	DEFECT
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9999694301647457	WITHOUT_CLASSIFICATION	3.0569835254231886E-5	DEFECT
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9586084065242982	WITHOUT_CLASSIFICATION	0.041391593475701635	DEFECT
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9993905298665247	WITHOUT_CLASSIFICATION	6.094701334753727E-4	DEFECT
The class of this object	WITHOUT_CLASSIFICATION	0.999354267158244	WITHOUT_CLASSIFICATION	6.457328417558744E-4	DEFECT
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998455639540494	WITHOUT_CLASSIFICATION	1.5443604595045528E-4	DEFECT
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9455970417591956	WITHOUT_CLASSIFICATION	0.05440295824080437	DEFECT
rb_class_boot	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
for interface impls	WITHOUT_CLASSIFICATION	0.9999452256524539	WITHOUT_CLASSIFICATION	5.4774347546202423E-5	DEFECT
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9989081218397122	WITHOUT_CLASSIFICATION	0.0010918781602877548	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9997100976513669	WITHOUT_CLASSIFICATION	2.8990234863317954E-4	DEFECT
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9992476039172195	WITHOUT_CLASSIFICATION	7.523960827805848E-4	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998147415917582	WITHOUT_CLASSIFICATION	1.8525840824192225E-4	DEFECT
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999111669408456	WITHOUT_CLASSIFICATION	8.883305915440843E-5	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998892666718864	WITHOUT_CLASSIFICATION	1.107333281136192E-4	DEFECT
Struct methods	WITHOUT_CLASSIFICATION	0.9999208466140755	WITHOUT_CLASSIFICATION	7.91533859244336E-5	DEFECT
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9991362335465277	WITHOUT_CLASSIFICATION	8.63766453472306E-4	DEFECT
define access methods.	WITHOUT_CLASSIFICATION	0.9999449374513981	WITHOUT_CLASSIFICATION	5.5062548602027496E-5	DEFECT
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999437255025303	WITHOUT_CLASSIFICATION	5.6274497469714745E-5	DEFECT
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999843738765987	WITHOUT_CLASSIFICATION	1.562612340133606E-5	DEFECT
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999893872164419	WITHOUT_CLASSIFICATION	1.0612783558035498E-5	DEFECT
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9987219880716784	WITHOUT_CLASSIFICATION	0.0012780119283215346	DEFECT
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999049481646997	WITHOUT_CLASSIFICATION	9.505183530023926E-5	DEFECT
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9998993512167874	WITHOUT_CLASSIFICATION	1.0064878321256768E-4	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.9999754843282754	WITHOUT_CLASSIFICATION	2.4515671724562402E-5	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.9999754843282754	WITHOUT_CLASSIFICATION	2.4515671724562402E-5	DEFECT
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9998876968604969	WITHOUT_CLASSIFICATION	1.1230313950316434E-4	DEFECT
superClass may be null.	WITHOUT_CLASSIFICATION	0.9998134921072066	WITHOUT_CLASSIFICATION	1.8650789279347317E-4	DEFECT
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9957093306778078	WITHOUT_CLASSIFICATION	0.004290669322192218	DEFECT
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999662890626204	WITHOUT_CLASSIFICATION	3.371093737956246E-5	DEFECT
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9997298268915196	WITHOUT_CLASSIFICATION	2.701731084804511E-4	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999821757828984	WITHOUT_CLASSIFICATION	1.782421710156331E-5	DEFECT
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9997434812098919	WITHOUT_CLASSIFICATION	2.565187901081733E-4	DEFECT
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999674475234493	WITHOUT_CLASSIFICATION	3.2552476550639956E-5	DEFECT
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999542174083516	WITHOUT_CLASSIFICATION	4.578259164841874E-5	DEFECT
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999934830616208	WITHOUT_CLASSIFICATION	6.516938379120132E-6	DEFECT
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999593385377779	WITHOUT_CLASSIFICATION	4.066146222215484E-5	DEFECT
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999847460584484	WITHOUT_CLASSIFICATION	1.5253941551567342E-5	DEFECT
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999714208286666	WITHOUT_CLASSIFICATION	2.857917133335045E-5	DEFECT
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999038232524174	WITHOUT_CLASSIFICATION	9.61767475825677E-5	DEFECT
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999992909028039	WITHOUT_CLASSIFICATION	7.090971960232475E-7	DEFECT
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999097791334955	WITHOUT_CLASSIFICATION	9.022086650445681E-5	DEFECT
superClazz = null;	WITHOUT_CLASSIFICATION	0.9999133429655335	WITHOUT_CLASSIFICATION	8.66570344665852E-5	DEFECT
reopen a java class	WITHOUT_CLASSIFICATION	0.9993784574798897	WITHOUT_CLASSIFICATION	6.215425201101692E-4	DEFECT
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9993798300447462	WITHOUT_CLASSIFICATION	6.201699552538223E-4	DEFECT
reopen a java module	WITHOUT_CLASSIFICATION	0.9998432955656696	WITHOUT_CLASSIFICATION	1.5670443433036068E-4	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.9972766812081467	WITHOUT_CLASSIFICATION	0.0027233187918532633	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.9972766812081467	WITHOUT_CLASSIFICATION	0.0027233187918532633	DEFECT
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999787996827286	WITHOUT_CLASSIFICATION	2.1200317271350102E-5	DEFECT
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999513295144111	WITHOUT_CLASSIFICATION	4.867048558877962E-5	DEFECT
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9984387683293462	WITHOUT_CLASSIFICATION	0.001561231670653803	DEFECT
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999873039696979	WITHOUT_CLASSIFICATION	1.269603030196817E-5	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999653459703003	WITHOUT_CLASSIFICATION	3.465402969969861E-4	DEFECT
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9996036313003746	WITHOUT_CLASSIFICATION	3.963686996254692E-4	DEFECT
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9994750093810422	WITHOUT_CLASSIFICATION	5.249906189578445E-4	DEFECT
Module class methods	WITHOUT_CLASSIFICATION	0.9997399449906393	WITHOUT_CLASSIFICATION	2.6005500936070056E-4	DEFECT
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999984433330934	WITHOUT_CLASSIFICATION	1.5566669065623247E-6	DEFECT
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9997361427794159	WITHOUT_CLASSIFICATION	2.6385722058412973E-4	DEFECT
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999735003525433	WITHOUT_CLASSIFICATION	2.6499647456789966E-5	DEFECT
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999892088068388	WITHOUT_CLASSIFICATION	1.079119316119839E-5	DEFECT
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999927130935719	WITHOUT_CLASSIFICATION	7.286906428091778E-5	DEFECT
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999889510369795	WITHOUT_CLASSIFICATION	1.1048963020504138E-4	DEFECT
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998909588368006	WITHOUT_CLASSIFICATION	1.0904116319942735E-4	DEFECT
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9995946415535611	WITHOUT_CLASSIFICATION	4.0535844643894455E-4	DEFECT
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998903483496837	WITHOUT_CLASSIFICATION	1.096516503163087E-4	DEFECT
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998855531496689	WITHOUT_CLASSIFICATION	1.1444685033110809E-4	DEFECT
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9988498650440869	WITHOUT_CLASSIFICATION	0.0011501349559131478	DEFECT
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9888836823237909	WITHOUT_CLASSIFICATION	0.011116317676209105	DEFECT
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9996336789288216	WITHOUT_CLASSIFICATION	3.663210711783467E-4	DEFECT
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9993329614155568	WITHOUT_CLASSIFICATION	6.67038584443115E-4	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9993738000887331	WITHOUT_CLASSIFICATION	6.261999112668815E-4	DEFECT
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9995963692749447	WITHOUT_CLASSIFICATION	4.0363072505528814E-4	DEFECT
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999302363580304	WITHOUT_CLASSIFICATION	6.976364196959338E-4	DEFECT
reopen	WITHOUT_CLASSIFICATION	0.9999748948848477	WITHOUT_CLASSIFICATION	2.5105115152287023E-5	DEFECT
ARGF methods	WITHOUT_CLASSIFICATION	0.9999208466140755	WITHOUT_CLASSIFICATION	7.91533859244336E-5	DEFECT
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
one optional, one required args	WITHOUT_CLASSIFICATION	0.9995615396508235	WITHOUT_CLASSIFICATION	4.384603491765837E-4	DEFECT
one optional and no required args	WITHOUT_CLASSIFICATION	0.9998820419734219	WITHOUT_CLASSIFICATION	1.1795802657816112E-4	DEFECT
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999770204226335	WITHOUT_CLASSIFICATION	2.2979577366422922E-5	DEFECT
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998847505182005	WITHOUT_CLASSIFICATION	1.152494817994806E-4	DEFECT
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9995188778873539	WITHOUT_CLASSIFICATION	4.811221126460445E-4	DEFECT
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999143072645224	WITHOUT_CLASSIFICATION	8.569273547768877E-5	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998665483549973	WITHOUT_CLASSIFICATION	1.334516450026044E-4	DEFECT
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9992005820253476	WITHOUT_CLASSIFICATION	7.994179746525003E-4	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9985091102821344	WITHOUT_CLASSIFICATION	0.0014908897178655706	DEFECT
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999731008865835	WITHOUT_CLASSIFICATION	2.68991134165721E-5	DEFECT
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999532004271092	WITHOUT_CLASSIFICATION	4.6799572890683206E-5	DEFECT
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999710624714832	WITHOUT_CLASSIFICATION	2.893752851680026E-4	DEFECT
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997296947737433	WITHOUT_CLASSIFICATION	2.7030522625667353E-4	DEFECT
ignore error	WITHOUT_CLASSIFICATION	0.9999395333779948	WITHOUT_CLASSIFICATION	6.046662200521548E-5	DEFECT
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9999040877702345	WITHOUT_CLASSIFICATION	9.59122297655684E-5	DEFECT
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998046610179375	WITHOUT_CLASSIFICATION	1.9533898206250874E-4	DEFECT
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9996825900072698	WITHOUT_CLASSIFICATION	3.174099927302775E-4	DEFECT
odd	WITHOUT_CLASSIFICATION	0.999975073498649	WITHOUT_CLASSIFICATION	2.492650135096079E-5	DEFECT
JRubyClient	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.998130744417994	WITHOUT_CLASSIFICATION	0.0018692555820060248	DEFECT
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999035669862163	WITHOUT_CLASSIFICATION	9.643301378366708E-5	DEFECT
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9998778170063352	WITHOUT_CLASSIFICATION	1.2218299366479582E-4	DEFECT
r = x 2 y	WITHOUT_CLASSIFICATION	0.9992805917817112	WITHOUT_CLASSIFICATION	7.194082182886996E-4	DEFECT
0!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
1!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
2!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
3!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
4!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
5!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
6!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
7!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
8!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
9!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
11!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
12!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
13!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
15!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
16!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
17!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
19!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
20!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
21!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Static constants	WITHOUT_CLASSIFICATION	0.9999468711693675	WITHOUT_CLASSIFICATION	5.312883063238319E-5	DEFECT
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999772472092539	WITHOUT_CLASSIFICATION	2.275279074614583E-5	DEFECT
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999502710235383	WITHOUT_CLASSIFICATION	4.9728976461730926E-5	DEFECT
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9998832367327185	WITHOUT_CLASSIFICATION	1.1676326728137861E-4	DEFECT
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9985870938708218	WITHOUT_CLASSIFICATION	0.0014129061291781946	DEFECT
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999009078632644	WITHOUT_CLASSIFICATION	9.909213673563159E-5	DEFECT
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.99996787233915	WITHOUT_CLASSIFICATION	3.212766085009538E-5	DEFECT
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9948113948259707	WITHOUT_CLASSIFICATION	0.005188605174029307	DEFECT
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9998327746916248	WITHOUT_CLASSIFICATION	1.672253083751832E-4	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998902879510063	WITHOUT_CLASSIFICATION	1.0971204899369905E-4	DEFECT
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9427589747936992	WITHOUT_CLASSIFICATION	0.05724102520630088	DEFECT
integer division	WITHOUT_CLASSIFICATION	0.9999006367974884	WITHOUT_CLASSIFICATION	9.936320251165355E-5	DEFECT
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9997895785729664	WITHOUT_CLASSIFICATION	2.1042142703373915E-4	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9999009078632644	WITHOUT_CLASSIFICATION	9.909213673563159E-5	DEFECT
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9987001486275168	WITHOUT_CLASSIFICATION	0.0012998513724832763	DEFECT
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999671064432956	WITHOUT_CLASSIFICATION	3.2893556704464535E-5	DEFECT
...round to that digit	WITHOUT_CLASSIFICATION	0.9998778101378539	WITHOUT_CLASSIFICATION	1.221898621461178E-4	DEFECT
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9998979608526878	WITHOUT_CLASSIFICATION	1.0203914731219704E-4	DEFECT
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998759604882808	WITHOUT_CLASSIFICATION	1.2403951171924298E-4	DEFECT
sign	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9998556037867218	WITHOUT_CLASSIFICATION	1.4439621327822977E-4	DEFECT
normalize the value	WITHOUT_CLASSIFICATION	0.9999342225398481	WITHOUT_CLASSIFICATION	6.57774601518441E-5	DEFECT
base	WITHOUT_CLASSIFICATION	0.9999798256782431	WITHOUT_CLASSIFICATION	2.0174321756937005E-5	DEFECT
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.99971850710136	WITHOUT_CLASSIFICATION	2.8149289863999585E-4	DEFECT
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9998485875504416	WITHOUT_CLASSIFICATION	1.514124495584497E-4	DEFECT
eh?!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9992899554314937	WITHOUT_CLASSIFICATION	7.100445685062683E-4	DEFECT
General number and precision checking	WITHOUT_CLASSIFICATION	0.9996708576118041	WITHOUT_CLASSIFICATION	3.291423881958826E-4	DEFECT
the requested precision	WITHOUT_CLASSIFICATION	0.9999351437583757	WITHOUT_CLASSIFICATION	6.485624162434372E-5	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999174564050425	WITHOUT_CLASSIFICATION	8.254359495756447E-5	DEFECT
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999378750674067	WITHOUT_CLASSIFICATION	6.212493259338274E-5	DEFECT
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9997997527982674	WITHOUT_CLASSIFICATION	2.0024720173266486E-4	DEFECT
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.999948458656248	WITHOUT_CLASSIFICATION	5.154134375192302E-5	DEFECT
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999506901233086	WITHOUT_CLASSIFICATION	4.9309876691374686E-5	DEFECT
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9994819815611931	WITHOUT_CLASSIFICATION	5.180184388069343E-4	DEFECT
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998817387397092	WITHOUT_CLASSIFICATION	1.1826126029077889E-4	DEFECT
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9997513364783875	WITHOUT_CLASSIFICATION	2.4866352161246523E-4	DEFECT
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9996688088201467	WITHOUT_CLASSIFICATION	3.3119117985324053E-4	DEFECT
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998182639642178	WITHOUT_CLASSIFICATION	1.8173603578222603E-4	DEFECT
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999961214968717	WITHOUT_CLASSIFICATION	3.878503128300035E-5	DEFECT
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9998824183027816	WITHOUT_CLASSIFICATION	1.1758169721842404E-4	DEFECT
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.996948107262421	WITHOUT_CLASSIFICATION	0.0030518927375789355	DEFECT
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9994652188955352	WITHOUT_CLASSIFICATION	5.34781104464822E-4	DEFECT
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.999825673600127	WITHOUT_CLASSIFICATION	1.7432639987301175E-4	DEFECT
root x is ready!	WITHOUT_CLASSIFICATION	0.9994094376406585	WITHOUT_CLASSIFICATION	5.905623593415535E-4	DEFECT
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9998418136773646	WITHOUT_CLASSIFICATION	1.5818632263546326E-4	DEFECT
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999034140416045	WITHOUT_CLASSIFICATION	9.658595839537794E-5	DEFECT
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
c: bind_eval	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9998086690222098	WITHOUT_CLASSIFICATION	1.913309777902769E-4	DEFECT
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9998898742375857	WITHOUT_CLASSIFICATION	1.10125762414261E-4	DEFECT
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999017836997947	WITHOUT_CLASSIFICATION	9.82163002053473E-5	DEFECT
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999893211018653	WITHOUT_CLASSIFICATION	1.0678898134652502E-5	DEFECT
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9984232218365341	WITHOUT_CLASSIFICATION	0.0015767781634659008	DEFECT
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9997161200841138	WITHOUT_CLASSIFICATION	2.8387991588616797E-4	DEFECT
try the normal property first	WITHOUT_CLASSIFICATION	0.9999866797152963	WITHOUT_CLASSIFICATION	1.332028470368746E-5	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999089334588382	WITHOUT_CLASSIFICATION	9.106654116175329E-5	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999089334588382	WITHOUT_CLASSIFICATION	9.106654116175329E-5	DEFECT
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.998501640349189	WITHOUT_CLASSIFICATION	0.0014983596508109786	DEFECT
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9996852435007056	WITHOUT_CLASSIFICATION	3.147564992943504E-4	DEFECT
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9997289306584549	WITHOUT_CLASSIFICATION	2.710693415451274E-4	DEFECT
consume the file name	WITHOUT_CLASSIFICATION	0.9999539938136641	WITHOUT_CLASSIFICATION	4.6006186335912953E-5	DEFECT
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998335681126262	WITHOUT_CLASSIFICATION	1.6643188737367292E-4	DEFECT
try cwd first	WITHOUT_CLASSIFICATION	0.9999922942521177	WITHOUT_CLASSIFICATION	7.705747882291017E-6	DEFECT
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998654158751097	WITHOUT_CLASSIFICATION	1.3458412489025643E-4	DEFECT
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.997724156177845	WITHOUT_CLASSIFICATION	0.002275843822154882	DEFECT
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998547559951987	WITHOUT_CLASSIFICATION	1.4524400480126553E-4	DEFECT
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999176661880527	WITHOUT_CLASSIFICATION	8.233381194731053E-5	DEFECT
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998547559951987	WITHOUT_CLASSIFICATION	1.4524400480126553E-4	DEFECT
symbol string must be interned	WITHOUT_CLASSIFICATION	0.999953197029889	WITHOUT_CLASSIFICATION	4.680297011098355E-5	DEFECT
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9907609364061549	WITHOUT_CLASSIFICATION	0.009239063593845097	DEFECT
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9996439466224896	WITHOUT_CLASSIFICATION	3.5605337751044353E-4	DEFECT
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9586084065242982	WITHOUT_CLASSIFICATION	0.041391593475701635	DEFECT
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9996177496292161	WITHOUT_CLASSIFICATION	3.822503707839325E-4	DEFECT
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999513573374353	WITHOUT_CLASSIFICATION	4.8642662564729175E-5	DEFECT
must be power of 2!	WITHOUT_CLASSIFICATION	0.9998933731199133	WITHOUT_CLASSIFICATION	1.0662688008664301E-4	DEFECT
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999455583855913	WITHOUT_CLASSIFICATION	5.4441614408739214E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9907609364061549	WITHOUT_CLASSIFICATION	0.009239063593845097	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999719484326234	WITHOUT_CLASSIFICATION	2.8051567376637287E-5	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999719484326234	WITHOUT_CLASSIFICATION	2.8051567376637287E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999757431179992	WITHOUT_CLASSIFICATION	2.4256882000784968E-5	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9998765462682216	WITHOUT_CLASSIFICATION	1.2345373177836497E-4	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9996715548239598	WITHOUT_CLASSIFICATION	3.284451760402259E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998961332092723	WITHOUT_CLASSIFICATION	1.0386679072763991E-4	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999952737411534	WITHOUT_CLASSIFICATION	4.726258846595409E-6	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999952126805113	WITHOUT_CLASSIFICATION	4.787319488701114E-5	DEFECT
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9991359107352507	WITHOUT_CLASSIFICATION	8.640892647493452E-4	DEFECT
Profile	WITHOUT_CLASSIFICATION	0.9999750163062142	WITHOUT_CLASSIFICATION	2.498369378581943E-5	DEFECT
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9999255975969078	WITHOUT_CLASSIFICATION	7.440240309222981E-5	DEFECT
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999497216016318	WITHOUT_CLASSIFICATION	5.027839836818714E-5	DEFECT
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999873301746868	WITHOUT_CLASSIFICATION	1.2669825313269723E-5	DEFECT
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.999926109010706	WITHOUT_CLASSIFICATION	7.389098929399584E-5	DEFECT
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999015946288448	WITHOUT_CLASSIFICATION	9.840537115520147E-5	DEFECT
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9996388183283631	WITHOUT_CLASSIFICATION	3.611816716368992E-4	DEFECT
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.999984455640218	WITHOUT_CLASSIFICATION	1.5544359782046012E-5	DEFECT
reset the state	WITHOUT_CLASSIFICATION	0.9999754542188234	WITHOUT_CLASSIFICATION	2.454578117655326E-5	DEFECT
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998751981116969	WITHOUT_CLASSIFICATION	1.2480188830313037E-4	DEFECT
rb_match_busy	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
str is frozen	WITHOUT_CLASSIFICATION	0.9997474498347674	WITHOUT_CLASSIFICATION	2.525501652326139E-4	DEFECT
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9995937686990175	WITHOUT_CLASSIFICATION	4.0623130098257394E-4	DEFECT
JRubyServer	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9991503086182678	WITHOUT_CLASSIFICATION	8.496913817322117E-4	DEFECT
boot the Object class	WITHOUT_CLASSIFICATION	0.9997340036415978	WITHOUT_CLASSIFICATION	2.65996358402219E-4	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9997100976513669	WITHOUT_CLASSIFICATION	2.8990234863317954E-4	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999821757828984	WITHOUT_CLASSIFICATION	1.782421710156331E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.999998823464494	WITHOUT_CLASSIFICATION	1.176535505961317E-6	DEFECT
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9976295880157351	WITHOUT_CLASSIFICATION	0.002370411984264986	DEFECT
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999757842481063	WITHOUT_CLASSIFICATION	2.4215751893748737E-5	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9763085352999581	WITHOUT_CLASSIFICATION	0.023691464700041964	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9997666212452758	WITHOUT_CLASSIFICATION	2.333787547241587E-4	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9997666212452758	WITHOUT_CLASSIFICATION	2.333787547241587E-4	DEFECT
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9997094333482193	WITHOUT_CLASSIFICATION	2.9056665178068115E-4	DEFECT
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998753839837569	WITHOUT_CLASSIFICATION	1.246160162431035E-4	DEFECT
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999444698174802	WITHOUT_CLASSIFICATION	5.553018251976201E-5	DEFECT
update all subclasses	WITHOUT_CLASSIFICATION	0.9999627830628375	WITHOUT_CLASSIFICATION	3.721693716253167E-5	DEFECT
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999708650675924	WITHOUT_CLASSIFICATION	2.913493240759894E-4	DEFECT
static initializing method	WITHOUT_CLASSIFICATION	0.9999828040150857	WITHOUT_CLASSIFICATION	1.719598491426373E-5	DEFECT
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999294156774133	WITHOUT_CLASSIFICATION	7.058432258660217E-5	DEFECT
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999767553868549	WITHOUT_CLASSIFICATION	2.3244613145089835E-5	DEFECT
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999572433356403	WITHOUT_CLASSIFICATION	4.275666435966654E-5	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9998677007380835	WITHOUT_CLASSIFICATION	1.3229926191651373E-4	DEFECT
self method name	WITHOUT_CLASSIFICATION	0.9999727983855593	WITHOUT_CLASSIFICATION	2.7201614440810093E-5	DEFECT
the default allocator	WITHOUT_CLASSIFICATION	0.9999884489508182	WITHOUT_CLASSIFICATION	1.155104918177052E-5	DEFECT
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999255601154898	WITHOUT_CLASSIFICATION	7.443988451017395E-5	DEFECT
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999679417669903	WITHOUT_CLASSIFICATION	3.205823300969085E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9997291095574723	WITHOUT_CLASSIFICATION	2.7089044252773644E-4	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.999808681364735	WITHOUT_CLASSIFICATION	1.913186352650751E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9992158050092592	WITHOUT_CLASSIFICATION	7.841949907408342E-4	DEFECT
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999938421866315	WITHOUT_CLASSIFICATION	6.157813368501944E-6	DEFECT
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999672503982768	WITHOUT_CLASSIFICATION	3.274960172310507E-5	DEFECT
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9973249219400838	WITHOUT_CLASSIFICATION	0.002675078059916194	DEFECT
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999015572639243	WITHOUT_CLASSIFICATION	9.844273607580235E-5	DEFECT
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9997364013940648	WITHOUT_CLASSIFICATION	2.635986059351727E-4	DEFECT
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
a gotcha	WITHOUT_CLASSIFICATION	0.9999748921149094	WITHOUT_CLASSIFICATION	2.5107885090597363E-5	DEFECT
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9995332495785662	WITHOUT_CLASSIFICATION	4.667504214337697E-4	DEFECT
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998709214258074	WITHOUT_CLASSIFICATION	1.2907857419264813E-4	DEFECT
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999309297534426	WITHOUT_CLASSIFICATION	6.90702465573961E-5	DEFECT
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9999158114351618	WITHOUT_CLASSIFICATION	8.418856483820593E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9997291095574723	WITHOUT_CLASSIFICATION	2.7089044252773644E-4	DEFECT
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998043081184943	WITHOUT_CLASSIFICATION	1.9569188150561734E-4	DEFECT
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9981014744420371	WITHOUT_CLASSIFICATION	0.0018985255579628704	DEFECT
MRI behavior:	WITHOUT_CLASSIFICATION	0.9998817630703613	WITHOUT_CLASSIFICATION	1.1823692963875515E-4	DEFECT
Numeric.equal	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
provider is not available	WITHOUT_CLASSIFICATION	0.9982193868748468	WITHOUT_CLASSIFICATION	0.0017806131251531681	DEFECT
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9904511443785725	WITHOUT_CLASSIFICATION	0.009548855621427595	DEFECT
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9998098862116994	WITHOUT_CLASSIFICATION	1.9011378830048947E-4	DEFECT
RubyDigest	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9997947560888067	WITHOUT_CLASSIFICATION	2.0524391119320411E-4	DEFECT
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998136363787715	WITHOUT_CLASSIFICATION	1.8636362122843335E-4	DEFECT
we only add live threads	WITHOUT_CLASSIFICATION	0.9995946948803013	WITHOUT_CLASSIFICATION	4.053051196987994E-4	DEFECT
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9996925742476186	WITHOUT_CLASSIFICATION	3.074257523813713E-4	DEFECT
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999850038955514	WITHOUT_CLASSIFICATION	1.499610444852046E-5	DEFECT
JRubyService	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
while	WITHOUT_CLASSIFICATION	0.9999525779208486	WITHOUT_CLASSIFICATION	4.742207915138232E-5	DEFECT
\OOO	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9999170790635571	WITHOUT_CLASSIFICATION	8.29209364428778E-5	DEFECT
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999576088792045	WITHOUT_CLASSIFICATION	4.239112079549559E-5	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999692049672876	WITHOUT_CLASSIFICATION	3.0795032712407936E-5	DEFECT
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999933811679598	WITHOUT_CLASSIFICATION	6.618832040186208E-5	DEFECT
silent ?	WITHOUT_CLASSIFICATION	0.9999754843282754	WITHOUT_CLASSIFICATION	2.4515671724562402E-5	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9999010107438528	WITHOUT_CLASSIFICATION	9.898925614713605E-5	DEFECT
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9973182737665325	WITHOUT_CLASSIFICATION	0.0026817262334674326	DEFECT
Surrogates	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9997307668495823	WITHOUT_CLASSIFICATION	2.692331504177741E-4	DEFECT
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
\\uHHHH	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
inner switch	WITHOUT_CLASSIFICATION	0.9999173949592698	WITHOUT_CLASSIFICATION	8.260504073024749E-5	DEFECT
newInstance here	WITHOUT_CLASSIFICATION	0.9998494420294388	WITHOUT_CLASSIFICATION	1.5055797056113217E-4	DEFECT
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9983400668824789	WITHOUT_CLASSIFICATION	0.0016599331175210278	DEFECT
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
option_to_str	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9995809814609715	WITHOUT_CLASSIFICATION	4.190185390284877E-4	DEFECT
args should be before block	WITHOUT_CLASSIFICATION	0.9998924235436195	WITHOUT_CLASSIFICATION	1.0757645638043595E-4	DEFECT
args should be at end	WITHOUT_CLASSIFICATION	0.997951512331801	WITHOUT_CLASSIFICATION	0.002048487668198941	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999294060049986	WITHOUT_CLASSIFICATION	7.059399500142745E-5	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999294060049986	WITHOUT_CLASSIFICATION	7.059399500142745E-5	DEFECT
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.997300504959067	WITHOUT_CLASSIFICATION	0.002699495040933052	DEFECT
start a new populator	WITHOUT_CLASSIFICATION	0.9999338500814591	WITHOUT_CLASSIFICATION	6.614991854098029E-5	DEFECT
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999865352629914	WITHOUT_CLASSIFICATION	1.346473700857751E-5	DEFECT
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9994820913513287	WITHOUT_CLASSIFICATION	5.1790864867124E-4	DEFECT
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999742594776186	WITHOUT_CLASSIFICATION	2.574052238141564E-5	DEFECT
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999948744629598	WITHOUT_CLASSIFICATION	5.125537040238549E-6	DEFECT
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998686007676908	WITHOUT_CLASSIFICATION	1.3139923230924813E-4	DEFECT
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999331817933242	WITHOUT_CLASSIFICATION	6.681820667573623E-5	DEFECT
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9995295576188614	WITHOUT_CLASSIFICATION	4.704423811385821E-4	DEFECT
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999025427242315	WITHOUT_CLASSIFICATION	9.745727576840736E-5	DEFECT
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998547559951987	WITHOUT_CLASSIFICATION	1.4524400480126553E-4	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999804910073135	WITHOUT_CLASSIFICATION	1.950899268651274E-5	DEFECT
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9996798686184787	WITHOUT_CLASSIFICATION	3.201313815213382E-4	DEFECT
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9650818583063651	WITHOUT_CLASSIFICATION	0.03491814169363484	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996162601239096	WITHOUT_CLASSIFICATION	3.8373987609040136E-4	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9998657397804245	WITHOUT_CLASSIFICATION	1.3426021957546882E-4	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999628706854772	WITHOUT_CLASSIFICATION	3.7129314522799125E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
colon3	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Colon3	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9990639612197454	WITHOUT_CLASSIFICATION	9.360387802547263E-4	DEFECT
For b.foo	WITHOUT_CLASSIFICATION	0.9999898889113576	WITHOUT_CLASSIFICATION	1.0111088642351551E-5	DEFECT
instance config for the script run	WITHOUT_CLASSIFICATION	0.9999599645998625	WITHOUT_CLASSIFICATION	4.003540013751467E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998797204347968	WITHOUT_CLASSIFICATION	1.2027956520331327E-4	DEFECT
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999522300112818	WITHOUT_CLASSIFICATION	4.7769988718322725E-5	DEFECT
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9992392020227271	WITHOUT_CLASSIFICATION	7.607979772728623E-4	DEFECT
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9998018277825732	WITHOUT_CLASSIFICATION	1.9817221742692432E-4	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999603835525652	WITHOUT_CLASSIFICATION	3.96164474347357E-5	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999603835525652	WITHOUT_CLASSIFICATION	3.96164474347357E-5	DEFECT
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999785290690159	WITHOUT_CLASSIFICATION	2.1470930984166284E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999616702968872	WITHOUT_CLASSIFICATION	3.8329703112686426E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997833470566891	WITHOUT_CLASSIFICATION	2.1665294331077697E-4	DEFECT
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9955857014634562	WITHOUT_CLASSIFICATION	0.004414298536543912	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999628493258093	WITHOUT_CLASSIFICATION	3.715067419077796E-5	DEFECT
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9982590244594347	WITHOUT_CLASSIFICATION	0.0017409755405653293	DEFECT
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999107932580095	WITHOUT_CLASSIFICATION	8.920674199060484E-5	DEFECT
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9960808932801527	WITHOUT_CLASSIFICATION	0.003919106719847404	DEFECT
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999987868014659	WITHOUT_CLASSIFICATION	1.2131985340893377E-5	DEFECT
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999697570278681	WITHOUT_CLASSIFICATION	3.024297213194847E-5	DEFECT
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999486445219165	WITHOUT_CLASSIFICATION	5.1355478083432305E-5	DEFECT
set argv from main's args	WITHOUT_CLASSIFICATION	0.9999554210412133	WITHOUT_CLASSIFICATION	4.4578958786680664E-5	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9998657397804245	WITHOUT_CLASSIFICATION	1.3426021957546882E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999628493258093	WITHOUT_CLASSIFICATION	3.715067419077796E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9956528316978147	WITHOUT_CLASSIFICATION	0.004347168302185316	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9956528316978147	WITHOUT_CLASSIFICATION	0.004347168302185316	DEFECT
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9698252538078009	WITHOUT_CLASSIFICATION	0.030174746192198957	DEFECT
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999807972639195	WITHOUT_CLASSIFICATION	1.9202736080422563E-5	DEFECT
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999401840832156	WITHOUT_CLASSIFICATION	5.981591678454107E-5	DEFECT
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999443035391287	WITHOUT_CLASSIFICATION	5.569646087128641E-5	DEFECT
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999397909465207	WITHOUT_CLASSIFICATION	6.020905347933879E-5	DEFECT
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999475699624503	WITHOUT_CLASSIFICATION	5.2430037549800676E-5	DEFECT
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9978785280006937	WITHOUT_CLASSIFICATION	0.002121471999306401	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9993276937950933	WITHOUT_CLASSIFICATION	6.723062049065928E-4	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999555324180713	WITHOUT_CLASSIFICATION	4.4467581928641274E-5	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999968811889	WITHOUT_CLASSIFICATION	3.1188111001004765E-6	DEFECT
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9984305709882779	WITHOUT_CLASSIFICATION	0.0015694290117220966	DEFECT
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999828382253291	WITHOUT_CLASSIFICATION	1.7161774670917933E-5	DEFECT
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998552083021095	WITHOUT_CLASSIFICATION	1.4479169789056399E-4	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999628706854772	WITHOUT_CLASSIFICATION	3.7129314522799125E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999616702968872	WITHOUT_CLASSIFICATION	3.8329703112686426E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997833470566891	WITHOUT_CLASSIFICATION	2.1665294331077697E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997833470566891	WITHOUT_CLASSIFICATION	2.1665294331077697E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999628493258093	WITHOUT_CLASSIFICATION	3.715067419077796E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999628493258093	WITHOUT_CLASSIFICATION	3.715067419077796E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9956528316978147	WITHOUT_CLASSIFICATION	0.004347168302185316	DEFECT
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999772426575241	WITHOUT_CLASSIFICATION	2.27573424758926E-5	DEFECT
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9996944119141509	WITHOUT_CLASSIFICATION	3.0558808584903456E-4	DEFECT
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999990046867786	WITHOUT_CLASSIFICATION	9.953132213481452E-7	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9995955990856824	WITHOUT_CLASSIFICATION	4.0440091431761746E-4	DEFECT
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999032609713001	WITHOUT_CLASSIFICATION	9.67390286998744E-5	DEFECT
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.991298659325688	WITHOUT_CLASSIFICATION	0.008701340674312004	DEFECT
add in reverse order	WITHOUT_CLASSIFICATION	0.9998522495571077	WITHOUT_CLASSIFICATION	1.4775044289221402E-4	DEFECT
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999324878231941	WITHOUT_CLASSIFICATION	6.751217680594952E-5	DEFECT
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999342658280705	WITHOUT_CLASSIFICATION	6.573417192944111E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999616702968872	WITHOUT_CLASSIFICATION	3.8329703112686426E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997833470566891	WITHOUT_CLASSIFICATION	2.1665294331077697E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997833470566891	WITHOUT_CLASSIFICATION	2.1665294331077697E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9993276937950933	WITHOUT_CLASSIFICATION	6.723062049065928E-4	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999968811889	WITHOUT_CLASSIFICATION	3.1188111001004765E-6	DEFECT
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999391751039582	WITHOUT_CLASSIFICATION	6.0824896041805E-5	DEFECT
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999994406170786	WITHOUT_CLASSIFICATION	5.593829213891218E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999904042984556	WITHOUT_CLASSIFICATION	9.59570154435746E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999904042984556	WITHOUT_CLASSIFICATION	9.59570154435746E-6	DEFECT
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999823495663756	WITHOUT_CLASSIFICATION	1.7650433624402813E-4	DEFECT
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9996446097135337	WITHOUT_CLASSIFICATION	3.553902864662291E-4	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999690512744769	WITHOUT_CLASSIFICATION	3.094872552315198E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999770434202478	WITHOUT_CLASSIFICATION	2.2956579752143023E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999770434202478	WITHOUT_CLASSIFICATION	2.2956579752143023E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999528853173882	WITHOUT_CLASSIFICATION	4.7114682611804344E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999528853173882	WITHOUT_CLASSIFICATION	4.7114682611804344E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999383373512348	WITHOUT_CLASSIFICATION	6.166264876519529E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999383373512348	WITHOUT_CLASSIFICATION	6.166264876519529E-5	DEFECT
Execute rescue block	WITHOUT_CLASSIFICATION	0.999979820770325	WITHOUT_CLASSIFICATION	2.01792296749479E-5	DEFECT
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999294265741744	WITHOUT_CLASSIFICATION	7.05734258255556E-5	DEFECT
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9997711727512524	WITHOUT_CLASSIFICATION	2.288272487475368E-4	DEFECT
only a marker interface	WITHOUT_CLASSIFICATION	0.9998969675713212	WITHOUT_CLASSIFICATION	1.0303242867890226E-4	DEFECT
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999302116926446	WITHOUT_CLASSIFICATION	6.97883073553847E-5	DEFECT
pragmas	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999671763384156	WITHOUT_CLASSIFICATION	3.2823661584331305E-5	DEFECT
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.999980881455384	WITHOUT_CLASSIFICATION	1.9118544616002407E-5	DEFECT
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9997460196935168	WITHOUT_CLASSIFICATION	2.5398030648318904E-4	DEFECT
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9996329700163329	WITHOUT_CLASSIFICATION	3.6702998366708875E-4	DEFECT
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999198687483504	WITHOUT_CLASSIFICATION	8.013125164960001E-5	DEFECT
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999951810573388	WITHOUT_CLASSIFICATION	4.81894266124722E-6	DEFECT
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9986653502588896	WITHOUT_CLASSIFICATION	0.0013346497411104484	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999855095254544	WITHOUT_CLASSIFICATION	1.4490474545610432E-4	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999855095254544	WITHOUT_CLASSIFICATION	1.4490474545610432E-4	DEFECT
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9992872892358784	WITHOUT_CLASSIFICATION	7.127107641216143E-4	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999952126805113	WITHOUT_CLASSIFICATION	4.787319488701114E-5	DEFECT
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9982430160690668	WITHOUT_CLASSIFICATION	0.0017569839309332226	DEFECT
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9998785001072114	WITHOUT_CLASSIFICATION	1.2149989278857534E-4	DEFECT
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999854964394463	WITHOUT_CLASSIFICATION	1.450356055355623E-5	DEFECT
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9997033668255512	WITHOUT_CLASSIFICATION	2.9663317444884223E-4	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9993421210466811	WITHOUT_CLASSIFICATION	6.578789533190133E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998028227669193	WITHOUT_CLASSIFICATION	1.9717723308069592E-4	DEFECT
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999573018855331	WITHOUT_CLASSIFICATION	4.2698114466873605E-5	DEFECT
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9998085056853375	WITHOUT_CLASSIFICATION	1.9149431466236873E-4	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999211952157757	WITHOUT_CLASSIFICATION	7.880478422430331E-5	DEFECT
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9994974762312071	WITHOUT_CLASSIFICATION	5.025237687929267E-4	DEFECT
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9997624383258593	WITHOUT_CLASSIFICATION	2.375616741406773E-4	DEFECT
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9997266306434561	WITHOUT_CLASSIFICATION	2.73369356543865E-4	DEFECT
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.992235841387731	WITHOUT_CLASSIFICATION	0.0077641586122689085	DEFECT
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999966648280556	WITHOUT_CLASSIFICATION	3.335171944389035E-5	DEFECT
can't do it	WITHOUT_CLASSIFICATION	0.9997531755569438	WITHOUT_CLASSIFICATION	2.468244430562591E-4	DEFECT
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9997776280154897	WITHOUT_CLASSIFICATION	2.223719845103346E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998735579881514	WITHOUT_CLASSIFICATION	1.2644201184871235E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998735579881514	WITHOUT_CLASSIFICATION	1.2644201184871235E-4	DEFECT
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999835207868321	WITHOUT_CLASSIFICATION	1.6479213167868915E-5	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
[]	WITHOUT_CLASSIFICATION	0.9999741099168359	WITHOUT_CLASSIFICATION	2.5890083164063978E-5	DEFECT
[]	WITHOUT_CLASSIFICATION	0.9999741099168359	WITHOUT_CLASSIFICATION	2.5890083164063978E-5	DEFECT
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9997998011344543	WITHOUT_CLASSIFICATION	2.0019886554557617E-4	DEFECT
[RubyClass]	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9997998011344543	WITHOUT_CLASSIFICATION	2.0019886554557617E-4	DEFECT
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999686745245765	WITHOUT_CLASSIFICATION	3.1325475423592085E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999415587849213	WITHOUT_CLASSIFICATION	5.844121507868323E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999415587849213	WITHOUT_CLASSIFICATION	5.844121507868323E-5	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999918625285705	WITHOUT_CLASSIFICATION	8.137471429464646E-6	DEFECT
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999686583719777	WITHOUT_CLASSIFICATION	3.1341628022332974E-5	DEFECT
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.999849886295128	WITHOUT_CLASSIFICATION	1.5011370487196188E-4	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
[RubyClass] []	WITHOUT_CLASSIFICATION	0.999877689105086	WITHOUT_CLASSIFICATION	1.2231089491397416E-4	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9991119674553243	WITHOUT_CLASSIFICATION	8.880325446757794E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9992714569420088	WITHOUT_CLASSIFICATION	7.285430579911367E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9992714569420088	WITHOUT_CLASSIFICATION	7.285430579911367E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9992714569420088	WITHOUT_CLASSIFICATION	7.285430579911367E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9991119674553243	WITHOUT_CLASSIFICATION	8.880325446757794E-4	DEFECT
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999508406954146	WITHOUT_CLASSIFICATION	4.915930458543578E-5	DEFECT
always false or nil	WITHOUT_CLASSIFICATION	0.9997626043425459	WITHOUT_CLASSIFICATION	2.3739565745394513E-4	DEFECT
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9991290842550633	WITHOUT_CLASSIFICATION	8.709157449367063E-4	DEFECT
normal	WITHOUT_CLASSIFICATION	0.9999817127116984	WITHOUT_CLASSIFICATION	1.828728830158294E-5	DEFECT
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9998077183684377	WITHOUT_CLASSIFICATION	1.9228163156239639E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9995130050506182	WITHOUT_CLASSIFICATION	4.869949493816761E-4	DEFECT
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999799313643457	WITHOUT_CLASSIFICATION	2.0068635654208664E-5	DEFECT
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9997265383270275	WITHOUT_CLASSIFICATION	2.734616729725284E-4	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999211952157757	WITHOUT_CLASSIFICATION	7.880478422430331E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9985101747532656	WITHOUT_CLASSIFICATION	0.0014898252467343838	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9999041306535426	WITHOUT_CLASSIFICATION	9.586934645736548E-5	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999633241534179	WITHOUT_CLASSIFICATION	3.6675846582087483E-5	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9995484520070639	WITHOUT_CLASSIFICATION	4.515479929361609E-4	DEFECT
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999196457182322	WITHOUT_CLASSIFICATION	8.035428176772746E-5	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9992369872603509	WITHOUT_CLASSIFICATION	7.630127396489673E-4	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999589943971181	WITHOUT_CLASSIFICATION	4.100560288185699E-5	DEFECT
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997278589617901	WITHOUT_CLASSIFICATION	2.721410382098949E-4	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9991504685491569	WITHOUT_CLASSIFICATION	8.495314508432171E-4	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999877651695945	WITHOUT_CLASSIFICATION	1.223483040550002E-4	DEFECT
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998547559951987	WITHOUT_CLASSIFICATION	1.4524400480126553E-4	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999153190872592	WITHOUT_CLASSIFICATION	8.468091274075827E-5	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999973479363872	WITHOUT_CLASSIFICATION	2.6520636127885217E-5	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999503104476445	WITHOUT_CLASSIFICATION	4.968955235545855E-5	DEFECT
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999926888617517	WITHOUT_CLASSIFICATION	7.3111382482555736E-6	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
compile into array	WITHOUT_CLASSIFICATION	0.9996530255301606	WITHOUT_CLASSIFICATION	3.4697446983940556E-4	DEFECT
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999052547095972	WITHOUT_CLASSIFICATION	9.474529040285485E-5	DEFECT
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999510619682415	WITHOUT_CLASSIFICATION	4.893803175858761E-5	DEFECT
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9911796854737606	WITHOUT_CLASSIFICATION	0.0088203145262395	DEFECT
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999622243411252	WITHOUT_CLASSIFICATION	3.777565887480331E-5	DEFECT
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999855781481555	WITHOUT_CLASSIFICATION	1.4421851844562687E-5	DEFECT
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999798699542221	WITHOUT_CLASSIFICATION	2.0130045777889294E-5	DEFECT
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9998171584646753	WITHOUT_CLASSIFICATION	1.8284153532471773E-4	DEFECT
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999657439112039	WITHOUT_CLASSIFICATION	3.425608879618915E-5	DEFECT
leave as a normal array	WITHOUT_CLASSIFICATION	0.9998643804459799	WITHOUT_CLASSIFICATION	1.3561955402018687E-4	DEFECT
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999655664963887	WITHOUT_CLASSIFICATION	3.443350361134537E-5	DEFECT
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9998083228488901	WITHOUT_CLASSIFICATION	1.9167715110998776E-4	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999918625285705	WITHOUT_CLASSIFICATION	8.137471429464646E-6	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997970528973774	WITHOUT_CLASSIFICATION	2.0294710262258798E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9991119674553243	WITHOUT_CLASSIFICATION	8.880325446757794E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9995130050506182	WITHOUT_CLASSIFICATION	4.869949493816761E-4	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9999041306535426	WITHOUT_CLASSIFICATION	9.586934645736548E-5	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9995484520070639	WITHOUT_CLASSIFICATION	4.515479929361609E-4	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9992369872603509	WITHOUT_CLASSIFICATION	7.630127396489673E-4	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999633241534179	WITHOUT_CLASSIFICATION	3.6675846582087483E-5	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999589943971181	WITHOUT_CLASSIFICATION	4.100560288185699E-5	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999877651695945	WITHOUT_CLASSIFICATION	1.223483040550002E-4	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9991504685491569	WITHOUT_CLASSIFICATION	8.495314508432171E-4	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999153190872592	WITHOUT_CLASSIFICATION	8.468091274075827E-5	DEFECT
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999951883959455	WITHOUT_CLASSIFICATION	4.811604054510537E-6	DEFECT
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9963631727654622	WITHOUT_CLASSIFICATION	0.003636827234537821	DEFECT
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999298467094717	WITHOUT_CLASSIFICATION	7.015329052831273E-5	DEFECT
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999488856754383	WITHOUT_CLASSIFICATION	5.111432456178868E-5	DEFECT
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998978635354003	WITHOUT_CLASSIFICATION	1.0213646459958405E-4	DEFECT
Time the compilation	WITHOUT_CLASSIFICATION	0.9999208738939482	WITHOUT_CLASSIFICATION	7.912610605185988E-5	DEFECT
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999620342220743	WITHOUT_CLASSIFICATION	3.7965777925734484E-5	DEFECT
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9997254633190263	WITHOUT_CLASSIFICATION	2.745366809735999E-4	DEFECT
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9993159106812224	WITHOUT_CLASSIFICATION	6.840893187776792E-4	DEFECT
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9992891905059037	WITHOUT_CLASSIFICATION	7.108094940963632E-4	DEFECT
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999308257564165	WITHOUT_CLASSIFICATION	6.91742435835116E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998985983570997	WITHOUT_CLASSIFICATION	1.0140164290030862E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998539662303499	WITHOUT_CLASSIFICATION	1.4603376965007946E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999711353863536	WITHOUT_CLASSIFICATION	2.886461364639179E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999590925233347	WITHOUT_CLASSIFICATION	4.090747666525372E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999277334949794	WITHOUT_CLASSIFICATION	7.226650502057239E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999643456522788	WITHOUT_CLASSIFICATION	3.565434772116879E-5	DEFECT
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999709006265186	WITHOUT_CLASSIFICATION	2.9099373481453755E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999926629556736	WITHOUT_CLASSIFICATION	7.337044326415181E-5	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.999990941528535	WITHOUT_CLASSIFICATION	9.058471465049635E-6	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999962661530805	WITHOUT_CLASSIFICATION	3.7338469196130937E-6	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998981696872373	WITHOUT_CLASSIFICATION	1.0183031276264153E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998981696872373	WITHOUT_CLASSIFICATION	1.0183031276264153E-4	DEFECT
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9998612457296118	WITHOUT_CLASSIFICATION	1.38754270388349E-4	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9992233090175733	WITHOUT_CLASSIFICATION	7.766909824267974E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
arg2	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999765350595766	WITHOUT_CLASSIFICATION	2.346494042336399E-5	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9992233090175733	WITHOUT_CLASSIFICATION	7.766909824267974E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9990290220537115	WITHOUT_CLASSIFICATION	9.709779462885302E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999765350595766	WITHOUT_CLASSIFICATION	2.346494042336399E-5	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9993574798469816	WITHOUT_CLASSIFICATION	6.425201530183973E-4	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9993574798469816	WITHOUT_CLASSIFICATION	6.425201530183973E-4	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999063610023375	WITHOUT_CLASSIFICATION	9.363899766238272E-5	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999063610023375	WITHOUT_CLASSIFICATION	9.363899766238272E-5	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999772018867507	WITHOUT_CLASSIFICATION	2.279811324943988E-5	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999772018867507	WITHOUT_CLASSIFICATION	2.279811324943988E-5	DEFECT
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999919706635774	WITHOUT_CLASSIFICATION	8.029336422640014E-6	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.998978429162394	WITHOUT_CLASSIFICATION	0.0010215708376059666	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.998978429162394	WITHOUT_CLASSIFICATION	0.0010215708376059666	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999327054889227	WITHOUT_CLASSIFICATION	6.729451107739904E-5	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999327054889227	WITHOUT_CLASSIFICATION	6.729451107739904E-5	DEFECT
eval value for assignment	WITHOUT_CLASSIFICATION	0.9998214309695496	WITHOUT_CLASSIFICATION	1.785690304503091E-4	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9998896207442536	WITHOUT_CLASSIFICATION	1.1037925574634242E-4	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9998896207442536	WITHOUT_CLASSIFICATION	1.1037925574634242E-4	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9998975184203769	WITHOUT_CLASSIFICATION	1.024815796230233E-4	DEFECT
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999749287145906	WITHOUT_CLASSIFICATION	2.507128540938907E-4	DEFECT
eval value and save it	WITHOUT_CLASSIFICATION	0.9999055320216931	WITHOUT_CLASSIFICATION	9.446797830682538E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9998975184203769	WITHOUT_CLASSIFICATION	1.024815796230233E-4	DEFECT
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9998468087944943	WITHOUT_CLASSIFICATION	1.531912055057747E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999965007435114	WITHOUT_CLASSIFICATION	3.499256488591914E-6	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999765350595766	WITHOUT_CLASSIFICATION	2.346494042336399E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.999992251640077	WITHOUT_CLASSIFICATION	7.748359923106836E-6	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999910380528273	WITHOUT_CLASSIFICATION	8.961947172570493E-6	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999910380528273	WITHOUT_CLASSIFICATION	8.961947172570493E-6	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999767904310304	WITHOUT_CLASSIFICATION	2.320956896967811E-5	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9998404144207541	WITHOUT_CLASSIFICATION	1.5958557924585285E-4	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9998404144207541	WITHOUT_CLASSIFICATION	1.5958557924585285E-4	DEFECT
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998639837318358	WITHOUT_CLASSIFICATION	1.360162681642006E-4	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999770122120729	WITHOUT_CLASSIFICATION	2.2987787927138826E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999770122120729	WITHOUT_CLASSIFICATION	2.2987787927138826E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999765350595766	WITHOUT_CLASSIFICATION	2.346494042336399E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.999992251640077	WITHOUT_CLASSIFICATION	7.748359923106836E-6	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999910380528273	WITHOUT_CLASSIFICATION	8.961947172570493E-6	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999910380528273	WITHOUT_CLASSIFICATION	8.961947172570493E-6	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999767904310304	WITHOUT_CLASSIFICATION	2.320956896967811E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999770122120729	WITHOUT_CLASSIFICATION	2.2987787927138826E-5	DEFECT
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9997444280925023	WITHOUT_CLASSIFICATION	2.555719074977352E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9999017518952222	WITHOUT_CLASSIFICATION	9.824810477775781E-5	DEFECT
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9988446469283031	WITHOUT_CLASSIFICATION	0.0011553530716968922	DEFECT
add name to call site list	WITHOUT_CLASSIFICATION	0.9995930604444883	WITHOUT_CLASSIFICATION	4.069395555117366E-4	DEFECT
module is on top of stack	WITHOUT_CLASSIFICATION	0.9997307427836711	WITHOUT_CLASSIFICATION	2.6925721632893395E-4	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999842685641407	WITHOUT_CLASSIFICATION	1.5731435859295642E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999742586761621	WITHOUT_CLASSIFICATION	2.5741323837913763E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999742586761621	WITHOUT_CLASSIFICATION	2.5741323837913763E-5	DEFECT
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9966345461609909	WITHOUT_CLASSIFICATION	0.00336545383900916	DEFECT
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9992321922474113	WITHOUT_CLASSIFICATION	7.678077525886322E-4	DEFECT
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9992321922474113	WITHOUT_CLASSIFICATION	7.678077525886322E-4	DEFECT
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9996453375387531	WITHOUT_CLASSIFICATION	3.5466246124690374E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9992342855443659	WITHOUT_CLASSIFICATION	7.657144556341522E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9992342855443659	WITHOUT_CLASSIFICATION	7.657144556341522E-4	DEFECT
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9994959506075398	WITHOUT_CLASSIFICATION	5.040493924600938E-4	DEFECT
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9994959506075398	WITHOUT_CLASSIFICATION	5.040493924600938E-4	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998598944134129	WITHOUT_CLASSIFICATION	1.4010558658711218E-4	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998598944134129	WITHOUT_CLASSIFICATION	1.4010558658711218E-4	DEFECT
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9992321922474113	WITHOUT_CLASSIFICATION	7.678077525886322E-4	DEFECT
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999328696404097	WITHOUT_CLASSIFICATION	6.713035959027267E-5	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9997666212452758	WITHOUT_CLASSIFICATION	2.333787547241587E-4	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.99996416315325	WITHOUT_CLASSIFICATION	3.58368467499665E-5	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995175864651331	WITHOUT_CLASSIFICATION	4.8241353486684765E-4	DEFECT
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999277903462545	WITHOUT_CLASSIFICATION	7.220965374551841E-5	DEFECT
load Object under value	WITHOUT_CLASSIFICATION	0.9997754828618222	WITHOUT_CLASSIFICATION	2.2451713817771578E-4	DEFECT
put under object array already present	WITHOUT_CLASSIFICATION	0.9998946567850789	WITHOUT_CLASSIFICATION	1.0534321492099093E-4	DEFECT
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9990299322037068	WITHOUT_CLASSIFICATION	9.700677962930991E-4	DEFECT
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999835715402137	WITHOUT_CLASSIFICATION	1.6428459786291786E-5	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9993999293626226	WITHOUT_CLASSIFICATION	6.00070637377456E-4	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9993999293626226	WITHOUT_CLASSIFICATION	6.00070637377456E-4	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997965223972506	WITHOUT_CLASSIFICATION	2.0347760274944877E-4	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997965223972506	WITHOUT_CLASSIFICATION	2.0347760274944877E-4	DEFECT
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9993831790432172	WITHOUT_CLASSIFICATION	6.168209567828888E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992995571946689	WITHOUT_CLASSIFICATION	7.004428053310678E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992995571946689	WITHOUT_CLASSIFICATION	7.004428053310678E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992995571946689	WITHOUT_CLASSIFICATION	7.004428053310678E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999753262800761	WITHOUT_CLASSIFICATION	2.467371992387718E-5	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999753262800761	WITHOUT_CLASSIFICATION	2.467371992387718E-5	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9997585872962703	WITHOUT_CLASSIFICATION	2.4141270372956617E-4	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9997172444701301	WITHOUT_CLASSIFICATION	2.827555298699674E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999047762201242	WITHOUT_CLASSIFICATION	9.522377987578887E-5	DEFECT
skip catch block	WITHOUT_CLASSIFICATION	0.999984359585112	WITHOUT_CLASSIFICATION	1.564041488790944E-5	DEFECT
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9997855877346834	WITHOUT_CLASSIFICATION	2.1441226531652998E-4	DEFECT
next jump	WITHOUT_CLASSIFICATION	0.9998820552636385	WITHOUT_CLASSIFICATION	1.1794473636142208E-4	DEFECT
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9945270170087389	WITHOUT_CLASSIFICATION	0.005472982991261029	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998539662303499	WITHOUT_CLASSIFICATION	1.4603376965007946E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998539662303499	WITHOUT_CLASSIFICATION	1.4603376965007946E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9997585872962703	WITHOUT_CLASSIFICATION	2.4141270372956617E-4	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999508802806238	WITHOUT_CLASSIFICATION	4.9119719376040564E-5	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9997172444701301	WITHOUT_CLASSIFICATION	2.827555298699674E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999047762201242	WITHOUT_CLASSIFICATION	9.522377987578887E-5	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9997348473349401	WITHOUT_CLASSIFICATION	2.651526650599066E-4	DEFECT
break jump	WITHOUT_CLASSIFICATION	0.9999786621704314	WITHOUT_CLASSIFICATION	2.1337829568610846E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998876415614122	WITHOUT_CLASSIFICATION	1.1235843858781503E-4	DEFECT
[reg]	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999040127707199	WITHOUT_CLASSIFICATION	9.598722928012203E-5	DEFECT
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999957768018803	WITHOUT_CLASSIFICATION	4.223198119693486E-5	DEFECT
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9997151133235773	WITHOUT_CLASSIFICATION	2.848866764226756E-4	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9997348473349401	WITHOUT_CLASSIFICATION	2.651526650599066E-4	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999613925087524	WITHOUT_CLASSIFICATION	3.860749124753645E-5	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999613925087524	WITHOUT_CLASSIFICATION	3.860749124753645E-5	DEFECT
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9990303270643108	WITHOUT_CLASSIFICATION	9.696729356891945E-4	DEFECT
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999791811036366	WITHOUT_CLASSIFICATION	2.0818896363351893E-5	DEFECT
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9998924651022422	WITHOUT_CLASSIFICATION	1.0753489775771447E-4	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9990673765686107	WITHOUT_CLASSIFICATION	9.326234313893793E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9995645703614386	WITHOUT_CLASSIFICATION	4.3542963856136474E-4	DEFECT
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.999991054995938	WITHOUT_CLASSIFICATION	8.945004061990244E-6	DEFECT
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998549751758694	WITHOUT_CLASSIFICATION	1.4502482413053148E-4	DEFECT
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998876627846509	WITHOUT_CLASSIFICATION	1.1233721534917541E-4	DEFECT
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9998742773049779	WITHOUT_CLASSIFICATION	1.2572269502203777E-4	DEFECT
false zero	WITHOUT_CLASSIFICATION	0.9999779589391973	WITHOUT_CLASSIFICATION	2.204106080264556E-5	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999956344832262	WITHOUT_CLASSIFICATION	4.3655167737862155E-5	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9990673765686107	WITHOUT_CLASSIFICATION	9.326234313893793E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9995645703614386	WITHOUT_CLASSIFICATION	4.3542963856136474E-4	DEFECT
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998900826289168	WITHOUT_CLASSIFICATION	1.0991737108322288E-4	DEFECT
push false	WITHOUT_CLASSIFICATION	0.9999786271703245	WITHOUT_CLASSIFICATION	2.137282967556362E-5	DEFECT
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9998811661644549	WITHOUT_CLASSIFICATION	1.1883383554507118E-4	DEFECT
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
[C]	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
push true	WITHOUT_CLASSIFICATION	0.9999873227272567	WITHOUT_CLASSIFICATION	1.2677272743303E-5	DEFECT
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999056068806078	WITHOUT_CLASSIFICATION	9.439311939223194E-5	DEFECT
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
[boolean]	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9997771774728743	WITHOUT_CLASSIFICATION	2.228225271255587E-4	DEFECT
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999270016539611	WITHOUT_CLASSIFICATION	7.299834603895516E-5	DEFECT
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9996177472997306	WITHOUT_CLASSIFICATION	3.8225270026935777E-4	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9998999593078203	WITHOUT_CLASSIFICATION	1.0004069217966744E-4	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999751245772047	WITHOUT_CLASSIFICATION	2.4875422795252593E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9999210437454183	WITHOUT_CLASSIFICATION	7.895625458161082E-5	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9995379572635827	WITHOUT_CLASSIFICATION	4.6204273641713557E-4	DEFECT
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999690317943518	WITHOUT_CLASSIFICATION	3.096820564811711E-5	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999751245772047	WITHOUT_CLASSIFICATION	2.4875422795252593E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9999210437454183	WITHOUT_CLASSIFICATION	7.895625458161082E-5	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9995379572635827	WITHOUT_CLASSIFICATION	4.6204273641713557E-4	DEFECT
finally with exception	WITHOUT_CLASSIFICATION	0.9998345354007389	WITHOUT_CLASSIFICATION	1.6546459926120854E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9994055724653195	WITHOUT_CLASSIFICATION	5.944275346805367E-4	DEFECT
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9998123036405845	WITHOUT_CLASSIFICATION	1.8769635941545438E-4	DEFECT
original exception is on stack	WITHOUT_CLASSIFICATION	0.9985069635050849	WITHOUT_CLASSIFICATION	0.0014930364949151754	DEFECT
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.999726371543723	WITHOUT_CLASSIFICATION	2.736284562770129E-4	DEFECT
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998302820879142	WITHOUT_CLASSIFICATION	1.697179120857762E-4	DEFECT
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999972251629084	WITHOUT_CLASSIFICATION	2.7748370916074194E-5	DEFECT
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999692193760763	WITHOUT_CLASSIFICATION	3.07806239236338E-5	DEFECT
script object	WITHOUT_CLASSIFICATION	0.9999506592595154	WITHOUT_CLASSIFICATION	4.934074048459952E-5	DEFECT
arities	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9912189556489114	WITHOUT_CLASSIFICATION	0.008781044351088648	DEFECT
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999660541662109	WITHOUT_CLASSIFICATION	3.394583378909579E-4	DEFECT
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9997769189631921	WITHOUT_CLASSIFICATION	2.2308103680796897E-4	DEFECT
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999511218561982	WITHOUT_CLASSIFICATION	4.887814380177751E-5	DEFECT
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9994362118828466	WITHOUT_CLASSIFICATION	5.637881171533676E-4	DEFECT
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998906172745821	WITHOUT_CLASSIFICATION	1.0938272541803604E-4	DEFECT
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9985482949682498	WITHOUT_CLASSIFICATION	0.0014517050317502064	DEFECT
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999302412423479	WITHOUT_CLASSIFICATION	6.975875765217709E-5	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999790935204907	WITHOUT_CLASSIFICATION	2.0906479509273755E-5	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999088772764605	WITHOUT_CLASSIFICATION	9.112272353949256E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9998556660000882	WITHOUT_CLASSIFICATION	1.4433399991172397E-4	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999309628817672	WITHOUT_CLASSIFICATION	6.90371182327926E-5	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999309628817672	WITHOUT_CLASSIFICATION	6.90371182327926E-5	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999802302994992	WITHOUT_CLASSIFICATION	1.9769700500801791E-4	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999802302994992	WITHOUT_CLASSIFICATION	1.9769700500801791E-4	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999793707998343	WITHOUT_CLASSIFICATION	2.0629200165569187E-5	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999793707998343	WITHOUT_CLASSIFICATION	2.0629200165569187E-5	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999823113532964	WITHOUT_CLASSIFICATION	1.7688646703648282E-5	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999954544048858	WITHOUT_CLASSIFICATION	4.545595114156382E-6	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999975272313535	WITHOUT_CLASSIFICATION	2.4727686465041175E-5	DEFECT
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999884691238197	WITHOUT_CLASSIFICATION	1.1530876180390077E-5	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999931790126757	WITHOUT_CLASSIFICATION	6.820987324344412E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999886619923399	WITHOUT_CLASSIFICATION	1.1338007660020639E-5	DEFECT
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999364700600869	WITHOUT_CLASSIFICATION	6.352993991314727E-5	DEFECT
then optional args	WITHOUT_CLASSIFICATION	0.9999553858439144	WITHOUT_CLASSIFICATION	4.461415608564626E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998539662303499	WITHOUT_CLASSIFICATION	1.4603376965007946E-4	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999823113532964	WITHOUT_CLASSIFICATION	1.7688646703648282E-5	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999954544048858	WITHOUT_CLASSIFICATION	4.545595114156382E-6	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999975272313535	WITHOUT_CLASSIFICATION	2.4727686465041175E-5	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999931790126757	WITHOUT_CLASSIFICATION	6.820987324344412E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999886619923399	WITHOUT_CLASSIFICATION	1.1338007660020639E-5	DEFECT
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9998765636041108	WITHOUT_CLASSIFICATION	1.2343639588911228E-4	DEFECT
finally, post args	WITHOUT_CLASSIFICATION	0.9998923431938106	WITHOUT_CLASSIFICATION	1.0765680618938673E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995657393564531	WITHOUT_CLASSIFICATION	4.342606435468958E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995657393564531	WITHOUT_CLASSIFICATION	4.342606435468958E-4	DEFECT
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9997888201317369	WITHOUT_CLASSIFICATION	2.1117986826308578E-4	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999236749720114	WITHOUT_CLASSIFICATION	7.632502798853586E-5	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9988082448240734	WITHOUT_CLASSIFICATION	0.0011917551759265694	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998860286335244	WITHOUT_CLASSIFICATION	1.1397136647555636E-4	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998860286335244	WITHOUT_CLASSIFICATION	1.1397136647555636E-4	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9995307777465311	WITHOUT_CLASSIFICATION	4.6922225346902717E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999907635152282	WITHOUT_CLASSIFICATION	9.236484771852712E-6	DEFECT
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9998715112119982	WITHOUT_CLASSIFICATION	1.284887880016733E-4	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999724901424599	WITHOUT_CLASSIFICATION	2.7509857539983553E-5	DEFECT
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9998552667884334	WITHOUT_CLASSIFICATION	1.447332115665716E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999711353863536	WITHOUT_CLASSIFICATION	2.886461364639179E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999590925233347	WITHOUT_CLASSIFICATION	4.090747666525372E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999277334949794	WITHOUT_CLASSIFICATION	7.226650502057239E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999643456522788	WITHOUT_CLASSIFICATION	3.565434772116879E-5	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.999990941528535	WITHOUT_CLASSIFICATION	9.058471465049635E-6	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999962661530805	WITHOUT_CLASSIFICATION	3.7338469196130937E-6	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9995307777465311	WITHOUT_CLASSIFICATION	4.6922225346902717E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999907635152282	WITHOUT_CLASSIFICATION	9.236484771852712E-6	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999724901424599	WITHOUT_CLASSIFICATION	2.7509857539983553E-5	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9995685299841834	WITHOUT_CLASSIFICATION	4.3147001581652765E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9988082448240734	WITHOUT_CLASSIFICATION	0.0011917551759265694	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9988082448240734	WITHOUT_CLASSIFICATION	0.0011917551759265694	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999956344832262	WITHOUT_CLASSIFICATION	4.3655167737862155E-5	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999956344832262	WITHOUT_CLASSIFICATION	4.3655167737862155E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995788878056597	WITHOUT_CLASSIFICATION	4.211121943401529E-4	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995788878056597	WITHOUT_CLASSIFICATION	4.211121943401529E-4	DEFECT
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999491664537261	WITHOUT_CLASSIFICATION	5.08335462739723E-5	DEFECT
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.999605881635028	WITHOUT_CLASSIFICATION	3.941183649720721E-4	DEFECT
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9998677685439958	WITHOUT_CLASSIFICATION	1.3223145600421636E-4	DEFECT
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999760695070866	WITHOUT_CLASSIFICATION	2.393049291338745E-5	DEFECT
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9998088197738666	WITHOUT_CLASSIFICATION	1.9118022613352737E-4	DEFECT
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999912958698909	WITHOUT_CLASSIFICATION	8.704130109112241E-5	DEFECT
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9986887770181241	WITHOUT_CLASSIFICATION	0.0013112229818758128	DEFECT
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999838672663396	WITHOUT_CLASSIFICATION	1.6132733660445273E-5	DEFECT
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9994258094594339	WITHOUT_CLASSIFICATION	5.741905405661608E-4	DEFECT
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9998985983570997	WITHOUT_CLASSIFICATION	1.0140164290030862E-4	DEFECT
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999257632306622	WITHOUT_CLASSIFICATION	7.423676933772227E-5	DEFECT
verify the class	WITHOUT_CLASSIFICATION	0.9998274840121673	WITHOUT_CLASSIFICATION	1.7251598783274197E-4	DEFECT
create dir if necessary	WITHOUT_CLASSIFICATION	0.9999181167238542	WITHOUT_CLASSIFICATION	8.188327614577701E-5	DEFECT
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.99993638998294	WITHOUT_CLASSIFICATION	6.361001706009702E-5	DEFECT
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999937107917647	WITHOUT_CLASSIFICATION	6.289208235300796E-5	DEFECT
thread context	WITHOUT_CLASSIFICATION	0.9998431563767199	WITHOUT_CLASSIFICATION	1.5684362327995178E-4	DEFECT
line number	WITHOUT_CLASSIFICATION	0.9994276334141174	WITHOUT_CLASSIFICATION	5.723665858825763E-4	DEFECT
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999713397839398	WITHOUT_CLASSIFICATION	2.8660216060110687E-5	DEFECT
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999322190435068	WITHOUT_CLASSIFICATION	6.778095649316838E-5	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999590925233347	WITHOUT_CLASSIFICATION	4.090747666525372E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999643456522788	WITHOUT_CLASSIFICATION	3.565434772116879E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998981696872373	WITHOUT_CLASSIFICATION	1.0183031276264153E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9995685299841834	WITHOUT_CLASSIFICATION	4.3147001581652765E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9988082448240734	WITHOUT_CLASSIFICATION	0.0011917551759265694	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999956344832262	WITHOUT_CLASSIFICATION	4.3655167737862155E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995788878056597	WITHOUT_CLASSIFICATION	4.211121943401529E-4	DEFECT
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9997603835773502	WITHOUT_CLASSIFICATION	2.3961642264973005E-4	DEFECT
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9997529718989019	WITHOUT_CLASSIFICATION	2.4702810109814184E-4	DEFECT
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999775323630612	WITHOUT_CLASSIFICATION	2.2467636938815984E-5	DEFECT
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999778380180199	WITHOUT_CLASSIFICATION	2.2161981980101084E-4	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9982360619965791	WITHOUT_CLASSIFICATION	0.0017639380034208936	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9982360619965791	WITHOUT_CLASSIFICATION	0.0017639380034208936	DEFECT
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9995091127666265	WITHOUT_CLASSIFICATION	4.908872333736332E-4	DEFECT
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999506104852584	WITHOUT_CLASSIFICATION	4.9389514741755036E-5	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999315394880866	WITHOUT_CLASSIFICATION	6.846051191341292E-5	DEFECT
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999516345701127	WITHOUT_CLASSIFICATION	4.836542988730869E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999954075687858	WITHOUT_CLASSIFICATION	4.592431214202348E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999954075687858	WITHOUT_CLASSIFICATION	4.592431214202348E-5	DEFECT
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997404206513515	WITHOUT_CLASSIFICATION	2.5957934864850396E-4	DEFECT
normal closure	WITHOUT_CLASSIFICATION	0.9999178809074546	WITHOUT_CLASSIFICATION	8.211909254535546E-5	DEFECT
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998518704756354	WITHOUT_CLASSIFICATION	1.4812952436472402E-4	DEFECT
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9996779411639863	WITHOUT_CLASSIFICATION	3.220588360136737E-4	DEFECT
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999903202458306	WITHOUT_CLASSIFICATION	9.679754169477817E-6	DEFECT
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999431289663319	WITHOUT_CLASSIFICATION	5.6871033668235034E-5	DEFECT
Ruby name	WITHOUT_CLASSIFICATION	0.9999751714585856	WITHOUT_CLASSIFICATION	2.482854141433119E-5	DEFECT
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9995452189497432	WITHOUT_CLASSIFICATION	4.5478105025673326E-4	DEFECT
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9941534098144501	WITHOUT_CLASSIFICATION	0.005846590185549969	DEFECT
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9995388755622734	WITHOUT_CLASSIFICATION	4.611244377265503E-4	DEFECT
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999098182394532	WITHOUT_CLASSIFICATION	9.018176054678618E-5	DEFECT
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999221910931314	WITHOUT_CLASSIFICATION	7.780890686862497E-5	DEFECT
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999103172943	WITHOUT_CLASSIFICATION	8.968270568785386E-7	DEFECT
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9998466963234476	WITHOUT_CLASSIFICATION	1.533036765523428E-4	DEFECT
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9993006231859912	WITHOUT_CLASSIFICATION	6.993768140088409E-4	DEFECT
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9995458381618247	WITHOUT_CLASSIFICATION	4.5416183817533623E-4	DEFECT
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9998385817003198	WITHOUT_CLASSIFICATION	1.6141829968017204E-4	DEFECT
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9998993671768642	WITHOUT_CLASSIFICATION	1.0063282313568844E-4	DEFECT
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9997619326261905	WITHOUT_CLASSIFICATION	2.3806737380949463E-4	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999826153594662	WITHOUT_CLASSIFICATION	1.7384640533754257E-5	DEFECT
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9991037958093287	WITHOUT_CLASSIFICATION	8.962041906712875E-4	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9998995769389398	WITHOUT_CLASSIFICATION	1.0042306106010735E-4	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9998995769389398	WITHOUT_CLASSIFICATION	1.0042306106010735E-4	DEFECT
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9997803993625731	WITHOUT_CLASSIFICATION	2.1960063742675954E-4	DEFECT
Build the class body!	WITHOUT_CLASSIFICATION	0.999762143736803	WITHOUT_CLASSIFICATION	2.378562631969088E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998028227669193	WITHOUT_CLASSIFICATION	1.9717723308069592E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998028227669193	WITHOUT_CLASSIFICATION	1.9717723308069592E-4	DEFECT
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9407657631349964	WITHOUT_CLASSIFICATION	0.059234236865003724	DEFECT
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9988610206959941	WITHOUT_CLASSIFICATION	0.001138979304005895	DEFECT
done done done done	WITHOUT_CLASSIFICATION	0.9999399518656523	WITHOUT_CLASSIFICATION	6.004813434770742E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997982560480829	WITHOUT_CLASSIFICATION	2.0174395191706278E-4	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997982560480829	WITHOUT_CLASSIFICATION	2.0174395191706278E-4	DEFECT
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9997416766428873	WITHOUT_CLASSIFICATION	2.5832335711268217E-4	DEFECT
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999728986969778	WITHOUT_CLASSIFICATION	2.7101303022208973E-5	DEFECT
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999729549836005	WITHOUT_CLASSIFICATION	2.7045016399403455E-5	DEFECT
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999906304385199	WITHOUT_CLASSIFICATION	9.36956148006781E-6	DEFECT
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9903911216576865	WITHOUT_CLASSIFICATION	0.009608878342313472	DEFECT
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999660815343252	WITHOUT_CLASSIFICATION	3.3918465674858086E-5	DEFECT
the CASE instruction	WITHOUT_CLASSIFICATION	0.9999373328641813	WITHOUT_CLASSIFICATION	6.266713581875846E-5	DEFECT
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999195768536497	WITHOUT_CLASSIFICATION	8.042314635024837E-5	DEFECT
build each "when"	WITHOUT_CLASSIFICATION	0.9999424363387699	WITHOUT_CLASSIFICATION	5.756366122999772E-5	DEFECT
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998175234424882	WITHOUT_CLASSIFICATION	1.824765575117911E-4	DEFECT
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999349138833852	WITHOUT_CLASSIFICATION	6.508611661484212E-5	DEFECT
now emit bodies	WITHOUT_CLASSIFICATION	0.9999742735968257	WITHOUT_CLASSIFICATION	2.5726403174255416E-5	DEFECT
close it out	WITHOUT_CLASSIFICATION	0.9999871487344331	WITHOUT_CLASSIFICATION	1.2851265566887662E-5	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9975960470654895	WITHOUT_CLASSIFICATION	0.0024039529345105132	DEFECT
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999211504834982	WITHOUT_CLASSIFICATION	7.884951650177679E-5	DEFECT
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.999787323714653	WITHOUT_CLASSIFICATION	2.1267628534714E-4	DEFECT
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999992871937862	WITHOUT_CLASSIFICATION	7.128062138010316E-6	DEFECT
Build IR for args	WITHOUT_CLASSIFICATION	0.9998899508372553	WITHOUT_CLASSIFICATION	1.1004916274466585E-4	DEFECT
Build IR for body	WITHOUT_CLASSIFICATION	0.9999186431177243	WITHOUT_CLASSIFICATION	8.13568822757053E-5	DEFECT
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999752659000539	WITHOUT_CLASSIFICATION	2.4734099946186998E-5	DEFECT
Instance method	WITHOUT_CLASSIFICATION	0.9999797883656603	WITHOUT_CLASSIFICATION	2.0211634339780834E-5	DEFECT
Class method	WITHOUT_CLASSIFICATION	0.999974822227172	WITHOUT_CLASSIFICATION	2.517777282789748E-5	DEFECT
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999192806501442	WITHOUT_CLASSIFICATION	8.07193498557477E-5	DEFECT
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9998393624140369	WITHOUT_CLASSIFICATION	1.6063758596313277E-4	DEFECT
Now for the rest	WITHOUT_CLASSIFICATION	0.9999539860188956	WITHOUT_CLASSIFICATION	4.6013981104444636E-5	DEFECT
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9986226501626015	WITHOUT_CLASSIFICATION	0.0013773498373985437	DEFECT
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9772525705426208	WITHOUT_CLASSIFICATION	0.022747429457379183	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.999851102378327	WITHOUT_CLASSIFICATION	1.4889762167306678E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999771446489597	WITHOUT_CLASSIFICATION	2.2855351040277563E-5	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999835884678963	WITHOUT_CLASSIFICATION	1.6411532103678437E-5	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999955603561208	WITHOUT_CLASSIFICATION	4.439643879173781E-6	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9975960470654895	WITHOUT_CLASSIFICATION	0.0024039529345105132	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.999851102378327	WITHOUT_CLASSIFICATION	1.4889762167306678E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999771446489597	WITHOUT_CLASSIFICATION	2.2855351040277563E-5	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999955603561208	WITHOUT_CLASSIFICATION	4.439643879173781E-6	DEFECT
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998825101508391	WITHOUT_CLASSIFICATION	1.1748984916099541E-4	DEFECT
Build the new module	WITHOUT_CLASSIFICATION	0.9999562310088036	WITHOUT_CLASSIFICATION	4.3768991196311164E-5	DEFECT
Build the module body	WITHOUT_CLASSIFICATION	0.9999586011549767	WITHOUT_CLASSIFICATION	4.139884502324218E-5	DEFECT
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999514823484228	WITHOUT_CLASSIFICATION	4.8517651577317956E-5	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999844731289931	WITHOUT_CLASSIFICATION	1.5526871006900502E-5	DEFECT
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9994449230504977	WITHOUT_CLASSIFICATION	5.550769495022091E-4	DEFECT
get attr	WITHOUT_CLASSIFICATION	0.9999826153594662	WITHOUT_CLASSIFICATION	1.7384640533754257E-5	DEFECT
call operator	WITHOUT_CLASSIFICATION	0.9995365149655631	WITHOUT_CLASSIFICATION	4.6348503443691266E-4	DEFECT
set attr	WITHOUT_CLASSIFICATION	0.9999891140083066	WITHOUT_CLASSIFICATION	1.0885991693359833E-5	DEFECT
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9949929761321921	WITHOUT_CLASSIFICATION	0.0050070238678079255	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9982030132201046	WITHOUT_CLASSIFICATION	0.0017969867798953215	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9982030132201046	WITHOUT_CLASSIFICATION	0.0017969867798953215	DEFECT
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9999324084878937	WITHOUT_CLASSIFICATION	6.759151210631926E-5	DEFECT
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999839582383011	WITHOUT_CLASSIFICATION	1.6041761698789936E-5	DEFECT
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999251896188623	WITHOUT_CLASSIFICATION	7.481038113759132E-5	DEFECT
Top-level script!	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9989532206748656	WITHOUT_CLASSIFICATION	0.0010467793251344175	DEFECT
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9999028374883298	WITHOUT_CLASSIFICATION	9.716251167017864E-5	DEFECT
What handles warnings	WITHOUT_CLASSIFICATION	0.9998535301188044	WITHOUT_CLASSIFICATION	1.4646988119563603E-4	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.97207557353521	WITHOUT_CLASSIFICATION	0.027924426464790045	DEFECT
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999767374079979	WITHOUT_CLASSIFICATION	2.326259200212069E-5	DEFECT
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999632571789724	WITHOUT_CLASSIFICATION	3.674282102758006E-5	DEFECT
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998982455926442	WITHOUT_CLASSIFICATION	1.017544073558197E-4	DEFECT
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999682361526405	WITHOUT_CLASSIFICATION	3.176384735949873E-5	DEFECT
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.999843121353815	WITHOUT_CLASSIFICATION	1.5687864618487077E-4	DEFECT
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999524196185743	WITHOUT_CLASSIFICATION	4.75803814257966E-5	DEFECT
alu operations	WITHOUT_CLASSIFICATION	0.9999042264679523	WITHOUT_CLASSIFICATION	9.577353204770611E-5	DEFECT
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9999612902821181	WITHOUT_CLASSIFICATION	3.8709717881809416E-5	DEFECT
closure instructions	WITHOUT_CLASSIFICATION	0.9998921917213952	WITHOUT_CLASSIFICATION	1.0780827860475497E-4	DEFECT
eval instructions	WITHOUT_CLASSIFICATION	0.9997600397817022	WITHOUT_CLASSIFICATION	2.3996021829765838E-4	DEFECT
def instructions	WITHOUT_CLASSIFICATION	0.999886804849184	WITHOUT_CLASSIFICATION	1.1319515081599915E-4	DEFECT
exception instructions	WITHOUT_CLASSIFICATION	0.999853211858134	WITHOUT_CLASSIFICATION	1.467881418659637E-4	DEFECT
Loads	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Stores	WITHOUT_CLASSIFICATION	0.9999749500199924	WITHOUT_CLASSIFICATION	2.5049980007592452E-5	DEFECT
jump and branch operations	WITHOUT_CLASSIFICATION	0.9999458239436723	WITHOUT_CLASSIFICATION	5.417605632768519E-5	DEFECT
others	WITHOUT_CLASSIFICATION	0.9999762772377991	WITHOUT_CLASSIFICATION	2.3722762200854858E-5	DEFECT
a case/when branch	WITHOUT_CLASSIFICATION	0.999887127740493	WITHOUT_CLASSIFICATION	1.1287225950694707E-4	DEFECT
optimization guards	WITHOUT_CLASSIFICATION	0.9998837078782377	WITHOUT_CLASSIFICATION	1.1629212176226892E-4	DEFECT
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.64329871672425	DEFECT	0.3567012832757501	WITHOUT_CLASSIFICATION
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9998757432018376	WITHOUT_CLASSIFICATION	1.2425679816243894E-4	DEFECT
scripts	WITHOUT_CLASSIFICATION	0.9999752564998985	WITHOUT_CLASSIFICATION	2.474350010144693E-5	DEFECT
scripts and modules	WITHOUT_CLASSIFICATION	0.9999402980584916	WITHOUT_CLASSIFICATION	5.970194150834864E-5	DEFECT
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999460313167281	WITHOUT_CLASSIFICATION	5.3968683271789655E-5	DEFECT
methods and closures	WITHOUT_CLASSIFICATION	0.9999348285548426	WITHOUT_CLASSIFICATION	6.517144515734103E-5	DEFECT
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999799930772993	WITHOUT_CLASSIFICATION	2.000692270065258E-5	DEFECT
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999639270896991	WITHOUT_CLASSIFICATION	3.607291030095629E-5	DEFECT
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999382995706697	WITHOUT_CLASSIFICATION	6.170042933026834E-5	DEFECT
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9986792103779166	WITHOUT_CLASSIFICATION	0.0013207896220834312	DEFECT
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9997742286944818	WITHOUT_CLASSIFICATION	2.2577130551821022E-4	DEFECT
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9991333787537913	WITHOUT_CLASSIFICATION	8.666212462087527E-4	DEFECT
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999806508345139	WITHOUT_CLASSIFICATION	1.9349165486067284E-5	DEFECT
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999650699692527	WITHOUT_CLASSIFICATION	3.4930030747241205E-5	DEFECT
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9954036172663714	WITHOUT_CLASSIFICATION	0.004596382733628617	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997497222197502	WITHOUT_CLASSIFICATION	2.502777802497296E-4	DEFECT
Readline	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999313358492475	WITHOUT_CLASSIFICATION	6.866415075246339E-5	DEFECT
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9988618191875748	WITHOUT_CLASSIFICATION	0.0011381808124251872	DEFECT
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9940664153389916	WITHOUT_CLASSIFICATION	0.005933584661008273	DEFECT
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9998070416117912	WITHOUT_CLASSIFICATION	1.9295838820868703E-4	DEFECT
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.99928047511399	WITHOUT_CLASSIFICATION	7.195248860099446E-4	DEFECT
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9997512552154273	WITHOUT_CLASSIFICATION	2.48744784572678E-4	DEFECT
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9998801381128272	WITHOUT_CLASSIFICATION	1.1986188717290432E-4	DEFECT
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9999315655593138	WITHOUT_CLASSIFICATION	6.843444068621922E-5	DEFECT
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999543269185474	WITHOUT_CLASSIFICATION	4.5673081452697236E-5	DEFECT
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9976645871434525	WITHOUT_CLASSIFICATION	0.00233541285654758	DEFECT
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9996523004699455	WITHOUT_CLASSIFICATION	3.4769953005458603E-4	DEFECT
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9958557381871449	WITHOUT_CLASSIFICATION	0.004144261812855071	DEFECT
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.999488199884552	WITHOUT_CLASSIFICATION	5.11800115447941E-4	DEFECT
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998306628361193	WITHOUT_CLASSIFICATION	1.6933716388064726E-4	DEFECT
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9994014962273753	WITHOUT_CLASSIFICATION	5.985037726246716E-4	DEFECT
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.9991146251728862	WITHOUT_CLASSIFICATION	8.853748271137046E-4	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.998297766110673	WITHOUT_CLASSIFICATION	0.0017022338893269745	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.998297766110673	WITHOUT_CLASSIFICATION	0.0017022338893269745	DEFECT
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9994846635000669	WITHOUT_CLASSIFICATION	5.153364999330796E-4	DEFECT
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999120735181749	WITHOUT_CLASSIFICATION	8.792648182514251E-5	DEFECT
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9994935477969266	WITHOUT_CLASSIFICATION	5.0645220307338E-4	DEFECT
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9996852891053538	WITHOUT_CLASSIFICATION	3.147108946462645E-4	DEFECT
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.999848760572049	WITHOUT_CLASSIFICATION	1.5123942795110943E-4	DEFECT
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9995996645104951	WITHOUT_CLASSIFICATION	4.0033548950489927E-4	DEFECT
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9995386832618917	WITHOUT_CLASSIFICATION	4.613167381083393E-4	DEFECT
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999849385266889	WITHOUT_CLASSIFICATION	1.5061473311093163E-5	DEFECT
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999936388429082	WITHOUT_CLASSIFICATION	6.3611570918845706E-6	DEFECT
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9998419674579361	WITHOUT_CLASSIFICATION	1.5803254206383526E-4	DEFECT
class or module	WITHOUT_CLASSIFICATION	0.9997097454134385	WITHOUT_CLASSIFICATION	2.902545865615011E-4	DEFECT
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999176661880527	WITHOUT_CLASSIFICATION	8.233381194731053E-5	DEFECT
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998988838953825	WITHOUT_CLASSIFICATION	1.0111610461745577E-4	DEFECT
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999877630560444	WITHOUT_CLASSIFICATION	1.2236943955605298E-4	DEFECT
IN is the same!	WITHOUT_CLASSIFICATION	0.9998194992988985	WITHOUT_CLASSIFICATION	1.80500701101565E-4	DEFECT
IN changed!	WITHOUT_CLASSIFICATION	0.9998831729240748	WITHOUT_CLASSIFICATION	1.168270759251218E-4	DEFECT
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999262759680135	WITHOUT_CLASSIFICATION	7.372403198647812E-5	DEFECT
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9982981377746301	WITHOUT_CLASSIFICATION	0.0017018622253698753	DEFECT
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999068663017861	WITHOUT_CLASSIFICATION	9.313369821389003E-4	DEFECT
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.999921426440918	WITHOUT_CLASSIFICATION	7.857355908208593E-5	DEFECT
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.9999273734559251	WITHOUT_CLASSIFICATION	7.262654407489419E-5	DEFECT
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9998012258584938	WITHOUT_CLASSIFICATION	1.9877414150622035E-4	DEFECT
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9998135192105571	WITHOUT_CLASSIFICATION	1.8648078944296333E-4	DEFECT
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.999870702530848	WITHOUT_CLASSIFICATION	1.2929746915196698E-4	DEFECT
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9997679915793373	WITHOUT_CLASSIFICATION	2.3200842066277373E-4	DEFECT
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9999473965033696	WITHOUT_CLASSIFICATION	5.26034966303383E-5	DEFECT
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.997919992742554	WITHOUT_CLASSIFICATION	0.0020800072574460185	DEFECT
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999374018122161	WITHOUT_CLASSIFICATION	6.259818778388913E-5	DEFECT
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.999938571886128	WITHOUT_CLASSIFICATION	6.142811387206826E-5	DEFECT
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996147151720628	WITHOUT_CLASSIFICATION	3.8528482793715086E-4	DEFECT
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9997562924352086	WITHOUT_CLASSIFICATION	2.437075647914027E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9998984116760142	WITHOUT_CLASSIFICATION	1.0158832398581221E-4	DEFECT
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999047586968299	WITHOUT_CLASSIFICATION	9.52413031700162E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9998984116760142	WITHOUT_CLASSIFICATION	1.0158832398581221E-4	DEFECT
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9998417916177791	WITHOUT_CLASSIFICATION	1.5820838222099177E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9980778936438621	WITHOUT_CLASSIFICATION	0.0019221063561378612	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9980778936438621	WITHOUT_CLASSIFICATION	0.0019221063561378612	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9980778936438621	WITHOUT_CLASSIFICATION	0.0019221063561378612	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999879663271477	WITHOUT_CLASSIFICATION	1.2033672852303232E-5	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999879663271477	WITHOUT_CLASSIFICATION	1.2033672852303232E-5	DEFECT
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9993300511183617	WITHOUT_CLASSIFICATION	6.699488816382486E-4	DEFECT
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998352616005384	WITHOUT_CLASSIFICATION	1.647383994616771E-4	DEFECT
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9992809508734993	WITHOUT_CLASSIFICATION	7.190491265007254E-4	DEFECT
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9997875786196335	WITHOUT_CLASSIFICATION	2.1242138036652787E-4	DEFECT
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999891927497984	WITHOUT_CLASSIFICATION	1.0807250201683641E-5	DEFECT
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999828760326588	WITHOUT_CLASSIFICATION	1.7123967341240816E-5	DEFECT
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997056839865068	WITHOUT_CLASSIFICATION	2.9431601349312587E-4	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999844714548561	WITHOUT_CLASSIFICATION	1.5528545143889168E-5	DEFECT
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999669329294393	WITHOUT_CLASSIFICATION	3.3067070560747356E-5	DEFECT
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999947178227191	WITHOUT_CLASSIFICATION	5.282177280890087E-5	DEFECT
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999570365255358	WITHOUT_CLASSIFICATION	4.296347446418721E-5	DEFECT
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9993531799243845	WITHOUT_CLASSIFICATION	6.468200756155171E-4	DEFECT
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999791333472327	WITHOUT_CLASSIFICATION	2.086665276742908E-5	DEFECT
root-level logic	WITHOUT_CLASSIFICATION	0.9998936952813322	WITHOUT_CLASSIFICATION	1.0630471866782668E-4	DEFECT
root-level methods	WITHOUT_CLASSIFICATION	0.9999208466140755	WITHOUT_CLASSIFICATION	7.91533859244336E-5	DEFECT
root-level classes	WITHOUT_CLASSIFICATION	0.9999708330214708	WITHOUT_CLASSIFICATION	2.9166978529239996E-5	DEFECT
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9998797753982624	WITHOUT_CLASSIFICATION	1.2022460173757271E-4	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999207040829151	WITHOUT_CLASSIFICATION	7.929591708496878E-5	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999207040829151	WITHOUT_CLASSIFICATION	7.929591708496878E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999252053403029	WITHOUT_CLASSIFICATION	7.479465969702183E-5	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999252053403029	WITHOUT_CLASSIFICATION	7.479465969702183E-5	DEFECT
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9998992258769336	WITHOUT_CLASSIFICATION	1.0077412306633049E-4	DEFECT
Object[] args	WITHOUT_CLASSIFICATION	0.9998899766861106	WITHOUT_CLASSIFICATION	1.1002331388937777E-4	DEFECT
load handle	WITHOUT_CLASSIFICATION	0.9999753375814083	WITHOUT_CLASSIFICATION	2.4662418591718144E-5	DEFECT
args array	WITHOUT_CLASSIFICATION	0.999965076151079	WITHOUT_CLASSIFICATION	3.49238489210869E-5	DEFECT
i'th argument	WITHOUT_CLASSIFICATION	0.9999437635562933	WITHOUT_CLASSIFICATION	5.6236443706712385E-5	DEFECT
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9997720700365502	WITHOUT_CLASSIFICATION	2.2792996344973227E-4	DEFECT
Object arg0	WITHOUT_CLASSIFICATION	0.9998707281826258	WITHOUT_CLASSIFICATION	1.2927181737432044E-4	DEFECT
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999666326550228	WITHOUT_CLASSIFICATION	3.3367344977219447E-5	DEFECT
No editing before startPos	WITHOUT_CLASSIFICATION	0.999964617628554	WITHOUT_CLASSIFICATION	3.538237144597759E-5	DEFECT
no silly ticks!	WITHOUT_CLASSIFICATION	0.9999575058765782	WITHOUT_CLASSIFICATION	4.2494123421873446E-5	DEFECT
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.999957478151693	WITHOUT_CLASSIFICATION	4.252184830703185E-5	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999356617105597	WITHOUT_CLASSIFICATION	6.433828944031497E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.999998823464494	WITHOUT_CLASSIFICATION	1.176535505961317E-6	DEFECT
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999792392908512	WITHOUT_CLASSIFICATION	2.0760709148723275E-5	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999844714548561	WITHOUT_CLASSIFICATION	1.5528545143889168E-5	DEFECT
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999200282259789	WITHOUT_CLASSIFICATION	7.997177402105764E-5	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999922659524139	WITHOUT_CLASSIFICATION	7.7340475861205E-6	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999922659524139	WITHOUT_CLASSIFICATION	7.7340475861205E-6	DEFECT
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9996601903535806	WITHOUT_CLASSIFICATION	3.398096464193877E-4	DEFECT
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9991043747030433	WITHOUT_CLASSIFICATION	8.956252969567376E-4	DEFECT
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9998977374021323	WITHOUT_CLASSIFICATION	1.022625978676976E-4	DEFECT
restore position	WITHOUT_CLASSIFICATION	0.9996732415949316	WITHOUT_CLASSIFICATION	3.26758405068427E-4	DEFECT
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9999642231314035	WITHOUT_CLASSIFICATION	3.577686859639151E-5	DEFECT
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9998601191057536	WITHOUT_CLASSIFICATION	1.398808942464485E-4	DEFECT
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9997205191457447	WITHOUT_CLASSIFICATION	2.794808542552594E-4	DEFECT
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.987395489518331	WITHOUT_CLASSIFICATION	0.012604510481669037	DEFECT
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9991356779813771	WITHOUT_CLASSIFICATION	8.64322018622843E-4	DEFECT
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9993716052847587	WITHOUT_CLASSIFICATION	6.283947152413371E-4	DEFECT
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9996720685733003	WITHOUT_CLASSIFICATION	3.2793142669975095E-4	DEFECT
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9979977509018048	WITHOUT_CLASSIFICATION	0.0020022490981953097	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9963000205299006	WITHOUT_CLASSIFICATION	0.0036999794700993583	DEFECT
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999568250906604	WITHOUT_CLASSIFICATION	4.3174909339659484E-5	DEFECT
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999707007985659	WITHOUT_CLASSIFICATION	2.929920143415483E-5	DEFECT
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9994813619751108	WITHOUT_CLASSIFICATION	5.186380248892343E-4	DEFECT
Timeout module methods	WITHOUT_CLASSIFICATION	0.9999391804455097	WITHOUT_CLASSIFICATION	6.081955449019841E-5	DEFECT
Toplevel defines	WITHOUT_CLASSIFICATION	0.999882524889829	WITHOUT_CLASSIFICATION	1.1747511017103962E-4	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999899895448433	WITHOUT_CLASSIFICATION	1.0010455156621242E-5	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999448890916185	WITHOUT_CLASSIFICATION	5.5110908381482575E-5	DEFECT
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998428956600562	WITHOUT_CLASSIFICATION	1.5710433994388942E-4	DEFECT
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9998152919791758	WITHOUT_CLASSIFICATION	1.8470802082410091E-4	DEFECT
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9998947956353992	WITHOUT_CLASSIFICATION	1.0520436460072147E-4	DEFECT
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9999937395697363	WITHOUT_CLASSIFICATION	6.260430263790951E-6	DEFECT
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.999659398137624	WITHOUT_CLASSIFICATION	3.406018623760182E-4	DEFECT
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9996990968907141	WITHOUT_CLASSIFICATION	3.009031092858643E-4	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9984981718240347	WITHOUT_CLASSIFICATION	0.001501828175965358	DEFECT
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999686727362426	WITHOUT_CLASSIFICATION	3.1327263757362034E-5	DEFECT
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9998309489577283	WITHOUT_CLASSIFICATION	1.690510422717281E-4	DEFECT
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9990294822113409	WITHOUT_CLASSIFICATION	9.705177886590622E-4	DEFECT
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9996189690078193	WITHOUT_CLASSIFICATION	3.810309921806266E-4	DEFECT
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9993706372958928	WITHOUT_CLASSIFICATION	6.293627041071889E-4	DEFECT
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9256937527427701	WITHOUT_CLASSIFICATION	0.07430624725722991	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998259652316135	WITHOUT_CLASSIFICATION	1.7403476838661177E-4	DEFECT
$blah	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9984981718240347	WITHOUT_CLASSIFICATION	0.001501828175965358	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9988896527369046	WITHOUT_CLASSIFICATION	0.0011103472630954049	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998259652316135	WITHOUT_CLASSIFICATION	1.7403476838661177E-4	DEFECT
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9986157343336312	WITHOUT_CLASSIFICATION	0.0013842656663688722	DEFECT
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999761298466323	WITHOUT_CLASSIFICATION	2.3870153367695487E-5	DEFECT
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999421867325633	WITHOUT_CLASSIFICATION	5.781326743673233E-5	DEFECT
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9997704703071936	WITHOUT_CLASSIFICATION	2.2952969280631881E-4	DEFECT
case FLOAT:	WITHOUT_CLASSIFICATION	0.9998992258769336	WITHOUT_CLASSIFICATION	1.0077412306633049E-4	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999117474589269	WITHOUT_CLASSIFICATION	8.82525410731001E-5	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999117474589269	WITHOUT_CLASSIFICATION	8.82525410731001E-5	DEFECT
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999684748032843	WITHOUT_CLASSIFICATION	3.152519671560186E-5	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997276511932764	WITHOUT_CLASSIFICATION	2.7234880672354317E-4	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999342517142448	WITHOUT_CLASSIFICATION	6.574828575520287E-5	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999342517142448	WITHOUT_CLASSIFICATION	6.574828575520287E-5	DEFECT
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999795198950646	WITHOUT_CLASSIFICATION	2.0480104935388836E-5	DEFECT
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998449035389767	WITHOUT_CLASSIFICATION	1.5509646102339122E-4	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9996897174518856	WITHOUT_CLASSIFICATION	3.102825481143659E-4	DEFECT
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9990700844746213	WITHOUT_CLASSIFICATION	9.299155253788014E-4	DEFECT
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9991172975172724	WITHOUT_CLASSIFICATION	8.827024827275763E-4	DEFECT
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998310597452241	WITHOUT_CLASSIFICATION	1.68940254775889E-4	DEFECT
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9995612077299143	WITHOUT_CLASSIFICATION	4.3879227008576384E-4	DEFECT
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999091900666439	WITHOUT_CLASSIFICATION	9.080993335601891E-5	DEFECT
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999417588148383	WITHOUT_CLASSIFICATION	5.824118516163711E-5	DEFECT
host and port given	WITHOUT_CLASSIFICATION	0.9999673906010826	WITHOUT_CLASSIFICATION	3.2609398917438395E-5	DEFECT
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999021103117776	WITHOUT_CLASSIFICATION	9.788968822247186E-5	DEFECT
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9998830432594529	WITHOUT_CLASSIFICATION	1.1695674054706491E-4	DEFECT
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998954900374482	WITHOUT_CLASSIFICATION	1.045099625517519E-4	DEFECT
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9996657618773312	WITHOUT_CLASSIFICATION	3.3423812266875216E-4	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9996605117797842	WITHOUT_CLASSIFICATION	3.3948822021573897E-4	DEFECT
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.999867191353875	WITHOUT_CLASSIFICATION	1.3280864612497887E-4	DEFECT
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9996482190732108	WITHOUT_CLASSIFICATION	3.5178092678915285E-4	DEFECT
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999747849921028	WITHOUT_CLASSIFICATION	2.521500789720525E-4	DEFECT
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999571997659296	WITHOUT_CLASSIFICATION	4.2800234070403126E-5	DEFECT
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9983164322811836	WITHOUT_CLASSIFICATION	0.0016835677188163588	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
255.255.255.255	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
0.0.0.0	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998660795877505	WITHOUT_CLASSIFICATION	1.3392041224945033E-4	DEFECT
line 323	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9985091102821344	WITHOUT_CLASSIFICATION	0.0014908897178655706	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9985091102821344	WITHOUT_CLASSIFICATION	0.0014908897178655706	DEFECT
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999372539633542	WITHOUT_CLASSIFICATION	6.274603664574351E-5	DEFECT
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999375875741886	WITHOUT_CLASSIFICATION	6.241242581142228E-5	DEFECT
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999176661880527	WITHOUT_CLASSIFICATION	8.233381194731053E-5	DEFECT
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9998549740549432	WITHOUT_CLASSIFICATION	1.4502594505676525E-4	DEFECT
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999845830547941	WITHOUT_CLASSIFICATION	1.5416945205902455E-4	DEFECT
RubySocket	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.999896579332462	WITHOUT_CLASSIFICATION	1.0342066753800771E-4	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998822695552487	WITHOUT_CLASSIFICATION	1.1773044475132794E-4	DEFECT
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9994889397471436	WITHOUT_CLASSIFICATION	5.110602528564063E-4	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998749938016	WITHOUT_CLASSIFICATION	1.250061983264591E-7	DEFECT
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.99999808337064	WITHOUT_CLASSIFICATION	1.916629360053273E-6	DEFECT
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999914128835496	WITHOUT_CLASSIFICATION	8.587116450363181E-6	DEFECT
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9983043138612261	WITHOUT_CLASSIFICATION	0.001695686138773924	DEFECT
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999034349805874	WITHOUT_CLASSIFICATION	9.656501941266326E-5	DEFECT
Call the thread's code	WITHOUT_CLASSIFICATION	0.9999311435741427	WITHOUT_CLASSIFICATION	6.88564258572034E-5	DEFECT
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999951816725114	WITHOUT_CLASSIFICATION	4.818327488549471E-6	DEFECT
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9993409082367691	WITHOUT_CLASSIFICATION	6.590917632309088E-4	DEFECT
be dead	WITHOUT_CLASSIFICATION	0.9999254265212806	WITHOUT_CLASSIFICATION	7.457347871935781E-5	DEFECT
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.997969675704276	WITHOUT_CLASSIFICATION	0.0020303242957239753	DEFECT
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999697596783208	WITHOUT_CLASSIFICATION	3.0240321679191373E-5	DEFECT
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9996100803731557	WITHOUT_CLASSIFICATION	3.8991962684429963E-4	DEFECT
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9998522477347899	WITHOUT_CLASSIFICATION	1.477522652100862E-4	DEFECT
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999575112918085	WITHOUT_CLASSIFICATION	4.248870819136526E-5	DEFECT
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999853610732122	WITHOUT_CLASSIFICATION	1.4638926787674263E-5	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9986005873296341	WITHOUT_CLASSIFICATION	0.0013994126703659549	DEFECT
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9964591552541014	WITHOUT_CLASSIFICATION	0.003540844745898565	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999988489219357	WITHOUT_CLASSIFICATION	1.1510780642964665E-5	DEFECT
main body	WITHOUT_CLASSIFICATION	0.9999878944576595	WITHOUT_CLASSIFICATION	1.2105542340645253E-5	DEFECT
return jump handling	WITHOUT_CLASSIFICATION	0.9999785664060911	WITHOUT_CLASSIFICATION	2.1433593908945423E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.9999766011059894	WITHOUT_CLASSIFICATION	2.3398894010672992E-5	DEFECT
return result if we're still good	WITHOUT_CLASSIFICATION	0.9997400106961665	WITHOUT_CLASSIFICATION	2.5998930383344676E-4	DEFECT
redo jump handling	WITHOUT_CLASSIFICATION	0.9999340748294359	WITHOUT_CLASSIFICATION	6.592517056415391E-5	DEFECT
clear the redo	WITHOUT_CLASSIFICATION	0.9999369327519001	WITHOUT_CLASSIFICATION	6.306724809989151E-5	DEFECT
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998418205074412	WITHOUT_CLASSIFICATION	1.5817949255889538E-4	DEFECT
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9983705873209339	WITHOUT_CLASSIFICATION	0.0016294126790661215	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998818621337924	WITHOUT_CLASSIFICATION	1.1813786620756496E-4	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999015981940592	WITHOUT_CLASSIFICATION	9.840180594083904E-5	DEFECT
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999403417793935	WITHOUT_CLASSIFICATION	5.965822060646452E-5	DEFECT
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9986266556891142	WITHOUT_CLASSIFICATION	0.0013733443108857083	DEFECT
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9899289772731652	WITHOUT_CLASSIFICATION	0.01007102272683485	DEFECT
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999818295914212	WITHOUT_CLASSIFICATION	1.8170408578723182E-5	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9978353035957298	WITHOUT_CLASSIFICATION	0.0021646964042702143	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9978353035957298	WITHOUT_CLASSIFICATION	0.0021646964042702143	DEFECT
normal all-rest method	WITHOUT_CLASSIFICATION	0.9999813663849121	WITHOUT_CLASSIFICATION	1.863361508788714E-5	DEFECT
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999509990854525	WITHOUT_CLASSIFICATION	4.9000914547486954E-5	DEFECT
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999348572283075	WITHOUT_CLASSIFICATION	6.514277169247951E-5	DEFECT
return	WITHOUT_CLASSIFICATION	0.999991832939167	WITHOUT_CLASSIFICATION	8.167060832985086E-6	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999790935204907	WITHOUT_CLASSIFICATION	2.0906479509273755E-5	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999088772764605	WITHOUT_CLASSIFICATION	9.112272353949256E-5	DEFECT
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999387342987266	WITHOUT_CLASSIFICATION	6.126570127345999E-5	DEFECT
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9974249320516101	WITHOUT_CLASSIFICATION	0.002575067948389807	DEFECT
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9977780991171319	WITHOUT_CLASSIFICATION	0.0022219008828681434	DEFECT
tc	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
self name	WITHOUT_CLASSIFICATION	0.9999752297288226	WITHOUT_CLASSIFICATION	2.4770271177334638E-5	DEFECT
no args	WITHOUT_CLASSIFICATION	0.9999915930571384	WITHOUT_CLASSIFICATION	8.406942861670924E-6	DEFECT
variable args with block	WITHOUT_CLASSIFICATION	0.999985726358179	WITHOUT_CLASSIFICATION	1.42736418209636E-5	DEFECT
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999935262218906	WITHOUT_CLASSIFICATION	6.473778109327679E-6	DEFECT
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999557067456366	WITHOUT_CLASSIFICATION	4.429325436348999E-5	DEFECT
one arg with block	WITHOUT_CLASSIFICATION	0.9999897297320622	WITHOUT_CLASSIFICATION	1.0270267937730229E-5	DEFECT
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999791530007409	WITHOUT_CLASSIFICATION	2.0846999259089743E-5	DEFECT
two args with block	WITHOUT_CLASSIFICATION	0.9999400861219363	WITHOUT_CLASSIFICATION	5.991387806369299E-5	DEFECT
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998812393335571	WITHOUT_CLASSIFICATION	1.1876066644300633E-4	DEFECT
three args with block	WITHOUT_CLASSIFICATION	0.9999766371103214	WITHOUT_CLASSIFICATION	2.336288967871366E-5	DEFECT
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999500882498908	WITHOUT_CLASSIFICATION	4.99117501091397E-5	DEFECT
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999879239703702	WITHOUT_CLASSIFICATION	1.207602962981289E-5	DEFECT
all other arg cases with block	WITHOUT_CLASSIFICATION	0.99999590071607	WITHOUT_CLASSIFICATION	4.099283930022729E-6	DEFECT
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999821464103409	WITHOUT_CLASSIFICATION	1.7853589659052946E-5	DEFECT
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999959598376117	WITHOUT_CLASSIFICATION	4.040162388388198E-6	DEFECT
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999769822864674	WITHOUT_CLASSIFICATION	2.3017713532601073E-5	DEFECT
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999829347619185	WITHOUT_CLASSIFICATION	1.7065238081537436E-5	DEFECT
load target for invocations	WITHOUT_CLASSIFICATION	0.9999803486484763	WITHOUT_CLASSIFICATION	1.96513515236393E-5	DEFECT
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999346536185475	WITHOUT_CLASSIFICATION	6.534638145242868E-5	DEFECT
static invocation	WITHOUT_CLASSIFICATION	0.9999204963157942	WITHOUT_CLASSIFICATION	7.950368420584151E-5	DEFECT
virtual invocation	WITHOUT_CLASSIFICATION	0.999888409056319	WITHOUT_CLASSIFICATION	1.115909436809946E-4	DEFECT
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999938168224631	WITHOUT_CLASSIFICATION	6.183177536924431E-6	DEFECT
normal finally and exit	WITHOUT_CLASSIFICATION	0.999943834573362	WITHOUT_CLASSIFICATION	5.6165426637873E-5	DEFECT
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999694364431922	WITHOUT_CLASSIFICATION	3.056355680775626E-5	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999015981940592	WITHOUT_CLASSIFICATION	9.840180594083904E-5	DEFECT
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9995493732619172	WITHOUT_CLASSIFICATION	4.506267380828399E-4	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999675425646181	WITHOUT_CLASSIFICATION	3.245743538188701E-5	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999675425646181	WITHOUT_CLASSIFICATION	3.245743538188701E-5	DEFECT
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999589531402728	WITHOUT_CLASSIFICATION	4.104685972713845E-5	DEFECT
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9995602037578089	WITHOUT_CLASSIFICATION	4.3979624219117207E-4	DEFECT
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
never reached	WITHOUT_CLASSIFICATION	0.9994475026528467	WITHOUT_CLASSIFICATION	5.524973471534252E-4	DEFECT
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999745114263014	WITHOUT_CLASSIFICATION	2.548857369856157E-5	DEFECT
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999757014647365	WITHOUT_CLASSIFICATION	2.4298535263465733E-5	DEFECT
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999885999084552	WITHOUT_CLASSIFICATION	1.1400091544694679E-5	DEFECT
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999348477031981	WITHOUT_CLASSIFICATION	6.51522968019039E-5	DEFECT
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999738975661671	WITHOUT_CLASSIFICATION	2.6102433832960965E-5	DEFECT
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.999987753565515	WITHOUT_CLASSIFICATION	1.2246434485009856E-5	DEFECT
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999300110751589	WITHOUT_CLASSIFICATION	6.998892484116305E-5	DEFECT
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999726191829068	WITHOUT_CLASSIFICATION	2.73808170932643E-5	DEFECT
promise to implement N	WITHOUT_CLASSIFICATION	0.9999316669503854	WITHOUT_CLASSIFICATION	6.83330496146195E-5	DEFECT
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999958893198936	WITHOUT_CLASSIFICATION	4.110680106364076E-6	DEFECT
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9999059132529066	WITHOUT_CLASSIFICATION	9.40867470935293E-5	DEFECT
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9998253429804348	WITHOUT_CLASSIFICATION	1.746570195651158E-4	DEFECT
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9998705049263038	WITHOUT_CLASSIFICATION	1.2949507369618108E-4	DEFECT
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9998765503345995	WITHOUT_CLASSIFICATION	1.2344966540037315E-4	DEFECT
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999420783372739	WITHOUT_CLASSIFICATION	5.79216627260192E-5	DEFECT
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9996690463631774	WITHOUT_CLASSIFICATION	3.309536368225622E-4	DEFECT
promise to implement three	WITHOUT_CLASSIFICATION	0.9999265942141867	WITHOUT_CLASSIFICATION	7.340578581334749E-5	DEFECT
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999142869663554	WITHOUT_CLASSIFICATION	8.571303364457805E-5	DEFECT
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999479867044114	WITHOUT_CLASSIFICATION	5.201329558857184E-5	DEFECT
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999150919661692	WITHOUT_CLASSIFICATION	8.49080338307383E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.99993710539814	WITHOUT_CLASSIFICATION	6.289460186003562E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9998034768913401	WITHOUT_CLASSIFICATION	1.9652310865994382E-4	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999694681526433	WITHOUT_CLASSIFICATION	3.0531847356721244E-5	DEFECT
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998846952205389	WITHOUT_CLASSIFICATION	1.1530477946112907E-4	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999277643495372	WITHOUT_CLASSIFICATION	7.223565046278569E-5	DEFECT
start setup method	WITHOUT_CLASSIFICATION	0.9999759521538089	WITHOUT_CLASSIFICATION	2.4047846191115942E-5	DEFECT
set RubyClass	WITHOUT_CLASSIFICATION	0.9999485691187266	WITHOUT_CLASSIFICATION	5.1430881273298376E-5	DEFECT
set Ruby	WITHOUT_CLASSIFICATION	0.9999891140083066	WITHOUT_CLASSIFICATION	1.0885991693359833E-5	DEFECT
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999166740087408	WITHOUT_CLASSIFICATION	8.332599125912431E-5	DEFECT
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999920003259225	WITHOUT_CLASSIFICATION	7.999674077498298E-5	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999273239733039	WITHOUT_CLASSIFICATION	7.267602669610199E-5	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999580726306102	WITHOUT_CLASSIFICATION	4.1927369389803285E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.99993710539814	WITHOUT_CLASSIFICATION	6.289460186003562E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9998034768913401	WITHOUT_CLASSIFICATION	1.9652310865994382E-4	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999694681526433	WITHOUT_CLASSIFICATION	3.0531847356721244E-5	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999277643495372	WITHOUT_CLASSIFICATION	7.223565046278569E-5	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998779158405643	WITHOUT_CLASSIFICATION	1.220841594356813E-4	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997638558041237	WITHOUT_CLASSIFICATION	2.3614419587633583E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999466876020642	WITHOUT_CLASSIFICATION	5.331239793591813E-5	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999815933142947	WITHOUT_CLASSIFICATION	1.8406685705289244E-5	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999749641171791	WITHOUT_CLASSIFICATION	2.50358828209555E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999499824065236	WITHOUT_CLASSIFICATION	5.0017593476441147E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9999555089525427	WITHOUT_CLASSIFICATION	4.4491047457211444E-5	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9998645110073073	WITHOUT_CLASSIFICATION	1.354889926926457E-4	DEFECT
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999480255715871	WITHOUT_CLASSIFICATION	5.1974428412925816E-5	DEFECT
store the wrapper	WITHOUT_CLASSIFICATION	0.9999670305713204	WITHOUT_CLASSIFICATION	3.296942867967228E-5	DEFECT
prepare temp locals	WITHOUT_CLASSIFICATION	0.9998946468460543	WITHOUT_CLASSIFICATION	1.0535315394566163E-4	DEFECT
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999846462027508	WITHOUT_CLASSIFICATION	1.535379724923088E-5	DEFECT
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999762306929985	WITHOUT_CLASSIFICATION	2.376930700149953E-4	DEFECT
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999763833129988	WITHOUT_CLASSIFICATION	2.361668700118941E-5	DEFECT
store it	WITHOUT_CLASSIFICATION	0.9999843194606816	WITHOUT_CLASSIFICATION	1.568053931843744E-5	DEFECT
end of try block	WITHOUT_CLASSIFICATION	0.9999928819054186	WITHOUT_CLASSIFICATION	7.1180945814364695E-6	DEFECT
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999723544904646	WITHOUT_CLASSIFICATION	2.7645509535412473E-5	DEFECT
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998261035805655	WITHOUT_CLASSIFICATION	1.7389641943449426E-4	DEFECT
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999383018486027	WITHOUT_CLASSIFICATION	6.169815139730902E-4	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999580726306102	WITHOUT_CLASSIFICATION	4.1927369389803285E-5	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997638558041237	WITHOUT_CLASSIFICATION	2.3614419587633583E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999466876020642	WITHOUT_CLASSIFICATION	5.331239793591813E-5	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999749641171791	WITHOUT_CLASSIFICATION	2.50358828209555E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999499824065236	WITHOUT_CLASSIFICATION	5.0017593476441147E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9999555089525427	WITHOUT_CLASSIFICATION	4.4491047457211444E-5	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9998645110073073	WITHOUT_CLASSIFICATION	1.354889926926457E-4	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9998173942512744	WITHOUT_CLASSIFICATION	1.8260574872567214E-4	DEFECT
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9969582246920257	WITHOUT_CLASSIFICATION	0.0030417753079743353	DEFECT
perform the dispatch	WITHOUT_CLASSIFICATION	0.9999215343816913	WITHOUT_CLASSIFICATION	7.84656183086687E-5	DEFECT
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999509918840206	WITHOUT_CLASSIFICATION	4.900811597941095E-5	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9992652092113564	WITHOUT_CLASSIFICATION	7.347907886435835E-4	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9992652092113564	WITHOUT_CLASSIFICATION	7.347907886435835E-4	DEFECT
setup the class	WITHOUT_CLASSIFICATION	0.9997414212372945	WITHOUT_CLASSIFICATION	2.5857876270544473E-4	DEFECT
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999495307087274	WITHOUT_CLASSIFICATION	5.046929127272264E-5	DEFECT
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999790768543408	WITHOUT_CLASSIFICATION	2.0923145659239467E-5	DEFECT
probably a primitive	WITHOUT_CLASSIFICATION	0.9999064262077612	WITHOUT_CLASSIFICATION	9.357379223877149E-5	DEFECT
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999968360108389	WITHOUT_CLASSIFICATION	3.163989161042672E-6	DEFECT
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999152861031034	WITHOUT_CLASSIFICATION	8.471389689656712E-5	DEFECT
set the full name	WITHOUT_CLASSIFICATION	0.9999727731031814	WITHOUT_CLASSIFICATION	2.7226896818593448E-5	DEFECT
include all interfaces	WITHOUT_CLASSIFICATION	0.9999450875085524	WITHOUT_CLASSIFICATION	5.491249144768463E-5	DEFECT
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9998132612520602	WITHOUT_CLASSIFICATION	1.8673874793983836E-4	DEFECT
add array construction methods	WITHOUT_CLASSIFICATION	0.9998151665670557	WITHOUT_CLASSIFICATION	1.8483343294434953E-4	DEFECT
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9997241869883019	WITHOUT_CLASSIFICATION	2.758130116980725E-4	DEFECT
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999665234874118	WITHOUT_CLASSIFICATION	3.347651258822711E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999424026315111	WITHOUT_CLASSIFICATION	5.7597368488907896E-5	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9997588709746044	WITHOUT_CLASSIFICATION	2.4112902539567764E-4	DEFECT
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998436768691532	WITHOUT_CLASSIFICATION	1.5632313084683975E-4	DEFECT
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999100207147525	WITHOUT_CLASSIFICATION	8.997928524749343E-5	DEFECT
add all static variables	WITHOUT_CLASSIFICATION	0.9999521145686451	WITHOUT_CLASSIFICATION	4.7885431354922586E-5	DEFECT
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999555739688617	WITHOUT_CLASSIFICATION	4.442603113836446E-5	DEFECT
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9996115375760722	WITHOUT_CLASSIFICATION	3.8846242392766804E-4	DEFECT
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999967450683968	WITHOUT_CLASSIFICATION	3.2549316032837085E-6	DEFECT
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9843022735337945	WITHOUT_CLASSIFICATION	0.015697726466205583	DEFECT
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9998393486720586	WITHOUT_CLASSIFICATION	1.6065132794145377E-4	DEFECT
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999037056619318	WITHOUT_CLASSIFICATION	9.629433806824717E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999926925008371	WITHOUT_CLASSIFICATION	7.307499162786259E-6	DEFECT
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999362027936803	WITHOUT_CLASSIFICATION	6.379720631972064E-5	DEFECT
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9994526343763558	WITHOUT_CLASSIFICATION	5.473656236442789E-4	DEFECT
line 326	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999926925008371	WITHOUT_CLASSIFICATION	7.307499162786259E-6	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9997588709746044	WITHOUT_CLASSIFICATION	2.4112902539567764E-4	DEFECT
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.999861512040344	WITHOUT_CLASSIFICATION	1.3848795965585526E-4	DEFECT
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9998915382414671	WITHOUT_CLASSIFICATION	1.0846175853286767E-4	DEFECT
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999449596722709	WITHOUT_CLASSIFICATION	5.504032772922306E-5	DEFECT
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9984786371054123	WITHOUT_CLASSIFICATION	0.001521362894587771	DEFECT
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999772699867773	WITHOUT_CLASSIFICATION	2.273001322279315E-5	DEFECT
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999857456889226	WITHOUT_CLASSIFICATION	1.4254311077395759E-5	DEFECT
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998295912762667	WITHOUT_CLASSIFICATION	1.7040872373331068E-4	DEFECT
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999775667819061	WITHOUT_CLASSIFICATION	2.243321809393872E-5	DEFECT
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9480581642066389	WITHOUT_CLASSIFICATION	0.05194183579336098	DEFECT
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9978677171710449	WITHOUT_CLASSIFICATION	0.002132282828955018	DEFECT
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9993076252503377	WITHOUT_CLASSIFICATION	6.923747496624117E-4	DEFECT
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999593560032572	WITHOUT_CLASSIFICATION	4.064399674271687E-5	DEFECT
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9992630655231174	WITHOUT_CLASSIFICATION	7.369344768827209E-4	DEFECT
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999753886506445	WITHOUT_CLASSIFICATION	2.461134935548788E-5	DEFECT
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998802634704508	WITHOUT_CLASSIFICATION	1.1973652954927901E-4	DEFECT
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9997424054298665	WITHOUT_CLASSIFICATION	2.575945701334443E-4	DEFECT
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9997137742100151	WITHOUT_CLASSIFICATION	2.8622578998496306E-4	DEFECT
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9981180029907382	WITHOUT_CLASSIFICATION	0.0018819970092617733	DEFECT
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999699062194	WITHOUT_CLASSIFICATION	3.0093780648112184E-8	DEFECT
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999161822263715	WITHOUT_CLASSIFICATION	8.381777362856796E-5	DEFECT
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999881580583316	WITHOUT_CLASSIFICATION	1.1841941668361825E-5	DEFECT
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9998649707140299	WITHOUT_CLASSIFICATION	1.3502928597018335E-4	DEFECT
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9995058745485491	WITHOUT_CLASSIFICATION	4.94125451450977E-4	DEFECT
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9999365447264753	WITHOUT_CLASSIFICATION	6.345527352472284E-5	DEFECT
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999924985912614	WITHOUT_CLASSIFICATION	7.501408738680066E-6	DEFECT
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9993641405622002	WITHOUT_CLASSIFICATION	6.358594377997543E-4	DEFECT
array creation should use this variant	WITHOUT_CLASSIFICATION	0.99533247190441	WITHOUT_CLASSIFICATION	0.004667528095590029	DEFECT
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9998894761134429	WITHOUT_CLASSIFICATION	1.105238865570721E-4	DEFECT
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999344443906734	WITHOUT_CLASSIFICATION	6.55556093266823E-5	DEFECT
add reference to interface module	WITHOUT_CLASSIFICATION	0.9999329577578101	WITHOUT_CLASSIFICATION	6.704224218980795E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999424026315111	WITHOUT_CLASSIFICATION	5.7597368488907896E-5	DEFECT
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.99994338146785	WITHOUT_CLASSIFICATION	5.6618532150048696E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9981493226360978	WITHOUT_CLASSIFICATION	0.0018506773639021994	DEFECT
weakly reserved names	WITHOUT_CLASSIFICATION	0.9999316093343925	WITHOUT_CLASSIFICATION	6.839066560745002E-5	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9993472996984357	WITHOUT_CLASSIFICATION	6.527003015642731E-4	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9993472996984357	WITHOUT_CLASSIFICATION	6.527003015642731E-4	DEFECT
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9994695515714231	WITHOUT_CLASSIFICATION	5.304484285768077E-4	DEFECT
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999736181265758	WITHOUT_CLASSIFICATION	2.6381873424101728E-5	DEFECT
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999546630763234	WITHOUT_CLASSIFICATION	4.5336923676476886E-5	DEFECT
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999941878693803	WITHOUT_CLASSIFICATION	5.812130619703058E-5	DEFECT
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9997654764276023	WITHOUT_CLASSIFICATION	2.3452357239784661E-4	DEFECT
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9997148972036884	WITHOUT_CLASSIFICATION	2.8510279631153664E-4	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9992883743853695	WITHOUT_CLASSIFICATION	7.116256146303293E-4	DEFECT
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999811403985437	WITHOUT_CLASSIFICATION	1.8859601456282626E-5	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998277829772733	WITHOUT_CLASSIFICATION	1.7221702272686405E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999197193888782	WITHOUT_CLASSIFICATION	8.028061112176746E-5	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998460459994245	WITHOUT_CLASSIFICATION	1.539540005754934E-4	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999066218333815	WITHOUT_CLASSIFICATION	9.33781666184901E-5	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9998352741832479	WITHOUT_CLASSIFICATION	1.6472581675215338E-4	DEFECT
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999058609985372	WITHOUT_CLASSIFICATION	9.413900146293096E-5	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
something?	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999927197784637	WITHOUT_CLASSIFICATION	7.280221536338069E-6	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999927197784637	WITHOUT_CLASSIFICATION	7.280221536338069E-6	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999837209652238	WITHOUT_CLASSIFICATION	1.6279034776211214E-4	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999837209652238	WITHOUT_CLASSIFICATION	1.6279034776211214E-4	DEFECT
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999971860873549	WITHOUT_CLASSIFICATION	2.813912645105017E-5	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9975392924051526	WITHOUT_CLASSIFICATION	0.0024607075948472707	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999289869120314	WITHOUT_CLASSIFICATION	7.101308796858842E-5	DEFECT
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999986176822555	WITHOUT_CLASSIFICATION	1.3823177445385117E-6	DEFECT
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9995634391044285	WITHOUT_CLASSIFICATION	4.365608955716011E-4	DEFECT
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9998437549427447	WITHOUT_CLASSIFICATION	1.5624505725524458E-4	DEFECT
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999895750363971	WITHOUT_CLASSIFICATION	1.0424963602985647E-5	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999066218333815	WITHOUT_CLASSIFICATION	9.33781666184901E-5	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9998352741832479	WITHOUT_CLASSIFICATION	1.6472581675215338E-4	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9995517553036306	WITHOUT_CLASSIFICATION	4.4824469636931403E-4	DEFECT
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998608706083442	WITHOUT_CLASSIFICATION	1.3912939165579513E-4	DEFECT
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.999043403304604	WITHOUT_CLASSIFICATION	9.565966953960227E-4	DEFECT
see note above re: return type	WITHOUT_CLASSIFICATION	0.9999547296291538	WITHOUT_CLASSIFICATION	4.527037084629803E-5	DEFECT
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9999864761534635	WITHOUT_CLASSIFICATION	1.3523846536474907E-5	DEFECT
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9880047601735795	WITHOUT_CLASSIFICATION	0.011995239826420426	DEFECT
one-dimensional array	WITHOUT_CLASSIFICATION	0.9998361154827378	WITHOUT_CLASSIFICATION	1.638845172622601E-4	DEFECT
n-dimensional array	WITHOUT_CLASSIFICATION	0.9998233761247803	WITHOUT_CLASSIFICATION	1.7662387521971725E-4	DEFECT
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998616733728439	WITHOUT_CLASSIFICATION	1.3832662715608821E-4	DEFECT
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999989863510092	WITHOUT_CLASSIFICATION	1.0136489907985552E-5	DEFECT
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9997079514186107	WITHOUT_CLASSIFICATION	2.920485813893186E-4	DEFECT
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9995057456126308	WITHOUT_CLASSIFICATION	4.942543873691953E-4	DEFECT
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9998352741832479	WITHOUT_CLASSIFICATION	1.6472581675215338E-4	DEFECT
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.996782745140018	WITHOUT_CLASSIFICATION	0.00321725485998213	DEFECT
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999914825548029	WITHOUT_CLASSIFICATION	8.517445197102801E-5	DEFECT
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999797784574188	WITHOUT_CLASSIFICATION	2.0221542581160334E-5	DEFECT
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9992184243078721	WITHOUT_CLASSIFICATION	7.815756921279329E-4	DEFECT
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999961891930782	WITHOUT_CLASSIFICATION	3.8108069218277096E-6	DEFECT
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999479877596418	WITHOUT_CLASSIFICATION	5.2012240358314757E-5	DEFECT
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9997979474717184	WITHOUT_CLASSIFICATION	2.0205252828165893E-4	DEFECT
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999699384415242	WITHOUT_CLASSIFICATION	3.006155847582466E-5	DEFECT
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998756606952552	WITHOUT_CLASSIFICATION	1.243393047446679E-4	DEFECT
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999917704193243	WITHOUT_CLASSIFICATION	8.229580675719373E-6	DEFECT
The template for interface modules	WITHOUT_CLASSIFICATION	0.9999207689157606	WITHOUT_CLASSIFICATION	7.923108423940685E-5	DEFECT
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999970311132354	WITHOUT_CLASSIFICATION	2.9688867646031327E-5	DEFECT
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9998877868619158	WITHOUT_CLASSIFICATION	1.1221313808424288E-4	DEFECT
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999542044165545	WITHOUT_CLASSIFICATION	4.579558344548902E-4	DEFECT
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999575886268071	WITHOUT_CLASSIFICATION	4.241137319296709E-5	DEFECT
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9518187171782782	WITHOUT_CLASSIFICATION	0.0481812828217219	DEFECT
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9998350569180919	WITHOUT_CLASSIFICATION	1.649430819081514E-4	DEFECT
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9997731849991055	WITHOUT_CLASSIFICATION	2.2681500089435537E-4	DEFECT
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999292544683088	WITHOUT_CLASSIFICATION	7.074553169117201E-5	DEFECT
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9997544346823526	WITHOUT_CLASSIFICATION	2.455653176473596E-4	DEFECT
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9997459261393148	WITHOUT_CLASSIFICATION	2.5407386068521256E-4	DEFECT
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9992866735852903	WITHOUT_CLASSIFICATION	7.133264147096077E-4	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.999671796423048	WITHOUT_CLASSIFICATION	3.282035769519144E-4	DEFECT
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9993675671118833	WITHOUT_CLASSIFICATION	6.324328881166908E-4	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999867557080043	WITHOUT_CLASSIFICATION	1.3244291995558425E-5	DEFECT
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999223594095454	WITHOUT_CLASSIFICATION	7.764059045450659E-5	DEFECT
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9994035386682795	WITHOUT_CLASSIFICATION	5.964613317205223E-4	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9981493226360978	WITHOUT_CLASSIFICATION	0.0018506773639021994	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.999671796423048	WITHOUT_CLASSIFICATION	3.282035769519144E-4	DEFECT
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9999865653217741	WITHOUT_CLASSIFICATION	1.343467822582201E-5	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999358335295286	WITHOUT_CLASSIFICATION	6.416647047129724E-5	DEFECT
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9986611974900717	WITHOUT_CLASSIFICATION	0.0013388025099283676	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9986987189363532	WITHOUT_CLASSIFICATION	0.001301281063646809	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9986987189363532	WITHOUT_CLASSIFICATION	0.001301281063646809	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999972748373642	WITHOUT_CLASSIFICATION	2.725162635825086E-6	DEFECT
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999883457119724	WITHOUT_CLASSIFICATION	1.165428802767468E-5	DEFECT
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9999050704892065	WITHOUT_CLASSIFICATION	9.492951079343225E-5	DEFECT
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999923561891625	WITHOUT_CLASSIFICATION	7.643810837463496E-6	DEFECT
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9996570728301466	WITHOUT_CLASSIFICATION	3.429271698534104E-4	DEFECT
Initialize some components.	WITHOUT_CLASSIFICATION	0.9997871775490146	WITHOUT_CLASSIFICATION	2.1282245098544098E-4	DEFECT
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.999815106323542	WITHOUT_CLASSIFICATION	1.8489367645801256E-4	DEFECT
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9962982221563305	WITHOUT_CLASSIFICATION	0.0037017778436695273	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999403881742043	WITHOUT_CLASSIFICATION	5.961182579569846E-5	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999403881742043	WITHOUT_CLASSIFICATION	5.961182579569846E-5	DEFECT
no matching ctor found	WITHOUT_CLASSIFICATION	0.9999259091052943	WITHOUT_CLASSIFICATION	7.409089470567704E-5	DEFECT
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9997264156826734	WITHOUT_CLASSIFICATION	2.735843173266819E-4	DEFECT
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999965613155306	WITHOUT_CLASSIFICATION	3.4386844693040333E-6	DEFECT
must be a public method	WITHOUT_CLASSIFICATION	0.9999834235751748	WITHOUT_CLASSIFICATION	1.65764248252878E-5	DEFECT
must be a public class	WITHOUT_CLASSIFICATION	0.9997656962689603	WITHOUT_CLASSIFICATION	2.3430373103966736E-4	DEFECT
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999753270178761	WITHOUT_CLASSIFICATION	2.467298212402901E-5	DEFECT
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9999995685888563	WITHOUT_CLASSIFICATION	4.314111436565427E-7	DEFECT
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999861291304784	WITHOUT_CLASSIFICATION	1.38708695216532E-5	DEFECT
no matching method found	WITHOUT_CLASSIFICATION	0.9999827163511584	WITHOUT_CLASSIFICATION	1.7283648841581948E-5	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9826678258106216	WITHOUT_CLASSIFICATION	0.01733217418937838	DEFECT
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9999294217500865	WITHOUT_CLASSIFICATION	7.057824991356307E-5	DEFECT
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9999055559166095	WITHOUT_CLASSIFICATION	9.444408339059053E-5	DEFECT
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9999311646579027	WITHOUT_CLASSIFICATION	6.883534209733736E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998822695552487	WITHOUT_CLASSIFICATION	1.1773044475132794E-4	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998822695552487	WITHOUT_CLASSIFICATION	1.1773044475132794E-4	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999823495663756	WITHOUT_CLASSIFICATION	1.7650433624402813E-4	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9998645110073073	WITHOUT_CLASSIFICATION	1.354889926926457E-4	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9826678258106216	WITHOUT_CLASSIFICATION	0.01733217418937838	DEFECT
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999944050442624	WITHOUT_CLASSIFICATION	5.594955737625551E-6	DEFECT
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9977710003860227	WITHOUT_CLASSIFICATION	0.0022289996139773487	DEFECT
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9999407316584985	WITHOUT_CLASSIFICATION	5.9268341501540604E-5	DEFECT
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9999030547981268	WITHOUT_CLASSIFICATION	9.694520187310578E-5	DEFECT
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9999407963108742	WITHOUT_CLASSIFICATION	5.920368912586185E-5	DEFECT
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999028331174644	WITHOUT_CLASSIFICATION	9.71668825356046E-5	DEFECT
package scope	WITHOUT_CLASSIFICATION	0.9999228582985057	WITHOUT_CLASSIFICATION	7.714170149421073E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9981493226360978	WITHOUT_CLASSIFICATION	0.0018506773639021994	DEFECT
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9999208466140755	WITHOUT_CLASSIFICATION	7.91533859244336E-5	DEFECT
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9998709170487202	WITHOUT_CLASSIFICATION	1.2908295127975696E-4	DEFECT
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998469375860052	WITHOUT_CLASSIFICATION	1.5306241399476683E-4	DEFECT
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999929714844424	WITHOUT_CLASSIFICATION	7.028515557603247E-5	DEFECT
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999512920566992	WITHOUT_CLASSIFICATION	4.870794330076735E-5	DEFECT
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999853483589657	WITHOUT_CLASSIFICATION	1.4651641034332286E-5	DEFECT
statically initialized below	WITHOUT_CLASSIFICATION	0.9998198126655099	WITHOUT_CLASSIFICATION	1.8018733449001837E-4	DEFECT
finish class initializer	WITHOUT_CLASSIFICATION	0.9996830291836083	WITHOUT_CLASSIFICATION	3.1697081639162316E-4	DEFECT
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9990197721080337	WITHOUT_CLASSIFICATION	9.802278919662033E-4	DEFECT
should not happen!	WITHOUT_CLASSIFICATION	0.9982272342523417	WITHOUT_CLASSIFICATION	0.0017727657476582393	DEFECT
start class	WITHOUT_CLASSIFICATION	0.9996540758727206	WITHOUT_CLASSIFICATION	3.459241272794377E-4	DEFECT
make getter for handler	WITHOUT_CLASSIFICATION	0.9997106628707276	WITHOUT_CLASSIFICATION	2.893371292724577E-4	DEFECT
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9991498729170304	WITHOUT_CLASSIFICATION	8.501270829695084E-4	DEFECT
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9462770765402109	WITHOUT_CLASSIFICATION	0.053722923459789275	DEFECT
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9988020502628722	WITHOUT_CLASSIFICATION	0.0011979497371278037	DEFECT
create static private method field	WITHOUT_CLASSIFICATION	0.9999815004650311	WITHOUT_CLASSIFICATION	1.8499534968873576E-5	DEFECT
load static empty array	WITHOUT_CLASSIFICATION	0.9999799817755672	WITHOUT_CLASSIFICATION	2.0018224432835693E-5	DEFECT
box arguments	WITHOUT_CLASSIFICATION	0.9999315913165846	WITHOUT_CLASSIFICATION	6.840868341541986E-5	DEFECT
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9989059071308267	WITHOUT_CLASSIFICATION	0.0010940928691733427	DEFECT
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9999722552785516	WITHOUT_CLASSIFICATION	2.7744721448413347E-5	DEFECT
do a void return	WITHOUT_CLASSIFICATION	0.9999811002244526	WITHOUT_CLASSIFICATION	1.8899775547381747E-5	DEFECT
utility methods	WITHOUT_CLASSIFICATION	0.999953142602118	WITHOUT_CLASSIFICATION	4.68573978819346E-5	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999972748373642	WITHOUT_CLASSIFICATION	2.725162635825086E-6	DEFECT
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9998915100095628	WITHOUT_CLASSIFICATION	1.0848999043726265E-4	DEFECT
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9997512332061825	WITHOUT_CLASSIFICATION	2.487667938174713E-4	DEFECT
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999726604604321	WITHOUT_CLASSIFICATION	2.7339539567907498E-5	DEFECT
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9951329915146808	WITHOUT_CLASSIFICATION	0.004867008485319095	DEFECT
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9984841798895765	WITHOUT_CLASSIFICATION	0.0015158201104234833	DEFECT
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.997870725354979	WITHOUT_CLASSIFICATION	0.002129274645020883	DEFECT
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999906601082521	WITHOUT_CLASSIFICATION	9.339891747969741E-6	DEFECT
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9994837714974404	WITHOUT_CLASSIFICATION	5.162285025596535E-4	DEFECT
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.999994395857609	WITHOUT_CLASSIFICATION	5.60414239098219E-6	DEFECT
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999982138782476	WITHOUT_CLASSIFICATION	1.7861217523994975E-5	DEFECT
NUL	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9996715548239598	WITHOUT_CLASSIFICATION	3.284451760402259E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998961332092723	WITHOUT_CLASSIFICATION	1.0386679072763991E-4	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999555324180713	WITHOUT_CLASSIFICATION	4.4467581928641274E-5	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9995955990856824	WITHOUT_CLASSIFICATION	4.0440091431761746E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999991125724055	WITHOUT_CLASSIFICATION	8.874275945421271E-7	DEFECT
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9978905376808246	WITHOUT_CLASSIFICATION	0.0021094623191754177	DEFECT
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9997713556662206	WITHOUT_CLASSIFICATION	2.2864433377954322E-4	DEFECT
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.972881512411756	WITHOUT_CLASSIFICATION	0.02711848758824397	DEFECT
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9996325783170517	WITHOUT_CLASSIFICATION	3.674216829483639E-4	DEFECT
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9988731203323465	WITHOUT_CLASSIFICATION	0.001126879667653456	DEFECT
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9987593549428891	WITHOUT_CLASSIFICATION	0.0012406450571108877	DEFECT
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9988412987105771	WITHOUT_CLASSIFICATION	0.0011587012894228204	DEFECT
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999947039445497	WITHOUT_CLASSIFICATION	5.296055450320183E-6	DEFECT
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999554384702942	WITHOUT_CLASSIFICATION	4.456152970573733E-5	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9997466503683637	WITHOUT_CLASSIFICATION	2.533496316362106E-4	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9997466503683637	WITHOUT_CLASSIFICATION	2.533496316362106E-4	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9997466503683637	WITHOUT_CLASSIFICATION	2.533496316362106E-4	DEFECT
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9988459524175629	WITHOUT_CLASSIFICATION	0.001154047582437062	DEFECT
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9999508914330767	WITHOUT_CLASSIFICATION	4.9108566923349755E-5	DEFECT
Single node in list	WITHOUT_CLASSIFICATION	0.9999177473776596	WITHOUT_CLASSIFICATION	8.22526223404604E-5	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9992930968261555	WITHOUT_CLASSIFICATION	7.06903173844404E-4	DEFECT
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9995435681443774	WITHOUT_CLASSIFICATION	4.564318556225428E-4	DEFECT
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999683411004647	WITHOUT_CLASSIFICATION	3.165889953532861E-5	DEFECT
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999639964437846	WITHOUT_CLASSIFICATION	3.600355621540772E-5	DEFECT
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999169968828688	WITHOUT_CLASSIFICATION	8.300311713114448E-5	DEFECT
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9993967523458379	WITHOUT_CLASSIFICATION	6.032476541621449E-4	DEFECT
Last full line read.	WITHOUT_CLASSIFICATION	0.9997807132942678	WITHOUT_CLASSIFICATION	2.1928670573221416E-4	DEFECT
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9998123892734019	WITHOUT_CLASSIFICATION	1.8761072659808685E-4	DEFECT
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999851850968776	WITHOUT_CLASSIFICATION	1.4814903122286417E-5	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999255945893795	WITHOUT_CLASSIFICATION	7.44054106205066E-5	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999255945893795	WITHOUT_CLASSIFICATION	7.44054106205066E-5	DEFECT
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999973687490954	WITHOUT_CLASSIFICATION	2.6312509045879764E-5	DEFECT
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9995115998384131	WITHOUT_CLASSIFICATION	4.884001615869421E-4	DEFECT
Single-quote fast path	WITHOUT_CLASSIFICATION	0.999922071263831	WITHOUT_CLASSIFICATION	7.792873616891882E-5	DEFECT
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9998983758548349	WITHOUT_CLASSIFICATION	1.0162414516504359E-4	DEFECT
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9997662201789481	WITHOUT_CLASSIFICATION	2.3377982105192666E-4	DEFECT
just ignore	WITHOUT_CLASSIFICATION	0.9999858093078272	WITHOUT_CLASSIFICATION	1.4190692172766914E-5	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.999837279475918	WITHOUT_CLASSIFICATION	1.6272052408200784E-4	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9998369920515396	WITHOUT_CLASSIFICATION	1.6300794846029967E-4	DEFECT
PUSH(1)	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
POP	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9992126360135958	WITHOUT_CLASSIFICATION	7.873639864041626E-4	DEFECT
LEXPOP	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
SET_P	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998159584134286	WITHOUT_CLASSIFICATION	1.840415865714182E-4	DEFECT
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9987669035791725	WITHOUT_CLASSIFICATION	0.0012330964208275563	DEFECT
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998948903794231	WITHOUT_CLASSIFICATION	1.051096205768841E-4	DEFECT
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999579488978635	WITHOUT_CLASSIFICATION	4.205110213647892E-5	DEFECT
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9995401799633349	WITHOUT_CLASSIFICATION	4.598200366651076E-4	DEFECT
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998911632151273	WITHOUT_CLASSIFICATION	1.0883678487274976E-4	DEFECT
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999884129275203	WITHOUT_CLASSIFICATION	1.1587072479701478E-4	DEFECT
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9982938470181894	WITHOUT_CLASSIFICATION	0.0017061529818106428	DEFECT
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999711660216604	WITHOUT_CLASSIFICATION	2.883397833964224E-5	DEFECT
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998030053166966	WITHOUT_CLASSIFICATION	1.9699468330340488E-4	DEFECT
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9996618321271407	WITHOUT_CLASSIFICATION	3.3816787285935733E-4	DEFECT
1.9 only	WITHOUT_CLASSIFICATION	0.9999527915319887	WITHOUT_CLASSIFICATION	4.720846801142941E-5	DEFECT
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9998406627149947	WITHOUT_CLASSIFICATION	1.5933728500533165E-4	DEFECT
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999096766426189	WITHOUT_CLASSIFICATION	9.032335738117E-5	DEFECT
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.999964184616905	WITHOUT_CLASSIFICATION	3.581538309511636E-5	DEFECT
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9998719035008704	WITHOUT_CLASSIFICATION	1.2809649912954514E-4	DEFECT
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
end of script.	WITHOUT_CLASSIFICATION	0.9998786672683774	WITHOUT_CLASSIFICATION	1.2133273162270793E-4	DEFECT
white spaces	WITHOUT_CLASSIFICATION	0.9999068899964993	WITHOUT_CLASSIFICATION	9.311000350058518E-5	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
it's a comment	WITHOUT_CLASSIFICATION	0.9997052670426225	WITHOUT_CLASSIFICATION	2.947329573774834E-4	DEFECT
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999912613964175	WITHOUT_CLASSIFICATION	8.738603582552249E-6	DEFECT
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999516781732103	WITHOUT_CLASSIFICATION	4.832182678964635E-5	DEFECT
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998952956571647	WITHOUT_CLASSIFICATION	1.0470434283530647E-4	DEFECT
documentation nodes	WITHOUT_CLASSIFICATION	0.9997137608602942	WITHOUT_CLASSIFICATION	2.8623913970588736E-4	DEFECT
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9986822572138945	WITHOUT_CLASSIFICATION	0.0013177427861055186	DEFECT
Just a plain bang	WITHOUT_CLASSIFICATION	0.9999248304674477	WITHOUT_CLASSIFICATION	7.516953255229146E-5	DEFECT
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999592664450769	WITHOUT_CLASSIFICATION	4.073355492299463E-5	DEFECT
$~: match-data	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
$: argv	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
$$: pid	WITHOUT_CLASSIFICATION	0.9999755140647939	WITHOUT_CLASSIFICATION	2.448593520606412E-5	DEFECT
$?: last status	WITHOUT_CLASSIFICATION	0.9999095312631535	WITHOUT_CLASSIFICATION	9.046873684651352E-5	DEFECT
$!: error string	WITHOUT_CLASSIFICATION	0.9999706646543471	WITHOUT_CLASSIFICATION	2.933534565290652E-5	DEFECT
$@: error position	WITHOUT_CLASSIFICATION	0.9999364711696056	WITHOUT_CLASSIFICATION	6.352883039442476E-5	DEFECT
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999247590177244	WITHOUT_CLASSIFICATION	7.524098227562701E-5	DEFECT
$;: field separator	WITHOUT_CLASSIFICATION	0.999950952083812	WITHOUT_CLASSIFICATION	4.9047916187937264E-5	DEFECT
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999706479975146	WITHOUT_CLASSIFICATION	2.9352002485364266E-5	DEFECT
$.: last read line number	WITHOUT_CLASSIFICATION	0.9997913469253872	WITHOUT_CLASSIFICATION	2.0865307461284595E-4	DEFECT
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
$:: load path	WITHOUT_CLASSIFICATION	0.9999371170396546	WITHOUT_CLASSIFICATION	6.28829603453111E-5	DEFECT
$<: reading filename	WITHOUT_CLASSIFICATION	0.999929890789348	WITHOUT_CLASSIFICATION	7.01092106519946E-5	DEFECT
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999892943659144	WITHOUT_CLASSIFICATION	1.0705634085580556E-5	DEFECT
$&: last match	WITHOUT_CLASSIFICATION	0.9999340834711714	WITHOUT_CLASSIFICATION	6.591652882861813E-5	DEFECT
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999865292571142	WITHOUT_CLASSIFICATION	1.3470742885884737E-5	DEFECT
$': string after last match	WITHOUT_CLASSIFICATION	0.9999809274867397	WITHOUT_CLASSIFICATION	1.9072513260301105E-5	DEFECT
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9998961677823791	WITHOUT_CLASSIFICATION	1.0383221762086328E-4	DEFECT
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9997663875706421	WITHOUT_CLASSIFICATION	2.3361242935802926E-4	DEFECT
enum lex_state	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
block (primary)	WITHOUT_CLASSIFICATION	0.99997830474474	WITHOUT_CLASSIFICATION	2.169525525988454E-5	DEFECT
block (expr)	WITHOUT_CLASSIFICATION	0.99997830474474	WITHOUT_CLASSIFICATION	2.169525525988454E-5	DEFECT
hash	WITHOUT_CLASSIFICATION	0.9999767297012753	WITHOUT_CLASSIFICATION	2.3270298724751166E-5	DEFECT
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9997528034198979	WITHOUT_CLASSIFICATION	2.47196580102039E-4	DEFECT
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9969281262495291	WITHOUT_CLASSIFICATION	0.0030718737504709603	DEFECT
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9914992872855174	WITHOUT_CLASSIFICATION	0.00850071271448265	DEFECT
hexadecimal	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
binary	WITHOUT_CLASSIFICATION	0.9999779790678704	WITHOUT_CLASSIFICATION	2.2020932129608193E-5	DEFECT
decimal	WITHOUT_CLASSIFICATION	0.9999771036719127	WITHOUT_CLASSIFICATION	2.289632808733335E-5	DEFECT
Octal	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999743375776193	WITHOUT_CLASSIFICATION	2.5662422380672453E-5	DEFECT
backslash	WITHOUT_CLASSIFICATION	0.9999750383540797	WITHOUT_CLASSIFICATION	2.4961645920323996E-5	DEFECT
newline	WITHOUT_CLASSIFICATION	0.9999403429710013	WITHOUT_CLASSIFICATION	5.9657028998779494E-5	DEFECT
horizontal tab	WITHOUT_CLASSIFICATION	0.9999233589650169	WITHOUT_CLASSIFICATION	7.66410349830109E-5	DEFECT
form feed	WITHOUT_CLASSIFICATION	0.9999776306875068	WITHOUT_CLASSIFICATION	2.236931249318364E-5	DEFECT
vertical tab	WITHOUT_CLASSIFICATION	0.9999225827216048	WITHOUT_CLASSIFICATION	7.741727839512607E-5	DEFECT
alarm(bell)	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
escape	WITHOUT_CLASSIFICATION	0.9999821886987047	WITHOUT_CLASSIFICATION	1.7811301295364024E-5	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9998369920515396	WITHOUT_CLASSIFICATION	1.6300794846029967E-4	DEFECT
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999325454596499	WITHOUT_CLASSIFICATION	6.745454035005792E-5	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998669315240569	WITHOUT_CLASSIFICATION	1.3306847594304568E-4	DEFECT
space	WITHOUT_CLASSIFICATION	0.9999902604961933	WITHOUT_CLASSIFICATION	9.739503806635839E-6	DEFECT
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9994710095803949	WITHOUT_CLASSIFICATION	5.289904196050716E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976110751018	WITHOUT_CLASSIFICATION	2.388924898143574E-6	DEFECT
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9988910542942194	WITHOUT_CLASSIFICATION	0.0011089457057805536	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998669315240569	WITHOUT_CLASSIFICATION	1.3306847594304568E-4	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9944357838223833	WITHOUT_CLASSIFICATION	0.005564216177616729	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9944357838223833	WITHOUT_CLASSIFICATION	0.005564216177616729	DEFECT
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999635142256249	WITHOUT_CLASSIFICATION	3.648577437510238E-5	DEFECT
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999899795748446	WITHOUT_CLASSIFICATION	1.002042515539532E-4	DEFECT
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998628435545667	WITHOUT_CLASSIFICATION	1.3715644543335403E-4	DEFECT
Character read before previous read	WITHOUT_CLASSIFICATION	0.9999678615850025	WITHOUT_CLASSIFICATION	3.213841499743567E-5	DEFECT
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999673048733071	WITHOUT_CLASSIFICATION	3.269512669293428E-5	DEFECT
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.5889743118014562	WITHOUT_CLASSIFICATION	0.4110256881985436	DEFECT
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9994659355905615	WITHOUT_CLASSIFICATION	5.340644094384756E-4	DEFECT
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9866666806810904	WITHOUT_CLASSIFICATION	0.01333331931890963	DEFECT
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999771612443686	WITHOUT_CLASSIFICATION	2.283875563140447E-5	DEFECT
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9987127446453589	WITHOUT_CLASSIFICATION	0.0012872553546411797	DEFECT
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9991267851226878	WITHOUT_CLASSIFICATION	8.732148773121278E-4	DEFECT
DigestLibrary	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.998957079780181	WITHOUT_CLASSIFICATION	0.0010429202198190095	DEFECT
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9996824526238188	WITHOUT_CLASSIFICATION	3.175473761812443E-4	DEFECT
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9998736826504284	WITHOUT_CLASSIFICATION	1.2631734957160894E-4	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
line 329	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998684066973973	WITHOUT_CLASSIFICATION	1.3159330260270437E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9998090217152948	WITHOUT_CLASSIFICATION	1.90978284705096E-4	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9957257695578223	WITHOUT_CLASSIFICATION	0.004274230442177693	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998988501027574	WITHOUT_CLASSIFICATION	1.0114989724262623E-4	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.999898164356342	WITHOUT_CLASSIFICATION	1.0183564365797207E-4	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998850166881628	WITHOUT_CLASSIFICATION	1.1498331183722667E-4	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9993153415829076	WITHOUT_CLASSIFICATION	6.846584170924912E-4	DEFECT
line 271	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 274	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 303	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 311	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 314	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 317	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 332	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 338	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 341	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 344	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 358	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 367	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 378	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 407	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 411	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 414	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 434	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 443	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 446	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 452	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 457	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 464	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 467	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 470	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 479	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 484	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 492	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 498	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 501	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 504	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 507	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 510	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 519	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 525	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 556	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 559	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 563	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 569	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 575	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 578	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 587	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 596	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 604	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 607	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 613	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 616	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 634	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 638	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 643	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 646	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 655	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 660	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 667	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 670	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 701	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 717	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 720	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 726	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 729	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 735	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 738	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 751	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 754	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 757	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 760	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 763	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 769	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 775	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 797	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 803	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 806	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 809	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 815	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 818	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 821	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 824	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 830	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 833	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 836	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 852	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 858	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 861	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 868	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 871	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 876	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 879	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 883	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 903	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 907	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 915	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 920	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 923	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 926	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 936	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 940	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 948	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 956	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 964	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 967	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 978	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 984	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 986	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 996	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1001	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1008	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1014	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1029	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1032	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1034	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1045	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1048	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1051	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1058	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1070	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1073	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1076	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1079	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1082	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1089	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1100	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1103	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1107	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999215771760671	WITHOUT_CLASSIFICATION	7.842282393292081E-5	DEFECT
line 1113	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1115	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1119	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1135	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1137	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1151	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1154	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1164	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1175	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1178	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1187	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1189	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1193	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1214	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1234	WITHOUT_CLASSIFICATION	0.9999223457407926	WITHOUT_CLASSIFICATION	7.765425920735694E-5	DEFECT
line 1239	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1243	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1263	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1269	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1280	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1283	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1290	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1296	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1299	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1302	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1309	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1313	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1315	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1328	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1335	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1352	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1358	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1374	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1381	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1415	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1431	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1434	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1440	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1443	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1453	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1465	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1477	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1480	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1485	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1488	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1510	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1516	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1533	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1550	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1553	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1556	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1565	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1568	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1571	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1574	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1577	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1587	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1600	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1609	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1623	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1626	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1638	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1641	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1644	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1649	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1655	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1658	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1661	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1672	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1677	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1687	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1694	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1733	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1745	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1757	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1769	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1775	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1784	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1808	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1814	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999016912930795	WITHOUT_CLASSIFICATION	9.830870692049501E-5	DEFECT
XXX 0;	WITHOUT_CLASSIFICATION	0.9999254188416072	WITHOUT_CLASSIFICATION	7.458115839268782E-5	DEFECT
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999812176787362	WITHOUT_CLASSIFICATION	1.8782321263908865E-5	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999804910073135	WITHOUT_CLASSIFICATION	1.950899268651274E-5	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9960108677772761	WITHOUT_CLASSIFICATION	0.003989132222723856	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999186467886464	WITHOUT_CLASSIFICATION	8.135321135358838E-5	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9993678596601003	WITHOUT_CLASSIFICATION	6.321403398995874E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9993678596601003	WITHOUT_CLASSIFICATION	6.321403398995874E-4	DEFECT
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9998925813918306	WITHOUT_CLASSIFICATION	1.0741860816952332E-4	DEFECT
mirko: check	WITHOUT_CLASSIFICATION	0.9999786317302256	WITHOUT_CLASSIFICATION	2.136826977432219E-5	DEFECT
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9995053222182003	WITHOUT_CLASSIFICATION	4.946777817997019E-4	DEFECT
line 529	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
XXX	WITHOUT_CLASSIFICATION	0.9999222139163204	WITHOUT_CLASSIFICATION	7.778608367961141E-5	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9998771536603823	WITHOUT_CLASSIFICATION	1.2284633961770052E-4	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999262973530653	WITHOUT_CLASSIFICATION	7.370264693471722E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9998900509812821	WITHOUT_CLASSIFICATION	1.0994901871776985E-4	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999390198730128	WITHOUT_CLASSIFICATION	6.098012698720223E-4	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999665218959373	WITHOUT_CLASSIFICATION	3.347810406280406E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998684066973973	WITHOUT_CLASSIFICATION	1.3159330260270437E-4	DEFECT
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9996355605907739	WITHOUT_CLASSIFICATION	3.644394092262412E-4	DEFECT
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999984172946933	WITHOUT_CLASSIFICATION	1.5827053067040453E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999940840207042	WITHOUT_CLASSIFICATION	5.915979295804485E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999940840207042	WITHOUT_CLASSIFICATION	5.915979295804485E-5	DEFECT
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9989695252889538	WITHOUT_CLASSIFICATION	0.0010304747110462787	DEFECT
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9925873767262765	WITHOUT_CLASSIFICATION	0.007412623273723442	DEFECT
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9992176155223131	WITHOUT_CLASSIFICATION	7.823844776868014E-4	DEFECT
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9994849356153173	WITHOUT_CLASSIFICATION	5.150643846827904E-4	DEFECT
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999620449239814	WITHOUT_CLASSIFICATION	3.7955076018600755E-4	DEFECT
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999157810089312	WITHOUT_CLASSIFICATION	8.421899106884095E-5	DEFECT
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9963910333015359	WITHOUT_CLASSIFICATION	0.003608966698464229	DEFECT
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9993523860887769	WITHOUT_CLASSIFICATION	6.47613911223134E-4	DEFECT
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9997386984184945	WITHOUT_CLASSIFICATION	2.613015815054941E-4	DEFECT
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999044339187132	WITHOUT_CLASSIFICATION	9.556608128681796E-5	DEFECT
Parser states:	WITHOUT_CLASSIFICATION	0.9998820628592112	WITHOUT_CLASSIFICATION	1.179371407888486E-4	DEFECT
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9998603191682809	WITHOUT_CLASSIFICATION	1.3968083171910382E-4	DEFECT
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999930322192232	WITHOUT_CLASSIFICATION	6.96778077679436E-5	DEFECT
LOCALVAR	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
CONSTANT	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999352467034525	WITHOUT_CLASSIFICATION	6.475329654760107E-5	DEFECT
MRI: block_append	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9990294421084794	WITHOUT_CLASSIFICATION	9.705578915204801E-4	DEFECT
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9991826673293382	WITHOUT_CLASSIFICATION	8.173326706618716E-4	DEFECT
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.999957214484259	WITHOUT_CLASSIFICATION	4.27855157409314E-5	DEFECT
Node	WITHOUT_CLASSIFICATION	0.9999752199852385	WITHOUT_CLASSIFICATION	2.478001476151205E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9892935227440371	WITHOUT_CLASSIFICATION	0.010706477255962823	DEFECT
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9998352718449902	WITHOUT_CLASSIFICATION	1.6472815500991942E-4	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9892935227440371	WITHOUT_CLASSIFICATION	0.010706477255962823	DEFECT
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9998352718449902	WITHOUT_CLASSIFICATION	1.6472815500991942E-4	DEFECT
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9998352718449902	WITHOUT_CLASSIFICATION	1.6472815500991942E-4	DEFECT
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9938272591178677	WITHOUT_CLASSIFICATION	0.00617274088213218	DEFECT
MRI: range_op	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9995865069723159	WITHOUT_CLASSIFICATION	4.134930276840832E-4	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9989451676686132	WITHOUT_CLASSIFICATION	0.001054832331386849	DEFECT
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999671601266215	WITHOUT_CLASSIFICATION	3.283987337858196E-5	DEFECT
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999165783156475	WITHOUT_CLASSIFICATION	8.342168435252586E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9998090217152948	WITHOUT_CLASSIFICATION	1.90978284705096E-4	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998988501027574	WITHOUT_CLASSIFICATION	1.0114989724262623E-4	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.999898164356342	WITHOUT_CLASSIFICATION	1.0183564365797207E-4	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998850166881628	WITHOUT_CLASSIFICATION	1.1498331183722667E-4	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9993153415829076	WITHOUT_CLASSIFICATION	6.846584170924912E-4	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 280	WITHOUT_CLASSIFICATION	0.9999212971954706	WITHOUT_CLASSIFICATION	7.870280452944684E-5	DEFECT
line 283	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 296	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 324	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 327	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 331	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 333	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 336	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 342	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 345	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 348	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 354	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 368	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 377	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 388	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 392	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 397	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 429	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 432	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 436	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 445	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 448	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 454	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 459	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 466	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 469	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 478	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 481	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 488	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 494	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 497	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 503	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 506	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 509	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 512	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 521	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 526	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 534	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 549	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 552	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 558	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 561	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 571	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 574	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 579	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 586	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 589	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 592	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 595	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 598	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 623	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 627	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 630	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 633	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 639	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 648	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 657	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 661	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 666	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 678	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 682	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 688	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 699	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 706	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 708	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 727	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 737	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 753	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 779	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 801	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 808	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 811	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 817	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 820	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 826	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 829	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 832	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 851	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 857	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 860	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 863	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 866	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 869	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 875	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 884	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 887	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 890	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 902	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 909	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 912	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 916	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 922	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 928	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 941	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 947	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 951	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 955	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 965	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 969	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 977	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 983	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1013	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1023	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1035	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1041	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1043	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1054	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1057	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1060	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1069	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1075	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999215771760671	WITHOUT_CLASSIFICATION	7.842282393292081E-5	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1078	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1084	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1087	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1090	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1093	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1114	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1116	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1118	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1124	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1126	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1138	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1144	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1149	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1155	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1162	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1173	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1179	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1182	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1190	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1196	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1213	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1217	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1231	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1236	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1244	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1254	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1258	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1264	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1270	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1273	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1276	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1279	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1282	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1289	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1292	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1295	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1298	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1305	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1308	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1311	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1317	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1323	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1326	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1329	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1337	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1342	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1345	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1354	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1359	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1366	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1369	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1373	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1377	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1383	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1399	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1401	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1406	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1417	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1424	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1427	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1430	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1433	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1436	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1442	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1445	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1458	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1464	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1489	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1493	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1507	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1519	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1532	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1538	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1542	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1557	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1573	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1591	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1607	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1610	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1622	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1625	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1636	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1639	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1647	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1651	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1657	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1660	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1663	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1678	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1702	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1711	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1719	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1722	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1731	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1734	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1738	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1746	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1756	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1758	WITHOUT_CLASSIFICATION	0.999794795697888	WITHOUT_CLASSIFICATION	2.052043021121122E-4	DEFECT
line 1761	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1767	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1776	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1782	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1785	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1788	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1791	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1797	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1800	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1803	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1806	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1809	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1815	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1825	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1828	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1831	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1847	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9993678596601003	WITHOUT_CLASSIFICATION	6.321403398995874E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9993678596601003	WITHOUT_CLASSIFICATION	6.321403398995874E-4	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9998771536603823	WITHOUT_CLASSIFICATION	1.2284633961770052E-4	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999262973530653	WITHOUT_CLASSIFICATION	7.370264693471722E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9998900509812821	WITHOUT_CLASSIFICATION	1.0994901871776985E-4	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
line 1854	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1869	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1872	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1877	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1886	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1898	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1902	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1905	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1911	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1918	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1935	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1938	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1942	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1948	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1960	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1963	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1968	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1972	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1982	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1995	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 2000	WITHOUT_CLASSIFICATION	0.9998371456840471	WITHOUT_CLASSIFICATION	1.62854315952783E-4	DEFECT
line 2006	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 2010	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999782897984869	WITHOUT_CLASSIFICATION	2.1710201513108572E-5	DEFECT
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9999868738552106	WITHOUT_CLASSIFICATION	1.312614478936791E-5	DEFECT
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9999331645015318	WITHOUT_CLASSIFICATION	6.683549846815746E-5	DEFECT
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9999603074564442	WITHOUT_CLASSIFICATION	3.9692543555905817E-5	DEFECT
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9999029014511392	WITHOUT_CLASSIFICATION	9.709854886077861E-5	DEFECT
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9997686828572228	WITHOUT_CLASSIFICATION	2.3131714277735099E-4	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999665218959373	WITHOUT_CLASSIFICATION	3.347810406280406E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998684066973973	WITHOUT_CLASSIFICATION	1.3159330260270437E-4	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999940840207042	WITHOUT_CLASSIFICATION	5.915979295804485E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999940840207042	WITHOUT_CLASSIFICATION	5.915979295804485E-5	DEFECT
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9994881832833518	WITHOUT_CLASSIFICATION	5.118167166482262E-4	DEFECT
was $$ = null;	WITHOUT_CLASSIFICATION	0.9999525653519096	WITHOUT_CLASSIFICATION	4.74346480904579E-5	DEFECT
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996542551333324	WITHOUT_CLASSIFICATION	3.457448666676467E-4	DEFECT
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9996355605907739	WITHOUT_CLASSIFICATION	3.644394092262412E-4	DEFECT
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9985050564839059	WITHOUT_CLASSIFICATION	0.001494943516094162	DEFECT
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9992318995312118	WITHOUT_CLASSIFICATION	7.681004687882015E-4	DEFECT
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9991905844169019	WITHOUT_CLASSIFICATION	8.094155830981385E-4	DEFECT
Live reference to module	WITHOUT_CLASSIFICATION	0.9999617080482153	WITHOUT_CLASSIFICATION	3.829195178471887E-5	DEFECT
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999505270963136	WITHOUT_CLASSIFICATION	4.9472903686389456E-5	DEFECT
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999786772866309	WITHOUT_CLASSIFICATION	2.132271336910547E-5	DEFECT
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.997267549037873	WITHOUT_CLASSIFICATION	0.0027324509621271032	DEFECT
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9995567239723544	WITHOUT_CLASSIFICATION	4.4327602764549466E-4	DEFECT
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999335671369646	WITHOUT_CLASSIFICATION	6.643286303549218E-5	DEFECT
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999845575909976	WITHOUT_CLASSIFICATION	1.544240900234209E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999574209513852	WITHOUT_CLASSIFICATION	4.257904861470758E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999574209513852	WITHOUT_CLASSIFICATION	4.257904861470758E-5	DEFECT
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9999266308863213	WITHOUT_CLASSIFICATION	7.336911367876758E-5	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9995988578337694	WITHOUT_CLASSIFICATION	4.0114216623057873E-4	DEFECT
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9999251621407814	WITHOUT_CLASSIFICATION	7.483785921850036E-5	DEFECT
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999531881739398	WITHOUT_CLASSIFICATION	4.6811826060198704E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999877357796685	WITHOUT_CLASSIFICATION	1.2264220331550313E-5	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999532934535381	WITHOUT_CLASSIFICATION	4.670654646186732E-5	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999877357796685	WITHOUT_CLASSIFICATION	1.2264220331550313E-5	DEFECT
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9997252988240892	WITHOUT_CLASSIFICATION	2.7470117591083887E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9944916582030646	WITHOUT_CLASSIFICATION	0.005508341796935267	DEFECT
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9977963405334487	WITHOUT_CLASSIFICATION	0.002203659466551327	DEFECT
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9984145585058127	WITHOUT_CLASSIFICATION	0.0015854414941872752	DEFECT
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9997079693130717	WITHOUT_CLASSIFICATION	2.920306869283066E-4	DEFECT
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9997079693130717	WITHOUT_CLASSIFICATION	2.920306869283066E-4	DEFECT
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9999842412520601	WITHOUT_CLASSIFICATION	1.575874793989057E-5	DEFECT
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999554809466955	WITHOUT_CLASSIFICATION	4.451905330452711E-5	DEFECT
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999645926786898	WITHOUT_CLASSIFICATION	3.540732131021913E-5	DEFECT
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.5003772660705423	WITHOUT_CLASSIFICATION	0.4996227339294577	DEFECT
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9998700830855807	WITHOUT_CLASSIFICATION	1.2991691441938274E-4	DEFECT
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9989429808638801	WITHOUT_CLASSIFICATION	0.001057019136119891	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999505949531383	WITHOUT_CLASSIFICATION	4.940504686170862E-5	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999505949531383	WITHOUT_CLASSIFICATION	4.940504686170862E-5	DEFECT
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999676654590212	WITHOUT_CLASSIFICATION	3.233454097889686E-5	DEFECT
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998972665942161	WITHOUT_CLASSIFICATION	1.0273340578388033E-4	DEFECT
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999731173698564	WITHOUT_CLASSIFICATION	2.688263014353859E-5	DEFECT
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9997631228398559	WITHOUT_CLASSIFICATION	2.368771601441734E-4	DEFECT
required and optional only	WITHOUT_CLASSIFICATION	0.9991611024841653	WITHOUT_CLASSIFICATION	8.388975158346066E-4	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999877357796685	WITHOUT_CLASSIFICATION	1.2264220331550313E-5	DEFECT
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9996950311586937	WITHOUT_CLASSIFICATION	3.0496884130625055E-4	DEFECT
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999897593200452	WITHOUT_CLASSIFICATION	1.0240679954831262E-5	DEFECT
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9984687313318402	WITHOUT_CLASSIFICATION	0.0015312686681597486	DEFECT
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9996950311586937	WITHOUT_CLASSIFICATION	3.0496884130625055E-4	DEFECT
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999909925150715	WITHOUT_CLASSIFICATION	9.007484928447492E-6	DEFECT
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999987902261244	WITHOUT_CLASSIFICATION	1.20977387562136E-6	DEFECT
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999628555741831	WITHOUT_CLASSIFICATION	3.7144425816948456E-5	DEFECT
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9995801344327923	WITHOUT_CLASSIFICATION	4.1986556720782694E-4	DEFECT
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9986751743260338	WITHOUT_CLASSIFICATION	0.0013248256739661355	DEFECT
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9997783459787185	WITHOUT_CLASSIFICATION	2.216540212814588E-4	DEFECT
No argument blocks	WITHOUT_CLASSIFICATION	0.9999744910700582	WITHOUT_CLASSIFICATION	2.550892994186594E-5	DEFECT
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999744781730546	WITHOUT_CLASSIFICATION	2.5521826945424804E-5	DEFECT
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9983589020108552	WITHOUT_CLASSIFICATION	0.001641097989144768	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998985465951069	WITHOUT_CLASSIFICATION	1.014534048930262E-4	DEFECT
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9854624821148406	WITHOUT_CLASSIFICATION	0.014537517885159496	DEFECT
Highest reserved id	WITHOUT_CLASSIFICATION	0.9998500451671667	WITHOUT_CLASSIFICATION	1.4995483283331026E-4	DEFECT
binary typed calls	WITHOUT_CLASSIFICATION	0.9990931400597728	WITHOUT_CLASSIFICATION	9.068599402271204E-4	DEFECT
id must always be even	WITHOUT_CLASSIFICATION	0.9992290403230947	WITHOUT_CLASSIFICATION	7.709596769053071E-4	DEFECT
with block pass	WITHOUT_CLASSIFICATION	0.9998875837833249	WITHOUT_CLASSIFICATION	1.1241621667505781E-4	DEFECT
no block	WITHOUT_CLASSIFICATION	0.9999983548254003	WITHOUT_CLASSIFICATION	1.645174599652861E-6	DEFECT
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999743322309618	WITHOUT_CLASSIFICATION	2.566776903825123E-5	DEFECT
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9975177513887927	WITHOUT_CLASSIFICATION	0.002482248611207383	DEFECT
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999626169643899	WITHOUT_CLASSIFICATION	3.7383035610187316E-5	DEFECT
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998835864469692	WITHOUT_CLASSIFICATION	1.1641355303075593E-4	DEFECT
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999368394674993	WITHOUT_CLASSIFICATION	6.316053250065869E-5	DEFECT
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999768873257728	WITHOUT_CLASSIFICATION	2.311267422704817E-5	DEFECT
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9998860358572544	WITHOUT_CLASSIFICATION	1.1396414274555014E-4	DEFECT
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9996534416709214	WITHOUT_CLASSIFICATION	3.465583290785703E-4	DEFECT
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9985110963791697	WITHOUT_CLASSIFICATION	0.0014889036208303472	DEFECT
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9998912444588114	WITHOUT_CLASSIFICATION	1.087555411886677E-4	DEFECT
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999019862790111	WITHOUT_CLASSIFICATION	9.801372098897407E-5	DEFECT
Lastline	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999835614305619	WITHOUT_CLASSIFICATION	1.6438569438094816E-5	DEFECT
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999234773979603	WITHOUT_CLASSIFICATION	7.65226020397667E-5	DEFECT
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999918004313248	WITHOUT_CLASSIFICATION	8.199568675209903E-5	DEFECT
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998122495408684	WITHOUT_CLASSIFICATION	1.8775045913157015E-4	DEFECT
Some helper functions:	WITHOUT_CLASSIFICATION	0.9997685761053723	WITHOUT_CLASSIFICATION	2.3142389462760978E-4	DEFECT
silently ignore	WITHOUT_CLASSIFICATION	0.9999280351986699	WITHOUT_CLASSIFICATION	7.196480133008416E-5	DEFECT
used by compiler	WITHOUT_CLASSIFICATION	0.9999534567781794	WITHOUT_CLASSIFICATION	4.654322182069079E-5	DEFECT
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999715196223165	WITHOUT_CLASSIFICATION	2.8480377683564828E-5	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998800296243308	WITHOUT_CLASSIFICATION	1.1997037566927449E-4	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9998765462682216	WITHOUT_CLASSIFICATION	1.2345373177836497E-4	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9996715548239598	WITHOUT_CLASSIFICATION	3.284451760402259E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998961332092723	WITHOUT_CLASSIFICATION	1.0386679072763991E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9944916582030646	WITHOUT_CLASSIFICATION	0.005508341796935267	DEFECT
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9996597145262256	WITHOUT_CLASSIFICATION	3.402854737743644E-4	DEFECT
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9996768525463205	WITHOUT_CLASSIFICATION	3.2314745367934754E-4	DEFECT
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9953474300939865	WITHOUT_CLASSIFICATION	0.004652569906013486	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998995496772262	WITHOUT_CLASSIFICATION	1.0045032277377378E-4	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998995496772262	WITHOUT_CLASSIFICATION	1.0045032277377378E-4	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999438375923114	WITHOUT_CLASSIFICATION	5.6162407688599956E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999438375923114	WITHOUT_CLASSIFICATION	5.6162407688599956E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999438375923114	WITHOUT_CLASSIFICATION	5.6162407688599956E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999416096553333	WITHOUT_CLASSIFICATION	5.839034466671972E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999416096553333	WITHOUT_CLASSIFICATION	5.839034466671972E-5	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9998243714833153	WITHOUT_CLASSIFICATION	1.7562851668467122E-4	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9998243714833153	WITHOUT_CLASSIFICATION	1.7562851668467122E-4	DEFECT
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9992881054421299	WITHOUT_CLASSIFICATION	7.118945578701104E-4	DEFECT
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9983737300035184	WITHOUT_CLASSIFICATION	0.0016262699964816408	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.9999754843282754	WITHOUT_CLASSIFICATION	2.4515671724562402E-5	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.9999754843282754	WITHOUT_CLASSIFICATION	2.4515671724562402E-5	DEFECT
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9973467096133058	WITHOUT_CLASSIFICATION	0.0026532903866941324	DEFECT
retrieve method module name	WITHOUT_CLASSIFICATION	0.999980931388843	WITHOUT_CLASSIFICATION	1.9068611156916586E-5	DEFECT
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9990934931763988	WITHOUT_CLASSIFICATION	9.065068236010523E-4	DEFECT
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998289568244989	WITHOUT_CLASSIFICATION	1.710431755010799E-4	DEFECT
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9987762806981025	WITHOUT_CLASSIFICATION	0.001223719301897533	DEFECT
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.999984006429672	WITHOUT_CLASSIFICATION	1.5993570327951452E-5	DEFECT
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999679047526376	WITHOUT_CLASSIFICATION	3.2095247362434115E-5	DEFECT
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999000639996751	WITHOUT_CLASSIFICATION	9.993600032479812E-5	DEFECT
caller	WITHOUT_CLASSIFICATION	0.9999854334237679	WITHOUT_CLASSIFICATION	1.456657623203083E-5	DEFECT
calltype block	WITHOUT_CLASSIFICATION	0.99997830474474	WITHOUT_CLASSIFICATION	2.169525525988454E-5	DEFECT
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9995268986870512	WITHOUT_CLASSIFICATION	4.7310131294879017E-4	DEFECT
load arity for check	WITHOUT_CLASSIFICATION	0.9999854162079852	WITHOUT_CLASSIFICATION	1.4583792014723344E-5	DEFECT
throw	WITHOUT_CLASSIFICATION	0.9999274915358043	WITHOUT_CLASSIFICATION	7.250846419576824E-5	DEFECT
load arity for error	WITHOUT_CLASSIFICATION	0.9999332396595169	WITHOUT_CLASSIFICATION	6.676034048320469E-5	DEFECT
arity ok, continue	WITHOUT_CLASSIFICATION	0.9999127385103458	WITHOUT_CLASSIFICATION	8.7261489654275E-5	DEFECT
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999865196562826	WITHOUT_CLASSIFICATION	1.3480343717472917E-5	DEFECT
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
InvocationCallback	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998202476021251	WITHOUT_CLASSIFICATION	1.79752397874905E-4	DEFECT
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9996598405408135	WITHOUT_CLASSIFICATION	3.401594591864755E-4	DEFECT
load the encoding	WITHOUT_CLASSIFICATION	0.9999696346810013	WITHOUT_CLASSIFICATION	3.0365318998715187E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998590850379424	WITHOUT_CLASSIFICATION	1.4091496205768174E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998590850379424	WITHOUT_CLASSIFICATION	1.4091496205768174E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998590850379424	WITHOUT_CLASSIFICATION	1.4091496205768174E-4	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998065224258514	WITHOUT_CLASSIFICATION	1.9347757414861974E-4	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998065224258514	WITHOUT_CLASSIFICATION	1.9347757414861974E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998065224258514	WITHOUT_CLASSIFICATION	1.9347757414861974E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998065224258514	WITHOUT_CLASSIFICATION	1.9347757414861974E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998065224258514	WITHOUT_CLASSIFICATION	1.9347757414861974E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9997725757839506	WITHOUT_CLASSIFICATION	2.2742421604923321E-4	DEFECT
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
ThreadContext	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9993906874794668	WITHOUT_CLASSIFICATION	6.093125205331713E-4	DEFECT
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999950870643431	WITHOUT_CLASSIFICATION	4.912935656823308E-6	DEFECT
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999894853408063	WITHOUT_CLASSIFICATION	1.0514659193703248E-4	DEFECT
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.998613715830603	WITHOUT_CLASSIFICATION	0.0013862841693969706	DEFECT
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999792676530034	WITHOUT_CLASSIFICATION	2.073234699659189E-4	DEFECT
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.998635756390607	WITHOUT_CLASSIFICATION	0.0013642436093931204	DEFECT
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999915857639382	WITHOUT_CLASSIFICATION	8.414236061798118E-5	DEFECT
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999615845094856	WITHOUT_CLASSIFICATION	3.841549051446519E-5	DEFECT
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999708888578823	WITHOUT_CLASSIFICATION	2.9111142117770307E-5	DEFECT
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999833990295752	WITHOUT_CLASSIFICATION	1.6600970424695188E-5	DEFECT
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9998999028015522	WITHOUT_CLASSIFICATION	1.000971984478506E-4	DEFECT
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.6900482836438168	WITHOUT_CLASSIFICATION	0.30995171635618324	DEFECT
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999506194541491	WITHOUT_CLASSIFICATION	4.93805458508249E-5	DEFECT
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999728689467886	WITHOUT_CLASSIFICATION	2.7131053211396723E-4	DEFECT
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999611850740138	WITHOUT_CLASSIFICATION	3.8814925986192886E-5	DEFECT
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998870922782476	WITHOUT_CLASSIFICATION	1.1290772175242637E-4	DEFECT
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999109512989811	WITHOUT_CLASSIFICATION	8.904870101891763E-5	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999532934535381	WITHOUT_CLASSIFICATION	4.670654646186732E-5	DEFECT
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9969226966091331	WITHOUT_CLASSIFICATION	0.003077303390866808	DEFECT
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9924879569933082	WITHOUT_CLASSIFICATION	0.00751204300669193	DEFECT
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9995847607007027	WITHOUT_CLASSIFICATION	4.152392992973431E-4	DEFECT
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999673720559178	WITHOUT_CLASSIFICATION	3.2627944082257857E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999555242738194	WITHOUT_CLASSIFICATION	4.447572618051677E-5	DEFECT
extension extensions	WITHOUT_CLASSIFICATION	0.9998192511708556	WITHOUT_CLASSIFICATION	1.807488291444075E-4	DEFECT
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9998079419945437	WITHOUT_CLASSIFICATION	1.9205800545639204E-4	DEFECT
try all extensions	WITHOUT_CLASSIFICATION	0.9999792896907045	WITHOUT_CLASSIFICATION	2.0710309295465135E-5	DEFECT
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.999953841608344	WITHOUT_CLASSIFICATION	4.61583916560921E-5	DEFECT
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9998345865412671	WITHOUT_CLASSIFICATION	1.65413458732794E-4	DEFECT
try only literal search	WITHOUT_CLASSIFICATION	0.99995216153932	WITHOUT_CLASSIFICATION	4.783846068006138E-5	DEFECT
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999365322553938	WITHOUT_CLASSIFICATION	6.346774460614182E-5	DEFECT
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999696739002966	WITHOUT_CLASSIFICATION	3.0326099703446194E-5	DEFECT
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999689400183512	WITHOUT_CLASSIFICATION	3.10599816487074E-5	DEFECT
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9995320469832065	WITHOUT_CLASSIFICATION	4.679530167934108E-4	DEFECT
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999795682694126	WITHOUT_CLASSIFICATION	2.0431730587376967E-5	DEFECT
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999130288968567	WITHOUT_CLASSIFICATION	8.697110314322366E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9994929466103913	WITHOUT_CLASSIFICATION	5.070533896085653E-4	DEFECT
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9996491434891748	WITHOUT_CLASSIFICATION	3.50856510825226E-4	DEFECT
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999981445434819	WITHOUT_CLASSIFICATION	1.8554565180316512E-6	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997702742873095	WITHOUT_CLASSIFICATION	2.297257126904072E-4	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997702742873095	WITHOUT_CLASSIFICATION	2.297257126904072E-4	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999837359647005	WITHOUT_CLASSIFICATION	1.6264035299485373E-4	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999837359647005	WITHOUT_CLASSIFICATION	1.6264035299485373E-4	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9989233476543755	WITHOUT_CLASSIFICATION	0.001076652345624387	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9989233476543755	WITHOUT_CLASSIFICATION	0.001076652345624387	DEFECT
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999016077924884	WITHOUT_CLASSIFICATION	9.839220751164813E-5	DEFECT
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999709827645141	WITHOUT_CLASSIFICATION	2.9017235485863302E-5	DEFECT
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999571629674672	WITHOUT_CLASSIFICATION	4.283703253275969E-5	DEFECT
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9967197291206112	WITHOUT_CLASSIFICATION	0.003280270879388632	DEFECT
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999399560660838	WITHOUT_CLASSIFICATION	6.004393391628579E-5	DEFECT
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999112498460542	WITHOUT_CLASSIFICATION	8.875015394579549E-4	DEFECT
signed short, native	WITHOUT_CLASSIFICATION	0.9999259445170766	WITHOUT_CLASSIFICATION	7.405548292342835E-5	DEFECT
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999925452364016	WITHOUT_CLASSIFICATION	7.454763598421524E-6	DEFECT
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9995217893587709	WITHOUT_CLASSIFICATION	4.782106412290978E-4	DEFECT
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9996602455930041	WITHOUT_CLASSIFICATION	3.397544069958406E-4	DEFECT
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9988749352734496	WITHOUT_CLASSIFICATION	0.001125064726550352	DEFECT
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9999261204751522	WITHOUT_CLASSIFICATION	7.387952484791323E-5	DEFECT
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9991023180227443	WITHOUT_CLASSIFICATION	8.976819772557372E-4	DEFECT
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.999840689948011	WITHOUT_CLASSIFICATION	1.593100519889591E-4	DEFECT
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9980009579774346	WITHOUT_CLASSIFICATION	0.0019990420225653957	DEFECT
write('S');	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9999604151534439	WITHOUT_CLASSIFICATION	3.958484655600988E-5	DEFECT
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9997193488365171	WITHOUT_CLASSIFICATION	2.806511634828021E-4	DEFECT
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9997180382516305	WITHOUT_CLASSIFICATION	2.819617483695611E-4	DEFECT
w_symbol	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
w_unique	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9980793060918497	WITHOUT_CLASSIFICATION	0.0019206939081504045	DEFECT
Major Minor	WITHOUT_CLASSIFICATION	0.999881835238597	WITHOUT_CLASSIFICATION	1.1816476140312729E-4	DEFECT
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999317563085495	WITHOUT_CLASSIFICATION	6.824369145051744E-5	DEFECT
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999764402822592	WITHOUT_CLASSIFICATION	2.3559717740811787E-5	DEFECT
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999905431505001	WITHOUT_CLASSIFICATION	9.45684949993335E-6	DEFECT
sic	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999145407682551	WITHOUT_CLASSIFICATION	8.545923174482276E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999145407682551	WITHOUT_CLASSIFICATION	8.545923174482276E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999145407682551	WITHOUT_CLASSIFICATION	8.545923174482276E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998421519773704	WITHOUT_CLASSIFICATION	1.5784802262962434E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998421519773704	WITHOUT_CLASSIFICATION	1.5784802262962434E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998985465951069	WITHOUT_CLASSIFICATION	1.014534048930262E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998985465951069	WITHOUT_CLASSIFICATION	1.014534048930262E-4	DEFECT
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9999871209296218	WITHOUT_CLASSIFICATION	1.2879070378170861E-5	DEFECT
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9982526455472056	WITHOUT_CLASSIFICATION	0.00174735445279443	DEFECT
unsigned short, native	WITHOUT_CLASSIFICATION	0.9999333568899152	WITHOUT_CLASSIFICATION	6.664311008475933E-5	DEFECT
int, native long, native	WITHOUT_CLASSIFICATION	0.999918215147499	WITHOUT_CLASSIFICATION	8.178485250102602E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999145407682551	WITHOUT_CLASSIFICATION	8.545923174482276E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999145407682551	WITHOUT_CLASSIFICATION	8.545923174482276E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999145407682551	WITHOUT_CLASSIFICATION	8.545923174482276E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998421519773704	WITHOUT_CLASSIFICATION	1.5784802262962434E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998421519773704	WITHOUT_CLASSIFICATION	1.5784802262962434E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998421519773704	WITHOUT_CLASSIFICATION	1.5784802262962434E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998985465951069	WITHOUT_CLASSIFICATION	1.014534048930262E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998985465951069	WITHOUT_CLASSIFICATION	1.014534048930262E-4	DEFECT
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9998742023172899	WITHOUT_CLASSIFICATION	1.257976827102104E-4	DEFECT
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999670750943247	WITHOUT_CLASSIFICATION	3.292490567528806E-5	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974168061094644	WITHOUT_CLASSIFICATION	0.002583193890535573	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974168061094644	WITHOUT_CLASSIFICATION	0.002583193890535573	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974168061094644	WITHOUT_CLASSIFICATION	0.002583193890535573	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974168061094644	WITHOUT_CLASSIFICATION	0.002583193890535573	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974168061094644	WITHOUT_CLASSIFICATION	0.002583193890535573	DEFECT
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
All braces pushed..	WITHOUT_CLASSIFICATION	0.9999607213415279	WITHOUT_CLASSIFICATION	3.927865847203232E-5	DEFECT
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9992898245464985	WITHOUT_CLASSIFICATION	7.101754535014698E-4	DEFECT
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999549168606575	WITHOUT_CLASSIFICATION	4.5083139342581204E-5	DEFECT
are we at ''	WITHOUT_CLASSIFICATION	0.9999096845675666	WITHOUT_CLASSIFICATION	9.031543243344974E-5	DEFECT
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999241185644524	WITHOUT_CLASSIFICATION	7.588143554762421E-5	DEFECT
not enough bytes	WITHOUT_CLASSIFICATION	0.9995787252470458	WITHOUT_CLASSIFICATION	4.2127475295416106E-4	DEFECT
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999800832134644	WITHOUT_CLASSIFICATION	1.9916786535567088E-5	DEFECT
skip inner braces	WITHOUT_CLASSIFICATION	0.9999436841019258	WITHOUT_CLASSIFICATION	5.631589807425164E-5	DEFECT
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9998226190667134	WITHOUT_CLASSIFICATION	1.7738093328657363E-4	DEFECT
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.999919702126442	WITHOUT_CLASSIFICATION	8.029787355804912E-5	DEFECT
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999641814055956	WITHOUT_CLASSIFICATION	3.581859440448832E-5	DEFECT
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9998359906282611	WITHOUT_CLASSIFICATION	1.640093717389497E-4	DEFECT
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9998444011237435	WITHOUT_CLASSIFICATION	1.555988762563875E-4	DEFECT
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.997078832044449	WITHOUT_CLASSIFICATION	0.002921167955550997	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998970572069061	WITHOUT_CLASSIFICATION	1.0294279309381496E-4	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998970572069061	WITHOUT_CLASSIFICATION	1.0294279309381496E-4	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998970572069061	WITHOUT_CLASSIFICATION	1.0294279309381496E-4	DEFECT
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9924821150883589	WITHOUT_CLASSIFICATION	0.0075178849116410785	DEFECT
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9924821150883589	WITHOUT_CLASSIFICATION	0.0075178849116410785	DEFECT
SimpleSampler	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9999691429405579	WITHOUT_CLASSIFICATION	3.085705944212988E-5	DEFECT
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9998039632049651	WITHOUT_CLASSIFICATION	1.9603679503498743E-4	DEFECT
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998875753815291	WITHOUT_CLASSIFICATION	1.1242461847090466E-4	DEFECT
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999362731535617	WITHOUT_CLASSIFICATION	6.372684643831264E-5	DEFECT
single precision, native	WITHOUT_CLASSIFICATION	0.999950826077837	WITHOUT_CLASSIFICATION	4.917392216299653E-5	DEFECT
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9999132507265248	WITHOUT_CLASSIFICATION	8.674927347517953E-5	DEFECT
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998832819070758	WITHOUT_CLASSIFICATION	1.1671809292415607E-4	DEFECT
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999338393145547	WITHOUT_CLASSIFICATION	6.616068544525686E-5	DEFECT
double precision, native	WITHOUT_CLASSIFICATION	0.9999489480119209	WITHOUT_CLASSIFICATION	5.105198807906907E-5	DEFECT
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999109486686771	WITHOUT_CLASSIFICATION	8.905133132277776E-5	DEFECT
signed char	WITHOUT_CLASSIFICATION	0.9999188086745073	WITHOUT_CLASSIFICATION	8.119132549270846E-5	DEFECT
unsigned char	WITHOUT_CLASSIFICATION	0.9999212550830427	WITHOUT_CLASSIFICATION	7.874491695726179E-5	DEFECT
long, little-endian	WITHOUT_CLASSIFICATION	0.9998822790091202	WITHOUT_CLASSIFICATION	1.1772099087983766E-4	DEFECT
long, big-endian	WITHOUT_CLASSIFICATION	0.9998822824861384	WITHOUT_CLASSIFICATION	1.1771751386164749E-4	DEFECT
unsigned int, native	WITHOUT_CLASSIFICATION	0.9999284235027883	WITHOUT_CLASSIFICATION	7.157649721162808E-5	DEFECT
int, native	WITHOUT_CLASSIFICATION	0.9999116205251247	WITHOUT_CLASSIFICATION	8.837947487518231E-5	DEFECT
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998897935084615	WITHOUT_CLASSIFICATION	1.1020649153846273E-4	DEFECT
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998122040079541	WITHOUT_CLASSIFICATION	1.8779599204587024E-4	DEFECT
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9997907577278854	WITHOUT_CLASSIFICATION	2.0924227211460502E-4	DEFECT
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9847941112221195	WITHOUT_CLASSIFICATION	0.015205888777880443	DEFECT
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998957914825307	WITHOUT_CLASSIFICATION	1.0420851746927736E-4	DEFECT
obtain a	WITHOUT_CLASSIFICATION	0.9999752906652566	WITHOUT_CLASSIFICATION	2.470933474336204E-5	DEFECT
obtain b	WITHOUT_CLASSIFICATION	0.9999818896561999	WITHOUT_CLASSIFICATION	1.8110343800128687E-5	DEFECT
obtain c	WITHOUT_CLASSIFICATION	0.9999845356777125	WITHOUT_CLASSIFICATION	1.546432228750706E-5	DEFECT
obtain d	WITHOUT_CLASSIFICATION	0.9999753858588897	WITHOUT_CLASSIFICATION	2.4614141110314214E-5	DEFECT
encode.limit() -	WITHOUT_CLASSIFICATION	0.9995967788618132	WITHOUT_CLASSIFICATION	4.0322113818678476E-4	DEFECT
1	WITHOUT_CLASSIFICATION	0.9999866915293171	WITHOUT_CLASSIFICATION	1.3308470682965441E-5	DEFECT
2	WITHOUT_CLASSIFICATION	0.9996958706186836	WITHOUT_CLASSIFICATION	3.04129381316447E-4	DEFECT
3	WITHOUT_CLASSIFICATION	0.9999875596149954	WITHOUT_CLASSIFICATION	1.2440385004544538E-5	DEFECT
4	WITHOUT_CLASSIFICATION	0.9999517815084059	WITHOUT_CLASSIFICATION	4.821849159407003E-5	DEFECT
5	WITHOUT_CLASSIFICATION	0.9999812173066497	WITHOUT_CLASSIFICATION	1.8782693350326996E-5	DEFECT
6	WITHOUT_CLASSIFICATION	0.9999149558623395	WITHOUT_CLASSIFICATION	8.504413766055304E-5	DEFECT
7	WITHOUT_CLASSIFICATION	0.999975531705411	WITHOUT_CLASSIFICATION	2.4468294588997853E-5	DEFECT
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999803241611611	WITHOUT_CLASSIFICATION	1.9675838838794203E-5	DEFECT
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999761162404276	WITHOUT_CLASSIFICATION	2.388375957239949E-5	DEFECT
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9991738447607893	WITHOUT_CLASSIFICATION	8.261552392107038E-4	DEFECT
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9965625671777348	WITHOUT_CLASSIFICATION	0.003437432822265059	DEFECT
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9997114536036754	WITHOUT_CLASSIFICATION	2.885463963245667E-4	DEFECT
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9981625288299282	WITHOUT_CLASSIFICATION	0.0018374711700718687	DEFECT
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9996983110211053	WITHOUT_CLASSIFICATION	3.016889788947505E-4	DEFECT
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9995222564785946	WITHOUT_CLASSIFICATION	4.7774352140544175E-4	DEFECT
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999303333228192	WITHOUT_CLASSIFICATION	6.966667718075424E-5	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9986679489405784	WITHOUT_CLASSIFICATION	0.0013320510594216459	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9993870569035619	WITHOUT_CLASSIFICATION	6.12943096438054E-4	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9993870569035619	WITHOUT_CLASSIFICATION	6.12943096438054E-4	DEFECT
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9991328290863979	WITHOUT_CLASSIFICATION	8.671709136020867E-4	DEFECT
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998577742353252	WITHOUT_CLASSIFICATION	1.4222576467474483E-4	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9985293878501929	WITHOUT_CLASSIFICATION	0.0014706121498072058	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9990363431572574	WITHOUT_CLASSIFICATION	9.636568427425652E-4	DEFECT
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9994801684736048	WITHOUT_CLASSIFICATION	5.198315263952877E-4	DEFECT
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998891290648548	WITHOUT_CLASSIFICATION	1.1087093514505757E-4	DEFECT
are we recursing?	WITHOUT_CLASSIFICATION	0.9999416003007594	WITHOUT_CLASSIFICATION	5.8399699240595785E-5	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999092711818701	WITHOUT_CLASSIFICATION	9.072881812987052E-5	DEFECT
default PidGetter	WITHOUT_CLASSIFICATION	0.9999815557280642	WITHOUT_CLASSIFICATION	1.844427193569619E-5	DEFECT
ignore and try windows version	WITHOUT_CLASSIFICATION	0.999958811581882	WITHOUT_CLASSIFICATION	4.118841811785438E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998926965873088	WITHOUT_CLASSIFICATION	1.0730341269119564E-4	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998926965873088	WITHOUT_CLASSIFICATION	1.0730341269119564E-4	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998926965873088	WITHOUT_CLASSIFICATION	1.0730341269119564E-4	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998926965873088	WITHOUT_CLASSIFICATION	1.0730341269119564E-4	DEFECT
try both	WITHOUT_CLASSIFICATION	0.9999936465571029	WITHOUT_CLASSIFICATION	6.353442897104994E-6	DEFECT
just unix	WITHOUT_CLASSIFICATION	0.9999951410607707	WITHOUT_CLASSIFICATION	4.858939229315343E-6	DEFECT
just windows	WITHOUT_CLASSIFICATION	0.9999791155843798	WITHOUT_CLASSIFICATION	2.0884415620225077E-5	DEFECT
neither	WITHOUT_CLASSIFICATION	0.9999753471502087	WITHOUT_CLASSIFICATION	2.4652849791249173E-5	DEFECT
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9988843573328671	WITHOUT_CLASSIFICATION	0.001115642667132862	DEFECT
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9997144919687944	WITHOUT_CLASSIFICATION	2.855080312056436E-4	DEFECT
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9997310860192536	WITHOUT_CLASSIFICATION	2.6891398074635405E-4	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999816543650291	WITHOUT_CLASSIFICATION	1.8345634970894456E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999816543650291	WITHOUT_CLASSIFICATION	1.8345634970894456E-5	DEFECT
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999395042412134	WITHOUT_CLASSIFICATION	6.049575878669353E-5	DEFECT
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999429873261818	WITHOUT_CLASSIFICATION	5.701267381823828E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999636915141872	WITHOUT_CLASSIFICATION	3.630848581280171E-5	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9968996211462432	WITHOUT_CLASSIFICATION	0.0031003788537567255	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9968996211462432	WITHOUT_CLASSIFICATION	0.0031003788537567255	DEFECT
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9992539686117513	WITHOUT_CLASSIFICATION	7.460313882487442E-4	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99991278982906	WITHOUT_CLASSIFICATION	8.721017094005752E-5	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99991278982906	WITHOUT_CLASSIFICATION	8.721017094005752E-5	DEFECT
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9963263291598724	WITHOUT_CLASSIFICATION	0.0036736708401276727	DEFECT
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999921420459817	WITHOUT_CLASSIFICATION	7.857954018274025E-6	DEFECT
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999991188852335	WITHOUT_CLASSIFICATION	8.811147665070947E-6	DEFECT
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.997274433987882	WITHOUT_CLASSIFICATION	0.002725566012117989	DEFECT
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9941852033248376	WITHOUT_CLASSIFICATION	0.00581479667516231	DEFECT
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999844284060813	WITHOUT_CLASSIFICATION	1.557159391874739E-5	DEFECT
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9771200311890049	WITHOUT_CLASSIFICATION	0.02287996881099513	DEFECT
sequential	WITHOUT_CLASSIFICATION	0.9999753912933981	WITHOUT_CLASSIFICATION	2.4608706602035667E-5	DEFECT
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999661641762303	WITHOUT_CLASSIFICATION	3.383582376979746E-5	DEFECT
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999220693917246	WITHOUT_CLASSIFICATION	7.793060827550837E-5	DEFECT
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999396788359106	WITHOUT_CLASSIFICATION	6.03211640893119E-5	DEFECT
SignalFacade	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9915710164391063	WITHOUT_CLASSIFICATION	0.00842898356089371	DEFECT
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9966855754838382	WITHOUT_CLASSIFICATION	0.003314424516161732	DEFECT
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999734228704701	WITHOUT_CLASSIFICATION	2.6577129529922653E-5	DEFECT
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9979090850171027	WITHOUT_CLASSIFICATION	0.0020909149828971458	DEFECT
Args	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
static methods only	WITHOUT_CLASSIFICATION	0.9998981034190271	WITHOUT_CLASSIFICATION	1.0189658097291846E-4	DEFECT
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9998202348588899	WITHOUT_CLASSIFICATION	1.7976514111002498E-4	DEFECT
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9994906490852301	WITHOUT_CLASSIFICATION	5.093509147699178E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9987394753706539	WITHOUT_CLASSIFICATION	0.0012605246293460385	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9987757635654563	WITHOUT_CLASSIFICATION	0.0012242364345437448	DEFECT
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9958014947585607	WITHOUT_CLASSIFICATION	0.004198505241439197	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.999899631893892	WITHOUT_CLASSIFICATION	1.0036810610813377E-4	DEFECT
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9587782677134234	WITHOUT_CLASSIFICATION	0.04122173228657643	DEFECT
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999553479412653	WITHOUT_CLASSIFICATION	4.4652058734747316E-5	DEFECT
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9998723371108035	WITHOUT_CLASSIFICATION	1.2766288919645351E-4	DEFECT
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9998045645938107	WITHOUT_CLASSIFICATION	1.9543540618927662E-4	DEFECT
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998792813608584	WITHOUT_CLASSIFICATION	1.2071863914161899E-4	DEFECT
..	WITHOUT_CLASSIFICATION	0.9998970481308285	WITHOUT_CLASSIFICATION	1.0295186917162567E-4	DEFECT
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998948794898344	WITHOUT_CLASSIFICATION	1.0512051016572742E-4	DEFECT
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.8825455473236373	WITHOUT_CLASSIFICATION	0.11745445267636265	DEFECT
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9997720828696252	WITHOUT_CLASSIFICATION	2.279171303748659E-4	DEFECT
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9999662711897822	WITHOUT_CLASSIFICATION	3.372881021777911E-5	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9989070289353827	WITHOUT_CLASSIFICATION	0.0010929710646172112	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999137252061554	WITHOUT_CLASSIFICATION	8.627479384461505E-5	DEFECT
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.999745739052685	WITHOUT_CLASSIFICATION	2.542609473149599E-4	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9989070289353827	WITHOUT_CLASSIFICATION	0.0010929710646172112	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999137252061554	WITHOUT_CLASSIFICATION	8.627479384461505E-5	DEFECT
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9998749405589052	WITHOUT_CLASSIFICATION	1.2505944109472887E-4	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9998362684500625	WITHOUT_CLASSIFICATION	1.637315499376015E-4	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9998362684500625	WITHOUT_CLASSIFICATION	1.637315499376015E-4	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998003242115184	WITHOUT_CLASSIFICATION	1.9967578848159752E-4	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9986651550120346	WITHOUT_CLASSIFICATION	0.001334844987965466	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999482140797188	WITHOUT_CLASSIFICATION	5.178592028123513E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998670632710714	WITHOUT_CLASSIFICATION	1.3293672892856234E-4	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9949995770964005	WITHOUT_CLASSIFICATION	0.0050004229035995424	DEFECT
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.997693146600518	WITHOUT_CLASSIFICATION	0.0023068533994821047	DEFECT
'.' is printed	WITHOUT_CLASSIFICATION	0.999734395873054	WITHOUT_CLASSIFICATION	2.6560412694603676E-4	DEFECT
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999428920018999	WITHOUT_CLASSIFICATION	5.7107998100122415E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999424785358679	WITHOUT_CLASSIFICATION	5.7521464132019866E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999753376864298	WITHOUT_CLASSIFICATION	2.466231357021545E-5	DEFECT
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9998358757370523	WITHOUT_CLASSIFICATION	1.6412426294771626E-4	DEFECT
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999043650774214	WITHOUT_CLASSIFICATION	9.563492257852678E-5	DEFECT
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9996931824733846	WITHOUT_CLASSIFICATION	3.068175266154535E-4	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999971138429771	WITHOUT_CLASSIFICATION	2.8861570228975956E-5	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999971138429771	WITHOUT_CLASSIFICATION	2.8861570228975956E-5	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.9997515742494656	WITHOUT_CLASSIFICATION	2.4842575053442284E-4	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.9997515742494656	WITHOUT_CLASSIFICATION	2.4842575053442284E-4	DEFECT
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999635760292112	WITHOUT_CLASSIFICATION	3.642397078895574E-5	DEFECT
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
(1|intlen)	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.999821352910601	WITHOUT_CLASSIFICATION	1.7864708939898088E-4	DEFECT
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999930707604496	WITHOUT_CLASSIFICATION	6.929239550393372E-5	DEFECT
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999482140797188	WITHOUT_CLASSIFICATION	5.178592028123513E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998670632710714	WITHOUT_CLASSIFICATION	1.3293672892856234E-4	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999424785358679	WITHOUT_CLASSIFICATION	5.7521464132019866E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999753376864298	WITHOUT_CLASSIFICATION	2.466231357021545E-5	DEFECT
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999259292032563	WITHOUT_CLASSIFICATION	7.40707967437278E-5	DEFECT
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999263800300611	WITHOUT_CLASSIFICATION	7.361996993885414E-5	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
dangling '%' char	WITHOUT_CLASSIFICATION	0.9999038896418312	WITHOUT_CLASSIFICATION	9.611035816878696E-5	DEFECT
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998662962957452	WITHOUT_CLASSIFICATION	1.3370370425487197E-4	DEFECT
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999599840425666	WITHOUT_CLASSIFICATION	4.0015957433326254E-5	DEFECT
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9984827861400979	WITHOUT_CLASSIFICATION	0.0015172138599021435	DEFECT
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999883626286853	WITHOUT_CLASSIFICATION	1.1637371314709501E-4	DEFECT
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999169368768565	WITHOUT_CLASSIFICATION	8.306312314359278E-5	DEFECT
negative values	WITHOUT_CLASSIFICATION	0.9997656246077669	WITHOUT_CLASSIFICATION	2.343753922331777E-4	DEFECT
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9852396724828224	WITHOUT_CLASSIFICATION	0.014760327517177636	DEFECT
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9997786565125588	WITHOUT_CLASSIFICATION	2.2134348744113993E-4	DEFECT
no such luck...	WITHOUT_CLASSIFICATION	0.9999713573826023	WITHOUT_CLASSIFICATION	2.864261739765007E-5	DEFECT
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.999942039351449	WITHOUT_CLASSIFICATION	5.7960648551121885E-5	DEFECT
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9999811546865022	WITHOUT_CLASSIFICATION	1.8845313497840497E-5	DEFECT
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999599790521354	WITHOUT_CLASSIFICATION	4.00209478645942E-5	DEFECT
constant vector a	WITHOUT_CLASSIFICATION	0.99988422253579	WITHOUT_CLASSIFICATION	1.1577746420990442E-4	DEFECT
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9997964924829968	WITHOUT_CLASSIFICATION	2.035075170032157E-4	DEFECT
least significant r bits	WITHOUT_CLASSIFICATION	0.9998861106885071	WITHOUT_CLASSIFICATION	1.1388931149292178E-4	DEFECT
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998899867749736	WITHOUT_CLASSIFICATION	1.1001322502640963E-4	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998899867749736	WITHOUT_CLASSIFICATION	1.1001322502640963E-4	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998899867749736	WITHOUT_CLASSIFICATION	1.1001322502640963E-4	DEFECT
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9994498139677523	WITHOUT_CLASSIFICATION	5.501860322475425E-4	DEFECT
Tempering	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999714290124124	WITHOUT_CLASSIFICATION	2.8570987587651773E-5	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9997548732349676	WITHOUT_CLASSIFICATION	2.4512676503233476E-4	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9997548732349676	WITHOUT_CLASSIFICATION	2.4512676503233476E-4	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999737411090723	WITHOUT_CLASSIFICATION	2.62588909277091E-4	DEFECT
no number	WITHOUT_CLASSIFICATION	0.9999861722665248	WITHOUT_CLASSIFICATION	1.3827733475166822E-5	DEFECT
trailing garbage	WITHOUT_CLASSIFICATION	0.9999226851380427	WITHOUT_CLASSIFICATION	7.731486195722784E-5	DEFECT
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9996136642543457	WITHOUT_CLASSIFICATION	3.863357456541966E-4	DEFECT
it was not found at all!	WITHOUT_CLASSIFICATION	0.9996749810635993	WITHOUT_CLASSIFICATION	3.250189364006396E-4	DEFECT
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9994135074088242	WITHOUT_CLASSIFICATION	5.864925911758957E-4	DEFECT
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999310631666677	WITHOUT_CLASSIFICATION	6.89368333323478E-5	DEFECT
goto next bucket	WITHOUT_CLASSIFICATION	0.9992856917999865	WITHOUT_CLASSIFICATION	7.14308200013465E-4	DEFECT
we reached the end	WITHOUT_CLASSIFICATION	0.9997582284704412	WITHOUT_CLASSIFICATION	2.4177152955888017E-4	DEFECT
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9998254311323609	WITHOUT_CLASSIFICATION	1.7456886763903627E-4	DEFECT
states	WITHOUT_CLASSIFICATION	0.9999777572440394	WITHOUT_CLASSIFICATION	2.2242755960739677E-5	DEFECT
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9998192955462868	WITHOUT_CLASSIFICATION	1.8070445371325697E-4	DEFECT
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9990712760778264	WITHOUT_CLASSIFICATION	9.287239221736911E-4	DEFECT
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999541637297098	WITHOUT_CLASSIFICATION	4.583627029028124E-5	DEFECT
drop through for sign	WITHOUT_CLASSIFICATION	0.999953683603415	WITHOUT_CLASSIFICATION	4.631639658498509E-5	DEFECT
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9991010019562374	WITHOUT_CLASSIFICATION	8.98998043762548E-4	DEFECT
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999261335399804	WITHOUT_CLASSIFICATION	7.38664600196819E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999964360795378	WITHOUT_CLASSIFICATION	3.5639204621881175E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999378976326644	WITHOUT_CLASSIFICATION	6.210236733559377E-5	DEFECT
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999892998659643	WITHOUT_CLASSIFICATION	1.0700134035631096E-5	DEFECT
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999349484797242	WITHOUT_CLASSIFICATION	6.50515202757763E-5	DEFECT
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999601548276523	WITHOUT_CLASSIFICATION	3.984517234763567E-5	DEFECT
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9998642165025275	WITHOUT_CLASSIFICATION	1.3578349747243087E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997889547776854	WITHOUT_CLASSIFICATION	2.1104522231467224E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997889547776854	WITHOUT_CLASSIFICATION	2.1104522231467224E-4	DEFECT
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9999957380494358	WITHOUT_CLASSIFICATION	4.261950564187414E-6	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999299625870427	WITHOUT_CLASSIFICATION	7.003741295730117E-5	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999299625870427	WITHOUT_CLASSIFICATION	7.003741295730117E-5	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999064846508605	WITHOUT_CLASSIFICATION	9.351534913942355E-5	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999064846508605	WITHOUT_CLASSIFICATION	9.351534913942355E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.999975557429637	WITHOUT_CLASSIFICATION	2.4442570363060944E-5	DEFECT
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999925005126814	WITHOUT_CLASSIFICATION	7.499487318592327E-5	DEFECT
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999666082063171	WITHOUT_CLASSIFICATION	3.339179368292482E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999765787155234	WITHOUT_CLASSIFICATION	2.3421284476654125E-5	DEFECT
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9997775368829344	WITHOUT_CLASSIFICATION	2.224631170656696E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999964360795378	WITHOUT_CLASSIFICATION	3.5639204621881175E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999964360795378	WITHOUT_CLASSIFICATION	3.5639204621881175E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999964360795378	WITHOUT_CLASSIFICATION	3.5639204621881175E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999378976326644	WITHOUT_CLASSIFICATION	6.210236733559377E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997889547776854	WITHOUT_CLASSIFICATION	2.1104522231467224E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997889547776854	WITHOUT_CLASSIFICATION	2.1104522231467224E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997889547776854	WITHOUT_CLASSIFICATION	2.1104522231467224E-4	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.999975557429637	WITHOUT_CLASSIFICATION	2.4442570363060944E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.999975557429637	WITHOUT_CLASSIFICATION	2.4442570363060944E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.999975557429637	WITHOUT_CLASSIFICATION	2.4442570363060944E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999765787155234	WITHOUT_CLASSIFICATION	2.3421284476654125E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999765787155234	WITHOUT_CLASSIFICATION	2.3421284476654125E-5	DEFECT
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999197149711863	WITHOUT_CLASSIFICATION	8.028502881374301E-5	DEFECT
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999883835641158	WITHOUT_CLASSIFICATION	1.1616435884184482E-5	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999978773941725	WITHOUT_CLASSIFICATION	2.1226058275053372E-5	DEFECT
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.7753056021702454	WITHOUT_CLASSIFICATION	0.22469439782975467	DEFECT
no digits, error	WITHOUT_CLASSIFICATION	0.9999650727054437	WITHOUT_CLASSIFICATION	3.4927294556395225E-5	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9998876781097307	WITHOUT_CLASSIFICATION	1.123218902692897E-4	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9998876781097307	WITHOUT_CLASSIFICATION	1.123218902692897E-4	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998007682822793	WITHOUT_CLASSIFICATION	1.99231717720731E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998464520184407	WITHOUT_CLASSIFICATION	1.5354798155938322E-4	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998464520184407	WITHOUT_CLASSIFICATION	1.5354798155938322E-4	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998464520184407	WITHOUT_CLASSIFICATION	1.5354798155938322E-4	DEFECT
first char must be digit	WITHOUT_CLASSIFICATION	0.9999574892891738	WITHOUT_CLASSIFICATION	4.25107108262498E-5	DEFECT
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999489136170979	WITHOUT_CLASSIFICATION	5.108638290220498E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999378976326644	WITHOUT_CLASSIFICATION	6.210236733559377E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.999975557429637	WITHOUT_CLASSIFICATION	2.4442570363060944E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.999975557429637	WITHOUT_CLASSIFICATION	2.4442570363060944E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998464520184407	WITHOUT_CLASSIFICATION	1.5354798155938322E-4	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998007682822793	WITHOUT_CLASSIFICATION	1.99231717720731E-4	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999730702937654	WITHOUT_CLASSIFICATION	2.6929706234732613E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9997861391449512	WITHOUT_CLASSIFICATION	2.1386085504870758E-4	DEFECT
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999743520911173	WITHOUT_CLASSIFICATION	2.5647908882732883E-5	DEFECT
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999950482873703	WITHOUT_CLASSIFICATION	4.951712629689574E-5	DEFECT
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999014318391088	WITHOUT_CLASSIFICATION	9.856816089120205E-5	DEFECT
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9991166579720511	WITHOUT_CLASSIFICATION	8.833420279489358E-4	DEFECT
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999916851342124	WITHOUT_CLASSIFICATION	8.314865787440527E-6	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999522021362874	WITHOUT_CLASSIFICATION	4.779786371266298E-5	DEFECT
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999429258015278	WITHOUT_CLASSIFICATION	5.7074198472266273E-5	DEFECT
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999861371850728	WITHOUT_CLASSIFICATION	1.3862814927200216E-4	DEFECT
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9998541852842259	WITHOUT_CLASSIFICATION	1.458147157742268E-4	DEFECT
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999498574343008	WITHOUT_CLASSIFICATION	5.0142565699322444E-5	DEFECT
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9998970281196718	WITHOUT_CLASSIFICATION	1.0297188032823479E-4	DEFECT
advance to first entry	WITHOUT_CLASSIFICATION	0.9999678469952704	WITHOUT_CLASSIFICATION	3.215300472951201E-5	DEFECT
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999962285950814	WITHOUT_CLASSIFICATION	3.7714049186607016E-6	DEFECT
package-protected	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999833468923598	WITHOUT_CLASSIFICATION	1.665310764026508E-5	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989740579441556	WITHOUT_CLASSIFICATION	0.0010259420558444096	DEFECT
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9995140786131871	WITHOUT_CLASSIFICATION	4.8592138681291985E-4	DEFECT
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999287539555475	WITHOUT_CLASSIFICATION	7.1246044452426E-5	DEFECT
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999851905267114	WITHOUT_CLASSIFICATION	1.480947328866794E-5	DEFECT
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9998880205921503	WITHOUT_CLASSIFICATION	1.1197940784961769E-4	DEFECT
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9998349510190516	WITHOUT_CLASSIFICATION	1.6504898094838488E-4	DEFECT
unread back	WITHOUT_CLASSIFICATION	0.9998790873595328	WITHOUT_CLASSIFICATION	1.2091264046717518E-4	DEFECT
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999948108647842	WITHOUT_CLASSIFICATION	5.189135215793147E-5	DEFECT
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999889976100959	WITHOUT_CLASSIFICATION	1.1002389904102335E-4	DEFECT
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999721183793342	WITHOUT_CLASSIFICATION	2.7881620665822122E-5	DEFECT
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999984285595919	WITHOUT_CLASSIFICATION	1.5714404080130519E-6	DEFECT
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999667541283441	WITHOUT_CLASSIFICATION	3.3245871655857076E-5	DEFECT
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9998944951826271	WITHOUT_CLASSIFICATION	1.0550481737295256E-4	DEFECT
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9999480411663426	WITHOUT_CLASSIFICATION	5.195883365730231E-5	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999730702937654	WITHOUT_CLASSIFICATION	2.6929706234732613E-5	DEFECT
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999835616638745	WITHOUT_CLASSIFICATION	1.6438336125424048E-5	DEFECT
not closing from finalize	WITHOUT_CLASSIFICATION	0.9994121125447395	WITHOUT_CLASSIFICATION	5.878874552604111E-4	DEFECT
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9987669276600956	WITHOUT_CLASSIFICATION	0.0012330723399044936	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.9998225849461476	WITHOUT_CLASSIFICATION	1.7741505385242986E-4	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.9998225849461476	WITHOUT_CLASSIFICATION	1.7741505385242986E-4	DEFECT
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9998738259338175	WITHOUT_CLASSIFICATION	1.2617406618257266E-4	DEFECT
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999858398498213	WITHOUT_CLASSIFICATION	1.4160150178821803E-5	DEFECT
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999183267138709	WITHOUT_CLASSIFICATION	8.167328612908444E-5	DEFECT
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999151822985115	WITHOUT_CLASSIFICATION	8.481770148851122E-5	DEFECT
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999860425339717	WITHOUT_CLASSIFICATION	1.3957466028263416E-5	DEFECT
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998666960532558	WITHOUT_CLASSIFICATION	1.333039467440608E-4	DEFECT
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9982476913728814	WITHOUT_CLASSIFICATION	0.0017523086271185747	DEFECT
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9999734239048723	WITHOUT_CLASSIFICATION	2.65760951276702E-5	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999617419454566	WITHOUT_CLASSIFICATION	3.825805454334212E-5	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9989592041172207	WITHOUT_CLASSIFICATION	0.0010407958827793097	DEFECT
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9997037770426502	WITHOUT_CLASSIFICATION	2.962229573498086E-4	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999611549201591	WITHOUT_CLASSIFICATION	3.8845079840789767E-5	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999611549201591	WITHOUT_CLASSIFICATION	3.8845079840789767E-5	DEFECT
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9991932027180034	WITHOUT_CLASSIFICATION	8.067972819966736E-4	DEFECT
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9999507134323593	WITHOUT_CLASSIFICATION	4.92865676406511E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999706792977452	WITHOUT_CLASSIFICATION	2.932070225488158E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999706792977452	WITHOUT_CLASSIFICATION	2.932070225488158E-5	DEFECT
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999841502682438	WITHOUT_CLASSIFICATION	1.5849731756196477E-5	DEFECT
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999531746120403	WITHOUT_CLASSIFICATION	4.682538795969237E-5	DEFECT
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9998817521719251	WITHOUT_CLASSIFICATION	1.1824782807493042E-4	DEFECT
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9996208642444537	WITHOUT_CLASSIFICATION	3.7913575554619723E-4	DEFECT
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999886770905882	WITHOUT_CLASSIFICATION	1.1322909411807164E-4	DEFECT
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9997184304901698	WITHOUT_CLASSIFICATION	2.815695098301712E-4	DEFECT
save the ungot	WITHOUT_CLASSIFICATION	0.9999486003223367	WITHOUT_CLASSIFICATION	5.139967766331942E-5	DEFECT
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999877504550854	WITHOUT_CLASSIFICATION	1.2249544914679411E-5	DEFECT
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9994765989882058	WITHOUT_CLASSIFICATION	5.234010117942182E-4	DEFECT
flush first	WITHOUT_CLASSIFICATION	0.9999694567907604	WITHOUT_CLASSIFICATION	3.0543209239594444E-5	DEFECT
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9997411457561687	WITHOUT_CLASSIFICATION	2.588542438312112E-4	DEFECT
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9999260973822615	WITHOUT_CLASSIFICATION	7.390261773857458E-5	DEFECT
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999970586436422	WITHOUT_CLASSIFICATION	2.941356357806585E-5	DEFECT
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9998532070887309	WITHOUT_CLASSIFICATION	1.4679291126906032E-4	DEFECT
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999984082903863	WITHOUT_CLASSIFICATION	1.5917096136965576E-5	DEFECT
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9854492663611959	WITHOUT_CLASSIFICATION	0.014550733638804159	DEFECT
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9997744113521972	WITHOUT_CLASSIFICATION	2.2558864780270014E-4	DEFECT
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998596221490313	WITHOUT_CLASSIFICATION	1.4037785096868277E-4	DEFECT
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9998344432130923	WITHOUT_CLASSIFICATION	1.655567869076923E-4	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999419962555406	WITHOUT_CLASSIFICATION	5.800374445927993E-5	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8834279947572324	WITHOUT_CLASSIFICATION	0.11657200524276752	DEFECT
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999294073240167	WITHOUT_CLASSIFICATION	7.059267598330762E-5	DEFECT
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999507355455636	WITHOUT_CLASSIFICATION	4.926445443648919E-5	DEFECT
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999922266581871	WITHOUT_CLASSIFICATION	7.773341812936537E-6	DEFECT
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999849739967435	WITHOUT_CLASSIFICATION	1.5026003256428774E-5	DEFECT
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9994215750304968	WITHOUT_CLASSIFICATION	5.784249695031761E-4	DEFECT
else leave it null	WITHOUT_CLASSIFICATION	0.9996760654513939	WITHOUT_CLASSIFICATION	3.239345486061072E-4	DEFECT
TypeMatcher	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9996258118801571	WITHOUT_CLASSIFICATION	3.741881198429499E-4	DEFECT
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999102449625299	WITHOUT_CLASSIFICATION	8.975503747021595E-5	DEFECT
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999920485755825	WITHOUT_CLASSIFICATION	7.951424417487594E-5	DEFECT
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9998340934444794	WITHOUT_CLASSIFICATION	1.659065555206339E-4	DEFECT
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9990925186520294	WITHOUT_CLASSIFICATION	9.074813479705278E-4	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999318038876137	WITHOUT_CLASSIFICATION	6.819611238633239E-5	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999318038876137	WITHOUT_CLASSIFICATION	6.819611238633239E-5	DEFECT
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999975129420994	WITHOUT_CLASSIFICATION	2.4870579005984946E-5	DEFECT
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999795536005912	WITHOUT_CLASSIFICATION	2.044639940882121E-5	DEFECT
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9998101051936645	WITHOUT_CLASSIFICATION	1.8989480633557453E-4	DEFECT
Init	WITHOUT_CLASSIFICATION	0.9999749041301028	WITHOUT_CLASSIFICATION	2.509586989718335E-5	DEFECT
Block	WITHOUT_CLASSIFICATION	0.999974988541731	WITHOUT_CLASSIFICATION	2.5011458269073773E-5	DEFECT
Copy constructor	WITHOUT_CLASSIFICATION	0.9999579189689363	WITHOUT_CLASSIFICATION	4.208103106362887E-5	DEFECT
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9961115232492364	WITHOUT_CLASSIFICATION	0.0038884767507637637	DEFECT
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9961115232492364	WITHOUT_CLASSIFICATION	0.0038884767507637637	DEFECT
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9993988491225344	WITHOUT_CLASSIFICATION	6.011508774655481E-4	DEFECT
ok	WITHOUT_CLASSIFICATION	0.9999859214192829	WITHOUT_CLASSIFICATION	1.4078580717109738E-5	DEFECT
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9997375417288353	WITHOUT_CLASSIFICATION	2.6245827116474916E-4	DEFECT
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9782594313854475	WITHOUT_CLASSIFICATION	0.021740568614552588	DEFECT
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999575162372855	WITHOUT_CLASSIFICATION	4.2483762714523077E-5	DEFECT
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9995464313168057	WITHOUT_CLASSIFICATION	4.535686831943784E-4	DEFECT
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999903760564418	WITHOUT_CLASSIFICATION	9.623943558179342E-6	DEFECT
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999739414918295	WITHOUT_CLASSIFICATION	2.6058508170458018E-5	DEFECT
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9995215800636433	WITHOUT_CLASSIFICATION	4.78419936356713E-4	DEFECT
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9998614336541164	WITHOUT_CLASSIFICATION	1.385663458836084E-4	DEFECT
notify thread to proceed	WITHOUT_CLASSIFICATION	0.999850809995984	WITHOUT_CLASSIFICATION	1.491900040161362E-4	DEFECT
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9998952979670847	WITHOUT_CLASSIFICATION	1.0470203291535125E-4	DEFECT
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999645797943213	WITHOUT_CLASSIFICATION	3.5420205678688975E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999820647710356	WITHOUT_CLASSIFICATION	1.7935228964451125E-5	DEFECT
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9998176427561357	WITHOUT_CLASSIFICATION	1.823572438644073E-4	DEFECT
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997480984672389	WITHOUT_CLASSIFICATION	2.519015327611088E-4	DEFECT
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9981814796605644	WITHOUT_CLASSIFICATION	0.0018185203394357335	DEFECT
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999096685760691	WITHOUT_CLASSIFICATION	9.03314239308929E-5	DEFECT
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998547559951987	WITHOUT_CLASSIFICATION	1.4524400480126553E-4	DEFECT
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
void methods should work	WITHOUT_CLASSIFICATION	0.9967507805419429	WITHOUT_CLASSIFICATION	0.0032492194580571077	DEFECT
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9960790270293717	WITHOUT_CLASSIFICATION	0.003920972970628354	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999499010041262	WITHOUT_CLASSIFICATION	5.009899587381695E-5	DEFECT
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999835933016358	WITHOUT_CLASSIFICATION	1.6406698364239842E-5	DEFECT
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999251756132129	WITHOUT_CLASSIFICATION	7.482438678702702E-5	DEFECT
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
int n = 10;	WITHOUT_CLASSIFICATION	0.999687534837449	WITHOUT_CLASSIFICATION	3.1246516255110544E-4	DEFECT
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999822572788809	WITHOUT_CLASSIFICATION	1.774272111910359E-5	DEFECT
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999482468197642	WITHOUT_CLASSIFICATION	5.175318023563423E-5	DEFECT
value equality	WITHOUT_CLASSIFICATION	0.9999035482509133	WITHOUT_CLASSIFICATION	9.645174908658537E-5	DEFECT
identity equality	WITHOUT_CLASSIFICATION	0.9998990387520359	WITHOUT_CLASSIFICATION	1.009612479641045E-4	DEFECT
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998373596140842	WITHOUT_CLASSIFICATION	1.6264038591591975E-4	DEFECT
bench Integer fib	WITHOUT_CLASSIFICATION	0.999881465641823	WITHOUT_CLASSIFICATION	1.1853435817702665E-4	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9998899672300494	WITHOUT_CLASSIFICATION	1.100327699506017E-4	DEFECT
bench Long fib	WITHOUT_CLASSIFICATION	0.9998816786172442	WITHOUT_CLASSIFICATION	1.183213827559102E-4	DEFECT
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9998124606036725	WITHOUT_CLASSIFICATION	1.8753939632746704E-4	DEFECT
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999026835945491	WITHOUT_CLASSIFICATION	9.731640545079262E-5	DEFECT
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9999603933768565	WITHOUT_CLASSIFICATION	3.960662314356047E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998981696872373	WITHOUT_CLASSIFICATION	1.0183031276264153E-4	DEFECT
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9994321747891682	WITHOUT_CLASSIFICATION	5.678252108317048E-4	DEFECT
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999569080056979	WITHOUT_CLASSIFICATION	4.309199430214812E-5	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999871837870018	WITHOUT_CLASSIFICATION	1.2816212998124649E-5	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9990290220537115	WITHOUT_CLASSIFICATION	9.709779462885302E-4	DEFECT
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9991858290534636	WITHOUT_CLASSIFICATION	8.141709465362775E-4	DEFECT
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.999737728050781	WITHOUT_CLASSIFICATION	2.622719492189898E-4	DEFECT
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9998494239249156	WITHOUT_CLASSIFICATION	1.5057607508434426E-4	DEFECT
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.9978485689408871	WITHOUT_CLASSIFICATION	0.0021514310591128826	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999358335295286	WITHOUT_CLASSIFICATION	6.416647047129724E-5	DEFECT
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999935466089893	WITHOUT_CLASSIFICATION	6.453391010697295E-5	DEFECT
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9740734707939979	WITHOUT_CLASSIFICATION	0.02592652920600208	DEFECT
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999650220987429	WITHOUT_CLASSIFICATION	3.497790125698039E-5	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998591123988632	WITHOUT_CLASSIFICATION	1.4088760113680697E-4	DEFECT
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999988252099964	WITHOUT_CLASSIFICATION	1.1747900036104863E-6	DEFECT
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999913332332947	WITHOUT_CLASSIFICATION	8.666766705203675E-6	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998277829772733	WITHOUT_CLASSIFICATION	1.7221702272686405E-4	DEFECT
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999943582352434	WITHOUT_CLASSIFICATION	5.641764756659285E-6	DEFECT
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9999733570759243	WITHOUT_CLASSIFICATION	2.6642924075646596E-5	DEFECT
construct the proxy method	WITHOUT_CLASSIFICATION	0.9999877838285133	WITHOUT_CLASSIFICATION	1.221617148681193E-5	DEFECT
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998438356143997	WITHOUT_CLASSIFICATION	1.5616438560032094E-4	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9998856730427601	WITHOUT_CLASSIFICATION	1.1432695723992237E-4	DEFECT
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998438356143997	WITHOUT_CLASSIFICATION	1.5616438560032094E-4	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999526749032801	WITHOUT_CLASSIFICATION	4.7325096719917304E-5	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9998856730427601	WITHOUT_CLASSIFICATION	1.1432695723992237E-4	DEFECT
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999946370675926	WITHOUT_CLASSIFICATION	5.362932407443082E-6	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.999899631893892	WITHOUT_CLASSIFICATION	1.0036810610813377E-4	DEFECT
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9974161436638325	WITHOUT_CLASSIFICATION	0.0025838563361675485	DEFECT
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9610459469625405	WITHOUT_CLASSIFICATION	0.03895405303745946	DEFECT
check visibility dup method	WITHOUT_CLASSIFICATION	0.9999934743840434	WITHOUT_CLASSIFICATION	6.525615956705692E-6	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974168061094644	WITHOUT_CLASSIFICATION	0.002583193890535573	DEFECT
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9998831532360607	WITHOUT_CLASSIFICATION	1.1684676393932998E-4	DEFECT
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999825319134511	WITHOUT_CLASSIFICATION	1.746808654889145E-5	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9986651550120346	WITHOUT_CLASSIFICATION	0.001334844987965466	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999419962555406	WITHOUT_CLASSIFICATION	5.800374445927993E-5	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999978773941725	WITHOUT_CLASSIFICATION	2.1226058275053372E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9956528316978147	WITHOUT_CLASSIFICATION	0.004347168302185316	DEFECT
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999970850918356	WITHOUT_CLASSIFICATION	2.9149081644007515E-5	DEFECT
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999849109432558	WITHOUT_CLASSIFICATION	1.5089056744035054E-5	DEFECT
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9997861391449512	WITHOUT_CLASSIFICATION	2.1386085504870758E-4	DEFECT
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9902441224407839	WITHOUT_CLASSIFICATION	0.009755877559216097	DEFECT
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999682979872268	WITHOUT_CLASSIFICATION	3.1702012773265826E-5	DEFECT
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9986333426421822	WITHOUT_CLASSIFICATION	0.0013666573578178841	DEFECT
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9985524642359369	WITHOUT_CLASSIFICATION	0.0014475357640630752	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999867557080043	WITHOUT_CLASSIFICATION	1.3244291995558425E-5	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999972062517857	WITHOUT_CLASSIFICATION	2.7937482141831813E-6	DEFECT
constructor	WITHOUT_CLASSIFICATION	0.9999559931566611	WITHOUT_CLASSIFICATION	4.400684333896556E-5	DEFECT
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9981561108259484	WITHOUT_CLASSIFICATION	0.0018438891740517047	DEFECT
$>: default output handle	WITHOUT_CLASSIFICATION	0.9999965749294831	WITHOUT_CLASSIFICATION	3.4250705167216062E-6	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9960658817399278	WITHOUT_CLASSIFICATION	0.0039341182600721855	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999935429153575	WITHOUT_CLASSIFICATION	6.4570846425767925E-6	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998665483549973	WITHOUT_CLASSIFICATION	1.334516450026044E-4	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998665483549973	WITHOUT_CLASSIFICATION	1.334516450026044E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998735579881514	WITHOUT_CLASSIFICATION	1.2644201184871235E-4	DEFECT
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999301238533148	WITHOUT_CLASSIFICATION	6.987614668515624E-5	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997276511932764	WITHOUT_CLASSIFICATION	2.7234880672354317E-4	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9998742742754045	WITHOUT_CLASSIFICATION	1.2572572459544295E-4	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999503104476445	WITHOUT_CLASSIFICATION	4.968955235545855E-5	DEFECT
"else" body	WITHOUT_CLASSIFICATION	0.9999180474025974	WITHOUT_CLASSIFICATION	8.195259740265613E-5	DEFECT
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.995808280392513	WITHOUT_CLASSIFICATION	0.004191719607486931	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999876592171708	WITHOUT_CLASSIFICATION	1.2340782829245902E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9998757849250667	WITHOUT_CLASSIFICATION	1.2421507493340614E-4	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9998757849250667	WITHOUT_CLASSIFICATION	1.2421507493340614E-4	DEFECT
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9997739099961382	WITHOUT_CLASSIFICATION	2.2609000386183294E-4	DEFECT
10!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999729567807737	WITHOUT_CLASSIFICATION	2.7043219226289593E-5	DEFECT
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9463476505785846	WITHOUT_CLASSIFICATION	0.05365234942141525	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999973479363872	WITHOUT_CLASSIFICATION	2.6520636127885217E-5	DEFECT
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9996483007679335	WITHOUT_CLASSIFICATION	3.5169923206649744E-4	DEFECT
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9990167330043671	WITHOUT_CLASSIFICATION	9.832669956328808E-4	DEFECT
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998747132071024	WITHOUT_CLASSIFICATION	1.252867928976573E-4	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999526749032801	WITHOUT_CLASSIFICATION	4.7325096719917304E-5	DEFECT
line 449	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 495	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
Management/monitoring	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999900445765371	WITHOUT_CLASSIFICATION	9.955423462914613E-6	DEFECT
14!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999777137968201	WITHOUT_CLASSIFICATION	2.228620317987587E-5	DEFECT
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999626940966925	WITHOUT_CLASSIFICATION	3.7305903307487366E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9998556660000882	WITHOUT_CLASSIFICATION	1.4433399991172397E-4	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9998556660000882	WITHOUT_CLASSIFICATION	1.4433399991172397E-4	DEFECT
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999729567807737	WITHOUT_CLASSIFICATION	2.7043219226289593E-5	DEFECT
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9999522365197169	WITHOUT_CLASSIFICATION	4.776348028313815E-5	DEFECT
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9846488941857884	WITHOUT_CLASSIFICATION	0.015351105814211622	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999309628817672	WITHOUT_CLASSIFICATION	6.90371182327926E-5	DEFECT
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999648457293939	WITHOUT_CLASSIFICATION	3.515427060613539E-5	DEFECT
18!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996162601239096	WITHOUT_CLASSIFICATION	3.8373987609040136E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998985983570997	WITHOUT_CLASSIFICATION	1.0140164290030862E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998985983570997	WITHOUT_CLASSIFICATION	1.0140164290030862E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998985983570997	WITHOUT_CLASSIFICATION	1.0140164290030862E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998985983570997	WITHOUT_CLASSIFICATION	1.0140164290030862E-4	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997982560480829	WITHOUT_CLASSIFICATION	2.0174395191706278E-4	DEFECT
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9969470526569542	WITHOUT_CLASSIFICATION	0.0030529473430457033	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9996605117797842	WITHOUT_CLASSIFICATION	3.3948822021573897E-4	DEFECT
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.999894235635505	WITHOUT_CLASSIFICATION	1.0576436449513229E-4	DEFECT
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999877467082567	WITHOUT_CLASSIFICATION	1.2253291743338309E-5	DEFECT
22!	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9998657397804245	WITHOUT_CLASSIFICATION	1.3426021957546882E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998539662303499	WITHOUT_CLASSIFICATION	1.4603376965007946E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998539662303499	WITHOUT_CLASSIFICATION	1.4603376965007946E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998539662303499	WITHOUT_CLASSIFICATION	1.4603376965007946E-4	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999236749720114	WITHOUT_CLASSIFICATION	7.632502798853586E-5	DEFECT
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.99982624749443	WITHOUT_CLASSIFICATION	1.7375250557001202E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9998984116760142	WITHOUT_CLASSIFICATION	1.0158832398581221E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9998984116760142	WITHOUT_CLASSIFICATION	1.0158832398581221E-4	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9991889786458633	WITHOUT_CLASSIFICATION	8.110213541366456E-4	DEFECT
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999545298024801	WITHOUT_CLASSIFICATION	4.547019751991744E-5	DEFECT
BASE64	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999944822789839	WITHOUT_CLASSIFICATION	5.517721016110848E-6	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999628706854772	WITHOUT_CLASSIFICATION	3.7129314522799125E-5	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999711353863536	WITHOUT_CLASSIFICATION	2.886461364639179E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999711353863536	WITHOUT_CLASSIFICATION	2.886461364639179E-4	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998860286335244	WITHOUT_CLASSIFICATION	1.1397136647555636E-4	DEFECT
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999980084489747	WITHOUT_CLASSIFICATION	1.991551025381643E-6	DEFECT
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9996642551709037	WITHOUT_CLASSIFICATION	3.3574482909625266E-4	DEFECT
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998563886791233	WITHOUT_CLASSIFICATION	1.4361132087664378E-4	DEFECT
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999726191829068	WITHOUT_CLASSIFICATION	2.73808170932643E-5	DEFECT
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999402109425063	WITHOUT_CLASSIFICATION	5.9789057493749405E-5	DEFECT
carriage return	WITHOUT_CLASSIFICATION	0.9999614389877867	WITHOUT_CLASSIFICATION	3.8561012213312676E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9957257695578223	WITHOUT_CLASSIFICATION	0.004274230442177693	DEFECT
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999650739336963	WITHOUT_CLASSIFICATION	3.49260663037935E-5	DEFECT
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999313545172654	WITHOUT_CLASSIFICATION	6.864548273456505E-5	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999590925233347	WITHOUT_CLASSIFICATION	4.090747666525372E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995788878056597	WITHOUT_CLASSIFICATION	4.211121943401529E-4	DEFECT
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.999987644479225	WITHOUT_CLASSIFICATION	1.2355520775046306E-5	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998749938016	WITHOUT_CLASSIFICATION	1.250061983264591E-7	DEFECT
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.999992787765085	WITHOUT_CLASSIFICATION	7.2122349149771385E-6	DEFECT
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999021192231898	WITHOUT_CLASSIFICATION	9.78807768101025E-5	DEFECT
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999740100797	WITHOUT_CLASSIFICATION	2.5989920299941707E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999926629556736	WITHOUT_CLASSIFICATION	7.337044326415181E-5	DEFECT
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9998206226542367	WITHOUT_CLASSIFICATION	1.7937734576337425E-4	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999835884678963	WITHOUT_CLASSIFICATION	1.6411532103678437E-5	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998779158405643	WITHOUT_CLASSIFICATION	1.220841594356813E-4	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999323199384539	WITHOUT_CLASSIFICATION	6.76800615460113E-5	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999289869120314	WITHOUT_CLASSIFICATION	7.101308796858842E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.999937349490314	WITHOUT_CLASSIFICATION	6.265050968598972E-5	DEFECT
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9987415483645425	WITHOUT_CLASSIFICATION	0.0012584516354574675	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9971956258649719	WITHOUT_CLASSIFICATION	0.0028043741350281867	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998981696872373	WITHOUT_CLASSIFICATION	1.0183031276264153E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998981696872373	WITHOUT_CLASSIFICATION	1.0183031276264153E-4	DEFECT
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9996719783627367	WITHOUT_CLASSIFICATION	3.2802163726325856E-4	DEFECT
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999874160136669	WITHOUT_CLASSIFICATION	1.2583986333109795E-5	DEFECT
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9997090079398704	WITHOUT_CLASSIFICATION	2.90992060129594E-4	DEFECT
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9997632306593881	WITHOUT_CLASSIFICATION	2.3676934061191368E-4	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999273239733039	WITHOUT_CLASSIFICATION	7.267602669610199E-5	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.999837279475918	WITHOUT_CLASSIFICATION	1.6272052408200784E-4	DEFECT
read	WITHOUT_CLASSIFICATION	0.9999874204011324	WITHOUT_CLASSIFICATION	1.2579598867550738E-5	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9679574632865239	WITHOUT_CLASSIFICATION	0.032042536713476	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998902879510063	WITHOUT_CLASSIFICATION	1.0971204899369905E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9993507066078207	WITHOUT_CLASSIFICATION	6.492933921793638E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9982360619965791	WITHOUT_CLASSIFICATION	0.0017639380034208936	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999356617105597	WITHOUT_CLASSIFICATION	6.433828944031497E-5	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999501962702301	WITHOUT_CLASSIFICATION	4.980372977000151E-5	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.999967711609995	WITHOUT_CLASSIFICATION	3.228839000497403E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999749351109644	WITHOUT_CLASSIFICATION	2.5064889035664184E-5	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999315394880866	WITHOUT_CLASSIFICATION	6.846051191341292E-5	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999844731289931	WITHOUT_CLASSIFICATION	1.5526871006900502E-5	DEFECT
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9996986923106148	WITHOUT_CLASSIFICATION	3.013076893851675E-4	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9986005873296341	WITHOUT_CLASSIFICATION	0.0013994126703659549	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9986005873296341	WITHOUT_CLASSIFICATION	0.0013994126703659549	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999815933142947	WITHOUT_CLASSIFICATION	1.8406685705289244E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9981493226360978	WITHOUT_CLASSIFICATION	0.0018506773639021994	DEFECT
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9982692022320506	WITHOUT_CLASSIFICATION	0.001730797767949356	DEFECT
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9993705240574408	WITHOUT_CLASSIFICATION	6.294759425592718E-4	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999894349388393	WITHOUT_CLASSIFICATION	1.056506116061371E-5	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999894349388393	WITHOUT_CLASSIFICATION	1.056506116061371E-5	DEFECT
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9998299131927236	WITHOUT_CLASSIFICATION	1.7008680727631452E-4	DEFECT
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9994963576949921	WITHOUT_CLASSIFICATION	5.036423050080003E-4	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999616702968872	WITHOUT_CLASSIFICATION	3.8329703112686426E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999749381244523	WITHOUT_CLASSIFICATION	2.506187554782587E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999954075687858	WITHOUT_CLASSIFICATION	4.592431214202348E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999200282259789	WITHOUT_CLASSIFICATION	7.997177402105764E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999200282259789	WITHOUT_CLASSIFICATION	7.997177402105764E-5	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999786317302256	WITHOUT_CLASSIFICATION	2.136826977432219E-5	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999786317302256	WITHOUT_CLASSIFICATION	2.136826977432219E-5	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9998173942512744	WITHOUT_CLASSIFICATION	1.8260574872567214E-4	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9993472996984357	WITHOUT_CLASSIFICATION	6.527003015642731E-4	DEFECT
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999495488537218	WITHOUT_CLASSIFICATION	5.045114627818644E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9998414981259154	WITHOUT_CLASSIFICATION	1.585018740845116E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999721531522097	WITHOUT_CLASSIFICATION	2.784684779029781E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999954080345074	WITHOUT_CLASSIFICATION	4.5919654925613304E-6	DEFECT
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999744703432988	WITHOUT_CLASSIFICATION	2.5529656701210984E-5	DEFECT
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9995463351464153	WITHOUT_CLASSIFICATION	4.536648535846328E-4	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9963000205299006	WITHOUT_CLASSIFICATION	0.0036999794700993583	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999988489219357	WITHOUT_CLASSIFICATION	1.1510780642964665E-5	DEFECT
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999478457798807	WITHOUT_CLASSIFICATION	5.215422011930298E-5	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9992883743853695	WITHOUT_CLASSIFICATION	7.116256146303293E-4	DEFECT
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999983013113716	WITHOUT_CLASSIFICATION	1.6986886284846818E-6	DEFECT
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9998547732326428	WITHOUT_CLASSIFICATION	1.452267673573124E-4	DEFECT
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9998608913994881	WITHOUT_CLASSIFICATION	1.3910860051188974E-4	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9996951372671758	WITHOUT_CLASSIFICATION	3.0486273282416386E-4	DEFECT
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9998151697268519	WITHOUT_CLASSIFICATION	1.8483027314796817E-4	DEFECT
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999573400949394	WITHOUT_CLASSIFICATION	4.2659905060570874E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9956528316978147	WITHOUT_CLASSIFICATION	0.004347168302185316	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999770122120729	WITHOUT_CLASSIFICATION	2.2987787927138826E-5	DEFECT
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999779671397977	WITHOUT_CLASSIFICATION	2.2032860202252038E-5	DEFECT
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999641431492123	WITHOUT_CLASSIFICATION	3.5856850787576224E-5	DEFECT
coerce arguments	WITHOUT_CLASSIFICATION	0.9998883086479875	WITHOUT_CLASSIFICATION	1.1169135201241974E-4	DEFECT
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.999822093941788	WITHOUT_CLASSIFICATION	1.779060582119108E-4	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999867557080043	WITHOUT_CLASSIFICATION	1.3244291995558425E-5	DEFECT
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999666086970486	WITHOUT_CLASSIFICATION	3.339130295142104E-5	DEFECT
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9998685941628677	WITHOUT_CLASSIFICATION	1.3140583713233228E-4	DEFECT
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9944272786125931	WITHOUT_CLASSIFICATION	0.005572721387406908	DEFECT
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999218225504521	WITHOUT_CLASSIFICATION	7.817744954795396E-5	DEFECT
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9996918885668453	WITHOUT_CLASSIFICATION	3.0811143315470445E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9999017518952222	WITHOUT_CLASSIFICATION	9.824810477775781E-5	DEFECT
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9966815953887077	WITHOUT_CLASSIFICATION	0.003318404611292222	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999466655503173	WITHOUT_CLASSIFICATION	5.333444968269048E-4	DEFECT
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9993653265138438	WITHOUT_CLASSIFICATION	6.34673486156177E-4	DEFECT
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999736856464161	WITHOUT_CLASSIFICATION	2.6314353583963418E-5	DEFECT
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9997121370614209	WITHOUT_CLASSIFICATION	2.8786293857902657E-4	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999842685641407	WITHOUT_CLASSIFICATION	1.5731435859295642E-5	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.97207557353521	WITHOUT_CLASSIFICATION	0.027924426464790045	DEFECT
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999851921135687	WITHOUT_CLASSIFICATION	1.480788643124952E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.9999766011059894	WITHOUT_CLASSIFICATION	2.3398894010672992E-5	DEFECT
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9998274079576622	WITHOUT_CLASSIFICATION	1.7259204233774602E-4	DEFECT
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9998905154950908	WITHOUT_CLASSIFICATION	1.0948450490916282E-4	DEFECT
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9970187739774607	WITHOUT_CLASSIFICATION	0.002981226022539233	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9995955990856824	WITHOUT_CLASSIFICATION	4.0440091431761746E-4	DEFECT
specific arity	WITHOUT_CLASSIFICATION	0.9998932092150836	WITHOUT_CLASSIFICATION	1.0679078491640492E-4	DEFECT
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9997113623875501	WITHOUT_CLASSIFICATION	2.886376124499062E-4	DEFECT
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9998338413779695	WITHOUT_CLASSIFICATION	1.6615862203053167E-4	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9999834128840369	WITHOUT_CLASSIFICATION	1.658711596307293E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999690512744769	WITHOUT_CLASSIFICATION	3.094872552315198E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999690512744769	WITHOUT_CLASSIFICATION	3.094872552315198E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.99996416315325	WITHOUT_CLASSIFICATION	3.58368467499665E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.99996416315325	WITHOUT_CLASSIFICATION	3.58368467499665E-5	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997497222197502	WITHOUT_CLASSIFICATION	2.502777802497296E-4	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997497222197502	WITHOUT_CLASSIFICATION	2.502777802497296E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997911707370556	WITHOUT_CLASSIFICATION	2.0882926294436572E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997911707370556	WITHOUT_CLASSIFICATION	2.0882926294436572E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995175864651331	WITHOUT_CLASSIFICATION	4.8241353486684765E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995175864651331	WITHOUT_CLASSIFICATION	4.8241353486684765E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995175864651331	WITHOUT_CLASSIFICATION	4.8241353486684765E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999197193888782	WITHOUT_CLASSIFICATION	8.028061112176746E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998598129759116	WITHOUT_CLASSIFICATION	1.4018702408839846E-4	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998598129759116	WITHOUT_CLASSIFICATION	1.4018702408839846E-4	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998598129759116	WITHOUT_CLASSIFICATION	1.4018702408839846E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998595912334262	WITHOUT_CLASSIFICATION	1.4040876657392997E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998595912334262	WITHOUT_CLASSIFICATION	1.4040876657392997E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998595912334262	WITHOUT_CLASSIFICATION	1.4040876657392997E-4	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998898831805966	WITHOUT_CLASSIFICATION	1.1011681940349859E-4	DEFECT
backspace	WITHOUT_CLASSIFICATION	0.9999750339265753	WITHOUT_CLASSIFICATION	2.4966073424694802E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
package-private	WITHOUT_CLASSIFICATION	0.9998859382147578	WITHOUT_CLASSIFICATION	1.1406178524222258E-4	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.999937349490314	WITHOUT_CLASSIFICATION	6.265050968598972E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.999937349490314	WITHOUT_CLASSIFICATION	6.265050968598972E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9996827370456106	WITHOUT_CLASSIFICATION	3.172629543894689E-4	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998485861667233	WITHOUT_CLASSIFICATION	1.514138332766772E-4	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998485861667233	WITHOUT_CLASSIFICATION	1.514138332766772E-4	DEFECT
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.5976851383491193	WITHOUT_CLASSIFICATION	0.4023148616508806	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998800296243308	WITHOUT_CLASSIFICATION	1.1997037566927449E-4	DEFECT
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9997964102404685	WITHOUT_CLASSIFICATION	2.0358975953145493E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9882048877563065	WITHOUT_CLASSIFICATION	0.0117951122436934	DEFECT
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999513330663871	WITHOUT_CLASSIFICATION	4.86669336129251E-5	DEFECT
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9999864577496148	WITHOUT_CLASSIFICATION	1.3542250385096706E-5	DEFECT
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9999748467657027	WITHOUT_CLASSIFICATION	2.515323429732401E-5	DEFECT
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9979797316479944	WITHOUT_CLASSIFICATION	0.0020202683520056668	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998719283163147	WITHOUT_CLASSIFICATION	1.2807168368527883E-4	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999899895448433	WITHOUT_CLASSIFICATION	1.0010455156621242E-5	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998818621337924	WITHOUT_CLASSIFICATION	1.1813786620756496E-4	DEFECT
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9957591642311403	WITHOUT_CLASSIFICATION	0.004240835768859675	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998460459994245	WITHOUT_CLASSIFICATION	1.539540005754934E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9997681491322392	WITHOUT_CLASSIFICATION	2.3185086776084416E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9990366901521796	WITHOUT_CLASSIFICATION	9.633098478204302E-4	DEFECT
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.6040118524862891	DEFECT	0.39598814751371086	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9763085352999581	WITHOUT_CLASSIFICATION	0.023691464700041964	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999508802806238	WITHOUT_CLASSIFICATION	4.9119719376040564E-5	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999826153594662	WITHOUT_CLASSIFICATION	1.7384640533754257E-5	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999448890916185	WITHOUT_CLASSIFICATION	5.5110908381482575E-5	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998591123988632	WITHOUT_CLASSIFICATION	1.4088760113680697E-4	DEFECT
only public methods	WITHOUT_CLASSIFICATION	0.999932714076449	WITHOUT_CLASSIFICATION	6.728592355100868E-5	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999060129718351	WITHOUT_CLASSIFICATION	9.398702816484546E-5	DEFECT
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9982508020899198	WITHOUT_CLASSIFICATION	0.0017491979100801593	DEFECT
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.996023748455225	WITHOUT_CLASSIFICATION	0.003976251544774981	DEFECT
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998769619652202	WITHOUT_CLASSIFICATION	1.2303803477967465E-4	DEFECT
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999984048405195	WITHOUT_CLASSIFICATION	1.595159480496322E-6	DEFECT
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9999381787885949	WITHOUT_CLASSIFICATION	6.182121140505847E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.999962402404424	WITHOUT_CLASSIFICATION	3.75975955760226E-5	DEFECT
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9996110974097014	WITHOUT_CLASSIFICATION	3.88902590298571E-4	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9998677007380835	WITHOUT_CLASSIFICATION	1.3229926191651373E-4	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999871837870018	WITHOUT_CLASSIFICATION	1.2816212998124649E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998876415614122	WITHOUT_CLASSIFICATION	1.1235843858781503E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998876415614122	WITHOUT_CLASSIFICATION	1.1235843858781503E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998876415614122	WITHOUT_CLASSIFICATION	1.1235843858781503E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998876415614122	WITHOUT_CLASSIFICATION	1.1235843858781503E-4	DEFECT
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999956298324493	WITHOUT_CLASSIFICATION	4.3701675506624225E-6	DEFECT
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9974646489430081	WITHOUT_CLASSIFICATION	0.002535351056991838	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998190882010773	WITHOUT_CLASSIFICATION	1.8091179892267678E-4	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998190882010773	WITHOUT_CLASSIFICATION	1.8091179892267678E-4	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9998999593078203	WITHOUT_CLASSIFICATION	1.0004069217966744E-4	DEFECT
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9998722004640698	WITHOUT_CLASSIFICATION	1.2779953593022102E-4	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9988896527369046	WITHOUT_CLASSIFICATION	0.0011103472630954049	DEFECT
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999848558278462	WITHOUT_CLASSIFICATION	1.5144172153855942E-5	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9975392924051526	WITHOUT_CLASSIFICATION	0.0024607075948472707	DEFECT
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9933898608634801	WITHOUT_CLASSIFICATION	0.0066101391365199	DEFECT
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9997106119615305	WITHOUT_CLASSIFICATION	2.893880384694013E-4	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999942486111432	WITHOUT_CLASSIFICATION	5.751388856829033E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999942486111432	WITHOUT_CLASSIFICATION	5.751388856829033E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999942486111432	WITHOUT_CLASSIFICATION	5.751388856829033E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999942486111432	WITHOUT_CLASSIFICATION	5.751388856829033E-6	DEFECT
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999964793234976	WITHOUT_CLASSIFICATION	3.5206765025054776E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999653459703003	WITHOUT_CLASSIFICATION	3.465402969969861E-4	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999653459703003	WITHOUT_CLASSIFICATION	3.465402969969861E-4	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999653459703003	WITHOUT_CLASSIFICATION	3.465402969969861E-4	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9993421210466811	WITHOUT_CLASSIFICATION	6.578789533190133E-4	DEFECT
finally with no exception	WITHOUT_CLASSIFICATION	0.9999407124765763	WITHOUT_CLASSIFICATION	5.928752342365329E-5	DEFECT
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999887534171383	WITHOUT_CLASSIFICATION	1.1246582861705395E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9921160418693349	WITHOUT_CLASSIFICATION	0.007883958130665034	DEFECT
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999222131190187	WITHOUT_CLASSIFICATION	7.778688098130302E-4	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9977821300858328	WITHOUT_CLASSIFICATION	0.002217869914167141	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9977821300858328	WITHOUT_CLASSIFICATION	0.002217869914167141	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9992158050092592	WITHOUT_CLASSIFICATION	7.841949907408342E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9992158050092592	WITHOUT_CLASSIFICATION	7.841949907408342E-4	DEFECT
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999952982183559	WITHOUT_CLASSIFICATION	4.701781644194224E-6	DEFECT
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999863779816061	WITHOUT_CLASSIFICATION	1.3622018393951165E-5	DEFECT
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998057484778071	WITHOUT_CLASSIFICATION	1.9425152219280456E-4	DEFECT
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9897763667271418	WITHOUT_CLASSIFICATION	0.010223633272858206	DEFECT
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9998806584619769	WITHOUT_CLASSIFICATION	1.1934153802302798E-4	DEFECT
create the default thread group	WITHOUT_CLASSIFICATION	0.999993902873392	WITHOUT_CLASSIFICATION	6.097126608016976E-6	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998222394871924	WITHOUT_CLASSIFICATION	1.777605128075267E-4	DEFECT
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9997906202236836	WITHOUT_CLASSIFICATION	2.093797763164667E-4	DEFECT
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9986107174920895	WITHOUT_CLASSIFICATION	0.0013892825079104144	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999692049672876	WITHOUT_CLASSIFICATION	3.0795032712407936E-5	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999692049672876	WITHOUT_CLASSIFICATION	3.0795032712407936E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999241560758938	WITHOUT_CLASSIFICATION	7.584392410615005E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999241560758938	WITHOUT_CLASSIFICATION	7.584392410615005E-5	DEFECT
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9987547567819504	WITHOUT_CLASSIFICATION	0.001245243218049622	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9993738000887331	WITHOUT_CLASSIFICATION	6.261999112668815E-4	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998684066973973	WITHOUT_CLASSIFICATION	1.3159330260270437E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998684066973973	WITHOUT_CLASSIFICATION	1.3159330260270437E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998684066973973	WITHOUT_CLASSIFICATION	1.3159330260270437E-4	DEFECT
line 286	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 476	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 513	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 530	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 533	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 551	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
end loop	WITHOUT_CLASSIFICATION	0.9999751092418794	WITHOUT_CLASSIFICATION	2.489075812060222E-5	DEFECT
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996383604376671	WITHOUT_CLASSIFICATION	3.616395623329073E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9994055724653195	WITHOUT_CLASSIFICATION	5.944275346805367E-4	DEFECT
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9997529204988367	WITHOUT_CLASSIFICATION	2.4707950116335494E-4	DEFECT
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9713981314594956	WITHOUT_CLASSIFICATION	0.02860186854050442	DEFECT
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999763251075304	WITHOUT_CLASSIFICATION	2.36748924696333E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9555334119647794	WITHOUT_CLASSIFICATION	0.04446658803522068	DEFECT
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9997961814437926	WITHOUT_CLASSIFICATION	2.0381855620735365E-4	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9996782942961215	WITHOUT_CLASSIFICATION	3.2170570387856257E-4	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998665483549973	WITHOUT_CLASSIFICATION	1.334516450026044E-4	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999748791682546	WITHOUT_CLASSIFICATION	2.5120831745375526E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999789823725032	WITHOUT_CLASSIFICATION	2.1017627496777018E-5	DEFECT
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9999815947743568	WITHOUT_CLASSIFICATION	1.8405225643209613E-5	DEFECT
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9992695410910476	WITHOUT_CLASSIFICATION	7.304589089523792E-4	DEFECT
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9271471617808354	WITHOUT_CLASSIFICATION	0.07285283821916458	DEFECT
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9994512321011229	WITHOUT_CLASSIFICATION	5.487678988770617E-4	DEFECT
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9995009683452429	WITHOUT_CLASSIFICATION	4.990316547571572E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976110751018	WITHOUT_CLASSIFICATION	2.388924898143574E-6	DEFECT
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999451913263725	WITHOUT_CLASSIFICATION	5.480867362744959E-5	DEFECT
line 572	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 625	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 649	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 723	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 745	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 766	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 800	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 812	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 827	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 864	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 886	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 911	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 929	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 952	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 970	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 991	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1011	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1026	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1067	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1085	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1145	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1169	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1201	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1229	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1287	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1293	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1307	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1325	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1363	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1398	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1473	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1492	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1523	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1562	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1582	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1620	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1635	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1652	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1681	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1755	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1789	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998813228912777	WITHOUT_CLASSIFICATION	1.1867710872219973E-4	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999016912930795	WITHOUT_CLASSIFICATION	9.830870692049501E-5	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9960108677772761	WITHOUT_CLASSIFICATION	0.003989132222723856	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999186467886464	WITHOUT_CLASSIFICATION	8.135321135358838E-5	DEFECT
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999950510665145	WITHOUT_CLASSIFICATION	4.948933485493687E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999665218959373	WITHOUT_CLASSIFICATION	3.347810406280406E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999665218959373	WITHOUT_CLASSIFICATION	3.347810406280406E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999665218959373	WITHOUT_CLASSIFICATION	3.347810406280406E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999665218959373	WITHOUT_CLASSIFICATION	3.347810406280406E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9892935227440371	WITHOUT_CLASSIFICATION	0.010706477255962823	DEFECT
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.791458616594598	WITHOUT_CLASSIFICATION	0.20854138340540188	DEFECT
line 313	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 339	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 361	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 413	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 451	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 472	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 500	WITHOUT_CLASSIFICATION	0.9997716693882602	WITHOUT_CLASSIFICATION	2.2833061173972138E-4	DEFECT
line 515	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 555	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 582	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 619	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 636	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 669	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 703	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 776	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 814	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 823	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 854	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 872	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 905	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 925	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 958	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 992	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1047	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1072	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1081	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1108	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1136	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1168	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1192	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1241	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1267	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1286	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1301	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1314	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1333	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1362	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1395	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1420	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1439	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1476	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1535	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1588	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1618	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1643	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1669	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1728	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1753	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1779	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1794	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1812	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1837	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1895	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1925	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1950	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 1992	WITHOUT_CLASSIFICATION	0.9999211112454652	WITHOUT_CLASSIFICATION	7.888875453474813E-5	DEFECT
line 2014	WITHOUT_CLASSIFICATION	0.9999218171798013	WITHOUT_CLASSIFICATION	7.818282019856967E-5	DEFECT
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9996228052472312	WITHOUT_CLASSIFICATION	3.7719475276885996E-4	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9995988578337694	WITHOUT_CLASSIFICATION	4.0114216623057873E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9986598961117302	WITHOUT_CLASSIFICATION	0.0013401038882697744	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9944916582030646	WITHOUT_CLASSIFICATION	0.005508341796935267	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9944916582030646	WITHOUT_CLASSIFICATION	0.005508341796935267	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9944916582030646	WITHOUT_CLASSIFICATION	0.005508341796935267	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9944916582030646	WITHOUT_CLASSIFICATION	0.005508341796935267	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9989429808638801	WITHOUT_CLASSIFICATION	0.001057019136119891	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9989429808638801	WITHOUT_CLASSIFICATION	0.001057019136119891	DEFECT
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.8008835489759574	WITHOUT_CLASSIFICATION	0.19911645102404252	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998995496772262	WITHOUT_CLASSIFICATION	1.0045032277377378E-4	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998995496772262	WITHOUT_CLASSIFICATION	1.0045032277377378E-4	DEFECT
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9998610424063763	WITHOUT_CLASSIFICATION	1.3895759362362009E-4	DEFECT
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999387545695346	WITHOUT_CLASSIFICATION	6.12454304653142E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998192738926462	WITHOUT_CLASSIFICATION	1.8072610735369975E-4	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999555242738194	WITHOUT_CLASSIFICATION	4.447572618051677E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999555242738194	WITHOUT_CLASSIFICATION	4.447572618051677E-5	DEFECT
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999813866753327	WITHOUT_CLASSIFICATION	1.8613324667341415E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9994929466103913	WITHOUT_CLASSIFICATION	5.070533896085653E-4	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9994929466103913	WITHOUT_CLASSIFICATION	5.070533896085653E-4	DEFECT
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9983943194738908	WITHOUT_CLASSIFICATION	0.0016056805261091512	DEFECT
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.985546518237729	WITHOUT_CLASSIFICATION	0.014453481762271075	DEFECT
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999659936350836	WITHOUT_CLASSIFICATION	3.4006364916395294E-4	DEFECT
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999779620232189	WITHOUT_CLASSIFICATION	2.2037976781117134E-5	DEFECT
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.999909937700216	WITHOUT_CLASSIFICATION	9.006229978412452E-5	DEFECT
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998897935084615	WITHOUT_CLASSIFICATION	1.1020649153846273E-4	DEFECT
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999305347284692	WITHOUT_CLASSIFICATION	6.946527153092628E-5	DEFECT
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999460001084564	WITHOUT_CLASSIFICATION	5.39998915435994E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999636915141872	WITHOUT_CLASSIFICATION	3.630848581280171E-5	DEFECT
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9989765695425722	WITHOUT_CLASSIFICATION	0.0010234304574278348	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9990363431572574	WITHOUT_CLASSIFICATION	9.636568427425652E-4	DEFECT
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9993395733973769	WITHOUT_CLASSIFICATION	6.604266026229735E-4	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999092711818701	WITHOUT_CLASSIFICATION	9.072881812987052E-5	DEFECT
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9908908834953707	WITHOUT_CLASSIFICATION	0.009109116504629327	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998003242115184	WITHOUT_CLASSIFICATION	1.9967578848159752E-4	DEFECT
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999311711119173	WITHOUT_CLASSIFICATION	6.882888808269226E-5	DEFECT
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9993422313252591	WITHOUT_CLASSIFICATION	6.577686747408696E-4	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9949995770964005	WITHOUT_CLASSIFICATION	0.0050004229035995424	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999424785358679	WITHOUT_CLASSIFICATION	5.7521464132019866E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999424785358679	WITHOUT_CLASSIFICATION	5.7521464132019866E-5	DEFECT
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9996438256088979	WITHOUT_CLASSIFICATION	3.561743911021257E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997889547776854	WITHOUT_CLASSIFICATION	2.1104522231467224E-4	DEFECT
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9993686070039728	WITHOUT_CLASSIFICATION	6.313929960273028E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999760180809014	WITHOUT_CLASSIFICATION	2.3981919098552077E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999014318391088	WITHOUT_CLASSIFICATION	9.856816089120205E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999014318391088	WITHOUT_CLASSIFICATION	9.856816089120205E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999014318391088	WITHOUT_CLASSIFICATION	9.856816089120205E-5	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999522021362874	WITHOUT_CLASSIFICATION	4.779786371266298E-5	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989740579441556	WITHOUT_CLASSIFICATION	0.0010259420558444096	DEFECT
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999296793126798	WITHOUT_CLASSIFICATION	7.032068732009933E-5	DEFECT
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999885151565148	WITHOUT_CLASSIFICATION	1.1484843485260034E-5	DEFECT
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.9999865866499913	WITHOUT_CLASSIFICATION	1.3413350008666078E-5	DEFECT
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999629135624362	WITHOUT_CLASSIFICATION	3.708643756384575E-5	DEFECT
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9998448813504167	WITHOUT_CLASSIFICATION	1.5511864958334557E-4	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9989592041172207	WITHOUT_CLASSIFICATION	0.0010407958827793097	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999617419454566	WITHOUT_CLASSIFICATION	3.825805454334212E-5	DEFECT
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999940597014055	WITHOUT_CLASSIFICATION	5.940298594388809E-6	DEFECT
reset buffer	WITHOUT_CLASSIFICATION	0.9998811201286283	WITHOUT_CLASSIFICATION	1.1887987137178688E-4	DEFECT
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9999571496324052	WITHOUT_CLASSIFICATION	4.285036759473645E-5	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8834279947572324	WITHOUT_CLASSIFICATION	0.11657200524276752	DEFECT
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9998638757494993	WITHOUT_CLASSIFICATION	1.361242505006596E-4	DEFECT
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999800339585732	WITHOUT_CLASSIFICATION	1.996604142688185E-5	DEFECT
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998658148974647	WITHOUT_CLASSIFICATION	1.3418510253518544E-4	DEFECT
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999604970251273	WITHOUT_CLASSIFICATION	3.9502974872574006E-5	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999499010041262	WITHOUT_CLASSIFICATION	5.009899587381695E-5	DEFECT
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9997669625106801	WITHOUT_CLASSIFICATION	2.3303748932000402E-4	DEFECT
FIXME: This is a system error based on errno	DEFECT	0.9421572195999136	WITHOUT_CLASSIFICATION	0.05784278040008638	DEFECT
TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].	DEFECT	0.9880648741372074	DEFECT	0.011935125862792662	WITHOUT_CLASSIFICATION
TODO: make sure it's really safe to not to copy it	DEFECT	0.8188387552414641	WITHOUT_CLASSIFICATION	0.18116124475853596	DEFECT
TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.	DEFECT	0.998934222721114	DEFECT	0.0010657772788860154	WITHOUT_CLASSIFICATION
FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe	DEFECT	0.9666725255163294	DEFECT	0.03332747448367058	WITHOUT_CLASSIFICATION
dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http:code.google.com/p/android/issues/detail?id=2812	DEFECT	0.9874977898239257	WITHOUT_CLASSIFICATION	0.0125022101760743	DEFECT
FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.	DEFECT	0.9718150109981402	WITHOUT_CLASSIFICATION	0.02818498900185991	DEFECT
TODO: need to isolate the "current" thread from class creation	DEFECT	0.8588866241742855	WITHOUT_CLASSIFICATION	0.1411133758257145	DEFECT
FIXME: not correct exception	DEFECT	0.9459155512189562	WITHOUT_CLASSIFICATION	0.054084448781043876	DEFECT
XXX actually only on windows...	DEFECT	0.9968393674280459	WITHOUT_CLASSIFICATION	0.0031606325719541212	DEFECT
Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?	DEFECT	0.9979916859803398	WITHOUT_CLASSIFICATION	0.002008314019660164	DEFECT
FIXME can't use static; would interfere with other runtimes in the same JVM	DEFECT	0.8556793352357597	WITHOUT_CLASSIFICATION	0.14432066476424027	DEFECT
TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close	DEFECT	0.9544670602709201	WITHOUT_CLASSIFICATION	0.04553293972907995	DEFECT
TODO: This is an freopen in MRI, this is close, but not quite the same	DEFECT	0.9210291979753438	DEFECT	0.07897080202465619	WITHOUT_CLASSIFICATION
TODO: sys fail	DEFECT	0.9439663202158001	WITHOUT_CLASSIFICATION	0.056033679784200055	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9822981510657143	WITHOUT_CLASSIFICATION	0.01770184893428567	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9822981510657143	WITHOUT_CLASSIFICATION	0.01770184893428567	DEFECT
FIXME: check how ruby 1.9 handles this	DEFECT	0.9917791609498336	WITHOUT_CLASSIFICATION	0.008220839050166372	DEFECT
FIXME: MRI has special case for constants here	DEFECT	0.9979534780630679	WITHOUT_CLASSIFICATION	0.0020465219369321143	DEFECT
FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.	DEFECT	0.9722069457480677	WITHOUT_CLASSIFICATION	0.027793054251932323	DEFECT
ENEBO: Very wrong	DEFECT	0.9995262136285573	WITHOUT_CLASSIFICATION	4.7378637144267677E-4	DEFECT
ENEBO: Very wrong	DEFECT	0.9995262136285573	WITHOUT_CLASSIFICATION	4.7378637144267677E-4	DEFECT
synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code	DEFECT	0.9647501637723134	WITHOUT_CLASSIFICATION	0.035249836227686744	DEFECT
FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...	DEFECT	0.9674473500886965	WITHOUT_CLASSIFICATION	0.0325526499113034	DEFECT
FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.	DEFECT	0.9723241587007637	WITHOUT_CLASSIFICATION	0.02767584129923626	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.8045045035048328	WITHOUT_CLASSIFICATION	0.1954954964951672	DEFECT
TODO: take BigDecimal.mode into account.	DEFECT	0.872204562190262	WITHOUT_CLASSIFICATION	0.12779543780973807	DEFECT
TODO: full-precision divmod is 1000x slower than MRI!	DEFECT	0.6619200003366248	WITHOUT_CLASSIFICATION	0.3380799996633751	DEFECT
TODO: proper sign	DEFECT	0.9269335123049055	WITHOUT_CLASSIFICATION	0.07306648769509454	DEFECT
FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.	DEFECT	0.5036074701706367	DEFECT	0.4963925298293633	WITHOUT_CLASSIFICATION
FIXME: -x flag not supported case 'x' : break;	DEFECT	0.891148536001417	WITHOUT_CLASSIFICATION	0.10885146399858303	DEFECT
FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.	DEFECT	0.6505606239040983	WITHOUT_CLASSIFICATION	0.34943937609590187	DEFECT
FIXME: This is causing a verification error for some reason nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);	DEFECT	0.9416670102983705	WITHOUT_CLASSIFICATION	0.05833298970162945	DEFECT
FIXME: for some reason this dispatcher causes a VerifyError... classClass.dispatcher = callbackFactory.createDispatcher(classClass);	DEFECT	0.8389864929864079	WITHOUT_CLASSIFICATION	0.161013507013592	DEFECT
TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : "caseNode is not null";	DEFECT	0.6480526178375693	DEFECT	0.3519473821624307	WITHOUT_CLASSIFICATION
TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet	DEFECT	0.929926839702312	WITHOUT_CLASSIFICATION	0.07007316029768794	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
FIXME: this should reset to what it was before	DEFECT	0.9727129372372378	WITHOUT_CLASSIFICATION	0.027287062762762142	DEFECT
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.9923143004405678	WITHOUT_CLASSIFICATION	0.007685699559432174	DEFECT
SSS FIXME: Incorect!	DEFECT	0.9963000205299006	WITHOUT_CLASSIFICATION	0.0036999794700993583	DEFECT
SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.	DEFECT	0.994970402652184	WITHOUT_CLASSIFICATION	0.0050295973478161095	DEFECT
SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later	DEFECT	0.9933886031096765	WITHOUT_CLASSIFICATION	0.006611396890323505	DEFECT
IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!	DEFECT	0.9998814283714279	WITHOUT_CLASSIFICATION	1.1857162857211513E-4	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.993743993765816	WITHOUT_CLASSIFICATION	0.006256006234184019	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.993743993765816	WITHOUT_CLASSIFICATION	0.006256006234184019	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9974540355539409	WITHOUT_CLASSIFICATION	0.002545964446059196	DEFECT
SSS FIXME: Verify semantics of this instruction	DEFECT	0.9902361851096017	WITHOUT_CLASSIFICATION	0.009763814890398412	DEFECT
The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?	DEFECT	0.652907982761813	WITHOUT_CLASSIFICATION	0.3470920172381869	DEFECT
SSS FIXME: For constant arrays, we should never get here!	DEFECT	0.9849143888158668	WITHOUT_CLASSIFICATION	0.01508561118413326	DEFECT
FIXME: This is wrong	DEFECT	0.8647967907109491	WITHOUT_CLASSIFICATION	0.13520320928905097	DEFECT
FIXME: may need to broaden for IPV6 IP address strings	DEFECT	0.9901249181154059	WITHOUT_CLASSIFICATION	0.009875081884594048	DEFECT
XXX Wrong, but will have to do for now	DEFECT	0.9999303794504955	WITHOUT_CLASSIFICATION	6.962054950457142E-5	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.5037101133904271	WITHOUT_CLASSIFICATION	0.49628988660957285	DEFECT
FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();	DEFECT	0.9981214790919323	WITHOUT_CLASSIFICATION	0.0018785209080677012	DEFECT
If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).	DEFECT	0.9990853560994504	WITHOUT_CLASSIFICATION	9.146439005495168E-4	DEFECT
FIXME: Broken but behaving	DEFECT	0.8226058594560053	DEFECT	0.17739414054399466	WITHOUT_CLASSIFICATION
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.6699649558835559	WITHOUT_CLASSIFICATION	0.33003504411644413	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.6699649558835559	WITHOUT_CLASSIFICATION	0.33003504411644413	DEFECT
FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... assert currentModule != null : "Can't push null RubyClass";	DEFECT	0.7275241746684056	WITHOUT_CLASSIFICATION	0.2724758253315944	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.999985520126366	WITHOUT_CLASSIFICATION	1.4479873634054078E-5	DEFECT
FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!	DEFECT	0.9975204789006673	WITHOUT_CLASSIFICATION	0.0024795210993327505	DEFECT
MRI 1.8 behavior: this combination of flags is not allowed	DEFECT	0.9963402546238759	WITHOUT_CLASSIFICATION	0.003659745376124121	DEFECT
FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?	DEFECT	0.5051843265232698	WITHOUT_CLASSIFICATION	0.49481567347673006	DEFECT
TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.	DEFECT	0.9364250074351352	DEFECT	0.06357499256486474	WITHOUT_CLASSIFICATION
This is the result of a bug that left off all trailing arguments. E.g.: system "ls", "-1", "dir" would be seen as system "ls"	DEFECT	0.9918011770952841	WITHOUT_CLASSIFICATION	0.008198822904715889	DEFECT
We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff	DEFECT	0.8445846084080592	WITHOUT_CLASSIFICATION	0.15541539159194087	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9974540355539409	WITHOUT_CLASSIFICATION	0.002545964446059196	DEFECT
This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.	DEFECT	0.9952828319636243	WITHOUT_CLASSIFICATION	0.004717168036375725	DEFECT
FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.	DEFECT	0.980581579016952	WITHOUT_CLASSIFICATION	0.01941842098304809	DEFECT
SSS FIXME: Why is the for node being built using closures and not as a "regular" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When "each" and the block it consumes are inlined together in the caller, the "loop" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another!	DEFECT	0.6470836215902454	WITHOUT_CLASSIFICATION	0.35291637840975454	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.8045045035048328	WITHOUT_CLASSIFICATION	0.1954954964951672	DEFECT
TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing assert bodyNode != null : "bodyNode is not null";	DEFECT	0.9545738755252829	DEFECT	0.04542612447471706	WITHOUT_CLASSIFICATION
FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not	DEFECT	0.5100704012649546	DEFECT	0.4899295987350455	WITHOUT_CLASSIFICATION
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.9923143004405678	WITHOUT_CLASSIFICATION	0.007685699559432174	DEFECT
zero args with block FIXME: omit args index; subtract one from normal block index	DEFECT	0.9995426700135333	WITHOUT_CLASSIFICATION	4.573299864667828E-4	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
FIXME: Broken but behaving	DEFECT	0.8226058594560053	DEFECT	0.17739414054399466	WITHOUT_CLASSIFICATION
TODO: we loose encoding information here, fix it	DEFECT	0.6464032398528877	DEFECT	0.35359676014711233	WITHOUT_CLASSIFICATION
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
TODO: don't require pop	DEFECT	0.9010344396722935	WITHOUT_CLASSIFICATION	0.0989655603277065	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.5037101133904271	WITHOUT_CLASSIFICATION	0.49628988660957285	DEFECT
vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue	DEFECT	0.988119851424884	WITHOUT_CLASSIFICATION	0.01188014857511595	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.6699649558835559	WITHOUT_CLASSIFICATION	0.33003504411644413	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.6699649558835559	WITHOUT_CLASSIFICATION	0.33003504411644413	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.999985520126366	WITHOUT_CLASSIFICATION	1.4479873634054078E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.999985520126366	WITHOUT_CLASSIFICATION	1.4479873634054078E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.999985520126366	WITHOUT_CLASSIFICATION	1.4479873634054078E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.999985520126366	WITHOUT_CLASSIFICATION	1.4479873634054078E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.999985520126366	WITHOUT_CLASSIFICATION	1.4479873634054078E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.999985520126366	WITHOUT_CLASSIFICATION	1.4479873634054078E-5	DEFECT
TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).	DEFECT	0.6597376950568212	WITHOUT_CLASSIFICATION	0.3402623049431789	DEFECT
