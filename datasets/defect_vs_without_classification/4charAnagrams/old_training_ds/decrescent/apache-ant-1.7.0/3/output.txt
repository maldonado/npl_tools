/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999937353675955	WITHOUT_CLASSIFICATION	6.2646324045059314E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9997423974292386	WITHOUT_CLASSIFICATION	2.576025707614324E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.99999937674353	WITHOUT_CLASSIFICATION	6.232564699645618E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.99999937674353	WITHOUT_CLASSIFICATION	6.232564699645618E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999811967025436	WITHOUT_CLASSIFICATION	1.8803297456396146E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999994781637968	WITHOUT_CLASSIFICATION	5.218362032025494E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999905979058427	WITHOUT_CLASSIFICATION	9.402094157335946E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999991192998955	WITHOUT_CLASSIFICATION	8.807001046043253E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999999988350385	WITHOUT_CLASSIFICATION	1.1649614942010692E-8	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999998908500667	WITHOUT_CLASSIFICATION	1.0914993332844158E-7	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9954323732525333	WITHOUT_CLASSIFICATION	0.004567626747466631	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999996930484583	WITHOUT_CLASSIFICATION	3.069515417428604E-7	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999973772546005	WITHOUT_CLASSIFICATION	2.6227453995048095E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999713870774986	WITHOUT_CLASSIFICATION	2.861292250145126E-5	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999966557444108	WITHOUT_CLASSIFICATION	3.3442555892339476E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9997037699158647	WITHOUT_CLASSIFICATION	2.9623008413523765E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9997037699158647	WITHOUT_CLASSIFICATION	2.9623008413523765E-4	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999673607058341	WITHOUT_CLASSIFICATION	3.263929416586556E-5	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999993411345501	WITHOUT_CLASSIFICATION	6.588654498390919E-7	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999997955742959	WITHOUT_CLASSIFICATION	2.0442570415196773E-7	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999989302127779	WITHOUT_CLASSIFICATION	1.069787222138786E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.99989857016293	WITHOUT_CLASSIFICATION	1.0142983706997813E-4	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999987454492992	WITHOUT_CLASSIFICATION	1.2545507007643536E-6	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999976038291091	WITHOUT_CLASSIFICATION	2.3961708909969257E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999999370085157	WITHOUT_CLASSIFICATION	6.299148430235235E-7	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999942348637987	WITHOUT_CLASSIFICATION	5.765136201334604E-6	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999990755915292	WITHOUT_CLASSIFICATION	9.244084706664866E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999899049104201	WITHOUT_CLASSIFICATION	1.0095089580004846E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999693609566	WITHOUT_CLASSIFICATION	3.063904343121343E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999998928967637	WITHOUT_CLASSIFICATION	1.0710323618499063E-7	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999952213233	WITHOUT_CLASSIFICATION	4.77867669863679E-9	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999866584881	WITHOUT_CLASSIFICATION	1.334151200949232E-8	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999998094078651	WITHOUT_CLASSIFICATION	1.9059213487871934E-7	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.999998682514753	WITHOUT_CLASSIFICATION	1.317485247045037E-6	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999980607649502	WITHOUT_CLASSIFICATION	1.9392350498313467E-6	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999994410194488	WITHOUT_CLASSIFICATION	5.589805511824443E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999940737049583	WITHOUT_CLASSIFICATION	5.9262950416493435E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999989302127779	WITHOUT_CLASSIFICATION	1.069787222138786E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999982455413915	WITHOUT_CLASSIFICATION	1.7544586084994175E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.999998797323618	WITHOUT_CLASSIFICATION	1.2026763821223713E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.999998797323618	WITHOUT_CLASSIFICATION	1.2026763821223713E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999986902948299	WITHOUT_CLASSIFICATION	1.3097051701104423E-6	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999995881773689	WITHOUT_CLASSIFICATION	4.118226311055153E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999954929743864	WITHOUT_CLASSIFICATION	4.507025613627696E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999954929743864	WITHOUT_CLASSIFICATION	4.507025613627696E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999973650586441	WITHOUT_CLASSIFICATION	2.6349413558579564E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999885913413581	WITHOUT_CLASSIFICATION	1.1408658641835321E-5	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999994571238071	WITHOUT_CLASSIFICATION	5.428761928934234E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999978109336117	WITHOUT_CLASSIFICATION	2.18906638829269E-6	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999950024836265	WITHOUT_CLASSIFICATION	4.997516373519458E-6	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999975298361805	WITHOUT_CLASSIFICATION	2.470163819527208E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999778393435758	WITHOUT_CLASSIFICATION	2.2160656424256627E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999852951743	WITHOUT_CLASSIFICATION	1.4704825741897753E-8	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999852951743	WITHOUT_CLASSIFICATION	1.4704825741897753E-8	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999994444298357	WITHOUT_CLASSIFICATION	5.555701643512337E-7	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999839610844923	WITHOUT_CLASSIFICATION	1.603891550775218E-5	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.999999950490471	WITHOUT_CLASSIFICATION	4.9509529017488514E-8	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.999999950490471	WITHOUT_CLASSIFICATION	4.9509529017488514E-8	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999998509313031	WITHOUT_CLASSIFICATION	1.490686969817528E-7	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999944216578589	WITHOUT_CLASSIFICATION	5.578342141129539E-6	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999746696894224	WITHOUT_CLASSIFICATION	2.5330310577566357E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999995766832351	WITHOUT_CLASSIFICATION	4.233167647968099E-7	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999865995554098	WITHOUT_CLASSIFICATION	1.3400444590260954E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999949374725547	WITHOUT_CLASSIFICATION	5.062527445299726E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999999221488955	WITHOUT_CLASSIFICATION	7.785110447380116E-8	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999997171379135	WITHOUT_CLASSIFICATION	2.8286208655516506E-7	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999999680440891	WITHOUT_CLASSIFICATION	3.195591089003024E-8	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999980865225758	WITHOUT_CLASSIFICATION	1.9134774242755464E-6	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999999173326365	WITHOUT_CLASSIFICATION	8.266736351508412E-8	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.999998007466356	WITHOUT_CLASSIFICATION	1.992533643989756E-6	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9963531642761324	WITHOUT_CLASSIFICATION	0.003646835723867473	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999380000637045	WITHOUT_CLASSIFICATION	6.199993629551435E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999993168121335	WITHOUT_CLASSIFICATION	6.831878665524317E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999993168121335	WITHOUT_CLASSIFICATION	6.831878665524317E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999995766832351	WITHOUT_CLASSIFICATION	4.233167647968099E-7	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999991404212737	WITHOUT_CLASSIFICATION	8.595787263814155E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999995766832351	WITHOUT_CLASSIFICATION	4.233167647968099E-7	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999994753457682	WITHOUT_CLASSIFICATION	5.246542317208582E-7	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999991404212737	WITHOUT_CLASSIFICATION	8.595787263814155E-7	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999993565533741	WITHOUT_CLASSIFICATION	6.434466258855877E-7	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999995772522895	WITHOUT_CLASSIFICATION	4.2274771051149863E-7	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.999999287754943	WITHOUT_CLASSIFICATION	7.122450570098579E-7	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999990610868787	WITHOUT_CLASSIFICATION	9.389131212905798E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980675819569	WITHOUT_CLASSIFICATION	1.9324180431528486E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980675819569	WITHOUT_CLASSIFICATION	1.9324180431528486E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980675819569	WITHOUT_CLASSIFICATION	1.9324180431528486E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980675819569	WITHOUT_CLASSIFICATION	1.9324180431528486E-6	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.999987806190132	WITHOUT_CLASSIFICATION	1.2193809868071094E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999995112895332	WITHOUT_CLASSIFICATION	4.887104667842036E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999995112895332	WITHOUT_CLASSIFICATION	4.887104667842036E-7	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999999310746661	WITHOUT_CLASSIFICATION	6.892533388248167E-8	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999995112895332	WITHOUT_CLASSIFICATION	4.887104667842036E-7	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999984580784	WITHOUT_CLASSIFICATION	1.5419214953059083E-9	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999826226809841	WITHOUT_CLASSIFICATION	1.737731901581737E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.99999980899397	WITHOUT_CLASSIFICATION	1.9100602997010173E-7	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999993150246695	WITHOUT_CLASSIFICATION	6.849753304355353E-7	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999997947712497	WITHOUT_CLASSIFICATION	2.052287503615921E-7	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999043442535	WITHOUT_CLASSIFICATION	9.565574658514685E-8	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999980374642746	WITHOUT_CLASSIFICATION	1.962535725310373E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.99999975709823	WITHOUT_CLASSIFICATION	2.429017700248899E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999972293667281	WITHOUT_CLASSIFICATION	2.770633272001959E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999989245957381	WITHOUT_CLASSIFICATION	1.0754042618457764E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999968397253991	WITHOUT_CLASSIFICATION	3.1602746009671094E-6	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999453970815	WITHOUT_CLASSIFICATION	5.4602918554921475E-8	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999990228290381	WITHOUT_CLASSIFICATION	9.771709619247132E-7	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999997262766849	WITHOUT_CLASSIFICATION	2.737233151549374E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999993697309221	WITHOUT_CLASSIFICATION	6.302690779728728E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999996850945296	WITHOUT_CLASSIFICATION	3.1490547036668743E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.999993826572099	WITHOUT_CLASSIFICATION	6.173427900999416E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.999988126338799	WITHOUT_CLASSIFICATION	1.1873661201068518E-5	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999445083153	WITHOUT_CLASSIFICATION	5.549168468376628E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.999993922755957	WITHOUT_CLASSIFICATION	6.077244043091591E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999999298512231	WITHOUT_CLASSIFICATION	7.014877685408477E-8	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999963362513309	WITHOUT_CLASSIFICATION	3.6637486691473105E-6	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999955897187955	WITHOUT_CLASSIFICATION	4.41028120446014E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999972293667281	WITHOUT_CLASSIFICATION	2.770633272001959E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999989102140484	WITHOUT_CLASSIFICATION	1.0897859516036775E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999988727836524	WITHOUT_CLASSIFICATION	1.1272163475269833E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999952093995008	WITHOUT_CLASSIFICATION	4.790600499176817E-6	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999895773333929	WITHOUT_CLASSIFICATION	1.0422666607238948E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999798465078	WITHOUT_CLASSIFICATION	2.015349226405084E-8	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999978232020267	WITHOUT_CLASSIFICATION	2.176797973231309E-6	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999056423863	WITHOUT_CLASSIFICATION	9.435761364977091E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999734353005099	WITHOUT_CLASSIFICATION	2.656469949022828E-5	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.999993763271457	WITHOUT_CLASSIFICATION	6.23672854296326E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999827904669049	WITHOUT_CLASSIFICATION	1.720953309507615E-5	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999928516125987	WITHOUT_CLASSIFICATION	7.148387401272125E-6	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999866089176803	WITHOUT_CLASSIFICATION	1.3391082319624878E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.999999449684834	WITHOUT_CLASSIFICATION	5.503151659006026E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999984092260156	WITHOUT_CLASSIFICATION	1.5907739844817093E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999993434498073	WITHOUT_CLASSIFICATION	6.56550192679292E-7	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999992333830428	WITHOUT_CLASSIFICATION	7.666169573037322E-7	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999998810990166	WITHOUT_CLASSIFICATION	1.1890098341010038E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.999998791307318	WITHOUT_CLASSIFICATION	1.2086926820435492E-6	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999794871017721	WITHOUT_CLASSIFICATION	2.0512898227973266E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999954291088369	WITHOUT_CLASSIFICATION	4.570891163041414E-6	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999972328555748	WITHOUT_CLASSIFICATION	2.7671444251565277E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999734129299	WITHOUT_CLASSIFICATION	2.6587070006132615E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999976023487692	WITHOUT_CLASSIFICATION	2.39765123086895E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9996493533219374	WITHOUT_CLASSIFICATION	3.506466780626417E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999708692344026	WITHOUT_CLASSIFICATION	2.9130765597354977E-5	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.999999919437451	WITHOUT_CLASSIFICATION	8.056254895559515E-8	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999989556181138	WITHOUT_CLASSIFICATION	1.044381886185423E-6	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999993788258055	WITHOUT_CLASSIFICATION	6.211741945227763E-7	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999995898869297	WITHOUT_CLASSIFICATION	4.1011307021538574E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999920974323945	WITHOUT_CLASSIFICATION	7.902567605507397E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999339174709	WITHOUT_CLASSIFICATION	6.608252907037729E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999998300950168	WITHOUT_CLASSIFICATION	1.6990498308675275E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999999697196638	WITHOUT_CLASSIFICATION	3.0280336167780324E-8	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.999981263229224	WITHOUT_CLASSIFICATION	1.8736770776045197E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999984580784	WITHOUT_CLASSIFICATION	1.5419214953059083E-9	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999999127290756	WITHOUT_CLASSIFICATION	8.727092425703398E-8	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999998778928341	WITHOUT_CLASSIFICATION	1.2210716594972565E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999998840500357	WITHOUT_CLASSIFICATION	1.1594996424960956E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999930018319569	WITHOUT_CLASSIFICATION	6.998168043082026E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9998774922066478	WITHOUT_CLASSIFICATION	1.2250779335221758E-4	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999946171826529	WITHOUT_CLASSIFICATION	5.382817347052621E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999544300941088	WITHOUT_CLASSIFICATION	4.556990589117546E-5	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999977176134444	WITHOUT_CLASSIFICATION	2.2823865555790533E-6	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999988986829188	WITHOUT_CLASSIFICATION	1.1013170811086739E-6	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999961237584449	WITHOUT_CLASSIFICATION	3.87624155504241E-6	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9998552432430188	WITHOUT_CLASSIFICATION	1.4475675698116385E-4	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999989442860359	WITHOUT_CLASSIFICATION	1.0557139641219615E-6	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.999998959754338	WITHOUT_CLASSIFICATION	1.0402456619891538E-6	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999999621413899	WITHOUT_CLASSIFICATION	3.78586100493285E-8	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9995066429141928	WITHOUT_CLASSIFICATION	4.933570858072331E-4	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999999097086083	WITHOUT_CLASSIFICATION	9.029139171168827E-8	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999792673866053	WITHOUT_CLASSIFICATION	2.0732613394746543E-5	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999881640820352	WITHOUT_CLASSIFICATION	1.1835917964775837E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9998708846515395	WITHOUT_CLASSIFICATION	1.2911534846052095E-4	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999867712436816	WITHOUT_CLASSIFICATION	1.3228756318426845E-5	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999952960902	WITHOUT_CLASSIFICATION	4.703909907735141E-9	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999983221922344	WITHOUT_CLASSIFICATION	1.6778077655486151E-6	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999938077453878	WITHOUT_CLASSIFICATION	6.192254612234535E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999998274722617	WITHOUT_CLASSIFICATION	1.725277383718456E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999998274722617	WITHOUT_CLASSIFICATION	1.725277383718456E-7	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999994687865414	WITHOUT_CLASSIFICATION	5.312134585805298E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999255020336332	WITHOUT_CLASSIFICATION	7.449796636685062E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999992379956296	WITHOUT_CLASSIFICATION	7.62004370425419E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999992379956296	WITHOUT_CLASSIFICATION	7.62004370425419E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999997920685183	WITHOUT_CLASSIFICATION	2.0793148171505998E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999996962542633	WITHOUT_CLASSIFICATION	3.037457366407435E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999981936006821	WITHOUT_CLASSIFICATION	1.806399317854793E-6	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9998863205077931	WITHOUT_CLASSIFICATION	1.1367949220694016E-4	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999480624886552	WITHOUT_CLASSIFICATION	5.193751134481054E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999992745307479	WITHOUT_CLASSIFICATION	7.254692520593757E-7	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999984214858508	WITHOUT_CLASSIFICATION	1.5785141491502158E-6	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999984095111123	WITHOUT_CLASSIFICATION	1.5904888877068887E-6	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999994875633882	WITHOUT_CLASSIFICATION	5.124366118171767E-7	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999996868348676	WITHOUT_CLASSIFICATION	3.1316513247062205E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999350934418686	WITHOUT_CLASSIFICATION	6.490655813143134E-5	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999999511944628	WITHOUT_CLASSIFICATION	4.880553717099197E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998431073794	WITHOUT_CLASSIFICATION	1.5689262045630594E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999991192998955	WITHOUT_CLASSIFICATION	8.807001046043253E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999999988350385	WITHOUT_CLASSIFICATION	1.1649614942010692E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999993168121335	WITHOUT_CLASSIFICATION	6.831878665524317E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998431073794	WITHOUT_CLASSIFICATION	1.5689262045630594E-7	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999928001593148	WITHOUT_CLASSIFICATION	7.199840685140045E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999514451696613	WITHOUT_CLASSIFICATION	4.855483033877647E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999514451696613	WITHOUT_CLASSIFICATION	4.855483033877647E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999514451696613	WITHOUT_CLASSIFICATION	4.855483033877647E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999987313582336	WITHOUT_CLASSIFICATION	1.2686417663731349E-6	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999997431819602	WITHOUT_CLASSIFICATION	2.5681803986210185E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999992004560271	WITHOUT_CLASSIFICATION	7.995439730074176E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999982102120367	WITHOUT_CLASSIFICATION	1.7897879632500923E-6	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999985042384195	WITHOUT_CLASSIFICATION	1.495761580577497E-6	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999998345956475	WITHOUT_CLASSIFICATION	1.6540435253774032E-7	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999928001593148	WITHOUT_CLASSIFICATION	7.199840685140045E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999969104125505	WITHOUT_CLASSIFICATION	3.0895874494705443E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999996141788958	WITHOUT_CLASSIFICATION	3.858211041702297E-7	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999915321698954	WITHOUT_CLASSIFICATION	8.467830104534166E-6	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999909793474921	WITHOUT_CLASSIFICATION	9.020652507858412E-6	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999997714126967	WITHOUT_CLASSIFICATION	2.2858730322477612E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999993168121335	WITHOUT_CLASSIFICATION	6.831878665524317E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999993168121335	WITHOUT_CLASSIFICATION	6.831878665524317E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999994875633882	WITHOUT_CLASSIFICATION	5.124366118171767E-7	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999969104125505	WITHOUT_CLASSIFICATION	3.0895874494705443E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999998709709846	WITHOUT_CLASSIFICATION	1.2902901539967505E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999998709709846	WITHOUT_CLASSIFICATION	1.2902901539967505E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999998709709846	WITHOUT_CLASSIFICATION	1.2902901539967505E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999653292303	WITHOUT_CLASSIFICATION	3.4670769618521976E-8	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999653292303	WITHOUT_CLASSIFICATION	3.4670769618521976E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999714146038	WITHOUT_CLASSIFICATION	2.858539621036752E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999714146038	WITHOUT_CLASSIFICATION	2.858539621036752E-8	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999999760492252	WITHOUT_CLASSIFICATION	2.395077479139228E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999651542032	WITHOUT_CLASSIFICATION	3.4845796761487206E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999651542032	WITHOUT_CLASSIFICATION	3.4845796761487206E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999307577417	WITHOUT_CLASSIFICATION	6.92422582601413E-8	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999987578108814	WITHOUT_CLASSIFICATION	1.2421891185576097E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999999344159649	WITHOUT_CLASSIFICATION	6.558403503616311E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999643901005	WITHOUT_CLASSIFICATION	3.560989948451264E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999643901005	WITHOUT_CLASSIFICATION	3.560989948451264E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999198272778	WITHOUT_CLASSIFICATION	8.017272221826904E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999198272778	WITHOUT_CLASSIFICATION	8.017272221826904E-8	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999999333363001	WITHOUT_CLASSIFICATION	6.666369998199407E-8	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999985435829634	WITHOUT_CLASSIFICATION	1.4564170366587353E-6	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999999338469943	WITHOUT_CLASSIFICATION	6.615300572864707E-8	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999711093903	WITHOUT_CLASSIFICATION	2.8890609587515653E-8	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999999204480235	WITHOUT_CLASSIFICATION	7.955197645613045E-8	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999999256180615	WITHOUT_CLASSIFICATION	7.438193859052119E-8	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999836414352	WITHOUT_CLASSIFICATION	1.6358564795133824E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999991443170911	WITHOUT_CLASSIFICATION	8.556829088615219E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9992642367740379	WITHOUT_CLASSIFICATION	7.357632259620976E-4	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999971112798152	WITHOUT_CLASSIFICATION	2.888720184888476E-6	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999982853674124	WITHOUT_CLASSIFICATION	1.7146325876092018E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999943940459877	WITHOUT_CLASSIFICATION	5.605954012382131E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999930458616266	WITHOUT_CLASSIFICATION	6.954138373416026E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998465068719	WITHOUT_CLASSIFICATION	1.5349312814866225E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999986670971399	WITHOUT_CLASSIFICATION	1.3329028600752375E-6	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999990137968571	WITHOUT_CLASSIFICATION	9.862031429780577E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999793757252	WITHOUT_CLASSIFICATION	2.0624274825649995E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998465068719	WITHOUT_CLASSIFICATION	1.5349312814866225E-7	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999981940503562	WITHOUT_CLASSIFICATION	1.8059496438919832E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998465068719	WITHOUT_CLASSIFICATION	1.5349312814866225E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999986670971399	WITHOUT_CLASSIFICATION	1.3329028600752375E-6	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998591277125	WITHOUT_CLASSIFICATION	1.4087228745283504E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.999999986008472	WITHOUT_CLASSIFICATION	1.3991528018204717E-8	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999995508508992	WITHOUT_CLASSIFICATION	4.4914910079589877E-7	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998386310441	WITHOUT_CLASSIFICATION	1.6136895597004682E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999287172867	WITHOUT_CLASSIFICATION	7.128271331067674E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700691294198	WITHOUT_CLASSIFICATION	2.993087058028046E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999996810950244	WITHOUT_CLASSIFICATION	3.1890497564345633E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999504012741016	WITHOUT_CLASSIFICATION	4.959872589845284E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700691294198	WITHOUT_CLASSIFICATION	2.993087058028046E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700691294198	WITHOUT_CLASSIFICATION	2.993087058028046E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700691294198	WITHOUT_CLASSIFICATION	2.993087058028046E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999700691294198	WITHOUT_CLASSIFICATION	2.993087058028046E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999858653427216	WITHOUT_CLASSIFICATION	1.4134657278322407E-5	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999971306025678	WITHOUT_CLASSIFICATION	2.869397432243748E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999987481939933	WITHOUT_CLASSIFICATION	1.2518060068408655E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999987481939933	WITHOUT_CLASSIFICATION	1.2518060068408655E-6	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999961533967225	WITHOUT_CLASSIFICATION	3.846603277385158E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999992010702238	WITHOUT_CLASSIFICATION	7.989297762563678E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999862523286	WITHOUT_CLASSIFICATION	1.3747671477129953E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999985689562052	WITHOUT_CLASSIFICATION	1.431043794714476E-6	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.999999898318068	WITHOUT_CLASSIFICATION	1.0168193203535112E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995974413022	WITHOUT_CLASSIFICATION	4.0255869787222356E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995974413022	WITHOUT_CLASSIFICATION	4.0255869787222356E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995974413022	WITHOUT_CLASSIFICATION	4.0255869787222356E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999992974593	WITHOUT_CLASSIFICATION	7.025406664505768E-10	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.999999988407278	WITHOUT_CLASSIFICATION	1.1592721982573037E-8	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999523947766563	WITHOUT_CLASSIFICATION	4.7605223343609045E-5	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999920858089686	WITHOUT_CLASSIFICATION	7.914191031464333E-6	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999981047389077	WITHOUT_CLASSIFICATION	1.8952610922962809E-6	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999995083212463	WITHOUT_CLASSIFICATION	4.916787537645223E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999977781230914	WITHOUT_CLASSIFICATION	2.22187690853688E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999658898073266	WITHOUT_CLASSIFICATION	3.411019267329378E-5	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999997472823668	WITHOUT_CLASSIFICATION	2.527176330846578E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9998008246957946	WITHOUT_CLASSIFICATION	1.9917530420546375E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999975879025059	WITHOUT_CLASSIFICATION	2.412097494068911E-6	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999984478788367	WITHOUT_CLASSIFICATION	1.552121163234986E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999898694332	WITHOUT_CLASSIFICATION	1.0130566846027892E-8	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999996146454134	WITHOUT_CLASSIFICATION	3.8535458665463985E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999998181815892	WITHOUT_CLASSIFICATION	1.818184108112148E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999987580669619	WITHOUT_CLASSIFICATION	1.2419330380809125E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999998181815892	WITHOUT_CLASSIFICATION	1.818184108112148E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.999999745884543	WITHOUT_CLASSIFICATION	2.541154569973171E-7	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.999994526224398	WITHOUT_CLASSIFICATION	5.473775602003804E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999807972773461	WITHOUT_CLASSIFICATION	1.9202722653907364E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999999120195673	WITHOUT_CLASSIFICATION	8.798043263034681E-8	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999510485276	WITHOUT_CLASSIFICATION	4.895147229011294E-8	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999993415099454	WITHOUT_CLASSIFICATION	6.584900546173072E-7	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999999579702314	WITHOUT_CLASSIFICATION	4.202976866790878E-8	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999988024630312	WITHOUT_CLASSIFICATION	1.1975369688003663E-6	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999979377790434	WITHOUT_CLASSIFICATION	2.0622209565458E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999999449119769	WITHOUT_CLASSIFICATION	5.508802313320365E-8	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999150987494	WITHOUT_CLASSIFICATION	8.490125056214495E-8	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999980425593412	WITHOUT_CLASSIFICATION	1.9574406587966175E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999997242600339	WITHOUT_CLASSIFICATION	2.7573996614501573E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999999226610924	WITHOUT_CLASSIFICATION	7.733890767239563E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999918677223	WITHOUT_CLASSIFICATION	8.132277841661248E-9	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999995567567169	WITHOUT_CLASSIFICATION	4.4324328304246953E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999936466364	WITHOUT_CLASSIFICATION	6.3533636135428235E-9	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999999483792501	WITHOUT_CLASSIFICATION	5.162074975613342E-8	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999994225062833	WITHOUT_CLASSIFICATION	5.774937168033656E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9998889629044627	WITHOUT_CLASSIFICATION	1.1103709553724748E-4	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999624721610103	WITHOUT_CLASSIFICATION	3.752783898967329E-5	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.99999997723025	WITHOUT_CLASSIFICATION	2.276974995331729E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999595895357	WITHOUT_CLASSIFICATION	4.041046430776788E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999595895357	WITHOUT_CLASSIFICATION	4.041046430776788E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999993386186617	WITHOUT_CLASSIFICATION	6.613813382518795E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999993386186617	WITHOUT_CLASSIFICATION	6.613813382518795E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999899328262134	WITHOUT_CLASSIFICATION	1.0067173786571866E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999998067719027	WITHOUT_CLASSIFICATION	1.9322809741101847E-7	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999998067719027	WITHOUT_CLASSIFICATION	1.9322809741101847E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999539296165	WITHOUT_CLASSIFICATION	4.607038359877141E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999539296165	WITHOUT_CLASSIFICATION	4.607038359877141E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999998988298945	WITHOUT_CLASSIFICATION	1.0117010559511759E-7	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.999999906866531	WITHOUT_CLASSIFICATION	9.313346909581278E-8	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999999550789357	WITHOUT_CLASSIFICATION	4.492106429689191E-8	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999998542308578	WITHOUT_CLASSIFICATION	1.4576914221247623E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999975656746486	WITHOUT_CLASSIFICATION	2.4343253515218035E-6	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999999534156114	WITHOUT_CLASSIFICATION	4.658438857518568E-8	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999991199256513	WITHOUT_CLASSIFICATION	8.800743487410263E-7	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999987622231256	WITHOUT_CLASSIFICATION	1.2377768743524983E-6	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999994086581766	WITHOUT_CLASSIFICATION	5.91341823349925E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9992014537998553	WITHOUT_CLASSIFICATION	7.985462001446744E-4	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.999999739493015	WITHOUT_CLASSIFICATION	2.605069849412374E-7	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999936721326792	WITHOUT_CLASSIFICATION	6.32786732076432E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999988685580922	WITHOUT_CLASSIFICATION	1.1314419078478969E-6	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.999998087028734	WITHOUT_CLASSIFICATION	1.9129712659962797E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.999999045037381	WITHOUT_CLASSIFICATION	9.54962619020252E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999940737049583	WITHOUT_CLASSIFICATION	5.9262950416493435E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999999579702314	WITHOUT_CLASSIFICATION	4.202976866790878E-8	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999999449119769	WITHOUT_CLASSIFICATION	5.508802313320365E-8	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.999996156590047	WITHOUT_CLASSIFICATION	3.843409952977074E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999993586006773	WITHOUT_CLASSIFICATION	6.413993226517638E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999989646525601	WITHOUT_CLASSIFICATION	1.0353474398229741E-6	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999969839554383	WITHOUT_CLASSIFICATION	3.0160445615177376E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999975320716238	WITHOUT_CLASSIFICATION	2.467928376195007E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.999986142535024	WITHOUT_CLASSIFICATION	1.3857464975934867E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.999993827000991	WITHOUT_CLASSIFICATION	6.172999008932383E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999921161531065	WITHOUT_CLASSIFICATION	7.883846893497222E-6	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999999373505991	WITHOUT_CLASSIFICATION	6.264940091619789E-8	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999998460249213	WITHOUT_CLASSIFICATION	1.5397507866247878E-7	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999571834166471	WITHOUT_CLASSIFICATION	4.2816583352905665E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999992608465595	WITHOUT_CLASSIFICATION	7.391534403697801E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999995964888215	WITHOUT_CLASSIFICATION	4.035111784856289E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999995964888215	WITHOUT_CLASSIFICATION	4.035111784856289E-7	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9991968137191388	WITHOUT_CLASSIFICATION	8.031862808612244E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.999864118565999	WITHOUT_CLASSIFICATION	1.3588143400106075E-4	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999968259641279	WITHOUT_CLASSIFICATION	3.174035872233502E-6	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999952413818177	WITHOUT_CLASSIFICATION	4.758618182321548E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999753713243137	WITHOUT_CLASSIFICATION	2.462867568632438E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999972192451453	WITHOUT_CLASSIFICATION	2.780754854708135E-6	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999999364657214	WITHOUT_CLASSIFICATION	6.353427856342617E-8	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999891084576068	WITHOUT_CLASSIFICATION	1.0891542393295716E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999993652950673	WITHOUT_CLASSIFICATION	6.347049328002345E-7	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999953347499952	WITHOUT_CLASSIFICATION	4.6652500047153925E-6	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999994011596858	WITHOUT_CLASSIFICATION	5.988403141889493E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999999137542912	WITHOUT_CLASSIFICATION	8.624570882910351E-8	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999998554845803	WITHOUT_CLASSIFICATION	1.4451541973767893E-7	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999991781885456	WITHOUT_CLASSIFICATION	8.218114545337433E-7	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999964496939949	WITHOUT_CLASSIFICATION	3.5503060049966434E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999982925196931	WITHOUT_CLASSIFICATION	1.707480306822186E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999957755544064	WITHOUT_CLASSIFICATION	4.2244455934858795E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999997877257604	WITHOUT_CLASSIFICATION	2.1227423958453644E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999899049104201	WITHOUT_CLASSIFICATION	1.0095089580004846E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999693609566	WITHOUT_CLASSIFICATION	3.063904343121343E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999998928967637	WITHOUT_CLASSIFICATION	1.0710323618499063E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999998928967637	WITHOUT_CLASSIFICATION	1.0710323618499063E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999866584881	WITHOUT_CLASSIFICATION	1.334151200949232E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999999866584881	WITHOUT_CLASSIFICATION	1.334151200949232E-8	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999998349060416	WITHOUT_CLASSIFICATION	1.6509395833548398E-7	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999979249632467	WITHOUT_CLASSIFICATION	2.0750367533137794E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999249788691909	WITHOUT_CLASSIFICATION	7.502113080914296E-5	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9998705839600236	WITHOUT_CLASSIFICATION	1.294160399763876E-4	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999746393498506	WITHOUT_CLASSIFICATION	2.5360650149333937E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.999825766340656	WITHOUT_CLASSIFICATION	1.7423365934395634E-4	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999990738774469	WITHOUT_CLASSIFICATION	9.261225530352751E-7	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999890361351714	WITHOUT_CLASSIFICATION	1.0963864828537351E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999890361351714	WITHOUT_CLASSIFICATION	1.0963864828537351E-5	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.999999993307754	WITHOUT_CLASSIFICATION	6.692246045945731E-9	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999999434433796	WITHOUT_CLASSIFICATION	5.6556620301348574E-8	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999926536843362	WITHOUT_CLASSIFICATION	7.3463156638130305E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999926536843362	WITHOUT_CLASSIFICATION	7.3463156638130305E-6	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999991185954596	WITHOUT_CLASSIFICATION	8.814045404196037E-7	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999974434736377	WITHOUT_CLASSIFICATION	2.5565263621934747E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999999553254433	WITHOUT_CLASSIFICATION	4.467455670685502E-8	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999988603472452	WITHOUT_CLASSIFICATION	1.1396527547972187E-6	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999991004896623	WITHOUT_CLASSIFICATION	8.995103375889598E-7	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999998713313064	WITHOUT_CLASSIFICATION	1.2866869357400244E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.999998070455828	WITHOUT_CLASSIFICATION	1.9295441719236125E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.999998070455828	WITHOUT_CLASSIFICATION	1.9295441719236125E-6	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999843348243364	WITHOUT_CLASSIFICATION	1.5665175663646847E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999999103804055	WITHOUT_CLASSIFICATION	8.961959446304929E-8	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999964770376734	WITHOUT_CLASSIFICATION	3.522962326591233E-6	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9998514315355567	WITHOUT_CLASSIFICATION	1.4856846444342788E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999850779006288	WITHOUT_CLASSIFICATION	1.4922099371097612E-5	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999974446371257	WITHOUT_CLASSIFICATION	2.5553628743220347E-6	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999967104882618	WITHOUT_CLASSIFICATION	3.289511738340585E-6	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999982749408214	WITHOUT_CLASSIFICATION	1.7250591786211868E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999888968396	WITHOUT_CLASSIFICATION	1.1103160398594863E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999888968396	WITHOUT_CLASSIFICATION	1.1103160398594863E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999888968396	WITHOUT_CLASSIFICATION	1.1103160398594863E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999888968396	WITHOUT_CLASSIFICATION	1.1103160398594863E-7	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999943501182897	WITHOUT_CLASSIFICATION	5.649881710270972E-6	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999589433140517	WITHOUT_CLASSIFICATION	4.10566859483463E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999975588390452	WITHOUT_CLASSIFICATION	2.4411609548414582E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999993354570735	WITHOUT_CLASSIFICATION	6.645429264125859E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999993354570735	WITHOUT_CLASSIFICATION	6.645429264125859E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999990522408148	WITHOUT_CLASSIFICATION	9.477591852121943E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999990522408148	WITHOUT_CLASSIFICATION	9.477591852121943E-7	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999977321916005	WITHOUT_CLASSIFICATION	2.267808399581761E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999985692656144	WITHOUT_CLASSIFICATION	1.4307343855744872E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999958634083297	WITHOUT_CLASSIFICATION	4.136591670383363E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999984931506524	WITHOUT_CLASSIFICATION	1.506849347626294E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999988729519587	WITHOUT_CLASSIFICATION	1.1270480413433434E-6	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999846958501338	WITHOUT_CLASSIFICATION	1.5304149866171574E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999465985048	WITHOUT_CLASSIFICATION	5.340149516907597E-8	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.999994705581675	WITHOUT_CLASSIFICATION	5.294418324915206E-6	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999995116650942	WITHOUT_CLASSIFICATION	4.88334905863907E-7	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999849306902	WITHOUT_CLASSIFICATION	1.5069309832507365E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9995582654035612	WITHOUT_CLASSIFICATION	4.4173459643891355E-4	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999112538793	WITHOUT_CLASSIFICATION	8.874612063596689E-8	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999995130542549	WITHOUT_CLASSIFICATION	4.869457450345093E-7	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999997864476051	WITHOUT_CLASSIFICATION	2.1355239499599246E-7	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999999249818448	WITHOUT_CLASSIFICATION	7.501815532125958E-8	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999992430801579	WITHOUT_CLASSIFICATION	7.569198420478976E-7	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.999999759424972	WITHOUT_CLASSIFICATION	2.4057502800631237E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999996423980387	WITHOUT_CLASSIFICATION	3.5760196131319466E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999996423980387	WITHOUT_CLASSIFICATION	3.5760196131319466E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999996423980387	WITHOUT_CLASSIFICATION	3.5760196131319466E-7	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999998342593066	WITHOUT_CLASSIFICATION	1.6574069340583606E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999975027119921	WITHOUT_CLASSIFICATION	2.4972880080494522E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999811470148	WITHOUT_CLASSIFICATION	1.8852985164921496E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999999723090918	WITHOUT_CLASSIFICATION	2.76909082679929E-8	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999969659075	WITHOUT_CLASSIFICATION	3.034092564651567E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999971139647513	WITHOUT_CLASSIFICATION	2.88603524865881E-6	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999923634965081	WITHOUT_CLASSIFICATION	7.636503491928937E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999997514945359	WITHOUT_CLASSIFICATION	2.485054641793381E-7	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999807090469399	WITHOUT_CLASSIFICATION	1.9290953060173116E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9982791368694593	WITHOUT_CLASSIFICATION	0.001720863130540621	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.99999999886559	WITHOUT_CLASSIFICATION	1.1344100601279502E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999931645344367	WITHOUT_CLASSIFICATION	6.8354655633579415E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999999430925333	WITHOUT_CLASSIFICATION	5.690746675842319E-8	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.999993650885245	WITHOUT_CLASSIFICATION	6.349114754997918E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999964925458783	WITHOUT_CLASSIFICATION	3.5074541217303463E-6	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999999321046901	WITHOUT_CLASSIFICATION	6.789530989424326E-8	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999999882940788	WITHOUT_CLASSIFICATION	1.1705921218366224E-8	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999856996116	WITHOUT_CLASSIFICATION	1.4300388458876925E-8	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999930668313	WITHOUT_CLASSIFICATION	6.933168792705314E-9	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999972285515221	WITHOUT_CLASSIFICATION	2.771448477839206E-6	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999963978618119	WITHOUT_CLASSIFICATION	3.6021381879680785E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9998866009830594	WITHOUT_CLASSIFICATION	1.1339901694060132E-4	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999757708291	WITHOUT_CLASSIFICATION	2.4229170920177167E-8	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.99998137138457	WITHOUT_CLASSIFICATION	1.862861542996189E-5	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.999994616761035	WITHOUT_CLASSIFICATION	5.383238964979301E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.999996146448259	WITHOUT_CLASSIFICATION	3.853551741083938E-6	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999950642213853	WITHOUT_CLASSIFICATION	4.935778614721213E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.999998664672349	WITHOUT_CLASSIFICATION	1.3353276510316214E-6	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999971818461104	WITHOUT_CLASSIFICATION	2.81815388964761E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999994681686489	WITHOUT_CLASSIFICATION	5.318313510888028E-7	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999605432177	WITHOUT_CLASSIFICATION	3.9456782298936195E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999804330929513	WITHOUT_CLASSIFICATION	1.9566907048713403E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999984053732169	WITHOUT_CLASSIFICATION	1.5946267831033918E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999997973789634	WITHOUT_CLASSIFICATION	2.0262103673596204E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999541152576921	WITHOUT_CLASSIFICATION	4.588474230790684E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999946045030281	WITHOUT_CLASSIFICATION	5.395496971841828E-6	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999953321173269	WITHOUT_CLASSIFICATION	4.667882673088178E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999933765484831	WITHOUT_CLASSIFICATION	6.623451516844561E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999995433021163	WITHOUT_CLASSIFICATION	4.5669788375850816E-7	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999996921197395	WITHOUT_CLASSIFICATION	3.07880260445173E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999987615361609	WITHOUT_CLASSIFICATION	1.2384638392154152E-6	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9957584391534039	WITHOUT_CLASSIFICATION	0.004241560846596122	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999831039587	WITHOUT_CLASSIFICATION	1.6896041275907775E-8	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999877952390978	WITHOUT_CLASSIFICATION	1.2204760902304303E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999965646458591	WITHOUT_CLASSIFICATION	3.4353541408894937E-6	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999989336326839	WITHOUT_CLASSIFICATION	1.0663673160910282E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999945693607404	WITHOUT_CLASSIFICATION	5.430639259589987E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999972872636077	WITHOUT_CLASSIFICATION	2.712736392258953E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.999993414755006	WITHOUT_CLASSIFICATION	6.58524499405063E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.999999959241039	WITHOUT_CLASSIFICATION	4.0758960842649123E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999978659079279	WITHOUT_CLASSIFICATION	2.1340920719939556E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999998308917978	WITHOUT_CLASSIFICATION	1.6910820226470997E-7	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999813340059821	WITHOUT_CLASSIFICATION	1.866599401786226E-5	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999771076449063	WITHOUT_CLASSIFICATION	2.289235509369715E-5	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999998626412409	WITHOUT_CLASSIFICATION	1.373587592334914E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9999121927136079	WITHOUT_CLASSIFICATION	8.7807286392078E-5	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999992056902305	WITHOUT_CLASSIFICATION	7.943097694311717E-7	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999996237895847	WITHOUT_CLASSIFICATION	3.7621041530170787E-7	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999936394333162	WITHOUT_CLASSIFICATION	6.360566683830259E-6	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999845964856	WITHOUT_CLASSIFICATION	1.5403514380452724E-8	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999990933336356	WITHOUT_CLASSIFICATION	9.066663643229402E-7	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.999999925631518	WITHOUT_CLASSIFICATION	7.436848207046794E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.999993625638829	WITHOUT_CLASSIFICATION	6.374361171023498E-6	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999705007327	WITHOUT_CLASSIFICATION	2.9499267298570694E-8	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9998254156771811	WITHOUT_CLASSIFICATION	1.7458432281890513E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9997658870639362	WITHOUT_CLASSIFICATION	2.341129360638344E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999997377305057	WITHOUT_CLASSIFICATION	2.6226949434111975E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999997961526664	WITHOUT_CLASSIFICATION	2.0384733350964943E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999918177269093	WITHOUT_CLASSIFICATION	8.182273090755481E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999989715088473	WITHOUT_CLASSIFICATION	1.028491152586341E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.999999899740475	WITHOUT_CLASSIFICATION	1.0025952508067034E-7	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.8154477613853715	WITHOUT_CLASSIFICATION	0.1845522386146286	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999994970962748	WITHOUT_CLASSIFICATION	5.02903725289044E-7	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999972087367	WITHOUT_CLASSIFICATION	2.791263266875812E-9	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999996538409621	WITHOUT_CLASSIFICATION	3.4615903785462514E-7	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999998733814516	WITHOUT_CLASSIFICATION	1.2661854850216015E-7	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999869917233718	WITHOUT_CLASSIFICATION	1.3008276628246503E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997873418365938	WITHOUT_CLASSIFICATION	2.1265816340612794E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997873418365938	WITHOUT_CLASSIFICATION	2.1265816340612794E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997873418365938	WITHOUT_CLASSIFICATION	2.1265816340612794E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999997642121516	WITHOUT_CLASSIFICATION	2.3578784824792458E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999997374183374	WITHOUT_CLASSIFICATION	2.625816626971803E-7	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999030462828	WITHOUT_CLASSIFICATION	9.695371709943563E-8	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999997820356196	WITHOUT_CLASSIFICATION	2.1796438037850962E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999993055847992	WITHOUT_CLASSIFICATION	6.944152008370407E-7	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999997129292756	WITHOUT_CLASSIFICATION	2.8707072445826507E-7	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999999488455151	WITHOUT_CLASSIFICATION	5.115448490520714E-8	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999555305163	WITHOUT_CLASSIFICATION	4.4469483701126054E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998041807963	WITHOUT_CLASSIFICATION	1.95819203738268E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998041807963	WITHOUT_CLASSIFICATION	1.95819203738268E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.999999595350248	WITHOUT_CLASSIFICATION	4.046497519811081E-7	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999992012892008	WITHOUT_CLASSIFICATION	7.987107992396129E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999996538409621	WITHOUT_CLASSIFICATION	3.4615903785462514E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999996715061227	WITHOUT_CLASSIFICATION	3.284938772720208E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999734374435	WITHOUT_CLASSIFICATION	2.6562556422865415E-8	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999897360493774	WITHOUT_CLASSIFICATION	1.0263950622648118E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999984606740121	WITHOUT_CLASSIFICATION	1.539325987821652E-6	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999991668905382	WITHOUT_CLASSIFICATION	8.331094616877004E-7	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999994637027759	WITHOUT_CLASSIFICATION	5.362972241174172E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999949442724135	WITHOUT_CLASSIFICATION	5.055727586425038E-6	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9970778250956722	WITHOUT_CLASSIFICATION	0.0029221749043277572	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9999637045492431	WITHOUT_CLASSIFICATION	3.629545075697578E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999987136567288	WITHOUT_CLASSIFICATION	1.2863432712970975E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.999994553899553	WITHOUT_CLASSIFICATION	5.446100446884692E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999998165358028	WITHOUT_CLASSIFICATION	1.834641970799856E-7	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999980985408115	WITHOUT_CLASSIFICATION	1.901459188560261E-6	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999974240864306	WITHOUT_CLASSIFICATION	2.5759135694498E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999954897650378	WITHOUT_CLASSIFICATION	4.5102349621999786E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.999962866956593	WITHOUT_CLASSIFICATION	3.713304340698306E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9977693446153343	WITHOUT_CLASSIFICATION	0.0022306553846657513	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999798327588514	WITHOUT_CLASSIFICATION	2.0167241148556946E-5	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999857234361739	WITHOUT_CLASSIFICATION	1.4276563826071911E-5	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999997613887888	WITHOUT_CLASSIFICATION	2.3861121118904917E-7	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.999937831942883	WITHOUT_CLASSIFICATION	6.216805711696387E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999997370771526	WITHOUT_CLASSIFICATION	2.62922847314955E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999999720178755	WITHOUT_CLASSIFICATION	2.7982124527071984E-8	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999375444621638	WITHOUT_CLASSIFICATION	6.245553783620401E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999215221855112	WITHOUT_CLASSIFICATION	7.847781448878967E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999993797469805	WITHOUT_CLASSIFICATION	6.202530194878899E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999994406889139	WITHOUT_CLASSIFICATION	5.593110860936161E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999998933995353	WITHOUT_CLASSIFICATION	1.0660046460205482E-7	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999998493164668	WITHOUT_CLASSIFICATION	1.5068353314832333E-7	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999555398298	WITHOUT_CLASSIFICATION	4.446017017416375E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999652475281	WITHOUT_CLASSIFICATION	3.475247180732544E-8	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999943996426333	WITHOUT_CLASSIFICATION	5.600357366738484E-6	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999979169527732	WITHOUT_CLASSIFICATION	2.083047226789054E-6	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999996271593488	WITHOUT_CLASSIFICATION	3.728406511847077E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999984005377034	WITHOUT_CLASSIFICATION	1.5994622965604767E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999998703967685	WITHOUT_CLASSIFICATION	1.296032315084188E-7	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999998416384803	WITHOUT_CLASSIFICATION	1.5836151974461047E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999056985531827	WITHOUT_CLASSIFICATION	9.430144681740593E-5	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999952373933289	WITHOUT_CLASSIFICATION	4.762606671094593E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999870495894677	WITHOUT_CLASSIFICATION	1.2950410532230557E-5	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999788629424523	WITHOUT_CLASSIFICATION	2.1137057547608905E-5	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999991243734266	WITHOUT_CLASSIFICATION	8.756265734966897E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9998054541528263	WITHOUT_CLASSIFICATION	1.945458471738404E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999889197946864	WITHOUT_CLASSIFICATION	1.1080205313601162E-5	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999796653794796	WITHOUT_CLASSIFICATION	2.0334620520307536E-5	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9991779559723809	WITHOUT_CLASSIFICATION	8.22044027619125E-4	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999939853921452	WITHOUT_CLASSIFICATION	6.014607854717514E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999971172030222	WITHOUT_CLASSIFICATION	2.8827969777383896E-6	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9998206503156412	WITHOUT_CLASSIFICATION	1.7934968435888158E-4	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999689872332993	WITHOUT_CLASSIFICATION	3.101276670073286E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9965354302387726	WITHOUT_CLASSIFICATION	0.0034645697612274216	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9998569217834111	WITHOUT_CLASSIFICATION	1.4307821658883897E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999809796325593	WITHOUT_CLASSIFICATION	1.9020367440643258E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999482286467715	WITHOUT_CLASSIFICATION	5.1771353228430436E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999976356553166	WITHOUT_CLASSIFICATION	2.364344683322271E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999965498104126	WITHOUT_CLASSIFICATION	3.4501895872684155E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999615672364629	WITHOUT_CLASSIFICATION	3.843276353705287E-5	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999999636576178	WITHOUT_CLASSIFICATION	3.634238220684761E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999962781346	WITHOUT_CLASSIFICATION	3.7218652703589297E-9	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999997383497996	WITHOUT_CLASSIFICATION	2.6165020038719226E-7	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999994817900713	WITHOUT_CLASSIFICATION	5.182099286485469E-7	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999740686649388	WITHOUT_CLASSIFICATION	2.593133506123486E-5	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9993445471389892	WITHOUT_CLASSIFICATION	6.554528610106631E-4	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9138574394020572	WITHOUT_CLASSIFICATION	0.08614256059794274	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999951167156538	WITHOUT_CLASSIFICATION	4.883284346201551E-6	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999998167186674	WITHOUT_CLASSIFICATION	1.8328133254314767E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.999999937289722	WITHOUT_CLASSIFICATION	6.271027794552728E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999985383245579	WITHOUT_CLASSIFICATION	1.4616754421302004E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999929124710015	WITHOUT_CLASSIFICATION	7.0875289984683455E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999096281121852	WITHOUT_CLASSIFICATION	9.03718878148403E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9997658870639362	WITHOUT_CLASSIFICATION	2.341129360638344E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.999999937289722	WITHOUT_CLASSIFICATION	6.271027794552728E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999985383245579	WITHOUT_CLASSIFICATION	1.4616754421302004E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999985785186983	WITHOUT_CLASSIFICATION	1.4214813016921044E-6	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.99999978507288	WITHOUT_CLASSIFICATION	2.1492712004406497E-7	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999036010134373	WITHOUT_CLASSIFICATION	9.639898656271155E-5	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999998986322631	WITHOUT_CLASSIFICATION	1.0136773696723136E-7	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999993761274039	WITHOUT_CLASSIFICATION	6.238725962363565E-7	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999998920015954	WITHOUT_CLASSIFICATION	1.079984045560156E-7	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999998320683863	WITHOUT_CLASSIFICATION	1.6793161377785137E-7	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999994179939042	WITHOUT_CLASSIFICATION	5.82006095768802E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999994159319567	WITHOUT_CLASSIFICATION	5.840680433511831E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.99999976849078	WITHOUT_CLASSIFICATION	2.3150922001173455E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999999619802433	WITHOUT_CLASSIFICATION	3.8019756664503356E-8	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999996990133693	WITHOUT_CLASSIFICATION	3.0098663072621614E-7	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999966982334895	WITHOUT_CLASSIFICATION	3.301766510554097E-6	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999962866740318	WITHOUT_CLASSIFICATION	3.7133259682829766E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999805596858435	WITHOUT_CLASSIFICATION	1.944031415639276E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999765522329873	WITHOUT_CLASSIFICATION	2.34477670127141E-5	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999691031485771	WITHOUT_CLASSIFICATION	3.0896851422920696E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9996753515957021	WITHOUT_CLASSIFICATION	3.246484042979144E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999984834214338	WITHOUT_CLASSIFICATION	1.516578566243618E-6	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999932221441085	WITHOUT_CLASSIFICATION	6.777855891543213E-6	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999959181861114	WITHOUT_CLASSIFICATION	4.081813888555883E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.999996916522666	WITHOUT_CLASSIFICATION	3.083477334061927E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999904570745953	WITHOUT_CLASSIFICATION	9.542925404616117E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999918177269093	WITHOUT_CLASSIFICATION	8.182273090755481E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999997452358739	WITHOUT_CLASSIFICATION	2.5476412619886176E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9998956488441911	WITHOUT_CLASSIFICATION	1.0435115580887824E-4	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9981051536199566	WITHOUT_CLASSIFICATION	0.0018948463800434205	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9979765361120579	WITHOUT_CLASSIFICATION	0.0020234638879421834	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.999970728791164	WITHOUT_CLASSIFICATION	2.927120883595176E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999933269538528	WITHOUT_CLASSIFICATION	6.673046147143114E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999949951766309	WITHOUT_CLASSIFICATION	5.004823369004545E-6	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999960735453444	WITHOUT_CLASSIFICATION	3.926454655595741E-6	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999991043793515	WITHOUT_CLASSIFICATION	8.956206485764838E-7	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999985808118459	WITHOUT_CLASSIFICATION	1.41918815414481E-6	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.999999855732548	WITHOUT_CLASSIFICATION	1.442674519665897E-7	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999962370153886	WITHOUT_CLASSIFICATION	3.7629846112232194E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999958757916535	WITHOUT_CLASSIFICATION	4.124208346556805E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.999999739917815	WITHOUT_CLASSIFICATION	2.6008218494271015E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999987333293971	WITHOUT_CLASSIFICATION	1.266670602899102E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999978070373167	WITHOUT_CLASSIFICATION	2.1929626833672848E-6	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999998030419017	WITHOUT_CLASSIFICATION	1.9695809841957525E-7	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999957272330122	WITHOUT_CLASSIFICATION	4.272766987797946E-6	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999977888096875	WITHOUT_CLASSIFICATION	2.211190312549889E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999877122499707	WITHOUT_CLASSIFICATION	1.228775002918328E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999839713998122	WITHOUT_CLASSIFICATION	1.6028600187792033E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999839713998122	WITHOUT_CLASSIFICATION	1.6028600187792033E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999951584659517	WITHOUT_CLASSIFICATION	4.8415340483248956E-6	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999505802005	WITHOUT_CLASSIFICATION	4.941979936871052E-8	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999996315484032	WITHOUT_CLASSIFICATION	3.6845159686253E-7	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999996009127282	WITHOUT_CLASSIFICATION	3.9908727175031757E-7	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999984712020212	WITHOUT_CLASSIFICATION	1.5287979787959668E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999967204046006	WITHOUT_CLASSIFICATION	3.279595399391591E-6	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.999999021560829	WITHOUT_CLASSIFICATION	9.784391710152287E-7	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999996875260518	WITHOUT_CLASSIFICATION	3.1247394811579445E-7	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999915657883922	WITHOUT_CLASSIFICATION	8.434211607785164E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999818969874243	WITHOUT_CLASSIFICATION	1.810301257562574E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998345678334	WITHOUT_CLASSIFICATION	1.654321665812921E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999997350636693	WITHOUT_CLASSIFICATION	2.649363306260537E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999953371357635	WITHOUT_CLASSIFICATION	4.662864236455934E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999953371357635	WITHOUT_CLASSIFICATION	4.662864236455934E-6	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.999999665554133	WITHOUT_CLASSIFICATION	3.3444586705608954E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999999349271603	WITHOUT_CLASSIFICATION	6.507283963633533E-8	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999995907543974	WITHOUT_CLASSIFICATION	4.0924560270147676E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.999999234204122	WITHOUT_CLASSIFICATION	7.657958780495146E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999999249198696	WITHOUT_CLASSIFICATION	7.508013045613808E-8	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999304597038	WITHOUT_CLASSIFICATION	6.954029620965082E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999996262510067	WITHOUT_CLASSIFICATION	3.737489933306921E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999876413287083	WITHOUT_CLASSIFICATION	1.2358671291758649E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999979412156305	WITHOUT_CLASSIFICATION	2.058784369552775E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999984712020212	WITHOUT_CLASSIFICATION	1.5287979787959668E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999980557062379	WITHOUT_CLASSIFICATION	1.9442937620519445E-6	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999994186776776	WITHOUT_CLASSIFICATION	5.813223223200569E-7	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.999999995368658	WITHOUT_CLASSIFICATION	4.631341974689808E-9	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999994569466483	WITHOUT_CLASSIFICATION	5.430533516533827E-7	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999997752056526	WITHOUT_CLASSIFICATION	2.2479434736768224E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999997431822512	WITHOUT_CLASSIFICATION	2.568177488611755E-7	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998520744842	WITHOUT_CLASSIFICATION	1.479255158334062E-7	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998280548089	WITHOUT_CLASSIFICATION	1.71945191054375E-7	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999427841062	WITHOUT_CLASSIFICATION	5.721589368484854E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999878298033	WITHOUT_CLASSIFICATION	1.2170196794997563E-8	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999784093117	WITHOUT_CLASSIFICATION	2.1590688311243872E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999958942263	WITHOUT_CLASSIFICATION	4.1057737355532115E-9	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999997978734967	WITHOUT_CLASSIFICATION	2.0212650325682237E-7	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999996395422438	WITHOUT_CLASSIFICATION	3.604577561280831E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9999338243046442	WITHOUT_CLASSIFICATION	6.617569535580799E-5	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999998884825888	WITHOUT_CLASSIFICATION	1.1151741114796743E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999997045848238	WITHOUT_CLASSIFICATION	2.9541517625606886E-7	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999960044931061	WITHOUT_CLASSIFICATION	3.995506893954605E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.99999770190082	WITHOUT_CLASSIFICATION	2.298099179994892E-6	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.999999910694075	WITHOUT_CLASSIFICATION	8.930592497406352E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999999077527978	WITHOUT_CLASSIFICATION	9.224720214356848E-8	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999854763554	WITHOUT_CLASSIFICATION	1.4523644633306972E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.999998200245537	WITHOUT_CLASSIFICATION	1.7997544631145396E-6	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999508264016	WITHOUT_CLASSIFICATION	4.9173598468377124E-8	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999478573331805	WITHOUT_CLASSIFICATION	5.21426668195688E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999992694228373	WITHOUT_CLASSIFICATION	7.305771627278503E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999993701517619	WITHOUT_CLASSIFICATION	6.298482380958047E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999838625140133	WITHOUT_CLASSIFICATION	1.6137485986808713E-5	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999996926215778	WITHOUT_CLASSIFICATION	3.0737842218085015E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999993385855293	WITHOUT_CLASSIFICATION	6.614144707191104E-7	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999990956053613	WITHOUT_CLASSIFICATION	9.04394638676503E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999997102771654	WITHOUT_CLASSIFICATION	2.897228345907027E-7	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999998899709757	WITHOUT_CLASSIFICATION	1.1002902438857796E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999994212971557	WITHOUT_CLASSIFICATION	5.787028443945653E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999994212971557	WITHOUT_CLASSIFICATION	5.787028443945653E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999998865960202	WITHOUT_CLASSIFICATION	1.1340397973661102E-7	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999117408528	WITHOUT_CLASSIFICATION	8.825914727759088E-8	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999996449879456	WITHOUT_CLASSIFICATION	3.55012054391179E-7	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999993453828018	WITHOUT_CLASSIFICATION	6.546171983465029E-7	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999998777870521	WITHOUT_CLASSIFICATION	1.2221294792477305E-7	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999997059505369	WITHOUT_CLASSIFICATION	2.9404946310975654E-7	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999964656285222	WITHOUT_CLASSIFICATION	3.5343714778699056E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999207336126907	WITHOUT_CLASSIFICATION	7.926638730925004E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999992487169989	WITHOUT_CLASSIFICATION	7.51283001178778E-7	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999998300030535	WITHOUT_CLASSIFICATION	1.6999694646566748E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.999999992067693	WITHOUT_CLASSIFICATION	7.932307039728202E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.999997947687028	WITHOUT_CLASSIFICATION	2.0523129721027145E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999787469009	WITHOUT_CLASSIFICATION	2.1253099096633235E-8	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9994111362632356	WITHOUT_CLASSIFICATION	5.88863736764464E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999997102771654	WITHOUT_CLASSIFICATION	2.897228345907027E-7	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999998777870521	WITHOUT_CLASSIFICATION	1.2221294792477305E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999996192598042	WITHOUT_CLASSIFICATION	3.807401958240098E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999991075810094	WITHOUT_CLASSIFICATION	8.924189905816541E-7	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999999402253031	WITHOUT_CLASSIFICATION	5.97746969428476E-8	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999994165910818	WITHOUT_CLASSIFICATION	5.834089181991774E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999988126829813	WITHOUT_CLASSIFICATION	1.1873170187563025E-6	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999891080546524	WITHOUT_CLASSIFICATION	1.0891945347626738E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999997986587912	WITHOUT_CLASSIFICATION	2.0134120872489807E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999998377182293	WITHOUT_CLASSIFICATION	1.6228177071505715E-7	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999500210713524	WITHOUT_CLASSIFICATION	4.997892864764497E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999992785925024	WITHOUT_CLASSIFICATION	7.21407497737442E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999816580988918	WITHOUT_CLASSIFICATION	1.8341901108118156E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999795841166	WITHOUT_CLASSIFICATION	2.0415883430727005E-8	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999996655105764	WITHOUT_CLASSIFICATION	3.3448942363135337E-7	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999997077669368	WITHOUT_CLASSIFICATION	2.9223306315584793E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9999938240531616	WITHOUT_CLASSIFICATION	6.175946838446535E-6	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999984275276547	WITHOUT_CLASSIFICATION	1.5724723452545568E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.999556476283121	WITHOUT_CLASSIFICATION	4.435237168789536E-4	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999998566935435	WITHOUT_CLASSIFICATION	1.4330645652281336E-7	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999998708518275	WITHOUT_CLASSIFICATION	1.291481724766822E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999807585929625	WITHOUT_CLASSIFICATION	1.924140703746069E-5	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.999997900907754	WITHOUT_CLASSIFICATION	2.099092245948434E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999946232245	WITHOUT_CLASSIFICATION	5.376775453695461E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999998974399849	WITHOUT_CLASSIFICATION	1.0256001517260983E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999988409349648	WITHOUT_CLASSIFICATION	1.1590650351739869E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999908354272605	WITHOUT_CLASSIFICATION	9.164572739432128E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999790222862	WITHOUT_CLASSIFICATION	2.097771373038641E-8	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999986033554481	WITHOUT_CLASSIFICATION	1.3966445518434714E-6	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.999999321986244	WITHOUT_CLASSIFICATION	6.780137560616733E-7	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.999999864576745	WITHOUT_CLASSIFICATION	1.354232551519579E-7	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999947710487516	WITHOUT_CLASSIFICATION	5.228951248454333E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999995472243937	WITHOUT_CLASSIFICATION	4.5277560643317996E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999760262098	WITHOUT_CLASSIFICATION	2.3973790199691266E-8	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9997461175345823	WITHOUT_CLASSIFICATION	2.538824654176015E-4	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.999999954068344	WITHOUT_CLASSIFICATION	4.593165594684753E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999998882597309	WITHOUT_CLASSIFICATION	1.1174026904778787E-7	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999999611673792	WITHOUT_CLASSIFICATION	3.8832620683030745E-8	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999999627810129	WITHOUT_CLASSIFICATION	3.721898715274347E-8	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999999401278644	WITHOUT_CLASSIFICATION	5.987213564029707E-8	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999998374239659	WITHOUT_CLASSIFICATION	1.625760340826538E-7	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9998332708977603	WITHOUT_CLASSIFICATION	1.667291022396354E-4	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999332501275828	WITHOUT_CLASSIFICATION	6.67498724171162E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9888617957695485	WITHOUT_CLASSIFICATION	0.011138204230451495	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999998540559849	WITHOUT_CLASSIFICATION	1.4594401511419042E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999997736198966	WITHOUT_CLASSIFICATION	2.263801033794832E-7	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999995965619114	WITHOUT_CLASSIFICATION	4.0343808856642117E-7	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999999501606098	WITHOUT_CLASSIFICATION	4.9839390197980424E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999686638470291	WITHOUT_CLASSIFICATION	3.1336152970960924E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999993349162938	WITHOUT_CLASSIFICATION	6.650837062844961E-7	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9996831187305782	WITHOUT_CLASSIFICATION	3.1688126942175816E-4	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999554481137	WITHOUT_CLASSIFICATION	4.4551886292681684E-8	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999986541909949	WITHOUT_CLASSIFICATION	1.3458090050759207E-6	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.999999626946158	WITHOUT_CLASSIFICATION	3.730538420706266E-7	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999969490164179	WITHOUT_CLASSIFICATION	3.0509835820651263E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999977174668332	WITHOUT_CLASSIFICATION	2.2825331668070894E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999857465871415	WITHOUT_CLASSIFICATION	1.4253412858442536E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999821534292	WITHOUT_CLASSIFICATION	1.7846570742134593E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999968764125	WITHOUT_CLASSIFICATION	3.1235875543205848E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999938664425045	WITHOUT_CLASSIFICATION	6.133557495514871E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999650027359	WITHOUT_CLASSIFICATION	3.49972641348775E-8	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.999831956217522	WITHOUT_CLASSIFICATION	1.6804378247799076E-4	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999998894426393	WITHOUT_CLASSIFICATION	1.1055736075513006E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999938664425045	WITHOUT_CLASSIFICATION	6.133557495514871E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999964519755111	WITHOUT_CLASSIFICATION	3.5480244889065947E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999938374190508	WITHOUT_CLASSIFICATION	6.1625809492287975E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999823177497231	WITHOUT_CLASSIFICATION	1.7682250276886558E-5	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999585127425	WITHOUT_CLASSIFICATION	4.14872575384411E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999999794246547	WITHOUT_CLASSIFICATION	2.057534531764333E-8	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999990176925	WITHOUT_CLASSIFICATION	9.82307510331508E-10	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999998541044877	WITHOUT_CLASSIFICATION	1.4589551227980447E-7	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999984323246681	WITHOUT_CLASSIFICATION	1.5676753319202242E-6	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999997658537455	WITHOUT_CLASSIFICATION	2.341462544948271E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999999630382395	WITHOUT_CLASSIFICATION	3.696176054330754E-8	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.999998150753719	WITHOUT_CLASSIFICATION	1.8492462810557893E-6	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999997619409	WITHOUT_CLASSIFICATION	2.3805910004774094E-7	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999986818477486	WITHOUT_CLASSIFICATION	1.318152251435753E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999890623115335	WITHOUT_CLASSIFICATION	1.0937688466467969E-5	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999968984324	WITHOUT_CLASSIFICATION	3.101567636164073E-9	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999999620523474	WITHOUT_CLASSIFICATION	3.79476526364168E-8	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999889116257	WITHOUT_CLASSIFICATION	1.1088374332429422E-8	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999980033518144	WITHOUT_CLASSIFICATION	1.996648185561912E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999987134191276	WITHOUT_CLASSIFICATION	1.2865808723866354E-5	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999849177666148	WITHOUT_CLASSIFICATION	1.5082233385098233E-5	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.999975014938316	WITHOUT_CLASSIFICATION	2.4985061684063123E-5	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999920693551797	WITHOUT_CLASSIFICATION	7.930644820267138E-6	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999902827956672	WITHOUT_CLASSIFICATION	9.717204332874812E-6	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.999999967476484	WITHOUT_CLASSIFICATION	3.2523516010444107E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999993462157453	WITHOUT_CLASSIFICATION	6.537842547494716E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999814812545	WITHOUT_CLASSIFICATION	1.8518745554435805E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999039971249	WITHOUT_CLASSIFICATION	9.600287507847334E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999707598888222	WITHOUT_CLASSIFICATION	2.9240111177744234E-5	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.8398830617003926	WITHOUT_CLASSIFICATION	0.16011693829960727	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999332104952	WITHOUT_CLASSIFICATION	6.67895047445943E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999960447644489	WITHOUT_CLASSIFICATION	3.955235551063296E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999982833070586	WITHOUT_CLASSIFICATION	1.7166929414178707E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999996621023037	WITHOUT_CLASSIFICATION	3.378976961604275E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999039971249	WITHOUT_CLASSIFICATION	9.600287507847334E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999962640016812	WITHOUT_CLASSIFICATION	3.7359983188502436E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999962640016812	WITHOUT_CLASSIFICATION	3.7359983188502436E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999424027718873	WITHOUT_CLASSIFICATION	5.759722811272989E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999039971249	WITHOUT_CLASSIFICATION	9.600287507847334E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999039971249	WITHOUT_CLASSIFICATION	9.600287507847334E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999996099199875	WITHOUT_CLASSIFICATION	3.9008001253554934E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999156128038	WITHOUT_CLASSIFICATION	8.438719624027926E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999041379091	WITHOUT_CLASSIFICATION	9.586209094361241E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999041379091	WITHOUT_CLASSIFICATION	9.586209094361241E-8	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999171512845538	WITHOUT_CLASSIFICATION	8.284871544618213E-5	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999127011554	WITHOUT_CLASSIFICATION	8.729884468284044E-8	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999939934085565	WITHOUT_CLASSIFICATION	6.006591443461941E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999987134191276	WITHOUT_CLASSIFICATION	1.2865808723866354E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999987134191276	WITHOUT_CLASSIFICATION	1.2865808723866354E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999171512845538	WITHOUT_CLASSIFICATION	8.284871544618213E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999894923476	WITHOUT_CLASSIFICATION	1.0507652513556187E-8	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999839455553634	WITHOUT_CLASSIFICATION	1.6054444636642127E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999977035467001	WITHOUT_CLASSIFICATION	2.296453299888866E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.999999513430419	WITHOUT_CLASSIFICATION	4.865695808397486E-7	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999947485694088	WITHOUT_CLASSIFICATION	5.251430591212323E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999892122133759	WITHOUT_CLASSIFICATION	1.0787786624038327E-5	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999992995859791	WITHOUT_CLASSIFICATION	7.004140209305962E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999995074483577	WITHOUT_CLASSIFICATION	4.925516423108397E-7	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999989061203098	WITHOUT_CLASSIFICATION	1.0938796901565266E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999933723342267	WITHOUT_CLASSIFICATION	6.627665773268286E-6	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999994002339452	WITHOUT_CLASSIFICATION	5.997660548069142E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999968291197902	WITHOUT_CLASSIFICATION	3.1708802099504613E-6	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999987379425023	WITHOUT_CLASSIFICATION	1.26205749781098E-6	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999979718768551	WITHOUT_CLASSIFICATION	2.028123144768707E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999976583176853	WITHOUT_CLASSIFICATION	2.341682314713584E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999945698572666	WITHOUT_CLASSIFICATION	5.43014273326968E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999932532042892	WITHOUT_CLASSIFICATION	6.7467957107201815E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999999419873418	WITHOUT_CLASSIFICATION	5.801265823603512E-8	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9998398468161386	WITHOUT_CLASSIFICATION	1.6015318386148117E-4	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999835569928229	WITHOUT_CLASSIFICATION	1.6443007177090677E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999964819181478	WITHOUT_CLASSIFICATION	3.5180818521156205E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999995632035933	WITHOUT_CLASSIFICATION	4.367964068026349E-7	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999999625282755	WITHOUT_CLASSIFICATION	3.747172454877719E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999904512342009	WITHOUT_CLASSIFICATION	9.548765798987084E-6	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999971239981555	WITHOUT_CLASSIFICATION	2.876001844386822E-6	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999875124598148	WITHOUT_CLASSIFICATION	1.2487540185172588E-5	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999986626746072	WITHOUT_CLASSIFICATION	1.3373253927935736E-6	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999661630464816	WITHOUT_CLASSIFICATION	3.383695351841491E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999977871955849	WITHOUT_CLASSIFICATION	2.2128044151424377E-6	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999994885354904	WITHOUT_CLASSIFICATION	5.114645096870898E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.999963112945799	WITHOUT_CLASSIFICATION	3.688705420108481E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9994733843815282	WITHOUT_CLASSIFICATION	5.266156184718066E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999995740780582	WITHOUT_CLASSIFICATION	4.2592194184896354E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999730930905107	WITHOUT_CLASSIFICATION	2.6906909489233013E-5	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999990837567408	WITHOUT_CLASSIFICATION	9.162432591093998E-7	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999996510884624	WITHOUT_CLASSIFICATION	3.489115375587627E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999981617982054	WITHOUT_CLASSIFICATION	1.8382017945444994E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999868560524067	WITHOUT_CLASSIFICATION	1.3143947593317072E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.999999646844576	WITHOUT_CLASSIFICATION	3.53155423898009E-7	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999853070301051	WITHOUT_CLASSIFICATION	1.4692969894874664E-5	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.999998780121348	WITHOUT_CLASSIFICATION	1.219878651987816E-6	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999970100941269	WITHOUT_CLASSIFICATION	2.989905873167093E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999993533703762	WITHOUT_CLASSIFICATION	6.466296238420842E-7	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999850846988584	WITHOUT_CLASSIFICATION	1.4915301141570514E-5	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999968405804883	WITHOUT_CLASSIFICATION	3.159419511810684E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999838009367679	WITHOUT_CLASSIFICATION	1.6199063232150532E-5	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999963180367436	WITHOUT_CLASSIFICATION	3.6819632563414273E-6	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999995760374483	WITHOUT_CLASSIFICATION	4.2396255176252043E-7	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999991097836105	WITHOUT_CLASSIFICATION	8.902163894909019E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999012095630831	WITHOUT_CLASSIFICATION	9.879043691683773E-5	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999924342947136	WITHOUT_CLASSIFICATION	7.565705286329683E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999948882349843	WITHOUT_CLASSIFICATION	5.111765015661565E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999992950271763	WITHOUT_CLASSIFICATION	7.049728236437709E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999998101055425	WITHOUT_CLASSIFICATION	1.8989445759348495E-7	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999994192393031	WITHOUT_CLASSIFICATION	5.807606968782644E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999961316765265	WITHOUT_CLASSIFICATION	3.8683234735412284E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999957074174662	WITHOUT_CLASSIFICATION	4.29258253376949E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999968074623728	WITHOUT_CLASSIFICATION	3.192537627036346E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999995768941142	WITHOUT_CLASSIFICATION	4.2310588577677933E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999856224068931	WITHOUT_CLASSIFICATION	1.437759310696319E-5	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999955342493	WITHOUT_CLASSIFICATION	4.465750687384583E-9	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999937878389394	WITHOUT_CLASSIFICATION	6.21216106052544E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999960283797891	WITHOUT_CLASSIFICATION	3.9716202108954575E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999995338761798	WITHOUT_CLASSIFICATION	4.6612382017821984E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9997329762933876	WITHOUT_CLASSIFICATION	2.6702370661233166E-4	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999991009740985	WITHOUT_CLASSIFICATION	8.9902590142953E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999995315670418	WITHOUT_CLASSIFICATION	4.6843295820498547E-7	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999675256759875	WITHOUT_CLASSIFICATION	3.2474324012545955E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999972788118776	WITHOUT_CLASSIFICATION	2.7211881224609653E-6	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999952804010009	WITHOUT_CLASSIFICATION	4.719598999021458E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999671095962736	WITHOUT_CLASSIFICATION	3.289040372648254E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999996567929855	WITHOUT_CLASSIFICATION	3.4320701449587647E-7	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999997897586199	WITHOUT_CLASSIFICATION	2.1024138003061072E-7	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999891791506706	WITHOUT_CLASSIFICATION	1.0820849329376002E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999989393306871	WITHOUT_CLASSIFICATION	1.0606693128436903E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999990002832099	WITHOUT_CLASSIFICATION	9.997167901358013E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999990002832099	WITHOUT_CLASSIFICATION	9.997167901358013E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999997795322922	WITHOUT_CLASSIFICATION	2.2046770781818333E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9997210694773073	WITHOUT_CLASSIFICATION	2.7893052269260295E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999992482871212	WITHOUT_CLASSIFICATION	7.517128789495636E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9832904684898031	WITHOUT_CLASSIFICATION	0.016709531510196943	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999985785719544	WITHOUT_CLASSIFICATION	1.4214280455838463E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999998475380883	WITHOUT_CLASSIFICATION	1.5246191167985387E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9978971919126444	WITHOUT_CLASSIFICATION	0.0021028080873556963	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999998541569114	WITHOUT_CLASSIFICATION	1.4584308854881072E-7	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9996835705494357	WITHOUT_CLASSIFICATION	3.16429450564305E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999931894816	WITHOUT_CLASSIFICATION	6.810518441670166E-9	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999763940777	WITHOUT_CLASSIFICATION	2.3605922315394496E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999997520660656	WITHOUT_CLASSIFICATION	2.479339343942163E-7	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999961209689426	WITHOUT_CLASSIFICATION	3.87903105736912E-6	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999881700083	WITHOUT_CLASSIFICATION	1.1829991702142608E-8	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999998697041	WITHOUT_CLASSIFICATION	1.302958494431305E-10	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999999128814108	WITHOUT_CLASSIFICATION	8.71185892271644E-8	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999997638276933	WITHOUT_CLASSIFICATION	2.361723068123741E-7	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999539607141	WITHOUT_CLASSIFICATION	4.603928591297068E-8	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999941295106075	WITHOUT_CLASSIFICATION	5.870489392486587E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999773511877615	WITHOUT_CLASSIFICATION	2.2648812238502694E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999924830116511	WITHOUT_CLASSIFICATION	7.516988348880738E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999466239254863	WITHOUT_CLASSIFICATION	5.337607451363298E-5	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999459323259151	WITHOUT_CLASSIFICATION	5.4067674084881314E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999451556296339	WITHOUT_CLASSIFICATION	5.484437036600109E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9995590033489582	WITHOUT_CLASSIFICATION	4.4099665104183213E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999983856570863	WITHOUT_CLASSIFICATION	1.614342913751716E-6	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9999459208294091	WITHOUT_CLASSIFICATION	5.407917059074853E-5	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999675627894705	WITHOUT_CLASSIFICATION	3.243721052952784E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999995462757751	WITHOUT_CLASSIFICATION	4.5372422482775446E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999773511877615	WITHOUT_CLASSIFICATION	2.2648812238502694E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999466239254863	WITHOUT_CLASSIFICATION	5.337607451363298E-5	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999988464292	WITHOUT_CLASSIFICATION	1.1535707176014286E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997911745344	WITHOUT_CLASSIFICATION	2.0882546558403166E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.999999558765447	WITHOUT_CLASSIFICATION	4.412345529886423E-7	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9999989330015936	WITHOUT_CLASSIFICATION	1.0669984063970175E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997490582598	WITHOUT_CLASSIFICATION	2.5094174017428106E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.999994489446549	WITHOUT_CLASSIFICATION	5.510553451018272E-6	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999134580504101	WITHOUT_CLASSIFICATION	8.654194958989697E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999290129117309	WITHOUT_CLASSIFICATION	7.098708826905906E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999867696098208	WITHOUT_CLASSIFICATION	1.3230390179171974E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999969327831498	WITHOUT_CLASSIFICATION	3.0672168501534883E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999885164061898	WITHOUT_CLASSIFICATION	1.1483593810180157E-5	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999984606561979	WITHOUT_CLASSIFICATION	1.5393438020713578E-6	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999997760552999	WITHOUT_CLASSIFICATION	2.2394470007050475E-7	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999983175118669	WITHOUT_CLASSIFICATION	1.6824881331146716E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.999999130918443	WITHOUT_CLASSIFICATION	8.690815570718747E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999991744399424	WITHOUT_CLASSIFICATION	8.255600577233578E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999863619955551	WITHOUT_CLASSIFICATION	1.3638004444835598E-5	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9998918775187142	WITHOUT_CLASSIFICATION	1.0812248128577886E-4	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999925596728486	WITHOUT_CLASSIFICATION	7.440327151435641E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999814812545	WITHOUT_CLASSIFICATION	1.8518745554435805E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999999445480171	WITHOUT_CLASSIFICATION	5.5451982815654685E-8	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999800535763	WITHOUT_CLASSIFICATION	1.9946423687320112E-8	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999998799546727	WITHOUT_CLASSIFICATION	1.200453273919678E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.999999476978491	WITHOUT_CLASSIFICATION	5.23021509017248E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999999710101817	WITHOUT_CLASSIFICATION	2.8989818321014514E-8	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999398577156	WITHOUT_CLASSIFICATION	6.014228433940954E-8	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999328788223133	WITHOUT_CLASSIFICATION	6.712117768674277E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999934859078891	WITHOUT_CLASSIFICATION	6.514092110851232E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999996537919915	WITHOUT_CLASSIFICATION	3.462080084933273E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999999165005293	WITHOUT_CLASSIFICATION	8.349947062078659E-8	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999994945968813	WITHOUT_CLASSIFICATION	5.054031187889679E-7	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999991168585887	WITHOUT_CLASSIFICATION	8.831414114588253E-7	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999982508838821	WITHOUT_CLASSIFICATION	1.749116117992124E-6	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999982694209139	WITHOUT_CLASSIFICATION	1.7305790862248565E-6	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.999970923653168	WITHOUT_CLASSIFICATION	2.9076346832041552E-5	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999999809562481	WITHOUT_CLASSIFICATION	1.9043751922538104E-8	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999318722999	WITHOUT_CLASSIFICATION	6.812770016431278E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999984884671165	WITHOUT_CLASSIFICATION	1.5115328835465927E-6	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999764976414	WITHOUT_CLASSIFICATION	2.3502358527177943E-8	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999999612523662	WITHOUT_CLASSIFICATION	3.87476337676013E-8	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999588647963726	WITHOUT_CLASSIFICATION	4.1135203627329515E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999991079887972	WITHOUT_CLASSIFICATION	8.920112026623237E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999975043001413	WITHOUT_CLASSIFICATION	2.4956998586739826E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999997239639861	WITHOUT_CLASSIFICATION	2.760360139684172E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999996353270052	WITHOUT_CLASSIFICATION	3.6467299487304147E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9907161704092825	WITHOUT_CLASSIFICATION	0.009283829590717507	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999992367150787	WITHOUT_CLASSIFICATION	7.63284921235303E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.999746773250369	WITHOUT_CLASSIFICATION	2.5322674963094494E-4	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999994389310437	WITHOUT_CLASSIFICATION	5.610689564084401E-7	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999974511052155	WITHOUT_CLASSIFICATION	2.5488947843982702E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999998912789843	WITHOUT_CLASSIFICATION	1.0872101577886035E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.999998320932467	WITHOUT_CLASSIFICATION	1.6790675329387957E-6	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999993456315656	WITHOUT_CLASSIFICATION	6.543684345088628E-7	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999920354312	WITHOUT_CLASSIFICATION	7.964568768681066E-9	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999984696958945	WITHOUT_CLASSIFICATION	1.530304105556545E-6	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999979066131174	WITHOUT_CLASSIFICATION	2.0933868825504475E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999990921267515	WITHOUT_CLASSIFICATION	9.078732485905022E-7	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999976486894724	WITHOUT_CLASSIFICATION	2.351310527621367E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999928589000467	WITHOUT_CLASSIFICATION	7.141099953292029E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999980033518144	WITHOUT_CLASSIFICATION	1.996648185561912E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999956020663343	WITHOUT_CLASSIFICATION	4.397933665688647E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999681639864006	WITHOUT_CLASSIFICATION	3.183601359933541E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998199283805	WITHOUT_CLASSIFICATION	1.8007161955688993E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998199283805	WITHOUT_CLASSIFICATION	1.8007161955688993E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999114313997232	WITHOUT_CLASSIFICATION	8.856860027683541E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999995801071692	WITHOUT_CLASSIFICATION	4.198928308239485E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.999997922826497	WITHOUT_CLASSIFICATION	2.077173502926197E-6	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.999940589823378	WITHOUT_CLASSIFICATION	5.94101766219375E-5	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999999004497311	WITHOUT_CLASSIFICATION	9.955026895474868E-8	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999995797386488	WITHOUT_CLASSIFICATION	4.202613511398755E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.999999036740618	WITHOUT_CLASSIFICATION	9.632593819909475E-7	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9998432853788481	WITHOUT_CLASSIFICATION	1.5671462115181872E-4	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9998818931421177	WITHOUT_CLASSIFICATION	1.1810685788230946E-4	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.999752961849375	WITHOUT_CLASSIFICATION	2.4703815062500215E-4	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999993428888954	WITHOUT_CLASSIFICATION	6.571111045490131E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999975272690138	WITHOUT_CLASSIFICATION	2.472730986237202E-6	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999987858131408	WITHOUT_CLASSIFICATION	1.2141868591841835E-6	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999972932367077	WITHOUT_CLASSIFICATION	2.7067632922162084E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999998674062933	WITHOUT_CLASSIFICATION	1.3259370664748916E-7	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999988240044937	WITHOUT_CLASSIFICATION	1.1759955063336537E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999996925870712	WITHOUT_CLASSIFICATION	3.0741292885955226E-7	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9990426053276202	WITHOUT_CLASSIFICATION	9.573946723797301E-4	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999998622702442	WITHOUT_CLASSIFICATION	1.3772975593024678E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999908292266834	WITHOUT_CLASSIFICATION	9.170773316644141E-6	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999998785785049	WITHOUT_CLASSIFICATION	1.214214950556475E-7	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999971747049617	WITHOUT_CLASSIFICATION	2.8252950382253437E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999962373813297	WITHOUT_CLASSIFICATION	3.762618670182903E-6	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999998652618156	WITHOUT_CLASSIFICATION	1.3473818439995488E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999375444621638	WITHOUT_CLASSIFICATION	6.245553783620401E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999215221855112	WITHOUT_CLASSIFICATION	7.847781448878967E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999971747049617	WITHOUT_CLASSIFICATION	2.8252950382253437E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999925469197604	WITHOUT_CLASSIFICATION	7.453080239573297E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.999625876183269	WITHOUT_CLASSIFICATION	3.7412381673098766E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999800685115734	WITHOUT_CLASSIFICATION	1.9931488426626607E-5	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999580488199261	WITHOUT_CLASSIFICATION	4.1951180073893634E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9926737129129435	WITHOUT_CLASSIFICATION	0.0073262870870566075	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999997880959438	WITHOUT_CLASSIFICATION	2.1190405614992934E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998501358354	WITHOUT_CLASSIFICATION	1.4986416468448715E-7	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999721134795	WITHOUT_CLASSIFICATION	2.7886520414758543E-8	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999954859903102	WITHOUT_CLASSIFICATION	4.514009689766257E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992126251046	WITHOUT_CLASSIFICATION	7.873748953334676E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999905378035208	WITHOUT_CLASSIFICATION	9.462196479249257E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999725264439	WITHOUT_CLASSIFICATION	2.7473556037923193E-8	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.999998472707104	WITHOUT_CLASSIFICATION	1.5272928959638027E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999997217320357	WITHOUT_CLASSIFICATION	2.782679643321478E-7	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.999999849842707	WITHOUT_CLASSIFICATION	1.5015729301008347E-7	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999766676940778	WITHOUT_CLASSIFICATION	2.3332305922269335E-5	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999024380209323	WITHOUT_CLASSIFICATION	9.756197906772507E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999992506953322	WITHOUT_CLASSIFICATION	7.49304667683785E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999997287283995	WITHOUT_CLASSIFICATION	2.712716005827204E-7	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999987623773046	WITHOUT_CLASSIFICATION	1.237622695440686E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999988417783112	WITHOUT_CLASSIFICATION	1.15822168868752E-6	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999955013491773	WITHOUT_CLASSIFICATION	4.498650822762744E-6	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999997130516637	WITHOUT_CLASSIFICATION	2.869483362496978E-7	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999996127644721	WITHOUT_CLASSIFICATION	3.8723552789689825E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999870917254252	WITHOUT_CLASSIFICATION	1.29082745747107E-5	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999572787995	WITHOUT_CLASSIFICATION	4.2721200465388846E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999824943192	WITHOUT_CLASSIFICATION	1.7505680787406475E-8	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999959590906067	WITHOUT_CLASSIFICATION	4.040909393338331E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999996975916461	WITHOUT_CLASSIFICATION	3.0240835394022E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999999462352009	WITHOUT_CLASSIFICATION	5.376479914436914E-8	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999972629659691	WITHOUT_CLASSIFICATION	2.737034030865128E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999998218822086	WITHOUT_CLASSIFICATION	1.781177914369034E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9926737129129435	WITHOUT_CLASSIFICATION	0.0073262870870566075	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999997880959438	WITHOUT_CLASSIFICATION	2.1190405614992934E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998501358354	WITHOUT_CLASSIFICATION	1.4986416468448715E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999954859903102	WITHOUT_CLASSIFICATION	4.514009689766257E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992126251046	WITHOUT_CLASSIFICATION	7.873748953334676E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9972402209163832	WITHOUT_CLASSIFICATION	0.0027597790836168664	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999997032052506	WITHOUT_CLASSIFICATION	2.967947494490238E-7	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999642760329	WITHOUT_CLASSIFICATION	3.5723967106090727E-8	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999954939647446	WITHOUT_CLASSIFICATION	4.506035255300597E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9936579366311066	WITHOUT_CLASSIFICATION	0.006342063368893443	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999381710285603	WITHOUT_CLASSIFICATION	6.182897143965851E-5	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999995406996215	WITHOUT_CLASSIFICATION	4.593003784627525E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.999129763816391	WITHOUT_CLASSIFICATION	8.702361836089134E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999754860648579	WITHOUT_CLASSIFICATION	2.451393514210466E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999946696176649	WITHOUT_CLASSIFICATION	5.330382335078098E-6	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999974343446341	WITHOUT_CLASSIFICATION	2.5656553659281262E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999998372015385	WITHOUT_CLASSIFICATION	1.627984616159331E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999963691588971	WITHOUT_CLASSIFICATION	3.6308411029450324E-6	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9995517607559526	WITHOUT_CLASSIFICATION	4.4823924404738957E-4	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999989314592552	WITHOUT_CLASSIFICATION	1.068540744713994E-6	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999991275012695	WITHOUT_CLASSIFICATION	8.724987306074473E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999908552565	WITHOUT_CLASSIFICATION	9.144743403413569E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999995736894993	WITHOUT_CLASSIFICATION	4.263105007590884E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.999999982731734	WITHOUT_CLASSIFICATION	1.7268266097847702E-8	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.999999960207539	WITHOUT_CLASSIFICATION	3.979246101817198E-8	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999997588142824	WITHOUT_CLASSIFICATION	2.411857176932368E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999990806328212	WITHOUT_CLASSIFICATION	9.19367178915047E-7	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999907744678165	WITHOUT_CLASSIFICATION	9.225532183625805E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999998623308085	WITHOUT_CLASSIFICATION	1.3766919149149737E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999846099713146	WITHOUT_CLASSIFICATION	1.539002868545357E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999554481137	WITHOUT_CLASSIFICATION	4.4551886292681684E-8	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999398577156	WITHOUT_CLASSIFICATION	6.014228433940954E-8	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999998912789843	WITHOUT_CLASSIFICATION	1.0872101577886035E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992126251046	WITHOUT_CLASSIFICATION	7.873748953334676E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.999991434380726	WITHOUT_CLASSIFICATION	8.56561927407134E-6	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999739668064375	WITHOUT_CLASSIFICATION	2.6033193562537204E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999223740403	WITHOUT_CLASSIFICATION	7.762595961847101E-8	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.99998212791339	WITHOUT_CLASSIFICATION	1.7872086610019687E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.99998212791339	WITHOUT_CLASSIFICATION	1.7872086610019687E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999583898017	WITHOUT_CLASSIFICATION	4.16101982778835E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999997085431777	WITHOUT_CLASSIFICATION	2.9145682238504567E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999994759550223	WITHOUT_CLASSIFICATION	5.240449777922699E-7	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999975908880301	WITHOUT_CLASSIFICATION	2.4091119699251557E-6	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999964366880875	WITHOUT_CLASSIFICATION	3.5633119125839977E-6	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999956889894643	WITHOUT_CLASSIFICATION	4.3110105356493936E-6	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999997337207381	WITHOUT_CLASSIFICATION	2.662792618624657E-7	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999872306931048	WITHOUT_CLASSIFICATION	1.2769306895170695E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999087758940642	WITHOUT_CLASSIFICATION	9.122410593573748E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999956791639235	WITHOUT_CLASSIFICATION	4.320836076486453E-6	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999995794675535	WITHOUT_CLASSIFICATION	4.205324465559399E-7	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999967594863647	WITHOUT_CLASSIFICATION	3.2405136354109873E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999528504248978	WITHOUT_CLASSIFICATION	4.7149575102086815E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9789080721070137	WITHOUT_CLASSIFICATION	0.021091927892986313	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999980759132167	WITHOUT_CLASSIFICATION	1.924086783330329E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999951470119189	WITHOUT_CLASSIFICATION	4.852988081069194E-6	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999989392513926	WITHOUT_CLASSIFICATION	1.060748607350834E-6	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999998030280864	WITHOUT_CLASSIFICATION	1.9697191353710452E-7	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.999995947780749	WITHOUT_CLASSIFICATION	4.052219251026506E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999976036803538	WITHOUT_CLASSIFICATION	2.39631964624379E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999951470119189	WITHOUT_CLASSIFICATION	4.852988081069194E-6	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999999090553799	WITHOUT_CLASSIFICATION	9.094461997177049E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999994655346931	WITHOUT_CLASSIFICATION	5.344653069131357E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999994655346931	WITHOUT_CLASSIFICATION	5.344653069131357E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999998030280864	WITHOUT_CLASSIFICATION	1.9697191353710452E-7	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.999998668194511	WITHOUT_CLASSIFICATION	1.331805489086718E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999914354359412	WITHOUT_CLASSIFICATION	8.564564058837622E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999914354359412	WITHOUT_CLASSIFICATION	8.564564058837622E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999853970658	WITHOUT_CLASSIFICATION	1.4602934058714971E-8	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999998876323458	WITHOUT_CLASSIFICATION	1.1236765419385627E-7	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999381453261259	WITHOUT_CLASSIFICATION	6.185467387409228E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999986007127397	WITHOUT_CLASSIFICATION	1.3992872603535285E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999997391193526	WITHOUT_CLASSIFICATION	2.608806474770377E-7	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999941979068008	WITHOUT_CLASSIFICATION	5.802093199197705E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999942913431515	WITHOUT_CLASSIFICATION	5.708656848490954E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999807628174016	WITHOUT_CLASSIFICATION	1.9237182598444363E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999953511925372	WITHOUT_CLASSIFICATION	4.6488074628121755E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999977255084509	WITHOUT_CLASSIFICATION	2.2744915490325618E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999995049907257	WITHOUT_CLASSIFICATION	4.950092743039655E-7	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999834991256262	WITHOUT_CLASSIFICATION	1.6500874373788737E-5	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9999843800005753	WITHOUT_CLASSIFICATION	1.5619999424696994E-5	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999990796598971	WITHOUT_CLASSIFICATION	9.203401028843842E-7	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9997188183321494	WITHOUT_CLASSIFICATION	2.811816678506664E-4	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999992120000074	WITHOUT_CLASSIFICATION	7.879999927206271E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999980261694668	WITHOUT_CLASSIFICATION	1.9738305331891985E-6	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999999440764522	WITHOUT_CLASSIFICATION	5.5923547739950886E-8	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999973739143136	WITHOUT_CLASSIFICATION	2.62608568630385E-6	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.999993406650064	WITHOUT_CLASSIFICATION	6.593349935934836E-6	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.999999663434811	WITHOUT_CLASSIFICATION	3.3656518908587174E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999997104050039	WITHOUT_CLASSIFICATION	2.895949960604729E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999986455182872	WITHOUT_CLASSIFICATION	1.3544817127426514E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999087758940642	WITHOUT_CLASSIFICATION	9.122410593573748E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999982041344943	WITHOUT_CLASSIFICATION	1.7958655057663164E-6	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999880584293	WITHOUT_CLASSIFICATION	1.194157087367193E-8	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999002556911	WITHOUT_CLASSIFICATION	9.974430894982852E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999993773056186	WITHOUT_CLASSIFICATION	6.226943813388728E-7	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999968101756033	WITHOUT_CLASSIFICATION	3.189824396613766E-6	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999997080707113	WITHOUT_CLASSIFICATION	2.9192928876250796E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999968914104256	WITHOUT_CLASSIFICATION	3.108589574492065E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999935443243	WITHOUT_CLASSIFICATION	6.455675650233417E-9	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999997825433313	WITHOUT_CLASSIFICATION	2.1745666864174504E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999986225072184	WITHOUT_CLASSIFICATION	1.3774927816360261E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999990286476167	WITHOUT_CLASSIFICATION	9.713523832543607E-7	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.999994770827808	WITHOUT_CLASSIFICATION	5.229172192027368E-6	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9995837538460846	WITHOUT_CLASSIFICATION	4.1624615391549444E-4	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999939438424423	WITHOUT_CLASSIFICATION	6.056157557692667E-6	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999995185410457	WITHOUT_CLASSIFICATION	4.814589542172759E-7	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999998227582761	WITHOUT_CLASSIFICATION	1.7724172394515718E-7	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999973084761268	WITHOUT_CLASSIFICATION	2.6915238732909512E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999869836447383	WITHOUT_CLASSIFICATION	1.3016355261768553E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999968311087344	WITHOUT_CLASSIFICATION	3.168891265696154E-6	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999988435777357	WITHOUT_CLASSIFICATION	1.1564222642020048E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999999305715978	WITHOUT_CLASSIFICATION	6.942840219337461E-8	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999961630844001	WITHOUT_CLASSIFICATION	3.8369155999294755E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9998496175012159	WITHOUT_CLASSIFICATION	1.5038249878402172E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9996735234787134	WITHOUT_CLASSIFICATION	3.2647652128657556E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.999997787059147	WITHOUT_CLASSIFICATION	2.2129408530751093E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999989291835316	WITHOUT_CLASSIFICATION	1.0708164683680638E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.999997991930209	WITHOUT_CLASSIFICATION	2.008069791031102E-6	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999991262301386	WITHOUT_CLASSIFICATION	8.737698613861389E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999999411568606	WITHOUT_CLASSIFICATION	5.8843139219511454E-8	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999992680097094	WITHOUT_CLASSIFICATION	7.319902906094436E-7	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.999998483135428	WITHOUT_CLASSIFICATION	1.5168645719061774E-6	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999995385987671	WITHOUT_CLASSIFICATION	4.6140123288583046E-7	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9998640426648585	WITHOUT_CLASSIFICATION	1.359573351413576E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9998408694219494	WITHOUT_CLASSIFICATION	1.591305780505206E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9997048916247915	WITHOUT_CLASSIFICATION	2.951083752085093E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999998496433464	WITHOUT_CLASSIFICATION	1.5035665347961384E-7	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999463622380433	WITHOUT_CLASSIFICATION	5.3637761956728284E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999463622380433	WITHOUT_CLASSIFICATION	5.3637761956728284E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999996004217319	WITHOUT_CLASSIFICATION	3.995782681681022E-7	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.999994704802268	WITHOUT_CLASSIFICATION	5.2951977319015896E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999665444909	WITHOUT_CLASSIFICATION	3.345550924857215E-8	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9998133450373873	WITHOUT_CLASSIFICATION	1.8665496261275854E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999994503071604	WITHOUT_CLASSIFICATION	5.4969283960404E-7	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999825605298754	WITHOUT_CLASSIFICATION	1.7439470124555E-5	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999983402622914	WITHOUT_CLASSIFICATION	1.6597377086784037E-6	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.999995165539548	WITHOUT_CLASSIFICATION	4.834460451985848E-6	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999958162396331	WITHOUT_CLASSIFICATION	4.183760366904626E-6	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999988817709984	WITHOUT_CLASSIFICATION	1.1182290016526895E-6	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999926225758752	WITHOUT_CLASSIFICATION	7.377424124781571E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999562806884753	WITHOUT_CLASSIFICATION	4.371931152474808E-5	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999999630002306	WITHOUT_CLASSIFICATION	3.699976937388427E-8	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999996292426518	WITHOUT_CLASSIFICATION	3.7075734814031554E-7	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999910165717785	WITHOUT_CLASSIFICATION	8.983428221571325E-6	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999988268794666	WITHOUT_CLASSIFICATION	1.1731205334655082E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999999830547394	WITHOUT_CLASSIFICATION	1.6945260677607476E-8	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999417656613	WITHOUT_CLASSIFICATION	5.823433862802957E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999824070393594	WITHOUT_CLASSIFICATION	1.759296064062967E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999980360867529	WITHOUT_CLASSIFICATION	1.9639132470500912E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999482286467715	WITHOUT_CLASSIFICATION	5.1771353228430436E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999482286467715	WITHOUT_CLASSIFICATION	5.1771353228430436E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999999463394578	WITHOUT_CLASSIFICATION	5.366054226430193E-8	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999728291012	WITHOUT_CLASSIFICATION	2.7170898779720575E-8	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999998910360597	WITHOUT_CLASSIFICATION	1.0896394037206406E-7	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999994025890531	WITHOUT_CLASSIFICATION	5.974109469696349E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999999080141905	WITHOUT_CLASSIFICATION	9.198580951566464E-8	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999985563006952	WITHOUT_CLASSIFICATION	1.443699304803199E-6	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.999991689423721	WITHOUT_CLASSIFICATION	8.310576279126795E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999952279331304	WITHOUT_CLASSIFICATION	4.772066869518759E-6	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999975453123187	WITHOUT_CLASSIFICATION	2.4546876813538756E-6	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9999677316715454	WITHOUT_CLASSIFICATION	3.226832845458476E-5	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999995918047293	WITHOUT_CLASSIFICATION	4.081952706078307E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999996878920048	WITHOUT_CLASSIFICATION	3.1210799518123973E-7	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999996373603163	WITHOUT_CLASSIFICATION	3.6263968367724343E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.999999979499228	WITHOUT_CLASSIFICATION	2.0500771967665685E-8	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999195757805	WITHOUT_CLASSIFICATION	8.042421951381744E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.99999999796933	WITHOUT_CLASSIFICATION	2.0306699615056335E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999901900705929	WITHOUT_CLASSIFICATION	9.809929407170434E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.99999966321483	WITHOUT_CLASSIFICATION	3.367851699320526E-7	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999996474717616	WITHOUT_CLASSIFICATION	3.52528238396303E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999907485009789	WITHOUT_CLASSIFICATION	9.251499021111432E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999835569928229	WITHOUT_CLASSIFICATION	1.6443007177090677E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997911745344	WITHOUT_CLASSIFICATION	2.0882546558403166E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999995042028134	WITHOUT_CLASSIFICATION	4.95797186637238E-7	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999997344428592	WITHOUT_CLASSIFICATION	2.6555714088080363E-7	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999957847759648	WITHOUT_CLASSIFICATION	4.215224035095165E-6	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999996607651759	WITHOUT_CLASSIFICATION	3.3923482412183804E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999884804667	WITHOUT_CLASSIFICATION	1.1519533388649773E-8	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999999950795225	WITHOUT_CLASSIFICATION	4.920477482697332E-9	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999961498203291	WITHOUT_CLASSIFICATION	3.850179670943453E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999998737545479	WITHOUT_CLASSIFICATION	1.262454520528207E-7	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999978241575599	WITHOUT_CLASSIFICATION	2.1758424401520308E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999999678294971	WITHOUT_CLASSIFICATION	3.2170502894376905E-8	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999924693226764	WITHOUT_CLASSIFICATION	7.5306773235631335E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999924693226764	WITHOUT_CLASSIFICATION	7.5306773235631335E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9973343933728221	WITHOUT_CLASSIFICATION	0.0026656066271778744	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999963634741686	WITHOUT_CLASSIFICATION	3.6365258312829777E-6	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999995559941125	WITHOUT_CLASSIFICATION	4.440058875768735E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993086654938	WITHOUT_CLASSIFICATION	6.913345062156529E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998372934876	WITHOUT_CLASSIFICATION	1.6270651245701952E-7	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999994839353141	WITHOUT_CLASSIFICATION	5.160646858387163E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999908930631392	WITHOUT_CLASSIFICATION	9.10693686083686E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999975249765075	WITHOUT_CLASSIFICATION	2.475023492436739E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.999999939533041	WITHOUT_CLASSIFICATION	6.04669590861591E-8	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999993727637553	WITHOUT_CLASSIFICATION	6.272362446588864E-7	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.999998798019532	WITHOUT_CLASSIFICATION	1.2019804680002556E-6	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999996868834717	WITHOUT_CLASSIFICATION	3.131165283171795E-7	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999983735279957	WITHOUT_CLASSIFICATION	1.6264720042982821E-6	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999998995882411	WITHOUT_CLASSIFICATION	1.0041175892302558E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999993393699691	WITHOUT_CLASSIFICATION	6.606300309662095E-7	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999064075205	WITHOUT_CLASSIFICATION	9.359247950956602E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9996167226545273	WITHOUT_CLASSIFICATION	3.832773454727685E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9998628499004553	WITHOUT_CLASSIFICATION	1.3715009954466792E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999986541909949	WITHOUT_CLASSIFICATION	1.3458090050759207E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999686638470291	WITHOUT_CLASSIFICATION	3.1336152970960924E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999087758940642	WITHOUT_CLASSIFICATION	9.122410593573748E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.999949301123461	WITHOUT_CLASSIFICATION	5.069887653896949E-5	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999918032969722	WITHOUT_CLASSIFICATION	8.19670302785102E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999995563861198	WITHOUT_CLASSIFICATION	4.436138802257513E-7	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999707398884234	WITHOUT_CLASSIFICATION	2.926011157651559E-5	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.999984615876784	WITHOUT_CLASSIFICATION	1.5384123216030614E-5	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999997272839247	WITHOUT_CLASSIFICATION	2.72716075215047E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999991901750295	WITHOUT_CLASSIFICATION	8.098249706690587E-7	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999943031311708	WITHOUT_CLASSIFICATION	5.69686882929011E-6	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999999625995343	WITHOUT_CLASSIFICATION	3.740046562922831E-8	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999911269119522	WITHOUT_CLASSIFICATION	8.873088047863698E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999846100925	WITHOUT_CLASSIFICATION	1.5389907428003026E-8	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999896126880573	WITHOUT_CLASSIFICATION	1.0387311942652562E-5	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999971824436168	WITHOUT_CLASSIFICATION	2.81755638323167E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9994125779048231	WITHOUT_CLASSIFICATION	5.87422095176871E-4	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999815658092734	WITHOUT_CLASSIFICATION	1.8434190726574213E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999984053630417	WITHOUT_CLASSIFICATION	1.5946369582835747E-6	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999981505504637	WITHOUT_CLASSIFICATION	1.8494495362505898E-6	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999978729121469	WITHOUT_CLASSIFICATION	2.1270878530612085E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999992126251046	WITHOUT_CLASSIFICATION	7.873748953334676E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999952367591246	WITHOUT_CLASSIFICATION	4.763240875389087E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999997656220359	WITHOUT_CLASSIFICATION	2.343779642076566E-7	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.998326328224471	WITHOUT_CLASSIFICATION	0.0016736717755290688	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999999463790504	WITHOUT_CLASSIFICATION	5.36209496487536E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999828544394043	WITHOUT_CLASSIFICATION	1.714556059577247E-5	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999239436176288	WITHOUT_CLASSIFICATION	7.605638237121862E-5	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999789710614451	WITHOUT_CLASSIFICATION	2.102893855488346E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999974309884051	WITHOUT_CLASSIFICATION	2.5690115949408908E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999894407577762	WITHOUT_CLASSIFICATION	1.0559242223875616E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.999996816719419	WITHOUT_CLASSIFICATION	3.183280580979501E-6	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999992064177323	WITHOUT_CLASSIFICATION	7.935822675699123E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999998933857814	WITHOUT_CLASSIFICATION	1.0661421862259634E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.999999690301925	WITHOUT_CLASSIFICATION	3.0969807496887364E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999991057274342	WITHOUT_CLASSIFICATION	8.942725657833629E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999958603410262	WITHOUT_CLASSIFICATION	4.139658973801065E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.999999655568357	WITHOUT_CLASSIFICATION	3.4443164303080156E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999981249277446	WITHOUT_CLASSIFICATION	1.8750722553138211E-6	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999992830705919	WITHOUT_CLASSIFICATION	7.169294079810656E-7	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.999999942188872	WITHOUT_CLASSIFICATION	5.781112798068058E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999996075575651	WITHOUT_CLASSIFICATION	3.924424348185739E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999996075575651	WITHOUT_CLASSIFICATION	3.924424348185739E-7	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.999938243281097	WITHOUT_CLASSIFICATION	6.175671890306111E-5	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999981075890285	WITHOUT_CLASSIFICATION	1.8924109714301273E-6	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999998810408675	WITHOUT_CLASSIFICATION	1.1895913263124E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999897521906103	WITHOUT_CLASSIFICATION	1.0247809389665493E-5	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999999904804764	WITHOUT_CLASSIFICATION	9.519523599114302E-9	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999977998929821	WITHOUT_CLASSIFICATION	2.20010701792518E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9998834160802398	WITHOUT_CLASSIFICATION	1.1658391976012946E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999967262568027	WITHOUT_CLASSIFICATION	3.2737431972695314E-6	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999967262568027	WITHOUT_CLASSIFICATION	3.2737431972695314E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999985126696969	WITHOUT_CLASSIFICATION	1.48733030313049E-6	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999983775906579	WITHOUT_CLASSIFICATION	1.622409342156408E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999995086319053	WITHOUT_CLASSIFICATION	4.913680947085436E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.999993767718809	WITHOUT_CLASSIFICATION	6.232281190972969E-6	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999930779947506	WITHOUT_CLASSIFICATION	6.9220052495034525E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995950617503	WITHOUT_CLASSIFICATION	4.049382497665385E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999998554980509	WITHOUT_CLASSIFICATION	1.4450194903688432E-7	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999999840992592	WITHOUT_CLASSIFICATION	1.590074086966753E-8	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999998586364982	WITHOUT_CLASSIFICATION	1.413635018502219E-7	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999845785304035	WITHOUT_CLASSIFICATION	1.5421469596531755E-5	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999909421261239	WITHOUT_CLASSIFICATION	9.05787387614476E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999990358280444	WITHOUT_CLASSIFICATION	9.641719557003614E-7	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.999999967624935	WITHOUT_CLASSIFICATION	3.237506499840274E-8	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999996782138852	WITHOUT_CLASSIFICATION	3.217861147592733E-7	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999997839760554	WITHOUT_CLASSIFICATION	2.1602394457292672E-7	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999999749037483	WITHOUT_CLASSIFICATION	2.5096251708982054E-8	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.999851355288543	WITHOUT_CLASSIFICATION	1.4864471145698628E-4	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.999998276723598	WITHOUT_CLASSIFICATION	1.7232764020819174E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999961160473552	WITHOUT_CLASSIFICATION	3.883952644851405E-6	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999993513208506	WITHOUT_CLASSIFICATION	6.486791493616781E-7	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999961764495265	WITHOUT_CLASSIFICATION	3.823550473464645E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999998626953107	WITHOUT_CLASSIFICATION	1.3730468933181336E-7	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999437011796081	WITHOUT_CLASSIFICATION	5.629882039189238E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999968000202655	WITHOUT_CLASSIFICATION	3.1999797346398197E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999997743090187	WITHOUT_CLASSIFICATION	2.2569098125397348E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999999119034748	WITHOUT_CLASSIFICATION	8.809652519693042E-8	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999956852238463	WITHOUT_CLASSIFICATION	4.314776153635223E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999985113703443	WITHOUT_CLASSIFICATION	1.4886296556697449E-6	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999988572904576	WITHOUT_CLASSIFICATION	1.1427095424402282E-6	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9997391037078478	WITHOUT_CLASSIFICATION	2.608962921521291E-4	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999998609307338	WITHOUT_CLASSIFICATION	1.3906926619732564E-7	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999947444808621	WITHOUT_CLASSIFICATION	5.255519137820889E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9895725813089754	WITHOUT_CLASSIFICATION	0.010427418691024619	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999999883993196	WITHOUT_CLASSIFICATION	1.1600680360741586E-8	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999820586893882	WITHOUT_CLASSIFICATION	1.7941310611763066E-5	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999504182270913	WITHOUT_CLASSIFICATION	4.9581772908822846E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999877457679323	WITHOUT_CLASSIFICATION	1.2254232067859444E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999970384985227	WITHOUT_CLASSIFICATION	2.9615014772220735E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9998992724130421	WITHOUT_CLASSIFICATION	1.0072758695791311E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.999999488501701	WITHOUT_CLASSIFICATION	5.114982989484075E-7	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999994114616915	WITHOUT_CLASSIFICATION	5.88538308417259E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9997142702271211	WITHOUT_CLASSIFICATION	2.857297728788773E-4	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999933107629662	WITHOUT_CLASSIFICATION	6.689237033803884E-6	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999968373385362	WITHOUT_CLASSIFICATION	3.1626614638135373E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999975720197415	WITHOUT_CLASSIFICATION	2.4279802585043463E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9999423960646466	WITHOUT_CLASSIFICATION	5.7603935353476995E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999566359325662	WITHOUT_CLASSIFICATION	4.336406743374407E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997911745344	WITHOUT_CLASSIFICATION	2.0882546558403166E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999566359325662	WITHOUT_CLASSIFICATION	4.336406743374407E-5	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999992311864048	WITHOUT_CLASSIFICATION	7.688135953327846E-7	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.999991463878422	WITHOUT_CLASSIFICATION	8.536121578057425E-6	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999580773066	WITHOUT_CLASSIFICATION	4.192269342030052E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999805017051329	WITHOUT_CLASSIFICATION	1.949829486706469E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9996380821337619	WITHOUT_CLASSIFICATION	3.619178662380589E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9999345457733396	WITHOUT_CLASSIFICATION	6.54542266603803E-5	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999496036111302	WITHOUT_CLASSIFICATION	5.0396388869932596E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999960308661431	WITHOUT_CLASSIFICATION	3.96913385696377E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999999761452479	WITHOUT_CLASSIFICATION	2.385475206205222E-8	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999999742858511	WITHOUT_CLASSIFICATION	2.571414888709768E-8	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999999858018496	WITHOUT_CLASSIFICATION	1.4198150465125919E-8	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999998080631612	WITHOUT_CLASSIFICATION	1.9193683881404387E-7	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999998765698737	WITHOUT_CLASSIFICATION	1.2343012638329715E-7	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999997045292215	WITHOUT_CLASSIFICATION	2.954707786081726E-7	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999998650519373	WITHOUT_CLASSIFICATION	1.3494806277154157E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999991917493	WITHOUT_CLASSIFICATION	8.08250818258381E-10	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999999165815896	WITHOUT_CLASSIFICATION	8.341841044153814E-8	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9998935668948841	WITHOUT_CLASSIFICATION	1.064331051158628E-4	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999845055064006	WITHOUT_CLASSIFICATION	1.5494493599467446E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999848809000734	WITHOUT_CLASSIFICATION	1.5119099926578992E-5	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999999502045004	WITHOUT_CLASSIFICATION	4.979549956590614E-8	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999869939774	WITHOUT_CLASSIFICATION	1.3006022596146132E-8	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999999652709646	WITHOUT_CLASSIFICATION	3.472903541094513E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999768109527	WITHOUT_CLASSIFICATION	2.3189047324866317E-8	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999997866539423	WITHOUT_CLASSIFICATION	2.133460577915696E-7	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999960434057026	WITHOUT_CLASSIFICATION	3.956594297425803E-6	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9999469902204245	WITHOUT_CLASSIFICATION	5.300977957540977E-5	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999943810456758	WITHOUT_CLASSIFICATION	5.6189543241084E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.999999422427279	WITHOUT_CLASSIFICATION	5.775727210211581E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.999907721360007	WITHOUT_CLASSIFICATION	9.227863999286296E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999996943418212	WITHOUT_CLASSIFICATION	3.056581787278984E-7	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999883947305573	WITHOUT_CLASSIFICATION	1.1605269442561819E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9999840545599987	WITHOUT_CLASSIFICATION	1.594544000125232E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998235053096	WITHOUT_CLASSIFICATION	1.7649469036474944E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999997469644175	WITHOUT_CLASSIFICATION	2.530355824845989E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999932136169	WITHOUT_CLASSIFICATION	6.786383117910633E-9	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999999927708052	WITHOUT_CLASSIFICATION	7.229194820255484E-9	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999970400654732	WITHOUT_CLASSIFICATION	2.9599345267623228E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999970400654732	WITHOUT_CLASSIFICATION	2.9599345267623228E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999780929622163	WITHOUT_CLASSIFICATION	2.190703778367591E-5	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999946686155954	WITHOUT_CLASSIFICATION	5.331384404599158E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999813758538926	WITHOUT_CLASSIFICATION	1.8624146107473735E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999999957584682	WITHOUT_CLASSIFICATION	4.241531801413093E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999988674154939	WITHOUT_CLASSIFICATION	1.1325845060920793E-6	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999655871462	WITHOUT_CLASSIFICATION	3.441285373647311E-8	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999863461203937	WITHOUT_CLASSIFICATION	1.3653879606362326E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999892241872	WITHOUT_CLASSIFICATION	1.0775812726752627E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999997586114281	WITHOUT_CLASSIFICATION	2.413885719812914E-7	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999884204338071	WITHOUT_CLASSIFICATION	1.157956619299448E-5	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9999663609019295	WITHOUT_CLASSIFICATION	3.363909807045988E-5	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9997124578496432	WITHOUT_CLASSIFICATION	2.875421503568263E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999972492791073	WITHOUT_CLASSIFICATION	2.7507208927678732E-6	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9982374618212551	WITHOUT_CLASSIFICATION	0.0017625381787450128	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.999990334974933	WITHOUT_CLASSIFICATION	9.665025067018067E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.999999937191526	WITHOUT_CLASSIFICATION	6.280847400075389E-8	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999994713454562	WITHOUT_CLASSIFICATION	5.286545437730011E-7	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999941292009848	WITHOUT_CLASSIFICATION	5.870799015240736E-6	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999995440884017	WITHOUT_CLASSIFICATION	4.55911598305635E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999977035467001	WITHOUT_CLASSIFICATION	2.296453299888866E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999983474221408	WITHOUT_CLASSIFICATION	1.6525778592104575E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997490582598	WITHOUT_CLASSIFICATION	2.5094174017428106E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9999793382977133	WITHOUT_CLASSIFICATION	2.06617022865695E-5	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9999682342803056	WITHOUT_CLASSIFICATION	3.1765719694349456E-5	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9257962396375663	WITHOUT_CLASSIFICATION	0.07420376036243363	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999993952152444	WITHOUT_CLASSIFICATION	6.047847555342317E-7	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9999252293605762	WITHOUT_CLASSIFICATION	7.477063942375894E-5	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999651030230569	WITHOUT_CLASSIFICATION	3.489697694305101E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999976272043822	WITHOUT_CLASSIFICATION	2.3727956178262947E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999982824530496	WITHOUT_CLASSIFICATION	1.7175469504397582E-6	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999726025955751	WITHOUT_CLASSIFICATION	2.7397404425031962E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999998551388147	WITHOUT_CLASSIFICATION	1.4486118534057315E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999939213739732	WITHOUT_CLASSIFICATION	6.078626026685052E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999998179086286	WITHOUT_CLASSIFICATION	1.8209137145991052E-7	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.999861332140404	WITHOUT_CLASSIFICATION	1.3866785959599262E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.999999846524564	WITHOUT_CLASSIFICATION	1.53475436040579E-7	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999927548740771	WITHOUT_CLASSIFICATION	7.245125922866751E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999927548740771	WITHOUT_CLASSIFICATION	7.245125922866751E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.999999680895521	WITHOUT_CLASSIFICATION	3.191044789211573E-7	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999999769149189	WITHOUT_CLASSIFICATION	2.30850810386506E-8	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999994337316765	WITHOUT_CLASSIFICATION	5.662683234510073E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999059316209	WITHOUT_CLASSIFICATION	9.406837911441532E-8	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999740908954599	WITHOUT_CLASSIFICATION	2.590910454007624E-5	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999840252657305	WITHOUT_CLASSIFICATION	1.5974734269513152E-5	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999989482066717	WITHOUT_CLASSIFICATION	1.051793328325776E-6	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999992144976596	WITHOUT_CLASSIFICATION	7.855023403230216E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999935734108804	WITHOUT_CLASSIFICATION	6.426589119638045E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.999999930105991	WITHOUT_CLASSIFICATION	6.989400897497326E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999998938209079	WITHOUT_CLASSIFICATION	1.0617909206807768E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999881000737078	WITHOUT_CLASSIFICATION	1.1899926292238309E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999919652882441	WITHOUT_CLASSIFICATION	8.034711755984696E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999994592608971	WITHOUT_CLASSIFICATION	5.407391028916862E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999996499980555	WITHOUT_CLASSIFICATION	3.5000194454118327E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999953392247225	WITHOUT_CLASSIFICATION	4.660775277495397E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999944885017829	WITHOUT_CLASSIFICATION	5.511498217140085E-6	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999998090355349	WITHOUT_CLASSIFICATION	1.9096446518825268E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999971448791346	WITHOUT_CLASSIFICATION	2.855120865460772E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999996222297182	WITHOUT_CLASSIFICATION	3.7777028175522775E-7	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999795890627	WITHOUT_CLASSIFICATION	2.0410937218482894E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999874765982742	WITHOUT_CLASSIFICATION	1.252340172570354E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9993463341198698	WITHOUT_CLASSIFICATION	6.536658801301049E-4	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9995258340515724	WITHOUT_CLASSIFICATION	4.7416594842763436E-4	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.999998623575778	WITHOUT_CLASSIFICATION	1.376424222009925E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999993226252857	WITHOUT_CLASSIFICATION	6.773747143628413E-7	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999995688124433	WITHOUT_CLASSIFICATION	4.311875565986315E-7	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999985561473635	WITHOUT_CLASSIFICATION	1.4438526364175862E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9994951231852114	WITHOUT_CLASSIFICATION	5.04876814788584E-4	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999713220826181	WITHOUT_CLASSIFICATION	2.867791738194295E-5	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999570392485806	WITHOUT_CLASSIFICATION	4.296075141938974E-5	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9998925370817733	WITHOUT_CLASSIFICATION	1.0746291822667907E-4	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999324748794376	WITHOUT_CLASSIFICATION	6.75251205623878E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999504206378627	WITHOUT_CLASSIFICATION	4.957936213739643E-5	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999975876946258	WITHOUT_CLASSIFICATION	2.412305374188507E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999987449944054	WITHOUT_CLASSIFICATION	1.2550055945353418E-6	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.999995150966029	WITHOUT_CLASSIFICATION	4.849033970989951E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.999998882018808	WITHOUT_CLASSIFICATION	1.1179811920009968E-6	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999993866415057	WITHOUT_CLASSIFICATION	6.133584943503546E-7	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999972541719395	WITHOUT_CLASSIFICATION	2.7458280604968324E-6	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999993166265194	WITHOUT_CLASSIFICATION	6.83373480615098E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999874386749172	WITHOUT_CLASSIFICATION	1.2561325082790702E-5	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999945831320923	WITHOUT_CLASSIFICATION	5.416867907724974E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9963051631390116	WITHOUT_CLASSIFICATION	0.0036948368609884363	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999996178580401	WITHOUT_CLASSIFICATION	3.8214195983154724E-7	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9998567419680539	WITHOUT_CLASSIFICATION	1.4325803194627131E-4	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999931204827474	WITHOUT_CLASSIFICATION	6.879517252601485E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999999015392247	WITHOUT_CLASSIFICATION	9.846077531526647E-8	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999985970484188	WITHOUT_CLASSIFICATION	1.4029515812500994E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999997667492747	WITHOUT_CLASSIFICATION	2.3325072528579255E-7	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999988141093824	WITHOUT_CLASSIFICATION	1.1858906176575973E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999998051843338	WITHOUT_CLASSIFICATION	1.948156662368101E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999951914550884	WITHOUT_CLASSIFICATION	4.808544911598748E-6	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999996769811352	WITHOUT_CLASSIFICATION	3.230188648406363E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999999537540143	WITHOUT_CLASSIFICATION	4.6245985737049333E-8	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999990648042689	WITHOUT_CLASSIFICATION	9.351957309331508E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999999164696315	WITHOUT_CLASSIFICATION	8.353036854970931E-8	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.999996018142577	WITHOUT_CLASSIFICATION	3.98185742297826E-6	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999999204002258	WITHOUT_CLASSIFICATION	7.959977426565548E-8	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999772032720142	WITHOUT_CLASSIFICATION	2.2796727985781666E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.999995147128019	WITHOUT_CLASSIFICATION	4.852871981013447E-6	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999991894728885	WITHOUT_CLASSIFICATION	8.105271115228347E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999996247823572	WITHOUT_CLASSIFICATION	3.752176428281008E-7	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999994569624829	WITHOUT_CLASSIFICATION	5.430375169753216E-7	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9999726185193509	WITHOUT_CLASSIFICATION	2.7381480649105048E-5	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.999986893859431	WITHOUT_CLASSIFICATION	1.3106140568980717E-5	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9935767498330942	WITHOUT_CLASSIFICATION	0.006423250166905872	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999781844553	WITHOUT_CLASSIFICATION	2.1815544735582756E-8	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999855745594606	WITHOUT_CLASSIFICATION	1.4425440539528707E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999218543374	WITHOUT_CLASSIFICATION	7.814566263333971E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999284719039	WITHOUT_CLASSIFICATION	7.152809613412209E-8	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999805068462349	WITHOUT_CLASSIFICATION	1.9493153765125844E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999565909318365	WITHOUT_CLASSIFICATION	4.3409068163538274E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999229501589	WITHOUT_CLASSIFICATION	7.704984112183524E-8	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999229501589	WITHOUT_CLASSIFICATION	7.704984112183524E-8	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999974631468947	WITHOUT_CLASSIFICATION	2.5368531053555678E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999969864634306	WITHOUT_CLASSIFICATION	3.013536569393887E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999978106744224	WITHOUT_CLASSIFICATION	2.1893255775944603E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999997125636788	WITHOUT_CLASSIFICATION	2.874363212363249E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999992351702414	WITHOUT_CLASSIFICATION	7.648297585491594E-7	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.999994791215561	WITHOUT_CLASSIFICATION	5.208784438987887E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999984323246681	WITHOUT_CLASSIFICATION	1.5676753319202242E-6	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999997457422247	WITHOUT_CLASSIFICATION	2.542577753484837E-7	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999043923333076	WITHOUT_CLASSIFICATION	9.560766669227843E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999949202367014	WITHOUT_CLASSIFICATION	5.079763298499076E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999997521291125	WITHOUT_CLASSIFICATION	2.478708875459053E-7	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999980979667902	WITHOUT_CLASSIFICATION	1.9020332098013517E-6	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999274409844	WITHOUT_CLASSIFICATION	7.255901558235205E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999787353513838	WITHOUT_CLASSIFICATION	2.126464861624382E-5	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999993009289662	WITHOUT_CLASSIFICATION	6.990710337325782E-7	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999966014304119	WITHOUT_CLASSIFICATION	3.3985695880847873E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999995020051888	WITHOUT_CLASSIFICATION	4.97994811176499E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999995436622512	WITHOUT_CLASSIFICATION	4.563377487207651E-7	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999990470412065	WITHOUT_CLASSIFICATION	9.529587934478997E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999999682585713	WITHOUT_CLASSIFICATION	3.174142877800636E-8	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9995946373776183	WITHOUT_CLASSIFICATION	4.0536262238162355E-4	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999995747118227	WITHOUT_CLASSIFICATION	4.252881773921007E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.999999964332698	WITHOUT_CLASSIFICATION	3.5667301867580945E-8	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999986906418975	WITHOUT_CLASSIFICATION	1.3093581024186826E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999973823318294	WITHOUT_CLASSIFICATION	2.6176681705446056E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999962964549489	WITHOUT_CLASSIFICATION	3.7035450510200855E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999500809944	WITHOUT_CLASSIFICATION	4.991900559827632E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999956344344414	WITHOUT_CLASSIFICATION	4.365565558583015E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999978436051064	WITHOUT_CLASSIFICATION	2.1563948937036843E-6	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.999999836894659	WITHOUT_CLASSIFICATION	1.6310534104859123E-7	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999992897141146	WITHOUT_CLASSIFICATION	7.102858855279742E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999993755141994	WITHOUT_CLASSIFICATION	6.244858006008575E-7	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999755463277	WITHOUT_CLASSIFICATION	2.4453672350988976E-8	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999973769739077	WITHOUT_CLASSIFICATION	2.6230260923428636E-6	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999997787905215	WITHOUT_CLASSIFICATION	2.2120947847984614E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999998394480646	WITHOUT_CLASSIFICATION	1.605519354249267E-7	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999997473179582	WITHOUT_CLASSIFICATION	2.5268204174871635E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999999485619608	WITHOUT_CLASSIFICATION	5.143803910194585E-8	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999890770855	WITHOUT_CLASSIFICATION	1.0922914456198305E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999852223692443	WITHOUT_CLASSIFICATION	1.4777630755689454E-5	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999972305226729	WITHOUT_CLASSIFICATION	2.7694773270548123E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999438527065	WITHOUT_CLASSIFICATION	5.614729348724488E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999959105498769	WITHOUT_CLASSIFICATION	4.089450123107591E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999993462157453	WITHOUT_CLASSIFICATION	6.537842547494716E-7	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999954916255	WITHOUT_CLASSIFICATION	4.508374487355462E-8	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999900795148868	WITHOUT_CLASSIFICATION	9.920485113206008E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999965871014297	WITHOUT_CLASSIFICATION	3.412898570211845E-6	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999980431499279	WITHOUT_CLASSIFICATION	1.9568500720841476E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999886598105814	WITHOUT_CLASSIFICATION	1.1340189418762832E-5	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999865633351339	WITHOUT_CLASSIFICATION	1.3436664866071076E-5	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999886867041591	WITHOUT_CLASSIFICATION	1.1313295840892275E-5	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999867253404698	WITHOUT_CLASSIFICATION	1.3274659530174604E-5	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.751391529474977	WITHOUT_CLASSIFICATION	0.24860847052502294	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999996162359518	WITHOUT_CLASSIFICATION	3.837640482136096E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.992756304801736	WITHOUT_CLASSIFICATION	0.007243695198263865	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999993450599526	WITHOUT_CLASSIFICATION	6.549400475521845E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999961162997175	WITHOUT_CLASSIFICATION	3.883700282442498E-6	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999995022171984	WITHOUT_CLASSIFICATION	4.977828016686548E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999840424878464	WITHOUT_CLASSIFICATION	1.5957512153552156E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999982841230416	WITHOUT_CLASSIFICATION	1.7158769583252713E-6	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999997380289284	WITHOUT_CLASSIFICATION	2.619710715458386E-7	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999978656182501	WITHOUT_CLASSIFICATION	2.1343817499606243E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999997259543181	WITHOUT_CLASSIFICATION	2.740456819235076E-7	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999984553879174	WITHOUT_CLASSIFICATION	1.5446120825080374E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999996361714905	WITHOUT_CLASSIFICATION	3.6382850949060904E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999995023638613	WITHOUT_CLASSIFICATION	4.976361387411509E-7	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999999198886355	WITHOUT_CLASSIFICATION	8.011136457939313E-8	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999996357929414	WITHOUT_CLASSIFICATION	3.642070585749274E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999967382725156	WITHOUT_CLASSIFICATION	3.2617274844060017E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999998041345379	WITHOUT_CLASSIFICATION	1.9586546216209486E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.999998797955276	WITHOUT_CLASSIFICATION	1.202044724026068E-6	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999804815040462	WITHOUT_CLASSIFICATION	1.9518495953853068E-5	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999453492411	WITHOUT_CLASSIFICATION	5.465075900342891E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999983949613388	WITHOUT_CLASSIFICATION	1.6050386612141738E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.999999986528358	WITHOUT_CLASSIFICATION	1.3471641919895264E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999979859474475	WITHOUT_CLASSIFICATION	2.0140525525111058E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999977791846656	WITHOUT_CLASSIFICATION	2.2208153344270256E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999999887822217	WITHOUT_CLASSIFICATION	1.1217778367240002E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999835289253	WITHOUT_CLASSIFICATION	1.6471074752324105E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999993168121335	WITHOUT_CLASSIFICATION	6.831878665524317E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.7764487380514876	WITHOUT_CLASSIFICATION	0.2235512619485123	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999856138527881	WITHOUT_CLASSIFICATION	1.4386147212024647E-5	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999981354636284	WITHOUT_CLASSIFICATION	1.8645363715434646E-6	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999948128282	WITHOUT_CLASSIFICATION	5.18717184875365E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999947566919523	WITHOUT_CLASSIFICATION	5.2433080477313176E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999991200128503	WITHOUT_CLASSIFICATION	8.799871497713392E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999540292048209	WITHOUT_CLASSIFICATION	4.597079517920168E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999926337744935	WITHOUT_CLASSIFICATION	7.366225506408251E-6	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999768130573782	WITHOUT_CLASSIFICATION	2.318694262175758E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999998972354543	WITHOUT_CLASSIFICATION	1.0276454562346548E-7	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999996987291627	WITHOUT_CLASSIFICATION	3.0127083734857366E-7	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999995967930685	WITHOUT_CLASSIFICATION	4.032069315577509E-7	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999992956507417	WITHOUT_CLASSIFICATION	7.04349258213263E-7	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999908204728551	WITHOUT_CLASSIFICATION	9.179527144877045E-6	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999965477884517	WITHOUT_CLASSIFICATION	3.4522115483303934E-6	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999887663219	WITHOUT_CLASSIFICATION	1.1233678111652715E-8	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999980261380795	WITHOUT_CLASSIFICATION	1.9738619204305543E-6	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999765770177312	WITHOUT_CLASSIFICATION	2.3422982268789616E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999841772569463	WITHOUT_CLASSIFICATION	1.582274305359536E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999326863256	WITHOUT_CLASSIFICATION	6.731367436853687E-8	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999979128651885	WITHOUT_CLASSIFICATION	2.087134811497762E-6	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999974929450665	WITHOUT_CLASSIFICATION	2.507054933486399E-6	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999827116614144	WITHOUT_CLASSIFICATION	1.7288338585672938E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999819262171186	WITHOUT_CLASSIFICATION	1.807378288143188E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999983239088664	WITHOUT_CLASSIFICATION	1.6760911335809558E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999997500799387	WITHOUT_CLASSIFICATION	2.4992006130976647E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999981829743907	WITHOUT_CLASSIFICATION	1.8170256093141789E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999983239088664	WITHOUT_CLASSIFICATION	1.6760911335809558E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999997500799387	WITHOUT_CLASSIFICATION	2.4992006130976647E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.999999485205461	WITHOUT_CLASSIFICATION	5.147945389801081E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999992463077564	WITHOUT_CLASSIFICATION	7.536922436558174E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.999998811758751	WITHOUT_CLASSIFICATION	1.1882412489659153E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999739396159647	WITHOUT_CLASSIFICATION	2.606038403528896E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999971007512706	WITHOUT_CLASSIFICATION	2.8992487294283464E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999956021078569	WITHOUT_CLASSIFICATION	4.397892143136142E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999979866360492	WITHOUT_CLASSIFICATION	2.0133639507447367E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999991745839677	WITHOUT_CLASSIFICATION	8.254160322776009E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999905505742	WITHOUT_CLASSIFICATION	9.449425796911786E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999996144431336	WITHOUT_CLASSIFICATION	3.855568664522625E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.999996061054281	WITHOUT_CLASSIFICATION	3.938945719050044E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999326863256	WITHOUT_CLASSIFICATION	6.731367436853687E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999326863256	WITHOUT_CLASSIFICATION	6.731367436853687E-8	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999997500799387	WITHOUT_CLASSIFICATION	2.4992006130976647E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.999998811758751	WITHOUT_CLASSIFICATION	1.1882412489659153E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999971007512706	WITHOUT_CLASSIFICATION	2.8992487294283464E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999962087824745	WITHOUT_CLASSIFICATION	3.791217525417628E-6	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999714875493961	WITHOUT_CLASSIFICATION	2.8512450603923133E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999976598350837	WITHOUT_CLASSIFICATION	2.3401649163583295E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999987922655538	WITHOUT_CLASSIFICATION	1.2077344462086339E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999900106058183	WITHOUT_CLASSIFICATION	9.989394181757207E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999900106058183	WITHOUT_CLASSIFICATION	9.989394181757207E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999339668193	WITHOUT_CLASSIFICATION	6.603318067231545E-8	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999909188736024	WITHOUT_CLASSIFICATION	9.08112639771274E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999997250774156	WITHOUT_CLASSIFICATION	2.7492258436461627E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999991052606829	WITHOUT_CLASSIFICATION	8.947393172228049E-7	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.999999855206045	WITHOUT_CLASSIFICATION	1.4479395514392335E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999970786317411	WITHOUT_CLASSIFICATION	2.9213682588826375E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999962642529225	WITHOUT_CLASSIFICATION	3.7357470774812177E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999983239088664	WITHOUT_CLASSIFICATION	1.6760911335809558E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999994600326946	WITHOUT_CLASSIFICATION	5.399673053820808E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999992463077564	WITHOUT_CLASSIFICATION	7.536922436558174E-7	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999956021078569	WITHOUT_CLASSIFICATION	4.397892143136142E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999979866360492	WITHOUT_CLASSIFICATION	2.0133639507447367E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999979866360492	WITHOUT_CLASSIFICATION	2.0133639507447367E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999905505742	WITHOUT_CLASSIFICATION	9.449425796911786E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999996144431336	WITHOUT_CLASSIFICATION	3.855568664522625E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.999996061054281	WITHOUT_CLASSIFICATION	3.938945719050044E-6	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999989559287135	WITHOUT_CLASSIFICATION	1.044071286622027E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999944879338258	WITHOUT_CLASSIFICATION	5.5120661741227465E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999633881187041	WITHOUT_CLASSIFICATION	3.661188129587686E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999990644331701	WITHOUT_CLASSIFICATION	9.355668299544755E-7	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999998223234439	WITHOUT_CLASSIFICATION	1.7767655614712334E-7	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999897654692073	WITHOUT_CLASSIFICATION	1.023453079268668E-5	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999980220879131	WITHOUT_CLASSIFICATION	1.9779120869984695E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.99999905662487	WITHOUT_CLASSIFICATION	9.43375130111947E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999359448336	WITHOUT_CLASSIFICATION	6.405516637140484E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.999998811758751	WITHOUT_CLASSIFICATION	1.1882412489659153E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999979866360492	WITHOUT_CLASSIFICATION	2.0133639507447367E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999905505742	WITHOUT_CLASSIFICATION	9.449425796911786E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999905505742	WITHOUT_CLASSIFICATION	9.449425796911786E-8	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999962087824745	WITHOUT_CLASSIFICATION	3.791217525417628E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999339668193	WITHOUT_CLASSIFICATION	6.603318067231545E-8	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999999339668193	WITHOUT_CLASSIFICATION	6.603318067231545E-8	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999997250774156	WITHOUT_CLASSIFICATION	2.7492258436461627E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999952354859175	WITHOUT_CLASSIFICATION	4.76451408251966E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999989110081707	WITHOUT_CLASSIFICATION	1.0889918293590282E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999876755077481	WITHOUT_CLASSIFICATION	1.2324492251957589E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999991135166345	WITHOUT_CLASSIFICATION	8.86483365476827E-7	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999984085391175	WITHOUT_CLASSIFICATION	1.5914608824691069E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999984385851117	WITHOUT_CLASSIFICATION	1.5614148883331861E-6	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999976370049792	WITHOUT_CLASSIFICATION	2.3629950207569305E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999993660858922	WITHOUT_CLASSIFICATION	6.339141078299339E-7	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999986180885128	WITHOUT_CLASSIFICATION	1.381911487188516E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999988257901045	WITHOUT_CLASSIFICATION	1.1742098955880134E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999939812644943	WITHOUT_CLASSIFICATION	6.0187355056277344E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999983587608917	WITHOUT_CLASSIFICATION	1.64123910821658E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999994806309882	WITHOUT_CLASSIFICATION	5.193690117054841E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999899076173767	WITHOUT_CLASSIFICATION	1.0092382623313449E-5	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999996993705503	WITHOUT_CLASSIFICATION	3.006294496529178E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999974115618337	WITHOUT_CLASSIFICATION	2.5884381662331643E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999996276638871	WITHOUT_CLASSIFICATION	3.723361128344646E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999997880959438	WITHOUT_CLASSIFICATION	2.1190405614992934E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998501358354	WITHOUT_CLASSIFICATION	1.4986416468448715E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999997116160151	WITHOUT_CLASSIFICATION	2.883839849166295E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999821109430932	WITHOUT_CLASSIFICATION	1.7889056906754548E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999981965673121	WITHOUT_CLASSIFICATION	1.803432687749078E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998707889588	WITHOUT_CLASSIFICATION	1.2921104115684876E-7	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999994134667032	WITHOUT_CLASSIFICATION	5.865332968620186E-7	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999860625989868	WITHOUT_CLASSIFICATION	1.393740101307066E-5	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999945396703548	WITHOUT_CLASSIFICATION	5.460329645164969E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999936411943331	WITHOUT_CLASSIFICATION	6.358805667006275E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999980593662671	WITHOUT_CLASSIFICATION	1.9406337328900487E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999955797406573	WITHOUT_CLASSIFICATION	4.420259342662312E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999982075661317	WITHOUT_CLASSIFICATION	1.7924338683811824E-6	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999564923574074	WITHOUT_CLASSIFICATION	4.350764259261675E-5	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999607749444619	WITHOUT_CLASSIFICATION	3.922505553811512E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999983341847993	WITHOUT_CLASSIFICATION	1.6658152006417595E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999995115310322	WITHOUT_CLASSIFICATION	4.884689678382601E-7	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.999999984598622	WITHOUT_CLASSIFICATION	1.540137793777625E-8	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999988136935474	WITHOUT_CLASSIFICATION	1.186306452688658E-6	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999999046133459	WITHOUT_CLASSIFICATION	9.538665412659738E-8	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.999999939605621	WITHOUT_CLASSIFICATION	6.039437904420853E-8	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999999915367945	WITHOUT_CLASSIFICATION	8.463205476411504E-9	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999998853080855	WITHOUT_CLASSIFICATION	1.1469191456217338E-7	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999992367600935	WITHOUT_CLASSIFICATION	7.632399065378593E-7	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999999057796355	WITHOUT_CLASSIFICATION	9.422036454318523E-8	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999597509508	WITHOUT_CLASSIFICATION	4.0249049184508106E-8	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999997569889412	WITHOUT_CLASSIFICATION	2.430110588077309E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999469363812017	WITHOUT_CLASSIFICATION	5.3063618798341645E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999645334460394	WITHOUT_CLASSIFICATION	3.5466553960713634E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999878201985323	WITHOUT_CLASSIFICATION	1.2179801467639105E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999880080365114	WITHOUT_CLASSIFICATION	1.1991963488507762E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999829875407592	WITHOUT_CLASSIFICATION	1.7012459240720107E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999981331440576	WITHOUT_CLASSIFICATION	1.8668559423533598E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999515670429687	WITHOUT_CLASSIFICATION	4.843295703120621E-5	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999930882525633	WITHOUT_CLASSIFICATION	6.91174743673061E-6	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999958469663767	WITHOUT_CLASSIFICATION	4.15303362333962E-6	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999996918188292	WITHOUT_CLASSIFICATION	3.081811707444484E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999995403944205	WITHOUT_CLASSIFICATION	4.596055794853387E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999995403944205	WITHOUT_CLASSIFICATION	4.596055794853387E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999999393574934	WITHOUT_CLASSIFICATION	6.064250658461954E-8	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999957685658745	WITHOUT_CLASSIFICATION	4.2314341256313935E-6	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999955033962552	WITHOUT_CLASSIFICATION	4.4966037448400774E-6	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999992157100848	WITHOUT_CLASSIFICATION	7.84289915162379E-7	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9837200593162433	WITHOUT_CLASSIFICATION	0.016279940683756627	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999684607168525	WITHOUT_CLASSIFICATION	3.153928314746404E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.999986700659887	WITHOUT_CLASSIFICATION	1.3299340112922251E-5	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999816895070999	WITHOUT_CLASSIFICATION	1.831049290016228E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999990543373823	WITHOUT_CLASSIFICATION	9.456626177343162E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999990543373823	WITHOUT_CLASSIFICATION	9.456626177343162E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.999999849467007	WITHOUT_CLASSIFICATION	1.5053299308362364E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999996068471214	WITHOUT_CLASSIFICATION	3.9315287861774627E-7	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999992107366819	WITHOUT_CLASSIFICATION	7.892633180453975E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999999435944252	WITHOUT_CLASSIFICATION	5.640557469563919E-8	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999815995899	WITHOUT_CLASSIFICATION	1.8400410155734026E-8	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999979881357107	WITHOUT_CLASSIFICATION	2.011864289327446E-6	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999960446488041	WITHOUT_CLASSIFICATION	3.955351195853743E-6	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999981930654008	WITHOUT_CLASSIFICATION	1.8069345991128407E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999999107390908	WITHOUT_CLASSIFICATION	8.926090923716005E-8	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999134663841218	WITHOUT_CLASSIFICATION	8.653361587807465E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999989572363843	WITHOUT_CLASSIFICATION	1.0427636157409989E-6	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999743279389552	WITHOUT_CLASSIFICATION	2.5672061044869725E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999984931506524	WITHOUT_CLASSIFICATION	1.506849347626294E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993086654938	WITHOUT_CLASSIFICATION	6.913345062156529E-7	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998235053096	WITHOUT_CLASSIFICATION	1.7649469036474944E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999645334460394	WITHOUT_CLASSIFICATION	3.5466553960713634E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999995403944205	WITHOUT_CLASSIFICATION	4.596055794853387E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999995403944205	WITHOUT_CLASSIFICATION	4.596055794853387E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999957685658745	WITHOUT_CLASSIFICATION	4.2314341256313935E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999804473200417	WITHOUT_CLASSIFICATION	1.9552679958359676E-5	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999994744731349	WITHOUT_CLASSIFICATION	5.255268651868918E-7	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999999635115927	WITHOUT_CLASSIFICATION	3.6488407259274194E-8	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999986670704659	WITHOUT_CLASSIFICATION	1.3329295340708985E-6	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999987900233146	WITHOUT_CLASSIFICATION	1.209976685412993E-6	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999965161399884	WITHOUT_CLASSIFICATION	3.4838600115291132E-6	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999769191545315	WITHOUT_CLASSIFICATION	2.308084546842254E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998071765482	WITHOUT_CLASSIFICATION	1.9282345178065166E-7	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999994829164294	WITHOUT_CLASSIFICATION	5.170835705722165E-7	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999993723973535	WITHOUT_CLASSIFICATION	6.276026465649678E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999930186842826	WITHOUT_CLASSIFICATION	6.981315717337234E-6	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999986238038409	WITHOUT_CLASSIFICATION	1.3761961591313994E-6	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999793834701526	WITHOUT_CLASSIFICATION	2.0616529847379164E-5	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999987578045026	WITHOUT_CLASSIFICATION	1.2421954972850787E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999997423889084	WITHOUT_CLASSIFICATION	2.5761109149392723E-7	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999980522122779	WITHOUT_CLASSIFICATION	1.947787722140807E-6	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999963265957987	WITHOUT_CLASSIFICATION	3.673404201268822E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9996231769137219	WITHOUT_CLASSIFICATION	3.7682308627806204E-4	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999965000108	WITHOUT_CLASSIFICATION	3.4999891858670693E-9	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999997928291773	WITHOUT_CLASSIFICATION	2.0717082267309342E-7	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.999993509569752	WITHOUT_CLASSIFICATION	6.4904302480399336E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999992281385913	WITHOUT_CLASSIFICATION	7.718614086347482E-7	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999822511902842	WITHOUT_CLASSIFICATION	1.7748809715838186E-5	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.999993803825073	WITHOUT_CLASSIFICATION	6.196174927039767E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999991004435342	WITHOUT_CLASSIFICATION	8.995564656689289E-7	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999969718826339	WITHOUT_CLASSIFICATION	3.0281173661662416E-6	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999945369584913	WITHOUT_CLASSIFICATION	5.4630415086613365E-6	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.999998277276416	WITHOUT_CLASSIFICATION	1.7227235839465129E-6	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9985534173454385	WITHOUT_CLASSIFICATION	0.0014465826545615216	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999760304923165	WITHOUT_CLASSIFICATION	2.39695076834548E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999405591927332	WITHOUT_CLASSIFICATION	5.944080726679624E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999733717107453	WITHOUT_CLASSIFICATION	2.6628289254698806E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999978355776825	WITHOUT_CLASSIFICATION	2.1644223175150485E-6	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.999999700707962	WITHOUT_CLASSIFICATION	2.992920379961769E-7	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999925118899561	WITHOUT_CLASSIFICATION	7.488110043893769E-6	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999903308924701	WITHOUT_CLASSIFICATION	9.669107529869239E-6	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999995310524664	WITHOUT_CLASSIFICATION	4.689475336355536E-7	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999359909756	WITHOUT_CLASSIFICATION	6.400902444188298E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999999197871698	WITHOUT_CLASSIFICATION	8.021283011454045E-8	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999995608386895	WITHOUT_CLASSIFICATION	4.391613104952144E-7	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999370878444422	WITHOUT_CLASSIFICATION	6.291215555771689E-5	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999827691839	WITHOUT_CLASSIFICATION	1.7230816200084182E-8	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999998825392638	WITHOUT_CLASSIFICATION	1.1746073633018988E-7	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9999990778246165	WITHOUT_CLASSIFICATION	9.221753835162372E-7	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999991151154742	WITHOUT_CLASSIFICATION	8.848845257984798E-7	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999999208256516	WITHOUT_CLASSIFICATION	7.917434844680008E-8	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999999222225334	WITHOUT_CLASSIFICATION	7.777746663388211E-8	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999852531825	WITHOUT_CLASSIFICATION	1.4746817408758433E-8	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999998405499615	WITHOUT_CLASSIFICATION	1.594500384525479E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999980716682313	WITHOUT_CLASSIFICATION	1.928331768663479E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999991863421879	WITHOUT_CLASSIFICATION	8.136578120739317E-7	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999991134340172	WITHOUT_CLASSIFICATION	8.86565982721617E-7	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999999771287271	WITHOUT_CLASSIFICATION	2.287127280670829E-8	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999993699479753	WITHOUT_CLASSIFICATION	6.300520245687727E-7	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999776557321748	WITHOUT_CLASSIFICATION	2.2344267825260835E-5	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999554688210219	WITHOUT_CLASSIFICATION	4.453117897797403E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999990296911035	WITHOUT_CLASSIFICATION	9.703088964862595E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.999999575521925	WITHOUT_CLASSIFICATION	4.2447807500132884E-7	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.999998496690971	WITHOUT_CLASSIFICATION	1.5033090291087411E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998602205015	WITHOUT_CLASSIFICATION	1.3977949859783504E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998602205015	WITHOUT_CLASSIFICATION	1.3977949859783504E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998476964552	WITHOUT_CLASSIFICATION	1.5230354474517027E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998476964552	WITHOUT_CLASSIFICATION	1.5230354474517027E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999938702964666	WITHOUT_CLASSIFICATION	6.129703533386731E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999938702964666	WITHOUT_CLASSIFICATION	6.129703533386731E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999982440541815	WITHOUT_CLASSIFICATION	1.7559458185891004E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999870765791553	WITHOUT_CLASSIFICATION	1.2923420844573313E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999870765791553	WITHOUT_CLASSIFICATION	1.2923420844573313E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999994525378665	WITHOUT_CLASSIFICATION	5.474621335286005E-7	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999994484472443	WITHOUT_CLASSIFICATION	5.515527557386768E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999901371682322	WITHOUT_CLASSIFICATION	9.862831767953861E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999901371682322	WITHOUT_CLASSIFICATION	9.862831767953861E-6	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999997703405276	WITHOUT_CLASSIFICATION	2.2965947237999883E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999945917552939	WITHOUT_CLASSIFICATION	5.408244706138337E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999870765791553	WITHOUT_CLASSIFICATION	1.2923420844573313E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999901371682322	WITHOUT_CLASSIFICATION	9.862831767953861E-6	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999998195253902	WITHOUT_CLASSIFICATION	1.8047460988495754E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999994386247725	WITHOUT_CLASSIFICATION	5.613752275120934E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998495094281165	WITHOUT_CLASSIFICATION	1.5049057188358983E-4	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999999427118873	WITHOUT_CLASSIFICATION	5.72881126969442E-8	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999990258228593	WITHOUT_CLASSIFICATION	9.741771406965268E-7	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999999492581141	WITHOUT_CLASSIFICATION	5.0741885890382464E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999974953333354	WITHOUT_CLASSIFICATION	2.504666664632415E-6	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999645152553835	WITHOUT_CLASSIFICATION	3.5484744616425635E-5	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999983883080551	WITHOUT_CLASSIFICATION	1.611691944904833E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999995353527316	WITHOUT_CLASSIFICATION	4.6464726842841683E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999986923563867	WITHOUT_CLASSIFICATION	1.3076436133348265E-6	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999975856447698	WITHOUT_CLASSIFICATION	2.414355230126179E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999994810645042	WITHOUT_CLASSIFICATION	5.18935495819984E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999989458635938	WITHOUT_CLASSIFICATION	1.0541364061631067E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999992114578086	WITHOUT_CLASSIFICATION	7.885421913769192E-7	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999996351203164	WITHOUT_CLASSIFICATION	3.6487968352431777E-7	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999892050964255	WITHOUT_CLASSIFICATION	1.079490357458421E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9856000007990725	WITHOUT_CLASSIFICATION	0.0143999992009274	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999999220589365	WITHOUT_CLASSIFICATION	7.794106341183396E-8	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999997566188151	WITHOUT_CLASSIFICATION	2.4338118483460624E-7	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999999495706384	WITHOUT_CLASSIFICATION	5.0429361568390726E-8	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999915373427166	WITHOUT_CLASSIFICATION	8.462657283438238E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999965214763831	WITHOUT_CLASSIFICATION	3.4785236169141636E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.999999533109061	WITHOUT_CLASSIFICATION	4.668909389726612E-7	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999998583011671	WITHOUT_CLASSIFICATION	1.4169883277724156E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999988239064344	WITHOUT_CLASSIFICATION	1.17609356565718E-6	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999987934066517	WITHOUT_CLASSIFICATION	1.2065933482547678E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999990706327182	WITHOUT_CLASSIFICATION	9.293672819117564E-7	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999988686790424	WITHOUT_CLASSIFICATION	1.1313209576130405E-6	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999990835123679	WITHOUT_CLASSIFICATION	9.164876322379021E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998495094281165	WITHOUT_CLASSIFICATION	1.5049057188358983E-4	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999791387410923	WITHOUT_CLASSIFICATION	2.086125890769278E-5	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999992114578086	WITHOUT_CLASSIFICATION	7.885421913769192E-7	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999997609544155	WITHOUT_CLASSIFICATION	2.3904558448592124E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.999999533109061	WITHOUT_CLASSIFICATION	4.668909389726612E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999998724454935	WITHOUT_CLASSIFICATION	1.2755450644434797E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999997256060782	WITHOUT_CLASSIFICATION	2.743939218246439E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999970666652546	WITHOUT_CLASSIFICATION	2.9333347454194262E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999726957929957	WITHOUT_CLASSIFICATION	2.7304207004298873E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999726957929957	WITHOUT_CLASSIFICATION	2.7304207004298873E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999998779374127	WITHOUT_CLASSIFICATION	1.220625872883055E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999974297700986	WITHOUT_CLASSIFICATION	2.570229901422527E-6	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999982418329227	WITHOUT_CLASSIFICATION	1.7581670772433499E-6	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.999995861175631	WITHOUT_CLASSIFICATION	4.138824368963859E-6	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999626575831608	WITHOUT_CLASSIFICATION	3.7342416839194397E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999996323389941	WITHOUT_CLASSIFICATION	3.676610058571723E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999998679191159	WITHOUT_CLASSIFICATION	1.3208088405838726E-7	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999849801586	WITHOUT_CLASSIFICATION	1.5019841279877742E-8	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999926397923035	WITHOUT_CLASSIFICATION	7.360207696461709E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999954874849959	WITHOUT_CLASSIFICATION	4.512515004115044E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999856280999548	WITHOUT_CLASSIFICATION	1.437190004509331E-5	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999723781595198	WITHOUT_CLASSIFICATION	2.7621840480318276E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999992591644945	WITHOUT_CLASSIFICATION	7.40835505570356E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999998933323083	WITHOUT_CLASSIFICATION	1.0666769173133139E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999977056956868	WITHOUT_CLASSIFICATION	2.2943043132129073E-6	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9991919092304555	WITHOUT_CLASSIFICATION	8.080907695444441E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999981867758663	WITHOUT_CLASSIFICATION	1.8132241337304342E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999977119435731	WITHOUT_CLASSIFICATION	2.2880564268126174E-6	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999999252621018	WITHOUT_CLASSIFICATION	7.473789818371714E-8	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999973503440901	WITHOUT_CLASSIFICATION	2.649655909973085E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999998243472331	WITHOUT_CLASSIFICATION	1.7565276681117274E-7	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999999878095699	WITHOUT_CLASSIFICATION	1.2190430073449648E-8	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999016101524798	WITHOUT_CLASSIFICATION	9.838984752029493E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999071710585	WITHOUT_CLASSIFICATION	9.28289415703219E-8	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999945282935	WITHOUT_CLASSIFICATION	5.471706531179867E-9	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999990166093962	WITHOUT_CLASSIFICATION	9.833906038684107E-7	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999976824442002	WITHOUT_CLASSIFICATION	2.3175557998131613E-6	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999818683244325	WITHOUT_CLASSIFICATION	1.8131675567556953E-5	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999971137457813	WITHOUT_CLASSIFICATION	2.8862542187671407E-6	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999998934342872	WITHOUT_CLASSIFICATION	1.0656571270473581E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999975140342897	WITHOUT_CLASSIFICATION	2.485965710264166E-6	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999997990036277	WITHOUT_CLASSIFICATION	2.009963723370567E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.999999693377193	WITHOUT_CLASSIFICATION	3.0662280709739634E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999227409306087	WITHOUT_CLASSIFICATION	7.725906939131943E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9998526494330314	WITHOUT_CLASSIFICATION	1.4735056696847646E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999587462548	WITHOUT_CLASSIFICATION	4.1253745147564304E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.999998891484254	WITHOUT_CLASSIFICATION	1.1085157459794643E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999518501837948	WITHOUT_CLASSIFICATION	4.814981620523616E-5	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999977527489193	WITHOUT_CLASSIFICATION	2.247251080747928E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999889100829519	WITHOUT_CLASSIFICATION	1.108991704817095E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999957268764422	WITHOUT_CLASSIFICATION	4.273123557784135E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999996470157689	WITHOUT_CLASSIFICATION	3.529842309729456E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999998717453052	WITHOUT_CLASSIFICATION	1.2825469482101163E-7	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999995681636326	WITHOUT_CLASSIFICATION	4.318363674646789E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.999995197524201	WITHOUT_CLASSIFICATION	4.80247579907141E-6	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999998634541185	WITHOUT_CLASSIFICATION	1.3654588152236369E-7	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999998988436067	WITHOUT_CLASSIFICATION	1.0115639328862519E-7	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999995035026312	WITHOUT_CLASSIFICATION	4.964973687249883E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999938702964666	WITHOUT_CLASSIFICATION	6.129703533386731E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999975321627654	WITHOUT_CLASSIFICATION	2.4678372345036357E-6	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999980910146782	WITHOUT_CLASSIFICATION	1.9089853218242336E-6	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.999999952616179	WITHOUT_CLASSIFICATION	4.7383820952413704E-8	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999995032160115	WITHOUT_CLASSIFICATION	4.967839886030414E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999991116023947	WITHOUT_CLASSIFICATION	8.883976053882489E-7	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.999996642057391	WITHOUT_CLASSIFICATION	3.3579426090566775E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.999999753154291	WITHOUT_CLASSIFICATION	2.468457090082869E-7	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999999156663515	WITHOUT_CLASSIFICATION	8.433364860259713E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999999654914641	WITHOUT_CLASSIFICATION	3.450853585901619E-8	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999993007641419	WITHOUT_CLASSIFICATION	6.992358580770143E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999056095306	WITHOUT_CLASSIFICATION	9.4390469514805E-8	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.999999982175443	WITHOUT_CLASSIFICATION	1.782455710398685E-8	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999825685440844	WITHOUT_CLASSIFICATION	1.743145591563661E-5	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999998052497049	WITHOUT_CLASSIFICATION	1.9475029510692725E-7	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999315569685	WITHOUT_CLASSIFICATION	6.844303144127332E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999995999173713	WITHOUT_CLASSIFICATION	4.000826287426993E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999997535815902	WITHOUT_CLASSIFICATION	2.464184098199632E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999998168700835	WITHOUT_CLASSIFICATION	1.8312991649188864E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999989196746952	WITHOUT_CLASSIFICATION	1.080325304774968E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999995809530571	WITHOUT_CLASSIFICATION	4.190469429765888E-7	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.999999463157247	WITHOUT_CLASSIFICATION	5.368427530518259E-7	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999957113051071	WITHOUT_CLASSIFICATION	4.288694892839545E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999997004880476	WITHOUT_CLASSIFICATION	2.995119523193003E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999994193324051	WITHOUT_CLASSIFICATION	5.806675948588935E-7	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999994205636556	WITHOUT_CLASSIFICATION	5.79436344379441E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999976124400157	WITHOUT_CLASSIFICATION	2.387559984190028E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999995538254993	WITHOUT_CLASSIFICATION	4.461745007787694E-7	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999993422162033	WITHOUT_CLASSIFICATION	6.577837966530843E-7	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999998928086775	WITHOUT_CLASSIFICATION	1.0719132246636103E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.999999489307136	WITHOUT_CLASSIFICATION	5.106928640429065E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.999993803825073	WITHOUT_CLASSIFICATION	6.196174927039767E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999938702964666	WITHOUT_CLASSIFICATION	6.129703533386731E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999982440541815	WITHOUT_CLASSIFICATION	1.7559458185891004E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999977119435731	WITHOUT_CLASSIFICATION	2.2880564268126174E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999694600468	WITHOUT_CLASSIFICATION	3.0539953284625605E-8	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999975321627654	WITHOUT_CLASSIFICATION	2.4678372345036357E-6	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999978920893388	WITHOUT_CLASSIFICATION	2.1079106612277174E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999185531198506	WITHOUT_CLASSIFICATION	8.144688014935739E-5	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.999999596391693	WITHOUT_CLASSIFICATION	4.03608307037863E-7	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999836888102877	WITHOUT_CLASSIFICATION	1.6311189712399538E-5	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.999973300210398	WITHOUT_CLASSIFICATION	2.669978960209674E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999985401253894	WITHOUT_CLASSIFICATION	1.4598746105934997E-6	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9998936229815362	WITHOUT_CLASSIFICATION	1.0637701846383672E-4	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999512776708802	WITHOUT_CLASSIFICATION	4.8722329119818474E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999988325094429	WITHOUT_CLASSIFICATION	1.1674905570995145E-6	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999985883026746	WITHOUT_CLASSIFICATION	1.4116973253592846E-6	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999569584411917	WITHOUT_CLASSIFICATION	4.304155880830937E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999993235421691	WITHOUT_CLASSIFICATION	6.764578307214264E-7	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9999415369933351	WITHOUT_CLASSIFICATION	5.8463006664955045E-5	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999999653225258	WITHOUT_CLASSIFICATION	3.467747417446576E-8	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999989890894476	WITHOUT_CLASSIFICATION	1.0109105523714175E-6	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.999999832964828	WITHOUT_CLASSIFICATION	1.6703517215661338E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.999881157468826	WITHOUT_CLASSIFICATION	1.1884253117407509E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999911105095279	WITHOUT_CLASSIFICATION	8.889490472079815E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999999246966896	WITHOUT_CLASSIFICATION	7.53033103138689E-8	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999999563474538	WITHOUT_CLASSIFICATION	4.365254611754464E-8	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999987883103761	WITHOUT_CLASSIFICATION	1.211689623751157E-6	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9998944763491103	WITHOUT_CLASSIFICATION	1.0552365088969701E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999998340956564	WITHOUT_CLASSIFICATION	1.659043437258494E-7	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.999999619656842	WITHOUT_CLASSIFICATION	3.80343157960178E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999889357916639	WITHOUT_CLASSIFICATION	1.1064208335988165E-5	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.999999352258552	WITHOUT_CLASSIFICATION	6.477414480500191E-7	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999061709495394	WITHOUT_CLASSIFICATION	9.382905046067791E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999999729873533	WITHOUT_CLASSIFICATION	2.7012646652873343E-8	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999997895343873	WITHOUT_CLASSIFICATION	2.1046561281055142E-7	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999997644802193	WITHOUT_CLASSIFICATION	2.35519780766408E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999059316209	WITHOUT_CLASSIFICATION	9.406837911441532E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999938702964666	WITHOUT_CLASSIFICATION	6.129703533386731E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999993007641419	WITHOUT_CLASSIFICATION	6.992358580770143E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999056095306	WITHOUT_CLASSIFICATION	9.4390469514805E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999995999173713	WITHOUT_CLASSIFICATION	4.000826287426993E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999997535815902	WITHOUT_CLASSIFICATION	2.464184098199632E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999998168700835	WITHOUT_CLASSIFICATION	1.8312991649188864E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999989196746952	WITHOUT_CLASSIFICATION	1.080325304774968E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999995809530571	WITHOUT_CLASSIFICATION	4.190469429765888E-7	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999998685731933	WITHOUT_CLASSIFICATION	1.314268067273709E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999997004880476	WITHOUT_CLASSIFICATION	2.995119523193003E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999998902864364	WITHOUT_CLASSIFICATION	1.0971356360433008E-7	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9994642101858445	WITHOUT_CLASSIFICATION	5.357898141554233E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999999813152717	WITHOUT_CLASSIFICATION	1.8684728323465734E-8	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999987914119278	WITHOUT_CLASSIFICATION	1.2085880722136241E-6	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999941176017193	WITHOUT_CLASSIFICATION	5.882398280605445E-6	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999998967407834	WITHOUT_CLASSIFICATION	1.0325921654549287E-7	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999998244599567	WITHOUT_CLASSIFICATION	1.7554004330973273E-7	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999286302572993	WITHOUT_CLASSIFICATION	7.13697427007411E-5	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999998645947303	WITHOUT_CLASSIFICATION	1.3540526968481387E-7	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999985343882368	WITHOUT_CLASSIFICATION	1.46561176313406E-6	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999768286290085	WITHOUT_CLASSIFICATION	2.317137099158965E-5	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999963675403235	WITHOUT_CLASSIFICATION	3.6324596764915453E-6	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999999643088392	WITHOUT_CLASSIFICATION	3.569116090840517E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999989988837671	WITHOUT_CLASSIFICATION	1.0011162329523164E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999960505314093	WITHOUT_CLASSIFICATION	3.949468590731366E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999960505314093	WITHOUT_CLASSIFICATION	3.949468590731366E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999969078142287	WITHOUT_CLASSIFICATION	3.0921857712828365E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999997310571755	WITHOUT_CLASSIFICATION	2.6894282448745565E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999997310571755	WITHOUT_CLASSIFICATION	2.6894282448745565E-7	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999985858177454	WITHOUT_CLASSIFICATION	1.414182254625663E-6	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999999396851238	WITHOUT_CLASSIFICATION	6.031487623573818E-8	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999798580837383	WITHOUT_CLASSIFICATION	2.014191626168955E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999059316209	WITHOUT_CLASSIFICATION	9.406837911441532E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999981993547089	WITHOUT_CLASSIFICATION	1.8006452911673784E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.999998882018808	WITHOUT_CLASSIFICATION	1.1179811920009968E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999988576275347	WITHOUT_CLASSIFICATION	1.1423724653397795E-6	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999894546711695	WITHOUT_CLASSIFICATION	1.0545328830449432E-5	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999994532323867	WITHOUT_CLASSIFICATION	5.467676132979976E-7	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.999998535155438	WITHOUT_CLASSIFICATION	1.4648445620104907E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999997433574965	WITHOUT_CLASSIFICATION	2.566425035552093E-7	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999998093468453	WITHOUT_CLASSIFICATION	1.9065315477530462E-7	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999990741910425	WITHOUT_CLASSIFICATION	9.258089575122548E-7	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9993400073568979	WITHOUT_CLASSIFICATION	6.599926431021043E-4	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9999948779133249	WITHOUT_CLASSIFICATION	5.122086675124692E-6	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999997298082964	WITHOUT_CLASSIFICATION	2.701917035283439E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9989850972982968	WITHOUT_CLASSIFICATION	0.0010149027017032147	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999999198502709	WITHOUT_CLASSIFICATION	8.014972910174488E-8	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999995099298926	WITHOUT_CLASSIFICATION	4.900701073731274E-7	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999972209586038	WITHOUT_CLASSIFICATION	2.7790413961917393E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999986327353655	WITHOUT_CLASSIFICATION	1.3672646345362359E-6	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9997728898177112	WITHOUT_CLASSIFICATION	2.271101822889104E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.99921662975612	WITHOUT_CLASSIFICATION	7.833702438799875E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999995588949272	WITHOUT_CLASSIFICATION	4.4110507289885853E-7	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999989216929499	WITHOUT_CLASSIFICATION	1.0783070501662532E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999998883516293	WITHOUT_CLASSIFICATION	1.1164837056589202E-7	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999999555688063	WITHOUT_CLASSIFICATION	4.4431193820822414E-8	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999773882032936	WITHOUT_CLASSIFICATION	2.261179670637815E-5	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999862763049222	WITHOUT_CLASSIFICATION	1.3723695077757631E-5	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999065957037	WITHOUT_CLASSIFICATION	9.34042963270676E-8	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999997827520631	WITHOUT_CLASSIFICATION	2.1724793692742928E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999924477343312	WITHOUT_CLASSIFICATION	7.552265668911047E-6	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999996512483339	WITHOUT_CLASSIFICATION	3.487516661912528E-7	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.999999751908997	WITHOUT_CLASSIFICATION	2.4809100300972625E-7	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999244762358	WITHOUT_CLASSIFICATION	7.552376424189959E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.999999876986657	WITHOUT_CLASSIFICATION	1.2301334293478187E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999994855445877	WITHOUT_CLASSIFICATION	5.144554121630278E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999688047970605	WITHOUT_CLASSIFICATION	3.119520293951082E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998564790684	WITHOUT_CLASSIFICATION	1.4352093156956078E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995356132727	WITHOUT_CLASSIFICATION	4.6438672731487495E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998703100883	WITHOUT_CLASSIFICATION	1.2968991167136415E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999994855445877	WITHOUT_CLASSIFICATION	5.144554121630278E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999987097697817	WITHOUT_CLASSIFICATION	1.2902302182704312E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999987912483874	WITHOUT_CLASSIFICATION	1.2087516125920034E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999987912483874	WITHOUT_CLASSIFICATION	1.2087516125920034E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999987912483874	WITHOUT_CLASSIFICATION	1.2087516125920034E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999997120099464	WITHOUT_CLASSIFICATION	2.8799005361941487E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999997120099464	WITHOUT_CLASSIFICATION	2.8799005361941487E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999997120099464	WITHOUT_CLASSIFICATION	2.8799005361941487E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999851882623	WITHOUT_CLASSIFICATION	1.481173765338815E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999851882623	WITHOUT_CLASSIFICATION	1.481173765338815E-8	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999999284857235	WITHOUT_CLASSIFICATION	7.151427649311988E-8	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999896835785	WITHOUT_CLASSIFICATION	1.031642141339849E-8	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999867899327	WITHOUT_CLASSIFICATION	1.3210067346757829E-8	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999997048489062	WITHOUT_CLASSIFICATION	2.9515109370182846E-7	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999997458356671	WITHOUT_CLASSIFICATION	2.5416433299272413E-7	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999996868079113	WITHOUT_CLASSIFICATION	3.1319208875865154E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999870630854556	WITHOUT_CLASSIFICATION	1.2936914544368325E-5	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999999565477239	WITHOUT_CLASSIFICATION	4.3452276092127624E-8	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999997988352894	WITHOUT_CLASSIFICATION	2.0116471057969164E-7	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999995801187379	WITHOUT_CLASSIFICATION	4.1988126204982417E-7	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999995059663468	WITHOUT_CLASSIFICATION	4.940336531021744E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999999844708936	WITHOUT_CLASSIFICATION	1.5529106473447346E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998631504633	WITHOUT_CLASSIFICATION	1.3684953661348439E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999921190345878	WITHOUT_CLASSIFICATION	7.880965412171757E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999980593662671	WITHOUT_CLASSIFICATION	1.9406337328900487E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999924061651705	WITHOUT_CLASSIFICATION	7.5938348295761205E-6	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999983876020164	WITHOUT_CLASSIFICATION	1.6123979835733818E-6	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999590073984416	WITHOUT_CLASSIFICATION	4.099260155839292E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999998639505586	WITHOUT_CLASSIFICATION	1.3604944147018604E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999386699052049	WITHOUT_CLASSIFICATION	6.13300947951468E-5	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.999974518567693	WITHOUT_CLASSIFICATION	2.548143230693694E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999962155444252	WITHOUT_CLASSIFICATION	3.784455574757224E-6	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999946952633597	WITHOUT_CLASSIFICATION	5.304736640248241E-6	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999875777956098	WITHOUT_CLASSIFICATION	1.2422204390202663E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999994764475695	WITHOUT_CLASSIFICATION	5.235524305667803E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999950588018326	WITHOUT_CLASSIFICATION	4.9411981674999595E-6	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.999994622601451	WITHOUT_CLASSIFICATION	5.377398549001659E-6	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999978430278229	WITHOUT_CLASSIFICATION	2.156972177183887E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999982361923719	WITHOUT_CLASSIFICATION	1.7638076280696616E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999882451415164	WITHOUT_CLASSIFICATION	1.1754858483599175E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9998746375128261	WITHOUT_CLASSIFICATION	1.2536248717387195E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999994531730315	WITHOUT_CLASSIFICATION	5.468269685379642E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999969132695444	WITHOUT_CLASSIFICATION	3.0867304556690265E-6	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999996440596854	WITHOUT_CLASSIFICATION	3.5594031447783455E-7	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999863621218162	WITHOUT_CLASSIFICATION	1.3637878183797686E-5	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.999785018411319	WITHOUT_CLASSIFICATION	2.149815886809485E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999882451415164	WITHOUT_CLASSIFICATION	1.1754858483599175E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999975372875503	WITHOUT_CLASSIFICATION	2.4627124498393574E-6	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999945978446385	WITHOUT_CLASSIFICATION	5.402155361526004E-6	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999987006273325	WITHOUT_CLASSIFICATION	1.2993726673749491E-6	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.999999013634641	WITHOUT_CLASSIFICATION	9.863653590261352E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999997154501177	WITHOUT_CLASSIFICATION	2.845498822833766E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999906512701	WITHOUT_CLASSIFICATION	9.348729921153425E-9	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999997796587098	WITHOUT_CLASSIFICATION	2.2034129020517543E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999990228875039	WITHOUT_CLASSIFICATION	9.771124960745221E-7	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999999427821948	WITHOUT_CLASSIFICATION	5.721780507942324E-8	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999939799806735	WITHOUT_CLASSIFICATION	6.020019326545321E-6	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9998179635064331	WITHOUT_CLASSIFICATION	1.8203649356683208E-4	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999980265396275	WITHOUT_CLASSIFICATION	1.9734603724656556E-6	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.999999705325616	WITHOUT_CLASSIFICATION	2.9467438392136157E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999975372875503	WITHOUT_CLASSIFICATION	2.4627124498393574E-6	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999859627542415	WITHOUT_CLASSIFICATION	1.403724575855474E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999992658363436	WITHOUT_CLASSIFICATION	7.34163656415422E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999966106159233	WITHOUT_CLASSIFICATION	3.389384076737737E-6	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9940277011887808	WITHOUT_CLASSIFICATION	0.005972298811219189	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999997547010565	WITHOUT_CLASSIFICATION	2.4529894351992495E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999994781637968	WITHOUT_CLASSIFICATION	5.218362032025494E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999984931506524	WITHOUT_CLASSIFICATION	1.506849347626294E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999988729519587	WITHOUT_CLASSIFICATION	1.1270480413433434E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999986541909949	WITHOUT_CLASSIFICATION	1.3458090050759207E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999686638470291	WITHOUT_CLASSIFICATION	3.1336152970960924E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999897357663496	WITHOUT_CLASSIFICATION	1.0264233650414963E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999500809944	WITHOUT_CLASSIFICATION	4.991900559827632E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999948324765644	WITHOUT_CLASSIFICATION	5.167523435578973E-6	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.999995354176513	WITHOUT_CLASSIFICATION	4.645823487082794E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999900916736492	WITHOUT_CLASSIFICATION	9.90832635085127E-6	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999995569099962	WITHOUT_CLASSIFICATION	4.430900038514645E-7	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999935484656098	WITHOUT_CLASSIFICATION	6.451534390199297E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999483148267759	WITHOUT_CLASSIFICATION	5.168517322411786E-5	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9940434551902205	WITHOUT_CLASSIFICATION	0.005956544809779482	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.999999927699535	WITHOUT_CLASSIFICATION	7.230046486804508E-8	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999998277600809	WITHOUT_CLASSIFICATION	1.722399191132822E-7	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999991624863388	WITHOUT_CLASSIFICATION	8.375136611588762E-7	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999997013353369	WITHOUT_CLASSIFICATION	2.986646631375603E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999998819519968	WITHOUT_CLASSIFICATION	1.180480031614497E-7	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999376321717218	WITHOUT_CLASSIFICATION	6.236782827809812E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999855897723	WITHOUT_CLASSIFICATION	1.4410227727086508E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9991645825811883	WITHOUT_CLASSIFICATION	8.35417418811799E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999865970555243	WITHOUT_CLASSIFICATION	1.3402944475779059E-5	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999993349356796	WITHOUT_CLASSIFICATION	6.650643204826016E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999995375994835	WITHOUT_CLASSIFICATION	4.6240051652126273E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999921262204338	WITHOUT_CLASSIFICATION	7.873779566274524E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999999403463447	WITHOUT_CLASSIFICATION	5.965365536178697E-8	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999998978398241	WITHOUT_CLASSIFICATION	1.021601759407477E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999997370771526	WITHOUT_CLASSIFICATION	2.62922847314955E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999997490582598	WITHOUT_CLASSIFICATION	2.5094174017428106E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999992507234484	WITHOUT_CLASSIFICATION	7.492765516826192E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999921262204338	WITHOUT_CLASSIFICATION	7.873779566274524E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999974980674499	WITHOUT_CLASSIFICATION	2.501932550125248E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999549135306367	WITHOUT_CLASSIFICATION	4.508646936325287E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999921521754168	WITHOUT_CLASSIFICATION	7.847824583217931E-6	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999976110533494	WITHOUT_CLASSIFICATION	2.3889466505921084E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999982511873405	WITHOUT_CLASSIFICATION	1.7488126594216017E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999867321756	WITHOUT_CLASSIFICATION	1.3267824351556328E-8	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999997749764791	WITHOUT_CLASSIFICATION	2.2502352093547798E-7	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999986026093938	WITHOUT_CLASSIFICATION	1.397390606342965E-6	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999999906777354	WITHOUT_CLASSIFICATION	9.322264634048278E-9	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.999978180268393	WITHOUT_CLASSIFICATION	2.1819731607061194E-5	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999992768040438	WITHOUT_CLASSIFICATION	7.231959562541875E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999983977412904	WITHOUT_CLASSIFICATION	1.6022587096532588E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.999992695013574	WITHOUT_CLASSIFICATION	7.304986426082025E-6	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999935973752	WITHOUT_CLASSIFICATION	6.40262482712425E-9	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999994538575273	WITHOUT_CLASSIFICATION	5.461424726719321E-7	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999996831423226	WITHOUT_CLASSIFICATION	3.1685767739794543E-7	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999991540910063	WITHOUT_CLASSIFICATION	8.459089936958526E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9985092505255655	WITHOUT_CLASSIFICATION	0.001490749474434523	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999953917903607	WITHOUT_CLASSIFICATION	4.60820963925858E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998631504633	WITHOUT_CLASSIFICATION	1.3684953661348439E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999998631504633	WITHOUT_CLASSIFICATION	1.3684953661348439E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999990952878925	WITHOUT_CLASSIFICATION	9.047121074186218E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999921190345878	WITHOUT_CLASSIFICATION	7.880965412171757E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999993247868	WITHOUT_CLASSIFICATION	6.752131819430981E-10	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999817379723711	WITHOUT_CLASSIFICATION	1.8262027628865185E-5	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999931440990205	WITHOUT_CLASSIFICATION	6.855900979486832E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999997522045482	WITHOUT_CLASSIFICATION	2.4779545176397004E-7	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.7173804446929087	WITHOUT_CLASSIFICATION	0.28261955530709126	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999999413205379	WITHOUT_CLASSIFICATION	5.8679461988938736E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999994992620176	WITHOUT_CLASSIFICATION	5.007379823568846E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999995129180274	WITHOUT_CLASSIFICATION	4.870819725644966E-7	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999968147098797	WITHOUT_CLASSIFICATION	3.185290120399053E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9987966893782432	WITHOUT_CLASSIFICATION	0.0012033106217568103	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.999979600264509	WITHOUT_CLASSIFICATION	2.039973549102502E-5	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999953172628769	WITHOUT_CLASSIFICATION	4.682737123119155E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998010316893011	WITHOUT_CLASSIFICATION	1.9896831069889196E-4	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999993959401887	WITHOUT_CLASSIFICATION	6.040598113292477E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999704986158789	WITHOUT_CLASSIFICATION	2.9501384120947494E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.999999395927027	WITHOUT_CLASSIFICATION	6.040729730600948E-7	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999502754566	WITHOUT_CLASSIFICATION	4.972454331422822E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999990092777009	WITHOUT_CLASSIFICATION	9.90722299122535E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999989671188807	WITHOUT_CLASSIFICATION	1.0328811192501844E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9995108113471678	WITHOUT_CLASSIFICATION	4.891886528322514E-4	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999996848333026	WITHOUT_CLASSIFICATION	3.15166697487615E-7	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999958528274837	WITHOUT_CLASSIFICATION	4.1471725162906895E-6	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999998523970033	WITHOUT_CLASSIFICATION	1.4760299670465712E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999945754675176	WITHOUT_CLASSIFICATION	5.4245324823997295E-6	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999933263195614	WITHOUT_CLASSIFICATION	6.673680438626426E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999961217345	WITHOUT_CLASSIFICATION	3.878265412679172E-9	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999999058288312	WITHOUT_CLASSIFICATION	9.41711687392502E-8	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9980112828323626	WITHOUT_CLASSIFICATION	0.001988717167637437	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999999072685463	WITHOUT_CLASSIFICATION	9.273145375169684E-8	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999957961878441	WITHOUT_CLASSIFICATION	4.2038121559626085E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999976854593099	WITHOUT_CLASSIFICATION	2.3145406900492347E-6	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999969507218852	WITHOUT_CLASSIFICATION	3.0492781147333245E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999998044423115	WITHOUT_CLASSIFICATION	1.955576884352492E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999997808901624	WITHOUT_CLASSIFICATION	2.191098375868894E-7	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999551621371	WITHOUT_CLASSIFICATION	4.483786284057766E-8	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.999768191032643	WITHOUT_CLASSIFICATION	2.3180896735705084E-4	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999996272323073	WITHOUT_CLASSIFICATION	3.727676926884726E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999999226273606	WITHOUT_CLASSIFICATION	7.737263944855525E-8	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9999842139293619	WITHOUT_CLASSIFICATION	1.5786070638157156E-5	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999994969582141	WITHOUT_CLASSIFICATION	5.030417858480543E-7	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999998208387814	WITHOUT_CLASSIFICATION	1.791612186171818E-7	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.999784960275914	WITHOUT_CLASSIFICATION	2.150397240859762E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999804166039498	WITHOUT_CLASSIFICATION	1.9583396050250967E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999951903442654	WITHOUT_CLASSIFICATION	4.8096557346695554E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999997338267873	WITHOUT_CLASSIFICATION	2.6617321270305557E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999877122499707	WITHOUT_CLASSIFICATION	1.228775002918328E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999818969874243	WITHOUT_CLASSIFICATION	1.810301257562574E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999552962561044	WITHOUT_CLASSIFICATION	4.4703743895722666E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999870630854556	WITHOUT_CLASSIFICATION	1.2936914544368325E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9999312471134638	WITHOUT_CLASSIFICATION	6.875288653617998E-5	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999966470575938	WITHOUT_CLASSIFICATION	3.352942406124965E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999947414798	WITHOUT_CLASSIFICATION	5.258520132186841E-9	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9998277469223776	WITHOUT_CLASSIFICATION	1.722530776225031E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999937069348418	WITHOUT_CLASSIFICATION	6.2930651581884E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999993448492581	WITHOUT_CLASSIFICATION	6.551507418234869E-7	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999988202704937	WITHOUT_CLASSIFICATION	1.179729506283935E-6	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9887809204319034	WITHOUT_CLASSIFICATION	0.011219079568096629	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9997983258632365	WITHOUT_CLASSIFICATION	2.0167413676345526E-4	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999939326481048	WITHOUT_CLASSIFICATION	6.067351895186978E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999991996148577	WITHOUT_CLASSIFICATION	8.003851422639181E-7	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999912694971094	WITHOUT_CLASSIFICATION	8.730502890680742E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999885196714	WITHOUT_CLASSIFICATION	1.1480328557063079E-8	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999978024472389	WITHOUT_CLASSIFICATION	2.19755276109649E-6	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.999999629882568	WITHOUT_CLASSIFICATION	3.7011743203597093E-7	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.999999974038548	WITHOUT_CLASSIFICATION	2.5961452082005507E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999811593216988	WITHOUT_CLASSIFICATION	1.8840678301143852E-5	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999997679956952	WITHOUT_CLASSIFICATION	2.3200430469607845E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9974023841184001	WITHOUT_CLASSIFICATION	0.0025976158815999018	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994409331715	WITHOUT_CLASSIFICATION	5.590668284783686E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994409331715	WITHOUT_CLASSIFICATION	5.590668284783686E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999999362304324	WITHOUT_CLASSIFICATION	6.376956763736986E-8	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999985731691121	WITHOUT_CLASSIFICATION	1.4268308879657395E-6	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9998993200052512	WITHOUT_CLASSIFICATION	1.0067999474877495E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999988376389295	WITHOUT_CLASSIFICATION	1.1623610705972979E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999996478463551	WITHOUT_CLASSIFICATION	3.5215364487347014E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999996203578115	WITHOUT_CLASSIFICATION	3.7964218845342063E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.999999411686496	WITHOUT_CLASSIFICATION	5.88313503894844E-7	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999733504094708	WITHOUT_CLASSIFICATION	2.664959052919296E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999540777627824	WITHOUT_CLASSIFICATION	4.59222372175571E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999980856726088	WITHOUT_CLASSIFICATION	1.9143273911379554E-6	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999967060299464	WITHOUT_CLASSIFICATION	3.2939700536411678E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999250911679	WITHOUT_CLASSIFICATION	7.490883208179002E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999950663136199	WITHOUT_CLASSIFICATION	4.933686380014645E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999716808811469	WITHOUT_CLASSIFICATION	2.8319118853235208E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999826159016916	WITHOUT_CLASSIFICATION	1.7384098308360037E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9995952107753716	WITHOUT_CLASSIFICATION	4.047892246284534E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999968465026098	WITHOUT_CLASSIFICATION	3.1534973902838344E-6	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999995996561751	WITHOUT_CLASSIFICATION	4.003438249042254E-7	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999988672076726	WITHOUT_CLASSIFICATION	1.1327923273028492E-6	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999440638496746	WITHOUT_CLASSIFICATION	5.593615032544781E-5	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9998638452667133	WITHOUT_CLASSIFICATION	1.3615473328667727E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999993904425888	WITHOUT_CLASSIFICATION	6.09557411194192E-6	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999999734249049	WITHOUT_CLASSIFICATION	2.6575095165612502E-8	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999927891638725	WITHOUT_CLASSIFICATION	7.210836127548333E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999826159016916	WITHOUT_CLASSIFICATION	1.7384098308360037E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999826159016916	WITHOUT_CLASSIFICATION	1.7384098308360037E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999817933994108	WITHOUT_CLASSIFICATION	1.8206600589178696E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999718306608892	WITHOUT_CLASSIFICATION	2.8169339110725416E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999886571465457	WITHOUT_CLASSIFICATION	1.1342853454289622E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999992653553816	WITHOUT_CLASSIFICATION	7.34644618398595E-7	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9998320504983549	WITHOUT_CLASSIFICATION	1.6794950164521308E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999218543374	WITHOUT_CLASSIFICATION	7.814566263333971E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999284719039	WITHOUT_CLASSIFICATION	7.152809613412209E-8	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999474738059762	WITHOUT_CLASSIFICATION	5.252619402386476E-5	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999996183073164	WITHOUT_CLASSIFICATION	3.816926835731429E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999888030420272	WITHOUT_CLASSIFICATION	1.1196957972746932E-5	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.999922488231801	WITHOUT_CLASSIFICATION	7.751176819910362E-5	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999972303839845	WITHOUT_CLASSIFICATION	2.7696160155538383E-6	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999968333301625	WITHOUT_CLASSIFICATION	3.16666983750679E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999998576393635	WITHOUT_CLASSIFICATION	1.4236063643592941E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999993487219084	WITHOUT_CLASSIFICATION	6.51278091680875E-7	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999905147273671	WITHOUT_CLASSIFICATION	9.485272632849161E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.994941398339064	WITHOUT_CLASSIFICATION	0.0050586016609359885	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9974059798642777	WITHOUT_CLASSIFICATION	0.002594020135722402	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9998719277131441	WITHOUT_CLASSIFICATION	1.2807228685588075E-4	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999999578892289	WITHOUT_CLASSIFICATION	4.21107710309166E-8	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999999336537245	WITHOUT_CLASSIFICATION	6.634627551875225E-8	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999753304393703	WITHOUT_CLASSIFICATION	2.4669560629809595E-5	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999990956292739	WITHOUT_CLASSIFICATION	9.043707261198458E-7	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999962433884692	WITHOUT_CLASSIFICATION	3.7566115307413832E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999981786084063	WITHOUT_CLASSIFICATION	1.8213915936042601E-6	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999996999905068	WITHOUT_CLASSIFICATION	3.0000949321751887E-7	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999999626109365	WITHOUT_CLASSIFICATION	3.7389063588126555E-8	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999849446172362	WITHOUT_CLASSIFICATION	1.5055382763728579E-5	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999848678552465	WITHOUT_CLASSIFICATION	1.513214475351447E-5	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999623037462	WITHOUT_CLASSIFICATION	3.769625379053218E-8	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999976828156018	WITHOUT_CLASSIFICATION	2.317184398361919E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999968173138598	WITHOUT_CLASSIFICATION	3.1826861401216815E-6	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999904062674903	WITHOUT_CLASSIFICATION	9.593732509851539E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999995955762615	WITHOUT_CLASSIFICATION	4.0442373857836217E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999996953233969	WITHOUT_CLASSIFICATION	3.046766030388232E-7	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999994567271375	WITHOUT_CLASSIFICATION	5.432728624575941E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9983451814167698	WITHOUT_CLASSIFICATION	0.0016548185832302082	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999771213502309	WITHOUT_CLASSIFICATION	2.287864976914732E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.999999796664506	WITHOUT_CLASSIFICATION	2.0333549400810497E-7	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9998875816690825	WITHOUT_CLASSIFICATION	1.1241833091743829E-4	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999456877074727	WITHOUT_CLASSIFICATION	5.4312292527252426E-5	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999997893563223	WITHOUT_CLASSIFICATION	2.106436776661445E-7	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999652905530887	WITHOUT_CLASSIFICATION	3.4709446911203895E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999460548562336	WITHOUT_CLASSIFICATION	5.3945143766419924E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999995321580122	WITHOUT_CLASSIFICATION	4.6784198773314973E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999997940408318	WITHOUT_CLASSIFICATION	2.0595916820535723E-7	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999999598965809	WITHOUT_CLASSIFICATION	4.010341904531653E-8	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999995902048601	WITHOUT_CLASSIFICATION	4.097951399809409E-7	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999980843798482	WITHOUT_CLASSIFICATION	1.9156201517758236E-6	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.999999992647004	WITHOUT_CLASSIFICATION	7.352995887083636E-9	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999965653590334	WITHOUT_CLASSIFICATION	3.434640966577243E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999993050140309	WITHOUT_CLASSIFICATION	6.94985969074597E-7	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999932623251222	WITHOUT_CLASSIFICATION	6.7376748777849904E-6	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999979233617591	WITHOUT_CLASSIFICATION	2.0766382408351833E-6	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999798854846352	WITHOUT_CLASSIFICATION	2.0114515364702663E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999989817672258	WITHOUT_CLASSIFICATION	1.0182327741861174E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999997719407911	WITHOUT_CLASSIFICATION	2.2805920886865257E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999771603391363	WITHOUT_CLASSIFICATION	2.283966086379175E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.999999865086113	WITHOUT_CLASSIFICATION	1.349138869115305E-7	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9995590525299535	WITHOUT_CLASSIFICATION	4.409474700464489E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999859440748061	WITHOUT_CLASSIFICATION	1.4055925193797315E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999985103135113	WITHOUT_CLASSIFICATION	1.4896864887723244E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999705251469	WITHOUT_CLASSIFICATION	2.947485306382975E-8	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999508773262	WITHOUT_CLASSIFICATION	4.912267389055883E-8	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999999452144043	WITHOUT_CLASSIFICATION	5.4785595798098304E-8	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999933014920535	WITHOUT_CLASSIFICATION	6.6985079465301886E-6	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.999999962753504	WITHOUT_CLASSIFICATION	3.724649603366038E-8	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999409832252	WITHOUT_CLASSIFICATION	5.9016774734552774E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9975771125467301	WITHOUT_CLASSIFICATION	0.002422887453269938	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999999881320675	WITHOUT_CLASSIFICATION	1.1867932589646044E-8	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.999999796664506	WITHOUT_CLASSIFICATION	2.0333549400810497E-7	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998184006367	WITHOUT_CLASSIFICATION	1.815993632683453E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999990296911035	WITHOUT_CLASSIFICATION	9.703088964862595E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999990296911035	WITHOUT_CLASSIFICATION	9.703088964862595E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999989472317239	WITHOUT_CLASSIFICATION	1.0527682760935351E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999750596507	WITHOUT_CLASSIFICATION	2.4940349291666504E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999750596507	WITHOUT_CLASSIFICATION	2.4940349291666504E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999997039188498	WITHOUT_CLASSIFICATION	2.960811500626604E-7	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999998030037958	WITHOUT_CLASSIFICATION	1.9699620419984908E-7	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.999998294298072	WITHOUT_CLASSIFICATION	1.7057019280006722E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998726182876	WITHOUT_CLASSIFICATION	1.2738171239733652E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999978871379667	WITHOUT_CLASSIFICATION	2.1128620333354923E-6	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999918983557309	WITHOUT_CLASSIFICATION	8.1016442691098E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999994031011809	WITHOUT_CLASSIFICATION	5.968988192108404E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999998986228045	WITHOUT_CLASSIFICATION	1.0137719553434612E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999928789913476	WITHOUT_CLASSIFICATION	7.121008652321248E-6	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999599671701473	WITHOUT_CLASSIFICATION	4.003282985269488E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999994070165259	WITHOUT_CLASSIFICATION	5.929834740881062E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999995448949283	WITHOUT_CLASSIFICATION	4.5510507166955563E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9998504859576259	WITHOUT_CLASSIFICATION	1.495140423741057E-4	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9997338569428569	WITHOUT_CLASSIFICATION	2.661430571430394E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.999783796722477	WITHOUT_CLASSIFICATION	2.162032775231225E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999995185608914	WITHOUT_CLASSIFICATION	4.814391085791561E-7	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999999401140097	WITHOUT_CLASSIFICATION	5.988599028252517E-8	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999995312440565	WITHOUT_CLASSIFICATION	4.687559435263825E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997911745344	WITHOUT_CLASSIFICATION	2.0882546558403166E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999999750596507	WITHOUT_CLASSIFICATION	2.4940349291666504E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999997039188498	WITHOUT_CLASSIFICATION	2.960811500626604E-7	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999995185608914	WITHOUT_CLASSIFICATION	4.814391085791561E-7	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999479556773649	WITHOUT_CLASSIFICATION	5.2044322635086025E-5	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999994568952318	WITHOUT_CLASSIFICATION	5.431047680956668E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999997297926374	WITHOUT_CLASSIFICATION	2.702073626029929E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999927941675291	WITHOUT_CLASSIFICATION	7.205832470912465E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.999999416703944	WITHOUT_CLASSIFICATION	5.832960560298285E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999997264827393	WITHOUT_CLASSIFICATION	2.7351726070636025E-7	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999999397851919	WITHOUT_CLASSIFICATION	6.021480814425181E-8	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999949238662578	WITHOUT_CLASSIFICATION	5.076133742258299E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999792465550524	WITHOUT_CLASSIFICATION	2.07534449476288E-5	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999973616958119	WITHOUT_CLASSIFICATION	2.6383041880594365E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999906771661239	WITHOUT_CLASSIFICATION	9.322833876160234E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999295860614922	WITHOUT_CLASSIFICATION	7.041393850775776E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999942445658412	WITHOUT_CLASSIFICATION	5.755434158842903E-6	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.999988480006166	WITHOUT_CLASSIFICATION	1.1519993833900627E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9999798448371018	WITHOUT_CLASSIFICATION	2.0155162898196972E-5	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9709036746730199	WITHOUT_CLASSIFICATION	0.02909632532698011	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999139975904	WITHOUT_CLASSIFICATION	8.600240962216261E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999997528708956	WITHOUT_CLASSIFICATION	2.4712910442167433E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.999997838228221	WITHOUT_CLASSIFICATION	2.1617717789960583E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.999996840303064	WITHOUT_CLASSIFICATION	3.1596969360265404E-6	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999888833037209	WITHOUT_CLASSIFICATION	1.1116696279085452E-5	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999988465966974	WITHOUT_CLASSIFICATION	1.153403302679409E-6	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999990036048274	WITHOUT_CLASSIFICATION	9.963951726160544E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.999996403598027	WITHOUT_CLASSIFICATION	3.596401972959776E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999845621107006	WITHOUT_CLASSIFICATION	1.5437889299324394E-5	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999889028271622	WITHOUT_CLASSIFICATION	1.109717283769247E-5	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999956874933517	WITHOUT_CLASSIFICATION	4.312506648367815E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999879939456199	WITHOUT_CLASSIFICATION	1.2006054380031316E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999037798255	WITHOUT_CLASSIFICATION	9.622017442324534E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999997654960996	WITHOUT_CLASSIFICATION	2.3450390049729916E-7	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.999997590061039	WITHOUT_CLASSIFICATION	2.4099389610629195E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999998697327813	WITHOUT_CLASSIFICATION	1.3026721872929747E-7	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999990031693926	WITHOUT_CLASSIFICATION	9.96830607435774E-7	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999889832896144	WITHOUT_CLASSIFICATION	1.1016710385565533E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999961029621774	WITHOUT_CLASSIFICATION	3.8970378226316125E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999990616794519	WITHOUT_CLASSIFICATION	9.383205481329062E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999999736325969	WITHOUT_CLASSIFICATION	2.6367403132045263E-8	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999326043166	WITHOUT_CLASSIFICATION	6.739568344040667E-8	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999990209463059	WITHOUT_CLASSIFICATION	9.790536940643694E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999990209463059	WITHOUT_CLASSIFICATION	9.790536940643694E-7	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999281979484	WITHOUT_CLASSIFICATION	7.180205159076458E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999572065464	WITHOUT_CLASSIFICATION	4.2793453558500035E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999572065464	WITHOUT_CLASSIFICATION	4.2793453558500035E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999932254781	WITHOUT_CLASSIFICATION	6.77452188432562E-9	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999932254781	WITHOUT_CLASSIFICATION	6.77452188432562E-9	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999998567872492	WITHOUT_CLASSIFICATION	1.432127507801098E-7	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999907442123016	WITHOUT_CLASSIFICATION	9.255787698446085E-6	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999998252503859	WITHOUT_CLASSIFICATION	1.747496142037151E-7	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999995046615848	WITHOUT_CLASSIFICATION	4.953384151773097E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999997513270155	WITHOUT_CLASSIFICATION	2.486729844933426E-7	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999790381078099	WITHOUT_CLASSIFICATION	2.0961892190224347E-5	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999900980470444	WITHOUT_CLASSIFICATION	9.901952955566607E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999993086654938	WITHOUT_CLASSIFICATION	6.913345062156529E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999990209463059	WITHOUT_CLASSIFICATION	9.790536940643694E-7	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999986935931301	WITHOUT_CLASSIFICATION	1.3064068699775007E-6	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.999999879603842	WITHOUT_CLASSIFICATION	1.2039615796099853E-7	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999998661753803	WITHOUT_CLASSIFICATION	1.3382461962408955E-7	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9927140562238721	WITHOUT_CLASSIFICATION	0.007285943776127969	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.999997605098856	WITHOUT_CLASSIFICATION	2.394901143993946E-6	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999924137561423	WITHOUT_CLASSIFICATION	7.58624385753996E-6	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999929526071731	WITHOUT_CLASSIFICATION	7.047392826913516E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999953315998883	WITHOUT_CLASSIFICATION	4.668400111678628E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999998788110227	WITHOUT_CLASSIFICATION	1.2118897738070683E-7	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999998788110227	WITHOUT_CLASSIFICATION	1.2118897738070683E-7	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999846256716887	WITHOUT_CLASSIFICATION	1.537432831134161E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999975218282898	WITHOUT_CLASSIFICATION	2.4781717101069217E-6	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999998586407739	WITHOUT_CLASSIFICATION	1.4135922607508472E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.999999684160964	WITHOUT_CLASSIFICATION	3.158390360455233E-7	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999997027935968	WITHOUT_CLASSIFICATION	2.9720640317341155E-7	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999551464693	WITHOUT_CLASSIFICATION	4.485353065609675E-8	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999549604396	WITHOUT_CLASSIFICATION	4.503956040856559E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999940475979814	WITHOUT_CLASSIFICATION	5.952402018702044E-6	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.99997638236429	WITHOUT_CLASSIFICATION	2.3617635709989293E-5	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999551464693	WITHOUT_CLASSIFICATION	4.485353065609675E-8	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999937888553567	WITHOUT_CLASSIFICATION	6.211144643261343E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999965155322278	WITHOUT_CLASSIFICATION	3.4844677722633004E-6	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.999999074138128	WITHOUT_CLASSIFICATION	9.258618718440007E-7	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9999573723586087	WITHOUT_CLASSIFICATION	4.262764139120742E-5	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999988145001063	WITHOUT_CLASSIFICATION	1.1854998937440514E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999981544404839	WITHOUT_CLASSIFICATION	1.8455595160357794E-6	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999983263189651	WITHOUT_CLASSIFICATION	1.673681034880464E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999934412579008	WITHOUT_CLASSIFICATION	6.5587420992307774E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999934412579008	WITHOUT_CLASSIFICATION	6.5587420992307774E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999938006212509	WITHOUT_CLASSIFICATION	6.199378749218024E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999938006212509	WITHOUT_CLASSIFICATION	6.199378749218024E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.999991729211168	WITHOUT_CLASSIFICATION	8.270788832020096E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999992372637563	WITHOUT_CLASSIFICATION	7.627362436972441E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999992372637563	WITHOUT_CLASSIFICATION	7.627362436972441E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999905526170811	WITHOUT_CLASSIFICATION	9.447382918885176E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999910704057379	WITHOUT_CLASSIFICATION	8.92959426205901E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999910704057379	WITHOUT_CLASSIFICATION	8.92959426205901E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999927701972864	WITHOUT_CLASSIFICATION	7.229802713687646E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999942548450229	WITHOUT_CLASSIFICATION	5.745154977120894E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.999999884986975	WITHOUT_CLASSIFICATION	1.150130249961858E-7	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999964395963812	WITHOUT_CLASSIFICATION	3.560403618687913E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999997335556946	WITHOUT_CLASSIFICATION	2.664443054336967E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999981331440576	WITHOUT_CLASSIFICATION	1.8668559423533598E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999981331440576	WITHOUT_CLASSIFICATION	1.8668559423533598E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999934411122915	WITHOUT_CLASSIFICATION	6.5588877085553596E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999934411122915	WITHOUT_CLASSIFICATION	6.5588877085553596E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999988086286854	WITHOUT_CLASSIFICATION	1.191371314580959E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999996067682968	WITHOUT_CLASSIFICATION	3.932317032297532E-7	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999823935111204	WITHOUT_CLASSIFICATION	1.7606488879607394E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999997338267873	WITHOUT_CLASSIFICATION	2.6617321270305557E-7	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999934412579008	WITHOUT_CLASSIFICATION	6.5587420992307774E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999960123158569	WITHOUT_CLASSIFICATION	3.987684143105815E-6	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999977763343808	WITHOUT_CLASSIFICATION	2.2236656190856557E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999938006212509	WITHOUT_CLASSIFICATION	6.199378749218024E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999938006212509	WITHOUT_CLASSIFICATION	6.199378749218024E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.999991729211168	WITHOUT_CLASSIFICATION	8.270788832020096E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999992372637563	WITHOUT_CLASSIFICATION	7.627362436972441E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999992372637563	WITHOUT_CLASSIFICATION	7.627362436972441E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999992372637563	WITHOUT_CLASSIFICATION	7.627362436972441E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999905526170811	WITHOUT_CLASSIFICATION	9.447382918885176E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999910704057379	WITHOUT_CLASSIFICATION	8.92959426205901E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999927701972864	WITHOUT_CLASSIFICATION	7.229802713687646E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999942548450229	WITHOUT_CLASSIFICATION	5.745154977120894E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999981331440576	WITHOUT_CLASSIFICATION	1.8668559423533598E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999217728647	WITHOUT_CLASSIFICATION	7.822713527054642E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999987871197046	WITHOUT_CLASSIFICATION	1.2128802954042018E-6	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999998425997549	WITHOUT_CLASSIFICATION	1.5740024505925245E-7	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999974296641392	WITHOUT_CLASSIFICATION	2.5703358608555586E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999981331440576	WITHOUT_CLASSIFICATION	1.8668559423533598E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999934411122915	WITHOUT_CLASSIFICATION	6.5588877085553596E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999934411122915	WITHOUT_CLASSIFICATION	6.5588877085553596E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999823935111204	WITHOUT_CLASSIFICATION	1.7606488879607394E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999823935111204	WITHOUT_CLASSIFICATION	1.7606488879607394E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999955845756098	WITHOUT_CLASSIFICATION	4.415424390217262E-6	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999913274311895	WITHOUT_CLASSIFICATION	8.672568810550152E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999819956726851	WITHOUT_CLASSIFICATION	1.8004327314987606E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999919628051117	WITHOUT_CLASSIFICATION	8.037194888369316E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999749723527601	WITHOUT_CLASSIFICATION	2.5027647239971396E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999927951316899	WITHOUT_CLASSIFICATION	7.204868310060454E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999851247995016	WITHOUT_CLASSIFICATION	1.4875200498249008E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9997569173433997	WITHOUT_CLASSIFICATION	2.4308265660033957E-4	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999997170317935	WITHOUT_CLASSIFICATION	2.829682064801607E-7	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999695920845261	WITHOUT_CLASSIFICATION	3.0407915473819167E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999998116442268	WITHOUT_CLASSIFICATION	1.8835577328225112E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999938658468186	WITHOUT_CLASSIFICATION	6.134153181476168E-6	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999959326760152	WITHOUT_CLASSIFICATION	4.067323984783686E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.999998877108045	WITHOUT_CLASSIFICATION	1.1228919549407534E-6	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.999999840881412	WITHOUT_CLASSIFICATION	1.5911858800384497E-7	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999996241325925	WITHOUT_CLASSIFICATION	3.7586740751789935E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999997469644175	WITHOUT_CLASSIFICATION	2.530355824845989E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999967382725156	WITHOUT_CLASSIFICATION	3.2617274844060017E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999939732464641	WITHOUT_CLASSIFICATION	6.0267535360009746E-6	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999970898536039	WITHOUT_CLASSIFICATION	2.9101463960518393E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999989642758527	WITHOUT_CLASSIFICATION	1.0357241473219044E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9998884104921956	WITHOUT_CLASSIFICATION	1.1158950780438997E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999227083777	WITHOUT_CLASSIFICATION	7.729162229730802E-8	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999227083777	WITHOUT_CLASSIFICATION	7.729162229730802E-8	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999993813358302	WITHOUT_CLASSIFICATION	6.186641697279375E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999994334829048	WITHOUT_CLASSIFICATION	5.665170953367363E-7	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9995949080370066	WITHOUT_CLASSIFICATION	4.0509196299349034E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999999654862379	WITHOUT_CLASSIFICATION	3.4513762014362434E-8	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999986618640696	WITHOUT_CLASSIFICATION	1.3381359304955025E-6	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999759176220034	WITHOUT_CLASSIFICATION	2.408237799651333E-5	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999994917778676	WITHOUT_CLASSIFICATION	5.082221323667697E-7	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999999433933707	WITHOUT_CLASSIFICATION	5.660662932671833E-8	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.999999750666105	WITHOUT_CLASSIFICATION	2.4933389500585E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.999999750666105	WITHOUT_CLASSIFICATION	2.4933389500585E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.999999750666105	WITHOUT_CLASSIFICATION	2.4933389500585E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999974162785061	WITHOUT_CLASSIFICATION	2.5837214938049573E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999974162785061	WITHOUT_CLASSIFICATION	2.5837214938049573E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999974162785061	WITHOUT_CLASSIFICATION	2.5837214938049573E-6	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999997261011231	WITHOUT_CLASSIFICATION	2.738988769460497E-7	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.99999951164519	WITHOUT_CLASSIFICATION	4.883548100623664E-7	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999968155608058	WITHOUT_CLASSIFICATION	3.184439194155801E-6	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9602510261754366	WITHOUT_CLASSIFICATION	0.03974897382456347	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999999381578537	WITHOUT_CLASSIFICATION	6.184214629626659E-8	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999768528567878	WITHOUT_CLASSIFICATION	2.3147143212120437E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999832105106111	WITHOUT_CLASSIFICATION	1.6789489388871287E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999947877977808	WITHOUT_CLASSIFICATION	5.212202219148476E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995950617503	WITHOUT_CLASSIFICATION	4.049382497665385E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999821677244117	WITHOUT_CLASSIFICATION	1.7832275588199882E-5	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999708265426844	WITHOUT_CLASSIFICATION	2.9173457315556317E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9998979622131933	WITHOUT_CLASSIFICATION	1.0203778680671464E-4	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999895654916209	WITHOUT_CLASSIFICATION	1.043450837907519E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999997735279346	WITHOUT_CLASSIFICATION	2.2647206543840458E-7	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999960753000617	WITHOUT_CLASSIFICATION	3.924699938271802E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999997454278914	WITHOUT_CLASSIFICATION	2.5457210865578906E-7	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999998009979334	WITHOUT_CLASSIFICATION	1.990020666832776E-7	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999941635352264	WITHOUT_CLASSIFICATION	5.836464773648987E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9993767199650047	WITHOUT_CLASSIFICATION	6.232800349953735E-4	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999989858864806	WITHOUT_CLASSIFICATION	1.0141135193672582E-6	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.99999998925246	WITHOUT_CLASSIFICATION	1.0747539907239248E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999990393779485	WITHOUT_CLASSIFICATION	9.606220514192974E-7	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9853560416860769	WITHOUT_CLASSIFICATION	0.014643958313923094	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999998142466842	WITHOUT_CLASSIFICATION	1.857533158651958E-7	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999999664984365	WITHOUT_CLASSIFICATION	3.3501563641951243E-8	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999407586517753	WITHOUT_CLASSIFICATION	5.9241348224651924E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998372934876	WITHOUT_CLASSIFICATION	1.6270651245701952E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999947414798	WITHOUT_CLASSIFICATION	5.258520132186841E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999998417299116	WITHOUT_CLASSIFICATION	1.5827008826818784E-7	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999998417299116	WITHOUT_CLASSIFICATION	1.5827008826818784E-7	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999894526071227	WITHOUT_CLASSIFICATION	1.0547392877302506E-5	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.999999940943685	WITHOUT_CLASSIFICATION	5.905631493483016E-8	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.99999865903061	WITHOUT_CLASSIFICATION	1.3409693898958436E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999998950213917	WITHOUT_CLASSIFICATION	1.0497860831916159E-7	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999028702475868	WITHOUT_CLASSIFICATION	9.71297524132367E-5	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999821764922	WITHOUT_CLASSIFICATION	1.7823507878783855E-8	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9997267809353558	WITHOUT_CLASSIFICATION	2.7321906464419446E-4	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999999522992679	WITHOUT_CLASSIFICATION	4.770073214961918E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999982075727073	WITHOUT_CLASSIFICATION	1.7924272926340536E-6	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999984892466611	WITHOUT_CLASSIFICATION	1.5107533388823525E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999863303816764	WITHOUT_CLASSIFICATION	1.366961832361603E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9998936355961178	WITHOUT_CLASSIFICATION	1.0636440388229846E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.999968256888799	WITHOUT_CLASSIFICATION	3.174311120096659E-5	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.999993657013224	WITHOUT_CLASSIFICATION	6.342986776142326E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999967382725156	WITHOUT_CLASSIFICATION	3.2617274844060017E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999990197919132	WITHOUT_CLASSIFICATION	9.802080868077315E-7	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9999822835642553	WITHOUT_CLASSIFICATION	1.7716435744720503E-5	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999941046521957	WITHOUT_CLASSIFICATION	5.895347804210672E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9999605043420208	WITHOUT_CLASSIFICATION	3.9495657979312454E-5	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999999126670104	WITHOUT_CLASSIFICATION	8.733298961467383E-8	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999530852453	WITHOUT_CLASSIFICATION	4.6914754765046016E-8	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999987538406307	WITHOUT_CLASSIFICATION	1.2461593692161189E-6	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999905702794691	WITHOUT_CLASSIFICATION	9.429720530921319E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999913575710433	WITHOUT_CLASSIFICATION	8.64242895668315E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999996263593691	WITHOUT_CLASSIFICATION	3.736406309806964E-7	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999438275426	WITHOUT_CLASSIFICATION	5.6172457370288306E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9998919050625087	WITHOUT_CLASSIFICATION	1.0809493749125532E-4	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.999989644665904	WITHOUT_CLASSIFICATION	1.0355334096051619E-5	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999990284346483	WITHOUT_CLASSIFICATION	9.715653516851274E-7	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999998037138274	WITHOUT_CLASSIFICATION	1.9628617257614874E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999998796567381	WITHOUT_CLASSIFICATION	1.2034326184939358E-7	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999976826721666	WITHOUT_CLASSIFICATION	2.3173278334093646E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999834984974	WITHOUT_CLASSIFICATION	1.65015026518809E-8	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999927720648982	WITHOUT_CLASSIFICATION	7.22793510184093E-6	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999997103623828	WITHOUT_CLASSIFICATION	2.8963761719826286E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999993863381978	WITHOUT_CLASSIFICATION	6.136618021768271E-7	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999579117259155	WITHOUT_CLASSIFICATION	4.208827408445313E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999924034490038	WITHOUT_CLASSIFICATION	7.596550996160615E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999996117320129	WITHOUT_CLASSIFICATION	3.882679870171793E-7	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999905423587632	WITHOUT_CLASSIFICATION	9.457641236885145E-6	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9999905742209336	WITHOUT_CLASSIFICATION	9.425779066411515E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.999764483304913	WITHOUT_CLASSIFICATION	2.3551669508698475E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999796173354	WITHOUT_CLASSIFICATION	2.0382664549634382E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999796173354	WITHOUT_CLASSIFICATION	2.0382664549634382E-8	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.999998882018808	WITHOUT_CLASSIFICATION	1.1179811920009968E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999218543374	WITHOUT_CLASSIFICATION	7.814566263333971E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999988576275347	WITHOUT_CLASSIFICATION	1.1423724653397795E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999988576275347	WITHOUT_CLASSIFICATION	1.1423724653397795E-6	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999768528567878	WITHOUT_CLASSIFICATION	2.3147143212120437E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999832105106111	WITHOUT_CLASSIFICATION	1.6789489388871287E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999994547351737	WITHOUT_CLASSIFICATION	5.452648262853346E-7	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999981308093702	WITHOUT_CLASSIFICATION	1.8691906297249857E-6	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999794536356035	WITHOUT_CLASSIFICATION	2.0546364396487376E-5	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.999998885144835	WITHOUT_CLASSIFICATION	1.114855164913559E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999593140866	WITHOUT_CLASSIFICATION	4.0685913449243465E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999997172751839	WITHOUT_CLASSIFICATION	2.8272481615684015E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999967913176582	WITHOUT_CLASSIFICATION	3.2086823418945647E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999996403483	WITHOUT_CLASSIFICATION	3.596516999078541E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999998198393728	WITHOUT_CLASSIFICATION	1.8016062711857608E-7	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.994410241269403	WITHOUT_CLASSIFICATION	0.0055897587305969295	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999999692163781	WITHOUT_CLASSIFICATION	3.078362188642818E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999980242258122	WITHOUT_CLASSIFICATION	1.975774187826896E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999988671368134	WITHOUT_CLASSIFICATION	1.1328631866277618E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999988671368134	WITHOUT_CLASSIFICATION	1.1328631866277618E-6	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999856612209536	WITHOUT_CLASSIFICATION	1.4338779046472019E-5	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999999157329622	WITHOUT_CLASSIFICATION	8.426703774999258E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999929642120382	WITHOUT_CLASSIFICATION	7.0357879617077E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999917528604035	WITHOUT_CLASSIFICATION	8.247139596424671E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999994247441358	WITHOUT_CLASSIFICATION	5.752558641056434E-7	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999149636126	WITHOUT_CLASSIFICATION	8.503638739101799E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999978441642839	WITHOUT_CLASSIFICATION	2.1558357160002373E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999986025040132	WITHOUT_CLASSIFICATION	1.3974959868165328E-6	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999984563099421	WITHOUT_CLASSIFICATION	1.5436900578815247E-6	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9998372905755298	WITHOUT_CLASSIFICATION	1.6270942447013084E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9874032137598553	WITHOUT_CLASSIFICATION	0.012596786240144691	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9999473913562068	WITHOUT_CLASSIFICATION	5.2608643793121734E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9427678708621776	WITHOUT_CLASSIFICATION	0.05723212913782236	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999943365540113	WITHOUT_CLASSIFICATION	5.663445988706342E-6	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999790321260795	WITHOUT_CLASSIFICATION	2.0967873920506356E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999559742423882	WITHOUT_CLASSIFICATION	4.402575761188482E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999997737746961	WITHOUT_CLASSIFICATION	2.2622530389446646E-7	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999963233917876	WITHOUT_CLASSIFICATION	3.6766082123237214E-6	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999925767503918	WITHOUT_CLASSIFICATION	7.423249608227966E-6	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999518755835	WITHOUT_CLASSIFICATION	4.81244164508588E-8	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9997484043061233	WITHOUT_CLASSIFICATION	2.515956938766742E-4	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999960322115554	WITHOUT_CLASSIFICATION	3.967788444542793E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999994334726214	WITHOUT_CLASSIFICATION	5.665273785337811E-7	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999804317296496	WITHOUT_CLASSIFICATION	1.9568270350443255E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.999999217924693	WITHOUT_CLASSIFICATION	7.820753070477173E-7	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999946473807116	WITHOUT_CLASSIFICATION	5.352619288263821E-6	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999990565725311	WITHOUT_CLASSIFICATION	9.434274688311591E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999894432465869	WITHOUT_CLASSIFICATION	1.0556753413000246E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999912126774415	WITHOUT_CLASSIFICATION	8.787322558492205E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9973179079764438	WITHOUT_CLASSIFICATION	0.002682092023556316	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9973179079764438	WITHOUT_CLASSIFICATION	0.002682092023556316	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9973179079764438	WITHOUT_CLASSIFICATION	0.002682092023556316	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9973179079764438	WITHOUT_CLASSIFICATION	0.002682092023556316	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9973179079764438	WITHOUT_CLASSIFICATION	0.002682092023556316	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9973179079764438	WITHOUT_CLASSIFICATION	0.002682092023556316	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999983416349212	WITHOUT_CLASSIFICATION	1.6583650788627266E-6	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999994110751291	WITHOUT_CLASSIFICATION	5.889248709173495E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999992499934681	WITHOUT_CLASSIFICATION	7.500065318693419E-7	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999353967478352	WITHOUT_CLASSIFICATION	6.460325216489714E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999353967478352	WITHOUT_CLASSIFICATION	6.460325216489714E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999996309235241	WITHOUT_CLASSIFICATION	3.6907647599049867E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999996309235241	WITHOUT_CLASSIFICATION	3.6907647599049867E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999983286868108	WITHOUT_CLASSIFICATION	1.6713131892530749E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999959880021524	WITHOUT_CLASSIFICATION	4.011997847651619E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999987214485493	WITHOUT_CLASSIFICATION	1.2785514507892013E-6	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999695257213509	WITHOUT_CLASSIFICATION	3.0474278649048852E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999996959862972	WITHOUT_CLASSIFICATION	3.040137027905887E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999977516343882	WITHOUT_CLASSIFICATION	2.248365611781467E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999996828148143	WITHOUT_CLASSIFICATION	3.171851856354584E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999996828148143	WITHOUT_CLASSIFICATION	3.171851856354584E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999974922493028	WITHOUT_CLASSIFICATION	2.5077506972171006E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999974922493028	WITHOUT_CLASSIFICATION	2.5077506972171006E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999974922493028	WITHOUT_CLASSIFICATION	2.5077506972171006E-6	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.999918604129226	WITHOUT_CLASSIFICATION	8.139587077400946E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.999918604129226	WITHOUT_CLASSIFICATION	8.139587077400946E-5	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999996464185286	WITHOUT_CLASSIFICATION	3.5358147151504713E-7	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999929872484	WITHOUT_CLASSIFICATION	7.0127515031306675E-9	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999998688046932	WITHOUT_CLASSIFICATION	1.3119530690721972E-7	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999984953526195	WITHOUT_CLASSIFICATION	1.5046473804410211E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999999982011535	WITHOUT_CLASSIFICATION	1.7988464995703486E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999999982011535	WITHOUT_CLASSIFICATION	1.7988464995703486E-8	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999999178016689	WITHOUT_CLASSIFICATION	8.219833117415714E-8	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9973179079764438	WITHOUT_CLASSIFICATION	0.002682092023556316	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999999982011535	WITHOUT_CLASSIFICATION	1.7988464995703486E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.99999968376379	WITHOUT_CLASSIFICATION	3.162362099930842E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.99999968376379	WITHOUT_CLASSIFICATION	3.162362099930842E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999999982011535	WITHOUT_CLASSIFICATION	1.7988464995703486E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999999982011535	WITHOUT_CLASSIFICATION	1.7988464995703486E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999999982011535	WITHOUT_CLASSIFICATION	1.7988464995703486E-8	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999993114154223	WITHOUT_CLASSIFICATION	6.885845776700542E-7	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999613363538	WITHOUT_CLASSIFICATION	3.8663646225023495E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999995611699954	WITHOUT_CLASSIFICATION	4.388300046019118E-7	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999995611699954	WITHOUT_CLASSIFICATION	4.388300046019118E-7	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999607919454	WITHOUT_CLASSIFICATION	3.92080544788723E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999940552436032	WITHOUT_CLASSIFICATION	5.94475639691634E-6	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999769334463822	WITHOUT_CLASSIFICATION	2.306655361777932E-5	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999342656668	WITHOUT_CLASSIFICATION	6.573433311502329E-8	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9994172399563308	WITHOUT_CLASSIFICATION	5.827600436692892E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999996042562084	WITHOUT_CLASSIFICATION	3.957437915665297E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999989287840323	WITHOUT_CLASSIFICATION	1.0712159676610275E-6	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999957398099324	WITHOUT_CLASSIFICATION	4.26019006761637E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999994450804275	WITHOUT_CLASSIFICATION	5.549195725085328E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999990986200854	WITHOUT_CLASSIFICATION	9.013799145994363E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999996858076758	WITHOUT_CLASSIFICATION	3.141923241697895E-7	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.999998333972819	WITHOUT_CLASSIFICATION	1.666027181070266E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999995738790457	WITHOUT_CLASSIFICATION	4.261209542296173E-7	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999999326916659	WITHOUT_CLASSIFICATION	6.730833417322379E-8	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999997988751331	WITHOUT_CLASSIFICATION	2.0112486689889073E-7	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999944387510039	WITHOUT_CLASSIFICATION	5.561248996176415E-6	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999992376178934	WITHOUT_CLASSIFICATION	7.623821066013719E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999980038546776	WITHOUT_CLASSIFICATION	1.9961453223652284E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999994793412983	WITHOUT_CLASSIFICATION	5.206587016810905E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999754430848	WITHOUT_CLASSIFICATION	2.4556915185211204E-8	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999970243448991	WITHOUT_CLASSIFICATION	2.9756551008412663E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999980038546776	WITHOUT_CLASSIFICATION	1.9961453223652284E-6	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999999766805263	WITHOUT_CLASSIFICATION	2.3319473624883936E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999994793412983	WITHOUT_CLASSIFICATION	5.206587016810905E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999754430848	WITHOUT_CLASSIFICATION	2.4556915185211204E-8	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999999753355098	WITHOUT_CLASSIFICATION	2.4664490190728277E-8	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999999783566752	WITHOUT_CLASSIFICATION	2.164332486610804E-8	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999999565230214	WITHOUT_CLASSIFICATION	4.347697846703187E-8	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999998943162394	WITHOUT_CLASSIFICATION	1.0568376060164223E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999999753206382	WITHOUT_CLASSIFICATION	2.467936175581605E-8	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999999863010504	WITHOUT_CLASSIFICATION	1.3698949507711052E-8	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9993061952500072	WITHOUT_CLASSIFICATION	6.93804749992726E-4	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999989189999029	WITHOUT_CLASSIFICATION	1.081000097014797E-6	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9997846942202573	WITHOUT_CLASSIFICATION	2.1530577974282144E-4	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999998826736636	WITHOUT_CLASSIFICATION	1.1732633635973885E-7	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.999999789691347	WITHOUT_CLASSIFICATION	2.1030865312162956E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999938858669689	WITHOUT_CLASSIFICATION	6.114133031197105E-6	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999998385151321	WITHOUT_CLASSIFICATION	1.6148486795671703E-7	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999999782349467	WITHOUT_CLASSIFICATION	2.1765053355502604E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.99999549666348	WITHOUT_CLASSIFICATION	4.5033365200211E-6	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999999091007582	WITHOUT_CLASSIFICATION	9.089924190002804E-8	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.999999629487696	WITHOUT_CLASSIFICATION	3.705123038838521E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999990619545389	WITHOUT_CLASSIFICATION	9.38045461129254E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999990619545389	WITHOUT_CLASSIFICATION	9.38045461129254E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999566851912286	WITHOUT_CLASSIFICATION	4.331480877132803E-5	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999566851912286	WITHOUT_CLASSIFICATION	4.331480877132803E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999980700540884	WITHOUT_CLASSIFICATION	1.929945911643163E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999980700540884	WITHOUT_CLASSIFICATION	1.929945911643163E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.999994190113993	WITHOUT_CLASSIFICATION	5.809886007040787E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999974506031939	WITHOUT_CLASSIFICATION	2.5493968061700153E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999994443138104	WITHOUT_CLASSIFICATION	5.556861896295244E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999988418995137	WITHOUT_CLASSIFICATION	1.158100486358363E-6	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.999999419436127	WITHOUT_CLASSIFICATION	5.805638729612295E-7	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999966098906473	WITHOUT_CLASSIFICATION	3.3901093527653506E-6	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.999999017556786	WITHOUT_CLASSIFICATION	9.824432140265127E-7	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999992447448242	WITHOUT_CLASSIFICATION	7.552551758440127E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999975972861552	WITHOUT_CLASSIFICATION	2.4027138449023668E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.999978011297927	WITHOUT_CLASSIFICATION	2.1988702073111422E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9998627647995604	WITHOUT_CLASSIFICATION	1.3723520043967374E-4	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999994681686489	WITHOUT_CLASSIFICATION	5.318313510888028E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999992311149875	WITHOUT_CLASSIFICATION	7.688850126667097E-7	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999285313103	WITHOUT_CLASSIFICATION	7.14686897254204E-8	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999996709868522	WITHOUT_CLASSIFICATION	3.290131478645166E-7	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999992096060211	WITHOUT_CLASSIFICATION	7.903939788831566E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999695323984699	WITHOUT_CLASSIFICATION	3.046760153006E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999995092618915	WITHOUT_CLASSIFICATION	4.907381084728482E-7	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999921245280456	WITHOUT_CLASSIFICATION	7.875471954336802E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999999044917516	WITHOUT_CLASSIFICATION	9.550824840713693E-8	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9990531582401668	WITHOUT_CLASSIFICATION	9.468417598332701E-4	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999988027672836	WITHOUT_CLASSIFICATION	1.1972327164243652E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999998975400248	WITHOUT_CLASSIFICATION	1.0245997515561141E-7	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999998429783474	WITHOUT_CLASSIFICATION	1.5702165258215709E-7	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.999999969430721	WITHOUT_CLASSIFICATION	3.056927897033869E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999991411874217	WITHOUT_CLASSIFICATION	8.588125782397203E-7	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999257854209	WITHOUT_CLASSIFICATION	7.421457915515101E-8	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999997881301104	WITHOUT_CLASSIFICATION	2.1186988955489658E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999999787757674	WITHOUT_CLASSIFICATION	2.122423263831909E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999999137208901	WITHOUT_CLASSIFICATION	8.627910993367822E-8	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999999948693471	WITHOUT_CLASSIFICATION	5.130652951930646E-9	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999992050886557	WITHOUT_CLASSIFICATION	7.949113443983218E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9895090230894783	WITHOUT_CLASSIFICATION	0.010490976910521746	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9997828765810448	WITHOUT_CLASSIFICATION	2.171234189552278E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9997828765810448	WITHOUT_CLASSIFICATION	2.171234189552278E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9999055775289365	WITHOUT_CLASSIFICATION	9.442247106350698E-5	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999956270737678	WITHOUT_CLASSIFICATION	4.372926232314561E-6	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9991021115386407	WITHOUT_CLASSIFICATION	8.978884613592738E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999995005389666	WITHOUT_CLASSIFICATION	4.994610333809564E-7	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9998122742869976	WITHOUT_CLASSIFICATION	1.8772571300250277E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999486830110604	WITHOUT_CLASSIFICATION	5.131698893958262E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999486830110604	WITHOUT_CLASSIFICATION	5.131698893958262E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999486830110604	WITHOUT_CLASSIFICATION	5.131698893958262E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999472231964806	WITHOUT_CLASSIFICATION	5.2776803519341935E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999954598914252	WITHOUT_CLASSIFICATION	4.540108574689687E-6	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999954598914252	WITHOUT_CLASSIFICATION	4.540108574689687E-6	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999919682497638	WITHOUT_CLASSIFICATION	8.031750236190582E-6	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9985788693895616	WITHOUT_CLASSIFICATION	0.001421130610438412	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999985507084057	WITHOUT_CLASSIFICATION	1.4492915943825318E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999985507084057	WITHOUT_CLASSIFICATION	1.4492915943825318E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999985507084057	WITHOUT_CLASSIFICATION	1.4492915943825318E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.999998715726935	WITHOUT_CLASSIFICATION	1.2842730650144067E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999899430399736	WITHOUT_CLASSIFICATION	1.0056960026319315E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999999385870717	WITHOUT_CLASSIFICATION	6.141292835491095E-8	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999988200549087	WITHOUT_CLASSIFICATION	1.1799450913018746E-6	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999999304728165	WITHOUT_CLASSIFICATION	6.95271834035828E-8	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999936932781692	WITHOUT_CLASSIFICATION	6.306721830745526E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999999553254433	WITHOUT_CLASSIFICATION	4.467455670685502E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999984931506524	WITHOUT_CLASSIFICATION	1.506849347626294E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999988729519587	WITHOUT_CLASSIFICATION	1.1270480413433434E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999996655105764	WITHOUT_CLASSIFICATION	3.3448942363135337E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.999556476283121	WITHOUT_CLASSIFICATION	4.435237168789536E-4	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999992096060211	WITHOUT_CLASSIFICATION	7.903939788831566E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999995092618915	WITHOUT_CLASSIFICATION	4.907381084728482E-7	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999982681814953	WITHOUT_CLASSIFICATION	1.7318185047654038E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999970725832762	WITHOUT_CLASSIFICATION	2.927416723931574E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999991861590366	WITHOUT_CLASSIFICATION	8.138409633889404E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999791368353114	WITHOUT_CLASSIFICATION	2.08631646886854E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999997005872527	WITHOUT_CLASSIFICATION	2.9941274728412854E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999997005872527	WITHOUT_CLASSIFICATION	2.9941274728412854E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999997005872527	WITHOUT_CLASSIFICATION	2.9941274728412854E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999996855636902	WITHOUT_CLASSIFICATION	3.1443630980674476E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999996855636902	WITHOUT_CLASSIFICATION	3.1443630980674476E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999949990675551	WITHOUT_CLASSIFICATION	5.000932444959657E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9998980716279616	WITHOUT_CLASSIFICATION	1.0192837203833374E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999152635892407	WITHOUT_CLASSIFICATION	8.473641075943594E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999999562124822	WITHOUT_CLASSIFICATION	4.378751789552887E-8	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9998555815114294	WITHOUT_CLASSIFICATION	1.444184885704993E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9998555815114294	WITHOUT_CLASSIFICATION	1.444184885704993E-4	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999998701788774	WITHOUT_CLASSIFICATION	1.2982112260356752E-7	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999992135815565	WITHOUT_CLASSIFICATION	7.864184434512564E-7	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999996180260413	WITHOUT_CLASSIFICATION	3.8197395871684153E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999995080134046	WITHOUT_CLASSIFICATION	4.919865953032656E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999996120496112	WITHOUT_CLASSIFICATION	3.879503887970953E-7	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999992228047722	WITHOUT_CLASSIFICATION	7.771952278443979E-7	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999551278741248	WITHOUT_CLASSIFICATION	4.4872125875159085E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999915980232174	WITHOUT_CLASSIFICATION	8.401976782532486E-6	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999991158727192	WITHOUT_CLASSIFICATION	8.841272807556362E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999998591745094	WITHOUT_CLASSIFICATION	1.408254905787013E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999957629053142	WITHOUT_CLASSIFICATION	4.237094685800991E-6	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999997923913052	WITHOUT_CLASSIFICATION	2.0760869478443162E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999991861590366	WITHOUT_CLASSIFICATION	8.138409633889404E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998707889588	WITHOUT_CLASSIFICATION	1.2921104115684876E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999863303816764	WITHOUT_CLASSIFICATION	1.366961832361603E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999991861590366	WITHOUT_CLASSIFICATION	8.138409633889404E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999999562124822	WITHOUT_CLASSIFICATION	4.378751789552887E-8	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.999927723657231	WITHOUT_CLASSIFICATION	7.227634276895135E-5	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999995364310998	WITHOUT_CLASSIFICATION	4.635689000384195E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.999998887836105	WITHOUT_CLASSIFICATION	1.1121638949160545E-6	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.999998887836105	WITHOUT_CLASSIFICATION	1.1121638949160545E-6	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999630309712105	WITHOUT_CLASSIFICATION	3.696902878946183E-5	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999944610185512	WITHOUT_CLASSIFICATION	5.5389814487707384E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999992435173912	WITHOUT_CLASSIFICATION	7.564826088480487E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.999970626768496	WITHOUT_CLASSIFICATION	2.9373231504046894E-5	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999967943170375	WITHOUT_CLASSIFICATION	3.205682962573241E-6	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999973711468398	WITHOUT_CLASSIFICATION	2.628853160111907E-6	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999436926408364	WITHOUT_CLASSIFICATION	5.6307359163475004E-5	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999989553648643	WITHOUT_CLASSIFICATION	1.0446351357383864E-6	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999643781112	WITHOUT_CLASSIFICATION	3.5621888876460755E-8	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999951788585043	WITHOUT_CLASSIFICATION	4.821141495595795E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9991715043703145	WITHOUT_CLASSIFICATION	8.284956296854575E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999999832709957	WITHOUT_CLASSIFICATION	1.6729004293369148E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999998207696394	WITHOUT_CLASSIFICATION	1.7923036055863512E-7	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.999999994424682	WITHOUT_CLASSIFICATION	5.575317914500398E-9	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999996570998512	WITHOUT_CLASSIFICATION	3.4290014884386604E-7	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999998845691104	WITHOUT_CLASSIFICATION	1.1543088966944671E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999865840214871	WITHOUT_CLASSIFICATION	1.3415978512815455E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999998164652214	WITHOUT_CLASSIFICATION	1.8353477866417777E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999990155534428	WITHOUT_CLASSIFICATION	9.844465571294436E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999990155534428	WITHOUT_CLASSIFICATION	9.844465571294436E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999991861590366	WITHOUT_CLASSIFICATION	8.138409633889404E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999981965673121	WITHOUT_CLASSIFICATION	1.803432687749078E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999957629053142	WITHOUT_CLASSIFICATION	4.237094685800991E-6	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999968136174042	WITHOUT_CLASSIFICATION	3.186382595626318E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999998981354293	WITHOUT_CLASSIFICATION	1.0186457074068261E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999986131338723	WITHOUT_CLASSIFICATION	1.386866127707679E-6	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999994217779857	WITHOUT_CLASSIFICATION	5.782220142628878E-7	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9993375908710983	WITHOUT_CLASSIFICATION	6.624091289016725E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999957629053142	WITHOUT_CLASSIFICATION	4.237094685800991E-6	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999837302812263	WITHOUT_CLASSIFICATION	1.6269718773650052E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9996286343159855	WITHOUT_CLASSIFICATION	3.713656840145856E-4	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999940558688374	WITHOUT_CLASSIFICATION	5.944131162516242E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999996851433803	WITHOUT_CLASSIFICATION	3.1485661968925254E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999994424795914	WITHOUT_CLASSIFICATION	5.5752040869233E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999999645820592	WITHOUT_CLASSIFICATION	3.5417940750865115E-8	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999861278889752	WITHOUT_CLASSIFICATION	1.3872111024849887E-5	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999998804869811	WITHOUT_CLASSIFICATION	1.1951301898322224E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999896056324186	WITHOUT_CLASSIFICATION	1.0394367581415646E-5	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999986988246645	WITHOUT_CLASSIFICATION	1.301175335518956E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999928946414629	WITHOUT_CLASSIFICATION	7.105358537088627E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999928946414629	WITHOUT_CLASSIFICATION	7.105358537088627E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999942873206539	WITHOUT_CLASSIFICATION	5.7126793462146185E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9996834779612432	WITHOUT_CLASSIFICATION	3.1652203875678865E-4	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999995934607597	WITHOUT_CLASSIFICATION	4.065392402821304E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999982400631293	WITHOUT_CLASSIFICATION	1.7599368706235105E-6	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999982809171507	WITHOUT_CLASSIFICATION	1.7190828493467525E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999996866513953	WITHOUT_CLASSIFICATION	3.1334860466523766E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999954259913623	WITHOUT_CLASSIFICATION	4.574008637669541E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999999697268169	WITHOUT_CLASSIFICATION	3.0273183011890627E-8	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999433694138227	WITHOUT_CLASSIFICATION	5.663058617719225E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999936298357498	WITHOUT_CLASSIFICATION	6.37016425012029E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999972561825341	WITHOUT_CLASSIFICATION	2.7438174659517644E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999976927318353	WITHOUT_CLASSIFICATION	2.3072681648216576E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999976927318353	WITHOUT_CLASSIFICATION	2.3072681648216576E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999976927318353	WITHOUT_CLASSIFICATION	2.3072681648216576E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999976927318353	WITHOUT_CLASSIFICATION	2.3072681648216576E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999976927318353	WITHOUT_CLASSIFICATION	2.3072681648216576E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999976927318353	WITHOUT_CLASSIFICATION	2.3072681648216576E-6	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.99600148212884	WITHOUT_CLASSIFICATION	0.0039985178711600365	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999988070905298	WITHOUT_CLASSIFICATION	1.1929094701655275E-6	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999999531191536	WITHOUT_CLASSIFICATION	4.688084630601196E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999997616650725	WITHOUT_CLASSIFICATION	2.3833492737834537E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999975987851665	WITHOUT_CLASSIFICATION	2.401214833580224E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999993226960217	WITHOUT_CLASSIFICATION	6.773039783059509E-7	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999990648576169	WITHOUT_CLASSIFICATION	9.35142383131419E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999990329560499	WITHOUT_CLASSIFICATION	9.670439501132788E-7	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9994286344771355	WITHOUT_CLASSIFICATION	5.713655228644776E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.999998936080333	WITHOUT_CLASSIFICATION	1.0639196670253944E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999996367911572	WITHOUT_CLASSIFICATION	3.6320884288240437E-7	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999962938062079	WITHOUT_CLASSIFICATION	3.7061937921128948E-6	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999982809663822	WITHOUT_CLASSIFICATION	1.7190336177095968E-6	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999962416862888	WITHOUT_CLASSIFICATION	3.7583137113439644E-6	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.99999431155169	WITHOUT_CLASSIFICATION	5.688448309931777E-6	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999997899661927	WITHOUT_CLASSIFICATION	2.1003380730344114E-7	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999984963445745	WITHOUT_CLASSIFICATION	1.5036554255626496E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999988057055964	WITHOUT_CLASSIFICATION	1.1942944035856331E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999988057055964	WITHOUT_CLASSIFICATION	1.1942944035856331E-6	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999896566219755	WITHOUT_CLASSIFICATION	1.034337802462263E-5	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999989512101805	WITHOUT_CLASSIFICATION	1.0487898195173381E-6	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.99999863421642	WITHOUT_CLASSIFICATION	1.3657835800770102E-6	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999946422661234	WITHOUT_CLASSIFICATION	5.3577338765277185E-6	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999983030794548	WITHOUT_CLASSIFICATION	1.6969205451293255E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999934262905764	WITHOUT_CLASSIFICATION	6.573709423546258E-6	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999866438569086	WITHOUT_CLASSIFICATION	1.3356143091318683E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.999999719437422	WITHOUT_CLASSIFICATION	2.8056257789421506E-7	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999973966839446	WITHOUT_CLASSIFICATION	2.6033160554776093E-6	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999987804429405	WITHOUT_CLASSIFICATION	1.2195570593878777E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999996934864418	WITHOUT_CLASSIFICATION	3.065135581722436E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999930355473	WITHOUT_CLASSIFICATION	6.964452669598248E-9	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999995901343669	WITHOUT_CLASSIFICATION	4.0986563308400284E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999673799038	WITHOUT_CLASSIFICATION	3.262009623721251E-8	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999997566905832	WITHOUT_CLASSIFICATION	2.433094169365821E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999999559219402	WITHOUT_CLASSIFICATION	4.4078059730426535E-8	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999981991089263	WITHOUT_CLASSIFICATION	1.8008910735894273E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999979379617008	WITHOUT_CLASSIFICATION	2.0620382992457747E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.999999932165678	WITHOUT_CLASSIFICATION	6.783432206843255E-8	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999992552968605	WITHOUT_CLASSIFICATION	7.447031394781679E-7	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.99992821962969	WITHOUT_CLASSIFICATION	7.178037031000462E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999940254655125	WITHOUT_CLASSIFICATION	5.97453448744932E-6	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999953080236813	WITHOUT_CLASSIFICATION	4.691976318759274E-6	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999956226740379	WITHOUT_CLASSIFICATION	4.37732596223389E-6	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999973147173545	WITHOUT_CLASSIFICATION	2.6852826454902334E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999976915601524	WITHOUT_CLASSIFICATION	2.3084398476188715E-6	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999888264541426	WITHOUT_CLASSIFICATION	1.1173545857399713E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999998699314062	WITHOUT_CLASSIFICATION	1.3006859376092435E-7	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.999999872576849	WITHOUT_CLASSIFICATION	1.27423151022198E-7	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999935632154731	WITHOUT_CLASSIFICATION	6.436784526951983E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9990852582093089	WITHOUT_CLASSIFICATION	9.14741790691093E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999963036183244	WITHOUT_CLASSIFICATION	3.6963816756698345E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999978785212859	WITHOUT_CLASSIFICATION	2.1214787140660038E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999997829632457	WITHOUT_CLASSIFICATION	2.170367542828942E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999757993319596	WITHOUT_CLASSIFICATION	2.420066804037386E-5	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999960337238462	WITHOUT_CLASSIFICATION	3.966276153915233E-6	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999964616804964	WITHOUT_CLASSIFICATION	3.538319503680565E-6	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999966730119406	WITHOUT_CLASSIFICATION	3.3269880593628406E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999951392347154	WITHOUT_CLASSIFICATION	4.860765284658272E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999951392347154	WITHOUT_CLASSIFICATION	4.860765284658272E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999927334706313	WITHOUT_CLASSIFICATION	7.266529368576154E-6	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999968259383897	WITHOUT_CLASSIFICATION	3.174061610370458E-6	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999963986500198	WITHOUT_CLASSIFICATION	3.6013499803012737E-6	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999970779495994	WITHOUT_CLASSIFICATION	2.9220504005812713E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999998078682546	WITHOUT_CLASSIFICATION	1.9213174549533004E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.999998771627263	WITHOUT_CLASSIFICATION	1.2283727370085271E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999516788052614	WITHOUT_CLASSIFICATION	4.8321194738735134E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9952968665196487	WITHOUT_CLASSIFICATION	0.004703133480351282	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999874386749172	WITHOUT_CLASSIFICATION	1.2561325082790702E-5	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999945831320923	WITHOUT_CLASSIFICATION	5.416867907724974E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999941544020291	WITHOUT_CLASSIFICATION	5.845597970893581E-6	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999939105366377	WITHOUT_CLASSIFICATION	6.0894633624289694E-6	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999923916650879	WITHOUT_CLASSIFICATION	7.608334912087709E-6	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999937156297702	WITHOUT_CLASSIFICATION	6.284370229732839E-6	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9980547908338842	WITHOUT_CLASSIFICATION	0.0019452091661158423	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999816337657704	WITHOUT_CLASSIFICATION	1.8366234229626986E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999987657453332	WITHOUT_CLASSIFICATION	1.234254666806548E-6	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999990515852949	WITHOUT_CLASSIFICATION	9.484147052149408E-7	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9998306694509379	WITHOUT_CLASSIFICATION	1.6933054906201594E-4	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999987626275122	WITHOUT_CLASSIFICATION	1.2373724878248386E-6	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999985682684	WITHOUT_CLASSIFICATION	1.4317316000154686E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.999994796446969	WITHOUT_CLASSIFICATION	5.203553031023923E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999994970178104	WITHOUT_CLASSIFICATION	5.029821895455147E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9952968665196487	WITHOUT_CLASSIFICATION	0.004703133480351282	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999992760412523	WITHOUT_CLASSIFICATION	7.239587477855179E-7	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999992760412523	WITHOUT_CLASSIFICATION	7.239587477855179E-7	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999994970178104	WITHOUT_CLASSIFICATION	5.029821895455147E-7	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999912970604921	WITHOUT_CLASSIFICATION	8.702939507923328E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999906078283	WITHOUT_CLASSIFICATION	9.392171640021978E-9	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999999881096326	WITHOUT_CLASSIFICATION	1.1890367352143948E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.99995615761004	WITHOUT_CLASSIFICATION	4.384238996014472E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999993104813342	WITHOUT_CLASSIFICATION	6.895186658703546E-7	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.999340122524154	WITHOUT_CLASSIFICATION	6.598774758459761E-4	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999988678549173	WITHOUT_CLASSIFICATION	1.1321450827216172E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999986822909104	WITHOUT_CLASSIFICATION	1.3177090896858946E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999959371188897	WITHOUT_CLASSIFICATION	4.0628811103143856E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998619812608	WITHOUT_CLASSIFICATION	1.380187392048502E-7	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999998477308477	WITHOUT_CLASSIFICATION	1.52269152347209E-7	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999983955310278	WITHOUT_CLASSIFICATION	1.6044689723327575E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999989878246116	WITHOUT_CLASSIFICATION	1.0121753883542803E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999989878246116	WITHOUT_CLASSIFICATION	1.0121753883542803E-6	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999852342283709	WITHOUT_CLASSIFICATION	1.4765771629103917E-5	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999981739229141	WITHOUT_CLASSIFICATION	1.8260770859046026E-6	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999997349921682	WITHOUT_CLASSIFICATION	2.6500783173370786E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999951683270133	WITHOUT_CLASSIFICATION	4.831672986627448E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999951683270133	WITHOUT_CLASSIFICATION	4.831672986627448E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999995851784922	WITHOUT_CLASSIFICATION	4.148215078415703E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999995851784922	WITHOUT_CLASSIFICATION	4.148215078415703E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999998116011979	WITHOUT_CLASSIFICATION	1.8839880204289546E-7	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999996596915879	WITHOUT_CLASSIFICATION	3.403084121549329E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999994239582738	WITHOUT_CLASSIFICATION	5.760417262356013E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999999589422295	WITHOUT_CLASSIFICATION	4.1057770486822857E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999988652960018	WITHOUT_CLASSIFICATION	1.1347039982411073E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999967809754374	WITHOUT_CLASSIFICATION	3.2190245625501055E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999947461119351	WITHOUT_CLASSIFICATION	5.2538880648720896E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999998116011979	WITHOUT_CLASSIFICATION	1.8839880204289546E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9978701419567314	WITHOUT_CLASSIFICATION	0.002129858043268538	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999996596915879	WITHOUT_CLASSIFICATION	3.403084121549329E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999996017243773	WITHOUT_CLASSIFICATION	3.98275622629211E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999994239582738	WITHOUT_CLASSIFICATION	5.760417262356013E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999999589422295	WITHOUT_CLASSIFICATION	4.1057770486822857E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999988652960018	WITHOUT_CLASSIFICATION	1.1347039982411073E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999991479412955	WITHOUT_CLASSIFICATION	8.52058704377472E-7	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999975463330701	WITHOUT_CLASSIFICATION	2.45366692983163E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999174671195	WITHOUT_CLASSIFICATION	8.253288045785024E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999998049143292	WITHOUT_CLASSIFICATION	1.95085670743587E-7	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999999864669735	WITHOUT_CLASSIFICATION	1.3533026566319907E-8	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999986484051391	WITHOUT_CLASSIFICATION	1.3515948609564022E-6	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999973831947013	WITHOUT_CLASSIFICATION	2.6168052987909666E-6	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999953999652936	WITHOUT_CLASSIFICATION	4.600034706376769E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999988690958718	WITHOUT_CLASSIFICATION	1.1309041282016754E-6	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999976537133314	WITHOUT_CLASSIFICATION	2.3462866686968466E-6	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999939488247266	WITHOUT_CLASSIFICATION	6.051175273365399E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999886455529334	WITHOUT_CLASSIFICATION	1.1354447066483543E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999996913123379	WITHOUT_CLASSIFICATION	3.0868766205845743E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999991355388143	WITHOUT_CLASSIFICATION	8.644611858748469E-7	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999997755860593	WITHOUT_CLASSIFICATION	2.2441394059977011E-7	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999992054527544	WITHOUT_CLASSIFICATION	7.945472455326585E-7	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999937818230024	WITHOUT_CLASSIFICATION	6.21817699771385E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999990630078508	WITHOUT_CLASSIFICATION	9.369921491595979E-7	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999991769799945	WITHOUT_CLASSIFICATION	8.230200055853991E-7	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999979834118548	WITHOUT_CLASSIFICATION	2.016588145291308E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999973925823653	WITHOUT_CLASSIFICATION	2.607417634808606E-6	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999992804292906	WITHOUT_CLASSIFICATION	7.195707093345358E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999988298435865	WITHOUT_CLASSIFICATION	1.1701564135416022E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999994405547085	WITHOUT_CLASSIFICATION	5.594452915300129E-7	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.999998575221238	WITHOUT_CLASSIFICATION	1.4247787619319874E-6	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999990442684851	WITHOUT_CLASSIFICATION	9.557315148510743E-7	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999983935934759	WITHOUT_CLASSIFICATION	1.606406524043395E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999977978926506	WITHOUT_CLASSIFICATION	2.2021073494492044E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999527395986378	WITHOUT_CLASSIFICATION	4.7260401362093224E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999938497168956	WITHOUT_CLASSIFICATION	6.150283104269483E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999993104813342	WITHOUT_CLASSIFICATION	6.895186658703546E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999979569176762	WITHOUT_CLASSIFICATION	2.0430823237090482E-6	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999997604112874	WITHOUT_CLASSIFICATION	2.3958871261350684E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999995729663776	WITHOUT_CLASSIFICATION	4.270336223340934E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999998937599414	WITHOUT_CLASSIFICATION	1.0624005865961988E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999976124400157	WITHOUT_CLASSIFICATION	2.387559984190028E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999949802106529	WITHOUT_CLASSIFICATION	5.019789347048045E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999722089999411	WITHOUT_CLASSIFICATION	2.779100005878579E-5	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999916432322	WITHOUT_CLASSIFICATION	8.356767836754747E-9	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999894159834053	WITHOUT_CLASSIFICATION	1.0584016594676844E-5	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999633979844379	WITHOUT_CLASSIFICATION	3.660201556203378E-5	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999997190961999	WITHOUT_CLASSIFICATION	2.809038000950848E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999331940393	WITHOUT_CLASSIFICATION	6.68059606414449E-8	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999999886225636	WITHOUT_CLASSIFICATION	1.1377436416569587E-8	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999997845260107	WITHOUT_CLASSIFICATION	2.1547398942512451E-7	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9974743980323781	WITHOUT_CLASSIFICATION	0.0025256019676218413	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999993007428	WITHOUT_CLASSIFICATION	6.992571948330069E-10	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999993486905181	WITHOUT_CLASSIFICATION	6.513094819474941E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999886455529334	WITHOUT_CLASSIFICATION	1.1354447066483543E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999996913123379	WITHOUT_CLASSIFICATION	3.0868766205845743E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999991355388143	WITHOUT_CLASSIFICATION	8.644611858748469E-7	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999997755860593	WITHOUT_CLASSIFICATION	2.2441394059977011E-7	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999992054527544	WITHOUT_CLASSIFICATION	7.945472455326585E-7	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999937818230024	WITHOUT_CLASSIFICATION	6.21817699771385E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999989623820604	WITHOUT_CLASSIFICATION	1.0376179395290364E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999990630078508	WITHOUT_CLASSIFICATION	9.369921491595979E-7	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999977978926506	WITHOUT_CLASSIFICATION	2.2021073494492044E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999527395986378	WITHOUT_CLASSIFICATION	4.7260401362093224E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999938497168956	WITHOUT_CLASSIFICATION	6.150283104269483E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999618471981777	WITHOUT_CLASSIFICATION	3.815280182215876E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999618471981777	WITHOUT_CLASSIFICATION	3.815280182215876E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999979569176762	WITHOUT_CLASSIFICATION	2.0430823237090482E-6	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999997604112874	WITHOUT_CLASSIFICATION	2.3958871261350684E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999995729663776	WITHOUT_CLASSIFICATION	4.270336223340934E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999972591042893	WITHOUT_CLASSIFICATION	2.7408957107375838E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999985430747799	WITHOUT_CLASSIFICATION	1.4569252201969906E-6	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999937482927014	WITHOUT_CLASSIFICATION	6.251707298565137E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.999999781080308	WITHOUT_CLASSIFICATION	2.1891969208357147E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999996615375764	WITHOUT_CLASSIFICATION	3.384624236682991E-7	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999730219014101	WITHOUT_CLASSIFICATION	2.6978098589883726E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999988717728269	WITHOUT_CLASSIFICATION	1.1282271731422349E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999820495101277	WITHOUT_CLASSIFICATION	1.795048987227093E-5	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999243509280967	WITHOUT_CLASSIFICATION	7.564907190325511E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999947060616747	WITHOUT_CLASSIFICATION	5.293938325259071E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999987519212762	WITHOUT_CLASSIFICATION	1.2480787237860364E-6	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999999426471616	WITHOUT_CLASSIFICATION	5.7352838221200774E-8	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999998397161189	WITHOUT_CLASSIFICATION	1.6028388100929433E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9945200882669047	WITHOUT_CLASSIFICATION	0.005479911733095193	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999987954080474	WITHOUT_CLASSIFICATION	1.2045919526483274E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999680218087	WITHOUT_CLASSIFICATION	3.197819127921128E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999958806596	WITHOUT_CLASSIFICATION	4.119340510684909E-9	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999993490856351	WITHOUT_CLASSIFICATION	6.509143648467511E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999976598350837	WITHOUT_CLASSIFICATION	2.3401649163583295E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999991950041469	WITHOUT_CLASSIFICATION	8.049958530382265E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.999950730509261	WITHOUT_CLASSIFICATION	4.926949073898043E-5	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999992424415608	WITHOUT_CLASSIFICATION	7.575584392536456E-7	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999791387410923	WITHOUT_CLASSIFICATION	2.086125890769278E-5	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999996495714407	WITHOUT_CLASSIFICATION	3.5042855920604337E-7	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999547671043	WITHOUT_CLASSIFICATION	4.523289558758491E-8	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9997987489047672	WITHOUT_CLASSIFICATION	2.012510952328944E-4	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999997513594308	WITHOUT_CLASSIFICATION	2.4864056916122937E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999987097697817	WITHOUT_CLASSIFICATION	1.2902302182704312E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9390853396711412	WITHOUT_CLASSIFICATION	0.06091466032885885	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999978267612992	WITHOUT_CLASSIFICATION	2.1732387007576146E-6	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999956093921787	WITHOUT_CLASSIFICATION	4.390607821327707E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999796173354	WITHOUT_CLASSIFICATION	2.0382664549634382E-8	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999421595665466	WITHOUT_CLASSIFICATION	5.784043345339169E-5	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999985197149704	WITHOUT_CLASSIFICATION	1.4802850296239982E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999996017243773	WITHOUT_CLASSIFICATION	3.98275622629211E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999997959422928	WITHOUT_CLASSIFICATION	2.0405770706382789E-7	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999934050561824	WITHOUT_CLASSIFICATION	6.5949438175295576E-6	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999998755024404	WITHOUT_CLASSIFICATION	1.2449755958591987E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999533147324874	WITHOUT_CLASSIFICATION	4.6685267512574813E-5	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9997422013259886	WITHOUT_CLASSIFICATION	2.5779867401138127E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999987376101109	WITHOUT_CLASSIFICATION	1.2623898889935687E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999996074389982	WITHOUT_CLASSIFICATION	3.925610019086999E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999833078922	WITHOUT_CLASSIFICATION	1.6692107838077155E-8	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999994455766793	WITHOUT_CLASSIFICATION	5.544233206136946E-7	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999915048026352	WITHOUT_CLASSIFICATION	8.495197364698016E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9997423974292386	WITHOUT_CLASSIFICATION	2.576025707614324E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9997423974292386	WITHOUT_CLASSIFICATION	2.576025707614324E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.99999937674353	WITHOUT_CLASSIFICATION	6.232564699645618E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999905979058427	WITHOUT_CLASSIFICATION	9.402094157335946E-6	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999997550423286	WITHOUT_CLASSIFICATION	2.4495767140714276E-7	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9998034811445498	WITHOUT_CLASSIFICATION	1.9651885545016488E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999899049104201	WITHOUT_CLASSIFICATION	1.0095089580004846E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999693609566	WITHOUT_CLASSIFICATION	3.063904343121343E-8	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999693609566	WITHOUT_CLASSIFICATION	3.063904343121343E-8	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999693609566	WITHOUT_CLASSIFICATION	3.063904343121343E-8	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999999974339115	WITHOUT_CLASSIFICATION	2.566088485084241E-9	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999975298361805	WITHOUT_CLASSIFICATION	2.470163819527208E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999922333869516	WITHOUT_CLASSIFICATION	7.766613048319111E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999975340568	WITHOUT_CLASSIFICATION	2.4659431363725833E-9	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999979031386574	WITHOUT_CLASSIFICATION	2.096861342493848E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999778877980978	WITHOUT_CLASSIFICATION	2.2112201902132387E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999855717541404	WITHOUT_CLASSIFICATION	1.442824585965567E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999855717541404	WITHOUT_CLASSIFICATION	1.442824585965567E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999982984272934	WITHOUT_CLASSIFICATION	1.7015727066408162E-6	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999804800085264	WITHOUT_CLASSIFICATION	1.9519991473541272E-5	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.999999785980294	WITHOUT_CLASSIFICATION	2.140197059295449E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999989556181138	WITHOUT_CLASSIFICATION	1.044381886185423E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999930018319569	WITHOUT_CLASSIFICATION	6.998168043082026E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9998837936563536	WITHOUT_CLASSIFICATION	1.162063436464743E-4	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999181035981565	WITHOUT_CLASSIFICATION	8.18964018434984E-5	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999996868005069	WITHOUT_CLASSIFICATION	3.131994930671713E-7	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999808438460972	WITHOUT_CLASSIFICATION	1.9156153902837378E-5	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999817099299	WITHOUT_CLASSIFICATION	1.8290070066418364E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998431073794	WITHOUT_CLASSIFICATION	1.5689262045630594E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998431073794	WITHOUT_CLASSIFICATION	1.5689262045630594E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998431073794	WITHOUT_CLASSIFICATION	1.5689262045630594E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998431073794	WITHOUT_CLASSIFICATION	1.5689262045630594E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999998431073794	WITHOUT_CLASSIFICATION	1.5689262045630594E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999514451696613	WITHOUT_CLASSIFICATION	4.855483033877647E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999514451696613	WITHOUT_CLASSIFICATION	4.855483033877647E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999514451696613	WITHOUT_CLASSIFICATION	4.855483033877647E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999514451696613	WITHOUT_CLASSIFICATION	4.855483033877647E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999999307577417	WITHOUT_CLASSIFICATION	6.92422582601413E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999198272778	WITHOUT_CLASSIFICATION	8.017272221826904E-8	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9944592280755963	WITHOUT_CLASSIFICATION	0.0055407719244037175	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999998465068719	WITHOUT_CLASSIFICATION	1.5349312814866225E-7	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999993670609019	WITHOUT_CLASSIFICATION	6.329390982310824E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999899328262134	WITHOUT_CLASSIFICATION	1.0067173786571866E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999840947711589	WITHOUT_CLASSIFICATION	1.590522884116406E-5	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999997607402964	WITHOUT_CLASSIFICATION	2.3925970352948487E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999992608465595	WITHOUT_CLASSIFICATION	7.391534403697801E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999999044209615	WITHOUT_CLASSIFICATION	9.557903840536299E-8	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999935416900708	WITHOUT_CLASSIFICATION	6.458309929092566E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999957755544064	WITHOUT_CLASSIFICATION	4.2244455934858795E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999999103804055	WITHOUT_CLASSIFICATION	8.961959446304929E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999888968396	WITHOUT_CLASSIFICATION	1.1103160398594863E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999888968396	WITHOUT_CLASSIFICATION	1.1103160398594863E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999888968396	WITHOUT_CLASSIFICATION	1.1103160398594863E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999850779006288	WITHOUT_CLASSIFICATION	1.4922099371097612E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999850779006288	WITHOUT_CLASSIFICATION	1.4922099371097612E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999217924832	WITHOUT_CLASSIFICATION	7.820751679683534E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.999999985967335	WITHOUT_CLASSIFICATION	1.4032664983045363E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999999987532496	WITHOUT_CLASSIFICATION	1.2467503310354123E-9	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999996423980387	WITHOUT_CLASSIFICATION	3.5760196131319466E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999996423980387	WITHOUT_CLASSIFICATION	3.5760196131319466E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999996423980387	WITHOUT_CLASSIFICATION	3.5760196131319466E-7	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999999577035218	WITHOUT_CLASSIFICATION	4.229647829562024E-8	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9998627647995604	WITHOUT_CLASSIFICATION	1.3723520043967374E-4	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999999175964822	WITHOUT_CLASSIFICATION	8.240351775510841E-8	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999996320911094	WITHOUT_CLASSIFICATION	3.6790889053742855E-7	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.999462297032627	WITHOUT_CLASSIFICATION	5.377029673729488E-4	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.999966237712789	WITHOUT_CLASSIFICATION	3.376228721089179E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999899706570938	WITHOUT_CLASSIFICATION	1.0029342906196503E-5	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.999999995832314	WITHOUT_CLASSIFICATION	4.167685984941944E-9	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9998756696217471	WITHOUT_CLASSIFICATION	1.2433037825291984E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997873418365938	WITHOUT_CLASSIFICATION	2.1265816340612794E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997873418365938	WITHOUT_CLASSIFICATION	2.1265816340612794E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9919454961571855	WITHOUT_CLASSIFICATION	0.008054503842814534	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.999991781630982	WITHOUT_CLASSIFICATION	8.21836901796924E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998041807963	WITHOUT_CLASSIFICATION	1.95819203738268E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998041807963	WITHOUT_CLASSIFICATION	1.95819203738268E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998041807963	WITHOUT_CLASSIFICATION	1.95819203738268E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998041807963	WITHOUT_CLASSIFICATION	1.95819203738268E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998041807963	WITHOUT_CLASSIFICATION	1.95819203738268E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999996715061227	WITHOUT_CLASSIFICATION	3.284938772720208E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9999435800148473	WITHOUT_CLASSIFICATION	5.641998515266333E-5	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999999767119682	WITHOUT_CLASSIFICATION	2.3288031808183625E-8	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999998933995353	WITHOUT_CLASSIFICATION	1.0660046460205482E-7	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999984189733605	WITHOUT_CLASSIFICATION	1.5810266395017994E-6	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999998051437012	WITHOUT_CLASSIFICATION	1.9485629880602089E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999867079740158	WITHOUT_CLASSIFICATION	1.3292025984182004E-5	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999960329109	WITHOUT_CLASSIFICATION	3.9670891092230245E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999482286467715	WITHOUT_CLASSIFICATION	5.1771353228430436E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999482286467715	WITHOUT_CLASSIFICATION	5.1771353228430436E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9949029668806436	WITHOUT_CLASSIFICATION	0.005097033119356415	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999986512038903	WITHOUT_CLASSIFICATION	1.348796109692061E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999805596858435	WITHOUT_CLASSIFICATION	1.944031415639276E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999805596858435	WITHOUT_CLASSIFICATION	1.944031415639276E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999985785186983	WITHOUT_CLASSIFICATION	1.4214813016921044E-6	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999926979356524	WITHOUT_CLASSIFICATION	7.302064347589423E-6	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999135956460659	WITHOUT_CLASSIFICATION	8.640435393423227E-5	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999939369563988	WITHOUT_CLASSIFICATION	6.063043601146641E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999986455182872	WITHOUT_CLASSIFICATION	1.3544817127426514E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999978070373167	WITHOUT_CLASSIFICATION	2.1929626833672848E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998345678334	WITHOUT_CLASSIFICATION	1.654321665812921E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999552962561044	WITHOUT_CLASSIFICATION	4.4703743895722666E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999938580012173	WITHOUT_CLASSIFICATION	6.14199878268736E-6	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999897527276	WITHOUT_CLASSIFICATION	1.0247272364614267E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999996262510067	WITHOUT_CLASSIFICATION	3.737489933306921E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999996262510067	WITHOUT_CLASSIFICATION	3.737489933306921E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999996262510067	WITHOUT_CLASSIFICATION	3.737489933306921E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999996262510067	WITHOUT_CLASSIFICATION	3.737489933306921E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999964295768373	WITHOUT_CLASSIFICATION	3.5704231627127512E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999997978734967	WITHOUT_CLASSIFICATION	2.0212650325682237E-7	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999968755375884	WITHOUT_CLASSIFICATION	3.1244624115177053E-6	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989062601873	WITHOUT_CLASSIFICATION	1.0937398126518327E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999998465915787	WITHOUT_CLASSIFICATION	1.534084213905674E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9982881240167056	WITHOUT_CLASSIFICATION	0.001711875983294408	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999995456849983	WITHOUT_CLASSIFICATION	4.5431500175970515E-7	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.999997863352883	WITHOUT_CLASSIFICATION	2.1366471170356666E-6	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999999720314539	WITHOUT_CLASSIFICATION	2.796854612132305E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999998171977394	WITHOUT_CLASSIFICATION	1.8280226066973811E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999999794246547	WITHOUT_CLASSIFICATION	2.057534531764333E-8	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999990176925	WITHOUT_CLASSIFICATION	9.82307510331508E-10	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999987134191276	WITHOUT_CLASSIFICATION	1.2865808723866354E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999987134191276	WITHOUT_CLASSIFICATION	1.2865808723866354E-5	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999424298424	WITHOUT_CLASSIFICATION	5.757015763648926E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999992836861474	WITHOUT_CLASSIFICATION	7.163138526791798E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9770521918475851	WITHOUT_CLASSIFICATION	0.02294780815241495	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999861661409026	WITHOUT_CLASSIFICATION	1.3833859097260486E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999171512845538	WITHOUT_CLASSIFICATION	8.284871544618213E-5	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9997096423782248	WITHOUT_CLASSIFICATION	2.9035762177522407E-4	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999977035467001	WITHOUT_CLASSIFICATION	2.296453299888866E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999895695490105	WITHOUT_CLASSIFICATION	1.0430450989541002E-5	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999985293883186	WITHOUT_CLASSIFICATION	1.4706116813758119E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999983474221408	WITHOUT_CLASSIFICATION	1.6525778592104575E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999991595159229	WITHOUT_CLASSIFICATION	8.404840771750252E-7	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999994092141121	WITHOUT_CLASSIFICATION	5.90785887805798E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999996494630815	WITHOUT_CLASSIFICATION	3.5053691847204824E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999671095962736	WITHOUT_CLASSIFICATION	3.289040372648254E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999671095962736	WITHOUT_CLASSIFICATION	3.289040372648254E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999997897586199	WITHOUT_CLASSIFICATION	2.1024138003061072E-7	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999979558591063	WITHOUT_CLASSIFICATION	2.044140893748736E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.999955833319989	WITHOUT_CLASSIFICATION	4.41666800109577E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999999372514081	WITHOUT_CLASSIFICATION	6.274859189526007E-8	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999924830116511	WITHOUT_CLASSIFICATION	7.516988348880738E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999797298346188	WITHOUT_CLASSIFICATION	2.0270165381248915E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997911745344	WITHOUT_CLASSIFICATION	2.0882546558403166E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999994199376095	WITHOUT_CLASSIFICATION	5.800623904683874E-7	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999981335177579	WITHOUT_CLASSIFICATION	1.8664822420644664E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999725482307	WITHOUT_CLASSIFICATION	2.7451769356638553E-8	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999487981857716	WITHOUT_CLASSIFICATION	5.120181422824172E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999398577156	WITHOUT_CLASSIFICATION	6.014228433940954E-8	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999999398577156	WITHOUT_CLASSIFICATION	6.014228433940954E-8	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999997069884377	WITHOUT_CLASSIFICATION	2.9301156236989765E-7	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999992231063	WITHOUT_CLASSIFICATION	7.76893708862342E-10	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999998417411995	WITHOUT_CLASSIFICATION	1.5825880043703803E-7	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999997882529428	WITHOUT_CLASSIFICATION	2.1174705728052788E-7	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999956020663343	WITHOUT_CLASSIFICATION	4.397933665688647E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999997531496667	WITHOUT_CLASSIFICATION	2.468503333567625E-7	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999997958462697	WITHOUT_CLASSIFICATION	2.0415373031951524E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999996470069428	WITHOUT_CLASSIFICATION	3.529930572454256E-7	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999976763222278	WITHOUT_CLASSIFICATION	2.32367777214714E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999995780482585	WITHOUT_CLASSIFICATION	4.2195174152165753E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999539152762	WITHOUT_CLASSIFICATION	4.608472374518465E-8	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999265778717	WITHOUT_CLASSIFICATION	7.342212836537041E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999995168147637	WITHOUT_CLASSIFICATION	4.831852363001922E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999989888604918	WITHOUT_CLASSIFICATION	1.011139508234146E-6	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999992662337941	WITHOUT_CLASSIFICATION	7.337662057893922E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999994655346931	WITHOUT_CLASSIFICATION	5.344653069131357E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999998694841117	WITHOUT_CLASSIFICATION	1.3051588829366722E-7	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.999994770827808	WITHOUT_CLASSIFICATION	5.229172192027368E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999999305715978	WITHOUT_CLASSIFICATION	6.942840219337461E-8	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999898404714632	WITHOUT_CLASSIFICATION	1.0159528536819146E-5	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999999411568606	WITHOUT_CLASSIFICATION	5.8843139219511454E-8	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999996004217319	WITHOUT_CLASSIFICATION	3.995782681681022E-7	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999780422456008	WITHOUT_CLASSIFICATION	2.195775439916785E-5	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999417656613	WITHOUT_CLASSIFICATION	5.823433862802957E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999824070393594	WITHOUT_CLASSIFICATION	1.759296064062967E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9985557598456919	WITHOUT_CLASSIFICATION	0.0014442401543081202	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999999080141905	WITHOUT_CLASSIFICATION	9.198580951566464E-8	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.999999438510557	WITHOUT_CLASSIFICATION	5.61489443039253E-7	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999998898976051	WITHOUT_CLASSIFICATION	1.1010239497977373E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999928496347289	WITHOUT_CLASSIFICATION	7.150365271115617E-6	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999991777974159	WITHOUT_CLASSIFICATION	8.222025841094849E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998372934876	WITHOUT_CLASSIFICATION	1.6270651245701952E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998372934876	WITHOUT_CLASSIFICATION	1.6270651245701952E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998372934876	WITHOUT_CLASSIFICATION	1.6270651245701952E-7	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999475603736	WITHOUT_CLASSIFICATION	5.2439626442321444E-8	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999769967360479	WITHOUT_CLASSIFICATION	2.3003263952166107E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999997567472978	WITHOUT_CLASSIFICATION	2.432527022183285E-7	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999998780183663	WITHOUT_CLASSIFICATION	1.2198163360718808E-7	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999829291727302	WITHOUT_CLASSIFICATION	1.7070827269739597E-5	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9904160492055507	WITHOUT_CLASSIFICATION	0.009583950794449366	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999992667453804	WITHOUT_CLASSIFICATION	7.33254619645411E-7	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999994403322221	WITHOUT_CLASSIFICATION	5.596677778244614E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995950617503	WITHOUT_CLASSIFICATION	4.049382497665385E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995950617503	WITHOUT_CLASSIFICATION	4.049382497665385E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995950617503	WITHOUT_CLASSIFICATION	4.049382497665385E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999997399519893	WITHOUT_CLASSIFICATION	2.600480106632825E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999974165729402	WITHOUT_CLASSIFICATION	2.5834270598716724E-6	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999999887732341	WITHOUT_CLASSIFICATION	1.1226765806279396E-8	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.999998048385583	WITHOUT_CLASSIFICATION	1.9516144169440367E-6	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999745702610137	WITHOUT_CLASSIFICATION	2.5429738986311278E-5	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999149182062516	WITHOUT_CLASSIFICATION	8.508179374849065E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999897357663496	WITHOUT_CLASSIFICATION	1.0264233650414963E-5	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999997339436778	WITHOUT_CLASSIFICATION	2.660563221814853E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999617446581	WITHOUT_CLASSIFICATION	3.825534192755436E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999989736988745	WITHOUT_CLASSIFICATION	1.02630112550295E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998235053096	WITHOUT_CLASSIFICATION	1.7649469036474944E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999958806596	WITHOUT_CLASSIFICATION	4.119340510684909E-9	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999958806596	WITHOUT_CLASSIFICATION	4.119340510684909E-9	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999932136169	WITHOUT_CLASSIFICATION	6.786383117910633E-9	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9263556254904471	WITHOUT_CLASSIFICATION	0.07364437450955287	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999966480310154	WITHOUT_CLASSIFICATION	3.351968984631352E-6	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999743271888494	WITHOUT_CLASSIFICATION	2.5672811150703952E-5	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999719482639914	WITHOUT_CLASSIFICATION	2.805173600855247E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999995458509713	WITHOUT_CLASSIFICATION	4.541490288213839E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999326863256	WITHOUT_CLASSIFICATION	6.731367436853687E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999326863256	WITHOUT_CLASSIFICATION	6.731367436853687E-8	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999989864621927	WITHOUT_CLASSIFICATION	1.0135378073578906E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999973053877295	WITHOUT_CLASSIFICATION	2.6946122704574124E-6	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999981993547089	WITHOUT_CLASSIFICATION	1.8006452911673784E-6	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999996617935005	WITHOUT_CLASSIFICATION	3.382064995031671E-7	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999258794632772	WITHOUT_CLASSIFICATION	7.412053672280056E-5	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9995687514787778	WITHOUT_CLASSIFICATION	4.312485212222544E-4	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999990060374854	WITHOUT_CLASSIFICATION	9.93962514631495E-7	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999672065852823	WITHOUT_CLASSIFICATION	3.27934147177694E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999999033477533	WITHOUT_CLASSIFICATION	9.665224658541715E-8	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999996757451513	WITHOUT_CLASSIFICATION	3.242548487427961E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999997565216806	WITHOUT_CLASSIFICATION	2.434783194018847E-7	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9997359190686804	WITHOUT_CLASSIFICATION	2.6408093131966037E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999998059071641	WITHOUT_CLASSIFICATION	1.940928358898279E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999967382725156	WITHOUT_CLASSIFICATION	3.2617274844060017E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999967382725156	WITHOUT_CLASSIFICATION	3.2617274844060017E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999967382725156	WITHOUT_CLASSIFICATION	3.2617274844060017E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999967382725156	WITHOUT_CLASSIFICATION	3.2617274844060017E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999997610074426	WITHOUT_CLASSIFICATION	2.389925573885272E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9997987684236157	WITHOUT_CLASSIFICATION	2.0123157638436123E-4	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.7764487380514876	WITHOUT_CLASSIFICATION	0.2235512619485123	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999965477884517	WITHOUT_CLASSIFICATION	3.4522115483303934E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999980261380795	WITHOUT_CLASSIFICATION	1.9738619204305543E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998321922083	WITHOUT_CLASSIFICATION	1.6780779159099892E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999909705327	WITHOUT_CLASSIFICATION	9.029467286138993E-9	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999947578145036	WITHOUT_CLASSIFICATION	5.242185496347211E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981028707062	WITHOUT_CLASSIFICATION	1.8971292937939183E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999870765791553	WITHOUT_CLASSIFICATION	1.2923420844573313E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999938006212509	WITHOUT_CLASSIFICATION	6.199378749218024E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999938006212509	WITHOUT_CLASSIFICATION	6.199378749218024E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999938006212509	WITHOUT_CLASSIFICATION	6.199378749218024E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999870122766736	WITHOUT_CLASSIFICATION	1.298772332632922E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999901371682322	WITHOUT_CLASSIFICATION	9.862831767953861E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930361139605	WITHOUT_CLASSIFICATION	6.963886039500687E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999981331440576	WITHOUT_CLASSIFICATION	1.8668559423533598E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999981331440576	WITHOUT_CLASSIFICATION	1.8668559423533598E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999973790413159	WITHOUT_CLASSIFICATION	2.6209586841274196E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999870122766736	WITHOUT_CLASSIFICATION	1.298772332632922E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999979121082014	WITHOUT_CLASSIFICATION	2.087891798464091E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999981965673121	WITHOUT_CLASSIFICATION	1.803432687749078E-6	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999977470303854	WITHOUT_CLASSIFICATION	2.2529696146794817E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9987482118346884	WITHOUT_CLASSIFICATION	0.0012517881653115821	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999979467314072	WITHOUT_CLASSIFICATION	2.0532685927676667E-6	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999977128152617	WITHOUT_CLASSIFICATION	2.2871847382337127E-6	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999047903306327	WITHOUT_CLASSIFICATION	9.520966936724931E-5	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9997585557576492	WITHOUT_CLASSIFICATION	2.414442423507842E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999995403944205	WITHOUT_CLASSIFICATION	4.596055794853387E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999995403944205	WITHOUT_CLASSIFICATION	4.596055794853387E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9484640457520788	WITHOUT_CLASSIFICATION	0.05153595424792122	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9997427463745874	WITHOUT_CLASSIFICATION	2.572536254126094E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999985962360831	WITHOUT_CLASSIFICATION	1.4037639168036714E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999997505966	WITHOUT_CLASSIFICATION	2.4940330393453293E-10	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999991004435342	WITHOUT_CLASSIFICATION	8.995564656689289E-7	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9989427172710102	WITHOUT_CLASSIFICATION	0.0010572827289897688	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999999377922439	WITHOUT_CLASSIFICATION	6.220775607500903E-8	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999958480783815	WITHOUT_CLASSIFICATION	4.151921618531563E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998602205015	WITHOUT_CLASSIFICATION	1.3977949859783504E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998476964552	WITHOUT_CLASSIFICATION	1.5230354474517027E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999938702964666	WITHOUT_CLASSIFICATION	6.129703533386731E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999870765791553	WITHOUT_CLASSIFICATION	1.2923420844573313E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999870765791553	WITHOUT_CLASSIFICATION	1.2923420844573313E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999865978473084	WITHOUT_CLASSIFICATION	1.3402152691621926E-5	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999996715287964	WITHOUT_CLASSIFICATION	3.284712035959506E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999998724454935	WITHOUT_CLASSIFICATION	1.2755450644434797E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999856280999548	WITHOUT_CLASSIFICATION	1.437190004509331E-5	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999998957285264	WITHOUT_CLASSIFICATION	1.0427147344252309E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999971927899997	WITHOUT_CLASSIFICATION	2.8072100003488965E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999688897019	WITHOUT_CLASSIFICATION	3.1110298232419807E-8	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999998306098452	WITHOUT_CLASSIFICATION	1.6939015470735286E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999694600468	WITHOUT_CLASSIFICATION	3.0539953284625605E-8	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9955672928941186	WITHOUT_CLASSIFICATION	0.004432707105881369	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999998685731933	WITHOUT_CLASSIFICATION	1.314268067273709E-7	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999994205636556	WITHOUT_CLASSIFICATION	5.79436344379441E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999976124400157	WITHOUT_CLASSIFICATION	2.387559984190028E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999976124400157	WITHOUT_CLASSIFICATION	2.387559984190028E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999999396026724	WITHOUT_CLASSIFICATION	6.039732758906438E-8	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999996994887365	WITHOUT_CLASSIFICATION	3.0051126347750663E-7	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999998340956564	WITHOUT_CLASSIFICATION	1.659043437258494E-7	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.999998815822676	WITHOUT_CLASSIFICATION	1.1841773239817432E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999988576275347	WITHOUT_CLASSIFICATION	1.1423724653397795E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999989988837671	WITHOUT_CLASSIFICATION	1.0011162329523164E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999969078142287	WITHOUT_CLASSIFICATION	3.0921857712828365E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.999537029069056	WITHOUT_CLASSIFICATION	4.6297093094413373E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999998093468453	WITHOUT_CLASSIFICATION	1.9065315477530462E-7	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9427972971592486	WITHOUT_CLASSIFICATION	0.05720270284075141	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999997599364273	WITHOUT_CLASSIFICATION	2.400635727247158E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999994855445877	WITHOUT_CLASSIFICATION	5.144554121630278E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999851882623	WITHOUT_CLASSIFICATION	1.481173765338815E-8	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999990952878925	WITHOUT_CLASSIFICATION	9.047121074186218E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999909705327	WITHOUT_CLASSIFICATION	9.029467286138993E-9	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.7860297941585631	DEFECT	0.21397020584143694	WITHOUT_CLASSIFICATION
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999924061651705	WITHOUT_CLASSIFICATION	7.5938348295761205E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999924061651705	WITHOUT_CLASSIFICATION	7.5938348295761205E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999924061651705	WITHOUT_CLASSIFICATION	7.5938348295761205E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999882451415164	WITHOUT_CLASSIFICATION	1.1754858483599175E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999882451415164	WITHOUT_CLASSIFICATION	1.1754858483599175E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999966489323466	WITHOUT_CLASSIFICATION	3.3510676533547165E-6	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9485239931235336	WITHOUT_CLASSIFICATION	0.051476006876466474	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999992507234484	WITHOUT_CLASSIFICATION	7.492765516826192E-7	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.999999311988006	WITHOUT_CLASSIFICATION	6.880119941480625E-7	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999998571638377	WITHOUT_CLASSIFICATION	1.4283616237193288E-7	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999997522045482	WITHOUT_CLASSIFICATION	2.4779545176397004E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999909705327	WITHOUT_CLASSIFICATION	9.029467286138993E-9	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.999998415197853	WITHOUT_CLASSIFICATION	1.584802146973542E-6	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999995523983269	WITHOUT_CLASSIFICATION	4.476016731128952E-7	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9997722844855674	WITHOUT_CLASSIFICATION	2.2771551443267219E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999942223586803	WITHOUT_CLASSIFICATION	5.7776413197010706E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999951903442654	WITHOUT_CLASSIFICATION	4.8096557346695554E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.999986433750343	WITHOUT_CLASSIFICATION	1.3566249656888252E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999520937860847	WITHOUT_CLASSIFICATION	4.790621391537591E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994409331715	WITHOUT_CLASSIFICATION	5.590668284783686E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9995381918673552	WITHOUT_CLASSIFICATION	4.6180813264480326E-4	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999809253394593	WITHOUT_CLASSIFICATION	1.9074660540763024E-5	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999999730298386	WITHOUT_CLASSIFICATION	2.6970161392815352E-8	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999996264079822	WITHOUT_CLASSIFICATION	3.735920177144191E-7	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999998648410555	WITHOUT_CLASSIFICATION	1.3515894445792717E-7	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999999978894576	WITHOUT_CLASSIFICATION	2.1105423847552395E-9	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999590293419073	WITHOUT_CLASSIFICATION	4.0970658092668E-5	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999800237854	WITHOUT_CLASSIFICATION	1.9976214625411593E-8	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.999999796664506	WITHOUT_CLASSIFICATION	2.0333549400810497E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999443936237	WITHOUT_CLASSIFICATION	5.560637642330297E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999443936237	WITHOUT_CLASSIFICATION	5.560637642330297E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999466848822052	WITHOUT_CLASSIFICATION	5.331511779484071E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999999497014769	WITHOUT_CLASSIFICATION	5.029852302274201E-8	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999993392421742	WITHOUT_CLASSIFICATION	6.607578257893324E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9961548651289803	WITHOUT_CLASSIFICATION	0.003845134871019621	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.999999000570631	WITHOUT_CLASSIFICATION	9.994293690229387E-7	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999942445658412	WITHOUT_CLASSIFICATION	5.755434158842903E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999942445658412	WITHOUT_CLASSIFICATION	5.755434158842903E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999998697327813	WITHOUT_CLASSIFICATION	1.3026721872929747E-7	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999890866902788	WITHOUT_CLASSIFICATION	1.0913309721234313E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999999736325969	WITHOUT_CLASSIFICATION	2.6367403132045263E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999999736325969	WITHOUT_CLASSIFICATION	2.6367403132045263E-8	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999326043166	WITHOUT_CLASSIFICATION	6.739568344040667E-8	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999862100121425	WITHOUT_CLASSIFICATION	1.3789987857609478E-5	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999993912211433	WITHOUT_CLASSIFICATION	6.087788565778952E-7	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999906526663	WITHOUT_CLASSIFICATION	9.34733369462825E-8	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9996761486546768	WITHOUT_CLASSIFICATION	3.2385134532317424E-4	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999924301722324	WITHOUT_CLASSIFICATION	7.569827767574864E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999966660813472	WITHOUT_CLASSIFICATION	3.333918652955677E-6	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999999796726626	WITHOUT_CLASSIFICATION	2.0327337395407228E-8	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999927133722036	WITHOUT_CLASSIFICATION	7.286627796342044E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999994449964311	WITHOUT_CLASSIFICATION	5.55003568846706E-7	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.999823708467936	WITHOUT_CLASSIFICATION	1.7629153206388213E-4	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9853560416860769	WITHOUT_CLASSIFICATION	0.014643958313923094	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999995168405345	WITHOUT_CLASSIFICATION	4.831594656306717E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999901862897	WITHOUT_CLASSIFICATION	9.813710315743953E-9	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999998646791946	WITHOUT_CLASSIFICATION	1.353208054625508E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999998921641416	WITHOUT_CLASSIFICATION	1.0783585844886305E-7	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999999803874737	WITHOUT_CLASSIFICATION	1.961252636930393E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995405328399	WITHOUT_CLASSIFICATION	4.594671601626534E-7	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9874032137598553	WITHOUT_CLASSIFICATION	0.012596786240144691	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9979833628356662	WITHOUT_CLASSIFICATION	0.0020166371643336417	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999992437523096	WITHOUT_CLASSIFICATION	7.56247690399038E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999992437523096	WITHOUT_CLASSIFICATION	7.56247690399038E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999992437523096	WITHOUT_CLASSIFICATION	7.56247690399038E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999992437523096	WITHOUT_CLASSIFICATION	7.56247690399038E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999992437523096	WITHOUT_CLASSIFICATION	7.56247690399038E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999959880021524	WITHOUT_CLASSIFICATION	4.011997847651619E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999998960549717	WITHOUT_CLASSIFICATION	1.0394502829215255E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999754430848	WITHOUT_CLASSIFICATION	2.4556915185211204E-8	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999693915126	WITHOUT_CLASSIFICATION	3.060848742837318E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999982476005541	WITHOUT_CLASSIFICATION	1.7523994458011737E-6	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999925742984	WITHOUT_CLASSIFICATION	7.42570155598018E-9	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9895090230894783	WITHOUT_CLASSIFICATION	0.010490976910521746	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999486830110604	WITHOUT_CLASSIFICATION	5.131698893958262E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999486830110604	WITHOUT_CLASSIFICATION	5.131698893958262E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9998689994947778	WITHOUT_CLASSIFICATION	1.3100050522219517E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999991861590366	WITHOUT_CLASSIFICATION	8.138409633889404E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999991861590366	WITHOUT_CLASSIFICATION	8.138409633889404E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999152635892407	WITHOUT_CLASSIFICATION	8.473641075943594E-5	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999998428395105	WITHOUT_CLASSIFICATION	1.5716048953746944E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999465206599004	WITHOUT_CLASSIFICATION	5.347934009961522E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999994513608678	WITHOUT_CLASSIFICATION	5.486391322129439E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999994603494067	WITHOUT_CLASSIFICATION	5.396505933177222E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999994424795914	WITHOUT_CLASSIFICATION	5.5752040869233E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999994424795914	WITHOUT_CLASSIFICATION	5.5752040869233E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.6224368546346664	WITHOUT_CLASSIFICATION	0.37756314536533364	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999976927318353	WITHOUT_CLASSIFICATION	2.3072681648216576E-6	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999980897923328	WITHOUT_CLASSIFICATION	1.9102076671019255E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999998923391589	WITHOUT_CLASSIFICATION	1.0766084107056893E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999986698525382	WITHOUT_CLASSIFICATION	1.3301474618176073E-6	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999087574577487	WITHOUT_CLASSIFICATION	9.124254225130048E-5	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999927227048574	WITHOUT_CLASSIFICATION	7.277295142674264E-6	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999961339963581	WITHOUT_CLASSIFICATION	3.86600364190007E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9971024381181558	WITHOUT_CLASSIFICATION	0.0028975618818443184	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.999778358076214	WITHOUT_CLASSIFICATION	2.2164192378598918E-4	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9992463143782223	WITHOUT_CLASSIFICATION	7.53685621777656E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.993878409384656	WITHOUT_CLASSIFICATION	0.006121590615343993	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.999994796446969	WITHOUT_CLASSIFICATION	5.203553031023923E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.7739643757804853	DEFECT	0.22603562421951465	WITHOUT_CLASSIFICATION
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999947461119351	WITHOUT_CLASSIFICATION	5.2538880648720896E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9978701419567314	WITHOUT_CLASSIFICATION	0.002129858043268538	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999992986884595	WITHOUT_CLASSIFICATION	7.013115405427256E-7	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999643866002309	WITHOUT_CLASSIFICATION	3.561339976909052E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999989623820604	WITHOUT_CLASSIFICATION	1.0376179395290364E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999944483633847	WITHOUT_CLASSIFICATION	5.551636615346679E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999618471981777	WITHOUT_CLASSIFICATION	3.815280182215876E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999618471981777	WITHOUT_CLASSIFICATION	3.815280182215876E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9467866662170162	WITHOUT_CLASSIFICATION	0.05321333378298369	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.860363240588926	WITHOUT_CLASSIFICATION	0.13963675941107395	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9578483786701028	WITHOUT_CLASSIFICATION	0.042151621329897186	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9999043107723136	WITHOUT_CLASSIFICATION	9.568922768636504E-5	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9998981809441009	WITHOUT_CLASSIFICATION	1.0181905589915729E-4	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.5852881434534298	WITHOUT_CLASSIFICATION	0.41471185654657017	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9999663812011016	WITHOUT_CLASSIFICATION	3.3618798898443875E-5	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5911762534393389	WITHOUT_CLASSIFICATION	0.40882374656066117	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.5183324987069234	WITHOUT_CLASSIFICATION	0.4816675012930765	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999866856312191	WITHOUT_CLASSIFICATION	1.3314368780990285E-5	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9856178518639112	WITHOUT_CLASSIFICATION	0.01438214813608881	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5911762534393389	WITHOUT_CLASSIFICATION	0.40882374656066117	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.5599528509560108	WITHOUT_CLASSIFICATION	0.4400471490439892	DEFECT
