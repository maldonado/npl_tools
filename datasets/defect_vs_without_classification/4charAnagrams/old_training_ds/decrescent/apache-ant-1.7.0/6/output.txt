/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999908151618311	WITHOUT_CLASSIFICATION	9.184838168872873E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999715543070284	WITHOUT_CLASSIFICATION	2.8445692971574176E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998629494841	WITHOUT_CLASSIFICATION	1.370505159601201E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998629494841	WITHOUT_CLASSIFICATION	1.370505159601201E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999949872782998	WITHOUT_CLASSIFICATION	5.01272170025295E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999990650484838	WITHOUT_CLASSIFICATION	9.349515161908912E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999968445416428	WITHOUT_CLASSIFICATION	3.155458357066144E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999993428038984	WITHOUT_CLASSIFICATION	6.571961015447094E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998854872708	WITHOUT_CLASSIFICATION	1.1451272919458432E-7	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999765657887086	WITHOUT_CLASSIFICATION	2.3434211291363637E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9989070274564427	WITHOUT_CLASSIFICATION	0.0010929725435573276	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999998916598893	WITHOUT_CLASSIFICATION	1.0834011067131411E-7	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999976489633979	WITHOUT_CLASSIFICATION	2.351036602032557E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.999997297871119	WITHOUT_CLASSIFICATION	2.702128880997626E-6	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999958853224364	WITHOUT_CLASSIFICATION	4.1146775635647455E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.999238596079919	WITHOUT_CLASSIFICATION	7.614039200809268E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.999238596079919	WITHOUT_CLASSIFICATION	7.614039200809268E-4	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999848977997289	WITHOUT_CLASSIFICATION	1.5102200271240498E-5	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999985670396839	WITHOUT_CLASSIFICATION	1.432960316084491E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999971546267938	WITHOUT_CLASSIFICATION	2.8453732062316206E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999985592483008	WITHOUT_CLASSIFICATION	1.4407516992022239E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999784548796876	WITHOUT_CLASSIFICATION	2.1545120312443152E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999998118121923	WITHOUT_CLASSIFICATION	1.881878077191795E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999949106526984	WITHOUT_CLASSIFICATION	5.089347301525882E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999658970827	WITHOUT_CLASSIFICATION	3.410291721580114E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999992391441735	WITHOUT_CLASSIFICATION	7.60855826503732E-7	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999516854694	WITHOUT_CLASSIFICATION	4.831453050498785E-8	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999727871480465	WITHOUT_CLASSIFICATION	2.7212851953499972E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998874246122	WITHOUT_CLASSIFICATION	1.1257538773589401E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999865569259	WITHOUT_CLASSIFICATION	1.3443073991508636E-8	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999976007266	WITHOUT_CLASSIFICATION	2.399273379503208E-9	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998612673429	WITHOUT_CLASSIFICATION	1.3873265708763782E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999989365025608	WITHOUT_CLASSIFICATION	1.0634974391703068E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999999646116523	WITHOUT_CLASSIFICATION	3.5388347661042644E-8	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999998579409354	WITHOUT_CLASSIFICATION	1.4205906460704001E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999993178151595	WITHOUT_CLASSIFICATION	6.821848404015771E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999931640979013	WITHOUT_CLASSIFICATION	6.835902098600704E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999985592483008	WITHOUT_CLASSIFICATION	1.4407516992022239E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999993703052514	WITHOUT_CLASSIFICATION	6.296947486055873E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999995299696446	WITHOUT_CLASSIFICATION	4.7003035538200005E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999995299696446	WITHOUT_CLASSIFICATION	4.7003035538200005E-7	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999849013633358	WITHOUT_CLASSIFICATION	1.5098636664160679E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999980819782536	WITHOUT_CLASSIFICATION	1.91802174631127E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999973571143383	WITHOUT_CLASSIFICATION	2.642885661548265E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999973571143383	WITHOUT_CLASSIFICATION	2.642885661548265E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999988983282901	WITHOUT_CLASSIFICATION	1.101671709920555E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999864450954519	WITHOUT_CLASSIFICATION	1.3554904548156732E-5	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999998420753461	WITHOUT_CLASSIFICATION	1.579246538138793E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.99999957053877	WITHOUT_CLASSIFICATION	4.294612301095298E-7	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.999999807415681	WITHOUT_CLASSIFICATION	1.9258431896657925E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999911445032166	WITHOUT_CLASSIFICATION	8.855496783421152E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999969523108467	WITHOUT_CLASSIFICATION	3.0476891532719916E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999931199689	WITHOUT_CLASSIFICATION	6.88003108294114E-9	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999931199689	WITHOUT_CLASSIFICATION	6.88003108294114E-9	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999999123624438	WITHOUT_CLASSIFICATION	8.763755621627749E-8	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999996723485051	WITHOUT_CLASSIFICATION	3.276514949010019E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999942021133	WITHOUT_CLASSIFICATION	5.797886712542145E-9	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999942021133	WITHOUT_CLASSIFICATION	5.797886712542145E-9	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999999560793236	WITHOUT_CLASSIFICATION	4.392067646869357E-8	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999998214368767	WITHOUT_CLASSIFICATION	1.7856312323240128E-7	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999937393610239	WITHOUT_CLASSIFICATION	6.260638976183488E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999983127490127	WITHOUT_CLASSIFICATION	1.6872509872563188E-6	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999232575337609	WITHOUT_CLASSIFICATION	7.674246623910659E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999937137962586	WITHOUT_CLASSIFICATION	6.28620374136101E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999999390386364	WITHOUT_CLASSIFICATION	6.096136361042998E-8	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999962937668331	WITHOUT_CLASSIFICATION	3.7062331669845564E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999997265239732	WITHOUT_CLASSIFICATION	2.7347602684102936E-7	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.999999199940866	WITHOUT_CLASSIFICATION	8.000591340517287E-7	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999999675939101	WITHOUT_CLASSIFICATION	3.240608995912583E-8	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999991847622715	WITHOUT_CLASSIFICATION	8.152377284967032E-7	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.999901929777197	WITHOUT_CLASSIFICATION	9.807022280300059E-5	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999826581302002	WITHOUT_CLASSIFICATION	1.7341869799758117E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996476628016	WITHOUT_CLASSIFICATION	3.5233719849005667E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996476628016	WITHOUT_CLASSIFICATION	3.5233719849005667E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999983127490127	WITHOUT_CLASSIFICATION	1.6872509872563188E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999980367537871	WITHOUT_CLASSIFICATION	1.963246212970212E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999983127490127	WITHOUT_CLASSIFICATION	1.6872509872563188E-6	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999982305742654	WITHOUT_CLASSIFICATION	1.7694257345780963E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999980367537871	WITHOUT_CLASSIFICATION	1.963246212970212E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999975249645782	WITHOUT_CLASSIFICATION	2.4750354217893683E-6	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999973195608631	WITHOUT_CLASSIFICATION	2.6804391369570133E-6	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999948985587995	WITHOUT_CLASSIFICATION	5.101441200462749E-6	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.999999998758126	WITHOUT_CLASSIFICATION	1.241874042492892E-9	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993158152888	WITHOUT_CLASSIFICATION	6.841847112351845E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993158152888	WITHOUT_CLASSIFICATION	6.841847112351845E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993158152888	WITHOUT_CLASSIFICATION	6.841847112351845E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999993158152888	WITHOUT_CLASSIFICATION	6.841847112351845E-7	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999977626750854	WITHOUT_CLASSIFICATION	2.2373249145338337E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999951103108647	WITHOUT_CLASSIFICATION	4.889689135234564E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999951103108647	WITHOUT_CLASSIFICATION	4.889689135234564E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999996088711592	WITHOUT_CLASSIFICATION	3.9112884069597956E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999951103108647	WITHOUT_CLASSIFICATION	4.889689135234564E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.999999999738243	WITHOUT_CLASSIFICATION	2.617569596647317E-10	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9995289894831919	WITHOUT_CLASSIFICATION	4.7101051680807773E-4	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999999855701373	WITHOUT_CLASSIFICATION	1.4429862830019404E-8	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.999998263523769	WITHOUT_CLASSIFICATION	1.7364762309734727E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999999784100246	WITHOUT_CLASSIFICATION	2.1589975347381346E-8	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999499869104	WITHOUT_CLASSIFICATION	5.001308946168003E-8	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999958074163097	WITHOUT_CLASSIFICATION	4.192583690393187E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999985572416477	WITHOUT_CLASSIFICATION	1.4427583523650658E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999991240344644	WITHOUT_CLASSIFICATION	8.759655355178156E-7	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.999998278901959	WITHOUT_CLASSIFICATION	1.7210980409342577E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999999444912745	WITHOUT_CLASSIFICATION	5.5508725473531724E-8	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999978516843	WITHOUT_CLASSIFICATION	2.148315823837242E-9	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999995534292326	WITHOUT_CLASSIFICATION	4.465707673987548E-7	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999997234492503	WITHOUT_CLASSIFICATION	2.76550749728716E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999996223943208	WITHOUT_CLASSIFICATION	3.7760567922441635E-7	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999996753472633	WITHOUT_CLASSIFICATION	3.2465273674445944E-7	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999911791717658	WITHOUT_CLASSIFICATION	8.820828234230966E-6	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999901456902666	WITHOUT_CLASSIFICATION	9.854309733401573E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999566732921	WITHOUT_CLASSIFICATION	4.33267078516956E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999878989725972	WITHOUT_CLASSIFICATION	1.210102740284961E-5	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999999815938748	WITHOUT_CLASSIFICATION	1.8406125107617544E-8	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999997398097167	WITHOUT_CLASSIFICATION	2.6019028331916834E-7	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999985228604396	WITHOUT_CLASSIFICATION	1.4771395604061673E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999991240344644	WITHOUT_CLASSIFICATION	8.759655355178156E-7	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999987377284597	WITHOUT_CLASSIFICATION	1.2622715403041148E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999978249485361	WITHOUT_CLASSIFICATION	2.175051463954156E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999994561817308	WITHOUT_CLASSIFICATION	5.438182691952611E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.999985780823902	WITHOUT_CLASSIFICATION	1.421917609800836E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999974539756	WITHOUT_CLASSIFICATION	2.546024438100399E-9	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999997477068029	WITHOUT_CLASSIFICATION	2.5229319707582125E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999568405175	WITHOUT_CLASSIFICATION	4.31594825222338E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999978895225914	WITHOUT_CLASSIFICATION	2.110477408603747E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999858139663442	WITHOUT_CLASSIFICATION	1.4186033655683066E-5	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999921696776778	WITHOUT_CLASSIFICATION	7.830322322183654E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999009756461235	WITHOUT_CLASSIFICATION	9.902435387657644E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999686630670768	WITHOUT_CLASSIFICATION	3.1336932923175614E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999995370051754	WITHOUT_CLASSIFICATION	4.629948245230788E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.999999656809219	WITHOUT_CLASSIFICATION	3.431907809729243E-7	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999999549406368	WITHOUT_CLASSIFICATION	4.505936329231431E-8	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999982576248485	WITHOUT_CLASSIFICATION	1.7423751515571783E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999996332424803	WITHOUT_CLASSIFICATION	3.667575196666272E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9999822078191393	WITHOUT_CLASSIFICATION	1.7792180860824603E-5	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999973877008516	WITHOUT_CLASSIFICATION	2.6122991484757774E-6	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999992377121116	WITHOUT_CLASSIFICATION	7.622878883417647E-7	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999996749414791	WITHOUT_CLASSIFICATION	3.250585207907779E-7	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999547018327	WITHOUT_CLASSIFICATION	4.529816725249695E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999910966119947	WITHOUT_CLASSIFICATION	8.903388005379454E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9995775444338938	WITHOUT_CLASSIFICATION	4.2245556610621536E-4	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999460142564046	WITHOUT_CLASSIFICATION	5.3985743595390055E-5	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999996243748412	WITHOUT_CLASSIFICATION	3.756251588214189E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999997641865385	WITHOUT_CLASSIFICATION	2.358134614632082E-7	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.999994088123202	WITHOUT_CLASSIFICATION	5.911876797967935E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999996475052877	WITHOUT_CLASSIFICATION	3.524947122706126E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999906157421368	WITHOUT_CLASSIFICATION	9.384257863207021E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999999824019247	WITHOUT_CLASSIFICATION	1.7598075406133525E-8	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999992849665073	WITHOUT_CLASSIFICATION	7.150334926924902E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999998962174341	WITHOUT_CLASSIFICATION	1.0378256591420952E-7	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999946232328544	WITHOUT_CLASSIFICATION	5.376767145546118E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.999999999738243	WITHOUT_CLASSIFICATION	2.617569596647317E-10	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.999999998375224	WITHOUT_CLASSIFICATION	1.6247759588502936E-9	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999997703103811	WITHOUT_CLASSIFICATION	2.2968961882166204E-7	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999999339697095	WITHOUT_CLASSIFICATION	6.603029044520057E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999958350174548	WITHOUT_CLASSIFICATION	4.1649825450921195E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999800865488256	WITHOUT_CLASSIFICATION	1.991345117435897E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999953964614037	WITHOUT_CLASSIFICATION	4.603538596253252E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.999996319405935	WITHOUT_CLASSIFICATION	3.6805940650293547E-6	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999998446258266	WITHOUT_CLASSIFICATION	1.5537417348175204E-7	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999692585614	WITHOUT_CLASSIFICATION	3.0741438506229014E-8	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.999999766785358	WITHOUT_CLASSIFICATION	2.3321464201609231E-7	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.999990244090233	WITHOUT_CLASSIFICATION	9.755909767128723E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999997325894777	WITHOUT_CLASSIFICATION	2.674105222995931E-7	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999998958253589	WITHOUT_CLASSIFICATION	1.0417464116136368E-7	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999997680785908	WITHOUT_CLASSIFICATION	2.3192140928535767E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9994534810299112	WITHOUT_CLASSIFICATION	5.465189700887558E-4	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999993806317505	WITHOUT_CLASSIFICATION	6.193682494628878E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999952592898831	WITHOUT_CLASSIFICATION	4.740710116882535E-6	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999994373623978	WITHOUT_CLASSIFICATION	5.62637602245472E-7	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999818658659329	WITHOUT_CLASSIFICATION	1.8134134067190075E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.999996318052669	WITHOUT_CLASSIFICATION	3.6819473309920816E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999999660620363	WITHOUT_CLASSIFICATION	3.3937963624613855E-8	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999994669978525	WITHOUT_CLASSIFICATION	5.330021474898659E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999992629447882	WITHOUT_CLASSIFICATION	7.370552116536313E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999924339483	WITHOUT_CLASSIFICATION	7.566051714720165E-9	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999924339483	WITHOUT_CLASSIFICATION	7.566051714720165E-9	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999996769201517	WITHOUT_CLASSIFICATION	3.230798484009807E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9998949633776214	WITHOUT_CLASSIFICATION	1.0503662237864218E-4	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999997625220892	WITHOUT_CLASSIFICATION	2.374779108865767E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999997625220892	WITHOUT_CLASSIFICATION	2.374779108865767E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999998717816704	WITHOUT_CLASSIFICATION	1.282183296535978E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.999999949316662	WITHOUT_CLASSIFICATION	5.068333800694974E-8	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999974699195598	WITHOUT_CLASSIFICATION	2.530080440066241E-6	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999965753510799	WITHOUT_CLASSIFICATION	3.4246489201588418E-6	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999040942269577	WITHOUT_CLASSIFICATION	9.59057730422972E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999978533128191	WITHOUT_CLASSIFICATION	2.146687180867812E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999995638908484	WITHOUT_CLASSIFICATION	4.36109151593397E-7	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.999989358344556	WITHOUT_CLASSIFICATION	1.0641655443988544E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999976002014661	WITHOUT_CLASSIFICATION	2.3997985337950746E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999998802598027	WITHOUT_CLASSIFICATION	1.1974019740621925E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.999987856447085	WITHOUT_CLASSIFICATION	1.214355291502662E-5	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999998138186177	WITHOUT_CLASSIFICATION	1.861813822402911E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999476060955	WITHOUT_CLASSIFICATION	5.239390458487283E-8	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999993428038984	WITHOUT_CLASSIFICATION	6.571961015447094E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999998854872708	WITHOUT_CLASSIFICATION	1.1451272919458432E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996476628016	WITHOUT_CLASSIFICATION	3.5233719849005667E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999476060955	WITHOUT_CLASSIFICATION	5.239390458487283E-8	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999921146913128	WITHOUT_CLASSIFICATION	7.88530868728322E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998243889855327	WITHOUT_CLASSIFICATION	1.7561101446716937E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998243889855327	WITHOUT_CLASSIFICATION	1.7561101446716937E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998243889855327	WITHOUT_CLASSIFICATION	1.7561101446716937E-4	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999995496470593	WITHOUT_CLASSIFICATION	4.503529407969913E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999997405060375	WITHOUT_CLASSIFICATION	2.5949396251882994E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999998383606049	WITHOUT_CLASSIFICATION	1.6163939503059336E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999847295470914	WITHOUT_CLASSIFICATION	1.5270452908531155E-5	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999996295068168	WITHOUT_CLASSIFICATION	3.704931833179044E-7	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999994508805873	WITHOUT_CLASSIFICATION	5.491194128150385E-7	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9999921146913128	WITHOUT_CLASSIFICATION	7.88530868728322E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999983050226239	WITHOUT_CLASSIFICATION	1.6949773761201908E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999999176719458	WITHOUT_CLASSIFICATION	8.232805415255641E-8	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999972896101541	WITHOUT_CLASSIFICATION	2.710389845962413E-6	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999999462087951	WITHOUT_CLASSIFICATION	5.379120492076225E-8	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999999756969628	WITHOUT_CLASSIFICATION	2.4303037244574028E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996476628016	WITHOUT_CLASSIFICATION	3.5233719849005667E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996476628016	WITHOUT_CLASSIFICATION	3.5233719849005667E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999976002014661	WITHOUT_CLASSIFICATION	2.3997985337950746E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999983050226239	WITHOUT_CLASSIFICATION	1.6949773761201908E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992407609962	WITHOUT_CLASSIFICATION	7.592390038479692E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992407609962	WITHOUT_CLASSIFICATION	7.592390038479692E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992407609962	WITHOUT_CLASSIFICATION	7.592390038479692E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999444008303	WITHOUT_CLASSIFICATION	5.559916982139525E-8	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999999444008303	WITHOUT_CLASSIFICATION	5.559916982139525E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999838600478	WITHOUT_CLASSIFICATION	1.6139952242544535E-8	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999999838600478	WITHOUT_CLASSIFICATION	1.6139952242544535E-8	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999999881923602	WITHOUT_CLASSIFICATION	1.180763967687154E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999751171135	WITHOUT_CLASSIFICATION	2.4882886602530146E-8	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999999751171135	WITHOUT_CLASSIFICATION	2.4882886602530146E-8	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999998970630412	WITHOUT_CLASSIFICATION	1.02936958802939E-7	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999280332818823	WITHOUT_CLASSIFICATION	7.19667181177031E-5	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999999190754232	WITHOUT_CLASSIFICATION	8.092457670599024E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999551890394	WITHOUT_CLASSIFICATION	4.481096057292508E-8	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999999551890394	WITHOUT_CLASSIFICATION	4.481096057292508E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999245515939	WITHOUT_CLASSIFICATION	7.544840608644007E-8	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999245515939	WITHOUT_CLASSIFICATION	7.544840608644007E-8	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999999721369447	WITHOUT_CLASSIFICATION	2.7863055309689232E-8	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999993634376972	WITHOUT_CLASSIFICATION	6.365623027883182E-7	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999999359895654	WITHOUT_CLASSIFICATION	6.401043469273156E-8	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999999926495753	WITHOUT_CLASSIFICATION	7.350424697028059E-9	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999999407756972	WITHOUT_CLASSIFICATION	5.9224302786086186E-8	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999999106724733	WITHOUT_CLASSIFICATION	8.932752668238854E-8	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999799780107	WITHOUT_CLASSIFICATION	2.0021989218389967E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999997909020014	WITHOUT_CLASSIFICATION	2.0909799860119567E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9998344257215862	WITHOUT_CLASSIFICATION	1.6557427841385286E-4	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999992691557178	WITHOUT_CLASSIFICATION	7.308442822828723E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999971076668532	WITHOUT_CLASSIFICATION	2.8923331466781824E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999923512145996	WITHOUT_CLASSIFICATION	7.648785400342898E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999906403584776	WITHOUT_CLASSIFICATION	9.359641522258597E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999999955098518	WITHOUT_CLASSIFICATION	4.490148197596641E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.999999372868678	WITHOUT_CLASSIFICATION	6.271313221014655E-7	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999997741550277	WITHOUT_CLASSIFICATION	2.258449723733768E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999761175359	WITHOUT_CLASSIFICATION	2.3882464137824623E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999999955098518	WITHOUT_CLASSIFICATION	4.490148197596641E-8	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999973418264904	WITHOUT_CLASSIFICATION	2.658173509670145E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999999955098518	WITHOUT_CLASSIFICATION	4.490148197596641E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.999999372868678	WITHOUT_CLASSIFICATION	6.271313221014655E-7	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999984601772554	WITHOUT_CLASSIFICATION	1.5398227446707419E-6	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999999989727567	WITHOUT_CLASSIFICATION	1.02724327892748E-9	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999998958441834	WITHOUT_CLASSIFICATION	1.0415581657222489E-7	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999995528849003	WITHOUT_CLASSIFICATION	4.4711509980789246E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999992748269507	WITHOUT_CLASSIFICATION	7.251730491828153E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999817988478023	WITHOUT_CLASSIFICATION	1.8201152197776687E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.999999050601486	WITHOUT_CLASSIFICATION	9.49398513918157E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.999336459909729	WITHOUT_CLASSIFICATION	6.635400902710005E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999817988478023	WITHOUT_CLASSIFICATION	1.8201152197776687E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999817988478023	WITHOUT_CLASSIFICATION	1.8201152197776687E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999817988478023	WITHOUT_CLASSIFICATION	1.8201152197776687E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999817988478023	WITHOUT_CLASSIFICATION	1.8201152197776687E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.999985251480849	WITHOUT_CLASSIFICATION	1.474851915085846E-5	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999989840394624	WITHOUT_CLASSIFICATION	1.0159605375864435E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999979293285722	WITHOUT_CLASSIFICATION	2.070671427824761E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999979293285722	WITHOUT_CLASSIFICATION	2.070671427824761E-6	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999990358616493	WITHOUT_CLASSIFICATION	9.641383507935841E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999985351738598	WITHOUT_CLASSIFICATION	1.464826140108154E-6	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.999999986568268	WITHOUT_CLASSIFICATION	1.3431731891879283E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999996406546668	WITHOUT_CLASSIFICATION	3.5934533314647943E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999995757232361	WITHOUT_CLASSIFICATION	4.2427676392491683E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995376001162	WITHOUT_CLASSIFICATION	4.62399883722072E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995376001162	WITHOUT_CLASSIFICATION	4.62399883722072E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999995376001162	WITHOUT_CLASSIFICATION	4.62399883722072E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.999999998115726	WITHOUT_CLASSIFICATION	1.8842739294956846E-9	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999888389789	WITHOUT_CLASSIFICATION	1.1161021229760785E-8	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999842048003871	WITHOUT_CLASSIFICATION	1.579519961292536E-5	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999956217182422	WITHOUT_CLASSIFICATION	4.3782817578741785E-6	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.999999780633819	WITHOUT_CLASSIFICATION	2.193661809411557E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999998359126695	WITHOUT_CLASSIFICATION	1.6408733054659154E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999157926113	WITHOUT_CLASSIFICATION	8.420738869638034E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999996544721687	WITHOUT_CLASSIFICATION	3.4552783132700265E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999989274872322	WITHOUT_CLASSIFICATION	1.072512767866637E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999952149769218	WITHOUT_CLASSIFICATION	4.7850230781808695E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.999999951267622	WITHOUT_CLASSIFICATION	4.873237791899201E-8	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999973573882394	WITHOUT_CLASSIFICATION	2.642611760585254E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999992495757	WITHOUT_CLASSIFICATION	7.504243436696817E-10	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999999489463499	WITHOUT_CLASSIFICATION	5.1053650195973906E-8	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999996784329315	WITHOUT_CLASSIFICATION	3.2156706849959163E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999997450139966	WITHOUT_CLASSIFICATION	2.54986003362725E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999996784329315	WITHOUT_CLASSIFICATION	3.2156706849959163E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999999512562613	WITHOUT_CLASSIFICATION	4.874373867615786E-8	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.999999016301322	WITHOUT_CLASSIFICATION	9.836986779911702E-7	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999920688623374	WITHOUT_CLASSIFICATION	7.931137662613111E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999996906409233	WITHOUT_CLASSIFICATION	3.093590766589108E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999997290538	WITHOUT_CLASSIFICATION	2.709461330266477E-10	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999897831474	WITHOUT_CLASSIFICATION	1.021685258561689E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999981831811436	WITHOUT_CLASSIFICATION	1.8168188563245054E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999996718802932	WITHOUT_CLASSIFICATION	3.281197068973373E-7	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.999989136159327	WITHOUT_CLASSIFICATION	1.0863840672859861E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999985352305221	WITHOUT_CLASSIFICATION	1.4647694778837432E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999997087275	WITHOUT_CLASSIFICATION	2.912725191337049E-10	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999988112137395	WITHOUT_CLASSIFICATION	1.1887862605666573E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.999999638834267	WITHOUT_CLASSIFICATION	3.61165733042757E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999999763789509	WITHOUT_CLASSIFICATION	2.3621049046026774E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999999733415444	WITHOUT_CLASSIFICATION	2.6658455504288178E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999994386432545	WITHOUT_CLASSIFICATION	5.613567454987989E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999994296359	WITHOUT_CLASSIFICATION	5.703641404326102E-10	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999998311754381	WITHOUT_CLASSIFICATION	1.6882456181296277E-7	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999997090105323	WITHOUT_CLASSIFICATION	2.9098946771890075E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999884266034086	WITHOUT_CLASSIFICATION	1.1573396591419928E-5	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999992769434611	WITHOUT_CLASSIFICATION	7.230565389487359E-7	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.999999822777654	WITHOUT_CLASSIFICATION	1.7722234607761403E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.999999992115027	WITHOUT_CLASSIFICATION	7.884972967735971E-9	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.999999992115027	WITHOUT_CLASSIFICATION	7.884972967735971E-9	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999728583743	WITHOUT_CLASSIFICATION	2.7141625721717624E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999728583743	WITHOUT_CLASSIFICATION	2.7141625721717624E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999816661927019	WITHOUT_CLASSIFICATION	1.8333807298110887E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999971450964132	WITHOUT_CLASSIFICATION	2.8549035867437373E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999971450964132	WITHOUT_CLASSIFICATION	2.8549035867437373E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999997873686647	WITHOUT_CLASSIFICATION	2.126313353527203E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999997873686647	WITHOUT_CLASSIFICATION	2.126313353527203E-7	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999989208497786	WITHOUT_CLASSIFICATION	1.079150221472327E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999997720252419	WITHOUT_CLASSIFICATION	2.2797475795358307E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999999890022643	WITHOUT_CLASSIFICATION	1.09977358018522E-8	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.999999735895718	WITHOUT_CLASSIFICATION	2.6410428195745286E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999998008903006	WITHOUT_CLASSIFICATION	1.9910969940734554E-7	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999998265124928	WITHOUT_CLASSIFICATION	1.7348750721604087E-7	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999999503420212	WITHOUT_CLASSIFICATION	4.965797893297856E-8	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999995057192975	WITHOUT_CLASSIFICATION	4.9428070251012E-7	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999987248772024	WITHOUT_CLASSIFICATION	1.275122797553613E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999949656840873	WITHOUT_CLASSIFICATION	5.034315912655469E-6	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999904391527	WITHOUT_CLASSIFICATION	9.560847462047478E-9	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999962010785983	WITHOUT_CLASSIFICATION	3.798921401514104E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.999999991036328	WITHOUT_CLASSIFICATION	8.963672006364389E-9	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999987565571513	WITHOUT_CLASSIFICATION	1.2434428486359134E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999991997710848	WITHOUT_CLASSIFICATION	8.002289152636023E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999931640979013	WITHOUT_CLASSIFICATION	6.835902098600704E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999981831811436	WITHOUT_CLASSIFICATION	1.8168188563245054E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999985352305221	WITHOUT_CLASSIFICATION	1.4647694778837432E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999968527060713	WITHOUT_CLASSIFICATION	3.1472939287243414E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999994111693941	WITHOUT_CLASSIFICATION	5.88830605922362E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999269747987006	WITHOUT_CLASSIFICATION	7.302520129938366E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999972362435715	WITHOUT_CLASSIFICATION	2.7637564284946973E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999996673238595	WITHOUT_CLASSIFICATION	3.326761405270679E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999457036691534	WITHOUT_CLASSIFICATION	5.4296330846524185E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999961802945506	WITHOUT_CLASSIFICATION	3.819705449351091E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.999999491466408	WITHOUT_CLASSIFICATION	5.08533592004567E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999996799390469	WITHOUT_CLASSIFICATION	3.2006095317564614E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999998121916	WITHOUT_CLASSIFICATION	1.8780844544521913E-10	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999220832459984	WITHOUT_CLASSIFICATION	7.791675400163576E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.999999923682509	WITHOUT_CLASSIFICATION	7.631749096605411E-8	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999992208638103	WITHOUT_CLASSIFICATION	7.791361896578602E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999992208638103	WITHOUT_CLASSIFICATION	7.791361896578602E-7	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9998310227181607	WITHOUT_CLASSIFICATION	1.6897728183930296E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.999742611437638	WITHOUT_CLASSIFICATION	2.573885623619949E-4	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999993643200571	WITHOUT_CLASSIFICATION	6.356799429553966E-7	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.999993463299567	WITHOUT_CLASSIFICATION	6.536700433088883E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999925392946489	WITHOUT_CLASSIFICATION	7.460705351024612E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999998892687864	WITHOUT_CLASSIFICATION	1.1073121370675249E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999996229453941	WITHOUT_CLASSIFICATION	3.770546059089437E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999784963294276	WITHOUT_CLASSIFICATION	2.1503670572327776E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999999759769779	WITHOUT_CLASSIFICATION	2.4023022062924602E-8	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999996942073699	WITHOUT_CLASSIFICATION	3.057926300989109E-7	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999996751243888	WITHOUT_CLASSIFICATION	3.2487561127331074E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999995659908393	WITHOUT_CLASSIFICATION	4.340091606084653E-7	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999999752740243	WITHOUT_CLASSIFICATION	2.47259757510119E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999996166163138	WITHOUT_CLASSIFICATION	3.833836862735602E-7	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999936084110426	WITHOUT_CLASSIFICATION	6.39158895746515E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999965598640345	WITHOUT_CLASSIFICATION	3.4401359655580594E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999962512486034	WITHOUT_CLASSIFICATION	3.748751396723722E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999995282387222	WITHOUT_CLASSIFICATION	4.717612777632544E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999727871480465	WITHOUT_CLASSIFICATION	2.7212851953499972E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998874246122	WITHOUT_CLASSIFICATION	1.1257538773589401E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999865569259	WITHOUT_CLASSIFICATION	1.3443073991508636E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999865569259	WITHOUT_CLASSIFICATION	1.3443073991508636E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998612673429	WITHOUT_CLASSIFICATION	1.3873265708763782E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998612673429	WITHOUT_CLASSIFICATION	1.3873265708763782E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999999834573555	WITHOUT_CLASSIFICATION	1.6542644452606305E-8	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999983278008784	WITHOUT_CLASSIFICATION	1.6721991216672053E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.999868109137736	WITHOUT_CLASSIFICATION	1.3189086226385072E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999743873675578	WITHOUT_CLASSIFICATION	2.5612632442255286E-5	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999541750971015	WITHOUT_CLASSIFICATION	4.58249028984787E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9998958644718232	WITHOUT_CLASSIFICATION	1.0413552817680494E-4	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999726850323495	WITHOUT_CLASSIFICATION	2.731496765062854E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999975910261766	WITHOUT_CLASSIFICATION	2.408973823337384E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999975910261766	WITHOUT_CLASSIFICATION	2.408973823337384E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.999999991489703	WITHOUT_CLASSIFICATION	8.510296949093653E-9	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.999999952812301	WITHOUT_CLASSIFICATION	4.718769897731455E-8	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999953780042851	WITHOUT_CLASSIFICATION	4.621995714972944E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999953780042851	WITHOUT_CLASSIFICATION	4.621995714972944E-6	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999968192947226	WITHOUT_CLASSIFICATION	3.180705277310543E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999989485428455	WITHOUT_CLASSIFICATION	1.0514571544432532E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995263387645	WITHOUT_CLASSIFICATION	4.736612355059299E-7	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999985118159826	WITHOUT_CLASSIFICATION	1.4881840172740687E-6	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999929032282627	WITHOUT_CLASSIFICATION	7.096771737210059E-6	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999999328562431	WITHOUT_CLASSIFICATION	6.714375686900804E-8	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999998810292475	WITHOUT_CLASSIFICATION	1.1897075244838634E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999998810292475	WITHOUT_CLASSIFICATION	1.1897075244838634E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999996662074643	WITHOUT_CLASSIFICATION	3.337925357472957E-7	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999992180339743	WITHOUT_CLASSIFICATION	7.819660257381092E-7	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999905140918246	WITHOUT_CLASSIFICATION	9.485908175518409E-6	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999912681093077	WITHOUT_CLASSIFICATION	8.731890692306575E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999974226451604	WITHOUT_CLASSIFICATION	2.5773548395883803E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999983063019526	WITHOUT_CLASSIFICATION	1.6936980473182697E-6	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999991144712479	WITHOUT_CLASSIFICATION	8.85528752219923E-7	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.999997429039419	WITHOUT_CLASSIFICATION	2.5709605809378385E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999932987579	WITHOUT_CLASSIFICATION	6.701242097902755E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999932987579	WITHOUT_CLASSIFICATION	6.701242097902755E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999932987579	WITHOUT_CLASSIFICATION	6.701242097902755E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999932987579	WITHOUT_CLASSIFICATION	6.701242097902755E-8	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999913246411544	WITHOUT_CLASSIFICATION	8.675358845655128E-6	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999982502428622	WITHOUT_CLASSIFICATION	1.749757137848386E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// while	WITHOUT_CLASSIFICATION	0.999998446248347	WITHOUT_CLASSIFICATION	1.5537516529543957E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999992984166977	WITHOUT_CLASSIFICATION	7.01583302297764E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999992984166977	WITHOUT_CLASSIFICATION	7.01583302297764E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999930486432654	WITHOUT_CLASSIFICATION	6.951356734646365E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999930486432654	WITHOUT_CLASSIFICATION	6.951356734646365E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999833987789557	WITHOUT_CLASSIFICATION	1.660122104422199E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.999989267852859	WITHOUT_CLASSIFICATION	1.0732147140966356E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.999998463614684	WITHOUT_CLASSIFICATION	1.5363853159848003E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996251597684	WITHOUT_CLASSIFICATION	3.7484023164621745E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998212854615	WITHOUT_CLASSIFICATION	1.7871453838317567E-7	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999771644025021	WITHOUT_CLASSIFICATION	2.2835597497947468E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999975088287	WITHOUT_CLASSIFICATION	2.4911712388382355E-9	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999487612998482	WITHOUT_CLASSIFICATION	5.1238700151810464E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999998776474924	WITHOUT_CLASSIFICATION	1.2235250755344074E-7	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999575887222	WITHOUT_CLASSIFICATION	4.2411277820660094E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.99999703722221	WITHOUT_CLASSIFICATION	2.9627777901012216E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999786176677	WITHOUT_CLASSIFICATION	2.1382332319449317E-8	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999949353675112	WITHOUT_CLASSIFICATION	5.064632488884023E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999999951687824	WITHOUT_CLASSIFICATION	4.8312176535213255E-9	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999999685572377	WITHOUT_CLASSIFICATION	3.1442762252196446E-8	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999776412552018	WITHOUT_CLASSIFICATION	2.235874479811508E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999988147272133	WITHOUT_CLASSIFICATION	1.185272786716955E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999969847080201	WITHOUT_CLASSIFICATION	3.0152919798259E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999969847080201	WITHOUT_CLASSIFICATION	3.0152919798259E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999969847080201	WITHOUT_CLASSIFICATION	3.0152919798259E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999996815456036	WITHOUT_CLASSIFICATION	3.18454396498983E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999899287718282	WITHOUT_CLASSIFICATION	1.0071228171737805E-5	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999638424223	WITHOUT_CLASSIFICATION	3.615757759423685E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999975034884734	WITHOUT_CLASSIFICATION	2.496511526737762E-6	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999949259865	WITHOUT_CLASSIFICATION	5.074013602898057E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999991931038468	WITHOUT_CLASSIFICATION	8.068961531418575E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999942525137147	WITHOUT_CLASSIFICATION	5.74748628528637E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999980851281258	WITHOUT_CLASSIFICATION	1.9148718742484148E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.999985515763916	WITHOUT_CLASSIFICATION	1.4484236084064364E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9975795602825893	WITHOUT_CLASSIFICATION	0.0024204397174106365	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999981682427	WITHOUT_CLASSIFICATION	1.8317573720169835E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999906244358567	WITHOUT_CLASSIFICATION	9.375564143309972E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999993674999494	WITHOUT_CLASSIFICATION	6.325000505257437E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999970242731708	WITHOUT_CLASSIFICATION	2.975726829138027E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.999999589617557	WITHOUT_CLASSIFICATION	4.1038244294494145E-7	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999997440494901	WITHOUT_CLASSIFICATION	2.5595050991266493E-7	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999996712258222	WITHOUT_CLASSIFICATION	3.2877417778665703E-7	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999907038778	WITHOUT_CLASSIFICATION	9.29612224164214E-9	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999987807348	WITHOUT_CLASSIFICATION	1.219265316971802E-9	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999996770946123	WITHOUT_CLASSIFICATION	3.229053876173015E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999990847666457	WITHOUT_CLASSIFICATION	9.152333542685684E-7	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999870764520399	WITHOUT_CLASSIFICATION	1.2923547960174861E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999986673823	WITHOUT_CLASSIFICATION	1.3326177037489713E-9	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999975920669513	WITHOUT_CLASSIFICATION	2.407933048770353E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999869780764539	WITHOUT_CLASSIFICATION	1.3021923546045418E-5	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9998562098328893	WITHOUT_CLASSIFICATION	1.4379016711071923E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999949979302462	WITHOUT_CLASSIFICATION	5.002069753799369E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999991782032632	WITHOUT_CLASSIFICATION	8.217967368065471E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.999999421151514	WITHOUT_CLASSIFICATION	5.788484861637425E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999693171894	WITHOUT_CLASSIFICATION	3.068281065666377E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.999999975865946	WITHOUT_CLASSIFICATION	2.413405399070611E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999976472268053	WITHOUT_CLASSIFICATION	2.3527731946728695E-6	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999991623161036	WITHOUT_CLASSIFICATION	8.376838964690071E-7	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.999999898961511	WITHOUT_CLASSIFICATION	1.0103848902336504E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9998998207590496	WITHOUT_CLASSIFICATION	1.0017924095052438E-4	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999751770095463	WITHOUT_CLASSIFICATION	2.4822990453649388E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999964349451603	WITHOUT_CLASSIFICATION	3.5650548397741955E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999984506057705	WITHOUT_CLASSIFICATION	1.5493942295434469E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.999997786159144	WITHOUT_CLASSIFICATION	2.213840855979935E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999997698612237	WITHOUT_CLASSIFICATION	2.3013877617015764E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999996386877982	WITHOUT_CLASSIFICATION	3.6131220187684696E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9989819817390659	WITHOUT_CLASSIFICATION	0.0010180182609340774	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999913924646	WITHOUT_CLASSIFICATION	8.607535361955695E-9	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.999997520278772	WITHOUT_CLASSIFICATION	2.47972122798589E-6	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999997467032791	WITHOUT_CLASSIFICATION	2.5329672101940477E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999995023924465	WITHOUT_CLASSIFICATION	4.976075534501096E-7	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999945260172788	WITHOUT_CLASSIFICATION	5.473982721232136E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999993818615255	WITHOUT_CLASSIFICATION	6.181384745372646E-7	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999989365276318	WITHOUT_CLASSIFICATION	1.0634723681259318E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999999956320627	WITHOUT_CLASSIFICATION	4.367937331994898E-9	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999982673472796	WITHOUT_CLASSIFICATION	1.7326527204404444E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999999459914877	WITHOUT_CLASSIFICATION	5.4008512393616833E-8	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999897461123434	WITHOUT_CLASSIFICATION	1.0253887656675331E-5	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999997921321481	WITHOUT_CLASSIFICATION	2.0786785197940467E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999999102932949	WITHOUT_CLASSIFICATION	8.970670497550194E-8	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9993431430269922	WITHOUT_CLASSIFICATION	6.568569730077172E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999807883238	WITHOUT_CLASSIFICATION	1.9211676299999392E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999999079351577	WITHOUT_CLASSIFICATION	9.206484233959617E-8	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.999999709324082	WITHOUT_CLASSIFICATION	2.9067591809328154E-7	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999969233805	WITHOUT_CLASSIFICATION	3.076619449621233E-9	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999819911156	WITHOUT_CLASSIFICATION	1.800888434785121E-8	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999999856682703	WITHOUT_CLASSIFICATION	1.43317297769763E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9995827326915433	WITHOUT_CLASSIFICATION	4.172673084567121E-4	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999958211048	WITHOUT_CLASSIFICATION	4.178895261437218E-9	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9998224907397855	WITHOUT_CLASSIFICATION	1.7750926021451637E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999110855330251	WITHOUT_CLASSIFICATION	8.891446697492739E-5	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999998608946997	WITHOUT_CLASSIFICATION	1.3910530033982165E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999999624332554	WITHOUT_CLASSIFICATION	3.756674453689391E-8	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999980327072885	WITHOUT_CLASSIFICATION	1.9672927114989407E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999789589189003	WITHOUT_CLASSIFICATION	2.1041081099636647E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999999395922576	WITHOUT_CLASSIFICATION	6.040774232743827E-8	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9962774773616121	WITHOUT_CLASSIFICATION	0.003722522638387832	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999550684489	WITHOUT_CLASSIFICATION	4.493155117095674E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999998000004	WITHOUT_CLASSIFICATION	1.9999952043095897E-10	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999547280525	WITHOUT_CLASSIFICATION	4.5271947553338854E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999995029625135	WITHOUT_CLASSIFICATION	4.970374865600749E-7	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9998786935609197	WITHOUT_CLASSIFICATION	1.2130643908021067E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997153729263916	WITHOUT_CLASSIFICATION	2.846270736085062E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997153729263916	WITHOUT_CLASSIFICATION	2.846270736085062E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997153729263916	WITHOUT_CLASSIFICATION	2.846270736085062E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999987014778348	WITHOUT_CLASSIFICATION	1.2985221652366135E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999998489815205	WITHOUT_CLASSIFICATION	1.510184795105354E-7	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999952272185	WITHOUT_CLASSIFICATION	4.7727815017923356E-9	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.999999885308802	WITHOUT_CLASSIFICATION	1.1469119806729986E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999992337972641	WITHOUT_CLASSIFICATION	7.662027359836328E-7	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999999846721451	WITHOUT_CLASSIFICATION	1.5327854909505422E-8	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999998986181962	WITHOUT_CLASSIFICATION	1.0138180384870316E-7	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999288985527	WITHOUT_CLASSIFICATION	7.110144726572238E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999993450404965	WITHOUT_CLASSIFICATION	6.549595035421954E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999993450404965	WITHOUT_CLASSIFICATION	6.549595035421954E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999980621490838	WITHOUT_CLASSIFICATION	1.9378509161415734E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999972813878127	WITHOUT_CLASSIFICATION	2.7186121871571182E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999547280525	WITHOUT_CLASSIFICATION	4.5271947553338854E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998335379523	WITHOUT_CLASSIFICATION	1.6646204767002388E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.999999990296429	WITHOUT_CLASSIFICATION	9.703570958055909E-9	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999880151508104	WITHOUT_CLASSIFICATION	1.1984849189568049E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999979211710794	WITHOUT_CLASSIFICATION	2.0788289206189822E-6	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999974422511538	WITHOUT_CLASSIFICATION	2.5577488462160333E-6	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999999169863992	WITHOUT_CLASSIFICATION	8.301360078113865E-8	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999997365774441	WITHOUT_CLASSIFICATION	2.6342255580942703E-7	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9988415552631742	WITHOUT_CLASSIFICATION	0.0011584447368258744	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9999570070482534	WITHOUT_CLASSIFICATION	4.299295174657758E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999940807842367	WITHOUT_CLASSIFICATION	5.919215763336109E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999965415630853	WITHOUT_CLASSIFICATION	3.4584369147552905E-6	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999992719975572	WITHOUT_CLASSIFICATION	7.280024427737541E-7	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.999999875396089	WITHOUT_CLASSIFICATION	1.2460391106037703E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999937938405443	WITHOUT_CLASSIFICATION	6.206159455717772E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999901558329443	WITHOUT_CLASSIFICATION	9.84416705564653E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999907249765431	WITHOUT_CLASSIFICATION	9.275023456924337E-6	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9996719654704773	WITHOUT_CLASSIFICATION	3.2803452952274683E-4	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.999990963261502	WITHOUT_CLASSIFICATION	9.036738498010556E-6	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999953488913755	WITHOUT_CLASSIFICATION	4.651108624446267E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.999999965390345	WITHOUT_CLASSIFICATION	3.460965506372892E-8	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999919919304205	WITHOUT_CLASSIFICATION	8.008069579484512E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999999163129752	WITHOUT_CLASSIFICATION	8.368702482694364E-8	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999995700920041	WITHOUT_CLASSIFICATION	4.299079958806603E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999902886580574	WITHOUT_CLASSIFICATION	9.71134194259929E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999952058741567	WITHOUT_CLASSIFICATION	4.794125843332798E-6	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999997540079577	WITHOUT_CLASSIFICATION	2.459920422104634E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999953452358102	WITHOUT_CLASSIFICATION	4.6547641897999E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999982320218	WITHOUT_CLASSIFICATION	1.7679781838767983E-9	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999999997458834	WITHOUT_CLASSIFICATION	2.541165699470917E-10	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999886896646	WITHOUT_CLASSIFICATION	1.1310335423262555E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999999955476	WITHOUT_CLASSIFICATION	4.4523451405768285E-12	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999600562639079	WITHOUT_CLASSIFICATION	3.994373609204002E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999999324795846	WITHOUT_CLASSIFICATION	6.752041530759771E-8	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999998205570223	WITHOUT_CLASSIFICATION	1.794429777077826E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999960391683895	WITHOUT_CLASSIFICATION	3.960831610495993E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999999286591413	WITHOUT_CLASSIFICATION	7.134085865147123E-8	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999997132391512	WITHOUT_CLASSIFICATION	2.8676084891227853E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.999995815676904	WITHOUT_CLASSIFICATION	4.184323096019832E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999862400524371	WITHOUT_CLASSIFICATION	1.3759947562964614E-5	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999971285755129	WITHOUT_CLASSIFICATION	2.871424487126099E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999923025113909	WITHOUT_CLASSIFICATION	7.697488608988069E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999984421891208	WITHOUT_CLASSIFICATION	1.5578108790832596E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9998654836656667	WITHOUT_CLASSIFICATION	1.3451633433333142E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999968396735271	WITHOUT_CLASSIFICATION	3.160326472751467E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999988249284784	WITHOUT_CLASSIFICATION	1.1750715216709415E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999435080901293	WITHOUT_CLASSIFICATION	5.6491909870763725E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999984033805621	WITHOUT_CLASSIFICATION	1.596619437866368E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999667943900777	WITHOUT_CLASSIFICATION	3.320560992232714E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999977370547998	WITHOUT_CLASSIFICATION	2.2629452002086014E-6	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.999973651589446	WITHOUT_CLASSIFICATION	2.6348410554071038E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9984253650771862	WITHOUT_CLASSIFICATION	0.0015746349228137832	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9997243031538312	WITHOUT_CLASSIFICATION	2.7569684616876757E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999715295833832	WITHOUT_CLASSIFICATION	2.8470416616810458E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999562378514519	WITHOUT_CLASSIFICATION	4.3762148548185314E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999989269952365	WITHOUT_CLASSIFICATION	1.0730047635804316E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999990636955457	WITHOUT_CLASSIFICATION	9.363044543708211E-7	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999930890559415	WITHOUT_CLASSIFICATION	6.910944058396908E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.999999971590555	WITHOUT_CLASSIFICATION	2.8409445001829435E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999917314555	WITHOUT_CLASSIFICATION	8.268544533683334E-9	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999977191948095	WITHOUT_CLASSIFICATION	2.2808051904954717E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999748158125173	WITHOUT_CLASSIFICATION	2.5184187482617767E-5	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999742259130568	WITHOUT_CLASSIFICATION	2.577408694317818E-5	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9713092821362774	WITHOUT_CLASSIFICATION	0.028690717863722556	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9895235833526882	WITHOUT_CLASSIFICATION	0.01047641664731173	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9998463589438472	WITHOUT_CLASSIFICATION	1.536410561526845E-4	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999999788583221	WITHOUT_CLASSIFICATION	2.1141677885693233E-8	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999713507807	WITHOUT_CLASSIFICATION	2.8649219329333657E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999998367271796	WITHOUT_CLASSIFICATION	1.6327282027517146E-7	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999955679807103	WITHOUT_CLASSIFICATION	4.432019289727228E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9998620633375463	WITHOUT_CLASSIFICATION	1.379366624536078E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9999110855330251	WITHOUT_CLASSIFICATION	8.891446697492739E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999713507807	WITHOUT_CLASSIFICATION	2.8649219329333657E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999998367271796	WITHOUT_CLASSIFICATION	1.6327282027517146E-7	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998165944578	WITHOUT_CLASSIFICATION	1.834055421584564E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999998286561644	WITHOUT_CLASSIFICATION	1.713438355183131E-7	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999994595118987	WITHOUT_CLASSIFICATION	5.404881013787655E-7	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999999826734525	WITHOUT_CLASSIFICATION	1.7326547491881063E-8	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999990429532434	WITHOUT_CLASSIFICATION	9.57046756593404E-7	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999998718618273	WITHOUT_CLASSIFICATION	1.281381727886076E-7	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999998685701497	WITHOUT_CLASSIFICATION	1.3142985035358172E-7	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999996341424495	WITHOUT_CLASSIFICATION	3.6585755045971885E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.999999506632946	WITHOUT_CLASSIFICATION	4.933670539434803E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999998789029649	WITHOUT_CLASSIFICATION	1.2109703507834614E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.999999959615936	WITHOUT_CLASSIFICATION	4.038406400417036E-8	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.999999924702911	WITHOUT_CLASSIFICATION	7.529708898211362E-8	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999882362298566	WITHOUT_CLASSIFICATION	1.1763770143498268E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999993722577661	WITHOUT_CLASSIFICATION	6.277422339250384E-7	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999942726489278	WITHOUT_CLASSIFICATION	5.72735107220477E-6	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999966496459122	WITHOUT_CLASSIFICATION	3.350354087978636E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999922844455458	WITHOUT_CLASSIFICATION	7.715554454206114E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998806383183306	WITHOUT_CLASSIFICATION	1.1936168166936088E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999998118232206	WITHOUT_CLASSIFICATION	1.8817677937840424E-7	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999812897315588	WITHOUT_CLASSIFICATION	1.8710268441335223E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999963440002662	WITHOUT_CLASSIFICATION	3.65599973385745E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999954920505371	WITHOUT_CLASSIFICATION	4.507949463003876E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999923910876288	WITHOUT_CLASSIFICATION	7.6089123711886565E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999980327072885	WITHOUT_CLASSIFICATION	1.9672927114989407E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999993859754397	WITHOUT_CLASSIFICATION	6.140245603948104E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999990678666717	WITHOUT_CLASSIFICATION	9.32133328232523E-7	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9996445758359649	WITHOUT_CLASSIFICATION	3.5542416403520465E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9982662170725008	WITHOUT_CLASSIFICATION	0.001733782927499239	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9998735083999173	WITHOUT_CLASSIFICATION	1.264916000826293E-4	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999827859627751	WITHOUT_CLASSIFICATION	1.7214037224933275E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999939070281365	WITHOUT_CLASSIFICATION	6.0929718634530754E-6	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999413102814432	WITHOUT_CLASSIFICATION	5.8689718556880785E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999989913319477	WITHOUT_CLASSIFICATION	1.008668052231088E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999997833265339	WITHOUT_CLASSIFICATION	2.1667346603225247E-7	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999999569381806	WITHOUT_CLASSIFICATION	4.3061819498667755E-8	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999966540699459	WITHOUT_CLASSIFICATION	3.345930054120482E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.999994660588666	WITHOUT_CLASSIFICATION	5.339411333924397E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999999045462257	WITHOUT_CLASSIFICATION	9.545377435786164E-8	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999996680387534	WITHOUT_CLASSIFICATION	3.319612465944906E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.999999976014444	WITHOUT_CLASSIFICATION	2.39855559653461E-8	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.99999997781337	WITHOUT_CLASSIFICATION	2.2186629956204416E-8	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999970694277802	WITHOUT_CLASSIFICATION	2.930572219849242E-6	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999997295575157	WITHOUT_CLASSIFICATION	2.704424843125499E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999938869377137	WITHOUT_CLASSIFICATION	6.113062286262919E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999977202191228	WITHOUT_CLASSIFICATION	2.2797808771961226E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999977202191228	WITHOUT_CLASSIFICATION	2.2797808771961226E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999992862828283	WITHOUT_CLASSIFICATION	7.13717171764674E-7	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999989684048476	WITHOUT_CLASSIFICATION	1.031595152413138E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999988094446822	WITHOUT_CLASSIFICATION	1.1905553178647909E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999997817978821	WITHOUT_CLASSIFICATION	2.1820211789710034E-7	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999996148736462	WITHOUT_CLASSIFICATION	3.8512635387058286E-7	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999995883300586	WITHOUT_CLASSIFICATION	4.116699413817636E-7	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999994503965792	WITHOUT_CLASSIFICATION	5.49603420792092E-7	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999991881380782	WITHOUT_CLASSIFICATION	8.11861921756093E-7	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999431992343671	WITHOUT_CLASSIFICATION	5.6800765632937026E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988215926664	WITHOUT_CLASSIFICATION	1.1784073335674363E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998127879671	WITHOUT_CLASSIFICATION	1.8721203291697066E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999991081703201	WITHOUT_CLASSIFICATION	8.91829679944099E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999990615309349	WITHOUT_CLASSIFICATION	9.384690650195713E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999990615309349	WITHOUT_CLASSIFICATION	9.384690650195713E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999997569672379	WITHOUT_CLASSIFICATION	2.4303276206722084E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999999473258201	WITHOUT_CLASSIFICATION	5.267417995975154E-8	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999999400546871	WITHOUT_CLASSIFICATION	5.994531294422448E-8	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999988656158265	WITHOUT_CLASSIFICATION	1.1343841734377716E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999999976641785	WITHOUT_CLASSIFICATION	2.3358215941667992E-9	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999826199177	WITHOUT_CLASSIFICATION	1.738008228501903E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997756325952	WITHOUT_CLASSIFICATION	2.2436740485427378E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999918324854326	WITHOUT_CLASSIFICATION	8.167514567465753E-6	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999992764530229	WITHOUT_CLASSIFICATION	7.2354697702181E-7	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999996149409675	WITHOUT_CLASSIFICATION	3.850590324962443E-7	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999995393858925	WITHOUT_CLASSIFICATION	4.606141075095822E-7	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999949494699852	WITHOUT_CLASSIFICATION	5.050530014779791E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999999980905188	WITHOUT_CLASSIFICATION	1.9094812237840787E-9	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999854945152191	WITHOUT_CLASSIFICATION	1.4505484780817078E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.999999761151748	WITHOUT_CLASSIFICATION	2.388482519523496E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999999320240595	WITHOUT_CLASSIFICATION	6.797594051373107E-8	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999999423394239	WITHOUT_CLASSIFICATION	5.766057614451177E-8	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999999430540052	WITHOUT_CLASSIFICATION	5.694599481093469E-8	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.999999989882239	WITHOUT_CLASSIFICATION	1.0117760985330756E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999970206329	WITHOUT_CLASSIFICATION	2.97936718340613E-9	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.99999998624527	WITHOUT_CLASSIFICATION	1.3754730107870575E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999457671106	WITHOUT_CLASSIFICATION	5.4232889381027356E-8	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9998873953903006	WITHOUT_CLASSIFICATION	1.126046096994529E-4	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999992319171441	WITHOUT_CLASSIFICATION	7.680828558489386E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9998689206711572	WITHOUT_CLASSIFICATION	1.3107932884289674E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.999999882434518	WITHOUT_CLASSIFICATION	1.1756548208002089E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999994095173048	WITHOUT_CLASSIFICATION	5.904826951083628E-7	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999991310535498	WITHOUT_CLASSIFICATION	8.689464503139337E-7	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999990460634364	WITHOUT_CLASSIFICATION	9.539365636099572E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999999102550153	WITHOUT_CLASSIFICATION	8.974498466535282E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999999776824621	WITHOUT_CLASSIFICATION	2.2317537982452607E-8	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.999999997033871	WITHOUT_CLASSIFICATION	2.966129105629778E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.999999409258487	WITHOUT_CLASSIFICATION	5.907415130293546E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999557390541	WITHOUT_CLASSIFICATION	4.426094599553388E-8	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999790467271008	WITHOUT_CLASSIFICATION	2.0953272899209836E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.999999802856902	WITHOUT_CLASSIFICATION	1.9714309796172196E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.99999978048295	WITHOUT_CLASSIFICATION	2.1951704989404326E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999840208734864	WITHOUT_CLASSIFICATION	1.5979126513646677E-5	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999998591443923	WITHOUT_CLASSIFICATION	1.4085560769599194E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999999105235142	WITHOUT_CLASSIFICATION	8.947648582827665E-8	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999994143162338	WITHOUT_CLASSIFICATION	5.856837661013251E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999663760256	WITHOUT_CLASSIFICATION	3.362397445896913E-8	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999998878781519	WITHOUT_CLASSIFICATION	1.1212184806502235E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999964054459994	WITHOUT_CLASSIFICATION	3.5945540004998865E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999964054459994	WITHOUT_CLASSIFICATION	3.5945540004998865E-6	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999999436037139	WITHOUT_CLASSIFICATION	5.639628601288959E-8	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999956280462	WITHOUT_CLASSIFICATION	4.371953860155061E-9	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999998459233523	WITHOUT_CLASSIFICATION	1.540766477078415E-7	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999999668410304	WITHOUT_CLASSIFICATION	3.315896947133447E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999751735638	WITHOUT_CLASSIFICATION	2.482643627909988E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999999974705126	WITHOUT_CLASSIFICATION	2.529487485126954E-9	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999997090885506	WITHOUT_CLASSIFICATION	2.9091144930166974E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999786287585849	WITHOUT_CLASSIFICATION	2.1371241415092363E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999999083798797	WITHOUT_CLASSIFICATION	9.162012034892892E-8	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999999603812001	WITHOUT_CLASSIFICATION	3.9618799886411586E-8	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999978664041	WITHOUT_CLASSIFICATION	2.1335958075467195E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.999997108427259	WITHOUT_CLASSIFICATION	2.8915727410431873E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999793380626	WITHOUT_CLASSIFICATION	2.0661937386243215E-8	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999998717255977	WITHOUT_CLASSIFICATION	1.2827440220381042E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999663760256	WITHOUT_CLASSIFICATION	3.362397445896913E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999751735638	WITHOUT_CLASSIFICATION	2.482643627909988E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999998944356724	WITHOUT_CLASSIFICATION	1.0556432756328984E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999989441365729	WITHOUT_CLASSIFICATION	1.0558634271899682E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999999942930732	WITHOUT_CLASSIFICATION	5.706926733419706E-9	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999985156620488	WITHOUT_CLASSIFICATION	1.4843379512353477E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.999999386201532	WITHOUT_CLASSIFICATION	6.137984679948132E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999900377891958	WITHOUT_CLASSIFICATION	9.962210804063305E-6	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999999382226948	WITHOUT_CLASSIFICATION	6.177730517176974E-8	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999532602409	WITHOUT_CLASSIFICATION	4.673975909896948E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999653933499668	WITHOUT_CLASSIFICATION	3.46066500332664E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996879653188	WITHOUT_CLASSIFICATION	3.1203468122002857E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999939963216649	WITHOUT_CLASSIFICATION	6.0036783351670295E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997967065091	WITHOUT_CLASSIFICATION	2.0329349095645912E-7	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999967449389072	WITHOUT_CLASSIFICATION	3.255061092825159E-6	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999977087200137	WITHOUT_CLASSIFICATION	2.2912799862877164E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9998215679302495	WITHOUT_CLASSIFICATION	1.7843206975063099E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999998200918386	WITHOUT_CLASSIFICATION	1.7990816134076175E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9961029339688204	WITHOUT_CLASSIFICATION	0.003897066031179445	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999930464662585	WITHOUT_CLASSIFICATION	6.9535337415295945E-6	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.999999790497925	WITHOUT_CLASSIFICATION	2.0950207494219823E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999995713457575	WITHOUT_CLASSIFICATION	4.286542425981289E-7	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.999998461963367	WITHOUT_CLASSIFICATION	1.5380366331361577E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999999993253627	WITHOUT_CLASSIFICATION	6.746372962014577E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999722283783	WITHOUT_CLASSIFICATION	2.7771621632515415E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999997812719656	WITHOUT_CLASSIFICATION	2.187280342760379E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999997765354388	WITHOUT_CLASSIFICATION	2.2346456119428084E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999903215544	WITHOUT_CLASSIFICATION	9.678445482263839E-9	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999999915082834	WITHOUT_CLASSIFICATION	8.49171655715741E-9	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999992434192742	WITHOUT_CLASSIFICATION	7.565807257797823E-7	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999982442037127	WITHOUT_CLASSIFICATION	1.755796287249193E-6	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999971829941589	WITHOUT_CLASSIFICATION	2.8170058411555786E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999981712673333	WITHOUT_CLASSIFICATION	1.8287326667033688E-6	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999949603077	WITHOUT_CLASSIFICATION	5.03969236596347E-9	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999982864987824	WITHOUT_CLASSIFICATION	1.7135012176756607E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999999675819673	WITHOUT_CLASSIFICATION	3.241803275607848E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999999541811341	WITHOUT_CLASSIFICATION	4.581886593964004E-8	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999999329060669	WITHOUT_CLASSIFICATION	6.709393316385672E-8	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.999999980018453	WITHOUT_CLASSIFICATION	1.9981546986533272E-8	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999999740754866	WITHOUT_CLASSIFICATION	2.592451335794895E-8	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999998976292643	WITHOUT_CLASSIFICATION	1.0237073566816048E-7	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999953235626702	WITHOUT_CLASSIFICATION	4.676437329791294E-6	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999481897300802	WITHOUT_CLASSIFICATION	5.181026991980628E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9991873507231913	WITHOUT_CLASSIFICATION	8.126492768087541E-4	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999998961530272	WITHOUT_CLASSIFICATION	1.0384697284050174E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999995071372978	WITHOUT_CLASSIFICATION	4.928627021451875E-7	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999979996767074	WITHOUT_CLASSIFICATION	2.0003232925138656E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999997947560241	WITHOUT_CLASSIFICATION	2.052439759773963E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999933934619747	WITHOUT_CLASSIFICATION	6.606538025271017E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999960595095435	WITHOUT_CLASSIFICATION	3.9404904565500944E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999797597812857	WITHOUT_CLASSIFICATION	2.0240218714275595E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999986353020198	WITHOUT_CLASSIFICATION	1.3646979801573306E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999996976145007	WITHOUT_CLASSIFICATION	3.0238549927792625E-7	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999999699035879	WITHOUT_CLASSIFICATION	3.009641212174267E-8	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999982084254427	WITHOUT_CLASSIFICATION	1.7915745572644736E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999988536285574	WITHOUT_CLASSIFICATION	1.1463714425774157E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999326605135387	WITHOUT_CLASSIFICATION	6.733948646134942E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999999015341035	WITHOUT_CLASSIFICATION	9.846589659150924E-8	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999988662447	WITHOUT_CLASSIFICATION	1.133755279819446E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999977728152665	WITHOUT_CLASSIFICATION	2.227184733412274E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999679613109	WITHOUT_CLASSIFICATION	3.2038689192084914E-8	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999827103308576	WITHOUT_CLASSIFICATION	1.728966914245409E-5	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999997311277514	WITHOUT_CLASSIFICATION	2.6887224855928844E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999977728152665	WITHOUT_CLASSIFICATION	2.227184733412274E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.999991095096329	WITHOUT_CLASSIFICATION	8.904903670941745E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999987507207893	WITHOUT_CLASSIFICATION	1.2492792107072624E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999972894660627	WITHOUT_CLASSIFICATION	2.7105339372626364E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999510152087	WITHOUT_CLASSIFICATION	4.898479127304977E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.999999679871837	WITHOUT_CLASSIFICATION	3.2012816297112587E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999982338753	WITHOUT_CLASSIFICATION	1.7661246285152115E-9	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999999402852854	WITHOUT_CLASSIFICATION	5.971471468669677E-8	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999998878873113	WITHOUT_CLASSIFICATION	1.1211268876017377E-7	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999995871101856	WITHOUT_CLASSIFICATION	4.1288981450950546E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999999764959902	WITHOUT_CLASSIFICATION	2.3504009903951764E-8	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.999999135259345	WITHOUT_CLASSIFICATION	8.647406550233323E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999706537566	WITHOUT_CLASSIFICATION	2.934624349379133E-8	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999990068477026	WITHOUT_CLASSIFICATION	9.931522974474584E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999973446485485	WITHOUT_CLASSIFICATION	2.6553514514940737E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999999455244	WITHOUT_CLASSIFICATION	5.4475583377425374E-11	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999999897487111	WITHOUT_CLASSIFICATION	1.025128885478029E-8	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999983787442	WITHOUT_CLASSIFICATION	1.6212557359584694E-9	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999921503794966	WITHOUT_CLASSIFICATION	7.849620503274876E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999951982175814	WITHOUT_CLASSIFICATION	4.801782418560633E-6	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999947382309203	WITHOUT_CLASSIFICATION	5.261769079617579E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999986825782874	WITHOUT_CLASSIFICATION	1.3174217126815744E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999673245208045	WITHOUT_CLASSIFICATION	3.267547919546022E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999988736652543	WITHOUT_CLASSIFICATION	1.1263347456869467E-6	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999997624709543	WITHOUT_CLASSIFICATION	2.3752904563520437E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999704647221	WITHOUT_CLASSIFICATION	2.9535277860537923E-8	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999825296689	WITHOUT_CLASSIFICATION	1.7470331111312186E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.99999989955723	WITHOUT_CLASSIFICATION	1.004427700065796E-7	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999986921859859	WITHOUT_CLASSIFICATION	1.3078140141118393E-6	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9605844561908564	WITHOUT_CLASSIFICATION	0.03941554380914355	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999649837434	WITHOUT_CLASSIFICATION	3.5016256580380586E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999930059227885	WITHOUT_CLASSIFICATION	6.994077211446443E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999979802269123	WITHOUT_CLASSIFICATION	2.0197730876047375E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999997994633114	WITHOUT_CLASSIFICATION	2.0053668869180418E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.99999989955723	WITHOUT_CLASSIFICATION	1.004427700065796E-7	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999965234186249	WITHOUT_CLASSIFICATION	3.4765813752404457E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999965234186249	WITHOUT_CLASSIFICATION	3.4765813752404457E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999868680090934	WITHOUT_CLASSIFICATION	1.3131990906579145E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.99999989955723	WITHOUT_CLASSIFICATION	1.004427700065796E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.99999989955723	WITHOUT_CLASSIFICATION	1.004427700065796E-7	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.999999568953145	WITHOUT_CLASSIFICATION	4.310468549337918E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999631843022	WITHOUT_CLASSIFICATION	3.681569775752848E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999365231219	WITHOUT_CLASSIFICATION	6.34768781055256E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999999365231219	WITHOUT_CLASSIFICATION	6.34768781055256E-8	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999379389971854	WITHOUT_CLASSIFICATION	6.206100281456321E-5	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999999875238741	WITHOUT_CLASSIFICATION	1.2476125888925771E-8	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999967319525835	WITHOUT_CLASSIFICATION	3.2680474164543035E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999951982175814	WITHOUT_CLASSIFICATION	4.801782418560633E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999951982175814	WITHOUT_CLASSIFICATION	4.801782418560633E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999379389971854	WITHOUT_CLASSIFICATION	6.206100281456321E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999857977113	WITHOUT_CLASSIFICATION	1.4202288559737921E-8	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999970853040714	WITHOUT_CLASSIFICATION	2.9146959286109037E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999998121664041	WITHOUT_CLASSIFICATION	1.8783359590788723E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999982654335	WITHOUT_CLASSIFICATION	1.7345664232376434E-9	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999940115576065	WITHOUT_CLASSIFICATION	5.988442393477527E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999981619729432	WITHOUT_CLASSIFICATION	1.8380270567854432E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999996235003024	WITHOUT_CLASSIFICATION	3.7649969762686307E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999978203576	WITHOUT_CLASSIFICATION	2.1796422713678024E-9	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999942221087319	WITHOUT_CLASSIFICATION	5.777891268056948E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999981289346032	WITHOUT_CLASSIFICATION	1.8710653968729613E-6	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999988357511905	WITHOUT_CLASSIFICATION	1.1642488095199716E-6	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999996614643206	WITHOUT_CLASSIFICATION	3.3853567930583597E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999866147497979	WITHOUT_CLASSIFICATION	1.3385250202184537E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999974980492952	WITHOUT_CLASSIFICATION	2.5019507049618142E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999981726229854	WITHOUT_CLASSIFICATION	1.827377014560251E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999996127231937	WITHOUT_CLASSIFICATION	3.872768062722094E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999991898413897	WITHOUT_CLASSIFICATION	8.101586103220026E-7	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.999998096427868	WITHOUT_CLASSIFICATION	1.9035721321351225E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9968414341189608	WITHOUT_CLASSIFICATION	0.0031585658810392436	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999894379962182	WITHOUT_CLASSIFICATION	1.05620037818384E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999849022052161	WITHOUT_CLASSIFICATION	1.509779478381362E-5	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999999736267666	WITHOUT_CLASSIFICATION	2.637323331818733E-8	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999999832017766	WITHOUT_CLASSIFICATION	1.6798223329338633E-8	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999675152089026	WITHOUT_CLASSIFICATION	3.2484791097353433E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999998140870743	WITHOUT_CLASSIFICATION	1.8591292564313533E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999973142546483	WITHOUT_CLASSIFICATION	2.685745351726838E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999998110661019	WITHOUT_CLASSIFICATION	1.889338981755189E-7	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999374109854063	WITHOUT_CLASSIFICATION	6.258901459368616E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999997799606547	WITHOUT_CLASSIFICATION	2.2003934527006357E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999997888038278	WITHOUT_CLASSIFICATION	2.1119617228977293E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999542795311255	WITHOUT_CLASSIFICATION	4.5720468874438925E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9996933246426148	WITHOUT_CLASSIFICATION	3.0667535738507234E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999997653631273	WITHOUT_CLASSIFICATION	2.3463687275288362E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999990018174981	WITHOUT_CLASSIFICATION	9.981825019085582E-7	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999705490025	WITHOUT_CLASSIFICATION	2.9450997625201165E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999994142307725	WITHOUT_CLASSIFICATION	5.857692274861961E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999982859754591	WITHOUT_CLASSIFICATION	1.7140245409524906E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999795004372241	WITHOUT_CLASSIFICATION	2.0499562775962064E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999999144794675	WITHOUT_CLASSIFICATION	8.552053256925937E-8	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999880205563013	WITHOUT_CLASSIFICATION	1.1979443698786867E-5	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.999999792836782	WITHOUT_CLASSIFICATION	2.0716321807833094E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999972124970975	WITHOUT_CLASSIFICATION	2.7875029025135376E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999999872989863	WITHOUT_CLASSIFICATION	1.2701013585808072E-8	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999953721466104	WITHOUT_CLASSIFICATION	4.627853389718313E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999993366585365	WITHOUT_CLASSIFICATION	6.633414636480337E-7	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.999997398339791	WITHOUT_CLASSIFICATION	2.6016602090462836E-6	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.99999286882071	WITHOUT_CLASSIFICATION	7.131179290041372E-6	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999997941239281	WITHOUT_CLASSIFICATION	2.058760717597732E-7	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999994212317496	WITHOUT_CLASSIFICATION	5.787682503298851E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.999996397241302	WITHOUT_CLASSIFICATION	3.6027586981341805E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999958921429071	WITHOUT_CLASSIFICATION	4.10785709300453E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999974259982398	WITHOUT_CLASSIFICATION	2.574001760154075E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999997750337074	WITHOUT_CLASSIFICATION	2.2496629267637985E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999452093958575	WITHOUT_CLASSIFICATION	5.4790604142501016E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999989268258372	WITHOUT_CLASSIFICATION	1.0731741628312763E-6	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999961162387596	WITHOUT_CLASSIFICATION	3.883761240356627E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999943907293349	WITHOUT_CLASSIFICATION	5.6092706650735365E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999926803656741	WITHOUT_CLASSIFICATION	7.319634325829851E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999998359028762	WITHOUT_CLASSIFICATION	1.6409712387002718E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999991240011676	WITHOUT_CLASSIFICATION	8.759988323831334E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999999602367	WITHOUT_CLASSIFICATION	3.976342099067618E-11	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999892802025435	WITHOUT_CLASSIFICATION	1.0719797456475092E-5	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999824811350263	WITHOUT_CLASSIFICATION	1.751886497365595E-5	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999997067790101	WITHOUT_CLASSIFICATION	2.932209899105169E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.999939770093076	WITHOUT_CLASSIFICATION	6.022990692395591E-5	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999995579583635	WITHOUT_CLASSIFICATION	4.4204163658263994E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.999999921941925	WITHOUT_CLASSIFICATION	7.805807495719521E-8	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999778417805998	WITHOUT_CLASSIFICATION	2.2158219400227607E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999996475903751	WITHOUT_CLASSIFICATION	3.524096248273915E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999998173404743	WITHOUT_CLASSIFICATION	1.8265952577576973E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999821171996458	WITHOUT_CLASSIFICATION	1.7882800354274913E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999989709464432	WITHOUT_CLASSIFICATION	1.0290535567399279E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999998853485216	WITHOUT_CLASSIFICATION	1.1465147840032837E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999879661614468	WITHOUT_CLASSIFICATION	1.203383855324483E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.99999996373675	WITHOUT_CLASSIFICATION	3.626324993414548E-8	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.99999972064521	WITHOUT_CLASSIFICATION	2.7935479001541063E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.99999972064521	WITHOUT_CLASSIFICATION	2.7935479001541063E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999966478746609	WITHOUT_CLASSIFICATION	3.3521253390806703E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9988074385260526	WITHOUT_CLASSIFICATION	0.0011925614739474678	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999978707580468	WITHOUT_CLASSIFICATION	2.1292419532625285E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9968555351044548	WITHOUT_CLASSIFICATION	0.0031444648955451303	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999974028130413	WITHOUT_CLASSIFICATION	2.597186958633535E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999998668784964	WITHOUT_CLASSIFICATION	1.3312150360098014E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9997176249758093	WITHOUT_CLASSIFICATION	2.8237502419068507E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999999861546915	WITHOUT_CLASSIFICATION	1.3845308471673015E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9998761880474492	WITHOUT_CLASSIFICATION	1.2381195255083455E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.999999999602131	WITHOUT_CLASSIFICATION	3.978689445394602E-10	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999892609097	WITHOUT_CLASSIFICATION	1.0739090288679039E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999998180839502	WITHOUT_CLASSIFICATION	1.8191604981519684E-7	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999999230612819	WITHOUT_CLASSIFICATION	7.693871805918039E-8	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999989265711	WITHOUT_CLASSIFICATION	1.0734288607775773E-9	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999999903015	WITHOUT_CLASSIFICATION	9.69845945702375E-12	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999999557058673	WITHOUT_CLASSIFICATION	4.4294132745261636E-8	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999999261954815	WITHOUT_CLASSIFICATION	7.380451841334405E-8	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999989897851	WITHOUT_CLASSIFICATION	1.0102149883536563E-9	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999940109533536	WITHOUT_CLASSIFICATION	5.989046646326305E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999946780809474	WITHOUT_CLASSIFICATION	5.321919052470522E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999981602531665	WITHOUT_CLASSIFICATION	1.8397468335388236E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999935812776358	WITHOUT_CLASSIFICATION	6.418722364175652E-6	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999652445291255	WITHOUT_CLASSIFICATION	3.475547087453829E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.999996760863518	WITHOUT_CLASSIFICATION	3.239136482122588E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9996302682643085	WITHOUT_CLASSIFICATION	3.697317356915987E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.999999868987336	WITHOUT_CLASSIFICATION	1.3101266399926396E-7	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9998370334788312	WITHOUT_CLASSIFICATION	1.629665211687201E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999894114061196	WITHOUT_CLASSIFICATION	1.0588593880389308E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.999999149702914	WITHOUT_CLASSIFICATION	8.502970859680739E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999946780809474	WITHOUT_CLASSIFICATION	5.321919052470522E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999935812776358	WITHOUT_CLASSIFICATION	6.418722364175652E-6	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999709469932	WITHOUT_CLASSIFICATION	2.9053006822574273E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997863124207	WITHOUT_CLASSIFICATION	2.1368757936007475E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.999999918640992	WITHOUT_CLASSIFICATION	8.135900798741882E-8	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9999982370726407	WITHOUT_CLASSIFICATION	1.7629273593083775E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.999999726175934	WITHOUT_CLASSIFICATION	2.7382406596650925E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999999469452237	WITHOUT_CLASSIFICATION	5.305477626457281E-8	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999922487448972	WITHOUT_CLASSIFICATION	7.75125510275171E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999597315286171	WITHOUT_CLASSIFICATION	4.026847138288009E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999917803427842	WITHOUT_CLASSIFICATION	8.219657215756193E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999949379926573	WITHOUT_CLASSIFICATION	5.062007342723336E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999962457905959	WITHOUT_CLASSIFICATION	3.754209404047578E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999983736498709	WITHOUT_CLASSIFICATION	1.6263501291912362E-6	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999992473613339	WITHOUT_CLASSIFICATION	7.526386660158012E-7	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999991165096368	WITHOUT_CLASSIFICATION	8.834903632633657E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999997390360394	WITHOUT_CLASSIFICATION	2.609639605119911E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.99999984424111	WITHOUT_CLASSIFICATION	1.5575888994991763E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999992491452787	WITHOUT_CLASSIFICATION	7.50854721372864E-7	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999751495395337	WITHOUT_CLASSIFICATION	2.4850460466390333E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999993717221892	WITHOUT_CLASSIFICATION	6.282778107818586E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999825296689	WITHOUT_CLASSIFICATION	1.7470331111312186E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.999999867430167	WITHOUT_CLASSIFICATION	1.3256983299228364E-7	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999905620934	WITHOUT_CLASSIFICATION	9.437906599611294E-9	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999999748133961	WITHOUT_CLASSIFICATION	2.518660385446711E-8	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999998407847592	WITHOUT_CLASSIFICATION	1.592152407386832E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999998070617429	WITHOUT_CLASSIFICATION	1.9293825712392127E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999979101182745	WITHOUT_CLASSIFICATION	2.0898817254929505E-6	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999967693768064	WITHOUT_CLASSIFICATION	3.2306231937387984E-6	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999996658169648	WITHOUT_CLASSIFICATION	3.341830352307315E-7	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999998658966944	WITHOUT_CLASSIFICATION	1.3410330562607124E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999999972124815	WITHOUT_CLASSIFICATION	2.7875185258017616E-9	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999999337966445	WITHOUT_CLASSIFICATION	6.620335554914852E-8	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999991677081723	WITHOUT_CLASSIFICATION	8.32291827742866E-7	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999998431368001	WITHOUT_CLASSIFICATION	1.568631998358905E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999996988247227	WITHOUT_CLASSIFICATION	3.0117527721499456E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999942796154178	WITHOUT_CLASSIFICATION	5.720384582243379E-6	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999998468637954	WITHOUT_CLASSIFICATION	1.5313620461162952E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999596755635	WITHOUT_CLASSIFICATION	4.03244364626603E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999998455830734	WITHOUT_CLASSIFICATION	1.5441692658038377E-7	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999948442877	WITHOUT_CLASSIFICATION	5.155712336902295E-9	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999999246000183	WITHOUT_CLASSIFICATION	7.539998168814644E-8	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999911963364286	WITHOUT_CLASSIFICATION	8.803663571384581E-6	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999964539229308	WITHOUT_CLASSIFICATION	3.5460770692527864E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999980765899347	WITHOUT_CLASSIFICATION	1.9234100653252065E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999992620516918	WITHOUT_CLASSIFICATION	7.379483082294272E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999992729497572	WITHOUT_CLASSIFICATION	7.27050242767714E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9988173366981712	WITHOUT_CLASSIFICATION	0.0011826633018287792	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999998324049978	WITHOUT_CLASSIFICATION	1.6759500220766812E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999368564133488	WITHOUT_CLASSIFICATION	6.3143586651149E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999999755679974	WITHOUT_CLASSIFICATION	2.4432002645979732E-8	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999995221360939	WITHOUT_CLASSIFICATION	4.778639060994018E-7	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999995476849951	WITHOUT_CLASSIFICATION	4.523150048841114E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999994859449214	WITHOUT_CLASSIFICATION	5.140550786136728E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999206583432	WITHOUT_CLASSIFICATION	7.934165675489143E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999971659373	WITHOUT_CLASSIFICATION	2.8340626770184556E-9	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999999828643006	WITHOUT_CLASSIFICATION	1.713569939203286E-8	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999958307195629	WITHOUT_CLASSIFICATION	4.169280437160051E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999972278532383	WITHOUT_CLASSIFICATION	2.772146761816041E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999991534912412	WITHOUT_CLASSIFICATION	8.465087587522263E-7	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999983232684089	WITHOUT_CLASSIFICATION	1.6767315911456095E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999921503794966	WITHOUT_CLASSIFICATION	7.849620503274876E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999944091162616	WITHOUT_CLASSIFICATION	5.590883738426913E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.999973296480727	WITHOUT_CLASSIFICATION	2.670351927302297E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999393041948	WITHOUT_CLASSIFICATION	6.069580515928575E-8	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999999393041948	WITHOUT_CLASSIFICATION	6.069580515928575E-8	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999735462924698	WITHOUT_CLASSIFICATION	2.6453707530178586E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999996323149564	WITHOUT_CLASSIFICATION	3.6768504364383567E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999986006034	WITHOUT_CLASSIFICATION	1.399396661683261E-9	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999982393649458	WITHOUT_CLASSIFICATION	1.7606350542404166E-6	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999979305517904	WITHOUT_CLASSIFICATION	2.0694482095795487E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999996687566991	WITHOUT_CLASSIFICATION	3.3124330089567233E-7	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999830834553	WITHOUT_CLASSIFICATION	1.691654471644423E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.998202909792322	WITHOUT_CLASSIFICATION	0.0017970902076780671	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999719489687908	WITHOUT_CLASSIFICATION	2.805103120907938E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999902774115034	WITHOUT_CLASSIFICATION	9.722588496628795E-6	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999997810792322	WITHOUT_CLASSIFICATION	2.1892076780934833E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999997708555323	WITHOUT_CLASSIFICATION	2.2914446765575822E-7	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999998084253571	WITHOUT_CLASSIFICATION	1.9157464302822215E-7	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999970977503446	WITHOUT_CLASSIFICATION	2.9022496553937803E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999985148187075	WITHOUT_CLASSIFICATION	1.4851812925539895E-6	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999980522456927	WITHOUT_CLASSIFICATION	1.9477543071945615E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999938390770957	WITHOUT_CLASSIFICATION	6.160922904311815E-6	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999685648106934	WITHOUT_CLASSIFICATION	3.1435189306512137E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999998734265739	WITHOUT_CLASSIFICATION	1.2657342607367256E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999815429790626	WITHOUT_CLASSIFICATION	1.845702093738721E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999999674299238	WITHOUT_CLASSIFICATION	3.257007621484443E-8	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.99999845344664	WITHOUT_CLASSIFICATION	1.5465533600146534E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999993046326374	WITHOUT_CLASSIFICATION	6.953673625888162E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999998456346628	WITHOUT_CLASSIFICATION	1.54365337153331E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999902886580574	WITHOUT_CLASSIFICATION	9.71134194259929E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999952058741567	WITHOUT_CLASSIFICATION	4.794125843332798E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.99999845344664	WITHOUT_CLASSIFICATION	1.5465533600146534E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999966716019278	WITHOUT_CLASSIFICATION	3.3283980720987056E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9996362484157163	WITHOUT_CLASSIFICATION	3.637515842836959E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999910961066715	WITHOUT_CLASSIFICATION	8.903893328434446E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999814832123888	WITHOUT_CLASSIFICATION	1.8516787611247225E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9939135596913321	WITHOUT_CLASSIFICATION	0.006086440308667883	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999995192055664	WITHOUT_CLASSIFICATION	4.807944335614114E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998729085993	WITHOUT_CLASSIFICATION	1.2709140078051818E-7	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999971894523	WITHOUT_CLASSIFICATION	2.8105477036594235E-9	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999818518913373	WITHOUT_CLASSIFICATION	1.8148108662818167E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997645127132	WITHOUT_CLASSIFICATION	2.354872867964036E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999480526465969	WITHOUT_CLASSIFICATION	5.194735340303005E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999999949347868	WITHOUT_CLASSIFICATION	5.065213201919432E-9	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999972694388547	WITHOUT_CLASSIFICATION	2.7305611453690583E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999608246093	WITHOUT_CLASSIFICATION	3.9175390789011975E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999999912039871	WITHOUT_CLASSIFICATION	8.796012926358829E-9	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999993218959008	WITHOUT_CLASSIFICATION	6.781040992807017E-7	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999938930044747	WITHOUT_CLASSIFICATION	6.106995525297478E-6	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999996106963897	WITHOUT_CLASSIFICATION	3.893036103258909E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999999775132983	WITHOUT_CLASSIFICATION	2.2486701738435057E-8	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999978661395874	WITHOUT_CLASSIFICATION	2.133860412617985E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999998459153701	WITHOUT_CLASSIFICATION	1.540846298495814E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.999999977314301	WITHOUT_CLASSIFICATION	2.2685699040835725E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999999717864706	WITHOUT_CLASSIFICATION	2.8213529439126926E-8	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999999893617394	WITHOUT_CLASSIFICATION	1.0638260645522414E-8	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999989785735802	WITHOUT_CLASSIFICATION	1.0214264197429594E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999836483915	WITHOUT_CLASSIFICATION	1.6351608492128356E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999908033811	WITHOUT_CLASSIFICATION	9.196618928880079E-9	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999988553544933	WITHOUT_CLASSIFICATION	1.1446455067302056E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999998671979902	WITHOUT_CLASSIFICATION	1.3280200988587802E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999999906010307	WITHOUT_CLASSIFICATION	9.398969184702987E-9	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999982159549693	WITHOUT_CLASSIFICATION	1.7840450306195126E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999999732947581	WITHOUT_CLASSIFICATION	2.6705241939134328E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999926798126116	WITHOUT_CLASSIFICATION	7.3201873884175265E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9939135596913321	WITHOUT_CLASSIFICATION	0.006086440308667883	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999995192055664	WITHOUT_CLASSIFICATION	4.807944335614114E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998729085993	WITHOUT_CLASSIFICATION	1.2709140078051818E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999818518913373	WITHOUT_CLASSIFICATION	1.8148108662818167E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997645127132	WITHOUT_CLASSIFICATION	2.354872867964036E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9606318578145235	WITHOUT_CLASSIFICATION	0.039368142185476476	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999775088803	WITHOUT_CLASSIFICATION	2.249111986371427E-8	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999976536972	WITHOUT_CLASSIFICATION	2.346302762696794E-9	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999962473286486	WITHOUT_CLASSIFICATION	3.7526713514919026E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9993074166631	WITHOUT_CLASSIFICATION	6.925833368999491E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.999996345077903	WITHOUT_CLASSIFICATION	3.654922097097926E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999998738783925	WITHOUT_CLASSIFICATION	1.2612160743436956E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.999831702817017	WITHOUT_CLASSIFICATION	1.6829718298289991E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999952070597246	WITHOUT_CLASSIFICATION	4.7929402754716135E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999996865849906	WITHOUT_CLASSIFICATION	3.134150094219769E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.999998911580919	WITHOUT_CLASSIFICATION	1.0884190810553599E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999998799490081	WITHOUT_CLASSIFICATION	1.2005099193427034E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999922130772522	WITHOUT_CLASSIFICATION	7.786922747937282E-6	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999923517551729	WITHOUT_CLASSIFICATION	7.648244827141594E-6	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999998685194332	WITHOUT_CLASSIFICATION	1.3148056675719216E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999998673871923	WITHOUT_CLASSIFICATION	1.3261280770007793E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999987937322	WITHOUT_CLASSIFICATION	1.2062677782770962E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999997813162688	WITHOUT_CLASSIFICATION	2.1868373130282164E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999985687286	WITHOUT_CLASSIFICATION	1.431271465802544E-9	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999905872472	WITHOUT_CLASSIFICATION	9.412752810060116E-9	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999998603555666	WITHOUT_CLASSIFICATION	1.3964443336976375E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999990695709657	WITHOUT_CLASSIFICATION	9.304290341919641E-7	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999881932967398	WITHOUT_CLASSIFICATION	1.1806703260179966E-5	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999996779220435	WITHOUT_CLASSIFICATION	3.2207795653389427E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999984252931854	WITHOUT_CLASSIFICATION	1.5747068146795623E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999986353020198	WITHOUT_CLASSIFICATION	1.3646979801573306E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999979101182745	WITHOUT_CLASSIFICATION	2.0898817254929505E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999995476849951	WITHOUT_CLASSIFICATION	4.523150048841114E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997645127132	WITHOUT_CLASSIFICATION	2.354872867964036E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999996835604206	WITHOUT_CLASSIFICATION	3.16439579399929E-7	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999335360765961	WITHOUT_CLASSIFICATION	6.646392340391864E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.999999998483505	WITHOUT_CLASSIFICATION	1.51649495041091E-9	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999804901753608	WITHOUT_CLASSIFICATION	1.95098246392104E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999804901753608	WITHOUT_CLASSIFICATION	1.95098246392104E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999722873748	WITHOUT_CLASSIFICATION	2.7712625231010456E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999998494537897	WITHOUT_CLASSIFICATION	1.505462102740653E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999999346741327	WITHOUT_CLASSIFICATION	6.532586723992319E-8	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999991969022951	WITHOUT_CLASSIFICATION	8.03097704751934E-7	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999997530303604	WITHOUT_CLASSIFICATION	2.469696396947812E-7	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999947220563172	WITHOUT_CLASSIFICATION	5.277943682730431E-6	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999999182213847	WITHOUT_CLASSIFICATION	8.177861536198545E-8	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999947590625348	WITHOUT_CLASSIFICATION	5.240937465256448E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999667411538459	WITHOUT_CLASSIFICATION	3.325884615402865E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999996173699306	WITHOUT_CLASSIFICATION	3.8263006945082584E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999987302761002	WITHOUT_CLASSIFICATION	1.2697238997325877E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999974785268289	WITHOUT_CLASSIFICATION	2.5214731711793098E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.999986818368563	WITHOUT_CLASSIFICATION	1.3181631436948249E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9996407727391113	WITHOUT_CLASSIFICATION	3.592272608886266E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999993799491275	WITHOUT_CLASSIFICATION	6.200508724839552E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999979114396457	WITHOUT_CLASSIFICATION	2.0885603542508104E-6	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999996108726206	WITHOUT_CLASSIFICATION	3.891273794528986E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999838785533	WITHOUT_CLASSIFICATION	1.6121446743634883E-8	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999975180532883	WITHOUT_CLASSIFICATION	2.481946711682985E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999978729680449	WITHOUT_CLASSIFICATION	2.1270319550088995E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999979114396457	WITHOUT_CLASSIFICATION	2.0885603542508104E-6	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999998190720037	WITHOUT_CLASSIFICATION	1.809279962597321E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.999999965370971	WITHOUT_CLASSIFICATION	3.4629028935769026E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.999999965370971	WITHOUT_CLASSIFICATION	3.4629028935769026E-8	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999838785533	WITHOUT_CLASSIFICATION	1.6121446743634883E-8	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999992233861	WITHOUT_CLASSIFICATION	7.766138999936549E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999985643507097	WITHOUT_CLASSIFICATION	1.4356492903226168E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999985643507097	WITHOUT_CLASSIFICATION	1.4356492903226168E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999905940262	WITHOUT_CLASSIFICATION	9.405973794244672E-9	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999999398628221	WITHOUT_CLASSIFICATION	6.013717788648414E-8	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9999113104081542	WITHOUT_CLASSIFICATION	8.868959184587158E-5	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999984272979883	WITHOUT_CLASSIFICATION	1.5727020116931647E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.999999912937827	WITHOUT_CLASSIFICATION	8.70621730205978E-8	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999962881680979	WITHOUT_CLASSIFICATION	3.7118319020088046E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999984962574944	WITHOUT_CLASSIFICATION	1.5037425056584009E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999831484177968	WITHOUT_CLASSIFICATION	1.6851582203244228E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999970100718125	WITHOUT_CLASSIFICATION	2.9899281873795845E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999978404525065	WITHOUT_CLASSIFICATION	2.159547493542833E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999993902267	WITHOUT_CLASSIFICATION	6.097734193366735E-10	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999974662743584	WITHOUT_CLASSIFICATION	2.5337256415191128E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9996630871572557	WITHOUT_CLASSIFICATION	3.3691284274428937E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999999935683366	WITHOUT_CLASSIFICATION	6.4316634639930475E-9	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9999352250933108	WITHOUT_CLASSIFICATION	6.477490668915996E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999998847834117	WITHOUT_CLASSIFICATION	1.1521658832532305E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999999600956629	WITHOUT_CLASSIFICATION	3.9904337017436765E-8	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999965701101902	WITHOUT_CLASSIFICATION	3.429889809816366E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999872103465598	WITHOUT_CLASSIFICATION	1.2789653440192005E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999945395156368	WITHOUT_CLASSIFICATION	5.4604843632074695E-6	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999996093512714	WITHOUT_CLASSIFICATION	3.90648728663575E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999998793974558	WITHOUT_CLASSIFICATION	1.2060254423423126E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.999998420637737	WITHOUT_CLASSIFICATION	1.579362262984836E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999667411538459	WITHOUT_CLASSIFICATION	3.325884615402865E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999995442797549	WITHOUT_CLASSIFICATION	4.55720245078913E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999857035275	WITHOUT_CLASSIFICATION	1.4296472531256677E-8	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999023069627	WITHOUT_CLASSIFICATION	9.769303727844972E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999981921740613	WITHOUT_CLASSIFICATION	1.807825938722523E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999659944212622	WITHOUT_CLASSIFICATION	3.400557873781646E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999998117716833	WITHOUT_CLASSIFICATION	1.8822831677738965E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999875901770608	WITHOUT_CLASSIFICATION	1.240982293913347E-5	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999118372419	WITHOUT_CLASSIFICATION	8.816275809575188E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999996157592739	WITHOUT_CLASSIFICATION	3.842407260839417E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999966647272693	WITHOUT_CLASSIFICATION	3.335272730686661E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.999999377444843	WITHOUT_CLASSIFICATION	6.225551569549024E-7	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999991949759695	WITHOUT_CLASSIFICATION	8.05024030454476E-7	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999834440492777	WITHOUT_CLASSIFICATION	1.655595072231399E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999705655487451	WITHOUT_CLASSIFICATION	2.9434451254893807E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.999998647341968	WITHOUT_CLASSIFICATION	1.3526580320025013E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999800316264	WITHOUT_CLASSIFICATION	1.9968373541368873E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999999877022469	WITHOUT_CLASSIFICATION	1.2297753138637248E-8	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.999993873288435	WITHOUT_CLASSIFICATION	6.126711564967336E-6	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999686392870437	WITHOUT_CLASSIFICATION	3.136071295633264E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999993435905702	WITHOUT_CLASSIFICATION	6.564094298158209E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998518312255	WITHOUT_CLASSIFICATION	1.4816877450035195E-7	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999940481202113	WITHOUT_CLASSIFICATION	5.9518797887171765E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9996007408996611	WITHOUT_CLASSIFICATION	3.992591003388107E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9998532020611913	WITHOUT_CLASSIFICATION	1.467979388086788E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999961772045574	WITHOUT_CLASSIFICATION	3.822795442599398E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999994307267134	WITHOUT_CLASSIFICATION	5.692732866142976E-7	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999999729594593	WITHOUT_CLASSIFICATION	2.7040540776378137E-8	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999993043534563	WITHOUT_CLASSIFICATION	6.956465437124299E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999996828975317	WITHOUT_CLASSIFICATION	3.1710246825840186E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.999997590960501	WITHOUT_CLASSIFICATION	2.4090394990673276E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999532822894992	WITHOUT_CLASSIFICATION	4.6717710500867545E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999990618609305	WITHOUT_CLASSIFICATION	9.381390695364672E-7	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9998515181619233	WITHOUT_CLASSIFICATION	1.4848183807679544E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9992003833709151	WITHOUT_CLASSIFICATION	7.996166290848842E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9998864179915088	WITHOUT_CLASSIFICATION	1.1358200849116488E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999998730013449	WITHOUT_CLASSIFICATION	1.2699865514777104E-7	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999438504309777	WITHOUT_CLASSIFICATION	5.6149569022248734E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999438504309777	WITHOUT_CLASSIFICATION	5.6149569022248734E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999930970485	WITHOUT_CLASSIFICATION	6.902951663322263E-9	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999975261241077	WITHOUT_CLASSIFICATION	2.473875892237002E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999913770262	WITHOUT_CLASSIFICATION	8.622973888420139E-9	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9995709688082551	WITHOUT_CLASSIFICATION	4.290311917448719E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999998524780325	WITHOUT_CLASSIFICATION	1.475219675602571E-7	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.99999347616357	WITHOUT_CLASSIFICATION	6.5238364299628275E-6	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999997442786327	WITHOUT_CLASSIFICATION	2.557213673334419E-7	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999995465196891	WITHOUT_CLASSIFICATION	4.534803108326607E-7	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999912126227958	WITHOUT_CLASSIFICATION	8.787377204186181E-6	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.999999567166248	WITHOUT_CLASSIFICATION	4.328337519961949E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999997899812632	WITHOUT_CLASSIFICATION	2.1001873692615535E-7	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999539314489316	WITHOUT_CLASSIFICATION	4.6068551068388634E-5	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999999869542258	WITHOUT_CLASSIFICATION	1.3045774173264044E-8	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999968671278168	WITHOUT_CLASSIFICATION	3.1328721832974027E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999997777913359	WITHOUT_CLASSIFICATION	2.222086641622655E-7	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999986805465764	WITHOUT_CLASSIFICATION	1.319453423641547E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999999763213929	WITHOUT_CLASSIFICATION	2.3678607028209407E-8	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999453964951	WITHOUT_CLASSIFICATION	5.460350493167318E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9996253936045549	WITHOUT_CLASSIFICATION	3.7460639544511804E-4	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.999998900687325	WITHOUT_CLASSIFICATION	1.0993126750746555E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999562378514519	WITHOUT_CLASSIFICATION	4.3762148548185314E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999562378514519	WITHOUT_CLASSIFICATION	4.3762148548185314E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999996589500536	WITHOUT_CLASSIFICATION	3.4104994637241743E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999925863163	WITHOUT_CLASSIFICATION	7.413683623657498E-9	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999999916863282	WITHOUT_CLASSIFICATION	8.313671676381807E-9	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.999998211962127	WITHOUT_CLASSIFICATION	1.7880378728950875E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.999806806990233	WITHOUT_CLASSIFICATION	1.9319300976683554E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999977058022335	WITHOUT_CLASSIFICATION	2.2941977666161E-6	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999992405685431	WITHOUT_CLASSIFICATION	7.594314569243278E-7	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9999623633647253	WITHOUT_CLASSIFICATION	3.7636635274669306E-5	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999986583042039	WITHOUT_CLASSIFICATION	1.341695796096999E-6	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9999839211834569	WITHOUT_CLASSIFICATION	1.607881654307373E-5	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999997642300917	WITHOUT_CLASSIFICATION	2.35769908394827E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999990533128211	WITHOUT_CLASSIFICATION	9.466871789230676E-7	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999991311773383	WITHOUT_CLASSIFICATION	8.688226616426E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999999830138298	WITHOUT_CLASSIFICATION	1.6986170242790393E-8	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999745117506	WITHOUT_CLASSIFICATION	2.548824941700589E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999968779966	WITHOUT_CLASSIFICATION	3.122003442862033E-9	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999894949055333	WITHOUT_CLASSIFICATION	1.0505094466571135E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999993504193635	WITHOUT_CLASSIFICATION	6.495806365767831E-7	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999997507688413	WITHOUT_CLASSIFICATION	2.4923115872683567E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999940936095211	WITHOUT_CLASSIFICATION	5.906390478931213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999894379962182	WITHOUT_CLASSIFICATION	1.05620037818384E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997863124207	WITHOUT_CLASSIFICATION	2.1368757936007475E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.999993738841304	WITHOUT_CLASSIFICATION	6.261158695970537E-6	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999999590860704	WITHOUT_CLASSIFICATION	4.091392960992733E-8	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999735661976197	WITHOUT_CLASSIFICATION	2.6433802380263004E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.999999525232168	WITHOUT_CLASSIFICATION	4.747678320850725E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999828089622	WITHOUT_CLASSIFICATION	1.7191037717820867E-8	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999999566233778	WITHOUT_CLASSIFICATION	4.337662213811576E-8	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999994329591418	WITHOUT_CLASSIFICATION	5.670408580733294E-7	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999985770135	WITHOUT_CLASSIFICATION	1.422986525990149E-9	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999984581970024	WITHOUT_CLASSIFICATION	1.5418029975996065E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999997539411722	WITHOUT_CLASSIFICATION	2.460588277342757E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999972843277747	WITHOUT_CLASSIFICATION	2.715672225261269E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999972843277747	WITHOUT_CLASSIFICATION	2.715672225261269E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9997173169666188	WITHOUT_CLASSIFICATION	2.826830333811726E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999946087174061	WITHOUT_CLASSIFICATION	5.391282593938903E-6	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999998150074728	WITHOUT_CLASSIFICATION	1.8499252705557227E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999998811472422	WITHOUT_CLASSIFICATION	1.1885275780025113E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999283816432	WITHOUT_CLASSIFICATION	7.161835683263489E-8	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999998379481411	WITHOUT_CLASSIFICATION	1.6205185895503432E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999924499958652	WITHOUT_CLASSIFICATION	7.550004134788771E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999917038254095	WITHOUT_CLASSIFICATION	8.296174590514185E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.99999832538013	WITHOUT_CLASSIFICATION	1.6746198700250918E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999998784363462	WITHOUT_CLASSIFICATION	1.2156365375217008E-7	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999998663189213	WITHOUT_CLASSIFICATION	1.3368107856166205E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999999155128223	WITHOUT_CLASSIFICATION	8.448717776544932E-8	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999998124365617	WITHOUT_CLASSIFICATION	1.8756343843118556E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999992458043137	WITHOUT_CLASSIFICATION	7.541956863703937E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999999958506153	WITHOUT_CLASSIFICATION	4.149384688420226E-9	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999898500254	WITHOUT_CLASSIFICATION	1.0149974698489069E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9998552448212342	WITHOUT_CLASSIFICATION	1.4475517876570354E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.999666355155688	WITHOUT_CLASSIFICATION	3.336448443119281E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999996976145007	WITHOUT_CLASSIFICATION	3.0238549927792625E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999933934619747	WITHOUT_CLASSIFICATION	6.606538025271017E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999667411538459	WITHOUT_CLASSIFICATION	3.325884615402865E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999998216927752	WITHOUT_CLASSIFICATION	1.7830722479054575E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999967290260524	WITHOUT_CLASSIFICATION	3.2709739476061518E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999978155470286	WITHOUT_CLASSIFICATION	2.1844529713743756E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999954623801404	WITHOUT_CLASSIFICATION	4.5376198597216176E-6	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999984747471844	WITHOUT_CLASSIFICATION	1.5252528156768948E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999993194642323	WITHOUT_CLASSIFICATION	6.805357677960263E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999980975523366	WITHOUT_CLASSIFICATION	1.9024476634582863E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999948514320213	WITHOUT_CLASSIFICATION	5.148567978793618E-6	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999998816691081	WITHOUT_CLASSIFICATION	1.1833089184410264E-7	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999966278692471	WITHOUT_CLASSIFICATION	3.3721307528169358E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999971683639	WITHOUT_CLASSIFICATION	2.8316361573470413E-9	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999999017525412	WITHOUT_CLASSIFICATION	9.824745887425514E-8	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999993227240483	WITHOUT_CLASSIFICATION	6.772759516498452E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999991044917501	WITHOUT_CLASSIFICATION	8.955082499180953E-7	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999697842292354	WITHOUT_CLASSIFICATION	3.0215770764616653E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999999603371587	WITHOUT_CLASSIFICATION	3.966284140488006E-8	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999999614393787	WITHOUT_CLASSIFICATION	3.856062118754736E-8	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999999702700466	WITHOUT_CLASSIFICATION	2.9729953336881024E-8	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997645127132	WITHOUT_CLASSIFICATION	2.354872867964036E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999954016825214	WITHOUT_CLASSIFICATION	4.598317478575906E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999999853962833	WITHOUT_CLASSIFICATION	1.4603716663863335E-8	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9999711890860056	WITHOUT_CLASSIFICATION	2.8810913994417413E-5	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999999219260117	WITHOUT_CLASSIFICATION	7.807398836068531E-8	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999963709697491	WITHOUT_CLASSIFICATION	3.6290302509481726E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9998867675326311	WITHOUT_CLASSIFICATION	1.1323246736884003E-4	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999874850860946	WITHOUT_CLASSIFICATION	1.2514913905396728E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999985557780571	WITHOUT_CLASSIFICATION	1.444221942897257E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999678744229449	WITHOUT_CLASSIFICATION	3.212557705501547E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999993266353248	WITHOUT_CLASSIFICATION	6.733646753275141E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999996952012665	WITHOUT_CLASSIFICATION	3.0479873353897896E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999991956798894	WITHOUT_CLASSIFICATION	8.043201106858564E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999997067948225	WITHOUT_CLASSIFICATION	2.932051774720517E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999997073440544	WITHOUT_CLASSIFICATION	2.9265594554998737E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999998502365022	WITHOUT_CLASSIFICATION	1.4976349782655613E-7	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999988233057323	WITHOUT_CLASSIFICATION	1.176694267678705E-6	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999438852086994	WITHOUT_CLASSIFICATION	5.611479130067326E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999998411709282	WITHOUT_CLASSIFICATION	1.5882907182278747E-7	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999996420117153	WITHOUT_CLASSIFICATION	3.579882846793295E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999998938827199	WITHOUT_CLASSIFICATION	1.0611728010744191E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999998938827199	WITHOUT_CLASSIFICATION	1.0611728010744191E-7	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999825571322984	WITHOUT_CLASSIFICATION	1.7442867701532963E-5	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999998183218954	WITHOUT_CLASSIFICATION	1.816781044511113E-7	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999994343924267	WITHOUT_CLASSIFICATION	5.656075733517916E-7	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999527415023199	WITHOUT_CLASSIFICATION	4.725849767997758E-5	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999999007771814	WITHOUT_CLASSIFICATION	9.922281868449593E-8	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999962503618592	WITHOUT_CLASSIFICATION	3.7496381407893906E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999203695159232	WITHOUT_CLASSIFICATION	7.963048407680872E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999996299994081	WITHOUT_CLASSIFICATION	3.7000059190114345E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999996299994081	WITHOUT_CLASSIFICATION	3.7000059190114345E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999863814942	WITHOUT_CLASSIFICATION	1.3618505827971434E-8	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999949121008599	WITHOUT_CLASSIFICATION	5.08789914013004E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.999999871882969	WITHOUT_CLASSIFICATION	1.2811703099026123E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999995911924682	WITHOUT_CLASSIFICATION	4.0880753171552363E-7	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999985953466952	WITHOUT_CLASSIFICATION	1.404653304749403E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995819353149	WITHOUT_CLASSIFICATION	4.180646851538567E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999999928607911	WITHOUT_CLASSIFICATION	7.139208890979629E-9	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999999915280801	WITHOUT_CLASSIFICATION	8.471919946893057E-9	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999999638249102	WITHOUT_CLASSIFICATION	3.6175089748301685E-8	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999774144756871	WITHOUT_CLASSIFICATION	2.258552431285364E-5	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999960180193326	WITHOUT_CLASSIFICATION	3.981980667391753E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999988884131108	WITHOUT_CLASSIFICATION	1.1115868892098747E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999998027377639	WITHOUT_CLASSIFICATION	1.9726223608835763E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999949584026183	WITHOUT_CLASSIFICATION	5.041597381695457E-6	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999900569869827	WITHOUT_CLASSIFICATION	9.943013017283272E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999994686549314	WITHOUT_CLASSIFICATION	5.313450685808828E-7	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999608634482513	WITHOUT_CLASSIFICATION	3.913655174868491E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999949612092289	WITHOUT_CLASSIFICATION	5.038790771022239E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999470299820662	WITHOUT_CLASSIFICATION	5.297001793388783E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.999878109835671	WITHOUT_CLASSIFICATION	1.2189016432896474E-4	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999988710845673	WITHOUT_CLASSIFICATION	1.1289154327314837E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999999632031534	WITHOUT_CLASSIFICATION	3.679684651904516E-8	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.999983465157784	WITHOUT_CLASSIFICATION	1.653484221589619E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999986640259071	WITHOUT_CLASSIFICATION	1.335974092957028E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999999411124854	WITHOUT_CLASSIFICATION	5.888751474628409E-8	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999994919648861	WITHOUT_CLASSIFICATION	5.080351139085294E-7	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999987627365511	WITHOUT_CLASSIFICATION	1.2372634489264353E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999999676520798	WITHOUT_CLASSIFICATION	3.2347920285429074E-8	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999991022592745	WITHOUT_CLASSIFICATION	8.97740725575151E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9998632281727429	WITHOUT_CLASSIFICATION	1.3677182725710922E-4	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999999352252699	WITHOUT_CLASSIFICATION	6.477473021352497E-8	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999977587629655	WITHOUT_CLASSIFICATION	2.2412370345496826E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9867348905700349	WITHOUT_CLASSIFICATION	0.013265109429964991	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999996192343246	WITHOUT_CLASSIFICATION	3.8076567553803074E-7	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999992595206625	WITHOUT_CLASSIFICATION	7.404793375321833E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9998562583742612	WITHOUT_CLASSIFICATION	1.4374162573886227E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999786401660918	WITHOUT_CLASSIFICATION	2.135983390813285E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999961895514674	WITHOUT_CLASSIFICATION	3.810448532635981E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999992725580951	WITHOUT_CLASSIFICATION	7.27441905051563E-7	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999971058733704	WITHOUT_CLASSIFICATION	2.894126629610306E-6	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999997015504759	WITHOUT_CLASSIFICATION	2.984495240497918E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9988382313308898	WITHOUT_CLASSIFICATION	0.0011617686691101708	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999555376742904	WITHOUT_CLASSIFICATION	4.4462325709595554E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999980078869235	WITHOUT_CLASSIFICATION	1.9921130765657777E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.999996740816037	WITHOUT_CLASSIFICATION	3.259183963042993E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9994814766842269	WITHOUT_CLASSIFICATION	5.185233157730849E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999921153260518	WITHOUT_CLASSIFICATION	7.884673948096238E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997863124207	WITHOUT_CLASSIFICATION	2.1368757936007475E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999921153260518	WITHOUT_CLASSIFICATION	7.884673948096238E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.999987536584522	WITHOUT_CLASSIFICATION	1.2463415478035413E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9998431651710754	WITHOUT_CLASSIFICATION	1.5683482892453278E-4	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999910117531	WITHOUT_CLASSIFICATION	8.98824697774766E-9	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999914088577055	WITHOUT_CLASSIFICATION	8.591142294362568E-6	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.99915558865467	WITHOUT_CLASSIFICATION	8.444113453299024E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.999646183020946	WITHOUT_CLASSIFICATION	3.5381697905401805E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999823726517941	WITHOUT_CLASSIFICATION	1.7627348205898474E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999958194602768	WITHOUT_CLASSIFICATION	4.1805397232016136E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999999631923401	WITHOUT_CLASSIFICATION	3.6807659954274725E-8	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999988169524076	WITHOUT_CLASSIFICATION	1.1830475923927927E-6	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.999999857119922	WITHOUT_CLASSIFICATION	1.4288007801441233E-7	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999988427486319	WITHOUT_CLASSIFICATION	1.1572513680017467E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999984138335263	WITHOUT_CLASSIFICATION	1.5861664738198156E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.999999524384502	WITHOUT_CLASSIFICATION	4.756154979315288E-7	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999998494069051	WITHOUT_CLASSIFICATION	1.5059309490700166E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999977756534	WITHOUT_CLASSIFICATION	2.224346687045721E-9	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999995577550526	WITHOUT_CLASSIFICATION	4.422449473807042E-7	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.999979148786327	WITHOUT_CLASSIFICATION	2.0851213673065848E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999981447037545	WITHOUT_CLASSIFICATION	1.8552962455193302E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999978487281068	WITHOUT_CLASSIFICATION	2.1512718932687306E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999976167456434	WITHOUT_CLASSIFICATION	2.3832543566461613E-6	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999937946448	WITHOUT_CLASSIFICATION	6.2053552142483555E-9	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999998658945197	WITHOUT_CLASSIFICATION	1.3410548020341646E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998720143926	WITHOUT_CLASSIFICATION	1.2798560745578512E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.999999976242057	WITHOUT_CLASSIFICATION	2.3757942942681477E-8	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.999968836582035	WITHOUT_CLASSIFICATION	3.116341796505386E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9993871622762736	WITHOUT_CLASSIFICATION	6.128377237264628E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999903700940166	WITHOUT_CLASSIFICATION	9.629905983318554E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999997638749778	WITHOUT_CLASSIFICATION	2.361250222111183E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9999626613474832	WITHOUT_CLASSIFICATION	3.7338652516778004E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999997227964582	WITHOUT_CLASSIFICATION	2.7720354183776927E-7	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999835935630412	WITHOUT_CLASSIFICATION	1.640643695871954E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.999752133278865	WITHOUT_CLASSIFICATION	2.478667211349363E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999999991777633	WITHOUT_CLASSIFICATION	8.222367083130793E-9	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999985341240332	WITHOUT_CLASSIFICATION	1.4658759667477046E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999989890063	WITHOUT_CLASSIFICATION	1.0109936619746102E-9	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999999584099866	WITHOUT_CLASSIFICATION	4.159001351255286E-8	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999980400946733	WITHOUT_CLASSIFICATION	1.9599053267089506E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999980400946733	WITHOUT_CLASSIFICATION	1.9599053267089506E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9998412164173902	WITHOUT_CLASSIFICATION	1.5878358260978394E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999155317075256	WITHOUT_CLASSIFICATION	8.446829247446647E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999832356567667	WITHOUT_CLASSIFICATION	1.6764343233292446E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999785270324	WITHOUT_CLASSIFICATION	2.1472967651687733E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999995359424831	WITHOUT_CLASSIFICATION	4.6405751688978966E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998688039244	WITHOUT_CLASSIFICATION	1.3119607550824329E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999907307821696	WITHOUT_CLASSIFICATION	9.269217830398754E-6	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999771197117	WITHOUT_CLASSIFICATION	2.2880288385100922E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999999947683554	WITHOUT_CLASSIFICATION	5.2316445464181724E-9	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999977472491474	WITHOUT_CLASSIFICATION	2.2527508526326115E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9998562254812785	WITHOUT_CLASSIFICATION	1.4377451872156242E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9997336989714299	WITHOUT_CLASSIFICATION	2.663010285701032E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999995426413913	WITHOUT_CLASSIFICATION	4.573586086789874E-7	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9983464502405947	WITHOUT_CLASSIFICATION	0.0016535497594052657	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999817343115024	WITHOUT_CLASSIFICATION	1.826568849768482E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999999357713214	WITHOUT_CLASSIFICATION	6.422867859068701E-8	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999976688671275	WITHOUT_CLASSIFICATION	2.331132872384625E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999487158622168	WITHOUT_CLASSIFICATION	5.128413778327545E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999827205703415	WITHOUT_CLASSIFICATION	1.7279429658343966E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999998121664041	WITHOUT_CLASSIFICATION	1.8783359590788723E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999989340521871	WITHOUT_CLASSIFICATION	1.0659478128664173E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.999999726175934	WITHOUT_CLASSIFICATION	2.7382406596650925E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9985645003726412	WITHOUT_CLASSIFICATION	0.001435499627358824	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.999962572779855	WITHOUT_CLASSIFICATION	3.742722014499455E-5	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9957378217622723	WITHOUT_CLASSIFICATION	0.0042621782377276225	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999997476325297	WITHOUT_CLASSIFICATION	2.523674702734529E-7	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9991360160306048	WITHOUT_CLASSIFICATION	8.63983969395354E-4	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999651240892747	WITHOUT_CLASSIFICATION	3.487591072514818E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.999998267496787	WITHOUT_CLASSIFICATION	1.7325032130385072E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999696660049412	WITHOUT_CLASSIFICATION	3.0333995058886795E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999923563711801	WITHOUT_CLASSIFICATION	7.643628819866796E-6	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.999999898309459	WITHOUT_CLASSIFICATION	1.0169054098140715E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999922516544001	WITHOUT_CLASSIFICATION	7.748345599963596E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999776502033	WITHOUT_CLASSIFICATION	2.2349796656501862E-8	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.999791384021933	WITHOUT_CLASSIFICATION	2.0861597806709202E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999999865793442	WITHOUT_CLASSIFICATION	1.342065576113917E-8	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999931488166208	WITHOUT_CLASSIFICATION	6.851183379107768E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999931488166208	WITHOUT_CLASSIFICATION	6.851183379107768E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.999999931981678	WITHOUT_CLASSIFICATION	6.80183220354493E-8	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999986023728936	WITHOUT_CLASSIFICATION	1.3976271064472116E-6	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999995384689709	WITHOUT_CLASSIFICATION	4.615310289898479E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999943451771	WITHOUT_CLASSIFICATION	5.654822887569036E-9	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.999997625328562	WITHOUT_CLASSIFICATION	2.374671438105839E-6	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999967445189983	WITHOUT_CLASSIFICATION	3.2554810017603773E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999990758229252	WITHOUT_CLASSIFICATION	9.241770746993492E-7	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999997966580733	WITHOUT_CLASSIFICATION	2.0334192679608526E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999988970969967	WITHOUT_CLASSIFICATION	1.102903003318321E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999991226972859	WITHOUT_CLASSIFICATION	8.773027140927764E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.99999993485928	WITHOUT_CLASSIFICATION	6.514072005666207E-8	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999778400148829	WITHOUT_CLASSIFICATION	2.215998511710541E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999874835244231	WITHOUT_CLASSIFICATION	1.2516475576900018E-5	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999990867562394	WITHOUT_CLASSIFICATION	9.132437605458483E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999996736227583	WITHOUT_CLASSIFICATION	3.2637724167932205E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999979560312358	WITHOUT_CLASSIFICATION	2.043968764272923E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999975800464463	WITHOUT_CLASSIFICATION	2.4199535537514407E-6	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999998723882636	WITHOUT_CLASSIFICATION	1.2761173637009674E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999994028834271	WITHOUT_CLASSIFICATION	5.971165729437227E-7	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999997253392383	WITHOUT_CLASSIFICATION	2.7466076166959506E-7	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999875674519	WITHOUT_CLASSIFICATION	1.2432548000737749E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.999989668727256	WITHOUT_CLASSIFICATION	1.0331272743903215E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.999954107385845	WITHOUT_CLASSIFICATION	4.5892614154952284E-5	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.999900263154585	WITHOUT_CLASSIFICATION	9.973684541501433E-5	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.999997814463718	WITHOUT_CLASSIFICATION	2.1855362820487325E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999982164095812	WITHOUT_CLASSIFICATION	1.7835904187057092E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999999229037034	WITHOUT_CLASSIFICATION	7.709629656150168E-8	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999958959358725	WITHOUT_CLASSIFICATION	4.104064127569647E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999572760964337	WITHOUT_CLASSIFICATION	4.272390356632639E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.99999201607562	WITHOUT_CLASSIFICATION	7.98392437997861E-6	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999929131096895	WITHOUT_CLASSIFICATION	7.0868903104944805E-6	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999991275334512	WITHOUT_CLASSIFICATION	8.72466548871476E-7	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999741812132974	WITHOUT_CLASSIFICATION	2.581878670253397E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999824022187139	WITHOUT_CLASSIFICATION	1.7597781286054303E-5	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999947420907268	WITHOUT_CLASSIFICATION	5.25790927318826E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999994533540149	WITHOUT_CLASSIFICATION	5.466459850835327E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999881418225591	WITHOUT_CLASSIFICATION	1.1858177441003658E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999999090237626	WITHOUT_CLASSIFICATION	9.097623750041348E-8	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999986923230891	WITHOUT_CLASSIFICATION	1.3076769109324095E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999884572001553	WITHOUT_CLASSIFICATION	1.1542799844733022E-5	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999998751502591	WITHOUT_CLASSIFICATION	1.2484974090761882E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999987327471903	WITHOUT_CLASSIFICATION	1.2672528096993031E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999986642887213	WITHOUT_CLASSIFICATION	1.3357112787809428E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9998196119251146	WITHOUT_CLASSIFICATION	1.803880748854172E-4	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999353314957	WITHOUT_CLASSIFICATION	6.466850433343904E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.999996298282873	WITHOUT_CLASSIFICATION	3.701717127121452E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.999987743184263	WITHOUT_CLASSIFICATION	1.2256815737039102E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999998520397807	WITHOUT_CLASSIFICATION	1.4796021923973646E-7	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999986236676638	WITHOUT_CLASSIFICATION	1.3763323361267695E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999999048657258	WITHOUT_CLASSIFICATION	9.513427415973408E-8	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999992763455261	WITHOUT_CLASSIFICATION	7.236544738974653E-7	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999999145690098	WITHOUT_CLASSIFICATION	8.543099013179051E-8	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999995060418289	WITHOUT_CLASSIFICATION	4.939581711256632E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999998928080868	WITHOUT_CLASSIFICATION	1.0719191318367115E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999998283991476	WITHOUT_CLASSIFICATION	1.7160085231457236E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999992668350247	WITHOUT_CLASSIFICATION	7.331649752702376E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999999761873115	WITHOUT_CLASSIFICATION	2.3812688462010153E-8	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999999073975228	WITHOUT_CLASSIFICATION	9.26024771781697E-8	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999999345593452	WITHOUT_CLASSIFICATION	6.544065472830885E-8	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999896032270145	WITHOUT_CLASSIFICATION	1.0396772985574171E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999767824517624	WITHOUT_CLASSIFICATION	2.321754823765116E-5	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999998744893959	WITHOUT_CLASSIFICATION	1.2551060400386918E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999988308454283	WITHOUT_CLASSIFICATION	1.169154571734326E-6	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999999201836165	WITHOUT_CLASSIFICATION	7.981638355809519E-8	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9999719568584099	WITHOUT_CLASSIFICATION	2.8043141590188215E-5	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.99999863672231	WITHOUT_CLASSIFICATION	1.363277689985695E-6	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9978668197162819	WITHOUT_CLASSIFICATION	0.002133180283718183	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999998998454	WITHOUT_CLASSIFICATION	1.0015452564619818E-10	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999995913613094	WITHOUT_CLASSIFICATION	4.0863869053616354E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999866544709	WITHOUT_CLASSIFICATION	1.3345529030345046E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999947371319	WITHOUT_CLASSIFICATION	5.262868246654694E-9	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999921007703145	WITHOUT_CLASSIFICATION	7.899229685432762E-6	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999936236333794	WITHOUT_CLASSIFICATION	6.376366620616547E-6	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999751900626	WITHOUT_CLASSIFICATION	2.4809937375341675E-8	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999751900626	WITHOUT_CLASSIFICATION	2.4809937375341675E-8	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999963399222294	WITHOUT_CLASSIFICATION	3.6600777707718447E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999983768995797	WITHOUT_CLASSIFICATION	1.6231004202226075E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999974335747994	WITHOUT_CLASSIFICATION	2.5664252006043856E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999998855376642	WITHOUT_CLASSIFICATION	1.1446233582340502E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999998985284351	WITHOUT_CLASSIFICATION	1.0147156486044851E-7	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999923112641762	WITHOUT_CLASSIFICATION	7.688735823795148E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999998878873113	WITHOUT_CLASSIFICATION	1.1211268876017377E-7	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999999409346451	WITHOUT_CLASSIFICATION	5.906535501841658E-8	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9998622434116858	WITHOUT_CLASSIFICATION	1.377565883141764E-4	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999980271914466	WITHOUT_CLASSIFICATION	1.972808553391955E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999936404349729	WITHOUT_CLASSIFICATION	6.359565027183018E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999998322855594	WITHOUT_CLASSIFICATION	1.677144405663274E-7	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999572534344	WITHOUT_CLASSIFICATION	4.274656564870551E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999987621325431	WITHOUT_CLASSIFICATION	1.2378674567991673E-6	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999999254097188	WITHOUT_CLASSIFICATION	7.459028119314075E-8	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999988657674872	WITHOUT_CLASSIFICATION	1.134232512802551E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999998904194621	WITHOUT_CLASSIFICATION	1.0958053790630657E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999999042983457	WITHOUT_CLASSIFICATION	9.57016543337036E-8	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.999999892277434	WITHOUT_CLASSIFICATION	1.077225658878555E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999998978890114	WITHOUT_CLASSIFICATION	1.0211098862794824E-7	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999155792790093	WITHOUT_CLASSIFICATION	8.442072099069394E-5	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999997146946928	WITHOUT_CLASSIFICATION	2.85305307147902E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.999999426210369	WITHOUT_CLASSIFICATION	5.737896310242125E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999989858363297	WITHOUT_CLASSIFICATION	1.014163670283605E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999992904811822	WITHOUT_CLASSIFICATION	7.095188177385383E-7	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.999999069640561	WITHOUT_CLASSIFICATION	9.303594390923486E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999695932572	WITHOUT_CLASSIFICATION	3.040674274691588E-8	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999969323181539	WITHOUT_CLASSIFICATION	3.0676818461358733E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999994098110353	WITHOUT_CLASSIFICATION	5.901889646677747E-7	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999999578943608	WITHOUT_CLASSIFICATION	4.210563911563814E-8	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999993646633024	WITHOUT_CLASSIFICATION	6.353366975225037E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999940170416934	WITHOUT_CLASSIFICATION	5.982958306664032E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999812507501	WITHOUT_CLASSIFICATION	1.8749249874586828E-8	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999999220117233	WITHOUT_CLASSIFICATION	7.798827665983422E-8	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999995013134303	WITHOUT_CLASSIFICATION	4.986865698014569E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999999008022177	WITHOUT_CLASSIFICATION	9.91977822774917E-8	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999999671951131	WITHOUT_CLASSIFICATION	3.2804886952924035E-8	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999993212268508	WITHOUT_CLASSIFICATION	6.787731492588285E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999879130964	WITHOUT_CLASSIFICATION	1.2086903593682636E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999968569479467	WITHOUT_CLASSIFICATION	3.1430520531824247E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999957527495774	WITHOUT_CLASSIFICATION	4.247250422612636E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999770107194	WITHOUT_CLASSIFICATION	2.2989280595573398E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999989222795611	WITHOUT_CLASSIFICATION	1.0777204388899583E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999704647221	WITHOUT_CLASSIFICATION	2.9535277860537923E-8	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999999962326691	WITHOUT_CLASSIFICATION	3.767330891602719E-9	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999982933583176	WITHOUT_CLASSIFICATION	1.706641682487125E-6	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999872764480291	WITHOUT_CLASSIFICATION	1.2723551970944156E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999997689915063	WITHOUT_CLASSIFICATION	2.3100849372820917E-7	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999967413875352	WITHOUT_CLASSIFICATION	3.2586124648245636E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999941537044562	WITHOUT_CLASSIFICATION	5.846295543743609E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999994972985162	WITHOUT_CLASSIFICATION	5.027014838418241E-7	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999936189449474	WITHOUT_CLASSIFICATION	6.381055052584964E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.5765685793593025	WITHOUT_CLASSIFICATION	0.4234314206406974	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999995820451499	WITHOUT_CLASSIFICATION	4.1795485011803486E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9995257103458979	WITHOUT_CLASSIFICATION	4.7428965410204035E-4	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999999110146732	WITHOUT_CLASSIFICATION	8.898532677826472E-8	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999997771436079	WITHOUT_CLASSIFICATION	2.2285639211963656E-7	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999997095272476	WITHOUT_CLASSIFICATION	2.9047275235935157E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999860685856571	WITHOUT_CLASSIFICATION	1.3931414342872945E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999995980221804	WITHOUT_CLASSIFICATION	4.019778195968722E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999962082670275	WITHOUT_CLASSIFICATION	3.7917329724070893E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999960524618748	WITHOUT_CLASSIFICATION	3.947538125094843E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999999684956443	WITHOUT_CLASSIFICATION	3.150435566893291E-8	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999969398372819	WITHOUT_CLASSIFICATION	3.0601627181771396E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999998171181851	WITHOUT_CLASSIFICATION	1.8288181488948888E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999562774791593	WITHOUT_CLASSIFICATION	4.37225208407287E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999998987882869	WITHOUT_CLASSIFICATION	1.0121171305106509E-7	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999998738160946	WITHOUT_CLASSIFICATION	1.2618390540968137E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999964568720592	WITHOUT_CLASSIFICATION	3.5431279408331977E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999991503271436	WITHOUT_CLASSIFICATION	8.496728563579905E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999998659976933	WITHOUT_CLASSIFICATION	1.3400230665788817E-7	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999965216696755	WITHOUT_CLASSIFICATION	3.478330324598339E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999503209224	WITHOUT_CLASSIFICATION	4.967907769666049E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999979345086017	WITHOUT_CLASSIFICATION	2.065491398313368E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.999999940849492	WITHOUT_CLASSIFICATION	5.9150508069043906E-8	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999987929231055	WITHOUT_CLASSIFICATION	1.2070768945501095E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999983411801965	WITHOUT_CLASSIFICATION	1.6588198034219965E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999999163009579	WITHOUT_CLASSIFICATION	8.369904213749664E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999777827819	WITHOUT_CLASSIFICATION	2.2217218048179085E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996476628016	WITHOUT_CLASSIFICATION	3.5233719849005667E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8826992587999836	WITHOUT_CLASSIFICATION	0.11730074120001643	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999982001281479	WITHOUT_CLASSIFICATION	1.7998718520629334E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999998981875119	WITHOUT_CLASSIFICATION	1.0181248815020277E-7	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.999999996103943	WITHOUT_CLASSIFICATION	3.896057059285669E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999993907039213	WITHOUT_CLASSIFICATION	6.092960787652707E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999990934126954	WITHOUT_CLASSIFICATION	9.06587304654483E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999245521963632	WITHOUT_CLASSIFICATION	7.544780363677156E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999995996907286	WITHOUT_CLASSIFICATION	4.0030927147545475E-7	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.999996574089659	WITHOUT_CLASSIFICATION	3.4259103409139523E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999984943844	WITHOUT_CLASSIFICATION	1.5056156715580606E-9	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999999017890232	WITHOUT_CLASSIFICATION	9.821097672807957E-8	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999999292218918	WITHOUT_CLASSIFICATION	7.077810816063034E-8	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999992553005979	WITHOUT_CLASSIFICATION	7.44699402188969E-7	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999993957818936	WITHOUT_CLASSIFICATION	6.042181064462024E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999995615199777	WITHOUT_CLASSIFICATION	4.3848002238263286E-7	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999971219838	WITHOUT_CLASSIFICATION	2.87801609064779E-9	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999390244886	WITHOUT_CLASSIFICATION	6.097551136170962E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999971165870543	WITHOUT_CLASSIFICATION	2.8834129457388864E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999999683016054	WITHOUT_CLASSIFICATION	3.169839454710635E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999619741915	WITHOUT_CLASSIFICATION	3.802580845552562E-8	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999996991971325	WITHOUT_CLASSIFICATION	3.00802867587228E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999995792327669	WITHOUT_CLASSIFICATION	4.2076723307849036E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.999988195819101	WITHOUT_CLASSIFICATION	1.1804180898946251E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999844881294748	WITHOUT_CLASSIFICATION	1.5511870525189258E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999995355704581	WITHOUT_CLASSIFICATION	4.644295418142384E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999940089611192	WITHOUT_CLASSIFICATION	5.991038880793033E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995949731632	WITHOUT_CLASSIFICATION	4.0502683688308487E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999995355704581	WITHOUT_CLASSIFICATION	4.644295418142384E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999940089611192	WITHOUT_CLASSIFICATION	5.991038880793033E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.999993045982658	WITHOUT_CLASSIFICATION	6.9540173419941295E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999185546404	WITHOUT_CLASSIFICATION	8.144535956010364E-8	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999980440163081	WITHOUT_CLASSIFICATION	1.9559836919450323E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999986523239801	WITHOUT_CLASSIFICATION	1.3476760198916563E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999939875053326	WITHOUT_CLASSIFICATION	6.012494667337031E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999969423108864	WITHOUT_CLASSIFICATION	3.0576891135728397E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996694905806	WITHOUT_CLASSIFICATION	3.305094194030053E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999997931079997	WITHOUT_CLASSIFICATION	2.0689200026533497E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998987587264	WITHOUT_CLASSIFICATION	1.0124127358531693E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999378926696	WITHOUT_CLASSIFICATION	6.21073304110235E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999886969299032	WITHOUT_CLASSIFICATION	1.1303070096800595E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999619741915	WITHOUT_CLASSIFICATION	3.802580845552562E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999619741915	WITHOUT_CLASSIFICATION	3.802580845552562E-8	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999940089611192	WITHOUT_CLASSIFICATION	5.991038880793033E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999980440163081	WITHOUT_CLASSIFICATION	1.9559836919450323E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999939875053326	WITHOUT_CLASSIFICATION	6.012494667337031E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999997344180777	WITHOUT_CLASSIFICATION	2.6558192233914205E-7	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999734825131351	WITHOUT_CLASSIFICATION	2.6517486864844397E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999991939572415	WITHOUT_CLASSIFICATION	8.060427585113532E-7	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999995121042651	WITHOUT_CLASSIFICATION	4.878957349328981E-7	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999828223718803	WITHOUT_CLASSIFICATION	1.7177628119700504E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999828223718803	WITHOUT_CLASSIFICATION	1.7177628119700504E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999998768916953	WITHOUT_CLASSIFICATION	1.2310830453405365E-7	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999927166803068	WITHOUT_CLASSIFICATION	7.283319693240661E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999998766758653	WITHOUT_CLASSIFICATION	1.2332413479370403E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999194328673	WITHOUT_CLASSIFICATION	8.056713275629516E-8	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999999343525007	WITHOUT_CLASSIFICATION	6.564749931862455E-8	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999981015926982	WITHOUT_CLASSIFICATION	1.8984073018042574E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999951906222612	WITHOUT_CLASSIFICATION	4.809377738904566E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999995355704581	WITHOUT_CLASSIFICATION	4.644295418142384E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999996957346315	WITHOUT_CLASSIFICATION	3.0426536844873184E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999185546404	WITHOUT_CLASSIFICATION	8.144535956010364E-8	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999969423108864	WITHOUT_CLASSIFICATION	3.0576891135728397E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996694905806	WITHOUT_CLASSIFICATION	3.305094194030053E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996694905806	WITHOUT_CLASSIFICATION	3.305094194030053E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998987587264	WITHOUT_CLASSIFICATION	1.0124127358531693E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999378926696	WITHOUT_CLASSIFICATION	6.21073304110235E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999886969299032	WITHOUT_CLASSIFICATION	1.1303070096800595E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.999999421724927	WITHOUT_CLASSIFICATION	5.782750730597628E-7	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999995884869389	WITHOUT_CLASSIFICATION	4.115130610996225E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.999908312468254	WITHOUT_CLASSIFICATION	9.168753174601964E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999991468421013	WITHOUT_CLASSIFICATION	8.531578985918879E-7	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999990179506777	WITHOUT_CLASSIFICATION	9.820493223480866E-7	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999937198177217	WITHOUT_CLASSIFICATION	6.280182278358279E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.999998109412932	WITHOUT_CLASSIFICATION	1.8905870679869034E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999987396014014	WITHOUT_CLASSIFICATION	1.26039859853007E-6	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999563508931	WITHOUT_CLASSIFICATION	4.364910694396738E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999980440163081	WITHOUT_CLASSIFICATION	1.9559836919450323E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999996694905806	WITHOUT_CLASSIFICATION	3.305094194030053E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998987587264	WITHOUT_CLASSIFICATION	1.0124127358531693E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999998987587264	WITHOUT_CLASSIFICATION	1.0124127358531693E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999997344180777	WITHOUT_CLASSIFICATION	2.6558192233914205E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999998768916953	WITHOUT_CLASSIFICATION	1.2310830453405365E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999998768916953	WITHOUT_CLASSIFICATION	1.2310830453405365E-7	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999998766758653	WITHOUT_CLASSIFICATION	1.2332413479370403E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999979232154833	WITHOUT_CLASSIFICATION	2.076784516670932E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999997566579473	WITHOUT_CLASSIFICATION	2.433420527053803E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999960583742685	WITHOUT_CLASSIFICATION	3.941625731449774E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999961469583302	WITHOUT_CLASSIFICATION	3.853041669887219E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.999999187628394	WITHOUT_CLASSIFICATION	8.123716059650065E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999994904292082	WITHOUT_CLASSIFICATION	5.095707916983169E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999961553196319	WITHOUT_CLASSIFICATION	3.8446803680641294E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.999998285175071	WITHOUT_CLASSIFICATION	1.7148249291209897E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999993799265232	WITHOUT_CLASSIFICATION	6.20073476783168E-7	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999994765614147	WITHOUT_CLASSIFICATION	5.234385852132366E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999990025976384	WITHOUT_CLASSIFICATION	9.974023615797434E-7	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999979320731175	WITHOUT_CLASSIFICATION	2.0679268824275353E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999997883937645	WITHOUT_CLASSIFICATION	2.1160623549927306E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999996838975245	WITHOUT_CLASSIFICATION	3.1610247552010714E-7	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999997976963234	WITHOUT_CLASSIFICATION	2.0230367656204643E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999895530987952	WITHOUT_CLASSIFICATION	1.0446901204807192E-5	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.999999840059656	WITHOUT_CLASSIFICATION	1.5994034391200677E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999995192055664	WITHOUT_CLASSIFICATION	4.807944335614114E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999998729085993	WITHOUT_CLASSIFICATION	1.2709140078051818E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999997600052044	WITHOUT_CLASSIFICATION	2.3999479563419506E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.999999914291367	WITHOUT_CLASSIFICATION	8.570863297747465E-8	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999990263683323	WITHOUT_CLASSIFICATION	9.736316677092407E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999575265768	WITHOUT_CLASSIFICATION	4.247342323351563E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999742439224	WITHOUT_CLASSIFICATION	2.5756077626857642E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999169015045662	WITHOUT_CLASSIFICATION	8.30984954338171E-5	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999984943058805	WITHOUT_CLASSIFICATION	1.505694119465416E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999984616215851	WITHOUT_CLASSIFICATION	1.5383784148392782E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999904733275059	WITHOUT_CLASSIFICATION	9.52667249404921E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999982749270099	WITHOUT_CLASSIFICATION	1.7250729901546643E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999992476644569	WITHOUT_CLASSIFICATION	7.523355430249617E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999992622436221	WITHOUT_CLASSIFICATION	7.377563778548508E-7	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.999982828808527	WITHOUT_CLASSIFICATION	1.717119147305767E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999992463376604	WITHOUT_CLASSIFICATION	7.536623396118556E-7	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999133569871	WITHOUT_CLASSIFICATION	8.664301283226937E-8	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.99999969736276	WITHOUT_CLASSIFICATION	3.026372400441112E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999994624265974	WITHOUT_CLASSIFICATION	5.375734025080906E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999975474533752	WITHOUT_CLASSIFICATION	2.4525466246924604E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.999999295276869	WITHOUT_CLASSIFICATION	7.047231309007423E-7	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999999819300736	WITHOUT_CLASSIFICATION	1.8069926456353885E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999868115522	WITHOUT_CLASSIFICATION	1.3188447845106942E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999961505618378	WITHOUT_CLASSIFICATION	3.849438162240707E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999997431129589	WITHOUT_CLASSIFICATION	2.56887041180487E-7	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999817738198	WITHOUT_CLASSIFICATION	1.8226180145794247E-8	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.999999741140092	WITHOUT_CLASSIFICATION	2.5885990789321547E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999028048683868	WITHOUT_CLASSIFICATION	9.719513161324681E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999916513459974	WITHOUT_CLASSIFICATION	8.348654002573116E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999896349923818	WITHOUT_CLASSIFICATION	1.0365007618205627E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999840465676533	WITHOUT_CLASSIFICATION	1.5953432346733533E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999976714290959	WITHOUT_CLASSIFICATION	2.328570904072822E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999993935448371	WITHOUT_CLASSIFICATION	6.064551629518252E-7	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999948270821041	WITHOUT_CLASSIFICATION	5.172917895874555E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999998265108634	WITHOUT_CLASSIFICATION	1.7348913655246884E-7	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.999999811083997	WITHOUT_CLASSIFICATION	1.8891600294535984E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999996878345028	WITHOUT_CLASSIFICATION	3.121654972365562E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999948303124485	WITHOUT_CLASSIFICATION	5.1696875514891785E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999948303124485	WITHOUT_CLASSIFICATION	5.1696875514891785E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999999216868058	WITHOUT_CLASSIFICATION	7.83131941358686E-8	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999999361552399	WITHOUT_CLASSIFICATION	6.384476009418913E-8	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999999728914092	WITHOUT_CLASSIFICATION	2.7108590834618246E-8	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999989736025197	WITHOUT_CLASSIFICATION	1.0263974802906767E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9999103778904227	WITHOUT_CLASSIFICATION	8.962210957734468E-5	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999969916150809	WITHOUT_CLASSIFICATION	3.0083849190676876E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9999136119463056	WITHOUT_CLASSIFICATION	8.638805369440544E-5	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.999991684108751	WITHOUT_CLASSIFICATION	8.315891249048193E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999996900533253	WITHOUT_CLASSIFICATION	3.09946674595773E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999996900533253	WITHOUT_CLASSIFICATION	3.09946674595773E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999999085734481	WITHOUT_CLASSIFICATION	9.142655187311492E-8	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999998674003989	WITHOUT_CLASSIFICATION	1.325996010402675E-7	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999997556851897	WITHOUT_CLASSIFICATION	2.4431481025715304E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999997041755533	WITHOUT_CLASSIFICATION	2.958244467403977E-7	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999939776083	WITHOUT_CLASSIFICATION	6.022391722057147E-9	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999994959677385	WITHOUT_CLASSIFICATION	5.040322615071133E-7	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999999677297796	WITHOUT_CLASSIFICATION	3.2270220369628444E-8	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999943065992893	WITHOUT_CLASSIFICATION	5.693400710705754E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999999353089543	WITHOUT_CLASSIFICATION	6.469104576514806E-8	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999440730892083	WITHOUT_CLASSIFICATION	5.592691079165224E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999999465419966	WITHOUT_CLASSIFICATION	5.345800344135712E-8	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.999967071150748	WITHOUT_CLASSIFICATION	3.2928849252023875E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996251597684	WITHOUT_CLASSIFICATION	3.7484023164621745E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999998811472422	WITHOUT_CLASSIFICATION	1.1885275780025113E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999999991777633	WITHOUT_CLASSIFICATION	8.222367083130793E-9	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999916513459974	WITHOUT_CLASSIFICATION	8.348654002573116E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999948303124485	WITHOUT_CLASSIFICATION	5.1696875514891785E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999948303124485	WITHOUT_CLASSIFICATION	5.1696875514891785E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999999361552399	WITHOUT_CLASSIFICATION	6.384476009418913E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999997797591471	WITHOUT_CLASSIFICATION	2.2024085280585318E-7	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999971849068288	WITHOUT_CLASSIFICATION	2.8150931712569058E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999999998721669	WITHOUT_CLASSIFICATION	1.278329892092781E-10	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999999473706503	WITHOUT_CLASSIFICATION	5.2629349569183935E-8	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999995862054297	WITHOUT_CLASSIFICATION	4.1379457025030857E-7	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999997263062574	WITHOUT_CLASSIFICATION	2.7369374265715683E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999925639512539	WITHOUT_CLASSIFICATION	7.436048746212872E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999791498033	WITHOUT_CLASSIFICATION	2.0850196692093956E-8	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999994333392471	WITHOUT_CLASSIFICATION	5.666607529190053E-7	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.999998764872505	WITHOUT_CLASSIFICATION	1.2351274949276923E-6	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.999992889024764	WITHOUT_CLASSIFICATION	7.11097523590551E-6	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999999193817527	WITHOUT_CLASSIFICATION	8.061824728808531E-8	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.999999300606023	WITHOUT_CLASSIFICATION	6.993939769512262E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999986728922641	WITHOUT_CLASSIFICATION	1.3271077359226833E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999988113412696	WITHOUT_CLASSIFICATION	1.1886587304169693E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999996728313998	WITHOUT_CLASSIFICATION	3.271686001961026E-7	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999999804483953	WITHOUT_CLASSIFICATION	1.955160471496876E-8	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999932522225902	WITHOUT_CLASSIFICATION	6.74777740982937E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999397668071	WITHOUT_CLASSIFICATION	6.023319283611006E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999845678446404	WITHOUT_CLASSIFICATION	1.5432155359598894E-5	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999880176704724	WITHOUT_CLASSIFICATION	1.1982329527577497E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999999721137127	WITHOUT_CLASSIFICATION	2.788628737128912E-8	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999980525279735	WITHOUT_CLASSIFICATION	1.9474720265791418E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999962486339394	WITHOUT_CLASSIFICATION	3.751366060504048E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999670453356	WITHOUT_CLASSIFICATION	3.2954664450221105E-8	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999996040374672	WITHOUT_CLASSIFICATION	3.9596253286460087E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999990400458191	WITHOUT_CLASSIFICATION	9.599541809287076E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999964869872235	WITHOUT_CLASSIFICATION	3.5130127764866673E-6	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999918597235404	WITHOUT_CLASSIFICATION	8.140276459573777E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999950923346385	WITHOUT_CLASSIFICATION	4.907665361546294E-6	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999360124565911	WITHOUT_CLASSIFICATION	6.398754340891006E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999946556495886	WITHOUT_CLASSIFICATION	5.344350411474537E-6	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999998071039732	WITHOUT_CLASSIFICATION	1.9289602674153624E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999989234470447	WITHOUT_CLASSIFICATION	1.0765529553271225E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999919788480929	WITHOUT_CLASSIFICATION	8.021151907064545E-6	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999990747508618	WITHOUT_CLASSIFICATION	9.252491382937475E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999994563326112	WITHOUT_CLASSIFICATION	5.436673887193212E-7	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999666367618	WITHOUT_CLASSIFICATION	3.336323819382152E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.999999992613288	WITHOUT_CLASSIFICATION	7.3867120583662845E-9	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999996675345386	WITHOUT_CLASSIFICATION	3.3246546135626493E-7	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.999527450208723	WITHOUT_CLASSIFICATION	4.725497912769458E-4	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999935227755	WITHOUT_CLASSIFICATION	6.4772244818194224E-9	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999991562945425	WITHOUT_CLASSIFICATION	8.4370545751624E-7	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9992013717996212	WITHOUT_CLASSIFICATION	7.986282003788613E-4	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999995977513826	WITHOUT_CLASSIFICATION	4.02248617347547E-7	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999997977064633	WITHOUT_CLASSIFICATION	2.0229353675630255E-7	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999997630141713	WITHOUT_CLASSIFICATION	2.3698582871487176E-7	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999926778171	WITHOUT_CLASSIFICATION	7.32218286854122E-9	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999983602784241	WITHOUT_CLASSIFICATION	1.6397215758907616E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.999997440986372	WITHOUT_CLASSIFICATION	2.559013627974345E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999988307845773	WITHOUT_CLASSIFICATION	1.1692154226968786E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999977424604322	WITHOUT_CLASSIFICATION	2.2575395678165614E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999999713606033	WITHOUT_CLASSIFICATION	2.8639396758664868E-8	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999988778274458	WITHOUT_CLASSIFICATION	1.1221725542399255E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999989649697697	WITHOUT_CLASSIFICATION	1.0350302302439408E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999710470010784	WITHOUT_CLASSIFICATION	2.895299892160026E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999994467410015	WITHOUT_CLASSIFICATION	5.532589984215074E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.999999946443009	WITHOUT_CLASSIFICATION	5.355699089642121E-8	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999996920128211	WITHOUT_CLASSIFICATION	3.079871788723375E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999812104333	WITHOUT_CLASSIFICATION	1.8789566660690065E-8	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999812104333	WITHOUT_CLASSIFICATION	1.8789566660690065E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999806052745	WITHOUT_CLASSIFICATION	1.9394725490776218E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999806052745	WITHOUT_CLASSIFICATION	1.9394725490776218E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999954682332206	WITHOUT_CLASSIFICATION	4.531766779479438E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999954682332206	WITHOUT_CLASSIFICATION	4.531766779479438E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999974633679475	WITHOUT_CLASSIFICATION	2.5366320526583485E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999862081191884	WITHOUT_CLASSIFICATION	1.3791880811721771E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999862081191884	WITHOUT_CLASSIFICATION	1.3791880811721771E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.999999071794219	WITHOUT_CLASSIFICATION	9.282057810051473E-7	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999997494993754	WITHOUT_CLASSIFICATION	2.5050062461498384E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999882691792854	WITHOUT_CLASSIFICATION	1.1730820714628753E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999882691792854	WITHOUT_CLASSIFICATION	1.1730820714628753E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999996781017639	WITHOUT_CLASSIFICATION	3.21898236031724E-7	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999982719897217	WITHOUT_CLASSIFICATION	1.728010278230598E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999862081191884	WITHOUT_CLASSIFICATION	1.3791880811721771E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999882691792854	WITHOUT_CLASSIFICATION	1.1730820714628753E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999998632978663	WITHOUT_CLASSIFICATION	1.367021336197628E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999991907593269	WITHOUT_CLASSIFICATION	8.092406731506075E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999850813970248	WITHOUT_CLASSIFICATION	1.49186029751445E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.999999967086373	WITHOUT_CLASSIFICATION	3.29136269900031E-8	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999993469413941	WITHOUT_CLASSIFICATION	6.530586058837044E-7	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.999999933382553	WITHOUT_CLASSIFICATION	6.661744694853499E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999997799002098	WITHOUT_CLASSIFICATION	2.2009979018347504E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999995328380346	WITHOUT_CLASSIFICATION	4.6716196534474923E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999988172804314	WITHOUT_CLASSIFICATION	1.1827195685383197E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999999507671337	WITHOUT_CLASSIFICATION	4.9232866354458154E-8	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.999999389572783	WITHOUT_CLASSIFICATION	6.104272169229266E-7	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999990322887222	WITHOUT_CLASSIFICATION	9.67711277798198E-7	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999997864865027	WITHOUT_CLASSIFICATION	2.13513497376973E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999997807168274	WITHOUT_CLASSIFICATION	2.192831726052339E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999994095383632	WITHOUT_CLASSIFICATION	5.904616368320534E-7	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999993862097979	WITHOUT_CLASSIFICATION	6.137902021521636E-7	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999938072986538	WITHOUT_CLASSIFICATION	6.192701346138138E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.7199210163753048	WITHOUT_CLASSIFICATION	0.2800789836246952	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999991954831412	WITHOUT_CLASSIFICATION	8.04516858749701E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999759799351366	WITHOUT_CLASSIFICATION	2.4020064863420343E-5	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999999231662147	WITHOUT_CLASSIFICATION	7.683378534085285E-8	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999977337708793	WITHOUT_CLASSIFICATION	2.2662291206525133E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999977501256284	WITHOUT_CLASSIFICATION	2.2498743714891875E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999988218869964	WITHOUT_CLASSIFICATION	1.1781130035772716E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999997536721134	WITHOUT_CLASSIFICATION	2.4632788668576334E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999993185260455	WITHOUT_CLASSIFICATION	6.81473954407E-7	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999991781493776	WITHOUT_CLASSIFICATION	8.218506225704375E-7	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999992844846463	WITHOUT_CLASSIFICATION	7.155153538044614E-7	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999999385707582	WITHOUT_CLASSIFICATION	6.142924180250474E-8	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999971390221872	WITHOUT_CLASSIFICATION	2.8609778127433906E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999850813970248	WITHOUT_CLASSIFICATION	1.49186029751445E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999996962536293	WITHOUT_CLASSIFICATION	3.037463707162734E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999994095383632	WITHOUT_CLASSIFICATION	5.904616368320534E-7	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999996935284203	WITHOUT_CLASSIFICATION	3.064715796526645E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999988218869964	WITHOUT_CLASSIFICATION	1.1781130035772716E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999983232199584	WITHOUT_CLASSIFICATION	1.6767800416782753E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999997719400745	WITHOUT_CLASSIFICATION	2.2805992564284444E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999923637652989	WITHOUT_CLASSIFICATION	7.636234701089056E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999686228520357	WITHOUT_CLASSIFICATION	3.137714796435698E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999686228520357	WITHOUT_CLASSIFICATION	3.137714796435698E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999993048725568	WITHOUT_CLASSIFICATION	6.951274431665078E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999998380404741	WITHOUT_CLASSIFICATION	1.619595260417285E-7	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999795705687	WITHOUT_CLASSIFICATION	2.042943119887815E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.999999871773054	WITHOUT_CLASSIFICATION	1.282269458581639E-7	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999934908943613	WITHOUT_CLASSIFICATION	6.509105638730854E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999992992438962	WITHOUT_CLASSIFICATION	7.007561037454411E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999999416089335	WITHOUT_CLASSIFICATION	5.839106661802099E-8	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.999999997658609	WITHOUT_CLASSIFICATION	2.3413909297133407E-9	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999987570499015	WITHOUT_CLASSIFICATION	1.2429500984518025E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999986263537545	WITHOUT_CLASSIFICATION	1.3736462454765725E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999972472066052	WITHOUT_CLASSIFICATION	2.752793394773239E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999425132469408	WITHOUT_CLASSIFICATION	5.748675305909827E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.999999886046	WITHOUT_CLASSIFICATION	1.1395399998539435E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999996151499069	WITHOUT_CLASSIFICATION	3.8485009317865934E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.999999887241683	WITHOUT_CLASSIFICATION	1.1275831706778947E-7	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.999989762212742	WITHOUT_CLASSIFICATION	1.0237787257978233E-5	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.999999958947663	WITHOUT_CLASSIFICATION	4.105233688665538E-8	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999999791131975	WITHOUT_CLASSIFICATION	2.0886802501100992E-7	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999998858387683	WITHOUT_CLASSIFICATION	1.1416123168692457E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999992181856507	WITHOUT_CLASSIFICATION	7.818143493159579E-7	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999962009356144	WITHOUT_CLASSIFICATION	3.7990643856547756E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999997486545027	WITHOUT_CLASSIFICATION	2.513454972213019E-7	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999900711810276	WITHOUT_CLASSIFICATION	9.928818972501027E-6	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999999960102699	WITHOUT_CLASSIFICATION	3.989730020490422E-9	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999774227476	WITHOUT_CLASSIFICATION	2.2577252394891844E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999999378308371	WITHOUT_CLASSIFICATION	6.216916298624186E-8	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999995354402006	WITHOUT_CLASSIFICATION	4.645597994475183E-7	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999974796243479	WITHOUT_CLASSIFICATION	2.520375652097081E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999998230943264	WITHOUT_CLASSIFICATION	1.769056734817241E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999998479209145	WITHOUT_CLASSIFICATION	1.5207908553982157E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999997094325787	WITHOUT_CLASSIFICATION	2.905674213396465E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999996794660581	WITHOUT_CLASSIFICATION	3.2053394197010104E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999998659674582	WITHOUT_CLASSIFICATION	1.3403254182260308E-7	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999988168029904	WITHOUT_CLASSIFICATION	1.1831970095805287E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9997709238549396	WITHOUT_CLASSIFICATION	2.2907614506033577E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999664075578	WITHOUT_CLASSIFICATION	3.359244217678762E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999863953317977	WITHOUT_CLASSIFICATION	1.3604668202287381E-5	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999687027200551	WITHOUT_CLASSIFICATION	3.129727994497521E-5	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999966838686136	WITHOUT_CLASSIFICATION	3.3161313864222265E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999871647718784	WITHOUT_CLASSIFICATION	1.2835228121566184E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999989575112257	WITHOUT_CLASSIFICATION	1.0424887742355083E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999995286120372	WITHOUT_CLASSIFICATION	4.7138796274185057E-7	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999845812897	WITHOUT_CLASSIFICATION	1.5418710313418222E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999997711638758	WITHOUT_CLASSIFICATION	2.2883612413120913E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999887236992769	WITHOUT_CLASSIFICATION	1.1276300723124854E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999977761208025	WITHOUT_CLASSIFICATION	2.2238791973974764E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999993407795804	WITHOUT_CLASSIFICATION	6.592204195059201E-7	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999989565605195	WITHOUT_CLASSIFICATION	1.0434394805298976E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999954682332206	WITHOUT_CLASSIFICATION	4.531766779479438E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999998545644462	WITHOUT_CLASSIFICATION	1.4543555373852331E-7	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999992549417823	WITHOUT_CLASSIFICATION	7.450582177199805E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999995144919609	WITHOUT_CLASSIFICATION	4.855080392072189E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999977202215284	WITHOUT_CLASSIFICATION	2.2797784715467844E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999998924783874	WITHOUT_CLASSIFICATION	1.075216126336648E-7	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999971256377619	WITHOUT_CLASSIFICATION	2.8743622381293474E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999884087163	WITHOUT_CLASSIFICATION	1.1591283851146717E-8	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999999120090912	WITHOUT_CLASSIFICATION	8.79909087915546E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.999999998444839	WITHOUT_CLASSIFICATION	1.555161057372093E-9	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999996647472988	WITHOUT_CLASSIFICATION	3.3525270121261537E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999919433574	WITHOUT_CLASSIFICATION	8.056642611671625E-9	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999990593115	WITHOUT_CLASSIFICATION	9.40688455554059E-10	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999976656197923	WITHOUT_CLASSIFICATION	2.33438020765898E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999995380168097	WITHOUT_CLASSIFICATION	4.619831903343139E-7	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999999880604595	WITHOUT_CLASSIFICATION	1.1939540496840531E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999998891483122	WITHOUT_CLASSIFICATION	1.1085168785290619E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999998861481971	WITHOUT_CLASSIFICATION	1.1385180292307966E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999996521722214	WITHOUT_CLASSIFICATION	3.478277786127557E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999996902168974	WITHOUT_CLASSIFICATION	3.0978310258862616E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999949128364083	WITHOUT_CLASSIFICATION	5.087163591688634E-6	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999999302923205	WITHOUT_CLASSIFICATION	6.970767952379662E-8	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999995714860231	WITHOUT_CLASSIFICATION	4.2851397688177876E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999993798203661	WITHOUT_CLASSIFICATION	6.201796338660995E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999999435357555	WITHOUT_CLASSIFICATION	5.6464244546480505E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999996248771299	WITHOUT_CLASSIFICATION	3.7512287009952004E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975167892445	WITHOUT_CLASSIFICATION	2.4832107554119426E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999961991066366	WITHOUT_CLASSIFICATION	3.80089336325632E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999978582364163	WITHOUT_CLASSIFICATION	2.14176358370293E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999996609906852	WITHOUT_CLASSIFICATION	3.390093148778566E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999996941408758	WITHOUT_CLASSIFICATION	3.058591243128283E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999962486339394	WITHOUT_CLASSIFICATION	3.751366060504048E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999954682332206	WITHOUT_CLASSIFICATION	4.531766779479438E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999974633679475	WITHOUT_CLASSIFICATION	2.5366320526583485E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999999791131975	WITHOUT_CLASSIFICATION	2.0886802501100992E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999879507454	WITHOUT_CLASSIFICATION	1.2049254577525945E-8	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999998545644462	WITHOUT_CLASSIFICATION	1.4543555373852331E-7	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999955970820338	WITHOUT_CLASSIFICATION	4.402917966259515E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999940178501747	WITHOUT_CLASSIFICATION	5.982149825228466E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999998886447254	WITHOUT_CLASSIFICATION	1.1135527453356726E-7	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999991560760512	WITHOUT_CLASSIFICATION	8.439239489836284E-7	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999991458788017	WITHOUT_CLASSIFICATION	8.541211982614528E-7	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999998764757647	WITHOUT_CLASSIFICATION	1.235242352988585E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999615862234991	WITHOUT_CLASSIFICATION	3.8413776500970626E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999943205611012	WITHOUT_CLASSIFICATION	5.679438898910869E-6	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999987220516	WITHOUT_CLASSIFICATION	1.2779483945665792E-9	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999993765212004	WITHOUT_CLASSIFICATION	6.234787996329384E-7	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999322182230977	WITHOUT_CLASSIFICATION	6.778177690227241E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999999375617603	WITHOUT_CLASSIFICATION	6.243823968290901E-8	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.999785125121846	WITHOUT_CLASSIFICATION	2.1487487815399997E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999994388671389	WITHOUT_CLASSIFICATION	5.611328610730016E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999998763211182	WITHOUT_CLASSIFICATION	1.236788817467196E-7	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999996868387766	WITHOUT_CLASSIFICATION	3.1316122331422945E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999208010060138	WITHOUT_CLASSIFICATION	7.919899398622133E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999985874184545	WITHOUT_CLASSIFICATION	1.412581545491253E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999643678085013	WITHOUT_CLASSIFICATION	3.563219149864822E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999987954444092	WITHOUT_CLASSIFICATION	1.2045555908677727E-6	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999773271113438	WITHOUT_CLASSIFICATION	2.267288865627688E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9998307620768127	WITHOUT_CLASSIFICATION	1.692379231874624E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999952553356712	WITHOUT_CLASSIFICATION	4.744664328759099E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999998299639523	WITHOUT_CLASSIFICATION	1.700360476048675E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999969668137175	WITHOUT_CLASSIFICATION	3.0331862825168583E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999999136323758	WITHOUT_CLASSIFICATION	8.636762422616338E-8	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999284678105939	WITHOUT_CLASSIFICATION	7.153218940612588E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999997918033922	WITHOUT_CLASSIFICATION	2.0819660778855009E-7	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999990876215232	WITHOUT_CLASSIFICATION	9.123784767133548E-7	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999997350618679	WITHOUT_CLASSIFICATION	2.649381320797289E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999943451771	WITHOUT_CLASSIFICATION	5.654822887569036E-9	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999954682332206	WITHOUT_CLASSIFICATION	4.531766779479438E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999996647472988	WITHOUT_CLASSIFICATION	3.3525270121261537E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999919433574	WITHOUT_CLASSIFICATION	8.056642611671625E-9	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999998891483122	WITHOUT_CLASSIFICATION	1.1085168785290619E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999998861481971	WITHOUT_CLASSIFICATION	1.1385180292307966E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999996521722214	WITHOUT_CLASSIFICATION	3.478277786127557E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999996902168974	WITHOUT_CLASSIFICATION	3.0978310258862616E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999949128364083	WITHOUT_CLASSIFICATION	5.087163591688634E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999732208345555	WITHOUT_CLASSIFICATION	2.677916544454061E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999993798203661	WITHOUT_CLASSIFICATION	6.201796338660995E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999882503805	WITHOUT_CLASSIFICATION	1.1749619356394867E-8	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9991964588231815	WITHOUT_CLASSIFICATION	8.035411768184982E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999980560541368	WITHOUT_CLASSIFICATION	1.9439458631574776E-6	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999988446675497	WITHOUT_CLASSIFICATION	1.1553324502547817E-6	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999983611011221	WITHOUT_CLASSIFICATION	1.6388988779278991E-6	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999999959412237	WITHOUT_CLASSIFICATION	4.058776331975764E-9	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999999945605693	WITHOUT_CLASSIFICATION	5.4394307330834144E-9	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999936990639616	WITHOUT_CLASSIFICATION	6.300936038365161E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999999725302571	WITHOUT_CLASSIFICATION	2.7469742950398096E-8	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999990259971986	WITHOUT_CLASSIFICATION	9.740028014595512E-7	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.99999830555002	WITHOUT_CLASSIFICATION	1.6944499800221061E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999997569440905	WITHOUT_CLASSIFICATION	2.4305590952784694E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999999595387659	WITHOUT_CLASSIFICATION	4.046123420268129E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999475858471	WITHOUT_CLASSIFICATION	5.24141528506544E-8	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.999996161067247	WITHOUT_CLASSIFICATION	3.838932753064838E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.999996161067247	WITHOUT_CLASSIFICATION	3.838932753064838E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999987160203835	WITHOUT_CLASSIFICATION	1.2839796165515439E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999104246611	WITHOUT_CLASSIFICATION	8.957533895105141E-8	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999104246611	WITHOUT_CLASSIFICATION	8.957533895105141E-8	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999993203077621	WITHOUT_CLASSIFICATION	6.796922379067392E-7	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999998594081986	WITHOUT_CLASSIFICATION	1.4059180139709856E-7	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999998214970147	WITHOUT_CLASSIFICATION	1.7850298529955108E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999943451771	WITHOUT_CLASSIFICATION	5.654822887569036E-9	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999997485545198	WITHOUT_CLASSIFICATION	2.514454801843081E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999999090237626	WITHOUT_CLASSIFICATION	9.097623750041348E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997917442023	WITHOUT_CLASSIFICATION	2.0825579777632482E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999322477064	WITHOUT_CLASSIFICATION	6.775229359511704E-8	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.999909647960091	WITHOUT_CLASSIFICATION	9.03520399090136E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999980169945324	WITHOUT_CLASSIFICATION	1.983005467555645E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999999198188002	WITHOUT_CLASSIFICATION	8.018119981314965E-8	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999994613665835	WITHOUT_CLASSIFICATION	5.386334165841971E-7	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999999301617043	WITHOUT_CLASSIFICATION	6.98382957232866E-8	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999821903573604	WITHOUT_CLASSIFICATION	1.780964263961546E-5	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9991917246579256	WITHOUT_CLASSIFICATION	8.082753420742731E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999997615168755	WITHOUT_CLASSIFICATION	2.384831244793857E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999864934885901	WITHOUT_CLASSIFICATION	1.3506511409934782E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999996897337329	WITHOUT_CLASSIFICATION	3.1026626708088344E-7	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999999224911011	WITHOUT_CLASSIFICATION	7.750889887208175E-8	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999982493829578	WITHOUT_CLASSIFICATION	1.750617042297069E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999999888437785	WITHOUT_CLASSIFICATION	1.1156221429295862E-8	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9998717084458973	WITHOUT_CLASSIFICATION	1.282915541025585E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9995778627794435	WITHOUT_CLASSIFICATION	4.221372205564497E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999971199906015	WITHOUT_CLASSIFICATION	2.8800093983855486E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999965840048437	WITHOUT_CLASSIFICATION	3.415995156311486E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999999377964738	WITHOUT_CLASSIFICATION	6.220352613035831E-8	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999997455032776	WITHOUT_CLASSIFICATION	2.5449672231861735E-7	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999969872320696	WITHOUT_CLASSIFICATION	3.0127679303929717E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999967400671192	WITHOUT_CLASSIFICATION	3.2599328807702026E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.999999994065227	WITHOUT_CLASSIFICATION	5.9347729934726155E-9	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999998631264102	WITHOUT_CLASSIFICATION	1.368735897863601E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9998108206267364	WITHOUT_CLASSIFICATION	1.891793732636623E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999978369671375	WITHOUT_CLASSIFICATION	2.163032862478877E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.999999944202175	WITHOUT_CLASSIFICATION	5.579782497416104E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.999999970243048	WITHOUT_CLASSIFICATION	2.9756951987416814E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999999329001094	WITHOUT_CLASSIFICATION	6.709989057736918E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999390830768	WITHOUT_CLASSIFICATION	6.091692319419433E-8	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9998948870438104	WITHOUT_CLASSIFICATION	1.051129561896436E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999965133792825	WITHOUT_CLASSIFICATION	3.4866207175036838E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991218998557	WITHOUT_CLASSIFICATION	8.781001443756527E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980064017128	WITHOUT_CLASSIFICATION	1.9935982872272806E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999390830768	WITHOUT_CLASSIFICATION	6.091692319419433E-8	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999997649004863	WITHOUT_CLASSIFICATION	2.3509951371344364E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999993421933305	WITHOUT_CLASSIFICATION	6.578066694580764E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999993421933305	WITHOUT_CLASSIFICATION	6.578066694580764E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999993421933305	WITHOUT_CLASSIFICATION	6.578066694580764E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999998902974868	WITHOUT_CLASSIFICATION	1.0970251312770351E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999998902974868	WITHOUT_CLASSIFICATION	1.0970251312770351E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999998902974868	WITHOUT_CLASSIFICATION	1.0970251312770351E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999999838699	WITHOUT_CLASSIFICATION	1.6130103482385857E-10	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999999838699	WITHOUT_CLASSIFICATION	1.6130103482385857E-10	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999997726625552	WITHOUT_CLASSIFICATION	2.2733744480052042E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999982869922	WITHOUT_CLASSIFICATION	1.7130078173828831E-9	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999911649625	WITHOUT_CLASSIFICATION	8.835037562488234E-9	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999998159318675	WITHOUT_CLASSIFICATION	1.8406813254723612E-7	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.999996851437736	WITHOUT_CLASSIFICATION	3.1485622640111687E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999999490148364	WITHOUT_CLASSIFICATION	5.098516366981003E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999941249648356	WITHOUT_CLASSIFICATION	5.8750351643936905E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999998962861931	WITHOUT_CLASSIFICATION	1.0371380681153119E-7	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999998360571781	WITHOUT_CLASSIFICATION	1.639428219844752E-7	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999963581490863	WITHOUT_CLASSIFICATION	3.641850913674968E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999993764967775	WITHOUT_CLASSIFICATION	6.235032225812443E-7	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999999870791798	WITHOUT_CLASSIFICATION	1.2920820222143624E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997109970858	WITHOUT_CLASSIFICATION	2.8900291413847336E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999999456220169	WITHOUT_CLASSIFICATION	5.4377983065509426E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999904733275059	WITHOUT_CLASSIFICATION	9.52667249404921E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9991589362070045	WITHOUT_CLASSIFICATION	8.410637929954778E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999995555882384	WITHOUT_CLASSIFICATION	4.4441176160494344E-7	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999588820657989	WITHOUT_CLASSIFICATION	4.1117934201104834E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.999999813421509	WITHOUT_CLASSIFICATION	1.8657849097659476E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999995886440939	WITHOUT_CLASSIFICATION	4.113559060480908E-7	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999032389511952	WITHOUT_CLASSIFICATION	9.676104880481627E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999988655093687	WITHOUT_CLASSIFICATION	1.1344906312776842E-6	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999889120176788	WITHOUT_CLASSIFICATION	1.1087982321136301E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999972610723002	WITHOUT_CLASSIFICATION	2.738927699666849E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999995498514217	WITHOUT_CLASSIFICATION	4.5014857829009245E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999001066939776	WITHOUT_CLASSIFICATION	9.989330602239597E-5	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999977543119344	WITHOUT_CLASSIFICATION	2.2456880655818762E-6	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999959565492005	WITHOUT_CLASSIFICATION	4.043450799564484E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999995522062052	WITHOUT_CLASSIFICATION	4.477937948197869E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999972636667517	WITHOUT_CLASSIFICATION	2.7363332482667327E-6	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9998767462814561	WITHOUT_CLASSIFICATION	1.2325371854399477E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999999321309596	WITHOUT_CLASSIFICATION	6.786904039868108E-8	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999934808384575	WITHOUT_CLASSIFICATION	6.519161542514442E-6	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999999734424786	WITHOUT_CLASSIFICATION	2.655752138176594E-8	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999994037646426	WITHOUT_CLASSIFICATION	5.962353574784224E-7	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.8334417493255994	WITHOUT_CLASSIFICATION	0.16655825067440053	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999972636667517	WITHOUT_CLASSIFICATION	2.7363332482667327E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999990012624598	WITHOUT_CLASSIFICATION	9.987375402365823E-7	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999999984814976	WITHOUT_CLASSIFICATION	1.5185024805073444E-9	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.999999760644704	WITHOUT_CLASSIFICATION	2.3935529595002715E-7	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999994751383956	WITHOUT_CLASSIFICATION	5.248616044306729E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.999999856431875	WITHOUT_CLASSIFICATION	1.4356812498831344E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999909431733	WITHOUT_CLASSIFICATION	9.05682677836315E-9	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999998327738728	WITHOUT_CLASSIFICATION	1.6722612710288597E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999993818090757	WITHOUT_CLASSIFICATION	6.181909243518572E-7	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999976779525062	WITHOUT_CLASSIFICATION	2.3220474937243133E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999998273784952	WITHOUT_CLASSIFICATION	1.7262150468503133E-7	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999393940901673	WITHOUT_CLASSIFICATION	6.060590983275933E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999997303008906	WITHOUT_CLASSIFICATION	2.696991093834768E-7	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999997801441208	WITHOUT_CLASSIFICATION	2.1985587919528058E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999990012624598	WITHOUT_CLASSIFICATION	9.987375402365823E-7	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999807266090224	WITHOUT_CLASSIFICATION	1.9273390977543235E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.999999384963072	WITHOUT_CLASSIFICATION	6.150369279527072E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.999998679943382	WITHOUT_CLASSIFICATION	1.3200566180253295E-6	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9810403019355974	WITHOUT_CLASSIFICATION	0.018959698064402578	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999998684066191	WITHOUT_CLASSIFICATION	1.3159338084419307E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999990650484838	WITHOUT_CLASSIFICATION	9.349515161908912E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996251597684	WITHOUT_CLASSIFICATION	3.7484023164621745E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998212854615	WITHOUT_CLASSIFICATION	1.7871453838317567E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999996976145007	WITHOUT_CLASSIFICATION	3.0238549927792625E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999933934619747	WITHOUT_CLASSIFICATION	6.606538025271017E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999991945397761	WITHOUT_CLASSIFICATION	8.054602238366377E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999999695932572	WITHOUT_CLASSIFICATION	3.040674274691588E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999996304475968	WITHOUT_CLASSIFICATION	3.695524032158183E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999974778794519	WITHOUT_CLASSIFICATION	2.5221205480820436E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999996648455498	WITHOUT_CLASSIFICATION	3.3515445022919836E-7	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.99999996653714	WITHOUT_CLASSIFICATION	3.346286013593357E-8	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999963216705821	WITHOUT_CLASSIFICATION	3.6783294179025846E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999998920115523	WITHOUT_CLASSIFICATION	1.0798844779302751E-7	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9996254334895411	WITHOUT_CLASSIFICATION	3.7456651045892383E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.99999999939042	WITHOUT_CLASSIFICATION	6.095800827501854E-10	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999999371720915	WITHOUT_CLASSIFICATION	6.282790855789702E-8	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999953075569169	WITHOUT_CLASSIFICATION	4.692443083135709E-6	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999999750221649	WITHOUT_CLASSIFICATION	2.4977835145573025E-8	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.999999969734168	WITHOUT_CLASSIFICATION	3.026583189503011E-8	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999016659718319	WITHOUT_CLASSIFICATION	9.833402816804106E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999852560667	WITHOUT_CLASSIFICATION	1.4743933408137157E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9992772059532185	WITHOUT_CLASSIFICATION	7.227940467815953E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.999998184510465	WITHOUT_CLASSIFICATION	1.8154895350531353E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.999999608717514	WITHOUT_CLASSIFICATION	3.9128248587707097E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999885830588	WITHOUT_CLASSIFICATION	1.1416941207123089E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999977161194236	WITHOUT_CLASSIFICATION	2.28388057641875E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999997530921414	WITHOUT_CLASSIFICATION	2.469078586338057E-7	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999801948392	WITHOUT_CLASSIFICATION	1.980516089503384E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999999163129752	WITHOUT_CLASSIFICATION	8.368702482694364E-8	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.999999726175934	WITHOUT_CLASSIFICATION	2.7382406596650925E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.999999879557428	WITHOUT_CLASSIFICATION	1.204425720907753E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999977161194236	WITHOUT_CLASSIFICATION	2.28388057641875E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999994880966963	WITHOUT_CLASSIFICATION	5.119033036740544E-7	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999941417787824	WITHOUT_CLASSIFICATION	5.858221217687077E-6	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999844303739625	WITHOUT_CLASSIFICATION	1.5569626037593364E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.999997806180796	WITHOUT_CLASSIFICATION	2.19381920392084E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999958992107931	WITHOUT_CLASSIFICATION	4.100789206942728E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999959661964	WITHOUT_CLASSIFICATION	4.03380364753139E-9	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999992754411982	WITHOUT_CLASSIFICATION	7.245588019798326E-7	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999996914922468	WITHOUT_CLASSIFICATION	3.085077532042023E-7	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999999758348896	WITHOUT_CLASSIFICATION	2.4165110413780006E-8	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999980352698632	WITHOUT_CLASSIFICATION	1.964730136835426E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999992011395302	WITHOUT_CLASSIFICATION	7.988604698066984E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999981276810165	WITHOUT_CLASSIFICATION	1.8723189835876475E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999997879273185	WITHOUT_CLASSIFICATION	2.120726814368003E-7	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999470421415	WITHOUT_CLASSIFICATION	5.2957858490505065E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999964727505729	WITHOUT_CLASSIFICATION	3.5272494272088924E-6	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999999669555575	WITHOUT_CLASSIFICATION	3.304444254093177E-8	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.99999967360646	WITHOUT_CLASSIFICATION	3.2639353995491734E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999727583302397	WITHOUT_CLASSIFICATION	2.72416697603238E-5	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999926973417717	WITHOUT_CLASSIFICATION	7.3026582283751425E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997109970858	WITHOUT_CLASSIFICATION	2.8900291413847336E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997109970858	WITHOUT_CLASSIFICATION	2.8900291413847336E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999995201900094	WITHOUT_CLASSIFICATION	4.798099905286681E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999999456220169	WITHOUT_CLASSIFICATION	5.4377983065509426E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999999900968815	WITHOUT_CLASSIFICATION	9.903118532151707E-9	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999971946264036	WITHOUT_CLASSIFICATION	2.805373596523512E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999901745295369	WITHOUT_CLASSIFICATION	9.825470463120406E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999998275627694	WITHOUT_CLASSIFICATION	1.7243723054960703E-7	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.6309683388324642	WITHOUT_CLASSIFICATION	0.3690316611675359	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.999999967840169	WITHOUT_CLASSIFICATION	3.215983094570041E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999995741085685	WITHOUT_CLASSIFICATION	4.2589143144388927E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999906618988588	WITHOUT_CLASSIFICATION	9.338101141282054E-6	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999207572652854	WITHOUT_CLASSIFICATION	7.924273471463192E-5	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9998425922050321	WITHOUT_CLASSIFICATION	1.5740779496784785E-4	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999889220160675	WITHOUT_CLASSIFICATION	1.1077983932479901E-5	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999996963499381	WITHOUT_CLASSIFICATION	3.0365006187796993E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999772043049603	WITHOUT_CLASSIFICATION	2.2795695039751733E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999999408758106	WITHOUT_CLASSIFICATION	5.912418938246259E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999858908699365	WITHOUT_CLASSIFICATION	1.4109130063468908E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999885352153	WITHOUT_CLASSIFICATION	1.1464784707573923E-8	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999368733149	WITHOUT_CLASSIFICATION	6.31266851060221E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999997455444652	WITHOUT_CLASSIFICATION	2.544555347664037E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999971675263284	WITHOUT_CLASSIFICATION	2.8324736715894946E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.999534630239443	WITHOUT_CLASSIFICATION	4.653697605569945E-4	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999986900597044	WITHOUT_CLASSIFICATION	1.3099402954973605E-6	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9998687037457265	WITHOUT_CLASSIFICATION	1.3129625427354486E-4	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999998943331796	WITHOUT_CLASSIFICATION	1.0566682035618431E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999928249186788	WITHOUT_CLASSIFICATION	7.175081321186607E-6	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999963838098556	WITHOUT_CLASSIFICATION	3.6161901444603264E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999982264925	WITHOUT_CLASSIFICATION	1.77350737936673E-9	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999997042217958	WITHOUT_CLASSIFICATION	2.9577820409811015E-7	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9955499504050815	WITHOUT_CLASSIFICATION	0.004450049594918448	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999999593415928	WITHOUT_CLASSIFICATION	4.065840721493538E-8	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999971268635985	WITHOUT_CLASSIFICATION	2.873136401399311E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999954010606916	WITHOUT_CLASSIFICATION	4.598939308417142E-6	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999986086397122	WITHOUT_CLASSIFICATION	1.3913602877119932E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999993827803425	WITHOUT_CLASSIFICATION	6.172196576054666E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999963677711385	WITHOUT_CLASSIFICATION	3.632228861435148E-6	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999891069686	WITHOUT_CLASSIFICATION	1.0893031382416683E-8	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.99997607303406	WITHOUT_CLASSIFICATION	2.392696594003134E-5	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999996328923427	WITHOUT_CLASSIFICATION	3.67107657269435E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999999201621328	WITHOUT_CLASSIFICATION	7.983786716704513E-8	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9999672200695966	WITHOUT_CLASSIFICATION	3.2779930403443795E-5	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999987020824064	WITHOUT_CLASSIFICATION	1.2979175936381829E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999999619013349	WITHOUT_CLASSIFICATION	3.8098665144834096E-8	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999353163037683	WITHOUT_CLASSIFICATION	6.46836962316855E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.999988396883793	WITHOUT_CLASSIFICATION	1.160311620694062E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999996726091204	WITHOUT_CLASSIFICATION	3.273908796457494E-7	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999978596537733	WITHOUT_CLASSIFICATION	2.14034622675923E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999938869377137	WITHOUT_CLASSIFICATION	6.113062286262919E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988215926664	WITHOUT_CLASSIFICATION	1.1784073335674363E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999937060380002	WITHOUT_CLASSIFICATION	6.293961999777562E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999941249648356	WITHOUT_CLASSIFICATION	5.8750351643936905E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9994402196554207	WITHOUT_CLASSIFICATION	5.597803445791453E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.999999199828417	WITHOUT_CLASSIFICATION	8.001715831010479E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999996283859	WITHOUT_CLASSIFICATION	3.7161410514692295E-10	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9998072653490507	WITHOUT_CLASSIFICATION	1.927346509491764E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999892227296405	WITHOUT_CLASSIFICATION	1.0777270359402104E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999994218138952	WITHOUT_CLASSIFICATION	5.781861048076899E-7	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999992501336359	WITHOUT_CLASSIFICATION	7.498663640284774E-7	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9990834573406504	WITHOUT_CLASSIFICATION	9.165426593495896E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999263475857845	WITHOUT_CLASSIFICATION	7.365241421549408E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999920179587205	WITHOUT_CLASSIFICATION	7.982041279498223E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.999990618684482	WITHOUT_CLASSIFICATION	9.38131551800909E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.999993683150132	WITHOUT_CLASSIFICATION	6.316849867947048E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999971133116	WITHOUT_CLASSIFICATION	2.8866883623256835E-9	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999995538271952	WITHOUT_CLASSIFICATION	4.4617280481546407E-7	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999999720833264	WITHOUT_CLASSIFICATION	2.791667368791595E-8	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999999691877068	WITHOUT_CLASSIFICATION	3.0812293168782884E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999882217969924	WITHOUT_CLASSIFICATION	1.1778203007498935E-5	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999994719423306	WITHOUT_CLASSIFICATION	5.280576693696154E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9998605639634924	WITHOUT_CLASSIFICATION	1.3943603650765242E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999996631314843	WITHOUT_CLASSIFICATION	3.368685157553127E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999996631314843	WITHOUT_CLASSIFICATION	3.368685157553127E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999992332380154	WITHOUT_CLASSIFICATION	7.667619846383476E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999999567003877	WITHOUT_CLASSIFICATION	4.3299612399229544E-8	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999988787310257	WITHOUT_CLASSIFICATION	1.121268974318566E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999931709217936	WITHOUT_CLASSIFICATION	6.829078206371654E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999999253245412	WITHOUT_CLASSIFICATION	7.467545881369155E-8	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999998924981535	WITHOUT_CLASSIFICATION	1.0750184650660957E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999735114655	WITHOUT_CLASSIFICATION	2.6488534468732204E-8	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999934259858789	WITHOUT_CLASSIFICATION	6.574014121140174E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999449795418385	WITHOUT_CLASSIFICATION	5.502045816158029E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999952185363489	WITHOUT_CLASSIFICATION	4.781463651061777E-6	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999987454921054	WITHOUT_CLASSIFICATION	1.2545078946304863E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999557991619	WITHOUT_CLASSIFICATION	4.420083807521771E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999999095359937	WITHOUT_CLASSIFICATION	9.046400640379346E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999977746766057	WITHOUT_CLASSIFICATION	2.2253233943997157E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999467236877807	WITHOUT_CLASSIFICATION	5.3276312219382675E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9996728021506972	WITHOUT_CLASSIFICATION	3.271978493027902E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9993125394461294	WITHOUT_CLASSIFICATION	6.874605538705884E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999999853841174	WITHOUT_CLASSIFICATION	1.4615882588096855E-8	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999995878346676	WITHOUT_CLASSIFICATION	4.121653325171514E-7	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999944788410603	WITHOUT_CLASSIFICATION	5.521158939806779E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9999116393399209	WITHOUT_CLASSIFICATION	8.836066007912981E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998567739954	WITHOUT_CLASSIFICATION	1.4322600452757003E-7	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999999629275875	WITHOUT_CLASSIFICATION	3.7072412468068516E-8	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999832485800705	WITHOUT_CLASSIFICATION	1.6751419929448778E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999467236877807	WITHOUT_CLASSIFICATION	5.3276312219382675E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999467236877807	WITHOUT_CLASSIFICATION	5.3276312219382675E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.999978301582969	WITHOUT_CLASSIFICATION	2.1698417031001455E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999625396290454	WITHOUT_CLASSIFICATION	3.746037095452076E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999763618864023	WITHOUT_CLASSIFICATION	2.363811359772447E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.999999931866304	WITHOUT_CLASSIFICATION	6.813369607238451E-8	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999636362134484	WITHOUT_CLASSIFICATION	3.636378655162022E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999866544709	WITHOUT_CLASSIFICATION	1.3345529030345046E-8	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999947371319	WITHOUT_CLASSIFICATION	5.262868246654694E-9	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999916154898019	WITHOUT_CLASSIFICATION	8.384510198116566E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999997571216189	WITHOUT_CLASSIFICATION	2.4287838115475336E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999897035438939	WITHOUT_CLASSIFICATION	1.029645610603718E-5	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999979407842754	WITHOUT_CLASSIFICATION	2.059215724574588E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999995869610411	WITHOUT_CLASSIFICATION	4.130389589474191E-7	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999990059696593	WITHOUT_CLASSIFICATION	9.940303406752014E-7	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999998954826486	WITHOUT_CLASSIFICATION	1.0451735146656322E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999997984543856	WITHOUT_CLASSIFICATION	2.015456144887341E-7	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999977687111633	WITHOUT_CLASSIFICATION	2.2312888366454657E-6	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9435203671673559	WITHOUT_CLASSIFICATION	0.0564796328326442	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9986043339934578	WITHOUT_CLASSIFICATION	0.0013956660065421358	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9983601828594051	WITHOUT_CLASSIFICATION	0.0016398171405949493	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.999999992426515	WITHOUT_CLASSIFICATION	7.573485025435554E-9	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999998888623565	WITHOUT_CLASSIFICATION	1.1113764351742565E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.999999382109118	WITHOUT_CLASSIFICATION	6.178908820087158E-7	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999984320132076	WITHOUT_CLASSIFICATION	1.5679867924095642E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999938055152278	WITHOUT_CLASSIFICATION	6.1944847722652365E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999997829895907	WITHOUT_CLASSIFICATION	2.1701040930820142E-7	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999999204944949	WITHOUT_CLASSIFICATION	7.950550498409448E-8	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999999906088722	WITHOUT_CLASSIFICATION	9.391127866725673E-9	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999962577613454	WITHOUT_CLASSIFICATION	3.74223865475615E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999991004768096	WITHOUT_CLASSIFICATION	8.995231904057417E-7	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999992546355	WITHOUT_CLASSIFICATION	7.45364695899213E-10	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999946560418146	WITHOUT_CLASSIFICATION	5.343958185457073E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999997672480149	WITHOUT_CLASSIFICATION	2.3275198511526535E-7	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999994101797404	WITHOUT_CLASSIFICATION	5.898202596603867E-7	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999994058305022	WITHOUT_CLASSIFICATION	5.941694977369508E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.999999952528459	WITHOUT_CLASSIFICATION	4.7471541005493603E-8	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999995965452413	WITHOUT_CLASSIFICATION	4.0345475872682005E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9946482153428148	WITHOUT_CLASSIFICATION	0.0053517846571851935	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999498282684885	WITHOUT_CLASSIFICATION	5.017173151143098E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999998994851891	WITHOUT_CLASSIFICATION	1.0051481088852154E-7	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999913769351183	WITHOUT_CLASSIFICATION	8.623064881675221E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999993623576756	WITHOUT_CLASSIFICATION	6.376423244331577E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999993283443829	WITHOUT_CLASSIFICATION	6.716556170744593E-7	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.999969767591355	WITHOUT_CLASSIFICATION	3.023240864494292E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999933034154758	WITHOUT_CLASSIFICATION	6.69658452424954E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999998771210398	WITHOUT_CLASSIFICATION	1.2287896017369164E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999999690766039	WITHOUT_CLASSIFICATION	3.0923396095881746E-8	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999998456176896	WITHOUT_CLASSIFICATION	1.543823102566895E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999910831984	WITHOUT_CLASSIFICATION	8.91680161841786E-9	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999994817256282	WITHOUT_CLASSIFICATION	5.182743718105674E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999995535991	WITHOUT_CLASSIFICATION	4.4640100522580765E-10	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999984048777248	WITHOUT_CLASSIFICATION	1.5951222750816968E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.999999265276386	WITHOUT_CLASSIFICATION	7.34723613932512E-7	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.999999922560779	WITHOUT_CLASSIFICATION	7.743922101164124E-8	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999993979588385	WITHOUT_CLASSIFICATION	6.02041161456397E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999912446571462	WITHOUT_CLASSIFICATION	8.755342853831636E-6	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999992341121794	WITHOUT_CLASSIFICATION	7.658878206694899E-7	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999998395426472	WITHOUT_CLASSIFICATION	1.6045735282103015E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.999992926026109	WITHOUT_CLASSIFICATION	7.0739738908857E-6	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999633056713	WITHOUT_CLASSIFICATION	3.6694328704561095E-8	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9994759612203321	WITHOUT_CLASSIFICATION	5.240387796678806E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999793905267378	WITHOUT_CLASSIFICATION	2.0609473262168538E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999957366869291	WITHOUT_CLASSIFICATION	4.263313070964027E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999989786608	WITHOUT_CLASSIFICATION	1.0213391847986393E-9	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999992955585	WITHOUT_CLASSIFICATION	7.044413859629692E-10	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999986199830897	WITHOUT_CLASSIFICATION	1.380016910330844E-6	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999768420373614	WITHOUT_CLASSIFICATION	2.3157962638722684E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.999999995612137	WITHOUT_CLASSIFICATION	4.387862961761321E-9	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999661158965	WITHOUT_CLASSIFICATION	3.388410356854176E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9997124157777548	WITHOUT_CLASSIFICATION	2.8758422224518104E-4	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999995925117718	WITHOUT_CLASSIFICATION	4.074882281161917E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999998994851891	WITHOUT_CLASSIFICATION	1.0051481088852154E-7	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999257898434	WITHOUT_CLASSIFICATION	7.421015663513242E-8	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999994467410015	WITHOUT_CLASSIFICATION	5.532589984215074E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999994467410015	WITHOUT_CLASSIFICATION	5.532589984215074E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999996777179575	WITHOUT_CLASSIFICATION	3.222820425994841E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999999928215587	WITHOUT_CLASSIFICATION	7.178441305105494E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999999928215587	WITHOUT_CLASSIFICATION	7.178441305105494E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999994092627577	WITHOUT_CLASSIFICATION	5.907372422746919E-7	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.999999915996097	WITHOUT_CLASSIFICATION	8.400390291393212E-8	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999981765452298	WITHOUT_CLASSIFICATION	1.8234547701758299E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999015505942	WITHOUT_CLASSIFICATION	9.844940592361809E-8	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999982708220988	WITHOUT_CLASSIFICATION	1.729177901147211E-6	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999968666893546	WITHOUT_CLASSIFICATION	3.133310645469814E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999997685090848	WITHOUT_CLASSIFICATION	2.3149091535394606E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999998062034102	WITHOUT_CLASSIFICATION	1.9379658983629923E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999653700241752	WITHOUT_CLASSIFICATION	3.462997582473081E-5	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999858128435165	WITHOUT_CLASSIFICATION	1.4187156483485415E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999998659415116	WITHOUT_CLASSIFICATION	1.340584884584569E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999991435394895	WITHOUT_CLASSIFICATION	8.56460510451631E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999508296850381	WITHOUT_CLASSIFICATION	4.9170314961774786E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9998613852896823	WITHOUT_CLASSIFICATION	1.386147103178036E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9998702696289133	WITHOUT_CLASSIFICATION	1.297303710866573E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.999999858983377	WITHOUT_CLASSIFICATION	1.4101662302297503E-7	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999998550870073	WITHOUT_CLASSIFICATION	1.449129926916081E-7	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999986625758434	WITHOUT_CLASSIFICATION	1.3374241566525125E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997863124207	WITHOUT_CLASSIFICATION	2.1368757936007475E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999999928215587	WITHOUT_CLASSIFICATION	7.178441305105494E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999994092627577	WITHOUT_CLASSIFICATION	5.907372422746919E-7	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.999999858983377	WITHOUT_CLASSIFICATION	1.4101662302297503E-7	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999692065799276	WITHOUT_CLASSIFICATION	3.079342007245288E-5	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998939608763	WITHOUT_CLASSIFICATION	1.0603912371853138E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999998392481675	WITHOUT_CLASSIFICATION	1.6075183245997122E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999943310489396	WITHOUT_CLASSIFICATION	5.668951060431163E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999995825461907	WITHOUT_CLASSIFICATION	4.174538092553611E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999999617021356	WITHOUT_CLASSIFICATION	3.829786446678998E-8	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999999210011297	WITHOUT_CLASSIFICATION	7.899887030128138E-8	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999983709759511	WITHOUT_CLASSIFICATION	1.6290240489400028E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999946379159061	WITHOUT_CLASSIFICATION	5.362084093921351E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999995287787745	WITHOUT_CLASSIFICATION	4.7122122543703523E-7	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999985285010027	WITHOUT_CLASSIFICATION	1.4714989972798894E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999244560770095	WITHOUT_CLASSIFICATION	7.554392299040586E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999574589091617	WITHOUT_CLASSIFICATION	4.254109083842412E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999817284339567	WITHOUT_CLASSIFICATION	1.82715660433338E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9999883999535523	WITHOUT_CLASSIFICATION	1.160004644765789E-5	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9477217404955006	WITHOUT_CLASSIFICATION	0.052278259504499415	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999801429378	WITHOUT_CLASSIFICATION	1.985706226911798E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999995868581153	WITHOUT_CLASSIFICATION	4.1314188461627826E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999967012049423	WITHOUT_CLASSIFICATION	3.298795057613663E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999837711314206	WITHOUT_CLASSIFICATION	1.6228868579392913E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999910575566852	WITHOUT_CLASSIFICATION	8.942443314808027E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999996107210104	WITHOUT_CLASSIFICATION	3.892789895945509E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999997094790719	WITHOUT_CLASSIFICATION	2.90520928001115E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999986537849335	WITHOUT_CLASSIFICATION	1.3462150664723258E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999967330773237	WITHOUT_CLASSIFICATION	3.2669226761933053E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999895022896941	WITHOUT_CLASSIFICATION	1.0497710305958118E-5	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999973628629993	WITHOUT_CLASSIFICATION	2.6371370007292057E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999957248987975	WITHOUT_CLASSIFICATION	4.275101202481576E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999792930296	WITHOUT_CLASSIFICATION	2.0706970398909268E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999997414960128	WITHOUT_CLASSIFICATION	2.585039873035929E-7	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999997883759324	WITHOUT_CLASSIFICATION	2.1162406766293573E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999972317709	WITHOUT_CLASSIFICATION	2.7682291999756373E-9	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999997190605369	WITHOUT_CLASSIFICATION	2.8093946314807484E-7	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999084860963954	WITHOUT_CLASSIFICATION	9.151390360461922E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999949920399182	WITHOUT_CLASSIFICATION	5.007960081755451E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999999352573397	WITHOUT_CLASSIFICATION	6.47426603954884E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998038394187	WITHOUT_CLASSIFICATION	1.961605812770108E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.999999991717442	WITHOUT_CLASSIFICATION	8.282558020830263E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999509607382805	WITHOUT_CLASSIFICATION	4.9039261719425045E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999509607382805	WITHOUT_CLASSIFICATION	4.9039261719425045E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999837514179	WITHOUT_CLASSIFICATION	1.6248582124186562E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.999999983151374	WITHOUT_CLASSIFICATION	1.684862606254362E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.999999983151374	WITHOUT_CLASSIFICATION	1.684862606254362E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999092563076	WITHOUT_CLASSIFICATION	9.074369245811859E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999092563076	WITHOUT_CLASSIFICATION	9.074369245811859E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999999636416138	WITHOUT_CLASSIFICATION	3.6358386196123906E-8	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999993900943669	WITHOUT_CLASSIFICATION	6.099056331348289E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999999656924736	WITHOUT_CLASSIFICATION	3.430752637422556E-8	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999996938846691	WITHOUT_CLASSIFICATION	3.061153308483466E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999027180053	WITHOUT_CLASSIFICATION	9.728199475847074E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.999999273611355	WITHOUT_CLASSIFICATION	7.263886449585175E-7	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999029545362	WITHOUT_CLASSIFICATION	9.704546379577733E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999998811472422	WITHOUT_CLASSIFICATION	1.1885275780025113E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999509607382805	WITHOUT_CLASSIFICATION	4.9039261719425045E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.999999717968076	WITHOUT_CLASSIFICATION	2.8203192399087717E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999823045751	WITHOUT_CLASSIFICATION	1.769542495638814E-8	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999998911806257	WITHOUT_CLASSIFICATION	1.0881937417293582E-7	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9981658786669301	WITHOUT_CLASSIFICATION	0.0018341213330698091	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999935458656228	WITHOUT_CLASSIFICATION	6.454134377269623E-6	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999992570979124	WITHOUT_CLASSIFICATION	7.429020877308915E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.999960829617237	WITHOUT_CLASSIFICATION	3.917038276289693E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999993673446969	WITHOUT_CLASSIFICATION	6.326553030770029E-7	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.999999933468524	WITHOUT_CLASSIFICATION	6.653147599145243E-8	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.999999933468524	WITHOUT_CLASSIFICATION	6.653147599145243E-8	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999971016265627	WITHOUT_CLASSIFICATION	2.8983734372546386E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999983761071274	WITHOUT_CLASSIFICATION	1.623892872608687E-6	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999994168709885	WITHOUT_CLASSIFICATION	5.831290115909282E-7	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999999423067811	WITHOUT_CLASSIFICATION	5.769321882818325E-8	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999989872478037	WITHOUT_CLASSIFICATION	1.0127521963510847E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997762146695	WITHOUT_CLASSIFICATION	2.2378533041554176E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999883134875	WITHOUT_CLASSIFICATION	1.1686512502408621E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999792831324	WITHOUT_CLASSIFICATION	2.0716867624734276E-8	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.99999942840826	WITHOUT_CLASSIFICATION	5.715917399374869E-7	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997762146695	WITHOUT_CLASSIFICATION	2.2378533041554176E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999990586355867	WITHOUT_CLASSIFICATION	9.413644132441278E-7	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999982543563497	WITHOUT_CLASSIFICATION	1.7456436501811389E-6	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999909931334038	WITHOUT_CLASSIFICATION	9.006866596253113E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9978902692243801	WITHOUT_CLASSIFICATION	0.0021097307756199647	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999984528871623	WITHOUT_CLASSIFICATION	1.5471128377441225E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999997841559102	WITHOUT_CLASSIFICATION	2.1584408988395118E-7	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999993292124844	WITHOUT_CLASSIFICATION	6.707875156898187E-7	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999909873682645	WITHOUT_CLASSIFICATION	9.012631735465073E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999909873682645	WITHOUT_CLASSIFICATION	9.012631735465073E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999961184168927	WITHOUT_CLASSIFICATION	3.88158310726902E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999961184168927	WITHOUT_CLASSIFICATION	3.88158310726902E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999931268239224	WITHOUT_CLASSIFICATION	6.873176077724869E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999900205411272	WITHOUT_CLASSIFICATION	9.97945887270216E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999900205411272	WITHOUT_CLASSIFICATION	9.97945887270216E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999900490402173	WITHOUT_CLASSIFICATION	9.950959782691262E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999905699051033	WITHOUT_CLASSIFICATION	9.430094896790609E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999905699051033	WITHOUT_CLASSIFICATION	9.430094896790609E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999930914223466	WITHOUT_CLASSIFICATION	6.908577653451213E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999953797695583	WITHOUT_CLASSIFICATION	4.62023044160176E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999941889788	WITHOUT_CLASSIFICATION	5.811021260670548E-9	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999592831707216	WITHOUT_CLASSIFICATION	4.071682927837116E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.999999941270195	WITHOUT_CLASSIFICATION	5.872980497162351E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999993935448371	WITHOUT_CLASSIFICATION	6.064551629518252E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999993935448371	WITHOUT_CLASSIFICATION	6.064551629518252E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999941126977276	WITHOUT_CLASSIFICATION	5.8873022723347535E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999941126977276	WITHOUT_CLASSIFICATION	5.8873022723347535E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999977333072162	WITHOUT_CLASSIFICATION	2.266692783855784E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999998937580945	WITHOUT_CLASSIFICATION	1.0624190557689746E-7	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999847877419057	WITHOUT_CLASSIFICATION	1.5212258094351173E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999978596537733	WITHOUT_CLASSIFICATION	2.14034622675923E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999909873682645	WITHOUT_CLASSIFICATION	9.012631735465073E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999996640266897	WITHOUT_CLASSIFICATION	3.359733103718701E-7	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999605990888	WITHOUT_CLASSIFICATION	3.940091120695431E-8	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999961184168927	WITHOUT_CLASSIFICATION	3.88158310726902E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999961184168927	WITHOUT_CLASSIFICATION	3.88158310726902E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999931268239224	WITHOUT_CLASSIFICATION	6.873176077724869E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999900205411272	WITHOUT_CLASSIFICATION	9.97945887270216E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999900205411272	WITHOUT_CLASSIFICATION	9.97945887270216E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999900205411272	WITHOUT_CLASSIFICATION	9.97945887270216E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999900490402173	WITHOUT_CLASSIFICATION	9.950959782691262E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999905699051033	WITHOUT_CLASSIFICATION	9.430094896790609E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999930914223466	WITHOUT_CLASSIFICATION	6.908577653451213E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999953797695583	WITHOUT_CLASSIFICATION	4.62023044160176E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999993935448371	WITHOUT_CLASSIFICATION	6.064551629518252E-7	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.999999979182231	WITHOUT_CLASSIFICATION	2.081776891639253E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999999564717235	WITHOUT_CLASSIFICATION	4.3528276542057987E-8	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999999292195519	WITHOUT_CLASSIFICATION	7.07804480616634E-8	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999926734085	WITHOUT_CLASSIFICATION	7.326591501889495E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999993935448371	WITHOUT_CLASSIFICATION	6.064551629518252E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999941126977276	WITHOUT_CLASSIFICATION	5.8873022723347535E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999941126977276	WITHOUT_CLASSIFICATION	5.8873022723347535E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999847877419057	WITHOUT_CLASSIFICATION	1.5212258094351173E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999847877419057	WITHOUT_CLASSIFICATION	1.5212258094351173E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999486596093	WITHOUT_CLASSIFICATION	5.1340390685905854E-8	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999869108721956	WITHOUT_CLASSIFICATION	1.3089127804400737E-5	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999843539938704	WITHOUT_CLASSIFICATION	1.5646006129590395E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999939811393906	WITHOUT_CLASSIFICATION	6.018860609353248E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.99997918543419	WITHOUT_CLASSIFICATION	2.0814565809968215E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999936504211226	WITHOUT_CLASSIFICATION	6.349578877404832E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999842213988035	WITHOUT_CLASSIFICATION	1.577860119657034E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999976398545359	WITHOUT_CLASSIFICATION	2.360145463984383E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.999998410933537	WITHOUT_CLASSIFICATION	1.5890664630355997E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999656730928341	WITHOUT_CLASSIFICATION	3.432690716577493E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999998497136511	WITHOUT_CLASSIFICATION	1.502863489582941E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999993491585009	WITHOUT_CLASSIFICATION	6.508414992202219E-7	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999982177521733	WITHOUT_CLASSIFICATION	1.7822478265507833E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999986820149154	WITHOUT_CLASSIFICATION	1.3179850846447496E-6	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.999999856042185	WITHOUT_CLASSIFICATION	1.4395781508015675E-7	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999964843201353	WITHOUT_CLASSIFICATION	3.515679864608025E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999985341240332	WITHOUT_CLASSIFICATION	1.4658759667477046E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999964568720592	WITHOUT_CLASSIFICATION	3.5431279408331977E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999997949959006	WITHOUT_CLASSIFICATION	2.0500409935497432E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999945584714363	WITHOUT_CLASSIFICATION	5.4415285637072385E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999954930109853	WITHOUT_CLASSIFICATION	4.506989014646969E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9999503042160625	WITHOUT_CLASSIFICATION	4.9695783937512E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999025838873	WITHOUT_CLASSIFICATION	9.741611264029341E-8	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999025838873	WITHOUT_CLASSIFICATION	9.741611264029341E-8	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999998262629493	WITHOUT_CLASSIFICATION	1.737370507408179E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999956649205824	WITHOUT_CLASSIFICATION	4.33507941748848E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9995729276311542	WITHOUT_CLASSIFICATION	4.2707236884578363E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999999658617531	WITHOUT_CLASSIFICATION	3.413824689735159E-8	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999996619790923	WITHOUT_CLASSIFICATION	3.3802090768322394E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999997559535659	WITHOUT_CLASSIFICATION	2.4404643406220695E-7	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999999077154053	WITHOUT_CLASSIFICATION	9.228459477246623E-8	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999999946965804	WITHOUT_CLASSIFICATION	5.303419638443569E-9	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999995742396299	WITHOUT_CLASSIFICATION	4.2576037016511164E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999995742396299	WITHOUT_CLASSIFICATION	4.2576037016511164E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999995742396299	WITHOUT_CLASSIFICATION	4.2576037016511164E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999991709179744	WITHOUT_CLASSIFICATION	8.290820255877076E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999991709179744	WITHOUT_CLASSIFICATION	8.290820255877076E-7	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999991709179744	WITHOUT_CLASSIFICATION	8.290820255877076E-7	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999999392033028	WITHOUT_CLASSIFICATION	6.079669730742656E-8	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.999995940140008	WITHOUT_CLASSIFICATION	4.059859992035585E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.99999421496299	WITHOUT_CLASSIFICATION	5.785037010072196E-6	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9965920955170358	WITHOUT_CLASSIFICATION	0.003407904482964222	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999997874645896	WITHOUT_CLASSIFICATION	2.1253541046098915E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999864403556482	WITHOUT_CLASSIFICATION	1.3559644351815536E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999804830291271	WITHOUT_CLASSIFICATION	1.951697087295942E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999998351600243	WITHOUT_CLASSIFICATION	1.648399756097793E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995819353149	WITHOUT_CLASSIFICATION	4.180646851538567E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.999995512846044	WITHOUT_CLASSIFICATION	4.487153955943203E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999311189286212	WITHOUT_CLASSIFICATION	6.888107137890193E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999421530215522	WITHOUT_CLASSIFICATION	5.784697844773973E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9998794920054377	WITHOUT_CLASSIFICATION	1.2050799456222025E-4	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999915318645	WITHOUT_CLASSIFICATION	8.468135524033622E-9	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999857593711319	WITHOUT_CLASSIFICATION	1.4240628868211961E-5	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999997368667114	WITHOUT_CLASSIFICATION	2.631332885705638E-7	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999980970853192	WITHOUT_CLASSIFICATION	1.902914680863729E-6	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999958184263364	WITHOUT_CLASSIFICATION	4.181573663534701E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9942938660328826	WITHOUT_CLASSIFICATION	0.005706133967117432	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999923075777518	WITHOUT_CLASSIFICATION	7.692422248192803E-6	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999807260304	WITHOUT_CLASSIFICATION	1.927396964450521E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999973251169988	WITHOUT_CLASSIFICATION	2.674883001171072E-6	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.8768985870207426	WITHOUT_CLASSIFICATION	0.12310141297925731	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999981740713	WITHOUT_CLASSIFICATION	1.8259287162747613E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999999463767536	WITHOUT_CLASSIFICATION	5.3623246371673745E-8	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999426372039845	WITHOUT_CLASSIFICATION	5.736279601557418E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999283816432	WITHOUT_CLASSIFICATION	7.161835683263489E-8	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999996283859	WITHOUT_CLASSIFICATION	3.7161410514692295E-10	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999970535180825	WITHOUT_CLASSIFICATION	2.9464819173758836E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999970535180825	WITHOUT_CLASSIFICATION	2.9464819173758836E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999848599272134	WITHOUT_CLASSIFICATION	1.5140072786720647E-5	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999978475504	WITHOUT_CLASSIFICATION	2.1524494390663996E-9	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999995385064333	WITHOUT_CLASSIFICATION	4.614935666206708E-7	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999998683836687	WITHOUT_CLASSIFICATION	1.3161633133934018E-7	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999967066730635	WITHOUT_CLASSIFICATION	3.2933269364416326E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999937222548	WITHOUT_CLASSIFICATION	6.27774522129955E-9	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999284636341045	WITHOUT_CLASSIFICATION	7.153636589554386E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999999522281914	WITHOUT_CLASSIFICATION	4.777180857572781E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999992888202666	WITHOUT_CLASSIFICATION	7.111797333368699E-7	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999981597437702	WITHOUT_CLASSIFICATION	1.8402562298787742E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999968591215241	WITHOUT_CLASSIFICATION	3.140878475913305E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9998468913423748	WITHOUT_CLASSIFICATION	1.5310865762516984E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999087770592981	WITHOUT_CLASSIFICATION	9.122294070184139E-5	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9997988931768603	WITHOUT_CLASSIFICATION	2.0110682313958202E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999964568720592	WITHOUT_CLASSIFICATION	3.5431279408331977E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999980108735144	WITHOUT_CLASSIFICATION	1.989126485564437E-6	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.999988301997111	WITHOUT_CLASSIFICATION	1.169800288902705E-5	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999955087538748	WITHOUT_CLASSIFICATION	4.491246125219526E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9870728156046991	WITHOUT_CLASSIFICATION	0.012927184395301059	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999995418832401	WITHOUT_CLASSIFICATION	4.5811675990442263E-7	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999969505543	WITHOUT_CLASSIFICATION	3.049445744052377E-9	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999959632584102	WITHOUT_CLASSIFICATION	4.036741589814811E-6	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.999995776784985	WITHOUT_CLASSIFICATION	4.223215014987465E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999975212314487	WITHOUT_CLASSIFICATION	2.4787685512743203E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999979184649814	WITHOUT_CLASSIFICATION	2.0815350185901093E-6	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999740465595	WITHOUT_CLASSIFICATION	2.5953440480487852E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999627743266181	WITHOUT_CLASSIFICATION	3.7225673381972826E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999994488996231	WITHOUT_CLASSIFICATION	5.511003769032359E-7	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999987367871245	WITHOUT_CLASSIFICATION	1.2632128754825594E-6	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.999999307896517	WITHOUT_CLASSIFICATION	6.921034829868865E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999988509223571	WITHOUT_CLASSIFICATION	1.1490776428567752E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999972221165175	WITHOUT_CLASSIFICATION	2.7778834824326387E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999972166893	WITHOUT_CLASSIFICATION	2.783310710880898E-9	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999994451960171	WITHOUT_CLASSIFICATION	5.548039829848485E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999959239895916	WITHOUT_CLASSIFICATION	4.076010408449341E-6	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999978129503764	WITHOUT_CLASSIFICATION	2.1870496235783893E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999485537205515	WITHOUT_CLASSIFICATION	5.144627944866667E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999985851277523	WITHOUT_CLASSIFICATION	1.4148722476503312E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999977825071624	WITHOUT_CLASSIFICATION	2.2174928375831357E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999993157826637	WITHOUT_CLASSIFICATION	6.842173362679146E-7	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9994200232703867	WITHOUT_CLASSIFICATION	5.799767296132954E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.999794982837714	WITHOUT_CLASSIFICATION	2.0501716228598556E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999902482735	WITHOUT_CLASSIFICATION	9.75172650611293E-9	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999902482735	WITHOUT_CLASSIFICATION	9.75172650611293E-9	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999999090237626	WITHOUT_CLASSIFICATION	9.097623750041348E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999866544709	WITHOUT_CLASSIFICATION	1.3345529030345046E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997917442023	WITHOUT_CLASSIFICATION	2.0825579777632482E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997917442023	WITHOUT_CLASSIFICATION	2.0825579777632482E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999864403556482	WITHOUT_CLASSIFICATION	1.3559644351815536E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999804830291271	WITHOUT_CLASSIFICATION	1.951697087295942E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999999356638791	WITHOUT_CLASSIFICATION	6.433612083576311E-8	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999891549411795	WITHOUT_CLASSIFICATION	1.08450588205054E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.999997245414512	WITHOUT_CLASSIFICATION	2.754585487991167E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999988710335737	WITHOUT_CLASSIFICATION	1.1289664263997888E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999869828504	WITHOUT_CLASSIFICATION	1.3017149499474333E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999998715548917	WITHOUT_CLASSIFICATION	1.284451082265995E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999985094546648	WITHOUT_CLASSIFICATION	1.490545335238763E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999996371125721	WITHOUT_CLASSIFICATION	3.628874278867517E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999999407277417	WITHOUT_CLASSIFICATION	5.927225833159494E-8	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9995175197405661	WITHOUT_CLASSIFICATION	4.824802594337696E-4	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999999593918523	WITHOUT_CLASSIFICATION	4.060814769316259E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999972949515497	WITHOUT_CLASSIFICATION	2.7050484503270485E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999994587232949	WITHOUT_CLASSIFICATION	5.412767052246647E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999994587232949	WITHOUT_CLASSIFICATION	5.412767052246647E-7	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999923048588	WITHOUT_CLASSIFICATION	7.695141200007034E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999999209085776	WITHOUT_CLASSIFICATION	7.909142243377674E-8	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999983069482269	WITHOUT_CLASSIFICATION	1.693051773089672E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999953653276942	WITHOUT_CLASSIFICATION	4.634672305864513E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999996286073874	WITHOUT_CLASSIFICATION	3.713926125911245E-7	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999997857699957	WITHOUT_CLASSIFICATION	2.142300042320598E-7	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999954190032219	WITHOUT_CLASSIFICATION	4.580996778150771E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999983005554371	WITHOUT_CLASSIFICATION	1.6994445628727347E-6	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999997888838583	WITHOUT_CLASSIFICATION	2.111161416248984E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.999898775731208	WITHOUT_CLASSIFICATION	1.0122426879208953E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999019354650337	WITHOUT_CLASSIFICATION	9.806453496625962E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.999936054834674	WITHOUT_CLASSIFICATION	6.39451653260112E-5	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9907138284475435	WITHOUT_CLASSIFICATION	0.00928617155245654	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999817704460394	WITHOUT_CLASSIFICATION	1.822955396054075E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999817534225365	WITHOUT_CLASSIFICATION	1.8246577463442723E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999838832709871	WITHOUT_CLASSIFICATION	1.611672901286934E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999996633772007	WITHOUT_CLASSIFICATION	3.3662279922878476E-7	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999998905639773	WITHOUT_CLASSIFICATION	1.094360227457748E-7	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999993695837841	WITHOUT_CLASSIFICATION	6.304162158488493E-7	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999983673348	WITHOUT_CLASSIFICATION	1.6326653147375379E-9	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999513367515218	WITHOUT_CLASSIFICATION	4.866324847818782E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999995763365188	WITHOUT_CLASSIFICATION	4.23663481166375E-7	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999977486300738	WITHOUT_CLASSIFICATION	2.2513699262510107E-6	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999834308841149	WITHOUT_CLASSIFICATION	1.6569115885109753E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999962625317622	WITHOUT_CLASSIFICATION	3.7374682376603364E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999999008553484	WITHOUT_CLASSIFICATION	9.91446515096301E-8	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.999999499542307	WITHOUT_CLASSIFICATION	5.004576929467852E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999921591232886	WITHOUT_CLASSIFICATION	7.840876711283875E-6	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999947466536907	WITHOUT_CLASSIFICATION	5.253346309341159E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994020176950309	WITHOUT_CLASSIFICATION	5.97982304969163E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994020176950309	WITHOUT_CLASSIFICATION	5.97982304969163E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994020176950309	WITHOUT_CLASSIFICATION	5.97982304969163E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994020176950309	WITHOUT_CLASSIFICATION	5.97982304969163E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994020176950309	WITHOUT_CLASSIFICATION	5.97982304969163E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994020176950309	WITHOUT_CLASSIFICATION	5.97982304969163E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999985912549093	WITHOUT_CLASSIFICATION	1.4087450907690043E-6	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999999761514935	WITHOUT_CLASSIFICATION	2.384850647165825E-8	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999999750239918	WITHOUT_CLASSIFICATION	2.4976008128196498E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999667482956375	WITHOUT_CLASSIFICATION	3.325170436259245E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999667482956375	WITHOUT_CLASSIFICATION	3.325170436259245E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999997593418106	WITHOUT_CLASSIFICATION	2.406581894005243E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999997593418106	WITHOUT_CLASSIFICATION	2.406581894005243E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999998340496663	WITHOUT_CLASSIFICATION	1.6595033369538908E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999983140759922	WITHOUT_CLASSIFICATION	1.6859240078838153E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999998884503088	WITHOUT_CLASSIFICATION	1.1154969105040109E-7	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999442124884996	WITHOUT_CLASSIFICATION	5.578751150036095E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999998931917873	WITHOUT_CLASSIFICATION	1.0680821272623034E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999992524826506	WITHOUT_CLASSIFICATION	7.4751734935809E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999998904963305	WITHOUT_CLASSIFICATION	1.0950366938415516E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999998904963305	WITHOUT_CLASSIFICATION	1.0950366938415516E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999990972071623	WITHOUT_CLASSIFICATION	9.02792837807446E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999990972071623	WITHOUT_CLASSIFICATION	9.02792837807446E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999990972071623	WITHOUT_CLASSIFICATION	9.02792837807446E-7	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997943554436168	WITHOUT_CLASSIFICATION	2.056445563832591E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997943554436168	WITHOUT_CLASSIFICATION	2.056445563832591E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999992223046896	WITHOUT_CLASSIFICATION	7.776953103776244E-7	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999844743923	WITHOUT_CLASSIFICATION	1.552560768399985E-8	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999998458336824	WITHOUT_CLASSIFICATION	1.5416631759890885E-7	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999881444297039	WITHOUT_CLASSIFICATION	1.1855570296229746E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999929798787	WITHOUT_CLASSIFICATION	7.020121326456788E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999929798787	WITHOUT_CLASSIFICATION	7.020121326456788E-9	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999997780202056	WITHOUT_CLASSIFICATION	2.2197979429827654E-7	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994020176950309	WITHOUT_CLASSIFICATION	5.97982304969163E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999929798787	WITHOUT_CLASSIFICATION	7.020121326456788E-9	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999899634846	WITHOUT_CLASSIFICATION	1.0036515444360335E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999999899634846	WITHOUT_CLASSIFICATION	1.0036515444360335E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999929798787	WITHOUT_CLASSIFICATION	7.020121326456788E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999929798787	WITHOUT_CLASSIFICATION	7.020121326456788E-9	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999929798787	WITHOUT_CLASSIFICATION	7.020121326456788E-9	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.99998783921364	WITHOUT_CLASSIFICATION	1.2160786360082151E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999951626415	WITHOUT_CLASSIFICATION	4.837358477708477E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999970296141	WITHOUT_CLASSIFICATION	2.9703858490715055E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999970296141	WITHOUT_CLASSIFICATION	2.9703858490715055E-9	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999941884588	WITHOUT_CLASSIFICATION	5.811541232389309E-9	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999998170284664	WITHOUT_CLASSIFICATION	1.8297153348327937E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999997538271688	WITHOUT_CLASSIFICATION	2.4617283124945955E-7	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999997003597	WITHOUT_CLASSIFICATION	2.9964022059536036E-10	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9996854651675297	WITHOUT_CLASSIFICATION	3.145348324704397E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999998861702613	WITHOUT_CLASSIFICATION	1.1382973877877862E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999999745092552	WITHOUT_CLASSIFICATION	2.5490744902827336E-8	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999998039844464	WITHOUT_CLASSIFICATION	1.9601555352975404E-7	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999998502202264	WITHOUT_CLASSIFICATION	1.4977977352234106E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999996205288805	WITHOUT_CLASSIFICATION	3.794711195420471E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999999474513749	WITHOUT_CLASSIFICATION	5.254862498515564E-8	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999995347493377	WITHOUT_CLASSIFICATION	4.652506624560172E-7	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999999455421568	WITHOUT_CLASSIFICATION	5.4457843213710896E-8	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999998900133001	WITHOUT_CLASSIFICATION	1.0998669978366358E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999999378380215	WITHOUT_CLASSIFICATION	6.216197853714951E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.999960853141354	WITHOUT_CLASSIFICATION	3.914685864611409E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999897306816474	WITHOUT_CLASSIFICATION	1.0269318352605716E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999174179106	WITHOUT_CLASSIFICATION	8.258208943608746E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.999998546301274	WITHOUT_CLASSIFICATION	1.4536987259805498E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999988471505	WITHOUT_CLASSIFICATION	1.1528494264784278E-9	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999994887839754	WITHOUT_CLASSIFICATION	5.112160247054847E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999174179106	WITHOUT_CLASSIFICATION	8.258208943608746E-8	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999995725519979	WITHOUT_CLASSIFICATION	4.2744800213285763E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.999998546301274	WITHOUT_CLASSIFICATION	1.4536987259805498E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999988471505	WITHOUT_CLASSIFICATION	1.1528494264784278E-9	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999998697144459	WITHOUT_CLASSIFICATION	1.3028555420112326E-7	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999999995241355	WITHOUT_CLASSIFICATION	4.758643633366884E-10	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999999102070752	WITHOUT_CLASSIFICATION	8.979292474736302E-8	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999997035302729	WITHOUT_CLASSIFICATION	2.964697270732082E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999998042224978	WITHOUT_CLASSIFICATION	1.9577750216793568E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999996786644043	WITHOUT_CLASSIFICATION	3.213355956912155E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9996142098905997	WITHOUT_CLASSIFICATION	3.857901094004092E-4	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999996301846008	WITHOUT_CLASSIFICATION	3.698153992755998E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999654218715529	WITHOUT_CLASSIFICATION	3.457812844712539E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.999999292148833	WITHOUT_CLASSIFICATION	7.078511669818839E-7	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.999999851390844	WITHOUT_CLASSIFICATION	1.4860915591564895E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999993742661468	WITHOUT_CLASSIFICATION	6.257338531536387E-7	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999985586002134	WITHOUT_CLASSIFICATION	1.441399786715042E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999984564392929	WITHOUT_CLASSIFICATION	1.5435607071920137E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.999999544562118	WITHOUT_CLASSIFICATION	4.5543788202847365E-7	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999900505340715	WITHOUT_CLASSIFICATION	9.949465928421305E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999952834262139	WITHOUT_CLASSIFICATION	4.716573786131864E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999996127624404	WITHOUT_CLASSIFICATION	3.872375595428065E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999996127624404	WITHOUT_CLASSIFICATION	3.872375595428065E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999940356141533	WITHOUT_CLASSIFICATION	5.964385846704482E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999940356141533	WITHOUT_CLASSIFICATION	5.964385846704482E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999974280322459	WITHOUT_CLASSIFICATION	2.571967754099231E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999974280322459	WITHOUT_CLASSIFICATION	2.571967754099231E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999995451450716	WITHOUT_CLASSIFICATION	4.5485492842579887E-7	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999978026390212	WITHOUT_CLASSIFICATION	2.1973609788139902E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999997883206646	WITHOUT_CLASSIFICATION	2.116793354507707E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999995367414086	WITHOUT_CLASSIFICATION	4.632585912854623E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999999413361556	WITHOUT_CLASSIFICATION	5.866384455074739E-8	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999991831212759	WITHOUT_CLASSIFICATION	8.168787240674567E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999993304971518	WITHOUT_CLASSIFICATION	6.695028482060868E-7	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999998334686612	WITHOUT_CLASSIFICATION	1.665313388565755E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999760237999265	WITHOUT_CLASSIFICATION	2.3976200073539224E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9998203271036465	WITHOUT_CLASSIFICATION	1.7967289635339897E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999886038694462	WITHOUT_CLASSIFICATION	1.1396130553812368E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999693171894	WITHOUT_CLASSIFICATION	3.068281065666377E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999995259034227	WITHOUT_CLASSIFICATION	4.7409657742002714E-7	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999948763253	WITHOUT_CLASSIFICATION	5.123674673172599E-9	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999998288681593	WITHOUT_CLASSIFICATION	1.7113184081852044E-7	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999252506034	WITHOUT_CLASSIFICATION	7.474939659638081E-8	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999924794822357	WITHOUT_CLASSIFICATION	7.5205177642508445E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999729547014	WITHOUT_CLASSIFICATION	2.704529859089114E-8	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999933979020252	WITHOUT_CLASSIFICATION	6.602097974809692E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999999519758748	WITHOUT_CLASSIFICATION	4.802412527809894E-8	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9998827832833053	WITHOUT_CLASSIFICATION	1.1721671669475679E-4	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999968894946956	WITHOUT_CLASSIFICATION	3.110505304327121E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999970851511	WITHOUT_CLASSIFICATION	2.914848910267997E-9	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999999237498073	WITHOUT_CLASSIFICATION	7.625019263026859E-8	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999957706122	WITHOUT_CLASSIFICATION	4.229387882893971E-9	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999989814473959	WITHOUT_CLASSIFICATION	1.0185526041521975E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999913733628	WITHOUT_CLASSIFICATION	8.626637212729286E-9	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999998709801113	WITHOUT_CLASSIFICATION	1.2901988870856605E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999999801835483	WITHOUT_CLASSIFICATION	1.9816451721585874E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999998173980555	WITHOUT_CLASSIFICATION	1.8260194437822845E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999996215980086	WITHOUT_CLASSIFICATION	3.784019914578123E-7	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999993439921792	WITHOUT_CLASSIFICATION	6.560078208650149E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.998940696051743	WITHOUT_CLASSIFICATION	0.0010593039482570375	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9994298686915778	WITHOUT_CLASSIFICATION	5.701313084222606E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9994298686915778	WITHOUT_CLASSIFICATION	5.701313084222606E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9968345879459924	WITHOUT_CLASSIFICATION	0.003165412054007548	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999623027394188	WITHOUT_CLASSIFICATION	3.769726058118001E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9996116166544374	WITHOUT_CLASSIFICATION	3.8838334556259266E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999956089136103	WITHOUT_CLASSIFICATION	4.3910863896814006E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999217480126154	WITHOUT_CLASSIFICATION	7.825198738471116E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999713716323626	WITHOUT_CLASSIFICATION	2.8628367637442303E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999713716323626	WITHOUT_CLASSIFICATION	2.8628367637442303E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999713716323626	WITHOUT_CLASSIFICATION	2.8628367637442303E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999570749853887	WITHOUT_CLASSIFICATION	4.292501461127725E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.999975949709837	WITHOUT_CLASSIFICATION	2.405029016286559E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.999975949709837	WITHOUT_CLASSIFICATION	2.405029016286559E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999890028064429	WITHOUT_CLASSIFICATION	1.0997193557147149E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9993987220487014	WITHOUT_CLASSIFICATION	6.01277951298504E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999990591067807	WITHOUT_CLASSIFICATION	9.408932193137644E-7	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999990591067807	WITHOUT_CLASSIFICATION	9.408932193137644E-7	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999990591067807	WITHOUT_CLASSIFICATION	9.408932193137644E-7	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999969698977063	WITHOUT_CLASSIFICATION	3.0301022936555567E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999942621845996	WITHOUT_CLASSIFICATION	5.737815400420284E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999997291713454	WITHOUT_CLASSIFICATION	2.7082865456362704E-7	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.99999998101247	WITHOUT_CLASSIFICATION	1.898752993478325E-8	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999999179564	WITHOUT_CLASSIFICATION	8.204360003600422E-8	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999986669049807	WITHOUT_CLASSIFICATION	1.3330950193462703E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999995263387645	WITHOUT_CLASSIFICATION	4.736612355059299E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999996251597684	WITHOUT_CLASSIFICATION	3.7484023164621745E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999998212854615	WITHOUT_CLASSIFICATION	1.7871453838317567E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999967449389072	WITHOUT_CLASSIFICATION	3.255061092825159E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9961029339688204	WITHOUT_CLASSIFICATION	0.003897066031179445	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999252506034	WITHOUT_CLASSIFICATION	7.474939659638081E-8	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999999729547014	WITHOUT_CLASSIFICATION	2.704529859089114E-8	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999868816419245	WITHOUT_CLASSIFICATION	1.3118358075365463E-5	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999973211632959	WITHOUT_CLASSIFICATION	2.678836704118354E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995982797115	WITHOUT_CLASSIFICATION	4.017202885346996E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9998423757190934	WITHOUT_CLASSIFICATION	1.576242809066006E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999485242052	WITHOUT_CLASSIFICATION	5.147579493178659E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999485242052	WITHOUT_CLASSIFICATION	5.147579493178659E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999485242052	WITHOUT_CLASSIFICATION	5.147579493178659E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999929709248021	WITHOUT_CLASSIFICATION	7.029075197944556E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999929709248021	WITHOUT_CLASSIFICATION	7.029075197944556E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999971363938532	WITHOUT_CLASSIFICATION	2.863606146816468E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999741901579898	WITHOUT_CLASSIFICATION	2.580984201015565E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999971849200832	WITHOUT_CLASSIFICATION	2.81507991673731E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.999999876707948	WITHOUT_CLASSIFICATION	1.232920520201064E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.999955038078596	WITHOUT_CLASSIFICATION	4.496192140412611E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.999955038078596	WITHOUT_CLASSIFICATION	4.496192140412611E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.999999937174529	WITHOUT_CLASSIFICATION	6.282547095055418E-8	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999996231559153	WITHOUT_CLASSIFICATION	3.7684408468609533E-7	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999999173233793	WITHOUT_CLASSIFICATION	8.267662070269942E-8	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.999999622879933	WITHOUT_CLASSIFICATION	3.7712006698468777E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999987186433652	WITHOUT_CLASSIFICATION	1.2813566347035267E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999997603981509	WITHOUT_CLASSIFICATION	2.396018491839782E-7	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.999995376046463	WITHOUT_CLASSIFICATION	4.6239535369312874E-6	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999998894815932	WITHOUT_CLASSIFICATION	1.1051840678600475E-7	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999996871360056	WITHOUT_CLASSIFICATION	3.1286399437039755E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.999999994668741	WITHOUT_CLASSIFICATION	5.331258984711475E-9	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999994222841336	WITHOUT_CLASSIFICATION	5.777158664109241E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999998659180044	WITHOUT_CLASSIFICATION	1.3408199550585502E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995982797115	WITHOUT_CLASSIFICATION	4.017202885346996E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999575265768	WITHOUT_CLASSIFICATION	4.247342323351563E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999968591215241	WITHOUT_CLASSIFICATION	3.140878475913305E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995982797115	WITHOUT_CLASSIFICATION	4.017202885346996E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.999999876707948	WITHOUT_CLASSIFICATION	1.232920520201064E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9994111077952958	WITHOUT_CLASSIFICATION	5.88892204704081E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999728071336	WITHOUT_CLASSIFICATION	2.7192866405483348E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999994068541549	WITHOUT_CLASSIFICATION	5.931458450630224E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999994068541549	WITHOUT_CLASSIFICATION	5.931458450630224E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.99999709970533	WITHOUT_CLASSIFICATION	2.9002946699460295E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999971494792489	WITHOUT_CLASSIFICATION	2.85052075107492E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999998410219412	WITHOUT_CLASSIFICATION	1.5897805884128073E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.999997056912623	WITHOUT_CLASSIFICATION	2.9430873770471523E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999988155092	WITHOUT_CLASSIFICATION	1.1844908509626606E-9	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.999999911448344	WITHOUT_CLASSIFICATION	8.855165599914675E-8	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999967685067805	WITHOUT_CLASSIFICATION	3.231493219352583E-6	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999998958737996	WITHOUT_CLASSIFICATION	1.041262003501113E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999990662707	WITHOUT_CLASSIFICATION	9.337292717093734E-10	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999983051380562	WITHOUT_CLASSIFICATION	1.6948619438474408E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999663934276162	WITHOUT_CLASSIFICATION	3.360657238380781E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999999850358613	WITHOUT_CLASSIFICATION	1.496413875837044E-8	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999984736453577	WITHOUT_CLASSIFICATION	1.5263546423276047E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999994014388	WITHOUT_CLASSIFICATION	5.985612631098986E-10	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999982852690491	WITHOUT_CLASSIFICATION	1.7147309509583535E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999988909012671	WITHOUT_CLASSIFICATION	1.1090987329059788E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999927835920963	WITHOUT_CLASSIFICATION	7.216407903730636E-6	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999994902499872	WITHOUT_CLASSIFICATION	5.097500126848907E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999990621584253	WITHOUT_CLASSIFICATION	9.378415747042502E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999990621584253	WITHOUT_CLASSIFICATION	9.378415747042502E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995982797115	WITHOUT_CLASSIFICATION	4.017202885346996E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999990263683323	WITHOUT_CLASSIFICATION	9.736316677092407E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999994222841336	WITHOUT_CLASSIFICATION	5.777158664109241E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999977878565518	WITHOUT_CLASSIFICATION	2.212143448111341E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999999252977426	WITHOUT_CLASSIFICATION	7.470225736394832E-8	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999995001037721	WITHOUT_CLASSIFICATION	4.998962279574505E-7	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999999697943751	WITHOUT_CLASSIFICATION	3.020562500165154E-8	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9998038423637465	WITHOUT_CLASSIFICATION	1.9615763625340857E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999994222841336	WITHOUT_CLASSIFICATION	5.777158664109241E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999489877538251	WITHOUT_CLASSIFICATION	5.101224617490127E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9996265340619311	WITHOUT_CLASSIFICATION	3.73465938068808E-4	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999930983506777	WITHOUT_CLASSIFICATION	6.901649322239332E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999998725938977	WITHOUT_CLASSIFICATION	1.2740610240699112E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998297511974	WITHOUT_CLASSIFICATION	1.7024880268176269E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999999525352604	WITHOUT_CLASSIFICATION	4.746473954601183E-8	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999696408911227	WITHOUT_CLASSIFICATION	3.0359108877294155E-5	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.999999853160055	WITHOUT_CLASSIFICATION	1.468399449375536E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999473197440059	WITHOUT_CLASSIFICATION	5.268025599404103E-5	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999993468146079	WITHOUT_CLASSIFICATION	6.531853921146095E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999995597714241	WITHOUT_CLASSIFICATION	4.4022857590031083E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999995597714241	WITHOUT_CLASSIFICATION	4.4022857590031083E-7	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999973129775792	WITHOUT_CLASSIFICATION	2.687022420670185E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999955365247901	WITHOUT_CLASSIFICATION	4.463475209830818E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.999999913107702	WITHOUT_CLASSIFICATION	8.689229798576012E-8	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999992000517816	WITHOUT_CLASSIFICATION	7.999482184386226E-7	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999987805233684	WITHOUT_CLASSIFICATION	1.219476631578554E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999998356550978	WITHOUT_CLASSIFICATION	1.6434490220740207E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999982546885882	WITHOUT_CLASSIFICATION	1.7453114117600897E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999999016647269	WITHOUT_CLASSIFICATION	9.833527311932985E-8	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999617047958951	WITHOUT_CLASSIFICATION	3.8295204104888405E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.999993604371486	WITHOUT_CLASSIFICATION	6.395628514083834E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999991186935029	WITHOUT_CLASSIFICATION	8.813064970705894E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999990028172443	WITHOUT_CLASSIFICATION	9.971827556182404E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999990028172443	WITHOUT_CLASSIFICATION	9.971827556182404E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999990028172443	WITHOUT_CLASSIFICATION	9.971827556182404E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999990028172443	WITHOUT_CLASSIFICATION	9.971827556182404E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999990028172443	WITHOUT_CLASSIFICATION	9.971827556182404E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999990028172443	WITHOUT_CLASSIFICATION	9.971827556182404E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.999878994452004	WITHOUT_CLASSIFICATION	1.2100554799599701E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999998577519691	WITHOUT_CLASSIFICATION	1.422480309469551E-7	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999999789538556	WITHOUT_CLASSIFICATION	2.1046144457268627E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999999528890112	WITHOUT_CLASSIFICATION	4.711098870038987E-8	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999697014864537	WITHOUT_CLASSIFICATION	3.0298513546314743E-5	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999990565279983	WITHOUT_CLASSIFICATION	9.434720018657674E-7	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999998199030617	WITHOUT_CLASSIFICATION	1.8009693812158455E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999988100547195	WITHOUT_CLASSIFICATION	1.1899452805579408E-6	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9998656445605473	WITHOUT_CLASSIFICATION	1.3435543945265743E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999996992736436	WITHOUT_CLASSIFICATION	3.00726356331208E-7	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999999811361738	WITHOUT_CLASSIFICATION	1.8863826119114918E-8	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999992024113872	WITHOUT_CLASSIFICATION	7.975886128425353E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.999999527139184	WITHOUT_CLASSIFICATION	4.728608159356605E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999996316428615	WITHOUT_CLASSIFICATION	3.6835713838763636E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999988662536073	WITHOUT_CLASSIFICATION	1.1337463926710515E-6	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999999198413462	WITHOUT_CLASSIFICATION	8.015865391312021E-8	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999989451551782	WITHOUT_CLASSIFICATION	1.0548448218255572E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999993706084486	WITHOUT_CLASSIFICATION	6.293915513491114E-7	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999993706084486	WITHOUT_CLASSIFICATION	6.293915513491114E-7	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999952602123907	WITHOUT_CLASSIFICATION	4.739787609360267E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999996494160158	WITHOUT_CLASSIFICATION	3.505839842269234E-7	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999990477969074	WITHOUT_CLASSIFICATION	9.522030925968342E-7	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999815151554293	WITHOUT_CLASSIFICATION	1.8484844570768E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999987135782273	WITHOUT_CLASSIFICATION	1.2864217727357723E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999860976523628	WITHOUT_CLASSIFICATION	1.390234763726292E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999644072322849	WITHOUT_CLASSIFICATION	3.5592767715123516E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.999999930527536	WITHOUT_CLASSIFICATION	6.947246400765571E-8	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999992008150836	WITHOUT_CLASSIFICATION	7.991849164234817E-7	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999991852060822	WITHOUT_CLASSIFICATION	8.14793917678007E-7	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.999999771817927	WITHOUT_CLASSIFICATION	2.2818207312067255E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999998493321	WITHOUT_CLASSIFICATION	1.5066796008075084E-10	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999997841158893	WITHOUT_CLASSIFICATION	2.158841107273173E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999985505369	WITHOUT_CLASSIFICATION	1.4494631566839414E-9	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999996657795579	WITHOUT_CLASSIFICATION	3.3422044214195796E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999998145201581	WITHOUT_CLASSIFICATION	1.8547984190817888E-7	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999967175242132	WITHOUT_CLASSIFICATION	3.2824757868979955E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999961748285758	WITHOUT_CLASSIFICATION	3.82517142421945E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999920857716	WITHOUT_CLASSIFICATION	7.91422837912114E-9	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999946100930631	WITHOUT_CLASSIFICATION	5.389906936945226E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999859993727279	WITHOUT_CLASSIFICATION	1.4000627271993946E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999643236907656	WITHOUT_CLASSIFICATION	3.5676309234438724E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999709232157745	WITHOUT_CLASSIFICATION	2.9076784225455978E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999883836682278	WITHOUT_CLASSIFICATION	1.1616331772124354E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999913637380627	WITHOUT_CLASSIFICATION	8.636261937343077E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999847070208077	WITHOUT_CLASSIFICATION	1.529297919235242E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999806933026844	WITHOUT_CLASSIFICATION	1.93066973157508E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999704514938353	WITHOUT_CLASSIFICATION	2.9548506164758035E-5	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999734129793	WITHOUT_CLASSIFICATION	2.6587020767081856E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999946313619384	WITHOUT_CLASSIFICATION	5.368638061524237E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9997484784660052	WITHOUT_CLASSIFICATION	2.515215339947217E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999935220346218	WITHOUT_CLASSIFICATION	6.477965378241036E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999992328158306	WITHOUT_CLASSIFICATION	7.671841694528916E-7	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999998388152416	WITHOUT_CLASSIFICATION	1.6118475839858937E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999968012563532	WITHOUT_CLASSIFICATION	3.1987436467401527E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999921892901544	WITHOUT_CLASSIFICATION	7.810709845544533E-6	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999996786949662	WITHOUT_CLASSIFICATION	3.2130503380818843E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999964077481636	WITHOUT_CLASSIFICATION	3.5922518364688697E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999988702480638	WITHOUT_CLASSIFICATION	1.1297519362220007E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999988702480638	WITHOUT_CLASSIFICATION	1.1297519362220007E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999435811138404	WITHOUT_CLASSIFICATION	5.641888615957743E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999994439633362	WITHOUT_CLASSIFICATION	5.560366638296041E-7	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999655645749499	WITHOUT_CLASSIFICATION	3.4435425050056185E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999967108918618	WITHOUT_CLASSIFICATION	3.2891081382762035E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999995854529509	WITHOUT_CLASSIFICATION	4.145470490250287E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999945370983386	WITHOUT_CLASSIFICATION	5.462901661327246E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999616726979669	WITHOUT_CLASSIFICATION	3.8327302033048475E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9992284331908721	WITHOUT_CLASSIFICATION	7.715668091280672E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999987327471903	WITHOUT_CLASSIFICATION	1.2672528096993031E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999986642887213	WITHOUT_CLASSIFICATION	1.3357112787809428E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999793834450489	WITHOUT_CLASSIFICATION	2.061655495106235E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999844729638396	WITHOUT_CLASSIFICATION	1.552703616045135E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.999966755485641	WITHOUT_CLASSIFICATION	3.3244514359008906E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999752060303648	WITHOUT_CLASSIFICATION	2.4793969635094847E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9999599668503181	WITHOUT_CLASSIFICATION	4.0033149681886393E-5	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999962989561848	WITHOUT_CLASSIFICATION	3.7010438152024502E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999005075212416	WITHOUT_CLASSIFICATION	9.94924787582903E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999834528704968	WITHOUT_CLASSIFICATION	1.6547129503108886E-5	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999298033160035	WITHOUT_CLASSIFICATION	7.019668399650693E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999996337589698	WITHOUT_CLASSIFICATION	3.662410301500017E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999995578318056	WITHOUT_CLASSIFICATION	4.4216819439428405E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999857784157653	WITHOUT_CLASSIFICATION	1.4221584234691572E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.999999376937791	WITHOUT_CLASSIFICATION	6.230622091122076E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9992284331908721	WITHOUT_CLASSIFICATION	7.715668091280672E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999986460184799	WITHOUT_CLASSIFICATION	1.3539815200719268E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999986460184799	WITHOUT_CLASSIFICATION	1.3539815200719268E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.999999376937791	WITHOUT_CLASSIFICATION	6.230622091122076E-7	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999964868399069	WITHOUT_CLASSIFICATION	3.5131600929943673E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999681446953	WITHOUT_CLASSIFICATION	3.185530465910666E-8	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999999858894757	WITHOUT_CLASSIFICATION	1.4110524221406313E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999990833837956	WITHOUT_CLASSIFICATION	9.166162043244645E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999999051186602	WITHOUT_CLASSIFICATION	9.488133983789121E-8	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999365143664531	WITHOUT_CLASSIFICATION	6.348563354687377E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999989645581604	WITHOUT_CLASSIFICATION	1.0354418396461656E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999890912998389	WITHOUT_CLASSIFICATION	1.0908700160986366E-5	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999991229435659	WITHOUT_CLASSIFICATION	8.770564341531577E-7	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993302245319	WITHOUT_CLASSIFICATION	6.697754681609648E-7	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999996199944708	WITHOUT_CLASSIFICATION	3.8000552910173173E-7	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999996839028157	WITHOUT_CLASSIFICATION	3.1609718441203185E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997571870393	WITHOUT_CLASSIFICATION	2.4281296074892777E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999997571870393	WITHOUT_CLASSIFICATION	2.4281296074892777E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999963787688622	WITHOUT_CLASSIFICATION	3.6212311378930488E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999995504346706	WITHOUT_CLASSIFICATION	4.4956532934944134E-7	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999991139198283	WITHOUT_CLASSIFICATION	8.860801717686331E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999997461989679	WITHOUT_CLASSIFICATION	2.5380103214752306E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999997461989679	WITHOUT_CLASSIFICATION	2.5380103214752306E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999926518504095	WITHOUT_CLASSIFICATION	7.348149590494334E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999926518504095	WITHOUT_CLASSIFICATION	7.348149590494334E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999986733255595	WITHOUT_CLASSIFICATION	1.326674440518117E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999992533270635	WITHOUT_CLASSIFICATION	7.466729364438227E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999994981315276	WITHOUT_CLASSIFICATION	5.018684723963503E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999999720023799	WITHOUT_CLASSIFICATION	2.799762009967828E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999995129718836	WITHOUT_CLASSIFICATION	4.870281164101525E-7	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999992954788236	WITHOUT_CLASSIFICATION	7.045211762976416E-7	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999994087483585	WITHOUT_CLASSIFICATION	5.912516414871225E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999986733255595	WITHOUT_CLASSIFICATION	1.326674440518117E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999815960975372	WITHOUT_CLASSIFICATION	1.8403902462701055E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999992533270635	WITHOUT_CLASSIFICATION	7.466729364438227E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999989056112697	WITHOUT_CLASSIFICATION	1.0943887303523956E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999994981315276	WITHOUT_CLASSIFICATION	5.018684723963503E-7	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999999720023799	WITHOUT_CLASSIFICATION	2.799762009967828E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999995129718836	WITHOUT_CLASSIFICATION	4.870281164101525E-7	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999917858601225	WITHOUT_CLASSIFICATION	8.21413987743338E-6	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999992449737282	WITHOUT_CLASSIFICATION	7.550262717448625E-7	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999898781502	WITHOUT_CLASSIFICATION	1.0121849765288704E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999999640201521	WITHOUT_CLASSIFICATION	3.597984795690647E-8	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999999910422824	WITHOUT_CLASSIFICATION	8.957717660751242E-9	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999994012559098	WITHOUT_CLASSIFICATION	5.987440902700056E-7	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999452890805	WITHOUT_CLASSIFICATION	5.471091952134361E-8	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999943202764809	WITHOUT_CLASSIFICATION	5.679723519055529E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999923622063517	WITHOUT_CLASSIFICATION	7.637793648237119E-6	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999995835864098	WITHOUT_CLASSIFICATION	4.164135901737413E-7	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999975559838353	WITHOUT_CLASSIFICATION	2.4440161646932537E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999991527733351	WITHOUT_CLASSIFICATION	8.472266649133659E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999991591536523	WITHOUT_CLASSIFICATION	8.408463475596439E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999962998354974	WITHOUT_CLASSIFICATION	3.7001645025294853E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999987400563928	WITHOUT_CLASSIFICATION	1.2599436072760477E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999987767164976	WITHOUT_CLASSIFICATION	1.2232835024491675E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999911844018643	WITHOUT_CLASSIFICATION	8.815598135643269E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999972685482589	WITHOUT_CLASSIFICATION	2.7314517410475903E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999933728397148	WITHOUT_CLASSIFICATION	6.62716028519842E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999970861288425	WITHOUT_CLASSIFICATION	2.913871157511607E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999460880699808	WITHOUT_CLASSIFICATION	5.391193001916521E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999997950603736	WITHOUT_CLASSIFICATION	2.0493962635877407E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999996121730527	WITHOUT_CLASSIFICATION	3.878269473093598E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.999999879947487	WITHOUT_CLASSIFICATION	1.200525130698098E-7	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999993134433812	WITHOUT_CLASSIFICATION	6.865566187499226E-7	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999994138759839	WITHOUT_CLASSIFICATION	5.861240161079554E-7	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999983521318542	WITHOUT_CLASSIFICATION	1.647868145903698E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999981782550359	WITHOUT_CLASSIFICATION	1.821744964153613E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.999984124636503	WITHOUT_CLASSIFICATION	1.5875363497039773E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999981182276216	WITHOUT_CLASSIFICATION	1.8817723783091296E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999999051186602	WITHOUT_CLASSIFICATION	9.488133983789121E-8	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999839929266824	WITHOUT_CLASSIFICATION	1.6007073317678762E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999991324642811	WITHOUT_CLASSIFICATION	8.675357189309516E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999994338379076	WITHOUT_CLASSIFICATION	5.661620923721256E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999848252603	WITHOUT_CLASSIFICATION	1.517473970471674E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975167892445	WITHOUT_CLASSIFICATION	2.4832107554119426E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9996722928098737	WITHOUT_CLASSIFICATION	3.277071901262473E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999939538563306	WITHOUT_CLASSIFICATION	6.046143669416124E-6	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999834441259	WITHOUT_CLASSIFICATION	1.6555874109184075E-8	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.999993610557055	WITHOUT_CLASSIFICATION	6.389442944967552E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999997766196573	WITHOUT_CLASSIFICATION	2.23380342713217E-7	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999998325747906	WITHOUT_CLASSIFICATION	1.674252094117075E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999860948725	WITHOUT_CLASSIFICATION	1.3905127363377636E-8	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999996782703607	WITHOUT_CLASSIFICATION	3.2172963915624213E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999999590780669	WITHOUT_CLASSIFICATION	4.092193314323434E-8	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999421296590769	WITHOUT_CLASSIFICATION	5.7870340923042956E-5	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999998048005	WITHOUT_CLASSIFICATION	1.9519948027079238E-10	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999999073562386	WITHOUT_CLASSIFICATION	9.264376141658352E-8	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999991527733351	WITHOUT_CLASSIFICATION	8.472266649133659E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999991591536523	WITHOUT_CLASSIFICATION	8.408463475596439E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999962998354974	WITHOUT_CLASSIFICATION	3.7001645025294853E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999987400563928	WITHOUT_CLASSIFICATION	1.2599436072760477E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999987767164976	WITHOUT_CLASSIFICATION	1.2232835024491675E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999911844018643	WITHOUT_CLASSIFICATION	8.815598135643269E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999971111882887	WITHOUT_CLASSIFICATION	2.8888117113702796E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999972685482589	WITHOUT_CLASSIFICATION	2.7314517410475903E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999981782550359	WITHOUT_CLASSIFICATION	1.821744964153613E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.999984124636503	WITHOUT_CLASSIFICATION	1.5875363497039773E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999981182276216	WITHOUT_CLASSIFICATION	1.8817723783091296E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999978873624036	WITHOUT_CLASSIFICATION	2.1126375963438356E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999978873624036	WITHOUT_CLASSIFICATION	2.1126375963438356E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999839929266824	WITHOUT_CLASSIFICATION	1.6007073317678762E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999991324642811	WITHOUT_CLASSIFICATION	8.675357189309516E-7	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999994338379076	WITHOUT_CLASSIFICATION	5.661620923721256E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999987203713822	WITHOUT_CLASSIFICATION	1.2796286177679126E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999763273776677	WITHOUT_CLASSIFICATION	2.3672622332257443E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999926467775655	WITHOUT_CLASSIFICATION	7.3532224345687225E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999997786141529	WITHOUT_CLASSIFICATION	2.2138584695660944E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999975206530549	WITHOUT_CLASSIFICATION	2.4793469449883178E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.999993641722501	WITHOUT_CLASSIFICATION	6.358277498992578E-6	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999998637054267	WITHOUT_CLASSIFICATION	1.3629457330398742E-7	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999959072760763	WITHOUT_CLASSIFICATION	4.09272392372502E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999437911543886	WITHOUT_CLASSIFICATION	5.6208845611403316E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999983801713745	WITHOUT_CLASSIFICATION	1.6198286254179465E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999996344872132	WITHOUT_CLASSIFICATION	3.655127868315167E-7	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999995551649973	WITHOUT_CLASSIFICATION	4.4483500273955795E-7	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999998042543311	WITHOUT_CLASSIFICATION	1.9574566891787767E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9994228986612278	WITHOUT_CLASSIFICATION	5.77101338772133E-4	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999999801358495	WITHOUT_CLASSIFICATION	1.986415055457911E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999994779287	WITHOUT_CLASSIFICATION	5.220711873505864E-10	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999801323031	WITHOUT_CLASSIFICATION	1.9867696951841802E-8	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999999334120206	WITHOUT_CLASSIFICATION	6.658797941338035E-8	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999991939572415	WITHOUT_CLASSIFICATION	8.060427585113532E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999998472295896	WITHOUT_CLASSIFICATION	1.527704103861144E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.99999310468456	WITHOUT_CLASSIFICATION	6.895315439872873E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999999661625762	WITHOUT_CLASSIFICATION	3.383742378603333E-8	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999996962536293	WITHOUT_CLASSIFICATION	3.037463707162734E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999999650464693	WITHOUT_CLASSIFICATION	3.4953530856478714E-8	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999981825533	WITHOUT_CLASSIFICATION	1.8174466969510668E-9	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9998814423745164	WITHOUT_CLASSIFICATION	1.1855762548367445E-4	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999721442061104	WITHOUT_CLASSIFICATION	2.785579388971188E-5	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999997649004863	WITHOUT_CLASSIFICATION	2.3509951371344364E-7	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9993941340642256	WITHOUT_CLASSIFICATION	6.058659357743885E-4	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998901339289	WITHOUT_CLASSIFICATION	1.0986607112013295E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.999987895327341	WITHOUT_CLASSIFICATION	1.2104672658906523E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999902482735	WITHOUT_CLASSIFICATION	9.75172650611293E-9	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999943482841845	WITHOUT_CLASSIFICATION	5.6517158154858775E-6	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999992600722277	WITHOUT_CLASSIFICATION	7.399277723210816E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999989056112697	WITHOUT_CLASSIFICATION	1.0943887303523956E-6	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999571099677	WITHOUT_CLASSIFICATION	4.289003234110784E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999973295320429	WITHOUT_CLASSIFICATION	2.670467957013883E-6	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999998363885915	WITHOUT_CLASSIFICATION	1.6361140850044604E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999998482932047	WITHOUT_CLASSIFICATION	1.517067952457712E-7	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.999729435661901	WITHOUT_CLASSIFICATION	2.705643380990492E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999987280922633	WITHOUT_CLASSIFICATION	1.2719077366525586E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996061833671	WITHOUT_CLASSIFICATION	3.938166328746333E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999997420225524	WITHOUT_CLASSIFICATION	2.579774476242371E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999999433248	WITHOUT_CLASSIFICATION	5.667532596099288E-11	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.999998579499518	WITHOUT_CLASSIFICATION	1.4205004820512826E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999966977633254	WITHOUT_CLASSIFICATION	3.3022366745327966E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999715543070284	WITHOUT_CLASSIFICATION	2.8445692971574176E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999715543070284	WITHOUT_CLASSIFICATION	2.8445692971574176E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998629494841	WITHOUT_CLASSIFICATION	1.370505159601201E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999968445416428	WITHOUT_CLASSIFICATION	3.155458357066144E-6	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999999792238139	WITHOUT_CLASSIFICATION	2.077618605967285E-8	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9998947995786044	WITHOUT_CLASSIFICATION	1.05200421395715E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999727871480465	WITHOUT_CLASSIFICATION	2.7212851953499972E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998874246122	WITHOUT_CLASSIFICATION	1.1257538773589401E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998874246122	WITHOUT_CLASSIFICATION	1.1257538773589401E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998874246122	WITHOUT_CLASSIFICATION	1.1257538773589401E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999999759250215	WITHOUT_CLASSIFICATION	2.4074978458773934E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999911445032166	WITHOUT_CLASSIFICATION	8.855496783421152E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999957155066226	WITHOUT_CLASSIFICATION	4.284493377494856E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999997191482	WITHOUT_CLASSIFICATION	2.8085185196104447E-10	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999973849174766	WITHOUT_CLASSIFICATION	2.615082523346171E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999570540872754	WITHOUT_CLASSIFICATION	4.294591272456821E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999646163316369	WITHOUT_CLASSIFICATION	3.538366836314295E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999646163316369	WITHOUT_CLASSIFICATION	3.538366836314295E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999993230408865	WITHOUT_CLASSIFICATION	6.769591136317552E-7	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999823053855004	WITHOUT_CLASSIFICATION	1.7694614499655296E-5	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999992567732544	WITHOUT_CLASSIFICATION	7.432267455938448E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999997641865385	WITHOUT_CLASSIFICATION	2.358134614632082E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999958350174548	WITHOUT_CLASSIFICATION	4.1649825450921195E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999838971716191	WITHOUT_CLASSIFICATION	1.6102828381015007E-5	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999272104375533	WITHOUT_CLASSIFICATION	7.278956244672676E-5	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999999799175701	WITHOUT_CLASSIFICATION	2.0082429927774386E-8	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999943832946658	WITHOUT_CLASSIFICATION	5.616705334185021E-6	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999990946187	WITHOUT_CLASSIFICATION	9.053813447297818E-10	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999476060955	WITHOUT_CLASSIFICATION	5.239390458487283E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999476060955	WITHOUT_CLASSIFICATION	5.239390458487283E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999476060955	WITHOUT_CLASSIFICATION	5.239390458487283E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999476060955	WITHOUT_CLASSIFICATION	5.239390458487283E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999999476060955	WITHOUT_CLASSIFICATION	5.239390458487283E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998243889855327	WITHOUT_CLASSIFICATION	1.7561101446716937E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998243889855327	WITHOUT_CLASSIFICATION	1.7561101446716937E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998243889855327	WITHOUT_CLASSIFICATION	1.7561101446716937E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998243889855327	WITHOUT_CLASSIFICATION	1.7561101446716937E-4	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999998970630412	WITHOUT_CLASSIFICATION	1.02936958802939E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999999245515939	WITHOUT_CLASSIFICATION	7.544840608644007E-8	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.8656856604908355	WITHOUT_CLASSIFICATION	0.13431433950916447	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999999955098518	WITHOUT_CLASSIFICATION	4.490148197596641E-8	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999988525405323	WITHOUT_CLASSIFICATION	1.1474594676399684E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999816661927019	WITHOUT_CLASSIFICATION	1.8333807298110887E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9998929644327221	WITHOUT_CLASSIFICATION	1.0703556727785152E-4	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999998118975121	WITHOUT_CLASSIFICATION	1.881024879526013E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.999999923682509	WITHOUT_CLASSIFICATION	7.631749096605411E-8	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999980046386243	WITHOUT_CLASSIFICATION	1.9953613755752977E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.999993891723482	WITHOUT_CLASSIFICATION	6.108276518007979E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999962512486034	WITHOUT_CLASSIFICATION	3.748751396723722E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999992180339743	WITHOUT_CLASSIFICATION	7.819660257381092E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999932987579	WITHOUT_CLASSIFICATION	6.701242097902755E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999932987579	WITHOUT_CLASSIFICATION	6.701242097902755E-8	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999999932987579	WITHOUT_CLASSIFICATION	6.701242097902755E-8	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999974226451604	WITHOUT_CLASSIFICATION	2.5773548395883803E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999974226451604	WITHOUT_CLASSIFICATION	2.5773548395883803E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999998720370471	WITHOUT_CLASSIFICATION	1.279629528824222E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999999894480371	WITHOUT_CLASSIFICATION	1.055196289806939E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.999999999999784	WITHOUT_CLASSIFICATION	2.1615776398216597E-13	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999969847080201	WITHOUT_CLASSIFICATION	3.0152919798259E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999969847080201	WITHOUT_CLASSIFICATION	3.0152919798259E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999969847080201	WITHOUT_CLASSIFICATION	3.0152919798259E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999998415833701	WITHOUT_CLASSIFICATION	1.5841662999667414E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999886038694462	WITHOUT_CLASSIFICATION	1.1396130553812368E-5	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.999999873900703	WITHOUT_CLASSIFICATION	1.2609929706000965E-7	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999992550590769	WITHOUT_CLASSIFICATION	7.449409230017714E-7	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999068013331789	WITHOUT_CLASSIFICATION	9.319866682115878E-5	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999872385596462	WITHOUT_CLASSIFICATION	1.2761440353835351E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999997389646893	WITHOUT_CLASSIFICATION	2.6103531065367787E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999989404007	WITHOUT_CLASSIFICATION	1.0595992725348429E-9	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.999994290014508	WITHOUT_CLASSIFICATION	5.709985491923815E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997153729263916	WITHOUT_CLASSIFICATION	2.846270736085062E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997153729263916	WITHOUT_CLASSIFICATION	2.846270736085062E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.5745785478126009	DEFECT	0.42542145218739924	WITHOUT_CLASSIFICATION
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999955791228935	WITHOUT_CLASSIFICATION	4.420877106498562E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999993450404965	WITHOUT_CLASSIFICATION	6.549595035421954E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999993450404965	WITHOUT_CLASSIFICATION	6.549595035421954E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999993450404965	WITHOUT_CLASSIFICATION	6.549595035421954E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999993450404965	WITHOUT_CLASSIFICATION	6.549595035421954E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999993450404965	WITHOUT_CLASSIFICATION	6.549595035421954E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999998335379523	WITHOUT_CLASSIFICATION	1.6646204767002388E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9997986554938333	WITHOUT_CLASSIFICATION	2.0134450616664067E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999997896128091	WITHOUT_CLASSIFICATION	2.1038719079613047E-7	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999982320218	WITHOUT_CLASSIFICATION	1.7679781838767983E-9	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999999294056074	WITHOUT_CLASSIFICATION	7.059439249606928E-8	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999998918195812	WITHOUT_CLASSIFICATION	1.0818041883375847E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999975389270249	WITHOUT_CLASSIFICATION	2.4610729751828007E-6	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999929835257	WITHOUT_CLASSIFICATION	7.016474298761854E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999562378514519	WITHOUT_CLASSIFICATION	4.3762148548185314E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999562378514519	WITHOUT_CLASSIFICATION	4.3762148548185314E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999886356531406	WITHOUT_CLASSIFICATION	1.1364346859503039E-5	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999924796732252	WITHOUT_CLASSIFICATION	7.52032677476612E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999942726489278	WITHOUT_CLASSIFICATION	5.72735107220477E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999942726489278	WITHOUT_CLASSIFICATION	5.72735107220477E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998165944578	WITHOUT_CLASSIFICATION	1.834055421584564E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999820780402211	WITHOUT_CLASSIFICATION	1.7921959778849468E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999936580802902	WITHOUT_CLASSIFICATION	6.3419197097416015E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999954715664529	WITHOUT_CLASSIFICATION	4.528433547191404E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.999998420637737	WITHOUT_CLASSIFICATION	1.579362262984836E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.999999976014444	WITHOUT_CLASSIFICATION	2.39855559653461E-8	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999998127879671	WITHOUT_CLASSIFICATION	1.8721203291697066E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999937060380002	WITHOUT_CLASSIFICATION	6.293961999777562E-6	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9998812553858604	WITHOUT_CLASSIFICATION	1.1874461413968019E-4	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999994241299	WITHOUT_CLASSIFICATION	5.758700873609635E-10	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997756325952	WITHOUT_CLASSIFICATION	2.2436740485427378E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997756325952	WITHOUT_CLASSIFICATION	2.2436740485427378E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997756325952	WITHOUT_CLASSIFICATION	2.2436740485427378E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999997756325952	WITHOUT_CLASSIFICATION	2.2436740485427378E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999952103933553	WITHOUT_CLASSIFICATION	4.789606644692519E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9998873953903006	WITHOUT_CLASSIFICATION	1.126046096994529E-4	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999998147412368	WITHOUT_CLASSIFICATION	1.8525876326909077E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980233954696	WITHOUT_CLASSIFICATION	1.9766045303875726E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999947305654	WITHOUT_CLASSIFICATION	5.269434540572578E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995614747719	WITHOUT_CLASSIFICATION	4.385252280605921E-7	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9969967886683612	WITHOUT_CLASSIFICATION	0.0030032113316387967	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999919965404	WITHOUT_CLASSIFICATION	8.003459574298674E-9	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999992129382064	WITHOUT_CLASSIFICATION	7.870617937240275E-7	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999999837365233	WITHOUT_CLASSIFICATION	1.626347668587066E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.999999936146815	WITHOUT_CLASSIFICATION	6.38531849742642E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.999999679871837	WITHOUT_CLASSIFICATION	3.2012816297112587E-7	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999982338753	WITHOUT_CLASSIFICATION	1.7661246285152115E-9	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999951982175814	WITHOUT_CLASSIFICATION	4.801782418560633E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999951982175814	WITHOUT_CLASSIFICATION	4.801782418560633E-6	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999800492175	WITHOUT_CLASSIFICATION	1.995078243957288E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999996864936451	WITHOUT_CLASSIFICATION	3.1350635489866645E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9959131326588113	WITHOUT_CLASSIFICATION	0.004086867341188756	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999975928770367	WITHOUT_CLASSIFICATION	2.407122963210606E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999379389971854	WITHOUT_CLASSIFICATION	6.206100281456321E-5	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999976980029582	WITHOUT_CLASSIFICATION	2.3019970417197983E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999998121664041	WITHOUT_CLASSIFICATION	1.8783359590788723E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999998960210723	WITHOUT_CLASSIFICATION	1.039789277314621E-7	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999949716123	WITHOUT_CLASSIFICATION	5.028387708102426E-9	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999989340521871	WITHOUT_CLASSIFICATION	1.0659478128664173E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.99999993749028	WITHOUT_CLASSIFICATION	6.250971998759703E-8	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999996674316184	WITHOUT_CLASSIFICATION	3.3256838155634423E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999972405799	WITHOUT_CLASSIFICATION	2.7594201738768166E-9	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999821171996458	WITHOUT_CLASSIFICATION	1.7882800354274913E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999821171996458	WITHOUT_CLASSIFICATION	1.7882800354274913E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999998853485216	WITHOUT_CLASSIFICATION	1.1465147840032837E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999991547401345	WITHOUT_CLASSIFICATION	8.452598656563538E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9997921165781224	WITHOUT_CLASSIFICATION	2.0788342187760817E-4	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999999492361266	WITHOUT_CLASSIFICATION	5.0763873434814854E-8	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999981602531665	WITHOUT_CLASSIFICATION	1.8397468335388236E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999757712973706	WITHOUT_CLASSIFICATION	2.422870262933085E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999997863124207	WITHOUT_CLASSIFICATION	2.1368757936007475E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999865134359	WITHOUT_CLASSIFICATION	1.3486564038439808E-8	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999940540600908	WITHOUT_CLASSIFICATION	5.945939909231952E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.999999997089429	WITHOUT_CLASSIFICATION	2.910571073803324E-9	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999952880638785	WITHOUT_CLASSIFICATION	4.711936121531792E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999979101182745	WITHOUT_CLASSIFICATION	2.0898817254929505E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999979101182745	WITHOUT_CLASSIFICATION	2.0898817254929505E-6	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999999481498928	WITHOUT_CLASSIFICATION	5.185010706255516E-8	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999999904928	WITHOUT_CLASSIFICATION	9.507029457190165E-12	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999985880889386	WITHOUT_CLASSIFICATION	1.4119110614929441E-6	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999989706035219	WITHOUT_CLASSIFICATION	1.0293964779547898E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999944091162616	WITHOUT_CLASSIFICATION	5.590883738426913E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999989859960364	WITHOUT_CLASSIFICATION	1.0140039635329398E-6	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999994598503196	WITHOUT_CLASSIFICATION	5.401496803378945E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999999645205867	WITHOUT_CLASSIFICATION	3.547941329982661E-8	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999972665948808	WITHOUT_CLASSIFICATION	2.733405119253215E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.999999955345265	WITHOUT_CLASSIFICATION	4.4654735086948796E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999995941296	WITHOUT_CLASSIFICATION	4.058704802788347E-10	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999841688039	WITHOUT_CLASSIFICATION	1.5831196228579372E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999999172912754	WITHOUT_CLASSIFICATION	8.270872468039747E-8	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999994857128183	WITHOUT_CLASSIFICATION	5.142871816970228E-7	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999935626568329	WITHOUT_CLASSIFICATION	6.437343167117092E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.999999965370971	WITHOUT_CLASSIFICATION	3.4629028935769026E-8	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999999519083081	WITHOUT_CLASSIFICATION	4.8091691987331735E-8	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999991949759695	WITHOUT_CLASSIFICATION	8.05024030454476E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999998518312255	WITHOUT_CLASSIFICATION	1.4816877450035195E-7	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999991455851808	WITHOUT_CLASSIFICATION	8.544148193577836E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999996828975317	WITHOUT_CLASSIFICATION	3.1710246825840186E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999930970485	WITHOUT_CLASSIFICATION	6.902951663322263E-9	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9998618696059893	WITHOUT_CLASSIFICATION	1.3813039401058857E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999453964951	WITHOUT_CLASSIFICATION	5.460350493167318E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9996253936045549	WITHOUT_CLASSIFICATION	3.7460639544511804E-4	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999996755503935	WITHOUT_CLASSIFICATION	3.2444960641361775E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.999806806990233	WITHOUT_CLASSIFICATION	1.9319300976683554E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999988685761276	WITHOUT_CLASSIFICATION	1.1314238723310398E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999997268927013	WITHOUT_CLASSIFICATION	2.7310729869322953E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.999998683654594	WITHOUT_CLASSIFICATION	1.3163454060686537E-6	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999957075386	WITHOUT_CLASSIFICATION	4.292461450851042E-9	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999283816432	WITHOUT_CLASSIFICATION	7.161835683263489E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999283816432	WITHOUT_CLASSIFICATION	7.161835683263489E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999999283816432	WITHOUT_CLASSIFICATION	7.161835683263489E-8	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.999999987476049	WITHOUT_CLASSIFICATION	1.2523951037359268E-8	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999902258723675	WITHOUT_CLASSIFICATION	9.774127632432185E-6	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999999367417816	WITHOUT_CLASSIFICATION	6.325821833556996E-8	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999999911617993	WITHOUT_CLASSIFICATION	8.838200713485268E-9	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999947464401595	WITHOUT_CLASSIFICATION	5.25355984046268E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9734968228923123	WITHOUT_CLASSIFICATION	0.026503177107687688	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999999946327278	WITHOUT_CLASSIFICATION	5.367272210270091E-9	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999991570706216	WITHOUT_CLASSIFICATION	8.429293784446566E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995819353149	WITHOUT_CLASSIFICATION	4.180646851538567E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995819353149	WITHOUT_CLASSIFICATION	4.180646851538567E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999995819353149	WITHOUT_CLASSIFICATION	4.180646851538567E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999989902032195	WITHOUT_CLASSIFICATION	1.009796780535445E-6	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999999917269161	WITHOUT_CLASSIFICATION	8.273083971938494E-9	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999999760055958	WITHOUT_CLASSIFICATION	2.399440422075953E-8	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999999031231451	WITHOUT_CLASSIFICATION	9.687685489600637E-8	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999999477308116	WITHOUT_CLASSIFICATION	5.226918851689133E-8	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999473080288165	WITHOUT_CLASSIFICATION	5.2691971183493076E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999991945397761	WITHOUT_CLASSIFICATION	8.054602238366377E-7	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999991728977652	WITHOUT_CLASSIFICATION	8.271022347313165E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999847037077	WITHOUT_CLASSIFICATION	1.5296292351803505E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999979439515563	WITHOUT_CLASSIFICATION	2.056048443714342E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999999991777633	WITHOUT_CLASSIFICATION	8.222367083130793E-9	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999801323031	WITHOUT_CLASSIFICATION	1.9867696951841802E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999801323031	WITHOUT_CLASSIFICATION	1.9867696951841802E-8	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999989890063	WITHOUT_CLASSIFICATION	1.0109936619746102E-9	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9993716595847757	WITHOUT_CLASSIFICATION	6.283404152242751E-4	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999985732752634	WITHOUT_CLASSIFICATION	1.4267247365551625E-6	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999998544257426	WITHOUT_CLASSIFICATION	1.4557425742981822E-7	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999928919814671	WITHOUT_CLASSIFICATION	7.108018532755319E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999986983753478	WITHOUT_CLASSIFICATION	1.3016246521933912E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999619741915	WITHOUT_CLASSIFICATION	3.802580845552562E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999999619741915	WITHOUT_CLASSIFICATION	3.802580845552562E-8	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999994654393197	WITHOUT_CLASSIFICATION	5.345606803850557E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999999307902308	WITHOUT_CLASSIFICATION	6.920976920457433E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999997485545198	WITHOUT_CLASSIFICATION	2.514454801843081E-7	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999996464401324	WITHOUT_CLASSIFICATION	3.5355986761071186E-7	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999996430095007	WITHOUT_CLASSIFICATION	3.569904993552056E-7	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999987431832302	WITHOUT_CLASSIFICATION	1.2568167697730996E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999998978013813	WITHOUT_CLASSIFICATION	1.021986186999741E-7	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999718062283468	WITHOUT_CLASSIFICATION	2.819377165313498E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999997126132564	WITHOUT_CLASSIFICATION	2.87386743703086E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999999840306522	WITHOUT_CLASSIFICATION	1.596934782479629E-8	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999884363651	WITHOUT_CLASSIFICATION	1.1563634982767659E-8	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999255782334627	WITHOUT_CLASSIFICATION	7.442176653721648E-5	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999999542780784	WITHOUT_CLASSIFICATION	4.572192162206179E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999964568720592	WITHOUT_CLASSIFICATION	3.5431279408331977E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999964568720592	WITHOUT_CLASSIFICATION	3.5431279408331977E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999964568720592	WITHOUT_CLASSIFICATION	3.5431279408331977E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999964568720592	WITHOUT_CLASSIFICATION	3.5431279408331977E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999994150976721	WITHOUT_CLASSIFICATION	5.849023279464285E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999994487312187	WITHOUT_CLASSIFICATION	5.512687813622054E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.8826992587999836	WITHOUT_CLASSIFICATION	0.11730074120001643	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999995615199777	WITHOUT_CLASSIFICATION	4.3848002238263286E-7	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999390244886	WITHOUT_CLASSIFICATION	6.097551136170962E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999995631380297	WITHOUT_CLASSIFICATION	4.3686197015688385E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999870021437	WITHOUT_CLASSIFICATION	1.2997856300196453E-8	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999945951850336	WITHOUT_CLASSIFICATION	5.404814966429123E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999991984509211	WITHOUT_CLASSIFICATION	8.015490789145774E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999862081191884	WITHOUT_CLASSIFICATION	1.3791880811721771E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999961184168927	WITHOUT_CLASSIFICATION	3.88158310726902E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999961184168927	WITHOUT_CLASSIFICATION	3.88158310726902E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999961184168927	WITHOUT_CLASSIFICATION	3.88158310726902E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999889755423398	WITHOUT_CLASSIFICATION	1.1024457660174797E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999882691792854	WITHOUT_CLASSIFICATION	1.1730820714628753E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999927223783043	WITHOUT_CLASSIFICATION	7.277621695670549E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999993935448371	WITHOUT_CLASSIFICATION	6.064551629518252E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999993935448371	WITHOUT_CLASSIFICATION	6.064551629518252E-7	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999998240058027	WITHOUT_CLASSIFICATION	1.759941974092678E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999889755423398	WITHOUT_CLASSIFICATION	1.1024457660174797E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999931628460575	WITHOUT_CLASSIFICATION	6.837153942490325E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999990263683323	WITHOUT_CLASSIFICATION	9.736316677092407E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999954743973364	WITHOUT_CLASSIFICATION	4.525602663643087E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999681005895582	WITHOUT_CLASSIFICATION	3.189941044174639E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999999566463508	WITHOUT_CLASSIFICATION	4.335364918594646E-8	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.999938510185381	WITHOUT_CLASSIFICATION	6.14898146190211E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999995880000853	WITHOUT_CLASSIFICATION	4.1199991465042833E-7	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.999960563025438	WITHOUT_CLASSIFICATION	3.943697456186851E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999948303124485	WITHOUT_CLASSIFICATION	5.1696875514891785E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999948303124485	WITHOUT_CLASSIFICATION	5.1696875514891785E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9980244083123403	WITHOUT_CLASSIFICATION	0.001975591687659752	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999023558596943	WITHOUT_CLASSIFICATION	9.764414030571918E-5	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999980264843179	WITHOUT_CLASSIFICATION	1.9735156820677874E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.999999999989528	WITHOUT_CLASSIFICATION	1.0471930803957467E-11	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999670453356	WITHOUT_CLASSIFICATION	3.2954664450221105E-8	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9920136237768459	WITHOUT_CLASSIFICATION	0.007986376223154111	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999999965727083	WITHOUT_CLASSIFICATION	3.4272917664710588E-9	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999964033835842	WITHOUT_CLASSIFICATION	3.5966164158564447E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999999812104333	WITHOUT_CLASSIFICATION	1.8789566660690065E-8	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999999806052745	WITHOUT_CLASSIFICATION	1.9394725490776218E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999954682332206	WITHOUT_CLASSIFICATION	4.531766779479438E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999862081191884	WITHOUT_CLASSIFICATION	1.3791880811721771E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999862081191884	WITHOUT_CLASSIFICATION	1.3791880811721771E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999983010368146	WITHOUT_CLASSIFICATION	1.6989631853094852E-6	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999984290074222	WITHOUT_CLASSIFICATION	1.5709925777635125E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999983232199584	WITHOUT_CLASSIFICATION	1.6767800416782753E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999972472066052	WITHOUT_CLASSIFICATION	2.752793394773239E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999998044580953	WITHOUT_CLASSIFICATION	1.95541904740416E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999990160760592	WITHOUT_CLASSIFICATION	9.839239407202516E-7	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999983755372	WITHOUT_CLASSIFICATION	1.6244627975972714E-9	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999999986546457	WITHOUT_CLASSIFICATION	1.3453543044304131E-9	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999879507454	WITHOUT_CLASSIFICATION	1.2049254577525945E-8	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999985721163301	WITHOUT_CLASSIFICATION	1.4278836698626546E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999732208345555	WITHOUT_CLASSIFICATION	2.677916544454061E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999996248771299	WITHOUT_CLASSIFICATION	3.7512287009952004E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975167892445	WITHOUT_CLASSIFICATION	2.4832107554119426E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975167892445	WITHOUT_CLASSIFICATION	2.4832107554119426E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999997412370134	WITHOUT_CLASSIFICATION	2.5876298656508607E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999921278556	WITHOUT_CLASSIFICATION	7.872144284346914E-9	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999952553356712	WITHOUT_CLASSIFICATION	4.744664328759099E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.999999627783086	WITHOUT_CLASSIFICATION	3.7221691388381255E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999997917442023	WITHOUT_CLASSIFICATION	2.0825579777632482E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999475858471	WITHOUT_CLASSIFICATION	5.24141528506544E-8	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999987160203835	WITHOUT_CLASSIFICATION	1.2839796165515439E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9997417345905206	WITHOUT_CLASSIFICATION	2.5826540947939156E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999994613665835	WITHOUT_CLASSIFICATION	5.386334165841971E-7	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9895791691166019	WITHOUT_CLASSIFICATION	0.01042083088339812	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999999928692819	WITHOUT_CLASSIFICATION	7.130718095260889E-9	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999999390830768	WITHOUT_CLASSIFICATION	6.091692319419433E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999999838699	WITHOUT_CLASSIFICATION	1.6130103482385857E-10	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999995201900094	WITHOUT_CLASSIFICATION	4.798099905286681E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999870021437	WITHOUT_CLASSIFICATION	1.2997856300196453E-8	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.942300087556802	DEFECT	0.057699912443198026	WITHOUT_CLASSIFICATION
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9991589362070045	WITHOUT_CLASSIFICATION	8.410637929954778E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9991589362070045	WITHOUT_CLASSIFICATION	8.410637929954778E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9991589362070045	WITHOUT_CLASSIFICATION	8.410637929954778E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999972636667517	WITHOUT_CLASSIFICATION	2.7363332482667327E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999972636667517	WITHOUT_CLASSIFICATION	2.7363332482667327E-6	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999999961921631	WITHOUT_CLASSIFICATION	3.807836957575531E-9	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9334411936470182	WITHOUT_CLASSIFICATION	0.06655880635298173	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.999999879557428	WITHOUT_CLASSIFICATION	1.204425720907753E-7	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999970478280384	WITHOUT_CLASSIFICATION	2.952171961637525E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999999960216286	WITHOUT_CLASSIFICATION	3.9783714163989965E-9	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999998275627694	WITHOUT_CLASSIFICATION	1.7243723054960703E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999999870021437	WITHOUT_CLASSIFICATION	1.2997856300196453E-8	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999999786286222	WITHOUT_CLASSIFICATION	2.137137779439529E-8	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999999004378844	WITHOUT_CLASSIFICATION	9.95621155936418E-7	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9989034795549127	WITHOUT_CLASSIFICATION	0.0010965204450874267	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999973873755114	WITHOUT_CLASSIFICATION	2.6126244886692514E-6	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999996726091204	WITHOUT_CLASSIFICATION	3.273908796457494E-7	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999986080319354	WITHOUT_CLASSIFICATION	1.3919680646735747E-6	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.99999955722782	WITHOUT_CLASSIFICATION	4.427721800173065E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999996631314843	WITHOUT_CLASSIFICATION	3.368685157553127E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999733563492733	WITHOUT_CLASSIFICATION	2.664365072664209E-5	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999997064625584	WITHOUT_CLASSIFICATION	2.9353744158432356E-7	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999999671374389	WITHOUT_CLASSIFICATION	3.286256110678184E-8	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999999264733648	WITHOUT_CLASSIFICATION	7.352663525822719E-8	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999780662339	WITHOUT_CLASSIFICATION	2.1933766133881413E-8	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999999925324776	WITHOUT_CLASSIFICATION	7.467522482442796E-9	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999446250431239	WITHOUT_CLASSIFICATION	5.537495687614333E-5	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999838025806	WITHOUT_CLASSIFICATION	1.6197419336932045E-8	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999998994851891	WITHOUT_CLASSIFICATION	1.0051481088852154E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999540677978	WITHOUT_CLASSIFICATION	4.593220211194208E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999540677978	WITHOUT_CLASSIFICATION	4.593220211194208E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999583433345152	WITHOUT_CLASSIFICATION	4.165666548480508E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999998999171538	WITHOUT_CLASSIFICATION	1.0008284629435891E-7	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999999446831387	WITHOUT_CLASSIFICATION	5.531686128548975E-8	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9712414578199953	WITHOUT_CLASSIFICATION	0.028758542180004735	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9995178022610847	WITHOUT_CLASSIFICATION	4.821977389152486E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999574589091617	WITHOUT_CLASSIFICATION	4.254109083842412E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999574589091617	WITHOUT_CLASSIFICATION	4.254109083842412E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999972317709	WITHOUT_CLASSIFICATION	2.7682291999756373E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999610300067	WITHOUT_CLASSIFICATION	3.896999343746662E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998038394187	WITHOUT_CLASSIFICATION	1.961605812770108E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999998038394187	WITHOUT_CLASSIFICATION	1.961605812770108E-7	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.999999991717442	WITHOUT_CLASSIFICATION	8.282558020830263E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999320468512	WITHOUT_CLASSIFICATION	6.795314878972179E-8	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999980253423135	WITHOUT_CLASSIFICATION	1.9746576864338176E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995082366122	WITHOUT_CLASSIFICATION	4.917633877856526E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999948947690214	WITHOUT_CLASSIFICATION	5.1052309787224575E-6	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998539945463	WITHOUT_CLASSIFICATION	1.460054536942423E-7	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999718339547	WITHOUT_CLASSIFICATION	2.8166045207483817E-8	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999999664535268	WITHOUT_CLASSIFICATION	3.354647312911612E-8	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999997005828624	WITHOUT_CLASSIFICATION	2.9941713761878426E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999989983592	WITHOUT_CLASSIFICATION	1.0016407980917885E-9	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9989465368863503	WITHOUT_CLASSIFICATION	0.0010534631136498154	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.8768985870207426	WITHOUT_CLASSIFICATION	0.12310141297925731	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999998633886411	WITHOUT_CLASSIFICATION	1.3661135877124023E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999788638141	WITHOUT_CLASSIFICATION	2.1136185987649596E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999998395491928	WITHOUT_CLASSIFICATION	1.6045080723691009E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999795383385	WITHOUT_CLASSIFICATION	2.0461661439827806E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999999813555814	WITHOUT_CLASSIFICATION	1.8644418613677977E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999672476507	WITHOUT_CLASSIFICATION	3.275234922090384E-8	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999019354650337	WITHOUT_CLASSIFICATION	9.806453496625962E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9998799285691625	WITHOUT_CLASSIFICATION	1.2007143083743976E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999971233767119	WITHOUT_CLASSIFICATION	2.8766232881065977E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999971233767119	WITHOUT_CLASSIFICATION	2.8766232881065977E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999971233767119	WITHOUT_CLASSIFICATION	2.8766232881065977E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999971233767119	WITHOUT_CLASSIFICATION	2.8766232881065977E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999971233767119	WITHOUT_CLASSIFICATION	2.8766232881065977E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999983140759922	WITHOUT_CLASSIFICATION	1.6859240078838153E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999998002577565	WITHOUT_CLASSIFICATION	1.9974224347033376E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999988471505	WITHOUT_CLASSIFICATION	1.1528494264784278E-9	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999938005377	WITHOUT_CLASSIFICATION	6.1994622640778744E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999958962280804	WITHOUT_CLASSIFICATION	4.10377191956407E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999999226903191	WITHOUT_CLASSIFICATION	7.730968083381704E-8	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999763368905	WITHOUT_CLASSIFICATION	2.3663109444463552E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.998940696051743	WITHOUT_CLASSIFICATION	0.0010593039482570375	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999713716323626	WITHOUT_CLASSIFICATION	2.8628367637442303E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999713716323626	WITHOUT_CLASSIFICATION	2.8628367637442303E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999999716860766	WITHOUT_CLASSIFICATION	2.831392340712617E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995982797115	WITHOUT_CLASSIFICATION	4.017202885346996E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999995982797115	WITHOUT_CLASSIFICATION	4.017202885346996E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999971849200832	WITHOUT_CLASSIFICATION	2.81507991673731E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999996751779741	WITHOUT_CLASSIFICATION	3.2482202601011025E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999899114918412	WITHOUT_CLASSIFICATION	1.0088508158774529E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999985692087444	WITHOUT_CLASSIFICATION	1.4307912555267015E-6	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999999743442846	WITHOUT_CLASSIFICATION	2.5655715489339464E-8	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998297511974	WITHOUT_CLASSIFICATION	1.7024880268176269E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998297511974	WITHOUT_CLASSIFICATION	1.7024880268176269E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9992377146792483	WITHOUT_CLASSIFICATION	7.622853207516436E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999990028172443	WITHOUT_CLASSIFICATION	9.971827556182404E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999988714349225	WITHOUT_CLASSIFICATION	1.1285650775336065E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999999661992931	WITHOUT_CLASSIFICATION	3.3800706921776384E-8	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999670366194939	WITHOUT_CLASSIFICATION	3.2963380506119346E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999521535861	WITHOUT_CLASSIFICATION	4.784641395310318E-8	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999995042295136	WITHOUT_CLASSIFICATION	4.957704865091214E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999867917106708	WITHOUT_CLASSIFICATION	1.3208289329185364E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999407681731073	WITHOUT_CLASSIFICATION	5.9231826892688655E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999988482236826	WITHOUT_CLASSIFICATION	1.1517763174623895E-6	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9993593323426405	WITHOUT_CLASSIFICATION	6.406676573595567E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9931134639103402	WITHOUT_CLASSIFICATION	0.006886536089659873	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999857784157653	WITHOUT_CLASSIFICATION	1.4221584234691572E-5	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.999361711034628	WITHOUT_CLASSIFICATION	6.382889653718865E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999994087483585	WITHOUT_CLASSIFICATION	5.912516414871225E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999815960975372	WITHOUT_CLASSIFICATION	1.8403902462701055E-5	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999966796349918	WITHOUT_CLASSIFICATION	3.3203650081543465E-6	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999826785411149	WITHOUT_CLASSIFICATION	1.732145888516856E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999971111882887	WITHOUT_CLASSIFICATION	2.8888117113702796E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999990673805754	WITHOUT_CLASSIFICATION	9.326194246804707E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999978873624036	WITHOUT_CLASSIFICATION	2.1126375963438356E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999978873624036	WITHOUT_CLASSIFICATION	2.1126375963438356E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999894057930029	WITHOUT_CLASSIFICATION	1.059420699713679E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9971184965098161	WITHOUT_CLASSIFICATION	0.002881503490183953	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9998423679532579	WITHOUT_CLASSIFICATION	1.5763204674212525E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.964346961997481	WITHOUT_CLASSIFICATION	0.035653038002519	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9988971734803699	WITHOUT_CLASSIFICATION	0.0011028265196300578	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9998534134403845	WITHOUT_CLASSIFICATION	1.4658655961544075E-4	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.7521812883862079	WITHOUT_CLASSIFICATION	0.2478187116137922	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9957658677287128	WITHOUT_CLASSIFICATION	0.004234132271287252	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9235902308603153	DEFECT	0.07640976913968471	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9783108305543387	WITHOUT_CLASSIFICATION	0.021689169445661405	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999395245842947	WITHOUT_CLASSIFICATION	6.0475415705272254E-5	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.7044944065256721	WITHOUT_CLASSIFICATION	0.2955055934743279	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9235902308603153	DEFECT	0.07640976913968471	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9612489026558039	DEFECT	0.0387510973441961	WITHOUT_CLASSIFICATION
