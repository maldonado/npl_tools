// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999981213854443	WITHOUT_CLASSIFICATION	1.8786145557112045E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999963368930789	WITHOUT_CLASSIFICATION	3.6631069211108433E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999997196721457	WITHOUT_CLASSIFICATION	2.803278542101367E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999837348790693	WITHOUT_CLASSIFICATION	1.6265120930561352E-5	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999959600090641	WITHOUT_CLASSIFICATION	4.039990935959185E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999778795021342	WITHOUT_CLASSIFICATION	2.2120497865811733E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.999996651532556	WITHOUT_CLASSIFICATION	3.3484674441124913E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9998577765954197	WITHOUT_CLASSIFICATION	1.4222340458022674E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999963426266736	WITHOUT_CLASSIFICATION	3.6573733264722593E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999784501003962	WITHOUT_CLASSIFICATION	2.1549899603808686E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999990434201297	WITHOUT_CLASSIFICATION	9.56579870281774E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.999998848774898	WITHOUT_CLASSIFICATION	1.1512251019327355E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999986425545903	WITHOUT_CLASSIFICATION	1.3574454097112106E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999997046612465	WITHOUT_CLASSIFICATION	2.9533875349668347E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999997426779825	WITHOUT_CLASSIFICATION	2.5732201742839775E-7	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999983285492792	WITHOUT_CLASSIFICATION	1.6714507207831067E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999989931603622	WITHOUT_CLASSIFICATION	1.0068396377639572E-6	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999995916987247	WITHOUT_CLASSIFICATION	4.083012753009647E-7	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.999999627845963	WITHOUT_CLASSIFICATION	3.721540370257886E-7	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999995537470397	WITHOUT_CLASSIFICATION	4.46252960212408E-7	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999998190321625	WITHOUT_CLASSIFICATION	1.8096783758487358E-7	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998350533932	WITHOUT_CLASSIFICATION	1.6494660694838497E-7	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999982690917874	WITHOUT_CLASSIFICATION	1.7309082125773476E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999990815575455	WITHOUT_CLASSIFICATION	9.184424544854064E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998969260896	WITHOUT_CLASSIFICATION	1.0307391035523574E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999934157038163	WITHOUT_CLASSIFICATION	6.58429618372475E-6	DEFECT
// high	WITHOUT_CLASSIFICATION	0.99999403421576	WITHOUT_CLASSIFICATION	5.96578423993709E-6	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999751043374838	WITHOUT_CLASSIFICATION	2.4895662516144635E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999997177017178	WITHOUT_CLASSIFICATION	2.822982822206859E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999990111560155	WITHOUT_CLASSIFICATION	9.888439844983148E-6	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999972710865175	WITHOUT_CLASSIFICATION	2.7289134825637888E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999991470198046	WITHOUT_CLASSIFICATION	8.529801954167575E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999996904139473	WITHOUT_CLASSIFICATION	3.095860526512993E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999988330476483	WITHOUT_CLASSIFICATION	1.1669523517175939E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999996315636429	WITHOUT_CLASSIFICATION	3.6843635710553823E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987136152511	WITHOUT_CLASSIFICATION	1.2863847488639768E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999474742514367	WITHOUT_CLASSIFICATION	5.252574856320697E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999879100464645	WITHOUT_CLASSIFICATION	1.2089953535499194E-5	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999894640833872	WITHOUT_CLASSIFICATION	1.0535916612799117E-5	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999894640833872	WITHOUT_CLASSIFICATION	1.0535916612799117E-5	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999894640833872	WITHOUT_CLASSIFICATION	1.0535916612799117E-5	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999992996742844	WITHOUT_CLASSIFICATION	7.003257155841875E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998866098195	WITHOUT_CLASSIFICATION	1.1339018042594308E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999982962634483	WITHOUT_CLASSIFICATION	1.7037365517275054E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999765689417	WITHOUT_CLASSIFICATION	2.3431058277781982E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999569999266	WITHOUT_CLASSIFICATION	4.300007334765929E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999569999266	WITHOUT_CLASSIFICATION	4.300007334765929E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999569999266	WITHOUT_CLASSIFICATION	4.300007334765929E-8	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999997784983877	WITHOUT_CLASSIFICATION	2.2150161227567875E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999359326414	WITHOUT_CLASSIFICATION	6.406735863556789E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999988765613871	WITHOUT_CLASSIFICATION	1.1234386129399387E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.999908730902842	WITHOUT_CLASSIFICATION	9.12690971579141E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999361193542995	WITHOUT_CLASSIFICATION	6.388064570052615E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999995870800834	WITHOUT_CLASSIFICATION	4.1291991656763154E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999917081776368	WITHOUT_CLASSIFICATION	8.291822363215677E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999976096283699	WITHOUT_CLASSIFICATION	2.3903716301490196E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999976096283699	WITHOUT_CLASSIFICATION	2.3903716301490196E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998275406462558	WITHOUT_CLASSIFICATION	1.7245935374412177E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999980302105058	WITHOUT_CLASSIFICATION	1.9697894942069024E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999980302105058	WITHOUT_CLASSIFICATION	1.9697894942069024E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999980302105058	WITHOUT_CLASSIFICATION	1.9697894942069024E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999980302105058	WITHOUT_CLASSIFICATION	1.9697894942069024E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998711959162	WITHOUT_CLASSIFICATION	1.2880408387153346E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999869498080243	WITHOUT_CLASSIFICATION	1.3050191975801226E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999457258635556	WITHOUT_CLASSIFICATION	5.427413644448063E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999999237583126	WITHOUT_CLASSIFICATION	7.624168744827718E-8	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999997776406393	WITHOUT_CLASSIFICATION	2.223593607591552E-7	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9973095671941528	WITHOUT_CLASSIFICATION	0.002690432805847326	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999985872808795	WITHOUT_CLASSIFICATION	1.41271912040924E-6	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999689632363561	WITHOUT_CLASSIFICATION	3.103676364389991E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999896353441461	WITHOUT_CLASSIFICATION	1.0364655853929531E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999997436301283	WITHOUT_CLASSIFICATION	2.5636987170254174E-6	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999986182924266	WITHOUT_CLASSIFICATION	1.3817075733760088E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999984945228317	WITHOUT_CLASSIFICATION	1.5054771682979663E-6	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.994569701477369	WITHOUT_CLASSIFICATION	0.005430298522631043	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999980590550249	WITHOUT_CLASSIFICATION	1.9409449751342345E-6	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9884118978587765	WITHOUT_CLASSIFICATION	0.011588102141223503	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9968025889981045	WITHOUT_CLASSIFICATION	0.0031974110018954957	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9989133664044146	WITHOUT_CLASSIFICATION	0.0010866335955853686	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999542079644	WITHOUT_CLASSIFICATION	4.579203548651893E-8	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999994742062457	WITHOUT_CLASSIFICATION	5.257937542396183E-7	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999994742062457	WITHOUT_CLASSIFICATION	5.257937542396183E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999982907636243	WITHOUT_CLASSIFICATION	1.7092363756120184E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999387401996576	WITHOUT_CLASSIFICATION	6.125980034240296E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999996463213245	WITHOUT_CLASSIFICATION	3.5367867543919536E-7	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999926538707521	WITHOUT_CLASSIFICATION	7.346129247799903E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999955659684546	WITHOUT_CLASSIFICATION	4.434031545362966E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999988737283385	WITHOUT_CLASSIFICATION	1.1262716615459008E-6	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999576386186322	WITHOUT_CLASSIFICATION	4.236138136781424E-5	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999999319192462	WITHOUT_CLASSIFICATION	6.808075386426472E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999154258646353	WITHOUT_CLASSIFICATION	8.457413536461088E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999994817374233	WITHOUT_CLASSIFICATION	5.182625766951958E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999499898412971	WITHOUT_CLASSIFICATION	5.001015870273024E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999863082030997	WITHOUT_CLASSIFICATION	1.3691796900350413E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997545588826	WITHOUT_CLASSIFICATION	2.4544111736344636E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997899692138398	WITHOUT_CLASSIFICATION	2.1003078616025906E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999992787085619	WITHOUT_CLASSIFICATION	7.212914381567573E-7	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999992787085619	WITHOUT_CLASSIFICATION	7.212914381567573E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999954085252725	WITHOUT_CLASSIFICATION	4.591474727488991E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999954848383029	WITHOUT_CLASSIFICATION	4.515161697115904E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999980467096307	WITHOUT_CLASSIFICATION	1.95329036938159E-6	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999946634139855	WITHOUT_CLASSIFICATION	5.336586014468373E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999934134879418	WITHOUT_CLASSIFICATION	6.586512058250141E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999391228999076	WITHOUT_CLASSIFICATION	6.087710009239848E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999391228999076	WITHOUT_CLASSIFICATION	6.087710009239848E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999996886308621	WITHOUT_CLASSIFICATION	3.113691378950146E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999996886308621	WITHOUT_CLASSIFICATION	3.113691378950146E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999997176562931	WITHOUT_CLASSIFICATION	2.8234370691103166E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999861939790791	WITHOUT_CLASSIFICATION	1.3806020920940674E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9998709932756537	WITHOUT_CLASSIFICATION	1.2900672434637626E-4	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999906753595416	WITHOUT_CLASSIFICATION	9.3246404584415E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999906753595416	WITHOUT_CLASSIFICATION	9.3246404584415E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999721223497329	WITHOUT_CLASSIFICATION	2.787765026711307E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9981124145911167	WITHOUT_CLASSIFICATION	0.001887585408883402	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999650959663435	WITHOUT_CLASSIFICATION	3.490403365645815E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999981992943155	WITHOUT_CLASSIFICATION	1.8007056844316137E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999981992943155	WITHOUT_CLASSIFICATION	1.8007056844316137E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999892721090229	WITHOUT_CLASSIFICATION	1.0727890977242178E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999892721090229	WITHOUT_CLASSIFICATION	1.0727890977242178E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999996330803966	WITHOUT_CLASSIFICATION	3.669196033802676E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999997340204551	WITHOUT_CLASSIFICATION	2.659795449191877E-7	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.999999753694644	WITHOUT_CLASSIFICATION	2.4630535598085396E-7	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999042719656	WITHOUT_CLASSIFICATION	9.572803429083718E-8	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999986158931471	WITHOUT_CLASSIFICATION	1.3841068528994244E-6	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999988238384204	WITHOUT_CLASSIFICATION	1.1761615795141277E-6	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999893329115432	WITHOUT_CLASSIFICATION	1.0667088456747159E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999965536809365	WITHOUT_CLASSIFICATION	3.446319063365196E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999927650896676	WITHOUT_CLASSIFICATION	7.234910332379997E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999703002148	WITHOUT_CLASSIFICATION	2.969978519340325E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999998728868326	WITHOUT_CLASSIFICATION	1.2711316743630038E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999998728868326	WITHOUT_CLASSIFICATION	1.2711316743630038E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999998409441017	WITHOUT_CLASSIFICATION	1.59055898336642E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999998409441017	WITHOUT_CLASSIFICATION	1.59055898336642E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999376976485	WITHOUT_CLASSIFICATION	6.230235154247992E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999608288791	WITHOUT_CLASSIFICATION	3.917112090338125E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999608288791	WITHOUT_CLASSIFICATION	3.917112090338125E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999608288791	WITHOUT_CLASSIFICATION	3.917112090338125E-8	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999933175327378	WITHOUT_CLASSIFICATION	6.682467262159547E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999794740703017	WITHOUT_CLASSIFICATION	2.05259296983595E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999998060488309	WITHOUT_CLASSIFICATION	1.9395116913549842E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999983937236318	WITHOUT_CLASSIFICATION	1.606276368283191E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999983937236318	WITHOUT_CLASSIFICATION	1.606276368283191E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999992474151164	WITHOUT_CLASSIFICATION	7.525848835404155E-7	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999979686220143	WITHOUT_CLASSIFICATION	2.031377985702799E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999979686220143	WITHOUT_CLASSIFICATION	2.031377985702799E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999901668998424	WITHOUT_CLASSIFICATION	9.833100157474273E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999901668998424	WITHOUT_CLASSIFICATION	9.833100157474273E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999901668998424	WITHOUT_CLASSIFICATION	9.833100157474273E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.999998201802909	WITHOUT_CLASSIFICATION	1.798197090977651E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.999998201802909	WITHOUT_CLASSIFICATION	1.798197090977651E-6	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999999706613095	WITHOUT_CLASSIFICATION	2.9338690449562584E-8	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999981753549325	WITHOUT_CLASSIFICATION	1.8246450673688754E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999981753549325	WITHOUT_CLASSIFICATION	1.8246450673688754E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999928163764429	WITHOUT_CLASSIFICATION	7.183623557127945E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999998808720294	WITHOUT_CLASSIFICATION	1.1912797047729088E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999275994554553	WITHOUT_CLASSIFICATION	7.240054454472097E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.999992175786669	WITHOUT_CLASSIFICATION	7.82421333098159E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999964532586975	WITHOUT_CLASSIFICATION	3.546741302645614E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.999999670298867	WITHOUT_CLASSIFICATION	3.297011329054662E-7	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999992244760189	WITHOUT_CLASSIFICATION	7.755239811769378E-7	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999987636313731	WITHOUT_CLASSIFICATION	1.2363686269694201E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999994662321785	WITHOUT_CLASSIFICATION	5.337678215736392E-7	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999965936655358	WITHOUT_CLASSIFICATION	3.4063344640691424E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999460174821	WITHOUT_CLASSIFICATION	5.398251785937418E-8	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.7583081973466607	WITHOUT_CLASSIFICATION	0.24169180265333945	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999972097977228	WITHOUT_CLASSIFICATION	2.7902022771817297E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999997263064039	WITHOUT_CLASSIFICATION	2.7369359616601965E-7	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999990708355688	WITHOUT_CLASSIFICATION	9.291644311818152E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999956474973757	WITHOUT_CLASSIFICATION	4.352502624325601E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999944035146274	WITHOUT_CLASSIFICATION	5.596485372505873E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9998393657527199	WITHOUT_CLASSIFICATION	1.6063424727998332E-4	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9998393657527199	WITHOUT_CLASSIFICATION	1.6063424727998332E-4	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999878298678191	WITHOUT_CLASSIFICATION	1.2170132180936061E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999990636693424	WITHOUT_CLASSIFICATION	9.363306574836188E-7	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9973139398375013	WITHOUT_CLASSIFICATION	0.00268606016249867	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999782749733253	WITHOUT_CLASSIFICATION	2.1725026674774775E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999997118827518	WITHOUT_CLASSIFICATION	2.881172481582536E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999965044371688	WITHOUT_CLASSIFICATION	3.4955628311802046E-6	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999971436312568	WITHOUT_CLASSIFICATION	2.8563687432986538E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999989366059629	WITHOUT_CLASSIFICATION	1.0633940371106223E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999989366059629	WITHOUT_CLASSIFICATION	1.0633940371106223E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995817576951	WITHOUT_CLASSIFICATION	4.182423050033281E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995817576951	WITHOUT_CLASSIFICATION	4.182423050033281E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999788742104112	WITHOUT_CLASSIFICATION	2.1125789588786764E-5	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999775989586515	WITHOUT_CLASSIFICATION	2.2401041348605856E-5	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999994863391565	WITHOUT_CLASSIFICATION	5.136608434854099E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999997407820688	WITHOUT_CLASSIFICATION	2.5921793117119296E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999822559916619	WITHOUT_CLASSIFICATION	1.7744008338039082E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999151023419431	WITHOUT_CLASSIFICATION	8.4897658056905E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999910008575544	WITHOUT_CLASSIFICATION	8.99914244553172E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999242393707587	WITHOUT_CLASSIFICATION	7.576062924133422E-5	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999728944830231	WITHOUT_CLASSIFICATION	2.710551697686788E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999996439725082	WITHOUT_CLASSIFICATION	3.560274918205985E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999959903217341	WITHOUT_CLASSIFICATION	4.009678265797869E-6	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999999947243763	WITHOUT_CLASSIFICATION	5.275623726588124E-9	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.999989075281386	WITHOUT_CLASSIFICATION	1.0924718613925399E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998942073359234	WITHOUT_CLASSIFICATION	1.0579266407653819E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998942073359234	WITHOUT_CLASSIFICATION	1.0579266407653819E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999958564441904	WITHOUT_CLASSIFICATION	4.143555809571479E-6	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999949837835275	WITHOUT_CLASSIFICATION	5.016216472515385E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999600545247	WITHOUT_CLASSIFICATION	3.994547524074452E-8	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999600545247	WITHOUT_CLASSIFICATION	3.994547524074452E-8	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.99999702780536	WITHOUT_CLASSIFICATION	2.9721946398947974E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999999570360742	WITHOUT_CLASSIFICATION	4.296392576011233E-8	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999997646288058	WITHOUT_CLASSIFICATION	2.3537119420481245E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9999726170435395	WITHOUT_CLASSIFICATION	2.7382956460643298E-5	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999983367324398	WITHOUT_CLASSIFICATION	1.6632675602521006E-6	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999951935958663	WITHOUT_CLASSIFICATION	4.806404133699756E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999928403144216	WITHOUT_CLASSIFICATION	7.159685578348614E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999977412135987	WITHOUT_CLASSIFICATION	2.25878640128635E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999977412135987	WITHOUT_CLASSIFICATION	2.25878640128635E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9997444596038202	WITHOUT_CLASSIFICATION	2.555403961798614E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9998236781258362	WITHOUT_CLASSIFICATION	1.7632187416390677E-4	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.99999690772213	WITHOUT_CLASSIFICATION	3.092277869984132E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.99999690772213	WITHOUT_CLASSIFICATION	3.092277869984132E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999124880483836	WITHOUT_CLASSIFICATION	8.751195161641431E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999998866863867	WITHOUT_CLASSIFICATION	1.1331361328043521E-7	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.999999086641542	WITHOUT_CLASSIFICATION	9.133584579545574E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999574639407	WITHOUT_CLASSIFICATION	4.253605925009085E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999999743194503	WITHOUT_CLASSIFICATION	2.5680549655347173E-8	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999998749074895	WITHOUT_CLASSIFICATION	1.2509251035512435E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999829842622724	WITHOUT_CLASSIFICATION	1.7015737727659186E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999829842622724	WITHOUT_CLASSIFICATION	1.7015737727659186E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999829842622724	WITHOUT_CLASSIFICATION	1.7015737727659186E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999987257367	WITHOUT_CLASSIFICATION	1.2742632294489825E-9	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999996182465	WITHOUT_CLASSIFICATION	3.8175341343127525E-10	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999984981315281	WITHOUT_CLASSIFICATION	1.5018684719135433E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.999999748712829	WITHOUT_CLASSIFICATION	2.5128717099856325E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999237349162	WITHOUT_CLASSIFICATION	7.626508384241793E-8	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.999968679639219	WITHOUT_CLASSIFICATION	3.132036078096679E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999999915648962	WITHOUT_CLASSIFICATION	8.435103907580221E-9	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999921001631267	WITHOUT_CLASSIFICATION	7.89983687335069E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999921001631267	WITHOUT_CLASSIFICATION	7.89983687335069E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999921001631267	WITHOUT_CLASSIFICATION	7.89983687335069E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999997068052916	WITHOUT_CLASSIFICATION	2.9319470841544486E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999996315636429	WITHOUT_CLASSIFICATION	3.6843635710553823E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999959886432614	WITHOUT_CLASSIFICATION	4.011356738615879E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999959886432614	WITHOUT_CLASSIFICATION	4.011356738615879E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999959886432614	WITHOUT_CLASSIFICATION	4.011356738615879E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991373770062	WITHOUT_CLASSIFICATION	8.626229938616936E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999923031774204	WITHOUT_CLASSIFICATION	7.696822579605558E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999923031774204	WITHOUT_CLASSIFICATION	7.696822579605558E-6	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9998091160500618	WITHOUT_CLASSIFICATION	1.9088394993824746E-4	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999997218467295	WITHOUT_CLASSIFICATION	2.7815327057922494E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999390336334	WITHOUT_CLASSIFICATION	6.096636661337165E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.99999983924042	WITHOUT_CLASSIFICATION	1.6075957995290145E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998066719458	WITHOUT_CLASSIFICATION	1.9332805420002583E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999835649576841	WITHOUT_CLASSIFICATION	1.643504231580411E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999966380783208	WITHOUT_CLASSIFICATION	3.361921679170617E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999988330476483	WITHOUT_CLASSIFICATION	1.1669523517175939E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999992184275458	WITHOUT_CLASSIFICATION	7.815724541527263E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999990434201297	WITHOUT_CLASSIFICATION	9.56579870281774E-7	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999922747358928	WITHOUT_CLASSIFICATION	7.725264107143388E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999975331511707	WITHOUT_CLASSIFICATION	2.4668488294279145E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999995049719829	WITHOUT_CLASSIFICATION	4.95028017106775E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999995049719829	WITHOUT_CLASSIFICATION	4.95028017106775E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999570046586651	WITHOUT_CLASSIFICATION	4.299534133488638E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999992061422832	WITHOUT_CLASSIFICATION	7.938577167790934E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999992061422832	WITHOUT_CLASSIFICATION	7.938577167790934E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999987145522503	WITHOUT_CLASSIFICATION	1.285447749639278E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999999611218814	WITHOUT_CLASSIFICATION	3.887811865145307E-8	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999812069799582	WITHOUT_CLASSIFICATION	1.8793020041857992E-5	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999760489870673	WITHOUT_CLASSIFICATION	2.3951012932732703E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.999972785295029	WITHOUT_CLASSIFICATION	2.7214704970960857E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.999972785295029	WITHOUT_CLASSIFICATION	2.7214704970960857E-5	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999996392517989	WITHOUT_CLASSIFICATION	3.6074820107507357E-7	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9998403201844565	WITHOUT_CLASSIFICATION	1.5967981554358866E-4	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999960481992192	WITHOUT_CLASSIFICATION	3.951800780784218E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999872201070621	WITHOUT_CLASSIFICATION	1.277989293791561E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999626823183	WITHOUT_CLASSIFICATION	3.731768174747916E-8	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999979063782456	WITHOUT_CLASSIFICATION	2.0936217543791613E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984162594789	WITHOUT_CLASSIFICATION	1.5837405210039454E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999526396688	WITHOUT_CLASSIFICATION	4.7360331173705856E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.999999604230952	WITHOUT_CLASSIFICATION	3.957690479544004E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999976034883606	WITHOUT_CLASSIFICATION	2.3965116394667675E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999995287115142	WITHOUT_CLASSIFICATION	4.712884858466679E-7	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999983920041462	WITHOUT_CLASSIFICATION	1.607995853722302E-6	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999989504022349	WITHOUT_CLASSIFICATION	1.0495977651581954E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999998570257932	WITHOUT_CLASSIFICATION	1.4297420677602715E-7	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999979082098731	WITHOUT_CLASSIFICATION	2.0917901268299703E-6	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999993751248885	WITHOUT_CLASSIFICATION	6.248751115267448E-7	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999905874405863	WITHOUT_CLASSIFICATION	9.412559413685867E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999995277050273	WITHOUT_CLASSIFICATION	4.7229497274900655E-7	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999891806427503	WITHOUT_CLASSIFICATION	1.0819357249714863E-5	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999940451986883	WITHOUT_CLASSIFICATION	5.954801311616455E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999940451986883	WITHOUT_CLASSIFICATION	5.954801311616455E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.999910545163797	WITHOUT_CLASSIFICATION	8.945483620312874E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999994599482543	WITHOUT_CLASSIFICATION	5.400517456711067E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999881918741039	WITHOUT_CLASSIFICATION	1.1808125896078996E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999813847559639	WITHOUT_CLASSIFICATION	1.861524403610462E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999965920163499	WITHOUT_CLASSIFICATION	3.407983650130025E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999988601933216	WITHOUT_CLASSIFICATION	1.13980667842369E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999947114946283	WITHOUT_CLASSIFICATION	5.288505371828203E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999981679105675	WITHOUT_CLASSIFICATION	1.8320894324475515E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999993805588112	WITHOUT_CLASSIFICATION	6.194411888794601E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999993805588112	WITHOUT_CLASSIFICATION	6.194411888794601E-7	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999868832218871	WITHOUT_CLASSIFICATION	1.3116778112776458E-5	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999994032450233	WITHOUT_CLASSIFICATION	5.967549766646893E-7	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999923269058024	WITHOUT_CLASSIFICATION	7.67309419748303E-6	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999867148619568	WITHOUT_CLASSIFICATION	1.3285138043217193E-5	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999938881505771	WITHOUT_CLASSIFICATION	6.111849422933987E-6	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999435512075	WITHOUT_CLASSIFICATION	5.644879259832644E-8	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999997882813698	WITHOUT_CLASSIFICATION	2.1171863012339473E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996181670955	WITHOUT_CLASSIFICATION	3.8183290450745556E-7	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999997075192647	WITHOUT_CLASSIFICATION	2.924807352875668E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999994072321734	WITHOUT_CLASSIFICATION	5.927678266643166E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999994072321734	WITHOUT_CLASSIFICATION	5.927678266643166E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9999934272564832	WITHOUT_CLASSIFICATION	6.57274351680431E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999976479680089	WITHOUT_CLASSIFICATION	2.3520319910844363E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.999998966024907	WITHOUT_CLASSIFICATION	1.0339750929890662E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999991433245526	WITHOUT_CLASSIFICATION	8.566754473514813E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999991433245526	WITHOUT_CLASSIFICATION	8.566754473514813E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999999517453555	WITHOUT_CLASSIFICATION	4.825464461135104E-8	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999999517453555	WITHOUT_CLASSIFICATION	4.825464461135104E-8	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.999986597184131	WITHOUT_CLASSIFICATION	1.3402815869041707E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999222448997755	WITHOUT_CLASSIFICATION	7.775510022435238E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999991616750085	WITHOUT_CLASSIFICATION	8.383249915474626E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999991616750085	WITHOUT_CLASSIFICATION	8.383249915474626E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999992277986933	WITHOUT_CLASSIFICATION	7.722013067371372E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.999998848774898	WITHOUT_CLASSIFICATION	1.1512251019327355E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999998965263976	WITHOUT_CLASSIFICATION	1.0347360224887428E-7	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999992013113479	WITHOUT_CLASSIFICATION	7.986886520013743E-7	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999981679074047	WITHOUT_CLASSIFICATION	1.8320925952364958E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.999997680052616	WITHOUT_CLASSIFICATION	2.31994738407706E-6	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999708130184054	WITHOUT_CLASSIFICATION	2.9186981594507728E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999992919958632	WITHOUT_CLASSIFICATION	7.080041367426071E-7	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999993820650596	WITHOUT_CLASSIFICATION	6.17934940362342E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999990310102412	WITHOUT_CLASSIFICATION	9.689897587265928E-7	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999978692773639	WITHOUT_CLASSIFICATION	2.1307226361069148E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999996116334288	WITHOUT_CLASSIFICATION	3.883665712352581E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9998982627988692	WITHOUT_CLASSIFICATION	1.0173720113090718E-4	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999972407653301	WITHOUT_CLASSIFICATION	2.75923466991927E-6	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9999903583476508	WITHOUT_CLASSIFICATION	9.641652349139501E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999926890177651	WITHOUT_CLASSIFICATION	7.310982234956224E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999995453532976	WITHOUT_CLASSIFICATION	4.546467023838592E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999997909579605	WITHOUT_CLASSIFICATION	2.0904203943574197E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999984203231429	WITHOUT_CLASSIFICATION	1.579676857092507E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9998783787188179	WITHOUT_CLASSIFICATION	1.2162128118211983E-4	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999993210090355	WITHOUT_CLASSIFICATION	6.789909644772537E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9997801476751452	WITHOUT_CLASSIFICATION	2.1985232485471378E-4	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999995391607851	WITHOUT_CLASSIFICATION	4.6083921493060804E-7	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999170309013276	WITHOUT_CLASSIFICATION	8.296909867246972E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999701169844	WITHOUT_CLASSIFICATION	2.988301557910364E-8	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999749981518923	WITHOUT_CLASSIFICATION	2.500184810770656E-5	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999894640833872	WITHOUT_CLASSIFICATION	1.0535916612799117E-5	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999894640833872	WITHOUT_CLASSIFICATION	1.0535916612799117E-5	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999444511994	WITHOUT_CLASSIFICATION	5.55488005882495E-8	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999979001631506	WITHOUT_CLASSIFICATION	2.09983684940046E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999270439685	WITHOUT_CLASSIFICATION	7.295603159832053E-8	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999963507956334	WITHOUT_CLASSIFICATION	3.6492043664506165E-6	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999994981217395	WITHOUT_CLASSIFICATION	5.01878260508494E-7	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999859569862	WITHOUT_CLASSIFICATION	1.4043013711543266E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9646033099988658	WITHOUT_CLASSIFICATION	0.03539669000113425	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999285669082	WITHOUT_CLASSIFICATION	7.143309177723762E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999990743791449	WITHOUT_CLASSIFICATION	9.256208550808343E-7	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999998035859837	WITHOUT_CLASSIFICATION	1.9641401635332604E-7	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999991478482227	WITHOUT_CLASSIFICATION	8.521517772861123E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999992996742844	WITHOUT_CLASSIFICATION	7.003257155841875E-7	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999998423536572	WITHOUT_CLASSIFICATION	1.5764634272504822E-7	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999991761372846	WITHOUT_CLASSIFICATION	8.238627154130337E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999824934548444	WITHOUT_CLASSIFICATION	1.750654515569756E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999996739531463	WITHOUT_CLASSIFICATION	3.2604685370017822E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9993561382733247	WITHOUT_CLASSIFICATION	6.438617266753431E-4	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999998028570809	WITHOUT_CLASSIFICATION	1.971429191157052E-7	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999888645586504	WITHOUT_CLASSIFICATION	1.1135441349654134E-5	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.999999848915622	WITHOUT_CLASSIFICATION	1.5108437798842654E-7	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999996672608071	WITHOUT_CLASSIFICATION	3.327391928089351E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999993371954845	WITHOUT_CLASSIFICATION	6.628045155295287E-7	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999960846792855	WITHOUT_CLASSIFICATION	3.915320714557216E-6	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999566437247	WITHOUT_CLASSIFICATION	4.3356275393656504E-8	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999928248268405	WITHOUT_CLASSIFICATION	7.1751731595219714E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999940134036595	WITHOUT_CLASSIFICATION	5.986596340506664E-6	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999978751684101	WITHOUT_CLASSIFICATION	2.1248315899649235E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999987847587116	WITHOUT_CLASSIFICATION	1.2152412883639384E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999997888039489	WITHOUT_CLASSIFICATION	2.1119605108050678E-7	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999976346385	WITHOUT_CLASSIFICATION	2.3653615785283235E-9	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999998936954441	WITHOUT_CLASSIFICATION	1.0630455598977335E-7	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999991616190689	WITHOUT_CLASSIFICATION	8.3838093111911E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999309247052	WITHOUT_CLASSIFICATION	6.907529484374906E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999309247052	WITHOUT_CLASSIFICATION	6.907529484374906E-8	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999835713605776	WITHOUT_CLASSIFICATION	1.642863942245079E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999996820889643	WITHOUT_CLASSIFICATION	3.179110356995391E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998866098195	WITHOUT_CLASSIFICATION	1.1339018042594308E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998866098195	WITHOUT_CLASSIFICATION	1.1339018042594308E-7	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999896099350577	WITHOUT_CLASSIFICATION	1.0390064942283156E-5	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999995657329345	WITHOUT_CLASSIFICATION	4.342670655208334E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999995657329345	WITHOUT_CLASSIFICATION	4.342670655208334E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999995657329345	WITHOUT_CLASSIFICATION	4.342670655208334E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999996820889643	WITHOUT_CLASSIFICATION	3.179110356995391E-6	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999992418928879	WITHOUT_CLASSIFICATION	7.581071120269523E-7	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999996493126907	WITHOUT_CLASSIFICATION	3.5068730931983483E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999996820889643	WITHOUT_CLASSIFICATION	3.179110356995391E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999996820889643	WITHOUT_CLASSIFICATION	3.179110356995391E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999996820889643	WITHOUT_CLASSIFICATION	3.179110356995391E-6	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999995427702836	WITHOUT_CLASSIFICATION	4.572297164576771E-7	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999976807468505	WITHOUT_CLASSIFICATION	2.3192531494998817E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999987909567619	WITHOUT_CLASSIFICATION	1.2090432380143605E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998943348613	WITHOUT_CLASSIFICATION	1.0566513875576913E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999555055830045	WITHOUT_CLASSIFICATION	4.449441699559885E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999982962634483	WITHOUT_CLASSIFICATION	1.7037365517275054E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.999999996820579	WITHOUT_CLASSIFICATION	3.179420960837076E-9	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999982962634483	WITHOUT_CLASSIFICATION	1.7037365517275054E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9783610759593614	WITHOUT_CLASSIFICATION	0.021638924040638684	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999981607246304	WITHOUT_CLASSIFICATION	1.8392753696011546E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999982962634483	WITHOUT_CLASSIFICATION	1.7037365517275054E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999982962634483	WITHOUT_CLASSIFICATION	1.7037365517275054E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999997862740202	WITHOUT_CLASSIFICATION	2.1372597978336153E-7	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999997664251628	WITHOUT_CLASSIFICATION	2.3357483721975123E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999765689417	WITHOUT_CLASSIFICATION	2.3431058277781982E-8	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999953514777145	WITHOUT_CLASSIFICATION	4.648522285496013E-6	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999994950959	WITHOUT_CLASSIFICATION	5.049041318398961E-10	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.999999707087122	WITHOUT_CLASSIFICATION	2.929128779357212E-7	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999985041235696	WITHOUT_CLASSIFICATION	1.4958764303949568E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999947789973699	WITHOUT_CLASSIFICATION	5.2210026301119685E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999947789973699	WITHOUT_CLASSIFICATION	5.2210026301119685E-6	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.999999760145165	WITHOUT_CLASSIFICATION	2.398548350010702E-7	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999943931360525	WITHOUT_CLASSIFICATION	5.606863947462467E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.7751341717678302	DEFECT	0.22486582823216988	WITHOUT_CLASSIFICATION
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998398823796	WITHOUT_CLASSIFICATION	1.6011762030118673E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999569999266	WITHOUT_CLASSIFICATION	4.300007334765929E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999569999266	WITHOUT_CLASSIFICATION	4.300007334765929E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999569999266	WITHOUT_CLASSIFICATION	4.300007334765929E-8	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998398823796	WITHOUT_CLASSIFICATION	1.6011762030118673E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998398823796	WITHOUT_CLASSIFICATION	1.6011762030118673E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998398823796	WITHOUT_CLASSIFICATION	1.6011762030118673E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998398823796	WITHOUT_CLASSIFICATION	1.6011762030118673E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998398823796	WITHOUT_CLASSIFICATION	1.6011762030118673E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999998540402062	WITHOUT_CLASSIFICATION	1.4595979375140995E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999999892855986	WITHOUT_CLASSIFICATION	1.0714401399913983E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999998673215567	WITHOUT_CLASSIFICATION	1.3267844328294012E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999998673215567	WITHOUT_CLASSIFICATION	1.3267844328294012E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999999892855986	WITHOUT_CLASSIFICATION	1.0714401399913983E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999999892855986	WITHOUT_CLASSIFICATION	1.0714401399913983E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999999892855986	WITHOUT_CLASSIFICATION	1.0714401399913983E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997800316928	WITHOUT_CLASSIFICATION	2.1996830731665229E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997800316928	WITHOUT_CLASSIFICATION	2.1996830731665229E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997800316928	WITHOUT_CLASSIFICATION	2.1996830731665229E-7	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999997784274023	WITHOUT_CLASSIFICATION	2.2157259778597232E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9646033099988658	WITHOUT_CLASSIFICATION	0.03539669000113425	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.999999892855986	WITHOUT_CLASSIFICATION	1.0714401399913983E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997800316928	WITHOUT_CLASSIFICATION	2.1996830731665229E-7	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999994263983193	WITHOUT_CLASSIFICATION	5.736016806070921E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999880666707168	WITHOUT_CLASSIFICATION	1.1933329283210525E-5	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999984578575736	WITHOUT_CLASSIFICATION	1.5421424263385394E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999989733344201	WITHOUT_CLASSIFICATION	1.0266655799093945E-6	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999998272888394	WITHOUT_CLASSIFICATION	1.727111605229301E-7	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999990460702693	WITHOUT_CLASSIFICATION	9.539297307616371E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999996260530999	WITHOUT_CLASSIFICATION	3.7394690009620496E-7	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999968504820499	WITHOUT_CLASSIFICATION	3.149517950195699E-6	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999686766948005	WITHOUT_CLASSIFICATION	3.1323305199537726E-5	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999685372346	WITHOUT_CLASSIFICATION	3.146276544429766E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999685372346	WITHOUT_CLASSIFICATION	3.146276544429766E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999999955850785	WITHOUT_CLASSIFICATION	4.4149214881775277E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999999955850785	WITHOUT_CLASSIFICATION	4.4149214881775277E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999999572796071	WITHOUT_CLASSIFICATION	4.27203928755391E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999999572796071	WITHOUT_CLASSIFICATION	4.27203928755391E-8	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999999506595778	WITHOUT_CLASSIFICATION	4.934042210513785E-8	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999967035884936	WITHOUT_CLASSIFICATION	3.296411506312441E-6	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.99999575929479	WITHOUT_CLASSIFICATION	4.24070520993102E-6	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999983738477174	WITHOUT_CLASSIFICATION	1.6261522826047878E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.999999479117654	WITHOUT_CLASSIFICATION	5.208823461008884E-7	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999962889218702	WITHOUT_CLASSIFICATION	3.711078129699051E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999887743819	WITHOUT_CLASSIFICATION	1.1225618054687638E-8	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999992143105391	WITHOUT_CLASSIFICATION	7.856894609129809E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999993781583	WITHOUT_CLASSIFICATION	6.218417357633723E-10	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999969899415684	WITHOUT_CLASSIFICATION	3.0100584316185673E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999983529096446	WITHOUT_CLASSIFICATION	1.6470903554119171E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998943348613	WITHOUT_CLASSIFICATION	1.0566513875576913E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999992539233311	WITHOUT_CLASSIFICATION	7.46076668936927E-7	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999995870800834	WITHOUT_CLASSIFICATION	4.1291991656763154E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999999454482124	WITHOUT_CLASSIFICATION	5.455178770478528E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999359326414	WITHOUT_CLASSIFICATION	6.406735863556789E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999359326414	WITHOUT_CLASSIFICATION	6.406735863556789E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999983035832942	WITHOUT_CLASSIFICATION	1.6964167058299247E-6	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999365156213721	WITHOUT_CLASSIFICATION	6.348437862786389E-5	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999992324732269	WITHOUT_CLASSIFICATION	7.675267732549126E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.999999804365232	WITHOUT_CLASSIFICATION	1.9563476802386846E-7	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999981770207497	WITHOUT_CLASSIFICATION	1.822979250316757E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.999999595425917	WITHOUT_CLASSIFICATION	4.0457408294387895E-7	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999877325551503	WITHOUT_CLASSIFICATION	1.2267444849849716E-5	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999999868646676	WITHOUT_CLASSIFICATION	1.3135332446736396E-8	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999995862868494	WITHOUT_CLASSIFICATION	4.1371315061130893E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9993167210859769	WITHOUT_CLASSIFICATION	6.832789140230201E-4	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9998766215624685	WITHOUT_CLASSIFICATION	1.2337843753151302E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999361193542995	WITHOUT_CLASSIFICATION	6.388064570052615E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999796993145987	WITHOUT_CLASSIFICATION	2.030068540126087E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999997739769402	WITHOUT_CLASSIFICATION	2.26023059856031E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999958029189494	WITHOUT_CLASSIFICATION	4.197081050531757E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999990522104696	WITHOUT_CLASSIFICATION	9.477895304121275E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999990522104696	WITHOUT_CLASSIFICATION	9.477895304121275E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999994963765515	WITHOUT_CLASSIFICATION	5.036234484268283E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999994963765515	WITHOUT_CLASSIFICATION	5.036234484268283E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999917081776368	WITHOUT_CLASSIFICATION	8.291822363215677E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999917081776368	WITHOUT_CLASSIFICATION	8.291822363215677E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999962042900729	WITHOUT_CLASSIFICATION	3.7957099271725623E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999943931360525	WITHOUT_CLASSIFICATION	5.606863947462467E-6	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9998436595265333	WITHOUT_CLASSIFICATION	1.5634047346668148E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9996906771414881	WITHOUT_CLASSIFICATION	3.0932285851188263E-4	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.999999945058981	WITHOUT_CLASSIFICATION	5.494101889193729E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999996378656009	WITHOUT_CLASSIFICATION	3.621343991756111E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999990522104696	WITHOUT_CLASSIFICATION	9.477895304121275E-7	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999971435182388	WITHOUT_CLASSIFICATION	2.856481761204534E-6	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9999948644265193	WITHOUT_CLASSIFICATION	5.135573480649776E-6	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999639494319	WITHOUT_CLASSIFICATION	3.605056817382374E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996953367278	WITHOUT_CLASSIFICATION	3.0466327212353736E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999994963765515	WITHOUT_CLASSIFICATION	5.036234484268283E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999917081776368	WITHOUT_CLASSIFICATION	8.291822363215677E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999943931360525	WITHOUT_CLASSIFICATION	5.606863947462467E-6	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999993924181114	WITHOUT_CLASSIFICATION	6.075818885624047E-7	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999998695246772	WITHOUT_CLASSIFICATION	1.3047532281923164E-7	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999972672004808	WITHOUT_CLASSIFICATION	2.7327995193044393E-6	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999277953914	WITHOUT_CLASSIFICATION	7.220460863817222E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999997303890386	WITHOUT_CLASSIFICATION	2.6961096137068256E-7	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.999999502732252	WITHOUT_CLASSIFICATION	4.972677480699636E-7	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999980302105058	WITHOUT_CLASSIFICATION	1.9697894942069024E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999992113774199	WITHOUT_CLASSIFICATION	7.886225801889015E-7	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999695606146489	WITHOUT_CLASSIFICATION	3.0439385351172143E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999141755592496	WITHOUT_CLASSIFICATION	8.582444075043453E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998711959162	WITHOUT_CLASSIFICATION	1.2880408387153346E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999869498080243	WITHOUT_CLASSIFICATION	1.3050191975801226E-5	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999998666170037	WITHOUT_CLASSIFICATION	1.3338299631308996E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999998666170037	WITHOUT_CLASSIFICATION	1.3338299631308996E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999999856118227	WITHOUT_CLASSIFICATION	1.4388177204809509E-8	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999999856118227	WITHOUT_CLASSIFICATION	1.4388177204809509E-8	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999998007361364	WITHOUT_CLASSIFICATION	1.992638636658951E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999998007361364	WITHOUT_CLASSIFICATION	1.992638636658951E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.999932479556279	WITHOUT_CLASSIFICATION	6.752044372109064E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999457258635556	WITHOUT_CLASSIFICATION	5.427413644448063E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999954258571523	WITHOUT_CLASSIFICATION	4.5741428477545506E-6	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999999237583126	WITHOUT_CLASSIFICATION	7.624168744827718E-8	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.999983011048292	WITHOUT_CLASSIFICATION	1.6988951708049422E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999994987072621	WITHOUT_CLASSIFICATION	5.012927379001559E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999983135156043	WITHOUT_CLASSIFICATION	1.6864843956004279E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999983135156043	WITHOUT_CLASSIFICATION	1.6864843956004279E-6	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997048425732	WITHOUT_CLASSIFICATION	2.951574268991829E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997048425732	WITHOUT_CLASSIFICATION	2.951574268991829E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999997776406393	WITHOUT_CLASSIFICATION	2.223593607591552E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999964289450778	WITHOUT_CLASSIFICATION	3.571054922298421E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999991334989037	WITHOUT_CLASSIFICATION	8.66501096259113E-7	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997277488668	WITHOUT_CLASSIFICATION	2.7225113312513197E-7	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9998638616505422	WITHOUT_CLASSIFICATION	1.3613834945775923E-4	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999979032303924	WITHOUT_CLASSIFICATION	2.096769607538635E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999976096283699	WITHOUT_CLASSIFICATION	2.3903716301490196E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999964289450778	WITHOUT_CLASSIFICATION	3.571054922298421E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999991334989037	WITHOUT_CLASSIFICATION	8.66501096259113E-7	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997277488668	WITHOUT_CLASSIFICATION	2.7225113312513197E-7	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999998013711353	WITHOUT_CLASSIFICATION	1.9862886473473671E-7	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999999371490654	WITHOUT_CLASSIFICATION	6.285093457251519E-8	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999997399715987	WITHOUT_CLASSIFICATION	2.6002840130889974E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999904014473093	WITHOUT_CLASSIFICATION	9.598552690772608E-6	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999925207115203	WITHOUT_CLASSIFICATION	7.4792884796721485E-6	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999943169518865	WITHOUT_CLASSIFICATION	5.683048113567198E-6	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999624549706718	WITHOUT_CLASSIFICATION	3.754502932820717E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999985872808795	WITHOUT_CLASSIFICATION	1.41271912040924E-6	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999838374834137	WITHOUT_CLASSIFICATION	1.6162516586326947E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999997682710329	WITHOUT_CLASSIFICATION	2.3172896707448277E-7	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999996809404171	WITHOUT_CLASSIFICATION	3.1905958292449963E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999979589621716	WITHOUT_CLASSIFICATION	2.041037828410903E-6	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999979589621716	WITHOUT_CLASSIFICATION	2.041037828410903E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999971955285032	WITHOUT_CLASSIFICATION	2.8044714969069613E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999971955285032	WITHOUT_CLASSIFICATION	2.8044714969069613E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999743854171198	WITHOUT_CLASSIFICATION	2.5614582880118062E-5	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999989626196822	WITHOUT_CLASSIFICATION	1.0373803177865384E-6	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999917010760015	WITHOUT_CLASSIFICATION	8.298923998365564E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.999997436301283	WITHOUT_CLASSIFICATION	2.5636987170254174E-6	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999933889431907	WITHOUT_CLASSIFICATION	6.611056809228238E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999983681531114	WITHOUT_CLASSIFICATION	1.6318468886622782E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999992113774199	WITHOUT_CLASSIFICATION	7.886225801889015E-7	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999975875174066	WITHOUT_CLASSIFICATION	2.4124825933103775E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999936115273099	WITHOUT_CLASSIFICATION	6.388472690170121E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999945523801647	WITHOUT_CLASSIFICATION	5.447619835448031E-6	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999739776719823	WITHOUT_CLASSIFICATION	2.6022328017704207E-4	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999896353441461	WITHOUT_CLASSIFICATION	1.0364655853929531E-5	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999990363909952	WITHOUT_CLASSIFICATION	9.636090047817475E-7	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999990363909952	WITHOUT_CLASSIFICATION	9.636090047817475E-7	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9997502075709724	WITHOUT_CLASSIFICATION	2.4979242902757815E-4	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999986182924266	WITHOUT_CLASSIFICATION	1.3817075733760088E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998199231222518	WITHOUT_CLASSIFICATION	1.8007687774820752E-4	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998256271731375	WITHOUT_CLASSIFICATION	1.7437282686245188E-4	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999936284775954	WITHOUT_CLASSIFICATION	6.3715224046354105E-6	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999862589203461	WITHOUT_CLASSIFICATION	1.3741079653894487E-5	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9998013026042121	WITHOUT_CLASSIFICATION	1.986973957879029E-4	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999760528616515	WITHOUT_CLASSIFICATION	2.3947138348550558E-5	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9997229780650011	WITHOUT_CLASSIFICATION	2.7702193499881515E-4	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.999931339337312	WITHOUT_CLASSIFICATION	6.866066268800545E-5	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999981607246304	WITHOUT_CLASSIFICATION	1.8392753696011546E-6	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9994398754357476	WITHOUT_CLASSIFICATION	5.601245642524479E-4	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999666773750555	WITHOUT_CLASSIFICATION	3.332262494445342E-5	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999733588140974	WITHOUT_CLASSIFICATION	2.664118590250918E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999899589637826	WITHOUT_CLASSIFICATION	1.0041036217319534E-5	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9951926837617455	WITHOUT_CLASSIFICATION	0.004807316238254473	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999976175334014	WITHOUT_CLASSIFICATION	2.3824665985904262E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999745216205099	WITHOUT_CLASSIFICATION	2.5478379490049223E-5	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.999994958729449	WITHOUT_CLASSIFICATION	5.041270550985758E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999942682232499	WITHOUT_CLASSIFICATION	5.731776750011938E-6	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999835485772958	WITHOUT_CLASSIFICATION	1.645142270422278E-5	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999956104076038	WITHOUT_CLASSIFICATION	4.389592396246056E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999733588140974	WITHOUT_CLASSIFICATION	2.664118590250918E-5	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999794919971879	WITHOUT_CLASSIFICATION	2.050800281200953E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999899589637826	WITHOUT_CLASSIFICATION	1.0041036217319534E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999436843747337	WITHOUT_CLASSIFICATION	5.631562526621875E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9968025889981045	WITHOUT_CLASSIFICATION	0.0031974110018954957	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9951926837617455	WITHOUT_CLASSIFICATION	0.004807316238254473	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999745216205099	WITHOUT_CLASSIFICATION	2.5478379490049223E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999990951258504	WITHOUT_CLASSIFICATION	9.048741496421848E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999984489194562	WITHOUT_CLASSIFICATION	1.5510805437604322E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999993202851002	WITHOUT_CLASSIFICATION	6.797148999276148E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999804011828006	WITHOUT_CLASSIFICATION	1.9598817199367943E-5	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999903522708257	WITHOUT_CLASSIFICATION	9.647729174306863E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999939445557078	WITHOUT_CLASSIFICATION	6.055444292118441E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999949438293599	WITHOUT_CLASSIFICATION	5.056170640032046E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.999623207340804	WITHOUT_CLASSIFICATION	3.7679265919599416E-4	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999857999841346	WITHOUT_CLASSIFICATION	1.420001586529833E-5	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.999995149642069	WITHOUT_CLASSIFICATION	4.850357930971691E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999903036617971	WITHOUT_CLASSIFICATION	9.696338202815135E-6	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.999946097726326	WITHOUT_CLASSIFICATION	5.390227367386894E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999436843747337	WITHOUT_CLASSIFICATION	5.631562526621875E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999990951258504	WITHOUT_CLASSIFICATION	9.048741496421848E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.999623207340804	WITHOUT_CLASSIFICATION	3.7679265919599416E-4	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999871183760797	WITHOUT_CLASSIFICATION	1.2881623920284567E-5	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999403366854684	WITHOUT_CLASSIFICATION	5.9663314531435166E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999620310562799	WITHOUT_CLASSIFICATION	3.796894372009985E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999801597484881	WITHOUT_CLASSIFICATION	1.9840251511965656E-5	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9995298733347846	WITHOUT_CLASSIFICATION	4.701266652153976E-4	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999888913841043	WITHOUT_CLASSIFICATION	1.1108615895786949E-5	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999645790709136	WITHOUT_CLASSIFICATION	3.542092908638579E-5	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999953677778306	WITHOUT_CLASSIFICATION	4.632222169396892E-6	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999988103153047	WITHOUT_CLASSIFICATION	1.18968469529866E-6	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999964778478592	WITHOUT_CLASSIFICATION	3.5221521408757003E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999971738268078	WITHOUT_CLASSIFICATION	2.8261731922730507E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999986735364743	WITHOUT_CLASSIFICATION	1.3264635257393603E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.999993774342453	WITHOUT_CLASSIFICATION	6.2256575469839816E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999847707977128	WITHOUT_CLASSIFICATION	1.522920228737798E-5	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999787536429137	WITHOUT_CLASSIFICATION	2.124635708634945E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999958665485777	WITHOUT_CLASSIFICATION	4.1334514222846095E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.999982746713067	WITHOUT_CLASSIFICATION	1.7253286933001856E-5	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999540764956	WITHOUT_CLASSIFICATION	4.592350438412181E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9999933053638507	WITHOUT_CLASSIFICATION	6.694636149268114E-6	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999989079866555	WITHOUT_CLASSIFICATION	1.0920133445860496E-6	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999986694670617	WITHOUT_CLASSIFICATION	1.3305329383480457E-6	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9991488194756661	WITHOUT_CLASSIFICATION	8.511805243339748E-4	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999992490697797	WITHOUT_CLASSIFICATION	7.509302203104749E-7	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999987385859325	WITHOUT_CLASSIFICATION	1.2614140674373921E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999457258635556	WITHOUT_CLASSIFICATION	5.427413644448063E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999997776406393	WITHOUT_CLASSIFICATION	2.223593607591552E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999964289450778	WITHOUT_CLASSIFICATION	3.571054922298421E-6	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999975393479896	WITHOUT_CLASSIFICATION	2.4606520103080517E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999992536756489	WITHOUT_CLASSIFICATION	7.463243511473626E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999971214411388	WITHOUT_CLASSIFICATION	2.8785588612623752E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999963669422701	WITHOUT_CLASSIFICATION	3.633057729925122E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999983397397337	WITHOUT_CLASSIFICATION	1.6602602662408397E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999898982910476	WITHOUT_CLASSIFICATION	1.0101708952428461E-5	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999998875792019	WITHOUT_CLASSIFICATION	1.1242079801072845E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999982907636243	WITHOUT_CLASSIFICATION	1.7092363756120184E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999984123859387	WITHOUT_CLASSIFICATION	1.5876140612724877E-6	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999836179605004	WITHOUT_CLASSIFICATION	1.6382039499577413E-5	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999741792682506	WITHOUT_CLASSIFICATION	2.5820731749327998E-5	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999953135512929	WITHOUT_CLASSIFICATION	4.686448707080079E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999387401996576	WITHOUT_CLASSIFICATION	6.125980034240296E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999075904059351	WITHOUT_CLASSIFICATION	9.240959406482498E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999075904059351	WITHOUT_CLASSIFICATION	9.240959406482498E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999891735230687	WITHOUT_CLASSIFICATION	1.0826476931348824E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999891735230687	WITHOUT_CLASSIFICATION	1.0826476931348824E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9986890984337027	WITHOUT_CLASSIFICATION	0.0013109015662973432	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999996463213245	WITHOUT_CLASSIFICATION	3.5367867543919536E-7	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999999771038315	WITHOUT_CLASSIFICATION	2.289616853387511E-8	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999992946569561	WITHOUT_CLASSIFICATION	7.05343043831311E-7	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999962638557374	WITHOUT_CLASSIFICATION	3.736144262754167E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999878338914049	WITHOUT_CLASSIFICATION	1.2166108595053089E-5	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999999353700816	WITHOUT_CLASSIFICATION	6.462991842168344E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999064507173	WITHOUT_CLASSIFICATION	9.354928270321781E-8	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999948788978235	WITHOUT_CLASSIFICATION	5.121102176561822E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999994987072621	WITHOUT_CLASSIFICATION	5.012927379001559E-7	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999997277488668	WITHOUT_CLASSIFICATION	2.7225113312513197E-7	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999997682710329	WITHOUT_CLASSIFICATION	2.3172896707448277E-7	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999256381589001	WITHOUT_CLASSIFICATION	7.43618410998718E-5	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999949830352985	WITHOUT_CLASSIFICATION	5.016964701367639E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999993806732396	WITHOUT_CLASSIFICATION	6.193267603434215E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994393812247	WITHOUT_CLASSIFICATION	5.606187752240676E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988871829522	WITHOUT_CLASSIFICATION	1.1128170478122922E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999492575814	WITHOUT_CLASSIFICATION	5.074241865647194E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986355521254	WITHOUT_CLASSIFICATION	1.3644478744969625E-6	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.999999978360528	WITHOUT_CLASSIFICATION	2.1639471918413572E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999955659684546	WITHOUT_CLASSIFICATION	4.434031545362966E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998905721955	WITHOUT_CLASSIFICATION	1.0942780438368911E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993667296977	WITHOUT_CLASSIFICATION	6.332703024220142E-7	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.999999845155582	WITHOUT_CLASSIFICATION	1.5484441799400554E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999990934561165	WITHOUT_CLASSIFICATION	9.065438835695888E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999990934561165	WITHOUT_CLASSIFICATION	9.065438835695888E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999955901427071	WITHOUT_CLASSIFICATION	4.409857292979738E-6	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999999674764849	WITHOUT_CLASSIFICATION	3.252351512099741E-8	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999989014465115	WITHOUT_CLASSIFICATION	1.0985534885455485E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999990330192423	WITHOUT_CLASSIFICATION	9.66980757673783E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999929664232665	WITHOUT_CLASSIFICATION	7.033576733533406E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999763846630859	WITHOUT_CLASSIFICATION	2.3615336914049336E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999994349131239	WITHOUT_CLASSIFICATION	5.650868760693247E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999598591409	WITHOUT_CLASSIFICATION	4.014085912151235E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999994349131239	WITHOUT_CLASSIFICATION	5.650868760693247E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999955277338499	WITHOUT_CLASSIFICATION	4.472266150064158E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999989787642598	WITHOUT_CLASSIFICATION	1.0212357402186593E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999598591409	WITHOUT_CLASSIFICATION	4.014085912151235E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999576386186322	WITHOUT_CLASSIFICATION	4.236138136781424E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999986939080301	WITHOUT_CLASSIFICATION	1.3060919700171835E-6	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999992303920019	WITHOUT_CLASSIFICATION	7.696079981330019E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999922886109847	WITHOUT_CLASSIFICATION	7.711389015304508E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9998010428501426	WITHOUT_CLASSIFICATION	1.9895714985736609E-4	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999154258646353	WITHOUT_CLASSIFICATION	8.457413536461088E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999797363879209	WITHOUT_CLASSIFICATION	2.026361207909335E-5	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999789601593193	WITHOUT_CLASSIFICATION	2.103984068067817E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999994817374233	WITHOUT_CLASSIFICATION	5.182625766951958E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999998692471495	WITHOUT_CLASSIFICATION	1.3075285047618542E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999998692471495	WITHOUT_CLASSIFICATION	1.3075285047618542E-7	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999988158344344	WITHOUT_CLASSIFICATION	1.1841655655899546E-6	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999987009630986	WITHOUT_CLASSIFICATION	1.2990369013887565E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999499898412971	WITHOUT_CLASSIFICATION	5.001015870273024E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999499898412971	WITHOUT_CLASSIFICATION	5.001015870273024E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999499898412971	WITHOUT_CLASSIFICATION	5.001015870273024E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999813377611007	WITHOUT_CLASSIFICATION	1.8662238899273145E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999813377611007	WITHOUT_CLASSIFICATION	1.8662238899273145E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999813377611007	WITHOUT_CLASSIFICATION	1.8662238899273145E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999961598824748	WITHOUT_CLASSIFICATION	3.840117525203362E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999961598824748	WITHOUT_CLASSIFICATION	3.840117525203362E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999961598824748	WITHOUT_CLASSIFICATION	3.840117525203362E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999863082030997	WITHOUT_CLASSIFICATION	1.3691796900350413E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999863082030997	WITHOUT_CLASSIFICATION	1.3691796900350413E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999976096283699	WITHOUT_CLASSIFICATION	2.3903716301490196E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999976096283699	WITHOUT_CLASSIFICATION	2.3903716301490196E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998275406462558	WITHOUT_CLASSIFICATION	1.7245935374412177E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999992113774199	WITHOUT_CLASSIFICATION	7.886225801889015E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999992113774199	WITHOUT_CLASSIFICATION	7.886225801889015E-7	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999980302105058	WITHOUT_CLASSIFICATION	1.9697894942069024E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999141755592496	WITHOUT_CLASSIFICATION	8.582444075043453E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999457258635556	WITHOUT_CLASSIFICATION	5.427413644448063E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999996463213245	WITHOUT_CLASSIFICATION	3.5367867543919536E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999499898412971	WITHOUT_CLASSIFICATION	5.001015870273024E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999813377611007	WITHOUT_CLASSIFICATION	1.8662238899273145E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999813377611007	WITHOUT_CLASSIFICATION	1.8662238899273145E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999961598824748	WITHOUT_CLASSIFICATION	3.840117525203362E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999961598824748	WITHOUT_CLASSIFICATION	3.840117525203362E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999863082030997	WITHOUT_CLASSIFICATION	1.3691796900350413E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999863082030997	WITHOUT_CLASSIFICATION	1.3691796900350413E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999986939080301	WITHOUT_CLASSIFICATION	1.3060919700171835E-6	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999681128386185	WITHOUT_CLASSIFICATION	3.1887161381533064E-5	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999995035798944	WITHOUT_CLASSIFICATION	4.964201056590563E-7	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999974158556284	WITHOUT_CLASSIFICATION	2.584144371625074E-6	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999937755856966	WITHOUT_CLASSIFICATION	6.224414303423948E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999987807403989	WITHOUT_CLASSIFICATION	1.2192596011114467E-6	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9998829611107155	WITHOUT_CLASSIFICATION	1.1703888928448093E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997545588826	WITHOUT_CLASSIFICATION	2.4544111736344636E-7	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999995008439373	WITHOUT_CLASSIFICATION	4.991560626820188E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997899692138398	WITHOUT_CLASSIFICATION	2.1003078616025906E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999993741335761	WITHOUT_CLASSIFICATION	6.25866423885646E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9999957293964683	WITHOUT_CLASSIFICATION	4.270603531671869E-6	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999985304417182	WITHOUT_CLASSIFICATION	1.469558281835202E-6	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999985304417182	WITHOUT_CLASSIFICATION	1.469558281835202E-6	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999992767444779	WITHOUT_CLASSIFICATION	7.232555222517767E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999992767444779	WITHOUT_CLASSIFICATION	7.232555222517767E-7	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999508605161137	WITHOUT_CLASSIFICATION	4.9139483886181874E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999508605161137	WITHOUT_CLASSIFICATION	4.9139483886181874E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999986939080301	WITHOUT_CLASSIFICATION	1.3060919700171835E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999980302105058	WITHOUT_CLASSIFICATION	1.9697894942069024E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999141755592496	WITHOUT_CLASSIFICATION	8.582444075043453E-5	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.999932479556279	WITHOUT_CLASSIFICATION	6.752044372109064E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999994987072621	WITHOUT_CLASSIFICATION	5.012927379001559E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999997776406393	WITHOUT_CLASSIFICATION	2.223593607591552E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999964289450778	WITHOUT_CLASSIFICATION	3.571054922298421E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999982907636243	WITHOUT_CLASSIFICATION	1.7092363756120184E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999982907636243	WITHOUT_CLASSIFICATION	1.7092363756120184E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999984123859387	WITHOUT_CLASSIFICATION	1.5876140612724877E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999984123859387	WITHOUT_CLASSIFICATION	1.5876140612724877E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999997463808766	WITHOUT_CLASSIFICATION	2.5361912335212156E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999997552163304	WITHOUT_CLASSIFICATION	2.447836695974365E-7	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999998267687816	WITHOUT_CLASSIFICATION	1.7323121839783917E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999864476518763	WITHOUT_CLASSIFICATION	1.3552348123673772E-5	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999864476518763	WITHOUT_CLASSIFICATION	1.3552348123673772E-5	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.999999939092785	WITHOUT_CLASSIFICATION	6.09072150449072E-8	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999999180866574	WITHOUT_CLASSIFICATION	8.19133425198627E-8	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999960638260749	WITHOUT_CLASSIFICATION	3.936173925067232E-6	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999724927046253	WITHOUT_CLASSIFICATION	2.7507295374657204E-5	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999940702244968	WITHOUT_CLASSIFICATION	5.929775503264591E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999808764039811	WITHOUT_CLASSIFICATION	1.9123596018831162E-5	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999934089963388	WITHOUT_CLASSIFICATION	6.591003661186604E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999934089963388	WITHOUT_CLASSIFICATION	6.591003661186604E-6	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999754607139594	WITHOUT_CLASSIFICATION	2.453928604062949E-5	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999957539161879	WITHOUT_CLASSIFICATION	4.246083812008851E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999997463808766	WITHOUT_CLASSIFICATION	2.5361912335212156E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999997463808766	WITHOUT_CLASSIFICATION	2.5361912335212156E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9983725422957781	WITHOUT_CLASSIFICATION	0.001627457704221993	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999864476518763	WITHOUT_CLASSIFICATION	1.3552348123673772E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999992787085619	WITHOUT_CLASSIFICATION	7.212914381567573E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999998174443672	WITHOUT_CLASSIFICATION	1.8255563274649027E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999998174443672	WITHOUT_CLASSIFICATION	1.8255563274649027E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.999999939092785	WITHOUT_CLASSIFICATION	6.09072150449072E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999724927046253	WITHOUT_CLASSIFICATION	2.7507295374657204E-5	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999999478566797	WITHOUT_CLASSIFICATION	5.2143320348097535E-8	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999996985558622	WITHOUT_CLASSIFICATION	3.0144413780005436E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999766039645775	WITHOUT_CLASSIFICATION	2.3396035422426976E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999998474021815	WITHOUT_CLASSIFICATION	1.5259781847179296E-7	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999992924001719	WITHOUT_CLASSIFICATION	7.07599827939576E-7	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999955256160689	WITHOUT_CLASSIFICATION	4.474383931091776E-6	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999795028889615	WITHOUT_CLASSIFICATION	2.049711103850772E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9979566870380862	WITHOUT_CLASSIFICATION	0.0020433129619137408	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999999701422028	WITHOUT_CLASSIFICATION	2.9857797207877324E-8	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999993317828851	WITHOUT_CLASSIFICATION	6.682171149443896E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999954085252725	WITHOUT_CLASSIFICATION	4.591474727488991E-6	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999979387479703	WITHOUT_CLASSIFICATION	2.0612520297407744E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999987084352967	WITHOUT_CLASSIFICATION	1.2915647033159429E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.999999996430607	WITHOUT_CLASSIFICATION	3.5693928988321346E-9	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999998006701054	WITHOUT_CLASSIFICATION	1.9932989457061932E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999954848383029	WITHOUT_CLASSIFICATION	4.515161697115904E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999999963014021	WITHOUT_CLASSIFICATION	3.6985977779156563E-9	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999109155192	WITHOUT_CLASSIFICATION	8.908448086619623E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999998810712791	WITHOUT_CLASSIFICATION	1.1892872088892652E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999992751970105	WITHOUT_CLASSIFICATION	7.24802989487825E-7	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999976997206259	WITHOUT_CLASSIFICATION	2.300279374146857E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999986162489297	WITHOUT_CLASSIFICATION	1.3837510702826822E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999740527478678	WITHOUT_CLASSIFICATION	2.5947252132295193E-5	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999740527478678	WITHOUT_CLASSIFICATION	2.5947252132295193E-5	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999740527478678	WITHOUT_CLASSIFICATION	2.5947252132295193E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999988012767768	WITHOUT_CLASSIFICATION	1.1987232231954852E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999988012767768	WITHOUT_CLASSIFICATION	1.1987232231954852E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999999726440117	WITHOUT_CLASSIFICATION	2.735598830947572E-8	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.999995621318521	WITHOUT_CLASSIFICATION	4.378681478981923E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999993894538642	WITHOUT_CLASSIFICATION	6.1054613577041E-7	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999992517688036	WITHOUT_CLASSIFICATION	7.482311964706159E-7	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999996641065115	WITHOUT_CLASSIFICATION	3.358934883929465E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999980467096307	WITHOUT_CLASSIFICATION	1.95329036938159E-6	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9998683257187384	WITHOUT_CLASSIFICATION	1.3167428126159033E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999946634139855	WITHOUT_CLASSIFICATION	5.336586014468373E-6	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.999983714078482	WITHOUT_CLASSIFICATION	1.6285921518059903E-5	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999900671994395	WITHOUT_CLASSIFICATION	9.93280056060039E-6	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999804688854015	WITHOUT_CLASSIFICATION	1.9531114598501204E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999934134879418	WITHOUT_CLASSIFICATION	6.586512058250141E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999934134879418	WITHOUT_CLASSIFICATION	6.586512058250141E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999176968956	WITHOUT_CLASSIFICATION	8.23031044145195E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9999302168769857	WITHOUT_CLASSIFICATION	6.978312301429126E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999625297152	WITHOUT_CLASSIFICATION	3.747028482451919E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995255061845	WITHOUT_CLASSIFICATION	4.7449381549689476E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995255061845	WITHOUT_CLASSIFICATION	4.7449381549689476E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995255061845	WITHOUT_CLASSIFICATION	4.7449381549689476E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999889165226	WITHOUT_CLASSIFICATION	1.1083477399387247E-8	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999866407029	WITHOUT_CLASSIFICATION	1.3359297004655579E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999982908094	WITHOUT_CLASSIFICATION	1.7091905224401477E-9	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999981063573489	WITHOUT_CLASSIFICATION	1.8936426511437375E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999796993145987	WITHOUT_CLASSIFICATION	2.030068540126087E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999997739769402	WITHOUT_CLASSIFICATION	2.26023059856031E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999979387479703	WITHOUT_CLASSIFICATION	2.0612520297407744E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999987084352967	WITHOUT_CLASSIFICATION	1.2915647033159429E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999109155192	WITHOUT_CLASSIFICATION	8.908448086619623E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999998810712791	WITHOUT_CLASSIFICATION	1.1892872088892652E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999992751970105	WITHOUT_CLASSIFICATION	7.24802989487825E-7	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999976997206259	WITHOUT_CLASSIFICATION	2.300279374146857E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999986162489297	WITHOUT_CLASSIFICATION	1.3837510702826822E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995255061845	WITHOUT_CLASSIFICATION	4.7449381549689476E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999975418593211	WITHOUT_CLASSIFICATION	2.4581406789347515E-6	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999923400585	WITHOUT_CLASSIFICATION	7.659941484304415E-9	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999997572200877	WITHOUT_CLASSIFICATION	2.427799122860124E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9772047944458631	WITHOUT_CLASSIFICATION	0.022795205554136957	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9999915546353021	WITHOUT_CLASSIFICATION	8.445364697968876E-6	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999985786760005	WITHOUT_CLASSIFICATION	1.4213239995407132E-6	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999991765478731	WITHOUT_CLASSIFICATION	8.234521268753605E-7	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999998841163273	WITHOUT_CLASSIFICATION	1.1588367262492915E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999391228999076	WITHOUT_CLASSIFICATION	6.087710009239848E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999391228999076	WITHOUT_CLASSIFICATION	6.087710009239848E-5	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999988828083715	WITHOUT_CLASSIFICATION	1.117191628521737E-6	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999988828083715	WITHOUT_CLASSIFICATION	1.117191628521737E-6	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999999366673967	WITHOUT_CLASSIFICATION	6.333260330508457E-8	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999870032548	WITHOUT_CLASSIFICATION	1.2996745272202698E-8	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999828392977	WITHOUT_CLASSIFICATION	1.716070238276249E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999996886308621	WITHOUT_CLASSIFICATION	3.113691378950146E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999996886308621	WITHOUT_CLASSIFICATION	3.113691378950146E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999956591605613	WITHOUT_CLASSIFICATION	4.340839438627253E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999940134036595	WITHOUT_CLASSIFICATION	5.986596340506664E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999976346385	WITHOUT_CLASSIFICATION	2.3653615785283235E-9	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.999999996430607	WITHOUT_CLASSIFICATION	3.5693928988321346E-9	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.999996886308621	WITHOUT_CLASSIFICATION	3.113691378950146E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999996394567898	WITHOUT_CLASSIFICATION	3.605432102626361E-7	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999994776037237	WITHOUT_CLASSIFICATION	5.223962762899282E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999994520310834	WITHOUT_CLASSIFICATION	5.479689166986961E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999998108563326	WITHOUT_CLASSIFICATION	1.8914366751838334E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999856871469317	WITHOUT_CLASSIFICATION	1.4312853068431403E-5	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999731334437209	WITHOUT_CLASSIFICATION	2.686655627910287E-5	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999964084981596	WITHOUT_CLASSIFICATION	3.591501840376343E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999966650820459	WITHOUT_CLASSIFICATION	3.3349179541257604E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999801416994655	WITHOUT_CLASSIFICATION	1.9858300534495417E-5	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999801416994655	WITHOUT_CLASSIFICATION	1.9858300534495417E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9998709932756537	WITHOUT_CLASSIFICATION	1.2900672434637626E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9998709932756537	WITHOUT_CLASSIFICATION	1.2900672434637626E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9998709932756537	WITHOUT_CLASSIFICATION	1.2900672434637626E-4	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999633652938783	WITHOUT_CLASSIFICATION	3.6634706121706586E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.999698059578221	WITHOUT_CLASSIFICATION	3.019404217789178E-4	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.999698059578221	WITHOUT_CLASSIFICATION	3.019404217789178E-4	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999753685781495	WITHOUT_CLASSIFICATION	2.4631421850472518E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999753685781495	WITHOUT_CLASSIFICATION	2.4631421850472518E-5	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999763779799045	WITHOUT_CLASSIFICATION	2.3622020095467803E-5	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999916858954861	WITHOUT_CLASSIFICATION	8.314104513789677E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999906753595416	WITHOUT_CLASSIFICATION	9.3246404584415E-6	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999987524289966	WITHOUT_CLASSIFICATION	1.2475710034436556E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999721223497329	WITHOUT_CLASSIFICATION	2.787765026711307E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9981124145911167	WITHOUT_CLASSIFICATION	0.001887585408883402	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999734116975529	WITHOUT_CLASSIFICATION	2.658830244710907E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999650959663435	WITHOUT_CLASSIFICATION	3.490403365645815E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994077815718	WITHOUT_CLASSIFICATION	5.922184282626331E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999892721090229	WITHOUT_CLASSIFICATION	1.0727890977242178E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999994986168865	WITHOUT_CLASSIFICATION	5.013831134797061E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999919428994506	WITHOUT_CLASSIFICATION	8.057100549362882E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998595640304	WITHOUT_CLASSIFICATION	1.4043596950570492E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999961778743	WITHOUT_CLASSIFICATION	3.822125695633131E-9	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9999905806623763	WITHOUT_CLASSIFICATION	9.419337623721153E-6	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999994543065643	WITHOUT_CLASSIFICATION	5.456934356537347E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999995823349169	WITHOUT_CLASSIFICATION	4.1766508307852235E-7	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999947042519073	WITHOUT_CLASSIFICATION	5.295748092652816E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.999999458695073	WITHOUT_CLASSIFICATION	5.41304927008968E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.999994632126363	WITHOUT_CLASSIFICATION	5.367873637103459E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999754015554866	WITHOUT_CLASSIFICATION	2.4598444513521807E-5	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999994371115407	WITHOUT_CLASSIFICATION	5.628884592411603E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999990904409498	WITHOUT_CLASSIFICATION	9.095590502213053E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999997074347906	WITHOUT_CLASSIFICATION	2.925652094372358E-7	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999986422580835	WITHOUT_CLASSIFICATION	1.3577419164167524E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999994781286969	WITHOUT_CLASSIFICATION	5.218713030419813E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999892507368809	WITHOUT_CLASSIFICATION	1.0749263118988074E-5	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999887869928208	WITHOUT_CLASSIFICATION	1.1213007179213993E-5	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999998278574982	WITHOUT_CLASSIFICATION	1.7214250177588332E-7	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999986369632451	WITHOUT_CLASSIFICATION	1.3630367549704662E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999705953377427	WITHOUT_CLASSIFICATION	2.9404662257326464E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999774446433876	WITHOUT_CLASSIFICATION	2.255535661246075E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999991754427323	WITHOUT_CLASSIFICATION	8.245572677985696E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999908030286336	WITHOUT_CLASSIFICATION	9.196971366302884E-6	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999996418819412	WITHOUT_CLASSIFICATION	3.5811805879807707E-7	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999873775143326	WITHOUT_CLASSIFICATION	1.2622485667459947E-5	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999995074635367	WITHOUT_CLASSIFICATION	4.925364633379844E-7	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999986086666515	WITHOUT_CLASSIFICATION	1.3913333485148673E-6	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999997779076228	WITHOUT_CLASSIFICATION	2.2209237706181617E-7	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999875859691134	WITHOUT_CLASSIFICATION	1.2414030886690385E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999987325214622	WITHOUT_CLASSIFICATION	1.2674785378345541E-6	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999909695990247	WITHOUT_CLASSIFICATION	9.030400975373268E-6	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999992316690395	WITHOUT_CLASSIFICATION	7.683309605660814E-7	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.999998231695774	WITHOUT_CLASSIFICATION	1.7683042260831807E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.99892823075286	WITHOUT_CLASSIFICATION	0.0010717692471400042	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999902196225753	WITHOUT_CLASSIFICATION	9.780377424596336E-6	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999263900674717	WITHOUT_CLASSIFICATION	7.36099325283141E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999994790908253	WITHOUT_CLASSIFICATION	5.209091748021643E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999976788103306	WITHOUT_CLASSIFICATION	2.3211896694673958E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9961832752896885	WITHOUT_CLASSIFICATION	0.0038167247103115145	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999988824487945	WITHOUT_CLASSIFICATION	1.117551205424889E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999966249276	WITHOUT_CLASSIFICATION	3.3750724254985314E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999937409813827	WITHOUT_CLASSIFICATION	6.25901861724682E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999937409813827	WITHOUT_CLASSIFICATION	6.25901861724682E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999965536809365	WITHOUT_CLASSIFICATION	3.446319063365196E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999986045923852	WITHOUT_CLASSIFICATION	1.395407614722308E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999875000327795	WITHOUT_CLASSIFICATION	1.2499967220432493E-5	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999995907535278	WITHOUT_CLASSIFICATION	4.0924647215481613E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999395424647	WITHOUT_CLASSIFICATION	6.045753528920115E-8	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999920603276592	WITHOUT_CLASSIFICATION	7.939672340764043E-6	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999413919455101	WITHOUT_CLASSIFICATION	5.86080544897622E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9998775464436667	WITHOUT_CLASSIFICATION	1.2245355633344992E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999703002148	WITHOUT_CLASSIFICATION	2.969978519340325E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999721223497329	WITHOUT_CLASSIFICATION	2.787765026711307E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999703002148	WITHOUT_CLASSIFICATION	2.969978519340325E-8	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9998222247496003	WITHOUT_CLASSIFICATION	1.777752503997232E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999997179994812	WITHOUT_CLASSIFICATION	2.8200051872692244E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999995589131306	WITHOUT_CLASSIFICATION	4.410868693538162E-7	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.999988243258961	WITHOUT_CLASSIFICATION	1.1756741038957028E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999864360766353	WITHOUT_CLASSIFICATION	1.356392336479723E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997298633322	WITHOUT_CLASSIFICATION	2.701366677794869E-7	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.999999847733414	WITHOUT_CLASSIFICATION	1.522665861159778E-7	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999373391067	WITHOUT_CLASSIFICATION	6.266089316525638E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999984198641401	WITHOUT_CLASSIFICATION	1.5801358599267822E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999995823349169	WITHOUT_CLASSIFICATION	4.1766508307852235E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999997340204551	WITHOUT_CLASSIFICATION	2.659795449191877E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999966249276	WITHOUT_CLASSIFICATION	3.3750724254985314E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999927650896676	WITHOUT_CLASSIFICATION	7.234910332379997E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997298633322	WITHOUT_CLASSIFICATION	2.701366677794869E-7	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.999999847733414	WITHOUT_CLASSIFICATION	1.522665861159778E-7	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999373391067	WITHOUT_CLASSIFICATION	6.266089316525638E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999986421563899	WITHOUT_CLASSIFICATION	1.3578436100554067E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999996170552173	WITHOUT_CLASSIFICATION	3.8294478275388383E-7	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.999999407006946	WITHOUT_CLASSIFICATION	5.929930539692151E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999207720602877	WITHOUT_CLASSIFICATION	7.922793971220623E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999999080158956	WITHOUT_CLASSIFICATION	9.198410449481017E-8	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999938872085394	WITHOUT_CLASSIFICATION	6.112791460645104E-6	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9999961125024192	WITHOUT_CLASSIFICATION	3.887497580929929E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999991866763713	WITHOUT_CLASSIFICATION	8.133236285969238E-7	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9981124145911167	WITHOUT_CLASSIFICATION	0.001887585408883402	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994077815718	WITHOUT_CLASSIFICATION	5.922184282626331E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994077815718	WITHOUT_CLASSIFICATION	5.922184282626331E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999981992943155	WITHOUT_CLASSIFICATION	1.8007056844316137E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999892721090229	WITHOUT_CLASSIFICATION	1.0727890977242178E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999994986168865	WITHOUT_CLASSIFICATION	5.013831134797061E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999919428994506	WITHOUT_CLASSIFICATION	8.057100549362882E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998595640304	WITHOUT_CLASSIFICATION	1.4043596950570492E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999988824487945	WITHOUT_CLASSIFICATION	1.117551205424889E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999966249276	WITHOUT_CLASSIFICATION	3.3750724254985314E-9	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999986045923852	WITHOUT_CLASSIFICATION	1.395407614722308E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999999499096464	WITHOUT_CLASSIFICATION	5.009035362569325E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999998728868326	WITHOUT_CLASSIFICATION	1.2711316743630038E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999997995249825	WITHOUT_CLASSIFICATION	2.0047501744304017E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.999972533475127	WITHOUT_CLASSIFICATION	2.7466524872936236E-5	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999909944616644	WITHOUT_CLASSIFICATION	9.005538335489336E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999908682263683	WITHOUT_CLASSIFICATION	9.13177363165464E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999907123663262	WITHOUT_CLASSIFICATION	9.287633673836777E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999907123663262	WITHOUT_CLASSIFICATION	9.287633673836777E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999964734398622	WITHOUT_CLASSIFICATION	3.526560137705368E-6	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999986524284363	WITHOUT_CLASSIFICATION	1.3475715636546534E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999995096797738	WITHOUT_CLASSIFICATION	4.903202263011364E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999873243790981	WITHOUT_CLASSIFICATION	1.2675620901792701E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999981992943155	WITHOUT_CLASSIFICATION	1.8007056844316137E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999919428994506	WITHOUT_CLASSIFICATION	8.057100549362882E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998595640304	WITHOUT_CLASSIFICATION	1.4043596950570492E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999961778743	WITHOUT_CLASSIFICATION	3.822125695633131E-9	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999995823349169	WITHOUT_CLASSIFICATION	4.1766508307852235E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999988824487945	WITHOUT_CLASSIFICATION	1.117551205424889E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999966249276	WITHOUT_CLASSIFICATION	3.3750724254985314E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999703002148	WITHOUT_CLASSIFICATION	2.969978519340325E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999998728868326	WITHOUT_CLASSIFICATION	1.2711316743630038E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999550687971845	WITHOUT_CLASSIFICATION	4.493120281554009E-5	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999550687971845	WITHOUT_CLASSIFICATION	4.493120281554009E-5	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9998047459609493	WITHOUT_CLASSIFICATION	1.9525403905071355E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999816560862798	WITHOUT_CLASSIFICATION	1.8343913720225767E-5	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999920876497824	WITHOUT_CLASSIFICATION	7.912350217475667E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999998409441017	WITHOUT_CLASSIFICATION	1.59055898336642E-7	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999706773249	WITHOUT_CLASSIFICATION	2.9322675023621184E-8	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999706773249	WITHOUT_CLASSIFICATION	2.9322675023621184E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999376976485	WITHOUT_CLASSIFICATION	6.230235154247992E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999376976485	WITHOUT_CLASSIFICATION	6.230235154247992E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999608288791	WITHOUT_CLASSIFICATION	3.917112090338125E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999608288791	WITHOUT_CLASSIFICATION	3.917112090338125E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999608288791	WITHOUT_CLASSIFICATION	3.917112090338125E-8	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999969318218807	WITHOUT_CLASSIFICATION	3.0681781193775807E-6	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983690600507	WITHOUT_CLASSIFICATION	1.6309399493050186E-6	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999699732929	WITHOUT_CLASSIFICATION	3.002670711269807E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999975856207349	WITHOUT_CLASSIFICATION	2.4143792649484527E-6	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999936896364909	WITHOUT_CLASSIFICATION	6.310363509086905E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999721223497329	WITHOUT_CLASSIFICATION	2.787765026711307E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9981124145911167	WITHOUT_CLASSIFICATION	0.001887585408883402	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994077815718	WITHOUT_CLASSIFICATION	5.922184282626331E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999892721090229	WITHOUT_CLASSIFICATION	1.0727890977242178E-5	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999754015554866	WITHOUT_CLASSIFICATION	2.4598444513521807E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999988824487945	WITHOUT_CLASSIFICATION	1.117551205424889E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999207720602877	WITHOUT_CLASSIFICATION	7.922793971220623E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999873243790981	WITHOUT_CLASSIFICATION	1.2675620901792701E-5	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999996978693549	WITHOUT_CLASSIFICATION	3.021306450687567E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999794740703017	WITHOUT_CLASSIFICATION	2.05259296983595E-5	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9998623703128315	WITHOUT_CLASSIFICATION	1.3762968716843083E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999966631955316	WITHOUT_CLASSIFICATION	3.336804468451422E-6	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999996957820445	WITHOUT_CLASSIFICATION	3.0421795541273496E-7	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999920498264101	WITHOUT_CLASSIFICATION	7.950173589872584E-6	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999976032353345	WITHOUT_CLASSIFICATION	2.396764665421898E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999967736770512	WITHOUT_CLASSIFICATION	3.2263229487362573E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999997846598413	WITHOUT_CLASSIFICATION	2.1534015876826347E-7	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9999690007505322	WITHOUT_CLASSIFICATION	3.099924946779224E-5	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9998484990803905	WITHOUT_CLASSIFICATION	1.5150091960950416E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999993507756832	WITHOUT_CLASSIFICATION	6.492243168464203E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999996985558622	WITHOUT_CLASSIFICATION	3.0144413780005436E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999919428994506	WITHOUT_CLASSIFICATION	8.057100549362882E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998595640304	WITHOUT_CLASSIFICATION	1.4043596950570492E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999988824487945	WITHOUT_CLASSIFICATION	1.117551205424889E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999966249276	WITHOUT_CLASSIFICATION	3.3750724254985314E-9	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999703002148	WITHOUT_CLASSIFICATION	2.969978519340325E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999998728868326	WITHOUT_CLASSIFICATION	1.2711316743630038E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999997995249825	WITHOUT_CLASSIFICATION	2.0047501744304017E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999909944616644	WITHOUT_CLASSIFICATION	9.005538335489336E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999908682263683	WITHOUT_CLASSIFICATION	9.13177363165464E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.999999985553937	WITHOUT_CLASSIFICATION	1.4446063052241089E-8	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999997935619938	WITHOUT_CLASSIFICATION	2.064380061894163E-7	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999929331654777	WITHOUT_CLASSIFICATION	7.0668345223440516E-6	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999997401899476	WITHOUT_CLASSIFICATION	2.5981005243342E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999999841226487	WITHOUT_CLASSIFICATION	1.5877351377208368E-8	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999980406434968	WITHOUT_CLASSIFICATION	1.9593565031534672E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9999966788556878	WITHOUT_CLASSIFICATION	3.3211443122686726E-6	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999997372337267	WITHOUT_CLASSIFICATION	2.627662733671491E-7	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999854847338054	WITHOUT_CLASSIFICATION	1.4515266194619896E-5	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999574792122957	WITHOUT_CLASSIFICATION	4.252078770419966E-5	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9994059006383668	WITHOUT_CLASSIFICATION	5.940993616333052E-4	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999704436940134	WITHOUT_CLASSIFICATION	2.955630598655185E-5	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998731664802514	WITHOUT_CLASSIFICATION	1.2683351974872057E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.915555814523468	DEFECT	0.08444418547653204	WITHOUT_CLASSIFICATION
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999968664491609	WITHOUT_CLASSIFICATION	3.1335508391686028E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999994986168865	WITHOUT_CLASSIFICATION	5.013831134797061E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999965536809365	WITHOUT_CLASSIFICATION	3.446319063365196E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999986045923852	WITHOUT_CLASSIFICATION	1.395407614722308E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999908682263683	WITHOUT_CLASSIFICATION	9.13177363165464E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999994912954823	WITHOUT_CLASSIFICATION	5.087045176961955E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999971103910684	WITHOUT_CLASSIFICATION	2.8896089315153862E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999873578568398	WITHOUT_CLASSIFICATION	1.2642143160201127E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999873578568398	WITHOUT_CLASSIFICATION	1.2642143160201127E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999994931624567	WITHOUT_CLASSIFICATION	5.068375432174458E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999994931624567	WITHOUT_CLASSIFICATION	5.068375432174458E-7	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999986298628759	WITHOUT_CLASSIFICATION	1.3701371240877187E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9997835558383181	WITHOUT_CLASSIFICATION	2.1644416168192855E-4	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999993469664086	WITHOUT_CLASSIFICATION	6.530335913990945E-6	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999999011881369	WITHOUT_CLASSIFICATION	9.881186313347981E-8	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999977950688107	WITHOUT_CLASSIFICATION	2.204931189257985E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999849399764661	WITHOUT_CLASSIFICATION	1.506002353388894E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999997979973334	WITHOUT_CLASSIFICATION	2.0200266650589074E-7	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.999996567846614	WITHOUT_CLASSIFICATION	3.4321533860553617E-6	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.999998154876411	WITHOUT_CLASSIFICATION	1.8451235889279773E-6	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999997641116943	WITHOUT_CLASSIFICATION	2.3588830560211263E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999730885863795	WITHOUT_CLASSIFICATION	2.6911413620633465E-5	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999931084264903	WITHOUT_CLASSIFICATION	6.8915735097746656E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999749317831894	WITHOUT_CLASSIFICATION	2.5068216810560232E-5	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999995656579936	WITHOUT_CLASSIFICATION	4.343420063612017E-7	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999949856041149	WITHOUT_CLASSIFICATION	5.014395884977257E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999996326165111	WITHOUT_CLASSIFICATION	3.6738348880356353E-7	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999983529096446	WITHOUT_CLASSIFICATION	1.6470903554119171E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999940313466648	WITHOUT_CLASSIFICATION	5.968653335229115E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999877771686488	WITHOUT_CLASSIFICATION	1.2222831351196295E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999838472765135	WITHOUT_CLASSIFICATION	1.615272348653861E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999679706171339	WITHOUT_CLASSIFICATION	3.2029382866140336E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999976925798785	WITHOUT_CLASSIFICATION	2.3074201216014774E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999985676987886	WITHOUT_CLASSIFICATION	1.432301211333655E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.99999673226449	WITHOUT_CLASSIFICATION	3.2677355099006603E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999998844734846	WITHOUT_CLASSIFICATION	1.1552651536061328E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.999999844740099	WITHOUT_CLASSIFICATION	1.5525990113131566E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998479142858	WITHOUT_CLASSIFICATION	1.520857143604832E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999978619062679	WITHOUT_CLASSIFICATION	2.1380937320887157E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999964875045095	WITHOUT_CLASSIFICATION	3.5124954904970065E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989704366123	WITHOUT_CLASSIFICATION	1.0295633877104977E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999863706267622	WITHOUT_CLASSIFICATION	1.3629373237897362E-5	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999993344260976	WITHOUT_CLASSIFICATION	6.655739024093075E-7	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999904035177626	WITHOUT_CLASSIFICATION	9.596482237415838E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999983937236318	WITHOUT_CLASSIFICATION	1.606276368283191E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.99999984784605	WITHOUT_CLASSIFICATION	1.5215395002349572E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.999998932737238	WITHOUT_CLASSIFICATION	1.0672627619972988E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999986380626432	WITHOUT_CLASSIFICATION	1.3619373566863229E-6	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999997290262403	WITHOUT_CLASSIFICATION	2.709737596064086E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999968548965943	WITHOUT_CLASSIFICATION	3.145103405638784E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999999868601942	WITHOUT_CLASSIFICATION	1.3139805791266524E-8	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999987313978266	WITHOUT_CLASSIFICATION	1.268602173353412E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999965536809365	WITHOUT_CLASSIFICATION	3.446319063365196E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999986045923852	WITHOUT_CLASSIFICATION	1.395407614722308E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999971103910684	WITHOUT_CLASSIFICATION	2.8896089315153862E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999908682263683	WITHOUT_CLASSIFICATION	9.13177363165464E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999981063573489	WITHOUT_CLASSIFICATION	1.8936426511437375E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999873578568398	WITHOUT_CLASSIFICATION	1.2642143160201127E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999954568308508	WITHOUT_CLASSIFICATION	4.543169149226769E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999994931624567	WITHOUT_CLASSIFICATION	5.068375432174458E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989704366123	WITHOUT_CLASSIFICATION	1.0295633877104977E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999863706267622	WITHOUT_CLASSIFICATION	1.3629373237897362E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999998931665955	WITHOUT_CLASSIFICATION	1.0683340450448123E-7	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999992474151164	WITHOUT_CLASSIFICATION	7.525848835404155E-7	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999988128672546	WITHOUT_CLASSIFICATION	1.1871327453970142E-6	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999996919689922	WITHOUT_CLASSIFICATION	3.080310078657704E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999796179241988	WITHOUT_CLASSIFICATION	2.0382075801274524E-5	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.999998519481202	WITHOUT_CLASSIFICATION	1.4805187979085656E-6	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999225937862899	WITHOUT_CLASSIFICATION	7.740621371009901E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999988291386493	WITHOUT_CLASSIFICATION	1.1708613506544978E-6	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999974840455604	WITHOUT_CLASSIFICATION	2.5159544396621715E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999962992984036	WITHOUT_CLASSIFICATION	3.700701596254303E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999992309153213	WITHOUT_CLASSIFICATION	7.690846786939673E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999990593946018	WITHOUT_CLASSIFICATION	9.406053982422454E-7	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999994611915722	WITHOUT_CLASSIFICATION	5.388084277788155E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999938833969463	WITHOUT_CLASSIFICATION	6.116603053814748E-6	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999962070725097	WITHOUT_CLASSIFICATION	3.7929274903461655E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.999997132666906	WITHOUT_CLASSIFICATION	2.867333094067024E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999998518661568	WITHOUT_CLASSIFICATION	1.4813384311351711E-7	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999987455712233	WITHOUT_CLASSIFICATION	1.2544287767288433E-6	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999961075128337	WITHOUT_CLASSIFICATION	3.892487166234479E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999989769227815	WITHOUT_CLASSIFICATION	1.0230772185217333E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999995823349169	WITHOUT_CLASSIFICATION	4.1766508307852235E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999997340204551	WITHOUT_CLASSIFICATION	2.659795449191877E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999966249276	WITHOUT_CLASSIFICATION	3.3750724254985314E-9	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999909944616644	WITHOUT_CLASSIFICATION	9.005538335489336E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999835741121651	WITHOUT_CLASSIFICATION	1.642588783490963E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997084269697	WITHOUT_CLASSIFICATION	2.915730302667333E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.999993063777564	WITHOUT_CLASSIFICATION	6.936222436026635E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997084269697	WITHOUT_CLASSIFICATION	2.915730302667333E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997084269697	WITHOUT_CLASSIFICATION	2.915730302667333E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999882725650061	WITHOUT_CLASSIFICATION	1.1727434993938085E-5	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999959463364727	WITHOUT_CLASSIFICATION	4.053663527349098E-6	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999998051640159	WITHOUT_CLASSIFICATION	1.9483598412807854E-7	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999998854658164	WITHOUT_CLASSIFICATION	1.1453418355634385E-7	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.999999446224153	WITHOUT_CLASSIFICATION	5.537758469126472E-7	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999968402200338	WITHOUT_CLASSIFICATION	3.1597799662454085E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.998462425738475	WITHOUT_CLASSIFICATION	0.001537574261525059	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999950372343888	WITHOUT_CLASSIFICATION	4.962765611313333E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999809540383588	WITHOUT_CLASSIFICATION	1.9045961641131093E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999996659940321	WITHOUT_CLASSIFICATION	3.3400596787513215E-7	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9983009344764916	WITHOUT_CLASSIFICATION	0.001699065523508447	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999969409996359	WITHOUT_CLASSIFICATION	3.0590003642126365E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999976343607736	WITHOUT_CLASSIFICATION	2.365639226473944E-6	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999345994809671	WITHOUT_CLASSIFICATION	6.540051903293784E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.99999957508815	WITHOUT_CLASSIFICATION	4.2491185003052696E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999994261717658	WITHOUT_CLASSIFICATION	5.738282340740205E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999995823349169	WITHOUT_CLASSIFICATION	4.1766508307852235E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999937409813827	WITHOUT_CLASSIFICATION	6.25901861724682E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999965536809365	WITHOUT_CLASSIFICATION	3.446319063365196E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999986045923852	WITHOUT_CLASSIFICATION	1.395407614722308E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999971103910684	WITHOUT_CLASSIFICATION	2.8896089315153862E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999986421563899	WITHOUT_CLASSIFICATION	1.3578436100554067E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999207720602877	WITHOUT_CLASSIFICATION	7.922793971220623E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999908682263683	WITHOUT_CLASSIFICATION	9.13177363165464E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999990641976505	WITHOUT_CLASSIFICATION	9.358023494962496E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999873578568398	WITHOUT_CLASSIFICATION	1.2642143160201127E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999873578568398	WITHOUT_CLASSIFICATION	1.2642143160201127E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999954568308508	WITHOUT_CLASSIFICATION	4.543169149226769E-6	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999999011881369	WITHOUT_CLASSIFICATION	9.881186313347981E-8	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999997979973334	WITHOUT_CLASSIFICATION	2.0200266650589074E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999796179241988	WITHOUT_CLASSIFICATION	2.0382075801274524E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999999885390565	WITHOUT_CLASSIFICATION	1.1460943503259164E-7	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999355597211932	WITHOUT_CLASSIFICATION	6.444027880680836E-5	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999983342122742	WITHOUT_CLASSIFICATION	1.6657877257764404E-6	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999988329457902	WITHOUT_CLASSIFICATION	1.167054209856331E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999958822075891	WITHOUT_CLASSIFICATION	4.1177924109285065E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999867301776857	WITHOUT_CLASSIFICATION	1.3269822314344716E-5	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999993465908237	WITHOUT_CLASSIFICATION	6.534091763614652E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999989561643432	WITHOUT_CLASSIFICATION	1.0438356568468E-6	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999989681784583	WITHOUT_CLASSIFICATION	1.03182154166347E-6	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999987446252027	WITHOUT_CLASSIFICATION	1.2553747972968614E-6	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999994977458361	WITHOUT_CLASSIFICATION	5.022541638510084E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999016509737	WITHOUT_CLASSIFICATION	9.834902627029482E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9998617378011757	WITHOUT_CLASSIFICATION	1.3826219882426285E-4	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999997289460857	WITHOUT_CLASSIFICATION	2.7105391437907964E-7	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999992407111681	WITHOUT_CLASSIFICATION	7.592888318962681E-7	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.999998177496774	WITHOUT_CLASSIFICATION	1.8225032259260724E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999994931624567	WITHOUT_CLASSIFICATION	5.068375432174458E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999994931624567	WITHOUT_CLASSIFICATION	5.068375432174458E-7	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999838472765135	WITHOUT_CLASSIFICATION	1.615272348653861E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999679706171339	WITHOUT_CLASSIFICATION	3.2029382866140336E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999985676987886	WITHOUT_CLASSIFICATION	1.432301211333655E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.99999673226449	WITHOUT_CLASSIFICATION	3.2677355099006603E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999998844734846	WITHOUT_CLASSIFICATION	1.1552651536061328E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.999999844740099	WITHOUT_CLASSIFICATION	1.5525990113131566E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998479142858	WITHOUT_CLASSIFICATION	1.520857143604832E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999978619062679	WITHOUT_CLASSIFICATION	2.1380937320887157E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999964875045095	WITHOUT_CLASSIFICATION	3.5124954904970065E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989704366123	WITHOUT_CLASSIFICATION	1.0295633877104977E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989704366123	WITHOUT_CLASSIFICATION	1.0295633877104977E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999988291386493	WITHOUT_CLASSIFICATION	1.1708613506544978E-6	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999999519765055	WITHOUT_CLASSIFICATION	4.802349449245071E-8	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999622307153063	WITHOUT_CLASSIFICATION	3.7769284693801496E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999980986150133	WITHOUT_CLASSIFICATION	1.901384986709557E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999980732557562	WITHOUT_CLASSIFICATION	1.9267442439164217E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999985398982236	WITHOUT_CLASSIFICATION	1.4601017764336814E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999958735729163	WITHOUT_CLASSIFICATION	4.126427083706304E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.999999805388192	WITHOUT_CLASSIFICATION	1.9461180803905107E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999995630778526	WITHOUT_CLASSIFICATION	4.369221473623672E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999901668998424	WITHOUT_CLASSIFICATION	9.833100157474273E-6	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9999635811797253	WITHOUT_CLASSIFICATION	3.641882027474864E-5	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999998062890781	WITHOUT_CLASSIFICATION	1.937109219527439E-7	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999124384519039	WITHOUT_CLASSIFICATION	8.756154809601788E-5	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999096395726917	WITHOUT_CLASSIFICATION	9.03604273082587E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999991352847135	WITHOUT_CLASSIFICATION	8.647152864396678E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999981992943155	WITHOUT_CLASSIFICATION	1.8007056844316137E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999892721090229	WITHOUT_CLASSIFICATION	1.0727890977242178E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999981063573489	WITHOUT_CLASSIFICATION	1.8936426511437375E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999981063573489	WITHOUT_CLASSIFICATION	1.8936426511437375E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999863706267622	WITHOUT_CLASSIFICATION	1.3629373237897362E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.99999984784605	WITHOUT_CLASSIFICATION	1.5215395002349572E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.99999984784605	WITHOUT_CLASSIFICATION	1.5215395002349572E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.999998932737238	WITHOUT_CLASSIFICATION	1.0672627619972988E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999986380626432	WITHOUT_CLASSIFICATION	1.3619373566863229E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999986380626432	WITHOUT_CLASSIFICATION	1.3619373566863229E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999796179241988	WITHOUT_CLASSIFICATION	2.0382075801274524E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999962992984036	WITHOUT_CLASSIFICATION	3.700701596254303E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999815778490168	WITHOUT_CLASSIFICATION	1.842215098318261E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.999971871854703	WITHOUT_CLASSIFICATION	2.8128145297055473E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.999971871854703	WITHOUT_CLASSIFICATION	2.8128145297055473E-5	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999994677995536	WITHOUT_CLASSIFICATION	5.322004463440044E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999998145586728	WITHOUT_CLASSIFICATION	1.8544132706948245E-7	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999993912246412	WITHOUT_CLASSIFICATION	6.087753588424273E-7	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999993822278865	WITHOUT_CLASSIFICATION	6.177721134739793E-7	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999966391396975	WITHOUT_CLASSIFICATION	3.360860302485133E-6	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.999999215716173	WITHOUT_CLASSIFICATION	7.842838268901349E-7	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999995152664517	WITHOUT_CLASSIFICATION	4.847335483407939E-7	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.999999438003633	WITHOUT_CLASSIFICATION	5.619963670765464E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999995823349169	WITHOUT_CLASSIFICATION	4.1766508307852235E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999966249276	WITHOUT_CLASSIFICATION	3.3750724254985314E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999986421563899	WITHOUT_CLASSIFICATION	1.3578436100554067E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999938872085394	WITHOUT_CLASSIFICATION	6.112791460645104E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999979686220143	WITHOUT_CLASSIFICATION	2.031377985702799E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9839855244777221	WITHOUT_CLASSIFICATION	0.016014475522277805	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999989403209618	WITHOUT_CLASSIFICATION	1.0596790382262349E-6	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999986710390268	WITHOUT_CLASSIFICATION	1.3289609732517948E-6	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999944171021504	WITHOUT_CLASSIFICATION	5.582897849615684E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999987146160932	WITHOUT_CLASSIFICATION	1.285383906801074E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999994412680061	WITHOUT_CLASSIFICATION	5.587319938782071E-7	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999984359174232	WITHOUT_CLASSIFICATION	1.564082576780005E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999989094538612	WITHOUT_CLASSIFICATION	1.0905461388647373E-6	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999994894375377	WITHOUT_CLASSIFICATION	5.105624622642926E-7	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999971447651915	WITHOUT_CLASSIFICATION	2.8552348085169872E-6	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.999999617457753	WITHOUT_CLASSIFICATION	3.825422469482726E-7	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999446908574129	WITHOUT_CLASSIFICATION	5.530914258719545E-5	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999990807468094	WITHOUT_CLASSIFICATION	9.192531906093718E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999990923294637	WITHOUT_CLASSIFICATION	9.07670536365651E-7	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999996916193911	WITHOUT_CLASSIFICATION	3.0838060899467227E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.999998201802909	WITHOUT_CLASSIFICATION	1.798197090977651E-6	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999830434969215	WITHOUT_CLASSIFICATION	1.6956503078530543E-5	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999998819667553	WITHOUT_CLASSIFICATION	1.1803324467967048E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999965500022914	WITHOUT_CLASSIFICATION	3.449997708665551E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999999670681539	WITHOUT_CLASSIFICATION	3.293184621461033E-8	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999995762739653	WITHOUT_CLASSIFICATION	4.237260347200635E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999980058481023	WITHOUT_CLASSIFICATION	1.9941518977442686E-6	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999992641992289	WITHOUT_CLASSIFICATION	7.358007711100368E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.999997476754846	WITHOUT_CLASSIFICATION	2.5232451540359806E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999997084269697	WITHOUT_CLASSIFICATION	2.915730302667333E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999830434969215	WITHOUT_CLASSIFICATION	1.6956503078530543E-5	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.999996732266528	WITHOUT_CLASSIFICATION	3.2677334721053768E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999975064059247	WITHOUT_CLASSIFICATION	2.493594075254503E-6	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.999986402871215	WITHOUT_CLASSIFICATION	1.3597128785030682E-5	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999996138782599	WITHOUT_CLASSIFICATION	3.8612174011051083E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999985179077854	WITHOUT_CLASSIFICATION	1.48209221456532E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999487186735	WITHOUT_CLASSIFICATION	5.128132646283074E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.99992058278335	WITHOUT_CLASSIFICATION	7.941721664988064E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999474742514367	WITHOUT_CLASSIFICATION	5.252574856320697E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999981753549325	WITHOUT_CLASSIFICATION	1.8246450673688754E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999928163764429	WITHOUT_CLASSIFICATION	7.183623557127945E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999994341007366	WITHOUT_CLASSIFICATION	5.658992634871859E-7	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999998998160252	WITHOUT_CLASSIFICATION	1.001839747314423E-7	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999995125238037	WITHOUT_CLASSIFICATION	4.874761962714853E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999983805717356	WITHOUT_CLASSIFICATION	1.6194282642776736E-6	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999537867243	WITHOUT_CLASSIFICATION	4.6213275626383806E-8	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999999599135984	WITHOUT_CLASSIFICATION	4.0086401624497465E-8	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999233326802981	WITHOUT_CLASSIFICATION	7.6667319701864E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999275994554553	WITHOUT_CLASSIFICATION	7.240054454472097E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.999992175786669	WITHOUT_CLASSIFICATION	7.82421333098159E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999561594160264	WITHOUT_CLASSIFICATION	4.3840583973557886E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998906257783	WITHOUT_CLASSIFICATION	1.0937422170815111E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999980245722074	WITHOUT_CLASSIFICATION	1.9754277925827673E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983137663593	WITHOUT_CLASSIFICATION	1.686233640698821E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998906257783	WITHOUT_CLASSIFICATION	1.0937422170815111E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998906257783	WITHOUT_CLASSIFICATION	1.0937422170815111E-7	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952573321226	WITHOUT_CLASSIFICATION	4.742667877404573E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999964532586975	WITHOUT_CLASSIFICATION	3.546741302645614E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999982715808704	WITHOUT_CLASSIFICATION	1.7284191296815838E-6	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999998954411221	WITHOUT_CLASSIFICATION	1.0455887785310649E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999913839045355	WITHOUT_CLASSIFICATION	8.616095464436291E-6	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999997388138174	WITHOUT_CLASSIFICATION	2.6118618255116724E-7	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999875919762209	WITHOUT_CLASSIFICATION	1.2408023779100905E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.999999871482602	WITHOUT_CLASSIFICATION	1.285173979647591E-7	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999929637911118	WITHOUT_CLASSIFICATION	7.036208888173368E-6	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999845764713128	WITHOUT_CLASSIFICATION	1.542352868715889E-5	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999782749733253	WITHOUT_CLASSIFICATION	2.1725026674774775E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999567483363104	WITHOUT_CLASSIFICATION	4.3251663689536613E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.999999194986651	WITHOUT_CLASSIFICATION	8.050133489681311E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999767496764578	WITHOUT_CLASSIFICATION	2.325032354219677E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999971832562824	WITHOUT_CLASSIFICATION	2.8167437175182903E-6	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9997948761183	WITHOUT_CLASSIFICATION	2.05123881699998E-4	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997546634903	WITHOUT_CLASSIFICATION	2.4533650959927516E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998665713113	WITHOUT_CLASSIFICATION	1.3342868869246026E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997945478148	WITHOUT_CLASSIFICATION	2.0545218523894745E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998973658406	WITHOUT_CLASSIFICATION	1.0263415938986794E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998760020673	WITHOUT_CLASSIFICATION	1.2399793274356993E-7	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997916790189	WITHOUT_CLASSIFICATION	2.0832098104447893E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983137663593	WITHOUT_CLASSIFICATION	1.686233640698821E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998665713113	WITHOUT_CLASSIFICATION	1.3342868869246026E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.999999902447349	WITHOUT_CLASSIFICATION	9.755265101479301E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996438813662	WITHOUT_CLASSIFICATION	3.5611863375516625E-7	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998221000214	WITHOUT_CLASSIFICATION	1.778999786831686E-7	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999246482225	WITHOUT_CLASSIFICATION	7.535177748036145E-8	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998657080665	WITHOUT_CLASSIFICATION	1.3429193346412325E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998945913953	WITHOUT_CLASSIFICATION	1.0540860478077092E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999116790687	WITHOUT_CLASSIFICATION	8.832093141700607E-8	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999306750166	WITHOUT_CLASSIFICATION	6.932498342532597E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999016047473	WITHOUT_CLASSIFICATION	9.839525274381362E-8	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998202103364	WITHOUT_CLASSIFICATION	1.7978966361871854E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996189886136	WITHOUT_CLASSIFICATION	3.8101138650594595E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998402237612	WITHOUT_CLASSIFICATION	1.5977623888150836E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9999965361289467	WITHOUT_CLASSIFICATION	3.463871053337405E-6	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999968249806582	WITHOUT_CLASSIFICATION	3.1750193418504984E-6	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9999913935601861	WITHOUT_CLASSIFICATION	8.606439814024606E-6	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999989805679255	WITHOUT_CLASSIFICATION	1.0194320746195508E-6	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998586221843438	WITHOUT_CLASSIFICATION	1.4137781565612195E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999901807867296	WITHOUT_CLASSIFICATION	9.819213270393149E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.999999339122383	WITHOUT_CLASSIFICATION	6.608776169802416E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.999997863363584	WITHOUT_CLASSIFICATION	2.136636416110344E-6	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.999997518000761	WITHOUT_CLASSIFICATION	2.481999239055207E-6	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.999997750250752	WITHOUT_CLASSIFICATION	2.249749248093978E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999957251192353	WITHOUT_CLASSIFICATION	4.274880764737408E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999957251192353	WITHOUT_CLASSIFICATION	4.274880764737408E-6	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999996562654954	WITHOUT_CLASSIFICATION	3.437345046634324E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999996562654954	WITHOUT_CLASSIFICATION	3.437345046634324E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999963092101938	WITHOUT_CLASSIFICATION	3.690789806149735E-6	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999942826341979	WITHOUT_CLASSIFICATION	5.717365802132228E-6	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999997101627875	WITHOUT_CLASSIFICATION	2.898372124675611E-7	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999795046422718	WITHOUT_CLASSIFICATION	2.0495357728184426E-5	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999996472796184	WITHOUT_CLASSIFICATION	3.527203816752173E-7	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999391844236447	WITHOUT_CLASSIFICATION	6.081557635515705E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999993905605407	WITHOUT_CLASSIFICATION	6.094394593070689E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999990571796626	WITHOUT_CLASSIFICATION	9.428203372741231E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999460174821	WITHOUT_CLASSIFICATION	5.398251785937418E-8	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.8311898769598468	DEFECT	0.16881012304015322	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999998871186385	WITHOUT_CLASSIFICATION	1.128813614302054E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999972097977228	WITHOUT_CLASSIFICATION	2.7902022771817297E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999972097977228	WITHOUT_CLASSIFICATION	2.7902022771817297E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.99999232662538	WITHOUT_CLASSIFICATION	7.673374619960508E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.99999232662538	WITHOUT_CLASSIFICATION	7.673374619960508E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999998108583896	WITHOUT_CLASSIFICATION	1.8914161043680542E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999997263064039	WITHOUT_CLASSIFICATION	2.7369359616601965E-7	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999989682163725	WITHOUT_CLASSIFICATION	1.0317836274722018E-6	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999987915899495	WITHOUT_CLASSIFICATION	1.2084100504383425E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999998493823585	WITHOUT_CLASSIFICATION	1.5061764135370428E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999772454515206	WITHOUT_CLASSIFICATION	2.2754548479377045E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999365522584249	WITHOUT_CLASSIFICATION	6.344774157504137E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998906257783	WITHOUT_CLASSIFICATION	1.0937422170815111E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999956474973757	WITHOUT_CLASSIFICATION	4.352502624325601E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999998493823585	WITHOUT_CLASSIFICATION	1.5061764135370428E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.99998968244864	WITHOUT_CLASSIFICATION	1.0317551359965155E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999984083191494	WITHOUT_CLASSIFICATION	1.591680850643385E-6	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999999543916073	WITHOUT_CLASSIFICATION	4.56083927367239E-8	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999365522584249	WITHOUT_CLASSIFICATION	6.344774157504137E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999993845794989	WITHOUT_CLASSIFICATION	6.154205010556381E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999994735169043	WITHOUT_CLASSIFICATION	5.264830957091189E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999997976744698	WITHOUT_CLASSIFICATION	2.0232553020081346E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.999957941636048	WITHOUT_CLASSIFICATION	4.20583639519739E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999944035146274	WITHOUT_CLASSIFICATION	5.596485372505873E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999944035146274	WITHOUT_CLASSIFICATION	5.596485372505873E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992289476719	WITHOUT_CLASSIFICATION	7.710523280466454E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999989435823098	WITHOUT_CLASSIFICATION	1.05641769018244E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998907389089	WITHOUT_CLASSIFICATION	1.0926109109234052E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999481385452	WITHOUT_CLASSIFICATION	5.186145468704718E-8	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999771630628059	WITHOUT_CLASSIFICATION	2.283693719408975E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999835570697135	WITHOUT_CLASSIFICATION	1.6442930286476392E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999964956479331	WITHOUT_CLASSIFICATION	3.5043520668629646E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997298633322	WITHOUT_CLASSIFICATION	2.701366677794869E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999968249806582	WITHOUT_CLASSIFICATION	3.1750193418504984E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999994153769028	WITHOUT_CLASSIFICATION	5.846230971544141E-7	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999970959358272	WITHOUT_CLASSIFICATION	2.9040641727881285E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999985737586445	WITHOUT_CLASSIFICATION	1.4262413554982642E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999951196356556	WITHOUT_CLASSIFICATION	4.8803643444766E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999989046287895	WITHOUT_CLASSIFICATION	1.0953712105925318E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999856308800706	WITHOUT_CLASSIFICATION	1.4369119929300729E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999950300159973	WITHOUT_CLASSIFICATION	4.9699840026499005E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999950300159973	WITHOUT_CLASSIFICATION	4.9699840026499005E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999701330949	WITHOUT_CLASSIFICATION	2.9866905040909976E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999701330949	WITHOUT_CLASSIFICATION	2.9866905040909976E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9998893686898734	WITHOUT_CLASSIFICATION	1.1063131012649235E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999907767217484	WITHOUT_CLASSIFICATION	9.22327825152959E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9998393657527199	WITHOUT_CLASSIFICATION	1.6063424727998332E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999863659326992	WITHOUT_CLASSIFICATION	1.3634067300755808E-5	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999999451278854	WITHOUT_CLASSIFICATION	5.487211475893281E-8	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999878298678191	WITHOUT_CLASSIFICATION	1.2170132180936061E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999987508971612	WITHOUT_CLASSIFICATION	1.2491028388308988E-6	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999998699732147	WITHOUT_CLASSIFICATION	1.300267854516368E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999928782655516	WITHOUT_CLASSIFICATION	7.121734448451179E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999763202728071	WITHOUT_CLASSIFICATION	2.367972719281638E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999998110047005	WITHOUT_CLASSIFICATION	1.8899529945544753E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9996148439912325	WITHOUT_CLASSIFICATION	3.8515600876753926E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999928782655516	WITHOUT_CLASSIFICATION	7.121734448451179E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999763202728071	WITHOUT_CLASSIFICATION	2.367972719281638E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999998110047005	WITHOUT_CLASSIFICATION	1.8899529945544753E-7	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999996041741567	WITHOUT_CLASSIFICATION	3.958258433729921E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999994153769028	WITHOUT_CLASSIFICATION	5.846230971544141E-7	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999994153769028	WITHOUT_CLASSIFICATION	5.846230971544141E-7	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999997011218603	WITHOUT_CLASSIFICATION	2.9887813964701963E-7	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999997011218603	WITHOUT_CLASSIFICATION	2.9887813964701963E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999884532898883	WITHOUT_CLASSIFICATION	1.1546710111701858E-5	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999884532898883	WITHOUT_CLASSIFICATION	1.1546710111701858E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999225244373	WITHOUT_CLASSIFICATION	7.747556273646525E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999993827542676	WITHOUT_CLASSIFICATION	6.172457324048419E-7	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999998451139852	WITHOUT_CLASSIFICATION	1.548860147589962E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998907389089	WITHOUT_CLASSIFICATION	1.0926109109234052E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998907389089	WITHOUT_CLASSIFICATION	1.0926109109234052E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999989046287895	WITHOUT_CLASSIFICATION	1.0953712105925318E-6	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999998110047005	WITHOUT_CLASSIFICATION	1.8899529945544753E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999994153769028	WITHOUT_CLASSIFICATION	5.846230971544141E-7	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999997011218603	WITHOUT_CLASSIFICATION	2.9887813964701963E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999997281089424	WITHOUT_CLASSIFICATION	2.718910574963512E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999990585463852	WITHOUT_CLASSIFICATION	9.414536147996424E-7	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.999981918865782	WITHOUT_CLASSIFICATION	1.8081134217976033E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999966311510772	WITHOUT_CLASSIFICATION	3.3688489227464343E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999958785533657	WITHOUT_CLASSIFICATION	4.121446634324863E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999913267475714	WITHOUT_CLASSIFICATION	8.673252428497997E-6	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999583515977091	WITHOUT_CLASSIFICATION	4.164840229096746E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999957970882549	WITHOUT_CLASSIFICATION	4.202911745080142E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999984635595868	WITHOUT_CLASSIFICATION	1.5364404133144476E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999997263064039	WITHOUT_CLASSIFICATION	2.7369359616601965E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999989046287895	WITHOUT_CLASSIFICATION	1.0953712105925318E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999928782655516	WITHOUT_CLASSIFICATION	7.121734448451179E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999763202728071	WITHOUT_CLASSIFICATION	2.367972719281638E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999998110047005	WITHOUT_CLASSIFICATION	1.8899529945544753E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999997011218603	WITHOUT_CLASSIFICATION	2.9887813964701963E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999913267475714	WITHOUT_CLASSIFICATION	8.673252428497997E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999913267475714	WITHOUT_CLASSIFICATION	8.673252428497997E-6	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999981103746108	WITHOUT_CLASSIFICATION	1.8896253890934906E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999980445694653	WITHOUT_CLASSIFICATION	1.955430534712534E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999990636693424	WITHOUT_CLASSIFICATION	9.363306574836188E-7	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999993993955552	WITHOUT_CLASSIFICATION	6.006044448170641E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999976506885059	WITHOUT_CLASSIFICATION	2.3493114942320325E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9998979768312006	WITHOUT_CLASSIFICATION	1.0202316879938802E-4	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999901668998424	WITHOUT_CLASSIFICATION	9.833100157474273E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999997263064039	WITHOUT_CLASSIFICATION	2.7369359616601965E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998907389089	WITHOUT_CLASSIFICATION	1.0926109109234052E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998907389089	WITHOUT_CLASSIFICATION	1.0926109109234052E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999951196356556	WITHOUT_CLASSIFICATION	4.8803643444766E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999989046287895	WITHOUT_CLASSIFICATION	1.0953712105925318E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999987508971612	WITHOUT_CLASSIFICATION	1.2491028388308988E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999987508971612	WITHOUT_CLASSIFICATION	1.2491028388308988E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999987508971612	WITHOUT_CLASSIFICATION	1.2491028388308988E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999925514629716	WITHOUT_CLASSIFICATION	7.448537028374854E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999913267475714	WITHOUT_CLASSIFICATION	8.673252428497997E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999980445694653	WITHOUT_CLASSIFICATION	1.955430534712534E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999990636693424	WITHOUT_CLASSIFICATION	9.363306574836188E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999992631466654	WITHOUT_CLASSIFICATION	7.368533345830357E-7	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.999997967320908	WITHOUT_CLASSIFICATION	2.0326790920703347E-6	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999914636339468	WITHOUT_CLASSIFICATION	8.536366053228854E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.99993331289272	WITHOUT_CLASSIFICATION	6.668710727999178E-5	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9865583959221712	WITHOUT_CLASSIFICATION	0.0134416040778288	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999994631030493	WITHOUT_CLASSIFICATION	5.368969506326129E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999944035146274	WITHOUT_CLASSIFICATION	5.596485372505873E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999944035146274	WITHOUT_CLASSIFICATION	5.596485372505873E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992289476719	WITHOUT_CLASSIFICATION	7.710523280466454E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999980445694653	WITHOUT_CLASSIFICATION	1.955430534712534E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999993341279699	WITHOUT_CLASSIFICATION	6.658720301340398E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9998053668412007	WITHOUT_CLASSIFICATION	1.9463315879940084E-4	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999985262636621	WITHOUT_CLASSIFICATION	1.4737363377813252E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999888393276284	WITHOUT_CLASSIFICATION	1.1160672371545086E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999896104721466	WITHOUT_CLASSIFICATION	1.0389527853313498E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999983337885986	WITHOUT_CLASSIFICATION	1.6662114013806094E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999870670496003	WITHOUT_CLASSIFICATION	1.2932950399817374E-5	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999919625220407	WITHOUT_CLASSIFICATION	8.037477959290384E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999647977544112	WITHOUT_CLASSIFICATION	3.520224558885182E-5	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999933962693053	WITHOUT_CLASSIFICATION	6.603730694638539E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999773638027138	WITHOUT_CLASSIFICATION	2.2636197286231332E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999993341279699	WITHOUT_CLASSIFICATION	6.658720301340398E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999993341279699	WITHOUT_CLASSIFICATION	6.658720301340398E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992289476719	WITHOUT_CLASSIFICATION	7.710523280466454E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999989435823098	WITHOUT_CLASSIFICATION	1.05641769018244E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999928782655516	WITHOUT_CLASSIFICATION	7.121734448451179E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999763202728071	WITHOUT_CLASSIFICATION	2.367972719281638E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999966311510772	WITHOUT_CLASSIFICATION	3.3688489227464343E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999958785533657	WITHOUT_CLASSIFICATION	4.121446634324863E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999981876301007	WITHOUT_CLASSIFICATION	1.8123698993006802E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999739839917955	WITHOUT_CLASSIFICATION	2.6016008204472115E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999611054204713	WITHOUT_CLASSIFICATION	3.889457952863629E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999995344268721	WITHOUT_CLASSIFICATION	4.655731279293058E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999940205788852	WITHOUT_CLASSIFICATION	5.979421114824494E-6	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999884784373209	WITHOUT_CLASSIFICATION	1.152156267918175E-5	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9816856301859672	WITHOUT_CLASSIFICATION	0.018314369814032772	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9528145782447482	WITHOUT_CLASSIFICATION	0.047185421755251894	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999561594160264	WITHOUT_CLASSIFICATION	4.3840583973557886E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999567483363104	WITHOUT_CLASSIFICATION	4.3251663689536613E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999767496764578	WITHOUT_CLASSIFICATION	2.325032354219677E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999856308800706	WITHOUT_CLASSIFICATION	1.4369119929300729E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9998893686898734	WITHOUT_CLASSIFICATION	1.1063131012649235E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9816856301859672	WITHOUT_CLASSIFICATION	0.018314369814032772	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999914204465025	WITHOUT_CLASSIFICATION	8.579553497426673E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9679153055960851	WITHOUT_CLASSIFICATION	0.03208469440391493	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999994376373319	WITHOUT_CLASSIFICATION	5.623626680939606E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9833268042275278	WITHOUT_CLASSIFICATION	0.016673195772472112	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9751187169045379	WITHOUT_CLASSIFICATION	0.024881283095462163	DEFECT
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975929471452	WITHOUT_CLASSIFICATION	2.407052854915164E-6	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9875850063974513	WITHOUT_CLASSIFICATION	0.012414993602548765	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.978779554478714	WITHOUT_CLASSIFICATION	0.021220445521286022	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999863742230611	WITHOUT_CLASSIFICATION	1.3625776938877323E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9929359959220638	WITHOUT_CLASSIFICATION	0.007064004077936083	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9870439773349602	WITHOUT_CLASSIFICATION	0.012956022665039764	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999096600448	WITHOUT_CLASSIFICATION	9.033995516311752E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9967776462159433	WITHOUT_CLASSIFICATION	0.0032223537840567348	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9970422198395248	WITHOUT_CLASSIFICATION	0.00295778016047525	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999718749442533	WITHOUT_CLASSIFICATION	2.8125055746630723E-5	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9940733763767415	WITHOUT_CLASSIFICATION	0.005926623623258449	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9874272515982965	WITHOUT_CLASSIFICATION	0.01257274840170352	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999782749733253	WITHOUT_CLASSIFICATION	2.1725026674774775E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9977336948708655	WITHOUT_CLASSIFICATION	0.0022663051291343848	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9943580815908631	WITHOUT_CLASSIFICATION	0.005641918409136816	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999915628551851	WITHOUT_CLASSIFICATION	8.437144814863684E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999498216643	WITHOUT_CLASSIFICATION	5.017833557436253E-8	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999966269383247	WITHOUT_CLASSIFICATION	3.373061675359106E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999938207256731	WITHOUT_CLASSIFICATION	6.179274326916939E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999096600448	WITHOUT_CLASSIFICATION	9.033995516311752E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.999957941636048	WITHOUT_CLASSIFICATION	4.20583639519739E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999944035146274	WITHOUT_CLASSIFICATION	5.596485372505873E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992289476719	WITHOUT_CLASSIFICATION	7.710523280466454E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999992289476719	WITHOUT_CLASSIFICATION	7.710523280466454E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999989435823098	WITHOUT_CLASSIFICATION	1.05641769018244E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998907389089	WITHOUT_CLASSIFICATION	1.0926109109234052E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999771630628059	WITHOUT_CLASSIFICATION	2.283693719408975E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999964956479331	WITHOUT_CLASSIFICATION	3.5043520668629646E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999970959358272	WITHOUT_CLASSIFICATION	2.9040641727881285E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999989046287895	WITHOUT_CLASSIFICATION	1.0953712105925318E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999913267475714	WITHOUT_CLASSIFICATION	8.673252428497997E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999999936563727	WITHOUT_CLASSIFICATION	6.34362729680924E-8	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.999996242538561	WITHOUT_CLASSIFICATION	3.7574614389166143E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999993964678485	WITHOUT_CLASSIFICATION	6.035321515749245E-7	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999990911838476	WITHOUT_CLASSIFICATION	9.088161524603617E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999997901621678	WITHOUT_CLASSIFICATION	2.0983783228109254E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.999996330533204	WITHOUT_CLASSIFICATION	3.6694667959709654E-6	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999981556212992	WITHOUT_CLASSIFICATION	1.8443787008510603E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999824449455986	WITHOUT_CLASSIFICATION	1.7555054401419398E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999987508971612	WITHOUT_CLASSIFICATION	1.2491028388308988E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999966311510772	WITHOUT_CLASSIFICATION	3.3688489227464343E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999958785533657	WITHOUT_CLASSIFICATION	4.121446634324863E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999913267475714	WITHOUT_CLASSIFICATION	8.673252428497997E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999739839917955	WITHOUT_CLASSIFICATION	2.6016008204472115E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999611054204713	WITHOUT_CLASSIFICATION	3.889457952863629E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999991997822354	WITHOUT_CLASSIFICATION	8.002177646168206E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999992627999815	WITHOUT_CLASSIFICATION	7.37200018459318E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999999829438062	WITHOUT_CLASSIFICATION	1.705619384327326E-8	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.999991219642132	WITHOUT_CLASSIFICATION	8.780357868058117E-6	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999997442536053	WITHOUT_CLASSIFICATION	2.557463947273289E-7	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999547355941655	WITHOUT_CLASSIFICATION	4.5264405834571195E-5	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999726295938732	WITHOUT_CLASSIFICATION	2.737040612671297E-5	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999991246255124	WITHOUT_CLASSIFICATION	8.753744874929069E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999891582325056	WITHOUT_CLASSIFICATION	1.084176749441114E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999980756021328	WITHOUT_CLASSIFICATION	1.9243978670647643E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9528145782447482	WITHOUT_CLASSIFICATION	0.047185421755251894	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999547355941655	WITHOUT_CLASSIFICATION	4.5264405834571195E-5	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999891582325056	WITHOUT_CLASSIFICATION	1.084176749441114E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999980756021328	WITHOUT_CLASSIFICATION	1.9243978670647643E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999999288520832	WITHOUT_CLASSIFICATION	7.114791672860235E-8	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999965044371688	WITHOUT_CLASSIFICATION	3.4955628311802046E-6	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999998228657965	WITHOUT_CLASSIFICATION	1.7713420356301515E-7	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999998228657965	WITHOUT_CLASSIFICATION	1.7713420356301515E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999888355954	WITHOUT_CLASSIFICATION	1.1164404600001457E-5	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999994800311126	WITHOUT_CLASSIFICATION	5.199688874163112E-7	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999994800311126	WITHOUT_CLASSIFICATION	5.199688874163112E-7	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999686823356204	WITHOUT_CLASSIFICATION	3.1317664379597E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999969670639418	WITHOUT_CLASSIFICATION	3.0329360582526762E-6	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999981504839928	WITHOUT_CLASSIFICATION	1.849516007229167E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999849191719815	WITHOUT_CLASSIFICATION	1.508082801857152E-5	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999983702321695	WITHOUT_CLASSIFICATION	1.6297678305535117E-6	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999997906852619	WITHOUT_CLASSIFICATION	2.0931473806877928E-7	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9999919452421399	WITHOUT_CLASSIFICATION	8.054757860222504E-6	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999997973587137	WITHOUT_CLASSIFICATION	2.0264128633695066E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999989366059629	WITHOUT_CLASSIFICATION	1.0633940371106223E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999994469266998	WITHOUT_CLASSIFICATION	5.530733001877712E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999943592830711	WITHOUT_CLASSIFICATION	5.64071692892504E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999970515634948	WITHOUT_CLASSIFICATION	2.9484365052248777E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999976860246335	WITHOUT_CLASSIFICATION	2.3139753665528E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.999989366059629	WITHOUT_CLASSIFICATION	1.0633940371106223E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999997946665158	WITHOUT_CLASSIFICATION	2.0533348411372975E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999759700774726	WITHOUT_CLASSIFICATION	2.4029922527272665E-5	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.999998623690776	WITHOUT_CLASSIFICATION	1.3763092240423623E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995817576951	WITHOUT_CLASSIFICATION	4.182423050033281E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999464555044402	WITHOUT_CLASSIFICATION	5.354449555982082E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999498533997	WITHOUT_CLASSIFICATION	5.014660028415993E-7	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999986923548058	WITHOUT_CLASSIFICATION	1.3076451942101461E-6	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999988877789555	WITHOUT_CLASSIFICATION	1.1122210445325987E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9973540959446195	WITHOUT_CLASSIFICATION	0.0026459040553803883	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.985452464163907	WITHOUT_CLASSIFICATION	0.014547535836093035	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999980419546741	WITHOUT_CLASSIFICATION	1.9580453258135113E-6	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999998029859047	WITHOUT_CLASSIFICATION	1.970140953162388E-7	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9999987733390041	WITHOUT_CLASSIFICATION	1.2266609958974017E-6	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999783282553434	WITHOUT_CLASSIFICATION	2.1671744656630293E-5	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999947310617973	WITHOUT_CLASSIFICATION	5.268938202731124E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.999917534965731	WITHOUT_CLASSIFICATION	8.246503426908426E-5	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999999351556909	WITHOUT_CLASSIFICATION	6.484430905937969E-8	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999997273356681	WITHOUT_CLASSIFICATION	2.7266433195163336E-7	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999990616147574	WITHOUT_CLASSIFICATION	9.383852427264326E-7	DEFECT
// state	WITHOUT_CLASSIFICATION	0.999999468610435	WITHOUT_CLASSIFICATION	5.313895649725614E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999991392160279	WITHOUT_CLASSIFICATION	8.607839720550007E-7	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999952404843858	WITHOUT_CLASSIFICATION	4.759515614179886E-6	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999795631337857	WITHOUT_CLASSIFICATION	2.0436866214316945E-5	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999996238574492	WITHOUT_CLASSIFICATION	3.7614255074258856E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999605574544493	WITHOUT_CLASSIFICATION	3.9442545550634154E-5	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999526723413992	WITHOUT_CLASSIFICATION	4.732765860086674E-5	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999989691050652	WITHOUT_CLASSIFICATION	1.030894934735619E-6	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999949368727851	WITHOUT_CLASSIFICATION	5.063127214909661E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999950286511993	WITHOUT_CLASSIFICATION	4.971348800740736E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9999548790946277	WITHOUT_CLASSIFICATION	4.512090537242158E-5	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999905440055428	WITHOUT_CLASSIFICATION	9.45599445720982E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999986537866008	WITHOUT_CLASSIFICATION	1.3462133991758361E-6	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999994863391565	WITHOUT_CLASSIFICATION	5.136608434854099E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999983189989423	WITHOUT_CLASSIFICATION	1.6810010576207483E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999997156255384	WITHOUT_CLASSIFICATION	2.843744615793143E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999998848848543	WITHOUT_CLASSIFICATION	1.1511514577417549E-7	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999996537290333	WITHOUT_CLASSIFICATION	3.462709665728999E-7	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999992181194398	WITHOUT_CLASSIFICATION	7.818805601087581E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999966919813023	WITHOUT_CLASSIFICATION	3.3080186977750134E-6	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999995735783551	WITHOUT_CLASSIFICATION	4.2642164490198417E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999987099129347	WITHOUT_CLASSIFICATION	1.2900870652752265E-6	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999989203130806	WITHOUT_CLASSIFICATION	1.0796869193524262E-6	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999805002908971	WITHOUT_CLASSIFICATION	1.949970910286137E-5	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999988602191512	WITHOUT_CLASSIFICATION	1.139780848840142E-6	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999793432981284	WITHOUT_CLASSIFICATION	2.065670187163865E-5	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999790129077423	WITHOUT_CLASSIFICATION	2.098709225778874E-5	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999964420879723	WITHOUT_CLASSIFICATION	3.5579120277969068E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999275994554553	WITHOUT_CLASSIFICATION	7.240054454472097E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999989435823098	WITHOUT_CLASSIFICATION	1.05641769018244E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999498533997	WITHOUT_CLASSIFICATION	5.014660028415993E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999989691050652	WITHOUT_CLASSIFICATION	1.030894934735619E-6	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999949368727851	WITHOUT_CLASSIFICATION	5.063127214909661E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999790129077423	WITHOUT_CLASSIFICATION	2.098709225778874E-5	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999964420879723	WITHOUT_CLASSIFICATION	3.5579120277969068E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.999997352944111	WITHOUT_CLASSIFICATION	2.647055889053424E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999482776266059	WITHOUT_CLASSIFICATION	5.1722373394145915E-5	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999998974559314	WITHOUT_CLASSIFICATION	1.0254406856091324E-7	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999998961509909	WITHOUT_CLASSIFICATION	1.0384900901642149E-7	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999027027377301	WITHOUT_CLASSIFICATION	9.729726226989746E-5	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999989505887623	WITHOUT_CLASSIFICATION	1.0494112376384135E-6	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999998116294534	WITHOUT_CLASSIFICATION	1.883705466142543E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999945877925088	WITHOUT_CLASSIFICATION	5.412207491264108E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999983573996927	WITHOUT_CLASSIFICATION	1.642600307293228E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999884784373209	WITHOUT_CLASSIFICATION	1.152156267918175E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999460174821	WITHOUT_CLASSIFICATION	5.398251785937418E-8	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9865583959221712	WITHOUT_CLASSIFICATION	0.0134416040778288	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9679153055960851	WITHOUT_CLASSIFICATION	0.03208469440391493	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999985789682595	WITHOUT_CLASSIFICATION	1.4210317404945183E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999940048139335	WITHOUT_CLASSIFICATION	5.995186066464887E-6	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999933962693053	WITHOUT_CLASSIFICATION	6.603730694638539E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999994836141988	WITHOUT_CLASSIFICATION	5.163858012185654E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999930842575078	WITHOUT_CLASSIFICATION	6.915742492183322E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999567483363104	WITHOUT_CLASSIFICATION	4.3251663689536613E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999767496764578	WITHOUT_CLASSIFICATION	2.325032354219677E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998586221843438	WITHOUT_CLASSIFICATION	1.4137781565612195E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999901807867296	WITHOUT_CLASSIFICATION	9.819213270393149E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9833268042275278	WITHOUT_CLASSIFICATION	0.016673195772472112	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9751187169045379	WITHOUT_CLASSIFICATION	0.024881283095462163	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9875850063974513	WITHOUT_CLASSIFICATION	0.012414993602548765	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.978779554478714	WITHOUT_CLASSIFICATION	0.021220445521286022	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9929359959220638	WITHOUT_CLASSIFICATION	0.007064004077936083	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9870439773349602	WITHOUT_CLASSIFICATION	0.012956022665039764	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999998558559918	WITHOUT_CLASSIFICATION	1.44144008177961E-7	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999994376373319	WITHOUT_CLASSIFICATION	5.623626680939606E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975929471452	WITHOUT_CLASSIFICATION	2.407052854915164E-6	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999863742230611	WITHOUT_CLASSIFICATION	1.3625776938877323E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999887434034005	WITHOUT_CLASSIFICATION	1.1256596599554285E-5	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999689835646933	WITHOUT_CLASSIFICATION	3.1016435306558495E-5	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999756881642201	WITHOUT_CLASSIFICATION	2.4311835779911833E-5	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.8064173127992912	WITHOUT_CLASSIFICATION	0.19358268720070876	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999845764713128	WITHOUT_CLASSIFICATION	1.542352868715889E-5	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999789024772843	WITHOUT_CLASSIFICATION	2.1097522715760302E-5	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999870461952826	WITHOUT_CLASSIFICATION	1.2953804717497312E-5	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999945837676648	WITHOUT_CLASSIFICATION	5.416232335111994E-6	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999998945420386	WITHOUT_CLASSIFICATION	1.0545796136438314E-7	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999984564854368	WITHOUT_CLASSIFICATION	1.543514563129885E-6	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999959830010433	WITHOUT_CLASSIFICATION	4.016998956735113E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999994469266998	WITHOUT_CLASSIFICATION	5.530733001877712E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999997863036951	WITHOUT_CLASSIFICATION	2.1369630479645817E-7	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999944393487689	WITHOUT_CLASSIFICATION	5.560651231102322E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.999998794251294	WITHOUT_CLASSIFICATION	1.2057487059175617E-6	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.999998910274725	WITHOUT_CLASSIFICATION	1.0897252750236426E-6	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999956168009638	WITHOUT_CLASSIFICATION	4.383199036197744E-6	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.999999294909982	WITHOUT_CLASSIFICATION	7.050900180206206E-7	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999994972961928	WITHOUT_CLASSIFICATION	5.027038072473309E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.999998265914503	WITHOUT_CLASSIFICATION	1.7340854969954464E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999996759571563	WITHOUT_CLASSIFICATION	3.240428436815431E-7	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999959755821903	WITHOUT_CLASSIFICATION	4.02441780963841E-6	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9996663252549369	WITHOUT_CLASSIFICATION	3.336747450630399E-4	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999995125238037	WITHOUT_CLASSIFICATION	4.874761962714853E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999968249806582	WITHOUT_CLASSIFICATION	3.1750193418504984E-6	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.99998968244864	WITHOUT_CLASSIFICATION	1.0317551359965155E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999772454515206	WITHOUT_CLASSIFICATION	2.2754548479377045E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999365522584249	WITHOUT_CLASSIFICATION	6.344774157504137E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999997973587137	WITHOUT_CLASSIFICATION	2.0264128633695066E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999970515634948	WITHOUT_CLASSIFICATION	2.9484365052248777E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999759700774726	WITHOUT_CLASSIFICATION	2.4029922527272665E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995817576951	WITHOUT_CLASSIFICATION	4.182423050033281E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995817576951	WITHOUT_CLASSIFICATION	4.182423050033281E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996679361404	WITHOUT_CLASSIFICATION	3.3206385958729643E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999953168208344	WITHOUT_CLASSIFICATION	4.683179165606187E-6	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999911836782355	WITHOUT_CLASSIFICATION	8.816321764572255E-6	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999029214807106	WITHOUT_CLASSIFICATION	9.707851928943245E-5	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999984401231349	WITHOUT_CLASSIFICATION	1.5598768651985101E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999974474126051	WITHOUT_CLASSIFICATION	2.5525873949383754E-6	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.999996188744387	WITHOUT_CLASSIFICATION	3.8112556130579515E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999749981518923	WITHOUT_CLASSIFICATION	2.500184810770656E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999997179994812	WITHOUT_CLASSIFICATION	2.8200051872692244E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999989435823098	WITHOUT_CLASSIFICATION	1.05641769018244E-6	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.999998910274725	WITHOUT_CLASSIFICATION	1.0897252750236426E-6	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999495992000049	WITHOUT_CLASSIFICATION	5.040079999506356E-5	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999960705038103	WITHOUT_CLASSIFICATION	3.929496189715997E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999878244567745	WITHOUT_CLASSIFICATION	1.2175543225534057E-5	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999990830515852	WITHOUT_CLASSIFICATION	9.169484147044923E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999990481891334	WITHOUT_CLASSIFICATION	9.518108667155626E-7	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.99999978798589	WITHOUT_CLASSIFICATION	2.1201411010413768E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999998407573355	WITHOUT_CLASSIFICATION	1.5924266456705705E-7	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999999156300448	WITHOUT_CLASSIFICATION	8.436995533599081E-8	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999998451809263	WITHOUT_CLASSIFICATION	1.5481907371420005E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999998802874106	WITHOUT_CLASSIFICATION	1.1971258930169773E-7	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.999999875047176	WITHOUT_CLASSIFICATION	1.2495282390447228E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999978229045381	WITHOUT_CLASSIFICATION	2.1770954620098257E-6	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999872926981295	WITHOUT_CLASSIFICATION	1.2707301870575829E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997298633322	WITHOUT_CLASSIFICATION	2.701366677794869E-7	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999856308800706	WITHOUT_CLASSIFICATION	1.4369119929300729E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999950300159973	WITHOUT_CLASSIFICATION	4.9699840026499005E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999950300159973	WITHOUT_CLASSIFICATION	4.9699840026499005E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999701330949	WITHOUT_CLASSIFICATION	2.9866905040909976E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999701330949	WITHOUT_CLASSIFICATION	2.9866905040909976E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9998893686898734	WITHOUT_CLASSIFICATION	1.1063131012649235E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999907767217484	WITHOUT_CLASSIFICATION	9.22327825152959E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999863659326992	WITHOUT_CLASSIFICATION	1.3634067300755808E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999863659326992	WITHOUT_CLASSIFICATION	1.3634067300755808E-5	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999999451278854	WITHOUT_CLASSIFICATION	5.487211475893281E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999999451278854	WITHOUT_CLASSIFICATION	5.487211475893281E-8	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999878298678191	WITHOUT_CLASSIFICATION	1.2170132180936061E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999878298678191	WITHOUT_CLASSIFICATION	1.2170132180936061E-5	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.99993331289272	WITHOUT_CLASSIFICATION	6.668710727999178E-5	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999986839667364	WITHOUT_CLASSIFICATION	1.3160332635643546E-6	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999982741702226	WITHOUT_CLASSIFICATION	1.7258297773630294E-6	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999988800157952	WITHOUT_CLASSIFICATION	1.1199842048052807E-6	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999994155901927	WITHOUT_CLASSIFICATION	5.844098074132509E-7	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999985791973496	WITHOUT_CLASSIFICATION	1.4208026504939222E-6	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999887911400794	WITHOUT_CLASSIFICATION	1.1208859920659672E-5	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.999999811232965	WITHOUT_CLASSIFICATION	1.8876703494558635E-7	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999406011995678	WITHOUT_CLASSIFICATION	5.93988004321042E-5	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999966864342127	WITHOUT_CLASSIFICATION	3.313565787326757E-6	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.999999942093295	WITHOUT_CLASSIFICATION	5.790670485597676E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999998798514449	WITHOUT_CLASSIFICATION	1.2014855500440378E-7	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999993732247644	WITHOUT_CLASSIFICATION	6.267752355420679E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999989435823098	WITHOUT_CLASSIFICATION	1.05641769018244E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999897792553216	WITHOUT_CLASSIFICATION	1.0220744678462192E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999970515634948	WITHOUT_CLASSIFICATION	2.9484365052248777E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999759700774726	WITHOUT_CLASSIFICATION	2.4029922527272665E-5	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999945877925088	WITHOUT_CLASSIFICATION	5.412207491264108E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999953168208344	WITHOUT_CLASSIFICATION	4.683179165606187E-6	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999728944830231	WITHOUT_CLASSIFICATION	2.710551697686788E-5	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999988344994787	WITHOUT_CLASSIFICATION	1.1655005213861996E-6	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999103743626	WITHOUT_CLASSIFICATION	8.962563735368688E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.999999683631914	WITHOUT_CLASSIFICATION	3.1636808588946745E-7	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999996220928903	WITHOUT_CLASSIFICATION	3.779071098159146E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999976974431777	WITHOUT_CLASSIFICATION	2.30255682234812E-6	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.999998574591698	WITHOUT_CLASSIFICATION	1.4254083020369937E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999998906257783	WITHOUT_CLASSIFICATION	1.0937422170815111E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999365522584249	WITHOUT_CLASSIFICATION	6.344774157504137E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999993845794989	WITHOUT_CLASSIFICATION	6.154205010556381E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999993993955552	WITHOUT_CLASSIFICATION	6.006044448170641E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999976506885059	WITHOUT_CLASSIFICATION	2.3493114942320325E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995817576951	WITHOUT_CLASSIFICATION	4.182423050033281E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999498533997	WITHOUT_CLASSIFICATION	5.014660028415993E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999940048139335	WITHOUT_CLASSIFICATION	5.995186066464887E-6	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997176790012	WITHOUT_CLASSIFICATION	2.8232099875535695E-7	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9999804513357872	WITHOUT_CLASSIFICATION	1.9548664212842184E-5	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.999999959905201	WITHOUT_CLASSIFICATION	4.0094799042879886E-8	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999989820772172	WITHOUT_CLASSIFICATION	1.0179227828807045E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999994814268574	WITHOUT_CLASSIFICATION	5.185731425482467E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999998886072918	WITHOUT_CLASSIFICATION	1.1139270824936095E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999749981518923	WITHOUT_CLASSIFICATION	2.500184810770656E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999989435823098	WITHOUT_CLASSIFICATION	1.05641769018244E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999999936563727	WITHOUT_CLASSIFICATION	6.34362729680924E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999970515634948	WITHOUT_CLASSIFICATION	2.9484365052248777E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999878244567745	WITHOUT_CLASSIFICATION	1.2175543225534057E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999990481891334	WITHOUT_CLASSIFICATION	9.518108667155626E-7	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999962369454215	WITHOUT_CLASSIFICATION	3.763054578580439E-6	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999989901505526	WITHOUT_CLASSIFICATION	1.0098494473494934E-6	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999977606898192	WITHOUT_CLASSIFICATION	2.2393101808370083E-6	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999987510135286	WITHOUT_CLASSIFICATION	1.2489864714076848E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999951751313697	WITHOUT_CLASSIFICATION	4.82486863026108E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999999143597116	WITHOUT_CLASSIFICATION	8.564028840324771E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999984482093566	WITHOUT_CLASSIFICATION	1.5517906433784763E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999951751313697	WITHOUT_CLASSIFICATION	4.82486863026108E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999745683666932	WITHOUT_CLASSIFICATION	2.5431633306815787E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999999143597116	WITHOUT_CLASSIFICATION	8.564028840324771E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999984482093566	WITHOUT_CLASSIFICATION	1.5517906433784763E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999996439725082	WITHOUT_CLASSIFICATION	3.560274918205985E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999989192158903	WITHOUT_CLASSIFICATION	1.0807841096147347E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999989192158903	WITHOUT_CLASSIFICATION	1.0807841096147347E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999999539835248	WITHOUT_CLASSIFICATION	4.601647516475653E-8	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999998001887285	WITHOUT_CLASSIFICATION	1.9981127141523664E-7	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999996089775322	WITHOUT_CLASSIFICATION	3.9102246778438006E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999994600149916	WITHOUT_CLASSIFICATION	5.399850084252486E-7	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999996814547686	WITHOUT_CLASSIFICATION	3.1854523146572377E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999923797833704	WITHOUT_CLASSIFICATION	7.620216629514607E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999965754181585	WITHOUT_CLASSIFICATION	3.4245818416636095E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999970515634948	WITHOUT_CLASSIFICATION	2.9484365052248777E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999999539835248	WITHOUT_CLASSIFICATION	4.601647516475653E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999996083139354	WITHOUT_CLASSIFICATION	3.9168606464357886E-7	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999695569396	WITHOUT_CLASSIFICATION	3.044306039358284E-8	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999700025159756	WITHOUT_CLASSIFICATION	2.9997484024526105E-5	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999789145948356	WITHOUT_CLASSIFICATION	2.1085405164465247E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999996887446095	WITHOUT_CLASSIFICATION	3.1125539052463135E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999970078591128	WITHOUT_CLASSIFICATION	2.9921408871171954E-6	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9991889913995876	WITHOUT_CLASSIFICATION	8.110086004125232E-4	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999991889324916	WITHOUT_CLASSIFICATION	8.110675082428491E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999878298678191	WITHOUT_CLASSIFICATION	1.2170132180936061E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999996508921783	WITHOUT_CLASSIFICATION	3.491078216290287E-7	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999498216643	WITHOUT_CLASSIFICATION	5.017833557436253E-8	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999878244567745	WITHOUT_CLASSIFICATION	1.2175543225534057E-5	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999990830515852	WITHOUT_CLASSIFICATION	9.169484147044923E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999990481891334	WITHOUT_CLASSIFICATION	9.518108667155626E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999999901340147	WITHOUT_CLASSIFICATION	9.865985285922479E-9	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9997769420206052	WITHOUT_CLASSIFICATION	2.2305797939484363E-4	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9998536464225678	WITHOUT_CLASSIFICATION	1.463535774321834E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999996426303946	WITHOUT_CLASSIFICATION	3.5736960536943376E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.999999888866367	WITHOUT_CLASSIFICATION	1.111336329789456E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.999999888866367	WITHOUT_CLASSIFICATION	1.111336329789456E-7	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999987151617573	WITHOUT_CLASSIFICATION	1.2848382426902185E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999981146263884	WITHOUT_CLASSIFICATION	1.8853736115851935E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999947565088592	WITHOUT_CLASSIFICATION	5.243491140857812E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999460174821	WITHOUT_CLASSIFICATION	5.398251785937418E-8	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999955672837145	WITHOUT_CLASSIFICATION	4.432716285470338E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999225244373	WITHOUT_CLASSIFICATION	7.747556273646525E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999992627999815	WITHOUT_CLASSIFICATION	7.37200018459318E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999995088483044	WITHOUT_CLASSIFICATION	4.911516956919807E-7	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9998913168400017	WITHOUT_CLASSIFICATION	1.0868315999832073E-4	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999959849376573	WITHOUT_CLASSIFICATION	4.015062342732848E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999974004123431	WITHOUT_CLASSIFICATION	2.5995876569737183E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999998871186385	WITHOUT_CLASSIFICATION	1.128813614302054E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999972097977228	WITHOUT_CLASSIFICATION	2.7902022771817297E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.99999232662538	WITHOUT_CLASSIFICATION	7.673374619960508E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.99999232662538	WITHOUT_CLASSIFICATION	7.673374619960508E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999998108583896	WITHOUT_CLASSIFICATION	1.8914161043680542E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9998393657527199	WITHOUT_CLASSIFICATION	1.6063424727998332E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999863659326992	WITHOUT_CLASSIFICATION	1.3634067300755808E-5	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.99993331289272	WITHOUT_CLASSIFICATION	6.668710727999178E-5	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.999998265914503	WITHOUT_CLASSIFICATION	1.7340854969954464E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999981347329516	WITHOUT_CLASSIFICATION	1.8652670484232688E-6	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999998858680582	WITHOUT_CLASSIFICATION	1.141319417336705E-7	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999996944462003	WITHOUT_CLASSIFICATION	3.0555379973528553E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999250272157	WITHOUT_CLASSIFICATION	7.497278436424471E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999996493126907	WITHOUT_CLASSIFICATION	3.5068730931983483E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999992939569924	WITHOUT_CLASSIFICATION	7.06043007564662E-7	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999951751313697	WITHOUT_CLASSIFICATION	4.82486863026108E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999999143597116	WITHOUT_CLASSIFICATION	8.564028840324771E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999984482093566	WITHOUT_CLASSIFICATION	1.5517906433784763E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9999548790946277	WITHOUT_CLASSIFICATION	4.512090537242158E-5	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999871971132972	WITHOUT_CLASSIFICATION	1.2802886702948408E-5	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999997717036742	WITHOUT_CLASSIFICATION	2.282963258324446E-7	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999936024803837	WITHOUT_CLASSIFICATION	6.397519616269878E-6	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999984689134956	WITHOUT_CLASSIFICATION	1.5310865043984693E-6	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9995627905506147	WITHOUT_CLASSIFICATION	4.3720944938528325E-4	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999998739185002	WITHOUT_CLASSIFICATION	1.2608149969116304E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.999992843011828	WITHOUT_CLASSIFICATION	7.156988171954241E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999993376788588	WITHOUT_CLASSIFICATION	6.623211412228132E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999989459202563	WITHOUT_CLASSIFICATION	1.0540797436564161E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999986176932933	WITHOUT_CLASSIFICATION	1.3823067066039303E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999986176932933	WITHOUT_CLASSIFICATION	1.3823067066039303E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999996364931436	WITHOUT_CLASSIFICATION	3.635068564114347E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999999901340147	WITHOUT_CLASSIFICATION	9.865985285922479E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999001269550943	WITHOUT_CLASSIFICATION	9.987304490571636E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999001269550943	WITHOUT_CLASSIFICATION	9.987304490571636E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999998507421711	WITHOUT_CLASSIFICATION	1.4925782889617744E-7	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999627356872417	WITHOUT_CLASSIFICATION	3.726431275825116E-5	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.999998893908991	WITHOUT_CLASSIFICATION	1.1060910090308633E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997545588826	WITHOUT_CLASSIFICATION	2.4544111736344636E-7	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999001269550943	WITHOUT_CLASSIFICATION	9.987304490571636E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999938207256731	WITHOUT_CLASSIFICATION	6.179274326916939E-6	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999808006114744	WITHOUT_CLASSIFICATION	1.919938852557874E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999214420245	WITHOUT_CLASSIFICATION	7.855797549381388E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999402016533	WITHOUT_CLASSIFICATION	5.979834670215076E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999999897619508	WITHOUT_CLASSIFICATION	1.0238049164614543E-8	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.999999930395565	WITHOUT_CLASSIFICATION	6.960443501295644E-8	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999996988804521	WITHOUT_CLASSIFICATION	3.0111954780536966E-7	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998942073359234	WITHOUT_CLASSIFICATION	1.0579266407653819E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998942073359234	WITHOUT_CLASSIFICATION	1.0579266407653819E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9998942073359234	WITHOUT_CLASSIFICATION	1.0579266407653819E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9998629352943972	WITHOUT_CLASSIFICATION	1.3706470560277028E-4	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999992913412094	WITHOUT_CLASSIFICATION	7.08658790530326E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.999873264356013	WITHOUT_CLASSIFICATION	1.2673564398695336E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999972850351425	WITHOUT_CLASSIFICATION	2.714964857560171E-6	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999910027259	WITHOUT_CLASSIFICATION	8.997274174490649E-9	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.999961168897552	WITHOUT_CLASSIFICATION	3.883110244787441E-5	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999968170989523	WITHOUT_CLASSIFICATION	3.1829010477167035E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999702002183867	WITHOUT_CLASSIFICATION	2.979978161330613E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999998376141698	WITHOUT_CLASSIFICATION	1.6238583025375307E-7	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999541164538	WITHOUT_CLASSIFICATION	4.588354619966074E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999958564441904	WITHOUT_CLASSIFICATION	4.143555809571479E-6	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999982814472036	WITHOUT_CLASSIFICATION	1.7185527964605397E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999996314686664	WITHOUT_CLASSIFICATION	3.685313335157428E-7	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999996314686664	WITHOUT_CLASSIFICATION	3.685313335157428E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999996510925317	WITHOUT_CLASSIFICATION	3.4890746824971965E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999996510925317	WITHOUT_CLASSIFICATION	3.4890746824971965E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999996224969968	WITHOUT_CLASSIFICATION	3.775030032021806E-7	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999976775030543	WITHOUT_CLASSIFICATION	2.3224969456079516E-6	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999635925763873	WITHOUT_CLASSIFICATION	3.640742361268909E-5	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999969587302234	WITHOUT_CLASSIFICATION	3.0412697765050113E-6	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9998791118472253	WITHOUT_CLASSIFICATION	1.208881527746109E-4	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.99990819939287	WITHOUT_CLASSIFICATION	9.180060713001291E-5	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9998703591771672	WITHOUT_CLASSIFICATION	1.296408228327788E-4	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999958036872636	WITHOUT_CLASSIFICATION	4.19631273635876E-6	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9979482226215197	WITHOUT_CLASSIFICATION	0.002051777378480328	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999995686694698	WITHOUT_CLASSIFICATION	4.313305302525379E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999938533375149	WITHOUT_CLASSIFICATION	6.146662485174414E-6	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.99997567609	WITHOUT_CLASSIFICATION	2.4323909999995064E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999204586858084	WITHOUT_CLASSIFICATION	7.954131419169286E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999995163236748	WITHOUT_CLASSIFICATION	4.836763252469743E-7	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9999849358310423	WITHOUT_CLASSIFICATION	1.5064168957615743E-5	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999967005812	WITHOUT_CLASSIFICATION	3.2994188560082642E-9	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999979781702018	WITHOUT_CLASSIFICATION	2.0218297983708024E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999979781702018	WITHOUT_CLASSIFICATION	2.0218297983708024E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.999997635669198	WITHOUT_CLASSIFICATION	2.364330802030492E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.999997635669198	WITHOUT_CLASSIFICATION	2.364330802030492E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9996484040222849	WITHOUT_CLASSIFICATION	3.5159597771501546E-4	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999991863480905	WITHOUT_CLASSIFICATION	8.136519093914253E-7	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9998014513857743	WITHOUT_CLASSIFICATION	1.9854861422565707E-4	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999975080621999	WITHOUT_CLASSIFICATION	2.491937800014712E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999600545247	WITHOUT_CLASSIFICATION	3.994547524074452E-8	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999600545247	WITHOUT_CLASSIFICATION	3.994547524074452E-8	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.999955564633503	WITHOUT_CLASSIFICATION	4.44353664969859E-5	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9999329078226928	WITHOUT_CLASSIFICATION	6.709217730717803E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999992212608395	WITHOUT_CLASSIFICATION	7.787391604948729E-7	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999990253705964	WITHOUT_CLASSIFICATION	9.74629403629953E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999252761331	WITHOUT_CLASSIFICATION	7.472386686914299E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.999999529697794	WITHOUT_CLASSIFICATION	4.7030220596038E-7	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.999997622009053	WITHOUT_CLASSIFICATION	2.3779909470845557E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.999997622009053	WITHOUT_CLASSIFICATION	2.3779909470845557E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999999570360742	WITHOUT_CLASSIFICATION	4.296392576011233E-8	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999994246146863	WITHOUT_CLASSIFICATION	5.753853136992466E-7	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999994246146863	WITHOUT_CLASSIFICATION	5.753853136992466E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999989598376927	WITHOUT_CLASSIFICATION	1.040162307293173E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999976970180471	WITHOUT_CLASSIFICATION	2.3029819528124545E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999958490126	WITHOUT_CLASSIFICATION	4.150987500985185E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999999285290649	WITHOUT_CLASSIFICATION	7.147093504958235E-8	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999441921192264	WITHOUT_CLASSIFICATION	5.580788077364137E-5	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.99999929967157	WITHOUT_CLASSIFICATION	7.003284300261247E-7	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999909768948302	WITHOUT_CLASSIFICATION	9.023105169917034E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999600545247	WITHOUT_CLASSIFICATION	3.994547524074452E-8	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999992212608395	WITHOUT_CLASSIFICATION	7.787391604948729E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998219554841	WITHOUT_CLASSIFICATION	1.7804451584748904E-7	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999987553556482	WITHOUT_CLASSIFICATION	1.2446443517333749E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999978028408726	WITHOUT_CLASSIFICATION	2.1971591274076774E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999933598084363	WITHOUT_CLASSIFICATION	6.640191563675342E-6	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999508100182903	WITHOUT_CLASSIFICATION	4.918998170967807E-5	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999997307714896	WITHOUT_CLASSIFICATION	2.6922851036059895E-7	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.999999019223894	WITHOUT_CLASSIFICATION	9.807761059837784E-7	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999052617893573	WITHOUT_CLASSIFICATION	9.473821064272908E-5	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999997311123328	WITHOUT_CLASSIFICATION	2.688876672010866E-7	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999943054399442	WITHOUT_CLASSIFICATION	5.694560055771678E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999976742523818	WITHOUT_CLASSIFICATION	2.325747618082606E-6	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999997356664522	WITHOUT_CLASSIFICATION	2.6433354784192686E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9999726170435395	WITHOUT_CLASSIFICATION	2.7382956460643298E-5	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999630332294	WITHOUT_CLASSIFICATION	3.69667705463323E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999919562846226	WITHOUT_CLASSIFICATION	8.043715377441922E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999971621649313	WITHOUT_CLASSIFICATION	2.837835068715459E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999987550377432	WITHOUT_CLASSIFICATION	1.2449622568341587E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999983424560731	WITHOUT_CLASSIFICATION	1.6575439268642818E-6	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999995211737164	WITHOUT_CLASSIFICATION	4.788262835868294E-7	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999989891731635	WITHOUT_CLASSIFICATION	1.0108268364985922E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999894857116618	WITHOUT_CLASSIFICATION	1.05142883381469E-5	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999961601190243	WITHOUT_CLASSIFICATION	3.839880975818462E-6	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999996940188676	WITHOUT_CLASSIFICATION	3.0598113236682347E-7	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9999722431594003	WITHOUT_CLASSIFICATION	2.775684059966099E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999983942836724	WITHOUT_CLASSIFICATION	1.6057163275598593E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999998104682188	WITHOUT_CLASSIFICATION	1.8953178109372997E-7	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999999319706476	WITHOUT_CLASSIFICATION	6.802935235476424E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999998104682188	WITHOUT_CLASSIFICATION	1.8953178109372997E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988216592551	WITHOUT_CLASSIFICATION	1.1783407449147393E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980363684546	WITHOUT_CLASSIFICATION	1.9636315454248087E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968834861526	WITHOUT_CLASSIFICATION	3.1165138474363576E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999982032827893	WITHOUT_CLASSIFICATION	1.7967172106315876E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974982534647	WITHOUT_CLASSIFICATION	2.5017465353088596E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991048112808	WITHOUT_CLASSIFICATION	8.951887192598732E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997248949571	WITHOUT_CLASSIFICATION	2.751050428592975E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998219554841	WITHOUT_CLASSIFICATION	1.7804451584748904E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996215909733	WITHOUT_CLASSIFICATION	3.7840902669964416E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996215909733	WITHOUT_CLASSIFICATION	3.7840902669964416E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999987118485318	WITHOUT_CLASSIFICATION	1.2881514681938957E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999987118485318	WITHOUT_CLASSIFICATION	1.2881514681938957E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999987118485318	WITHOUT_CLASSIFICATION	1.2881514681938957E-6	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999996367814821	WITHOUT_CLASSIFICATION	3.6321851798310457E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999996367814821	WITHOUT_CLASSIFICATION	3.6321851798310457E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999928403144216	WITHOUT_CLASSIFICATION	7.159685578348614E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999928403144216	WITHOUT_CLASSIFICATION	7.159685578348614E-6	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999920810719907	WITHOUT_CLASSIFICATION	7.918928009424686E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999933191393893	WITHOUT_CLASSIFICATION	6.680860610816283E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999933191393893	WITHOUT_CLASSIFICATION	6.680860610816283E-6	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999998433176609	WITHOUT_CLASSIFICATION	1.5668233912973076E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999977412135987	WITHOUT_CLASSIFICATION	2.25878640128635E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999977412135987	WITHOUT_CLASSIFICATION	2.25878640128635E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999605358929934	WITHOUT_CLASSIFICATION	3.9464107006620606E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999605358929934	WITHOUT_CLASSIFICATION	3.9464107006620606E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9999605358929934	WITHOUT_CLASSIFICATION	3.9464107006620606E-5	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999971926635873	WITHOUT_CLASSIFICATION	2.807336412727341E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999451980162455	WITHOUT_CLASSIFICATION	5.480198375441729E-5	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999893939390612	WITHOUT_CLASSIFICATION	1.060606093889244E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999225244373	WITHOUT_CLASSIFICATION	7.747556273646525E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999225244373	WITHOUT_CLASSIFICATION	7.747556273646525E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999991997822354	WITHOUT_CLASSIFICATION	8.002177646168206E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999989598376927	WITHOUT_CLASSIFICATION	1.040162307293173E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999987550377432	WITHOUT_CLASSIFICATION	1.2449622568341587E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999987550377432	WITHOUT_CLASSIFICATION	1.2449622568341587E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980363684546	WITHOUT_CLASSIFICATION	1.9636315454248087E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998219554841	WITHOUT_CLASSIFICATION	1.7804451584748904E-7	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999971926635873	WITHOUT_CLASSIFICATION	2.807336412727341E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999971926635873	WITHOUT_CLASSIFICATION	2.807336412727341E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999997834334164	WITHOUT_CLASSIFICATION	2.16566583626838E-7	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.999999691074313	WITHOUT_CLASSIFICATION	3.0892568706532225E-7	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999997917344898	WITHOUT_CLASSIFICATION	2.0826551006664324E-7	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999864358726482	WITHOUT_CLASSIFICATION	1.3564127351870607E-5	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999997547127465	WITHOUT_CLASSIFICATION	2.452872535174786E-7	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999995427582696	WITHOUT_CLASSIFICATION	4.5724173039879196E-7	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999758807738739	WITHOUT_CLASSIFICATION	2.411922612609563E-5	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999959389911	WITHOUT_CLASSIFICATION	4.061008817860464E-9	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999999739829172	WITHOUT_CLASSIFICATION	2.6017082846365677E-8	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.999998882575101	WITHOUT_CLASSIFICATION	1.1174248990733214E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999981690069204	WITHOUT_CLASSIFICATION	1.8309930795899408E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999988298635688	WITHOUT_CLASSIFICATION	1.1701364312077053E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999998886072918	WITHOUT_CLASSIFICATION	1.1139270824936095E-7	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999993704432211	WITHOUT_CLASSIFICATION	6.295567788691789E-7	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999925421960505	WITHOUT_CLASSIFICATION	7.457803949488302E-6	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999977325565989	WITHOUT_CLASSIFICATION	2.2674434011425356E-6	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.999996641582084	WITHOUT_CLASSIFICATION	3.3584179161042347E-6	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9999882447063916	WITHOUT_CLASSIFICATION	1.1755293608347774E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999784628599167	WITHOUT_CLASSIFICATION	2.1537140083353074E-5	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999997161444264	WITHOUT_CLASSIFICATION	2.8385557359006526E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999971443741345	WITHOUT_CLASSIFICATION	2.8556258656291256E-6	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9998507233288271	WITHOUT_CLASSIFICATION	1.4927667117286972E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999600545247	WITHOUT_CLASSIFICATION	3.994547524074452E-8	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999600545247	WITHOUT_CLASSIFICATION	3.994547524074452E-8	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999252761331	WITHOUT_CLASSIFICATION	7.472386686914299E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988216592551	WITHOUT_CLASSIFICATION	1.1783407449147393E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999982032827893	WITHOUT_CLASSIFICATION	1.7967172106315876E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974982534647	WITHOUT_CLASSIFICATION	2.5017465353088596E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974982534647	WITHOUT_CLASSIFICATION	2.5017465353088596E-6	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999056803682196	WITHOUT_CLASSIFICATION	9.431963178037437E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999996988839874	WITHOUT_CLASSIFICATION	3.0111601260529014E-7	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999992758361519	WITHOUT_CLASSIFICATION	7.241638482337773E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.999998544690811	WITHOUT_CLASSIFICATION	1.455309188981804E-6	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999995502066388	WITHOUT_CLASSIFICATION	4.49793361256505E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999970639779	WITHOUT_CLASSIFICATION	2.9360221462904492E-9	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999994489014271	WITHOUT_CLASSIFICATION	5.51098572983216E-7	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999995323348471	WITHOUT_CLASSIFICATION	4.67665152934974E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.999971307499007	WITHOUT_CLASSIFICATION	2.8692500993033076E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999981803055612	WITHOUT_CLASSIFICATION	1.8196944387960459E-6	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999995212923753	WITHOUT_CLASSIFICATION	4.787076246496654E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999997987486431	WITHOUT_CLASSIFICATION	2.0125135693959546E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999998005588032	WITHOUT_CLASSIFICATION	1.994411967664986E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999994333585386	WITHOUT_CLASSIFICATION	5.666414613618909E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999998652031873	WITHOUT_CLASSIFICATION	1.3479681271135364E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999862223579	WITHOUT_CLASSIFICATION	1.3777642051454E-8	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.999995940873401	WITHOUT_CLASSIFICATION	4.059126598905028E-6	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999995661066786	WITHOUT_CLASSIFICATION	4.3389332134552883E-7	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999997351607823	WITHOUT_CLASSIFICATION	2.648392176765111E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999988231364549	WITHOUT_CLASSIFICATION	1.1768635450642298E-6	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999939710631194	WITHOUT_CLASSIFICATION	6.0289368807032855E-6	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.999995212234422	WITHOUT_CLASSIFICATION	4.78776557797176E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999862223579	WITHOUT_CLASSIFICATION	1.3777642051454E-8	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9744335404593051	WITHOUT_CLASSIFICATION	0.025566459540694936	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999992972622401	WITHOUT_CLASSIFICATION	7.02737759861081E-7	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999997269610587	WITHOUT_CLASSIFICATION	2.730389414141925E-7	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999015326848045	WITHOUT_CLASSIFICATION	9.846731519540799E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999525112753	WITHOUT_CLASSIFICATION	4.748872466750093E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999999319706476	WITHOUT_CLASSIFICATION	6.802935235476424E-8	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999992972622401	WITHOUT_CLASSIFICATION	7.02737759861081E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.999999580004178	WITHOUT_CLASSIFICATION	4.199958219821641E-7	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999136156265797	WITHOUT_CLASSIFICATION	8.638437342037511E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9986501185382921	WITHOUT_CLASSIFICATION	0.0013498814617079469	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999966480522167	WITHOUT_CLASSIFICATION	3.351947783240857E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999993993781898	WITHOUT_CLASSIFICATION	6.006218102036593E-7	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999963638851495	WITHOUT_CLASSIFICATION	3.6361148505555347E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999963638851495	WITHOUT_CLASSIFICATION	3.6361148505555347E-6	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.999994485351376	WITHOUT_CLASSIFICATION	5.514648623972822E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999938533375149	WITHOUT_CLASSIFICATION	6.146662485174414E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999999965930028	WITHOUT_CLASSIFICATION	3.4069973135786924E-9	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9998236781258362	WITHOUT_CLASSIFICATION	1.7632187416390677E-4	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999993251844992	WITHOUT_CLASSIFICATION	6.74815500810627E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999989309476474	WITHOUT_CLASSIFICATION	1.069052352576408E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999989309476474	WITHOUT_CLASSIFICATION	1.069052352576408E-6	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999948939968568	WITHOUT_CLASSIFICATION	5.106003143167595E-6	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999984868810301	WITHOUT_CLASSIFICATION	1.5131189699075692E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999933145207706	WITHOUT_CLASSIFICATION	6.685479229484631E-6	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9999905723308367	WITHOUT_CLASSIFICATION	9.427669163207917E-6	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9997588685542907	WITHOUT_CLASSIFICATION	2.4113144570923472E-4	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999996988014656	WITHOUT_CLASSIFICATION	3.0119853448110794E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999975684366672	WITHOUT_CLASSIFICATION	2.4315633328563746E-6	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999993824783121	WITHOUT_CLASSIFICATION	6.175216878385924E-7	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.99999690772213	WITHOUT_CLASSIFICATION	3.092277869984132E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999712080090358	WITHOUT_CLASSIFICATION	2.879199096413861E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999712080090358	WITHOUT_CLASSIFICATION	2.879199096413861E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9997823974131159	WITHOUT_CLASSIFICATION	2.1760258688400784E-4	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999998046777033	WITHOUT_CLASSIFICATION	1.9532229671253465E-7	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999996908773009	WITHOUT_CLASSIFICATION	3.0912269904660317E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999987651481	WITHOUT_CLASSIFICATION	1.2348518316744561E-9	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999987146991239	WITHOUT_CLASSIFICATION	1.2853008760957389E-6	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999951100348065	WITHOUT_CLASSIFICATION	4.889965193596089E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.999996931075937	WITHOUT_CLASSIFICATION	3.0689240630637804E-6	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9998265625155847	WITHOUT_CLASSIFICATION	1.7343748441528233E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999970089071909	WITHOUT_CLASSIFICATION	2.9910928091658818E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998965771666499	WITHOUT_CLASSIFICATION	1.0342283335011857E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998965771666499	WITHOUT_CLASSIFICATION	1.0342283335011857E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999982189344546	WITHOUT_CLASSIFICATION	1.781065545346153E-6	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9997592793272608	WITHOUT_CLASSIFICATION	2.4072067273909854E-4	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9999665589352713	WITHOUT_CLASSIFICATION	3.344106472870686E-5	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999987369312362	WITHOUT_CLASSIFICATION	1.2630687637909821E-6	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999991439392278	WITHOUT_CLASSIFICATION	8.560607721458391E-7	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999963970416943	WITHOUT_CLASSIFICATION	3.6029583057693002E-6	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9992758847734893	WITHOUT_CLASSIFICATION	7.2411522651071E-4	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999999412473568	WITHOUT_CLASSIFICATION	5.875264331023205E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999998728362655	WITHOUT_CLASSIFICATION	1.2716373450576756E-7	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999997201448267	WITHOUT_CLASSIFICATION	2.798551732609271E-7	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999274310025531	WITHOUT_CLASSIFICATION	7.256899744689778E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999997312571509	WITHOUT_CLASSIFICATION	2.687428491231074E-7	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999983846382665	WITHOUT_CLASSIFICATION	1.6153617333772342E-6	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999975950776899	WITHOUT_CLASSIFICATION	2.4049223100995406E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999649885035	WITHOUT_CLASSIFICATION	3.501149654469959E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999998866863867	WITHOUT_CLASSIFICATION	1.1331361328043521E-7	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9994534121162919	WITHOUT_CLASSIFICATION	5.465878837082211E-4	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999982302550604	WITHOUT_CLASSIFICATION	1.7697449395125331E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999976838171958	WITHOUT_CLASSIFICATION	2.316182804166523E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.999999341972349	WITHOUT_CLASSIFICATION	6.580276509920869E-7	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9996735281876576	WITHOUT_CLASSIFICATION	3.2647181234236205E-4	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999893365703371	WITHOUT_CLASSIFICATION	1.0663429663009301E-5	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999998756437225	WITHOUT_CLASSIFICATION	1.2435627752084535E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999986985634649	WITHOUT_CLASSIFICATION	1.3014365351293057E-6	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999986985634649	WITHOUT_CLASSIFICATION	1.3014365351293057E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996643265051	WITHOUT_CLASSIFICATION	3.3567349485714897E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999919562846226	WITHOUT_CLASSIFICATION	8.043715377441922E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999975684366672	WITHOUT_CLASSIFICATION	2.4315633328563746E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9999801685637412	WITHOUT_CLASSIFICATION	1.9831436258850954E-5	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999988413216455	WITHOUT_CLASSIFICATION	1.1586783544701101E-6	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999586977007541	WITHOUT_CLASSIFICATION	4.130229924595401E-5	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999995526688065	WITHOUT_CLASSIFICATION	4.47331193595009E-7	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.8337001033833278	DEFECT	0.1662998966166722	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999350062502058	WITHOUT_CLASSIFICATION	6.49937497941641E-5	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999981191737866	WITHOUT_CLASSIFICATION	1.8808262134605479E-6	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999998833581091	WITHOUT_CLASSIFICATION	1.166418909821356E-7	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999997940500354	WITHOUT_CLASSIFICATION	2.0594996471518524E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998841418829534	WITHOUT_CLASSIFICATION	1.1585811704666076E-4	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.999474629510013	WITHOUT_CLASSIFICATION	5.253704899869043E-4	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999998341971107	WITHOUT_CLASSIFICATION	1.6580288933228815E-7	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999998866863867	WITHOUT_CLASSIFICATION	1.1331361328043521E-7	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9998345782689515	WITHOUT_CLASSIFICATION	1.654217310485048E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999988320851511	WITHOUT_CLASSIFICATION	1.1679148489353816E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999925453646963	WITHOUT_CLASSIFICATION	7.454635303717273E-6	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9993970166562927	WITHOUT_CLASSIFICATION	6.029833437073784E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999204586858084	WITHOUT_CLASSIFICATION	7.954131419169286E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999919562846226	WITHOUT_CLASSIFICATION	8.043715377441922E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9997444596038202	WITHOUT_CLASSIFICATION	2.555403961798614E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998504814142455	WITHOUT_CLASSIFICATION	1.4951858575446329E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999993290990333	WITHOUT_CLASSIFICATION	6.709009665480457E-7	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9986501185382921	WITHOUT_CLASSIFICATION	0.0013498814617079469	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999997058364284	WITHOUT_CLASSIFICATION	2.941635715792802E-7	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9998615452805562	WITHOUT_CLASSIFICATION	1.3845471944391307E-4	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999970756140868	WITHOUT_CLASSIFICATION	2.9243859131347167E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999970756140868	WITHOUT_CLASSIFICATION	2.9243859131347167E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999975817231392	WITHOUT_CLASSIFICATION	2.41827686072833E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999975817231392	WITHOUT_CLASSIFICATION	2.41827686072833E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999975817231392	WITHOUT_CLASSIFICATION	2.41827686072833E-6	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9995424857262994	WITHOUT_CLASSIFICATION	4.575142737005952E-4	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.99999999954276	WITHOUT_CLASSIFICATION	4.5724003292704073E-10	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999914165917468	WITHOUT_CLASSIFICATION	8.583408253264437E-6	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999968382511358	WITHOUT_CLASSIFICATION	3.1617488641916954E-5	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999420963624747	WITHOUT_CLASSIFICATION	5.790363752524377E-5	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.999999972049824	WITHOUT_CLASSIFICATION	2.7950175925126316E-8	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999974338608376	WITHOUT_CLASSIFICATION	2.566139162354385E-6	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999984506098862	WITHOUT_CLASSIFICATION	1.5493901138734972E-6	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999596604673042	WITHOUT_CLASSIFICATION	4.03395326957695E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999252761331	WITHOUT_CLASSIFICATION	7.472386686914299E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999630332294	WITHOUT_CLASSIFICATION	3.69667705463323E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999919562846226	WITHOUT_CLASSIFICATION	8.043715377441922E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9998345782689515	WITHOUT_CLASSIFICATION	1.654217310485048E-4	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999925453646963	WITHOUT_CLASSIFICATION	7.454635303717273E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999986062520927	WITHOUT_CLASSIFICATION	1.3937479073049347E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9991807810928928	WITHOUT_CLASSIFICATION	8.192189071072233E-4	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999868344901	WITHOUT_CLASSIFICATION	1.3165509885804695E-8	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999868344901	WITHOUT_CLASSIFICATION	1.3165509885804695E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999986062520927	WITHOUT_CLASSIFICATION	1.3937479073049347E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999574639407	WITHOUT_CLASSIFICATION	4.253605925009085E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999997429149452	WITHOUT_CLASSIFICATION	2.570850547546037E-7	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999997170355109	WITHOUT_CLASSIFICATION	2.8296448907363106E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999952822131075	WITHOUT_CLASSIFICATION	4.717786892489315E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999370428625	WITHOUT_CLASSIFICATION	6.29571374869447E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999007658073545	WITHOUT_CLASSIFICATION	9.92341926454282E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997545588826	WITHOUT_CLASSIFICATION	2.4544111736344636E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999997545588826	WITHOUT_CLASSIFICATION	2.4544111736344636E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999958036872636	WITHOUT_CLASSIFICATION	4.19631273635876E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999994814268574	WITHOUT_CLASSIFICATION	5.185731425482467E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999995686694698	WITHOUT_CLASSIFICATION	4.313305302525379E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999204586858084	WITHOUT_CLASSIFICATION	7.954131419169286E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999252761331	WITHOUT_CLASSIFICATION	7.472386686914299E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999983157688058	WITHOUT_CLASSIFICATION	1.6842311942939043E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9986501185382921	WITHOUT_CLASSIFICATION	0.0013498814617079469	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999963638851495	WITHOUT_CLASSIFICATION	3.6361148505555347E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999988320851511	WITHOUT_CLASSIFICATION	1.1679148489353816E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999574639407	WITHOUT_CLASSIFICATION	4.253605925009085E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999574639407	WITHOUT_CLASSIFICATION	4.253605925009085E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999986062520927	WITHOUT_CLASSIFICATION	1.3937479073049347E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999997170355109	WITHOUT_CLASSIFICATION	2.8296448907363106E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999997429149452	WITHOUT_CLASSIFICATION	2.570850547546037E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999997429149452	WITHOUT_CLASSIFICATION	2.570850547546037E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999370428625	WITHOUT_CLASSIFICATION	6.29571374869447E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999370428625	WITHOUT_CLASSIFICATION	6.29571374869447E-8	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999991517082044	WITHOUT_CLASSIFICATION	8.482917956176593E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999441853521959	WITHOUT_CLASSIFICATION	5.5814647804252506E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999990658238056	WITHOUT_CLASSIFICATION	9.341761943655172E-7	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.999965592914665	WITHOUT_CLASSIFICATION	3.44070853349368E-5	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9997810282437896	WITHOUT_CLASSIFICATION	2.1897175621056337E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999613537096711	WITHOUT_CLASSIFICATION	3.864629032878409E-5	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999463891597178	WITHOUT_CLASSIFICATION	5.361084028222561E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999990021785369	WITHOUT_CLASSIFICATION	9.9782146313136E-7	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999990021785369	WITHOUT_CLASSIFICATION	9.9782146313136E-7	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999834765814686	WITHOUT_CLASSIFICATION	1.6523418531392887E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9998883551058085	WITHOUT_CLASSIFICATION	1.1164489419146763E-4	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999994808453139	WITHOUT_CLASSIFICATION	5.191546861329571E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999998995418786	WITHOUT_CLASSIFICATION	1.004581213640361E-7	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999979001631506	WITHOUT_CLASSIFICATION	2.09983684940046E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999444511994	WITHOUT_CLASSIFICATION	5.55488005882495E-8	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999859569862	WITHOUT_CLASSIFICATION	1.4043013711543266E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9646033099988658	WITHOUT_CLASSIFICATION	0.03539669000113425	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999998035859837	WITHOUT_CLASSIFICATION	1.9641401635332604E-7	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999996739531463	WITHOUT_CLASSIFICATION	3.2604685370017822E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999940134036595	WITHOUT_CLASSIFICATION	5.986596340506664E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999309247052	WITHOUT_CLASSIFICATION	6.907529484374906E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999309247052	WITHOUT_CLASSIFICATION	6.907529484374906E-8	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999998841163273	WITHOUT_CLASSIFICATION	1.1588367262492915E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999938533375149	WITHOUT_CLASSIFICATION	6.146662485174414E-6	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999630332294	WITHOUT_CLASSIFICATION	3.69667705463323E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999574639407	WITHOUT_CLASSIFICATION	4.253605925009085E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999574639407	WITHOUT_CLASSIFICATION	4.253605925009085E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999990986157593	WITHOUT_CLASSIFICATION	9.01384240745564E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999814127177863	WITHOUT_CLASSIFICATION	1.8587282213705452E-5	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999814127177863	WITHOUT_CLASSIFICATION	1.8587282213705452E-5	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9999643462598578	WITHOUT_CLASSIFICATION	3.565374014236233E-5	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999999541538485	WITHOUT_CLASSIFICATION	4.584615161262388E-8	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999998614966916	WITHOUT_CLASSIFICATION	1.3850330838757852E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999984339033131	WITHOUT_CLASSIFICATION	1.5660966868423414E-6	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999107158383	WITHOUT_CLASSIFICATION	8.928416168287939E-8	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999909079354746	WITHOUT_CLASSIFICATION	9.092064525303383E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999909079354746	WITHOUT_CLASSIFICATION	9.092064525303383E-6	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999992648524015	WITHOUT_CLASSIFICATION	7.351475983848078E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999930165336749	WITHOUT_CLASSIFICATION	6.983466325156652E-6	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999999744025845	WITHOUT_CLASSIFICATION	2.5597415514178934E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999998040404834	WITHOUT_CLASSIFICATION	1.9595951665702973E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999997866972403	WITHOUT_CLASSIFICATION	2.133027595604218E-7	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999995573955467	WITHOUT_CLASSIFICATION	4.4260445330689577E-7	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999931201078988	WITHOUT_CLASSIFICATION	6.879892101196641E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998866098195	WITHOUT_CLASSIFICATION	1.1339018042594308E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999555055830045	WITHOUT_CLASSIFICATION	4.449441699559885E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999765689417	WITHOUT_CLASSIFICATION	2.3431058277781982E-8	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999999963014021	WITHOUT_CLASSIFICATION	3.6985977779156563E-9	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999990986157593	WITHOUT_CLASSIFICATION	9.01384240745564E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999958277020871	WITHOUT_CLASSIFICATION	4.172297912929957E-6	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999971626185565	WITHOUT_CLASSIFICATION	2.837381443396085E-6	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999650533255189	WITHOUT_CLASSIFICATION	3.4946674481069026E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999996637766143	WITHOUT_CLASSIFICATION	3.3622338558709873E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.999997344224132	WITHOUT_CLASSIFICATION	2.655775867977237E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999978592675844	WITHOUT_CLASSIFICATION	2.1407324155397735E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999995681548	WITHOUT_CLASSIFICATION	4.31845303136541E-10	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999524458355252	WITHOUT_CLASSIFICATION	4.755416447470668E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999570753990422	WITHOUT_CLASSIFICATION	4.2924600957888695E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999269985336704	WITHOUT_CLASSIFICATION	7.300146632959377E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999688413210025	WITHOUT_CLASSIFICATION	3.115867899752002E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999958942925293	WITHOUT_CLASSIFICATION	4.105707470669873E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999998931665955	WITHOUT_CLASSIFICATION	1.0683340450448123E-7	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999858561124509	WITHOUT_CLASSIFICATION	1.4143887549108627E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999986124014436	WITHOUT_CLASSIFICATION	1.387598556362076E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999477067940067	WITHOUT_CLASSIFICATION	5.229320599321305E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999997269972646	WITHOUT_CLASSIFICATION	2.730027355036792E-7	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999956859577706	WITHOUT_CLASSIFICATION	4.314042229412268E-6	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999998873934357	WITHOUT_CLASSIFICATION	1.1260656432273666E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999813946317172	WITHOUT_CLASSIFICATION	1.8605368282827993E-5	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999869980385144	WITHOUT_CLASSIFICATION	1.30019614855221E-5	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999523834049849	WITHOUT_CLASSIFICATION	4.761659501520325E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999804521908552	WITHOUT_CLASSIFICATION	1.954780914483247E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999992105991349	WITHOUT_CLASSIFICATION	7.894008651777686E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999509676231	WITHOUT_CLASSIFICATION	4.90323769178125E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999984981315281	WITHOUT_CLASSIFICATION	1.5018684719135433E-6	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999985045735343	WITHOUT_CLASSIFICATION	1.4954264655742687E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999988012767768	WITHOUT_CLASSIFICATION	1.1987232231954852E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.999983714078482	WITHOUT_CLASSIFICATION	1.6285921518059903E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999804521908552	WITHOUT_CLASSIFICATION	1.954780914483247E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999509676231	WITHOUT_CLASSIFICATION	4.90323769178125E-8	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999509676231	WITHOUT_CLASSIFICATION	4.90323769178125E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999984981315281	WITHOUT_CLASSIFICATION	1.5018684719135433E-6	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999999416021226	WITHOUT_CLASSIFICATION	5.839787735126835E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.999999748712829	WITHOUT_CLASSIFICATION	2.5128717099856325E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.999999748712829	WITHOUT_CLASSIFICATION	2.5128717099856325E-7	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999915897903005	WITHOUT_CLASSIFICATION	8.410209699514164E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999789239140839	WITHOUT_CLASSIFICATION	2.1076085916071234E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999789239140839	WITHOUT_CLASSIFICATION	2.1076085916071234E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999991571383349	WITHOUT_CLASSIFICATION	8.428616651810308E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999992661451843	WITHOUT_CLASSIFICATION	7.33854815766126E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999401420536	WITHOUT_CLASSIFICATION	5.985794639121166E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999401420536	WITHOUT_CLASSIFICATION	5.985794639121166E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999893328350964	WITHOUT_CLASSIFICATION	1.0667164903553301E-5	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.99999924435418	WITHOUT_CLASSIFICATION	7.556458200011455E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999991425958904	WITHOUT_CLASSIFICATION	8.574041096456684E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999970971628893	WITHOUT_CLASSIFICATION	2.9028371106245188E-6	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999939938060116	WITHOUT_CLASSIFICATION	6.006193988300805E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.99998662952	WITHOUT_CLASSIFICATION	1.3370480000008442E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999976860487958	WITHOUT_CLASSIFICATION	2.313951204218951E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999970400743692	WITHOUT_CLASSIFICATION	2.9599256308740023E-6	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999768225443979	WITHOUT_CLASSIFICATION	2.317745560213196E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999991920666148	WITHOUT_CLASSIFICATION	8.079333850706517E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9999682724898233	WITHOUT_CLASSIFICATION	3.172751017668865E-5	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999256431583435	WITHOUT_CLASSIFICATION	7.435684165642244E-5	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9998335571315581	WITHOUT_CLASSIFICATION	1.6644286844198902E-4	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.99997665073185	WITHOUT_CLASSIFICATION	2.3349268149929513E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999955154712127	WITHOUT_CLASSIFICATION	4.484528787268185E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999847011026799	WITHOUT_CLASSIFICATION	1.529889732004015E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999993754326794	WITHOUT_CLASSIFICATION	6.245673205687948E-7	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999991765478731	WITHOUT_CLASSIFICATION	8.234521268753605E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999996985558622	WITHOUT_CLASSIFICATION	3.0144413780005436E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999829842622724	WITHOUT_CLASSIFICATION	1.7015737727659186E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999958942925293	WITHOUT_CLASSIFICATION	4.105707470669873E-6	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.999992109775152	WITHOUT_CLASSIFICATION	7.890224848025682E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999999398544954	WITHOUT_CLASSIFICATION	6.014550449138602E-8	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999999600171787	WITHOUT_CLASSIFICATION	3.998282130374194E-8	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999979413267267	WITHOUT_CLASSIFICATION	2.0586732732834314E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999935671810954	WITHOUT_CLASSIFICATION	6.432818904552384E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999998847421357	WITHOUT_CLASSIFICATION	1.152578643122612E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999999719526658	WITHOUT_CLASSIFICATION	2.8047334205887442E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999999907323545	WITHOUT_CLASSIFICATION	9.267645488105851E-9	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999997116209237	WITHOUT_CLASSIFICATION	2.8837907629238913E-7	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999929654880498	WITHOUT_CLASSIFICATION	7.034511950162087E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999981575476976	WITHOUT_CLASSIFICATION	1.84245230230335E-6	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999998643782375	WITHOUT_CLASSIFICATION	1.356217625812882E-7	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999939203171869	WITHOUT_CLASSIFICATION	6.0796828131450805E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999873211580633	WITHOUT_CLASSIFICATION	1.2678841936726269E-5	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.999999977481637	WITHOUT_CLASSIFICATION	2.2518362856503884E-8	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999996280345094	WITHOUT_CLASSIFICATION	3.719654905881788E-7	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999464113063692	WITHOUT_CLASSIFICATION	5.358869363077974E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.999998758700941	WITHOUT_CLASSIFICATION	1.2412990590380917E-6	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.999999085261947	WITHOUT_CLASSIFICATION	9.14738053080031E-7	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999968715729592	WITHOUT_CLASSIFICATION	3.128427040871576E-6	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999995276480332	WITHOUT_CLASSIFICATION	4.723519667492482E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999987475997155	WITHOUT_CLASSIFICATION	1.2524002845349604E-6	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999992558574262	WITHOUT_CLASSIFICATION	7.441425737184424E-7	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999984648122575	WITHOUT_CLASSIFICATION	1.5351877424261966E-6	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999924869502752	WITHOUT_CLASSIFICATION	7.513049724911216E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999921001631267	WITHOUT_CLASSIFICATION	7.89983687335069E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999967734232086	WITHOUT_CLASSIFICATION	3.226576791384482E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999985881856823	WITHOUT_CLASSIFICATION	1.4118143175978256E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999997236848568	WITHOUT_CLASSIFICATION	2.76315143130912E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999765689417	WITHOUT_CLASSIFICATION	2.3431058277781982E-8	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999765689417	WITHOUT_CLASSIFICATION	2.3431058277781982E-8	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999980318411646	WITHOUT_CLASSIFICATION	1.9681588352783896E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999985152692	WITHOUT_CLASSIFICATION	1.4847307895474039E-9	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999998994550925	WITHOUT_CLASSIFICATION	1.0054490748208013E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991373770062	WITHOUT_CLASSIFICATION	8.626229938616936E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999996315636429	WITHOUT_CLASSIFICATION	3.6843635710553823E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999732161687	WITHOUT_CLASSIFICATION	2.678383121774651E-8	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987136152511	WITHOUT_CLASSIFICATION	1.2863847488639768E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999988606612532	WITHOUT_CLASSIFICATION	1.139338746788885E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999959886432614	WITHOUT_CLASSIFICATION	4.011356738615879E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999732161687	WITHOUT_CLASSIFICATION	2.678383121774651E-8	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999977392766035	WITHOUT_CLASSIFICATION	2.2607233965194607E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999732161687	WITHOUT_CLASSIFICATION	2.678383121774651E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999732161687	WITHOUT_CLASSIFICATION	2.678383121774651E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999732161687	WITHOUT_CLASSIFICATION	2.678383121774651E-8	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999997845523333	WITHOUT_CLASSIFICATION	2.1544766675693047E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984770817727	WITHOUT_CLASSIFICATION	1.5229182272756586E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999923031774204	WITHOUT_CLASSIFICATION	7.696822579605558E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999923031774204	WITHOUT_CLASSIFICATION	7.696822579605558E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984770817727	WITHOUT_CLASSIFICATION	1.5229182272756586E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984770817727	WITHOUT_CLASSIFICATION	1.5229182272756586E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984770817727	WITHOUT_CLASSIFICATION	1.5229182272756586E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984770817727	WITHOUT_CLASSIFICATION	1.5229182272756586E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984770817727	WITHOUT_CLASSIFICATION	1.5229182272756586E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999909082883311	WITHOUT_CLASSIFICATION	9.09171166873888E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999909082883311	WITHOUT_CLASSIFICATION	9.09171166873888E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999909082883311	WITHOUT_CLASSIFICATION	9.09171166873888E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999909082883311	WITHOUT_CLASSIFICATION	9.09171166873888E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9999849157851337	WITHOUT_CLASSIFICATION	1.5084214866328646E-5	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999999566044232	WITHOUT_CLASSIFICATION	4.339557682719077E-8	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999987295500413	WITHOUT_CLASSIFICATION	1.2704499586900158E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999742645526413	WITHOUT_CLASSIFICATION	2.5735447358799504E-5	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999765711172386	WITHOUT_CLASSIFICATION	2.3428882761305586E-5	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999103725833379	WITHOUT_CLASSIFICATION	8.962741666210247E-5	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999945321630137	WITHOUT_CLASSIFICATION	5.467836986290082E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999940648971049	WITHOUT_CLASSIFICATION	5.935102895169733E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999775103538802	WITHOUT_CLASSIFICATION	2.248964611985697E-5	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999844211389367	WITHOUT_CLASSIFICATION	1.557886106325547E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999919064034801	WITHOUT_CLASSIFICATION	8.093596519894956E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999811111882972	WITHOUT_CLASSIFICATION	1.888881170272814E-5	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999990585463852	WITHOUT_CLASSIFICATION	9.414536147996424E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999997546459675	WITHOUT_CLASSIFICATION	2.4535403247016414E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974576877647	WITHOUT_CLASSIFICATION	2.5423122352600495E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.99999427706551	WITHOUT_CLASSIFICATION	5.722934489917159E-6	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.999997011009794	WITHOUT_CLASSIFICATION	2.9889902060529306E-6	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999884728519498	WITHOUT_CLASSIFICATION	1.152714805021653E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999534942320518	WITHOUT_CLASSIFICATION	4.650576794822503E-5	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999775005140641	WITHOUT_CLASSIFICATION	2.249948593595395E-5	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999338831385972	WITHOUT_CLASSIFICATION	6.611686140271294E-5	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999874786809722	WITHOUT_CLASSIFICATION	1.2521319027840359E-5	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999348153640717	WITHOUT_CLASSIFICATION	6.518463592825312E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999703320229915	WITHOUT_CLASSIFICATION	2.96679770086535E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.999909939971541	WITHOUT_CLASSIFICATION	9.006002845900096E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999997218467295	WITHOUT_CLASSIFICATION	2.7815327057922494E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999830387382	WITHOUT_CLASSIFICATION	1.6961261830510527E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999830387382	WITHOUT_CLASSIFICATION	1.6961261830510527E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999390336334	WITHOUT_CLASSIFICATION	6.096636661337165E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999996979582056	WITHOUT_CLASSIFICATION	3.020417943680242E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999996979582056	WITHOUT_CLASSIFICATION	3.020417943680242E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.99999983924042	WITHOUT_CLASSIFICATION	1.6075957995290145E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999989824094982	WITHOUT_CLASSIFICATION	1.0175905017792724E-6	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999989824094982	WITHOUT_CLASSIFICATION	1.0175905017792724E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999987061343415	WITHOUT_CLASSIFICATION	1.2938656585358417E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999987061343415	WITHOUT_CLASSIFICATION	1.2938656585358417E-6	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998066719458	WITHOUT_CLASSIFICATION	1.9332805420002583E-7	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999994852357393	WITHOUT_CLASSIFICATION	5.147642606948025E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999994852357393	WITHOUT_CLASSIFICATION	5.147642606948025E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999897101765408	WITHOUT_CLASSIFICATION	1.0289823459223389E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999906305064997	WITHOUT_CLASSIFICATION	9.369493500201692E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999835649576841	WITHOUT_CLASSIFICATION	1.643504231580411E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999920461995176	WITHOUT_CLASSIFICATION	7.953800482364386E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999885975159374	WITHOUT_CLASSIFICATION	1.1402484062598302E-5	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999988651756498	WITHOUT_CLASSIFICATION	1.1348243501550743E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999959386786839	WITHOUT_CLASSIFICATION	4.0613213161515674E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999856945502196	WITHOUT_CLASSIFICATION	1.4305449780395711E-5	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999765340867263	WITHOUT_CLASSIFICATION	2.3465913273730553E-5	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999987875331363	WITHOUT_CLASSIFICATION	1.2124668636125323E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999987330839597	WITHOUT_CLASSIFICATION	1.2669160402521605E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999990189640936	WITHOUT_CLASSIFICATION	9.810359064178863E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999988330476483	WITHOUT_CLASSIFICATION	1.1669523517175939E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991373770062	WITHOUT_CLASSIFICATION	8.626229938616936E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999988330476483	WITHOUT_CLASSIFICATION	1.1669523517175939E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999990617381472	WITHOUT_CLASSIFICATION	9.382618527487346E-7	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999989141691729	WITHOUT_CLASSIFICATION	1.0858308271785316E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999994177351917	WITHOUT_CLASSIFICATION	5.822648081590707E-7	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.999993579050586	WITHOUT_CLASSIFICATION	6.420949414054014E-6	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999969037588912	WITHOUT_CLASSIFICATION	3.0962411088700923E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999964606570205	WITHOUT_CLASSIFICATION	3.539342979463091E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999993710640604	WITHOUT_CLASSIFICATION	6.28935939429357E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999990434201297	WITHOUT_CLASSIFICATION	9.56579870281774E-7	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999972825899219	WITHOUT_CLASSIFICATION	2.7174100780566453E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999973491817616	WITHOUT_CLASSIFICATION	2.650818238493291E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999991633816842	WITHOUT_CLASSIFICATION	8.366183157797631E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999969051272182	WITHOUT_CLASSIFICATION	3.094872781849513E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978866013383	WITHOUT_CLASSIFICATION	2.1133986618136654E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999949402605232	WITHOUT_CLASSIFICATION	5.059739476871436E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999949402605232	WITHOUT_CLASSIFICATION	5.059739476871436E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999838916624854	WITHOUT_CLASSIFICATION	1.6108337514663362E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999818180006009	WITHOUT_CLASSIFICATION	1.8181999399039163E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999818180006009	WITHOUT_CLASSIFICATION	1.8181999399039163E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999838916624854	WITHOUT_CLASSIFICATION	1.6108337514663362E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974576877647	WITHOUT_CLASSIFICATION	2.5423122352600495E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999849111098291	WITHOUT_CLASSIFICATION	1.5088890170839996E-5	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999997139126027	WITHOUT_CLASSIFICATION	2.860873973601687E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9996775623402658	WITHOUT_CLASSIFICATION	3.2243765973408167E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.99999872021281	WITHOUT_CLASSIFICATION	1.2797871900330793E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999990770151904	WITHOUT_CLASSIFICATION	9.229848095823594E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999956298661854	WITHOUT_CLASSIFICATION	4.370133814497359E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999995049719829	WITHOUT_CLASSIFICATION	4.95028017106775E-6	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999957461429182	WITHOUT_CLASSIFICATION	4.253857081811335E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999992685636602	WITHOUT_CLASSIFICATION	7.314363399185381E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998120695051	WITHOUT_CLASSIFICATION	1.8793049496759168E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999999526724981	WITHOUT_CLASSIFICATION	4.7327502025254193E-8	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999570046586651	WITHOUT_CLASSIFICATION	4.299534133488638E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999992061422832	WITHOUT_CLASSIFICATION	7.938577167790934E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999992061422832	WITHOUT_CLASSIFICATION	7.938577167790934E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999960657509863	WITHOUT_CLASSIFICATION	3.934249013775365E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999960657509863	WITHOUT_CLASSIFICATION	3.934249013775365E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999864149229031	WITHOUT_CLASSIFICATION	1.3585077096936285E-5	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999911788626098	WITHOUT_CLASSIFICATION	8.821137390112068E-6	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999981424045024	WITHOUT_CLASSIFICATION	1.857595497659793E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999996112403747	WITHOUT_CLASSIFICATION	3.887596252624856E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999997212136744	WITHOUT_CLASSIFICATION	2.78786325614346E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999999612012127	WITHOUT_CLASSIFICATION	3.879878720312354E-8	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999992685636602	WITHOUT_CLASSIFICATION	7.314363399185381E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998120695051	WITHOUT_CLASSIFICATION	1.8793049496759168E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999999526724981	WITHOUT_CLASSIFICATION	4.7327502025254193E-8	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999989999972521	WITHOUT_CLASSIFICATION	1.000002747942937E-6	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999999447027081	WITHOUT_CLASSIFICATION	5.529729175828243E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999998902545446	WITHOUT_CLASSIFICATION	1.0974545544963662E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999996217909866	WITHOUT_CLASSIFICATION	3.7820901343205553E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999996399959037	WITHOUT_CLASSIFICATION	3.6000409643125447E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999955230061487	WITHOUT_CLASSIFICATION	4.476993851326682E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999964899126842	WITHOUT_CLASSIFICATION	3.5100873157722153E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999999402436538	WITHOUT_CLASSIFICATION	5.975634623328626E-8	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.999999987055165	WITHOUT_CLASSIFICATION	1.2944834961997058E-8	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999990418395399	WITHOUT_CLASSIFICATION	9.58160460031625E-7	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999996829671667	WITHOUT_CLASSIFICATION	3.1703283337951717E-7	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999998072441826	WITHOUT_CLASSIFICATION	1.927558173387877E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999961259775432	WITHOUT_CLASSIFICATION	3.874022456834154E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.999972785295029	WITHOUT_CLASSIFICATION	2.7214704970960857E-5	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999941269835847	WITHOUT_CLASSIFICATION	5.87301641526782E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999943018091891	WITHOUT_CLASSIFICATION	5.698190810886587E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999979063782456	WITHOUT_CLASSIFICATION	2.0936217543791613E-6	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999979063782456	WITHOUT_CLASSIFICATION	2.0936217543791613E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999955334665	WITHOUT_CLASSIFICATION	4.466533496273976E-8	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999983139211722	WITHOUT_CLASSIFICATION	1.6860788277566514E-6	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9999722386298059	WITHOUT_CLASSIFICATION	2.7761370194127757E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999940377639359	WITHOUT_CLASSIFICATION	5.962236064157344E-6	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999871737527806	WITHOUT_CLASSIFICATION	1.2826247219331E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993054552905	WITHOUT_CLASSIFICATION	6.9454470946003E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999996510937038	WITHOUT_CLASSIFICATION	3.489062962640272E-7	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999997292586159	WITHOUT_CLASSIFICATION	2.707413840826476E-7	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999980917131339	WITHOUT_CLASSIFICATION	1.9082868660813503E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999997667149396	WITHOUT_CLASSIFICATION	2.3328506038673591E-7	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999955772034997	WITHOUT_CLASSIFICATION	4.422796500216669E-6	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999991006555341	WITHOUT_CLASSIFICATION	8.99344465965166E-7	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999998303064105	WITHOUT_CLASSIFICATION	1.6969358957335033E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.99999574133326	WITHOUT_CLASSIFICATION	4.258666740000033E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999883451219934	WITHOUT_CLASSIFICATION	1.165487800659571E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999995960879282	WITHOUT_CLASSIFICATION	4.0391207168682023E-7	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999986627623042	WITHOUT_CLASSIFICATION	1.3372376957103038E-6	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999994940699057	WITHOUT_CLASSIFICATION	5.059300942162484E-7	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999993336442304	WITHOUT_CLASSIFICATION	6.663557695445698E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.999999885880706	WITHOUT_CLASSIFICATION	1.1411929398302506E-7	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9998713604278695	WITHOUT_CLASSIFICATION	1.2863957213048277E-4	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999444418186806	WITHOUT_CLASSIFICATION	5.555818131927396E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999991295116814	WITHOUT_CLASSIFICATION	8.704883186307232E-7	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999951673759	WITHOUT_CLASSIFICATION	4.832624084007274E-9	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999780757066	WITHOUT_CLASSIFICATION	2.1924293412907868E-8	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999994879667208	WITHOUT_CLASSIFICATION	5.120332791986042E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999976034883606	WITHOUT_CLASSIFICATION	2.3965116394667675E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999821103231857	WITHOUT_CLASSIFICATION	1.788967681429445E-5	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999996511224285	WITHOUT_CLASSIFICATION	3.4887757154882157E-7	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999864149229031	WITHOUT_CLASSIFICATION	1.3585077096936285E-5	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999911788626098	WITHOUT_CLASSIFICATION	8.821137390112068E-6	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999976456577746	WITHOUT_CLASSIFICATION	2.3543422253822975E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980315932666	WITHOUT_CLASSIFICATION	1.968406733288906E-6	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.999999604230952	WITHOUT_CLASSIFICATION	3.957690479544004E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996525944963	WITHOUT_CLASSIFICATION	3.474055037839E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999993669463553	WITHOUT_CLASSIFICATION	6.330536447292963E-7	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.99999796027017	WITHOUT_CLASSIFICATION	2.0397298299331426E-6	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999992878350669	WITHOUT_CLASSIFICATION	7.121649331781633E-7	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997211781305	WITHOUT_CLASSIFICATION	2.788218694651614E-7	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999995422485726	WITHOUT_CLASSIFICATION	4.5775142740263374E-7	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999973400062693	WITHOUT_CLASSIFICATION	2.659993730675196E-6	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999946479949826	WITHOUT_CLASSIFICATION	5.352005017428417E-6	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999984886063339	WITHOUT_CLASSIFICATION	1.511393666073872E-6	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999994573497584	WITHOUT_CLASSIFICATION	5.4265024157936E-7	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999986598593675	WITHOUT_CLASSIFICATION	1.3401406324818126E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999980800453786	WITHOUT_CLASSIFICATION	1.9199546214369033E-6	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999921481979008	WITHOUT_CLASSIFICATION	7.851802099185056E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999999086993695	WITHOUT_CLASSIFICATION	9.13006304461935E-8	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999990094573414	WITHOUT_CLASSIFICATION	9.905426586103523E-7	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999997215514119	WITHOUT_CLASSIFICATION	2.7844858811890254E-7	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999977665087645	WITHOUT_CLASSIFICATION	2.233491235534019E-6	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999994684867436	WITHOUT_CLASSIFICATION	5.315132563132153E-7	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999998218189787	WITHOUT_CLASSIFICATION	1.7818102135126403E-7	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999995449273529	WITHOUT_CLASSIFICATION	4.5507264710165336E-7	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.999999654891537	WITHOUT_CLASSIFICATION	3.451084629766627E-7	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9999992222793143	WITHOUT_CLASSIFICATION	7.777206857946746E-7	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9999906031756179	WITHOUT_CLASSIFICATION	9.396824382061609E-6	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.99999979734056	WITHOUT_CLASSIFICATION	2.0265944000060192E-7	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999988514632393	WITHOUT_CLASSIFICATION	1.1485367606807731E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999982799618085	WITHOUT_CLASSIFICATION	1.7200381914776275E-6	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.999997198445636	WITHOUT_CLASSIFICATION	2.801554364027203E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999983679557837	WITHOUT_CLASSIFICATION	1.6320442162912054E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999871474231354	WITHOUT_CLASSIFICATION	1.28525768646141E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999997988509739	WITHOUT_CLASSIFICATION	2.0114902609457974E-7	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999969155779346	WITHOUT_CLASSIFICATION	3.08442206538222E-6	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999925876914226	WITHOUT_CLASSIFICATION	7.41230857734778E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999997151485877	WITHOUT_CLASSIFICATION	2.8485141240392587E-7	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.999998258586214	WITHOUT_CLASSIFICATION	1.741413786051873E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999993944608209	WITHOUT_CLASSIFICATION	6.055391790924527E-7	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999997818513457	WITHOUT_CLASSIFICATION	2.1814865430704253E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999975146061783	WITHOUT_CLASSIFICATION	2.485393821772123E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999934132290638	WITHOUT_CLASSIFICATION	6.586770936313025E-6	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999964463335685	WITHOUT_CLASSIFICATION	3.5536664313623783E-6	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.999994078793119	WITHOUT_CLASSIFICATION	5.92120688103913E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9997329172657011	WITHOUT_CLASSIFICATION	2.670827342988925E-4	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999904657944256	WITHOUT_CLASSIFICATION	9.534205574360212E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999849226252294	WITHOUT_CLASSIFICATION	1.5077374770621798E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9988680332285371	WITHOUT_CLASSIFICATION	0.001131966771462877	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9995838080547228	WITHOUT_CLASSIFICATION	4.161919452772285E-4	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9989043136703338	WITHOUT_CLASSIFICATION	0.0010956863296661522	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9992366915953268	WITHOUT_CLASSIFICATION	7.633084046732178E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999691458065645	WITHOUT_CLASSIFICATION	3.0854193435493285E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999691458065645	WITHOUT_CLASSIFICATION	3.0854193435493285E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999990995986373	WITHOUT_CLASSIFICATION	9.004013626225284E-7	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999990995986373	WITHOUT_CLASSIFICATION	9.004013626225284E-7	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9997810862407561	WITHOUT_CLASSIFICATION	2.18913759243876E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.999910545163797	WITHOUT_CLASSIFICATION	8.945483620312874E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999998049838246	WITHOUT_CLASSIFICATION	1.9501617538242844E-7	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999998049838246	WITHOUT_CLASSIFICATION	1.9501617538242844E-7	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999754303908329	WITHOUT_CLASSIFICATION	2.4569609167152432E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999943723012663	WITHOUT_CLASSIFICATION	5.627698733599119E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999994765172275	WITHOUT_CLASSIFICATION	5.234827725454602E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999524961851529	WITHOUT_CLASSIFICATION	4.750381484719887E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999973413193811	WITHOUT_CLASSIFICATION	2.6586806188835734E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9998278610983311	WITHOUT_CLASSIFICATION	1.721389016688673E-4	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999881918741039	WITHOUT_CLASSIFICATION	1.1808125896078996E-5	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.999995861092126	WITHOUT_CLASSIFICATION	4.1389078740771205E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999813847559639	WITHOUT_CLASSIFICATION	1.861524403610462E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999952673962932	WITHOUT_CLASSIFICATION	4.732603706756821E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999903240632535	WITHOUT_CLASSIFICATION	9.675936746476764E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999954814186275	WITHOUT_CLASSIFICATION	4.518581372584879E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999962518875323	WITHOUT_CLASSIFICATION	3.748112467781148E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999970418179311	WITHOUT_CLASSIFICATION	2.9581820688578035E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999988601933216	WITHOUT_CLASSIFICATION	1.13980667842369E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996953367278	WITHOUT_CLASSIFICATION	3.0466327212353736E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999943723012663	WITHOUT_CLASSIFICATION	5.627698733599119E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999994765172275	WITHOUT_CLASSIFICATION	5.234827725454602E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999524961851529	WITHOUT_CLASSIFICATION	4.750381484719887E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999973413193811	WITHOUT_CLASSIFICATION	2.6586806188835734E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9998278610983311	WITHOUT_CLASSIFICATION	1.721389016688673E-4	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999981213854443	WITHOUT_CLASSIFICATION	1.8786145557112045E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999963368930789	WITHOUT_CLASSIFICATION	3.6631069211108433E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999997196721457	WITHOUT_CLASSIFICATION	2.803278542101367E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999837348790693	WITHOUT_CLASSIFICATION	1.6265120930561352E-5	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999959600090641	WITHOUT_CLASSIFICATION	4.039990935959185E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999778795021342	WITHOUT_CLASSIFICATION	2.2120497865811733E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.999996651532556	WITHOUT_CLASSIFICATION	3.3484674441124913E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9998577765954197	WITHOUT_CLASSIFICATION	1.4222340458022674E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999963426266736	WITHOUT_CLASSIFICATION	3.6573733264722593E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999784501003962	WITHOUT_CLASSIFICATION	2.1549899603808686E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999994599482543	WITHOUT_CLASSIFICATION	5.400517456711067E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.999995861092126	WITHOUT_CLASSIFICATION	4.1389078740771205E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999947114946283	WITHOUT_CLASSIFICATION	5.288505371828203E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.999999092159529	WITHOUT_CLASSIFICATION	9.078404709382425E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.999999092159529	WITHOUT_CLASSIFICATION	9.078404709382425E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999989234788395	WITHOUT_CLASSIFICATION	1.0765211605566039E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999981679105675	WITHOUT_CLASSIFICATION	1.8320894324475515E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999993805588112	WITHOUT_CLASSIFICATION	6.194411888794601E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999993805588112	WITHOUT_CLASSIFICATION	6.194411888794601E-7	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.999999734794528	WITHOUT_CLASSIFICATION	2.6520547212300773E-7	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999997610368346	WITHOUT_CLASSIFICATION	2.38963165313805E-7	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999988784870131	WITHOUT_CLASSIFICATION	1.1215129868955727E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999907830670243	WITHOUT_CLASSIFICATION	9.216932975765424E-6	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999884841446881	WITHOUT_CLASSIFICATION	1.1515855311922234E-5	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999941862923406	WITHOUT_CLASSIFICATION	5.81370765943079E-6	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999984023060542	WITHOUT_CLASSIFICATION	1.5976939457625411E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999974915194335	WITHOUT_CLASSIFICATION	2.508480566403381E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999989249391028	WITHOUT_CLASSIFICATION	1.0750608971954726E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999851791457405	WITHOUT_CLASSIFICATION	1.4820854259571193E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999990286767667	WITHOUT_CLASSIFICATION	9.7132323331387E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999985432624181	WITHOUT_CLASSIFICATION	1.4567375819048046E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999996411089886	WITHOUT_CLASSIFICATION	3.5889101135419167E-7	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999998124044414	WITHOUT_CLASSIFICATION	1.8759555850306138E-7	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999996477703108	WITHOUT_CLASSIFICATION	3.522296892802431E-7	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999996546409469	WITHOUT_CLASSIFICATION	3.4535905310929655E-7	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999993633480064	WITHOUT_CLASSIFICATION	6.366519936274103E-7	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999985719232785	WITHOUT_CLASSIFICATION	1.4280767215504322E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999889765885641	WITHOUT_CLASSIFICATION	1.1023411435830818E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999998537078979	WITHOUT_CLASSIFICATION	1.462921020983322E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999934955930495	WITHOUT_CLASSIFICATION	6.504406950554814E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999997528537475	WITHOUT_CLASSIFICATION	2.4714625236746735E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999952673962932	WITHOUT_CLASSIFICATION	4.732603706756821E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999903240632535	WITHOUT_CLASSIFICATION	9.675936746476764E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999965920163499	WITHOUT_CLASSIFICATION	3.407983650130025E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999954814186275	WITHOUT_CLASSIFICATION	4.518581372584879E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999962518875323	WITHOUT_CLASSIFICATION	3.748112467781148E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999970418179311	WITHOUT_CLASSIFICATION	2.9581820688578035E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9996899340848999	WITHOUT_CLASSIFICATION	3.100659151001594E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999967593348867	WITHOUT_CLASSIFICATION	3.240665113221159E-6	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999984991540289	WITHOUT_CLASSIFICATION	1.5008459710433934E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999998397061491	WITHOUT_CLASSIFICATION	1.6029385077893632E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999945042057976	WITHOUT_CLASSIFICATION	5.495794202429538E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999943891184123	WITHOUT_CLASSIFICATION	5.610881587610063E-6	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999989608363294	WITHOUT_CLASSIFICATION	1.0391636705675803E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999973148843072	WITHOUT_CLASSIFICATION	2.6851156928130852E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999925261339718	WITHOUT_CLASSIFICATION	7.4738660281609275E-6	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999943787765705	WITHOUT_CLASSIFICATION	5.621223429447141E-6	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999896928280825	WITHOUT_CLASSIFICATION	1.030717191765746E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.999993699331565	WITHOUT_CLASSIFICATION	6.300668435044449E-6	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999526366710816	WITHOUT_CLASSIFICATION	4.736332891844243E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999435512075	WITHOUT_CLASSIFICATION	5.644879259832644E-8	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999996850328772	WITHOUT_CLASSIFICATION	3.149671227511582E-7	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.999999599558299	WITHOUT_CLASSIFICATION	4.004417010136236E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999093524463	WITHOUT_CLASSIFICATION	9.06475536200708E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999993292079848	WITHOUT_CLASSIFICATION	6.707920151918078E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996181670955	WITHOUT_CLASSIFICATION	3.8183290450745556E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999997936253913	WITHOUT_CLASSIFICATION	2.063746087915852E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999994395250129	WITHOUT_CLASSIFICATION	5.604749871053854E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.999999583810309	WITHOUT_CLASSIFICATION	4.1618969110370946E-7	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999996043376392	WITHOUT_CLASSIFICATION	3.956623607606044E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999985625729358	WITHOUT_CLASSIFICATION	1.437427064133121E-6	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.999999306132081	WITHOUT_CLASSIFICATION	6.938679189821327E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999927553984875	WITHOUT_CLASSIFICATION	7.244601512468808E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999965029100946	WITHOUT_CLASSIFICATION	3.497089905372635E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999985524582148	WITHOUT_CLASSIFICATION	1.4475417852638916E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999888320134475	WITHOUT_CLASSIFICATION	1.1167986552556873E-5	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999987943896416	WITHOUT_CLASSIFICATION	1.2056103583613653E-6	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999978572861313	WITHOUT_CLASSIFICATION	2.1427138686502203E-6	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999932247074274	WITHOUT_CLASSIFICATION	6.775292572670146E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999993576045291	WITHOUT_CLASSIFICATION	6.423954708832555E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999988783174287	WITHOUT_CLASSIFICATION	1.1216825712974907E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999998507584306	WITHOUT_CLASSIFICATION	1.4924156938265418E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999996990288358	WITHOUT_CLASSIFICATION	3.0097116419869743E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999999536938764	WITHOUT_CLASSIFICATION	4.63061236001288E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999991433245526	WITHOUT_CLASSIFICATION	8.566754473514813E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999978025361127	WITHOUT_CLASSIFICATION	2.1974638872974815E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999222448997755	WITHOUT_CLASSIFICATION	7.775510022435238E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999222448997755	WITHOUT_CLASSIFICATION	7.775510022435238E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.999976820555015	WITHOUT_CLASSIFICATION	2.317944498508919E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999996315636429	WITHOUT_CLASSIFICATION	3.6843635710553823E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987136152511	WITHOUT_CLASSIFICATION	1.2863847488639768E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999997046612465	WITHOUT_CLASSIFICATION	2.9533875349668347E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999991616750085	WITHOUT_CLASSIFICATION	8.383249915474626E-7	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999781028381102	WITHOUT_CLASSIFICATION	2.1897161889928702E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999992277986933	WITHOUT_CLASSIFICATION	7.722013067371372E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999992277986933	WITHOUT_CLASSIFICATION	7.722013067371372E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999992277986933	WITHOUT_CLASSIFICATION	7.722013067371372E-7	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999927158137062	WITHOUT_CLASSIFICATION	7.284186293799428E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999956726950309	WITHOUT_CLASSIFICATION	4.327304969120511E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999789053064391	WITHOUT_CLASSIFICATION	2.1094693561022912E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999789053064391	WITHOUT_CLASSIFICATION	2.1094693561022912E-5	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.99999968019002	WITHOUT_CLASSIFICATION	3.198099800357155E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999996284454926	WITHOUT_CLASSIFICATION	3.7155450733653345E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999995548085552	WITHOUT_CLASSIFICATION	4.451914447500406E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999965679054738	WITHOUT_CLASSIFICATION	3.432094526285158E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.999998493502988	WITHOUT_CLASSIFICATION	1.5064970119847037E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999976349434436	WITHOUT_CLASSIFICATION	2.3650565564280197E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.99999943575155	WITHOUT_CLASSIFICATION	5.64248450013144E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.999999464986096	WITHOUT_CLASSIFICATION	5.350139039410339E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999984526067447	WITHOUT_CLASSIFICATION	1.5473932553014757E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999992214505233	WITHOUT_CLASSIFICATION	7.785494767376947E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.999999079218352	WITHOUT_CLASSIFICATION	9.207816481805626E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9999505669195315	WITHOUT_CLASSIFICATION	4.9433080468438715E-5	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999638374460575	WITHOUT_CLASSIFICATION	3.616255394255461E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9999861159308304	WITHOUT_CLASSIFICATION	1.388406916953E-5	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999797126685148	WITHOUT_CLASSIFICATION	2.0287331485178913E-5	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.999952484990379	WITHOUT_CLASSIFICATION	4.751500962104125E-5	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.999979978451825	WITHOUT_CLASSIFICATION	2.0021548175042326E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999079160132	WITHOUT_CLASSIFICATION	9.208398682764105E-8	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999979012226171	WITHOUT_CLASSIFICATION	2.09877738300823E-6	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999989237496675	WITHOUT_CLASSIFICATION	1.0762503325435197E-6	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999992941783019	WITHOUT_CLASSIFICATION	7.058216981327305E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999989925430319	WITHOUT_CLASSIFICATION	1.007456968075415E-6	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999963001084291	WITHOUT_CLASSIFICATION	3.6998915709838966E-6	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999984644884637	WITHOUT_CLASSIFICATION	1.535511536295021E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999905775469607	WITHOUT_CLASSIFICATION	9.422453039290999E-6	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999997174587584	WITHOUT_CLASSIFICATION	2.825412416439871E-7	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999987357387149	WITHOUT_CLASSIFICATION	1.2642612850982964E-6	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.999998637468326	WITHOUT_CLASSIFICATION	1.3625316741023142E-6	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999994061894711	WITHOUT_CLASSIFICATION	5.938105289177067E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999995862845813	WITHOUT_CLASSIFICATION	4.137154186598848E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999998322270328	WITHOUT_CLASSIFICATION	1.677729671677532E-7	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998056822086	WITHOUT_CLASSIFICATION	1.943177914738144E-7	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999994858415902	WITHOUT_CLASSIFICATION	5.141584098035506E-7	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999997003569214	WITHOUT_CLASSIFICATION	2.996430785544056E-7	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999955551140007	WITHOUT_CLASSIFICATION	4.444885999259334E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999891828386621	WITHOUT_CLASSIFICATION	1.0817161337870176E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999955719427395	WITHOUT_CLASSIFICATION	4.428057260600724E-6	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999991343827108	WITHOUT_CLASSIFICATION	8.656172891775291E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.999999183667191	WITHOUT_CLASSIFICATION	8.163328089546722E-7	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999978506417428	WITHOUT_CLASSIFICATION	2.1493582570189704E-6	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999991081908136	WITHOUT_CLASSIFICATION	8.918091864162191E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999996985558622	WITHOUT_CLASSIFICATION	3.0144413780005436E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999981753549325	WITHOUT_CLASSIFICATION	1.8246450673688754E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999967734232086	WITHOUT_CLASSIFICATION	3.226576791384482E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999985881856823	WITHOUT_CLASSIFICATION	1.4118143175978256E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991373770062	WITHOUT_CLASSIFICATION	8.626229938616936E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999999536938764	WITHOUT_CLASSIFICATION	4.63061236001288E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999905775469607	WITHOUT_CLASSIFICATION	9.422453039290999E-6	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999995801449935	WITHOUT_CLASSIFICATION	4.1985500643441916E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999988296837684	WITHOUT_CLASSIFICATION	1.1703162316797231E-6	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999998459862104	WITHOUT_CLASSIFICATION	1.540137896024535E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999988667018622	WITHOUT_CLASSIFICATION	1.1332981378312658E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999997020305877	WITHOUT_CLASSIFICATION	2.9796941225157757E-7	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999960468883227	WITHOUT_CLASSIFICATION	3.95311167727458E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999996767563755	WITHOUT_CLASSIFICATION	3.232436245495724E-7	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999993622847381	WITHOUT_CLASSIFICATION	6.377152618485153E-7	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999993657084627	WITHOUT_CLASSIFICATION	6.34291537163328E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999996614423294	WITHOUT_CLASSIFICATION	3.385576705977281E-7	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999998308068296	WITHOUT_CLASSIFICATION	1.6919317032357183E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999996767563755	WITHOUT_CLASSIFICATION	3.232436245495724E-7	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.999999909632753	WITHOUT_CLASSIFICATION	9.036724702668872E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999999074860454	WITHOUT_CLASSIFICATION	9.251395465640989E-8	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999995910011885	WITHOUT_CLASSIFICATION	4.089988114886979E-7	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999993605687871	WITHOUT_CLASSIFICATION	6.394312128126828E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999990447944972	WITHOUT_CLASSIFICATION	9.55205502798208E-7	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999942067529	WITHOUT_CLASSIFICATION	5.793247058820997E-9	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999942067529	WITHOUT_CLASSIFICATION	5.793247058820997E-9	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999961091610682	WITHOUT_CLASSIFICATION	3.890838931838822E-6	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999976031384411	WITHOUT_CLASSIFICATION	2.396861558846836E-6	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999976031384411	WITHOUT_CLASSIFICATION	2.396861558846836E-6	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999708969527	WITHOUT_CLASSIFICATION	2.910304743176129E-8	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.999999918235192	WITHOUT_CLASSIFICATION	8.176480803319261E-8	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999434797124	WITHOUT_CLASSIFICATION	5.65202876506773E-8	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999981846737218	WITHOUT_CLASSIFICATION	1.8153262781783214E-6	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999968492434383	WITHOUT_CLASSIFICATION	3.150756561582932E-6	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999989585755534	WITHOUT_CLASSIFICATION	1.0414244465531359E-6	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999994939046332	WITHOUT_CLASSIFICATION	5.060953668302003E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999979795958638	WITHOUT_CLASSIFICATION	2.020404136209452E-6	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999932138501313	WITHOUT_CLASSIFICATION	6.786149868613567E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999935880756258	WITHOUT_CLASSIFICATION	6.411924374254465E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999992951011435	WITHOUT_CLASSIFICATION	7.048988566343584E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999995328225799	WITHOUT_CLASSIFICATION	4.6717742015564896E-7	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999963291403645	WITHOUT_CLASSIFICATION	3.670859635434834E-6	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999988043182874	WITHOUT_CLASSIFICATION	1.1956817126776933E-6	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999972715348474	WITHOUT_CLASSIFICATION	2.728465152569098E-6	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999974868368843	WITHOUT_CLASSIFICATION	2.513163115816114E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999964834944959	WITHOUT_CLASSIFICATION	3.51650550405796E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999829842622724	WITHOUT_CLASSIFICATION	1.7015737727659186E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999829842622724	WITHOUT_CLASSIFICATION	1.7015737727659186E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999958942925293	WITHOUT_CLASSIFICATION	4.105707470669873E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999935671810954	WITHOUT_CLASSIFICATION	6.432818904552384E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999958942925293	WITHOUT_CLASSIFICATION	4.105707470669873E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999958942925293	WITHOUT_CLASSIFICATION	4.105707470669873E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999958942925293	WITHOUT_CLASSIFICATION	4.105707470669873E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999996315636429	WITHOUT_CLASSIFICATION	3.6843635710553823E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999987136152511	WITHOUT_CLASSIFICATION	1.2863847488639768E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999998570257932	WITHOUT_CLASSIFICATION	1.4297420677602715E-7	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999997988509739	WITHOUT_CLASSIFICATION	2.0114902609457974E-7	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999851791457405	WITHOUT_CLASSIFICATION	1.4820854259571193E-5	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999889765885641	WITHOUT_CLASSIFICATION	1.1023411435830818E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999998537078979	WITHOUT_CLASSIFICATION	1.462921020983322E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999996116334288	WITHOUT_CLASSIFICATION	3.883665712352581E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999997020305877	WITHOUT_CLASSIFICATION	2.9796941225157757E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999996614423294	WITHOUT_CLASSIFICATION	3.385576705977281E-7	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999999280007226	WITHOUT_CLASSIFICATION	7.19992774877778E-8	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999995787782673	WITHOUT_CLASSIFICATION	4.2122173276922227E-7	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.999997559165886	WITHOUT_CLASSIFICATION	2.440834114082972E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.999997938216073	WITHOUT_CLASSIFICATION	2.0617839269376365E-6	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999998564985207	WITHOUT_CLASSIFICATION	1.4350147921774165E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999997869045767	WITHOUT_CLASSIFICATION	2.1309542322621983E-7	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999990416296282	WITHOUT_CLASSIFICATION	9.583703717306976E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999999918555539	WITHOUT_CLASSIFICATION	8.144446053955876E-9	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999903794726968	WITHOUT_CLASSIFICATION	9.620527303179408E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999997309387283	WITHOUT_CLASSIFICATION	2.6906127173475757E-7	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999987088379505	WITHOUT_CLASSIFICATION	1.291162049603423E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999977327297471	WITHOUT_CLASSIFICATION	2.2672702528156465E-6	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999990916505367	WITHOUT_CLASSIFICATION	9.083494634062452E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999988117099644	WITHOUT_CLASSIFICATION	1.1882900356127452E-6	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999991831170453	WITHOUT_CLASSIFICATION	8.168829547692718E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999977451609733	WITHOUT_CLASSIFICATION	2.2548390266569214E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999993307421078	WITHOUT_CLASSIFICATION	6.692578923297671E-7	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9996873506517071	WITHOUT_CLASSIFICATION	3.1264934829284744E-4	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999989629921952	WITHOUT_CLASSIFICATION	1.037007804840263E-6	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999984387822681	WITHOUT_CLASSIFICATION	1.5612177319700416E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999934094031822	WITHOUT_CLASSIFICATION	6.590596817886459E-6	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999840639027873	WITHOUT_CLASSIFICATION	1.5936097212728814E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999757879964047	WITHOUT_CLASSIFICATION	2.4212003595288246E-5	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999965592559039	WITHOUT_CLASSIFICATION	3.4407440960381315E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999969023160423	WITHOUT_CLASSIFICATION	3.0976839576037335E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999662026931795	WITHOUT_CLASSIFICATION	3.3797306820506713E-5	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999471826718234	WITHOUT_CLASSIFICATION	5.2817328176625116E-5	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999741141364916	WITHOUT_CLASSIFICATION	2.588586350830802E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999953700283217	WITHOUT_CLASSIFICATION	4.629971678280531E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996953367278	WITHOUT_CLASSIFICATION	3.0466327212353736E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996953367278	WITHOUT_CLASSIFICATION	3.0466327212353736E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.99992058278335	WITHOUT_CLASSIFICATION	7.941721664988064E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999851791457405	WITHOUT_CLASSIFICATION	1.4820854259571193E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999990286767667	WITHOUT_CLASSIFICATION	9.7132323331387E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999985432624181	WITHOUT_CLASSIFICATION	1.4567375819048046E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999868832218871	WITHOUT_CLASSIFICATION	1.3116778112776458E-5	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999996411089886	WITHOUT_CLASSIFICATION	3.5889101135419167E-7	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999996850328772	WITHOUT_CLASSIFICATION	3.149671227511582E-7	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.999999599558299	WITHOUT_CLASSIFICATION	4.004417010136236E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999093524463	WITHOUT_CLASSIFICATION	9.06475536200708E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999993292079848	WITHOUT_CLASSIFICATION	6.707920151918078E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999997936253913	WITHOUT_CLASSIFICATION	2.063746087915852E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999994395250129	WITHOUT_CLASSIFICATION	5.604749871053854E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.999999583810309	WITHOUT_CLASSIFICATION	4.1618969110370946E-7	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999996043376392	WITHOUT_CLASSIFICATION	3.956623607606044E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999888320134475	WITHOUT_CLASSIFICATION	1.1167986552556873E-5	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999976479680089	WITHOUT_CLASSIFICATION	2.3520319910844363E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999999536938764	WITHOUT_CLASSIFICATION	4.63061236001288E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999222448997755	WITHOUT_CLASSIFICATION	7.775510022435238E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.999976820555015	WITHOUT_CLASSIFICATION	2.317944498508919E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999781028381102	WITHOUT_CLASSIFICATION	2.1897161889928702E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999992277986933	WITHOUT_CLASSIFICATION	7.722013067371372E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999992277986933	WITHOUT_CLASSIFICATION	7.722013067371372E-7	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999927158137062	WITHOUT_CLASSIFICATION	7.284186293799428E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999789053064391	WITHOUT_CLASSIFICATION	2.1094693561022912E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999789053064391	WITHOUT_CLASSIFICATION	2.1094693561022912E-5	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.99999968019002	WITHOUT_CLASSIFICATION	3.198099800357155E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999996284454926	WITHOUT_CLASSIFICATION	3.7155450733653345E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999997848922546	WITHOUT_CLASSIFICATION	2.1510774528247633E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.999999672947927	WITHOUT_CLASSIFICATION	3.270520730480432E-7	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999995981115787	WITHOUT_CLASSIFICATION	4.0188842130298374E-7	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999993244642609	WITHOUT_CLASSIFICATION	6.755357391894322E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999955449479655	WITHOUT_CLASSIFICATION	4.45505203439843E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999694138117129	WITHOUT_CLASSIFICATION	3.058618828711578E-5	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999956943362878	WITHOUT_CLASSIFICATION	4.305663712236965E-6	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999932396902115	WITHOUT_CLASSIFICATION	6.760309788577231E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999980948803653	WITHOUT_CLASSIFICATION	1.9051196346541922E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999860892034478	WITHOUT_CLASSIFICATION	1.39107965523628E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999999052975118	WITHOUT_CLASSIFICATION	9.470248821449843E-8	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999996034849595	WITHOUT_CLASSIFICATION	3.9651504040697695E-7	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999999080722954	WITHOUT_CLASSIFICATION	9.192770453812366E-8	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999991745619606	WITHOUT_CLASSIFICATION	8.254380393442443E-7	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999994091334521	WITHOUT_CLASSIFICATION	5.908665479008944E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.999945489376906	WITHOUT_CLASSIFICATION	5.45106230940645E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999835441559365	WITHOUT_CLASSIFICATION	1.64558440635367E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.999995705289529	WITHOUT_CLASSIFICATION	4.294710470989428E-6	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999973746017788	WITHOUT_CLASSIFICATION	2.625398221122006E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.999999550332397	WITHOUT_CLASSIFICATION	4.496676029853181E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.99992058278335	WITHOUT_CLASSIFICATION	7.941721664988064E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999474742514367	WITHOUT_CLASSIFICATION	5.252574856320697E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999981753549325	WITHOUT_CLASSIFICATION	1.8246450673688754E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999928163764429	WITHOUT_CLASSIFICATION	7.183623557127945E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999994341007366	WITHOUT_CLASSIFICATION	5.658992634871859E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999921001631267	WITHOUT_CLASSIFICATION	7.89983687335069E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991373770062	WITHOUT_CLASSIFICATION	8.626229938616936E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999835649576841	WITHOUT_CLASSIFICATION	1.643504231580411E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999959386786839	WITHOUT_CLASSIFICATION	4.0613213161515674E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999988330476483	WITHOUT_CLASSIFICATION	1.1669523517175939E-6	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.999986597184131	WITHOUT_CLASSIFICATION	1.3402815869041707E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999991616750085	WITHOUT_CLASSIFICATION	8.383249915474626E-7	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999956726950309	WITHOUT_CLASSIFICATION	4.327304969120511E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999979795958638	WITHOUT_CLASSIFICATION	2.020404136209452E-6	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.999863371796616	WITHOUT_CLASSIFICATION	1.3662820338401573E-4	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9999932478348131	WITHOUT_CLASSIFICATION	6.752165186834843E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999997835249181	WITHOUT_CLASSIFICATION	2.1647508179610968E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999994967718981	WITHOUT_CLASSIFICATION	5.032281018970954E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999994967718981	WITHOUT_CLASSIFICATION	5.032281018970954E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999994967718981	WITHOUT_CLASSIFICATION	5.032281018970954E-7	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999916390978472	WITHOUT_CLASSIFICATION	8.360902152855922E-6	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999964085386552	WITHOUT_CLASSIFICATION	3.5914613448242276E-6	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.999996198926013	WITHOUT_CLASSIFICATION	3.801073986959119E-6	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999991250537463	WITHOUT_CLASSIFICATION	8.749462537109282E-7	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999993083594075	WITHOUT_CLASSIFICATION	6.916405925636521E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999257346651489	WITHOUT_CLASSIFICATION	7.42653348510994E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999257346651489	WITHOUT_CLASSIFICATION	7.42653348510994E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.99999941812115	WITHOUT_CLASSIFICATION	5.818788500099484E-7	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999984238678588	WITHOUT_CLASSIFICATION	1.5761321411891508E-6	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999998297396726	WITHOUT_CLASSIFICATION	1.702603273982751E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999993360902318	WITHOUT_CLASSIFICATION	6.639097682428786E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999968134021656	WITHOUT_CLASSIFICATION	3.18659783443584E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999992120033135	WITHOUT_CLASSIFICATION	7.879966863397869E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999986725501038	WITHOUT_CLASSIFICATION	1.3274498962411907E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999998408935932	WITHOUT_CLASSIFICATION	1.5910640680086008E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995941288838	WITHOUT_CLASSIFICATION	4.0587111612200704E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999908134772444	WITHOUT_CLASSIFICATION	9.186522755489803E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999983109196143	WITHOUT_CLASSIFICATION	1.6890803856394046E-6	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999987392125746	WITHOUT_CLASSIFICATION	1.2607874253452389E-6	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999974244558114	WITHOUT_CLASSIFICATION	2.5755441885281284E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999972340238794	WITHOUT_CLASSIFICATION	2.76597612061938E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991373770062	WITHOUT_CLASSIFICATION	8.626229938616936E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999835649576841	WITHOUT_CLASSIFICATION	1.643504231580411E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999988330476483	WITHOUT_CLASSIFICATION	1.1669523517175939E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999996904139473	WITHOUT_CLASSIFICATION	3.095860526512993E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999987145522503	WITHOUT_CLASSIFICATION	1.285447749639278E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999996217909866	WITHOUT_CLASSIFICATION	3.7820901343205553E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999979795958638	WITHOUT_CLASSIFICATION	2.020404136209452E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995131228844	WITHOUT_CLASSIFICATION	4.868771156572139E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999993352041	WITHOUT_CLASSIFICATION	6.647958932939322E-9	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997192206409	WITHOUT_CLASSIFICATION	2.807793590865059E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999994967718981	WITHOUT_CLASSIFICATION	5.032281018970954E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.99999941812115	WITHOUT_CLASSIFICATION	5.818788500099484E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999998408935932	WITHOUT_CLASSIFICATION	1.5910640680086008E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999998408935932	WITHOUT_CLASSIFICATION	1.5910640680086008E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995941288838	WITHOUT_CLASSIFICATION	4.0587111612200704E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999953682650926	WITHOUT_CLASSIFICATION	4.63173490734801E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999987779099978	WITHOUT_CLASSIFICATION	1.222090002207798E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999975371537133	WITHOUT_CLASSIFICATION	2.4628462867157207E-6	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999985660754559	WITHOUT_CLASSIFICATION	1.433924544061059E-6	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999988764493156	WITHOUT_CLASSIFICATION	1.1235506843105864E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.999999561282395	WITHOUT_CLASSIFICATION	4.3871760506361116E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999995453532976	WITHOUT_CLASSIFICATION	4.546467023838592E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999997909579605	WITHOUT_CLASSIFICATION	2.0904203943574197E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999988925077662	WITHOUT_CLASSIFICATION	1.1074922337869835E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999998442113113	WITHOUT_CLASSIFICATION	1.5578868872395009E-7	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999994531182002	WITHOUT_CLASSIFICATION	5.468817998647041E-7	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999824972070102	WITHOUT_CLASSIFICATION	1.7502792989805645E-5	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.999999088113965	WITHOUT_CLASSIFICATION	9.118860351129525E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999994215491681	WITHOUT_CLASSIFICATION	5.784508317916721E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999998298753869	WITHOUT_CLASSIFICATION	1.7012461308268624E-7	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999987586584488	WITHOUT_CLASSIFICATION	1.2413415512510963E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999997052898612	WITHOUT_CLASSIFICATION	2.947101389238129E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999994311723889	WITHOUT_CLASSIFICATION	5.688276110459409E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999995058733618	WITHOUT_CLASSIFICATION	4.941266381855198E-7	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999995379406073	WITHOUT_CLASSIFICATION	4.6205939274893426E-7	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999998539866373	WITHOUT_CLASSIFICATION	1.4601336272554896E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997114686786	WITHOUT_CLASSIFICATION	2.8853132138196504E-7	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999986490333348	WITHOUT_CLASSIFICATION	1.3509666651704077E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999995525262322	WITHOUT_CLASSIFICATION	4.474737678488857E-7	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999995940681038	WITHOUT_CLASSIFICATION	4.0593189614507375E-7	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999996708659314	WITHOUT_CLASSIFICATION	3.2913406856162675E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999998572892362	WITHOUT_CLASSIFICATION	1.427107636677317E-7	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999999664883057	WITHOUT_CLASSIFICATION	3.351169430320769E-8	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999422410002	WITHOUT_CLASSIFICATION	5.775899979059699E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999990934802037	WITHOUT_CLASSIFICATION	9.065197963065381E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999996234039907	WITHOUT_CLASSIFICATION	3.7659600927589467E-7	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999997332805894	WITHOUT_CLASSIFICATION	2.667194105878828E-7	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999999611164244	WITHOUT_CLASSIFICATION	3.888357562524753E-8	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999118617863	WITHOUT_CLASSIFICATION	8.813821372978205E-8	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999995077035759	WITHOUT_CLASSIFICATION	4.922964240422453E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999994698691351	WITHOUT_CLASSIFICATION	5.301308647769388E-7	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999997418335499	WITHOUT_CLASSIFICATION	2.5816645001301247E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999982715808704	WITHOUT_CLASSIFICATION	1.7284191296815838E-6	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999913839045355	WITHOUT_CLASSIFICATION	8.616095464436291E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997114686786	WITHOUT_CLASSIFICATION	2.8853132138196504E-7	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999998299924978	WITHOUT_CLASSIFICATION	1.7000750222829332E-7	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999996978636315	WITHOUT_CLASSIFICATION	3.021363685645415E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.999999896964676	WITHOUT_CLASSIFICATION	1.0303532394200579E-7	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999993951832444	WITHOUT_CLASSIFICATION	6.048167555825343E-7	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999997890760759	WITHOUT_CLASSIFICATION	2.1092392412853265E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999866593188402	WITHOUT_CLASSIFICATION	1.3340681159733874E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999985875038948	WITHOUT_CLASSIFICATION	1.4124961051963958E-6	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999940624673649	WITHOUT_CLASSIFICATION	5.937532635126386E-6	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999951408474159	WITHOUT_CLASSIFICATION	4.859152584066432E-6	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999871484725033	WITHOUT_CLASSIFICATION	1.2851527496677057E-5	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999773665224868	WITHOUT_CLASSIFICATION	2.263347751317403E-5	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999959576241821	WITHOUT_CLASSIFICATION	4.0423758179030086E-6	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999972651873688	WITHOUT_CLASSIFICATION	2.7348126311236133E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999996978527634	WITHOUT_CLASSIFICATION	3.0214723654849017E-7	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999996978527634	WITHOUT_CLASSIFICATION	3.0214723654849017E-7	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999996978527634	WITHOUT_CLASSIFICATION	3.0214723654849017E-7	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999884726157138	WITHOUT_CLASSIFICATION	1.1527384286277287E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999884726157138	WITHOUT_CLASSIFICATION	1.1527384286277287E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999884726157138	WITHOUT_CLASSIFICATION	1.1527384286277287E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999997463808766	WITHOUT_CLASSIFICATION	2.5361912335212156E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999997463808766	WITHOUT_CLASSIFICATION	2.5361912335212156E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999998006701054	WITHOUT_CLASSIFICATION	1.9932989457061932E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999998006701054	WITHOUT_CLASSIFICATION	1.9932989457061932E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999998006701054	WITHOUT_CLASSIFICATION	1.9932989457061932E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999998006701054	WITHOUT_CLASSIFICATION	1.9932989457061932E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999997572200877	WITHOUT_CLASSIFICATION	2.427799122860124E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999997572200877	WITHOUT_CLASSIFICATION	2.427799122860124E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999997572200877	WITHOUT_CLASSIFICATION	2.427799122860124E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999997572200877	WITHOUT_CLASSIFICATION	2.427799122860124E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999994761359505	WITHOUT_CLASSIFICATION	5.23864049521835E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999994761359505	WITHOUT_CLASSIFICATION	5.23864049521835E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999994761359505	WITHOUT_CLASSIFICATION	5.23864049521835E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999994761359505	WITHOUT_CLASSIFICATION	5.23864049521835E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999994761359505	WITHOUT_CLASSIFICATION	5.23864049521835E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999994520310834	WITHOUT_CLASSIFICATION	5.479689166986961E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999994520310834	WITHOUT_CLASSIFICATION	5.479689166986961E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999994520310834	WITHOUT_CLASSIFICATION	5.479689166986961E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999994520310834	WITHOUT_CLASSIFICATION	5.479689166986961E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999984198641401	WITHOUT_CLASSIFICATION	1.5801358599267822E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999984198641401	WITHOUT_CLASSIFICATION	1.5801358599267822E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999997463808766	WITHOUT_CLASSIFICATION	2.5361912335212156E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999998006701054	WITHOUT_CLASSIFICATION	1.9932989457061932E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999997572200877	WITHOUT_CLASSIFICATION	2.427799122860124E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999994761359505	WITHOUT_CLASSIFICATION	5.23864049521835E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999994520310834	WITHOUT_CLASSIFICATION	5.479689166986961E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999984198641401	WITHOUT_CLASSIFICATION	1.5801358599267822E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999997274082437	WITHOUT_CLASSIFICATION	2.72591756338954E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999991866763713	WITHOUT_CLASSIFICATION	8.133236285969238E-7	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.999998731940437	WITHOUT_CLASSIFICATION	1.2680595631107849E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999993469664086	WITHOUT_CLASSIFICATION	6.530335913990945E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999993469664086	WITHOUT_CLASSIFICATION	6.530335913990945E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999980643246144	WITHOUT_CLASSIFICATION	1.9356753856718177E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999980643246144	WITHOUT_CLASSIFICATION	1.9356753856718177E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999980643246144	WITHOUT_CLASSIFICATION	1.9356753856718177E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9995194125813426	WITHOUT_CLASSIFICATION	4.805874186573685E-4	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999992121409964	WITHOUT_CLASSIFICATION	7.878590036146254E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999991437091449	WITHOUT_CLASSIFICATION	8.56290855192247E-7	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999995166163919	WITHOUT_CLASSIFICATION	4.833836081567228E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999964647499493	WITHOUT_CLASSIFICATION	3.5352500508372164E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999903472055844	WITHOUT_CLASSIFICATION	9.652794415509716E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999891828386621	WITHOUT_CLASSIFICATION	1.0817161337870176E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999955719427395	WITHOUT_CLASSIFICATION	4.428057260600724E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999997020305877	WITHOUT_CLASSIFICATION	2.9796941225157757E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999996614423294	WITHOUT_CLASSIFICATION	3.385576705977281E-7	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.999993469664086	WITHOUT_CLASSIFICATION	6.530335913990945E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999980643246144	WITHOUT_CLASSIFICATION	1.9356753856718177E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999995048496786	WITHOUT_CLASSIFICATION	4.951503213596636E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999969126256033	WITHOUT_CLASSIFICATION	3.0873743967382864E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.999999955221287	WITHOUT_CLASSIFICATION	4.477871298427582E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.999999952568324	WITHOUT_CLASSIFICATION	4.743167610018869E-8	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999359474193	WITHOUT_CLASSIFICATION	6.405258071660649E-8	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999815492261	WITHOUT_CLASSIFICATION	1.845077395038956E-8	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999733906149	WITHOUT_CLASSIFICATION	2.6609385145676052E-8	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999999099296514	WITHOUT_CLASSIFICATION	9.00703485917876E-8	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999819080261	WITHOUT_CLASSIFICATION	1.8091973894667157E-8	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999177584761	WITHOUT_CLASSIFICATION	8.224152395432998E-8	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999164750569	WITHOUT_CLASSIFICATION	8.352494306679501E-8	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999435822233	WITHOUT_CLASSIFICATION	5.641777672027163E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999629252161	WITHOUT_CLASSIFICATION	3.7074783878812975E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999629252161	WITHOUT_CLASSIFICATION	3.7074783878812975E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999629252161	WITHOUT_CLASSIFICATION	3.7074783878812975E-8	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999997812401065	WITHOUT_CLASSIFICATION	2.1875989340698132E-7	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999987695902155	WITHOUT_CLASSIFICATION	1.2304097845662259E-6	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999988851380779	WITHOUT_CLASSIFICATION	1.114861922110767E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999950667293701	WITHOUT_CLASSIFICATION	4.933270629851331E-6	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999991632479898	WITHOUT_CLASSIFICATION	8.367520102010081E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999998630879521	WITHOUT_CLASSIFICATION	1.3691204784168908E-7	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999977542930087	WITHOUT_CLASSIFICATION	2.2457069911784665E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999973834038429	WITHOUT_CLASSIFICATION	2.616596157022822E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999992916360346	WITHOUT_CLASSIFICATION	7.083639652806116E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999986131145112	WITHOUT_CLASSIFICATION	1.38688548886348E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999891828386621	WITHOUT_CLASSIFICATION	1.0817161337870176E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999955719427395	WITHOUT_CLASSIFICATION	4.428057260600724E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999995048496786	WITHOUT_CLASSIFICATION	4.951503213596636E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999992916360346	WITHOUT_CLASSIFICATION	7.083639652806116E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999986131145112	WITHOUT_CLASSIFICATION	1.38688548886348E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999993832842324	WITHOUT_CLASSIFICATION	6.167157676203655E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9999981520029114	WITHOUT_CLASSIFICATION	1.847997088491765E-6	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999997038505049	WITHOUT_CLASSIFICATION	2.961494951600608E-7	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999993083175164	WITHOUT_CLASSIFICATION	6.916824835310479E-7	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999996489129306	WITHOUT_CLASSIFICATION	3.5108706941328507E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999998146825376	WITHOUT_CLASSIFICATION	1.8531746238084631E-7	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999997622127973	WITHOUT_CLASSIFICATION	2.3778720272880465E-7	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999995189405653	WITHOUT_CLASSIFICATION	4.810594347412383E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999985460879077	WITHOUT_CLASSIFICATION	1.4539120922038067E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999970197331026	WITHOUT_CLASSIFICATION	2.9802668973923636E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999965275283038	WITHOUT_CLASSIFICATION	3.4724716960887276E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999998714497781	WITHOUT_CLASSIFICATION	1.2855022187878321E-7	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999999253649301	WITHOUT_CLASSIFICATION	7.463506980325073E-8	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999990636202052	WITHOUT_CLASSIFICATION	9.363797948346408E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999979998986565	WITHOUT_CLASSIFICATION	2.000101343495927E-6	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999998038997941	WITHOUT_CLASSIFICATION	1.9610020588680317E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.999998539347822	WITHOUT_CLASSIFICATION	1.4606521780443655E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999984479776162	WITHOUT_CLASSIFICATION	1.5520223837706006E-6	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999996814235058	WITHOUT_CLASSIFICATION	3.185764941575962E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999997843326975	WITHOUT_CLASSIFICATION	2.1566730239629543E-7	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999992047459126	WITHOUT_CLASSIFICATION	7.952540873948268E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999997051635268	WITHOUT_CLASSIFICATION	2.9483647315418803E-7	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999983374259941	WITHOUT_CLASSIFICATION	1.6625740059884597E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999994548010642	WITHOUT_CLASSIFICATION	5.45198935851852E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999960557208718	WITHOUT_CLASSIFICATION	3.944279128151685E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999910820017469	WITHOUT_CLASSIFICATION	8.917998253123712E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999960911603432	WITHOUT_CLASSIFICATION	3.9088396568375034E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999995008991153	WITHOUT_CLASSIFICATION	4.991008848032988E-7	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999967693060858	WITHOUT_CLASSIFICATION	3.2306939142557023E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9999955408302412	WITHOUT_CLASSIFICATION	4.459169758775796E-6	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999699214288	WITHOUT_CLASSIFICATION	3.0078571265360606E-8	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999985389596744	WITHOUT_CLASSIFICATION	1.461040325685527E-6	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999788233048349	WITHOUT_CLASSIFICATION	2.117669516512444E-5	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.999999047974593	WITHOUT_CLASSIFICATION	9.520254069259726E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999996712264744	WITHOUT_CLASSIFICATION	3.2877352562277814E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999989360766063	WITHOUT_CLASSIFICATION	1.0639233937372968E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999982649300525	WITHOUT_CLASSIFICATION	1.735069947552839E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999990292873332	WITHOUT_CLASSIFICATION	9.707126666982212E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999921001631267	WITHOUT_CLASSIFICATION	7.89983687335069E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999935671810954	WITHOUT_CLASSIFICATION	6.432818904552384E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999998994550925	WITHOUT_CLASSIFICATION	1.0054490748208013E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999959886432614	WITHOUT_CLASSIFICATION	4.011356738615879E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999991373770062	WITHOUT_CLASSIFICATION	8.626229938616936E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999988606612532	WITHOUT_CLASSIFICATION	1.139338746788885E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975143663565	WITHOUT_CLASSIFICATION	2.4856336435004916E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.999992682223188	WITHOUT_CLASSIFICATION	7.31777681200006E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999996904139473	WITHOUT_CLASSIFICATION	3.095860526512993E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999979795958638	WITHOUT_CLASSIFICATION	2.020404136209452E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999988117099644	WITHOUT_CLASSIFICATION	1.1882900356127452E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999857563604	WITHOUT_CLASSIFICATION	1.4243639605329997E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999629252161	WITHOUT_CLASSIFICATION	3.7074783878812975E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999629252161	WITHOUT_CLASSIFICATION	3.7074783878812975E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999629252161	WITHOUT_CLASSIFICATION	3.7074783878812975E-8	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999994548010642	WITHOUT_CLASSIFICATION	5.45198935851852E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999960557208718	WITHOUT_CLASSIFICATION	3.944279128151685E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.999983354379219	WITHOUT_CLASSIFICATION	1.6645620780953048E-5	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999981113716493	WITHOUT_CLASSIFICATION	1.8886283506181157E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999999885390565	WITHOUT_CLASSIFICATION	1.1460943503259164E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999999885390565	WITHOUT_CLASSIFICATION	1.1460943503259164E-7	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999988894319857	WITHOUT_CLASSIFICATION	1.1105680143383238E-6	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999988866036966	WITHOUT_CLASSIFICATION	1.1133963034010437E-6	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999951601201319	WITHOUT_CLASSIFICATION	4.8398798681477465E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999982032824741	WITHOUT_CLASSIFICATION	1.796717525792221E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999997677348968	WITHOUT_CLASSIFICATION	2.3226510316772367E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999997677348968	WITHOUT_CLASSIFICATION	2.3226510316772367E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999998380941926	WITHOUT_CLASSIFICATION	1.619058075087529E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999992864358472	WITHOUT_CLASSIFICATION	7.135641528334695E-7	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999988536355591	WITHOUT_CLASSIFICATION	1.1463644409859037E-6	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.999999385644674	WITHOUT_CLASSIFICATION	6.143553260007996E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999998635627665	WITHOUT_CLASSIFICATION	1.3643723354899156E-7	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998551922618	WITHOUT_CLASSIFICATION	1.4480773828590884E-7	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999994997820567	WITHOUT_CLASSIFICATION	5.002179432729832E-7	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999998106344901	WITHOUT_CLASSIFICATION	1.893655100079542E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999997920981429	WITHOUT_CLASSIFICATION	2.079018571291057E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999998745248221	WITHOUT_CLASSIFICATION	1.25475177885673E-7	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999994277000326	WITHOUT_CLASSIFICATION	5.722999673838057E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999992902756099	WITHOUT_CLASSIFICATION	7.097243902505109E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.999997565622044	WITHOUT_CLASSIFICATION	2.434377956032816E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999964609156282	WITHOUT_CLASSIFICATION	3.5390843717922196E-6	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.999999486503098	WITHOUT_CLASSIFICATION	5.134969019280046E-7	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999900656036492	WITHOUT_CLASSIFICATION	9.934396350896654E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999975534116956	WITHOUT_CLASSIFICATION	2.4465883044077595E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999968985247782	WITHOUT_CLASSIFICATION	3.10147522186321E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999983784525232	WITHOUT_CLASSIFICATION	1.6215474768397295E-6	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999996378997845	WITHOUT_CLASSIFICATION	3.621002153933068E-7	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999858136356694	WITHOUT_CLASSIFICATION	1.4186364330514426E-5	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.999999945058981	WITHOUT_CLASSIFICATION	5.494101889193729E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999997610368346	WITHOUT_CLASSIFICATION	2.38963165313805E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999993832842324	WITHOUT_CLASSIFICATION	6.167157676203655E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9996148439912325	WITHOUT_CLASSIFICATION	3.8515600876753926E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999858136356694	WITHOUT_CLASSIFICATION	1.4186364330514426E-5	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999997281089424	WITHOUT_CLASSIFICATION	2.718910574963512E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999999297553675	WITHOUT_CLASSIFICATION	7.024463248522961E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999999297553675	WITHOUT_CLASSIFICATION	7.024463248522961E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999987248169596	WITHOUT_CLASSIFICATION	1.2751830404207248E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999987248169596	WITHOUT_CLASSIFICATION	1.2751830404207248E-6	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999981103746108	WITHOUT_CLASSIFICATION	1.8896253890934906E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999992631466654	WITHOUT_CLASSIFICATION	7.368533345830357E-7	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999993029703611	WITHOUT_CLASSIFICATION	6.970296387586894E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999991320959418	WITHOUT_CLASSIFICATION	8.679040580797127E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999991054207277	WITHOUT_CLASSIFICATION	8.945792723828913E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999991054207277	WITHOUT_CLASSIFICATION	8.945792723828913E-7	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999721187174253	WITHOUT_CLASSIFICATION	2.7881282574708695E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999992638113673	WITHOUT_CLASSIFICATION	7.361886326063144E-7	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.999999952223314	WITHOUT_CLASSIFICATION	4.777668609940546E-8	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999997652159444	WITHOUT_CLASSIFICATION	2.3478405570628332E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999993341279699	WITHOUT_CLASSIFICATION	6.658720301340398E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999888355954	WITHOUT_CLASSIFICATION	1.1164404600001457E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999997946665158	WITHOUT_CLASSIFICATION	2.0533348411372975E-7	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999552707092368	WITHOUT_CLASSIFICATION	4.4729290763210185E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999552707092368	WITHOUT_CLASSIFICATION	4.4729290763210185E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.999917534965731	WITHOUT_CLASSIFICATION	8.246503426908426E-5	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999999368274843	WITHOUT_CLASSIFICATION	6.317251576406196E-8	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999999750386463	WITHOUT_CLASSIFICATION	2.496135371555614E-8	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9999816488722648	WITHOUT_CLASSIFICATION	1.835112773526095E-5	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999965017871948	WITHOUT_CLASSIFICATION	3.498212805304096E-6	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.999995984747281	WITHOUT_CLASSIFICATION	4.015252719055513E-6	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999968974703036	WITHOUT_CLASSIFICATION	3.102529696356937E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999819710297504	WITHOUT_CLASSIFICATION	1.8028970249581332E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999258324516846	WITHOUT_CLASSIFICATION	7.416754831533702E-5	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9998265696279577	WITHOUT_CLASSIFICATION	1.7343037204233815E-4	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999985315739033	WITHOUT_CLASSIFICATION	1.4684260967602299E-6	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999932371890231	WITHOUT_CLASSIFICATION	6.7628109769402505E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999949805434264	WITHOUT_CLASSIFICATION	5.019456573634766E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999984313682019	WITHOUT_CLASSIFICATION	1.5686317980349645E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999972290339642	WITHOUT_CLASSIFICATION	2.770966035713187E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999997863036951	WITHOUT_CLASSIFICATION	2.1369630479645817E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996679361404	WITHOUT_CLASSIFICATION	3.3206385958729643E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999987029202599	WITHOUT_CLASSIFICATION	1.2970797400284248E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999954558832644	WITHOUT_CLASSIFICATION	4.5441167356264246E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.999998204308657	WITHOUT_CLASSIFICATION	1.7956913428875721E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999991656699055	WITHOUT_CLASSIFICATION	8.34330094420889E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999997176790012	WITHOUT_CLASSIFICATION	2.8232099875535695E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999945011155192	WITHOUT_CLASSIFICATION	5.49888448071356E-6	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999359177534155	WITHOUT_CLASSIFICATION	6.408224658455985E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999992638113673	WITHOUT_CLASSIFICATION	7.361886326063144E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999993341279699	WITHOUT_CLASSIFICATION	6.658720301340398E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999993341279699	WITHOUT_CLASSIFICATION	6.658720301340398E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999096600448	WITHOUT_CLASSIFICATION	9.033995516311752E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999096600448	WITHOUT_CLASSIFICATION	9.033995516311752E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999096600448	WITHOUT_CLASSIFICATION	9.033995516311752E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999096600448	WITHOUT_CLASSIFICATION	9.033995516311752E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999888355954	WITHOUT_CLASSIFICATION	1.1164404600001457E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999888355954	WITHOUT_CLASSIFICATION	1.1164404600001457E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999888355954	WITHOUT_CLASSIFICATION	1.1164404600001457E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999888355954	WITHOUT_CLASSIFICATION	1.1164404600001457E-5	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999945011155192	WITHOUT_CLASSIFICATION	5.49888448071356E-6	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9996966361494707	WITHOUT_CLASSIFICATION	3.0336385052941644E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.999974302048947	WITHOUT_CLASSIFICATION	2.569795105292358E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999749113257542	WITHOUT_CLASSIFICATION	2.5088674245822658E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999954095170837	WITHOUT_CLASSIFICATION	4.590482916351392E-6	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999907181732051	WITHOUT_CLASSIFICATION	9.281826794911836E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999991804044104	WITHOUT_CLASSIFICATION	8.195955894932884E-7	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.999985970424047	WITHOUT_CLASSIFICATION	1.4029575953006715E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999996214959732	WITHOUT_CLASSIFICATION	3.7850402673899E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999665525059	WITHOUT_CLASSIFICATION	3.344749413429428E-8	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999665525059	WITHOUT_CLASSIFICATION	3.344749413429428E-8	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999987459216407	WITHOUT_CLASSIFICATION	1.254078359204637E-6	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999995248215168	WITHOUT_CLASSIFICATION	4.7517848317967644E-7	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999049267666692	WITHOUT_CLASSIFICATION	9.507323333084214E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9998975655612681	WITHOUT_CLASSIFICATION	1.0243443873190442E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999897370346303	WITHOUT_CLASSIFICATION	1.0262965369737394E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999711093223613	WITHOUT_CLASSIFICATION	2.8890677638600258E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999956203966807	WITHOUT_CLASSIFICATION	4.379603319292586E-6	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999942889909209	WITHOUT_CLASSIFICATION	5.711009079154897E-6	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999995006013063	WITHOUT_CLASSIFICATION	4.993986936818811E-7	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.999999625787542	WITHOUT_CLASSIFICATION	3.742124581092971E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999999544272676	WITHOUT_CLASSIFICATION	4.557273228736185E-8	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999999544272676	WITHOUT_CLASSIFICATION	4.557273228736185E-8	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999919377369676	WITHOUT_CLASSIFICATION	8.062263032412815E-6	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999968414180385	WITHOUT_CLASSIFICATION	3.158581961603853E-6	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999995799121193	WITHOUT_CLASSIFICATION	4.200878807229726E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999999261058534	WITHOUT_CLASSIFICATION	7.389414661285417E-8	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999777766693598	WITHOUT_CLASSIFICATION	2.2223330640217026E-5	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999777766693598	WITHOUT_CLASSIFICATION	2.2223330640217026E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999964939580346	WITHOUT_CLASSIFICATION	3.506041965309363E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999964939580346	WITHOUT_CLASSIFICATION	3.506041965309363E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999964939580346	WITHOUT_CLASSIFICATION	3.506041965309363E-6	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999645415184677	WITHOUT_CLASSIFICATION	3.5458481532333726E-5	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.999999800945388	WITHOUT_CLASSIFICATION	1.9905461202863866E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999996465872828	WITHOUT_CLASSIFICATION	3.534127172058196E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999853710947326	WITHOUT_CLASSIFICATION	1.4628905267377238E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999919377369676	WITHOUT_CLASSIFICATION	8.062263032412815E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999998109267784	WITHOUT_CLASSIFICATION	1.890732215992679E-7	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999964939580346	WITHOUT_CLASSIFICATION	3.506041965309363E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999964939580346	WITHOUT_CLASSIFICATION	3.506041965309363E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999964939580346	WITHOUT_CLASSIFICATION	3.506041965309363E-6	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999645415184677	WITHOUT_CLASSIFICATION	3.5458481532333726E-5	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.999999800945388	WITHOUT_CLASSIFICATION	1.9905461202863866E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999997075280429	WITHOUT_CLASSIFICATION	2.9247195708546105E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.999963930796437	WITHOUT_CLASSIFICATION	3.6069203562925254E-5	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999998310187891	WITHOUT_CLASSIFICATION	1.6898121096010747E-7	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999970398009386	WITHOUT_CLASSIFICATION	2.9601990614357247E-6	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999985741144132	WITHOUT_CLASSIFICATION	1.4258855867400294E-6	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999200739167153	WITHOUT_CLASSIFICATION	7.992608328468355E-5	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999742990734701	WITHOUT_CLASSIFICATION	2.5700926529891158E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999997792278444	WITHOUT_CLASSIFICATION	2.2077215561045648E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999997792278444	WITHOUT_CLASSIFICATION	2.2077215561045648E-7	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999998104613027	WITHOUT_CLASSIFICATION	1.8953869721263902E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999108382833	WITHOUT_CLASSIFICATION	8.916171660419013E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999992690456273	WITHOUT_CLASSIFICATION	7.309543726435068E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999994907383506	WITHOUT_CLASSIFICATION	5.092616493461013E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999994931179357	WITHOUT_CLASSIFICATION	5.068820643669013E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999978040335785	WITHOUT_CLASSIFICATION	2.195966421492293E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999653575166	WITHOUT_CLASSIFICATION	3.464248338380517E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999653575166	WITHOUT_CLASSIFICATION	3.464248338380517E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999653575166	WITHOUT_CLASSIFICATION	3.464248338380517E-8	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.999955281504966	WITHOUT_CLASSIFICATION	4.4718495033901845E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999907771785903	WITHOUT_CLASSIFICATION	9.222821409650493E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999998293712106	WITHOUT_CLASSIFICATION	1.7062878956267122E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999997529525331	WITHOUT_CLASSIFICATION	2.4704746687400904E-7	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999981741378322	WITHOUT_CLASSIFICATION	1.8258621677132704E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999996224930835	WITHOUT_CLASSIFICATION	3.775069164610879E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999998757077748	WITHOUT_CLASSIFICATION	1.2429222521327766E-7	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999970358764899	WITHOUT_CLASSIFICATION	2.9641235100351E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999970358764899	WITHOUT_CLASSIFICATION	2.9641235100351E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999991517082044	WITHOUT_CLASSIFICATION	8.482917956176593E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999998497332526	WITHOUT_CLASSIFICATION	1.5026674743180754E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999993832842324	WITHOUT_CLASSIFICATION	6.167157676203655E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999993832842324	WITHOUT_CLASSIFICATION	6.167157676203655E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999992631466654	WITHOUT_CLASSIFICATION	7.368533345830357E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.999963930796437	WITHOUT_CLASSIFICATION	3.6069203562925254E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999997792278444	WITHOUT_CLASSIFICATION	2.2077215561045648E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999997529525331	WITHOUT_CLASSIFICATION	2.4704746687400904E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999997529525331	WITHOUT_CLASSIFICATION	2.4704746687400904E-7	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999998293712106	WITHOUT_CLASSIFICATION	1.7062878956267122E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999997075280429	WITHOUT_CLASSIFICATION	2.9247195708546105E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999998757077748	WITHOUT_CLASSIFICATION	1.2429222521327766E-7	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999996224930835	WITHOUT_CLASSIFICATION	3.775069164610879E-7	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999997255754411	WITHOUT_CLASSIFICATION	2.744245588974223E-7	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9994519172313403	WITHOUT_CLASSIFICATION	5.480827686596344E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999148144801	WITHOUT_CLASSIFICATION	8.518551984968286E-8	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999961344198901	WITHOUT_CLASSIFICATION	3.86558010988423E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999985999455455	WITHOUT_CLASSIFICATION	1.4000544544086196E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999985999455455	WITHOUT_CLASSIFICATION	1.4000544544086196E-6	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999852827965509	WITHOUT_CLASSIFICATION	1.471720344908828E-5	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999968218386166	WITHOUT_CLASSIFICATION	3.178161383500294E-6	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999995812170132	WITHOUT_CLASSIFICATION	4.187829867986708E-6	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999995063236878	WITHOUT_CLASSIFICATION	4.936763122600319E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998969260896	WITHOUT_CLASSIFICATION	1.0307391035523574E-7	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999999714124105	WITHOUT_CLASSIFICATION	2.858758945372748E-8	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999998820681787	WITHOUT_CLASSIFICATION	1.1793182126886139E-7	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999998220671658	WITHOUT_CLASSIFICATION	1.7793283428777655E-7	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.999999404211017	WITHOUT_CLASSIFICATION	5.957889829233085E-7	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999980787912318	WITHOUT_CLASSIFICATION	1.9212087682850062E-6	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999989165875682	WITHOUT_CLASSIFICATION	1.0834124317392804E-6	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999998270458208	WITHOUT_CLASSIFICATION	1.7295417908994096E-7	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999989818568947	WITHOUT_CLASSIFICATION	1.0181431052795446E-6	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999968451553364	WITHOUT_CLASSIFICATION	3.1548446634991885E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999990931086687	WITHOUT_CLASSIFICATION	9.068913313220275E-7	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999995923443543	WITHOUT_CLASSIFICATION	4.0765564574867915E-7	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999968852212808	WITHOUT_CLASSIFICATION	3.114778719050914E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999999435692727	WITHOUT_CLASSIFICATION	5.643072730362346E-8	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974576877647	WITHOUT_CLASSIFICATION	2.5423122352600495E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999998237105451	WITHOUT_CLASSIFICATION	1.7628945494119734E-7	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999991699331409	WITHOUT_CLASSIFICATION	8.300668589972713E-7	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.999999923179024	WITHOUT_CLASSIFICATION	7.68209759530618E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999991889474004	WITHOUT_CLASSIFICATION	8.110525996408217E-7	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999999536491455	WITHOUT_CLASSIFICATION	4.635085442922243E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999996093127502	WITHOUT_CLASSIFICATION	3.9068724983412267E-7	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999993210400462	WITHOUT_CLASSIFICATION	6.789599537759042E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.999999142150628	WITHOUT_CLASSIFICATION	8.578493720005296E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996643265051	WITHOUT_CLASSIFICATION	3.3567349485714897E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999971103910684	WITHOUT_CLASSIFICATION	2.8896089315153862E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999993832842324	WITHOUT_CLASSIFICATION	6.167157676203655E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999974576877647	WITHOUT_CLASSIFICATION	2.5423122352600495E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999997915636095	WITHOUT_CLASSIFICATION	2.0843639039778034E-7	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999878199743296	WITHOUT_CLASSIFICATION	1.2180025670331472E-5	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999943250079771	WITHOUT_CLASSIFICATION	5.674992022923878E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999970182950966	WITHOUT_CLASSIFICATION	2.981704903477175E-6	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999998785237343	WITHOUT_CLASSIFICATION	1.2147626568130503E-7	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999999175286196	WITHOUT_CLASSIFICATION	8.247138036382682E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999631240665	WITHOUT_CLASSIFICATION	3.6875933446118225E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999724760886	WITHOUT_CLASSIFICATION	2.7523911315656552E-8	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999994893120806	WITHOUT_CLASSIFICATION	5.106879193542443E-7	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999995046912405	WITHOUT_CLASSIFICATION	4.953087593749923E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.999983354379219	WITHOUT_CLASSIFICATION	1.6645620780953048E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999992679572253	WITHOUT_CLASSIFICATION	7.320427746830187E-7	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999956762272975	WITHOUT_CLASSIFICATION	4.323772702473493E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999423461112042	WITHOUT_CLASSIFICATION	5.765388879578033E-5	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999857326938764	WITHOUT_CLASSIFICATION	1.4267306123744408E-5	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999974764511398	WITHOUT_CLASSIFICATION	2.523548860255836E-6	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999998128977459	WITHOUT_CLASSIFICATION	1.8710225412811794E-7	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999995177190597	WITHOUT_CLASSIFICATION	4.822809403165537E-7	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999995291844519	WITHOUT_CLASSIFICATION	4.708155481157504E-7	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999996153650982	WITHOUT_CLASSIFICATION	3.8463490184187485E-7	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.999999551482549	WITHOUT_CLASSIFICATION	4.485174508907232E-7	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999998958428201	WITHOUT_CLASSIFICATION	1.0415717987833715E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999989603949649	WITHOUT_CLASSIFICATION	1.039605035105317E-6	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999989603949649	WITHOUT_CLASSIFICATION	1.039605035105317E-6	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999984440554742	WITHOUT_CLASSIFICATION	1.5559445256908253E-6	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999984133197893	WITHOUT_CLASSIFICATION	1.5866802106556852E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999973282362407	WITHOUT_CLASSIFICATION	2.671763759454514E-6	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9999890669429699	WITHOUT_CLASSIFICATION	1.0933057030177837E-5	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.999997938116189	WITHOUT_CLASSIFICATION	2.061883810965069E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999953040180547	WITHOUT_CLASSIFICATION	4.695981945266426E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999988736997543	WITHOUT_CLASSIFICATION	1.126300245783472E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999997066888924	WITHOUT_CLASSIFICATION	2.9331110759746185E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999997579633996	WITHOUT_CLASSIFICATION	2.420366004957198E-7	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999997030051941	WITHOUT_CLASSIFICATION	2.9699480583962715E-7	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999946739971178	WITHOUT_CLASSIFICATION	5.32600288211191E-6	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999998741880268	WITHOUT_CLASSIFICATION	1.2581197317331768E-7	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999995322545205	WITHOUT_CLASSIFICATION	4.677454794027081E-7	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999979040053243	WITHOUT_CLASSIFICATION	2.0959946757192358E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9997700176362261	WITHOUT_CLASSIFICATION	2.2998236377402901E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999708842394	WITHOUT_CLASSIFICATION	2.9115760625324257E-8	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999993356005786	WITHOUT_CLASSIFICATION	6.643994214056835E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998298459943744	WITHOUT_CLASSIFICATION	1.701540056255983E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998298459943744	WITHOUT_CLASSIFICATION	1.701540056255983E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998298459943744	WITHOUT_CLASSIFICATION	1.701540056255983E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999998546133945	WITHOUT_CLASSIFICATION	1.4538660549308323E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999990148968636	WITHOUT_CLASSIFICATION	9.851031364384508E-7	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999990148968636	WITHOUT_CLASSIFICATION	9.851031364384508E-7	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999982656603275	WITHOUT_CLASSIFICATION	1.7343396724538798E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999985476951447	WITHOUT_CLASSIFICATION	1.4523048552146676E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999914498521293	WITHOUT_CLASSIFICATION	8.550147870669083E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999922288373646	WITHOUT_CLASSIFICATION	7.771162635416286E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999922288373646	WITHOUT_CLASSIFICATION	7.771162635416286E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999966232190276	WITHOUT_CLASSIFICATION	3.3767809722931755E-6	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999980029378803	WITHOUT_CLASSIFICATION	1.997062119769762E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999993561496909	WITHOUT_CLASSIFICATION	6.438503091367229E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999122791909	WITHOUT_CLASSIFICATION	8.772080902907688E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.999997017370547	WITHOUT_CLASSIFICATION	2.9826294529794176E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999993561496909	WITHOUT_CLASSIFICATION	6.438503091367229E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999122791909	WITHOUT_CLASSIFICATION	8.772080902907688E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999999016492972	WITHOUT_CLASSIFICATION	9.835070271865799E-8	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999999416410096	WITHOUT_CLASSIFICATION	5.835899056103549E-8	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999996460903934	WITHOUT_CLASSIFICATION	3.5390960660561995E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999996460903934	WITHOUT_CLASSIFICATION	3.5390960660561995E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999801107010676	WITHOUT_CLASSIFICATION	1.9889298932403644E-5	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999807758612611	WITHOUT_CLASSIFICATION	1.9224138738970258E-5	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999966151883772	WITHOUT_CLASSIFICATION	3.3848116228786563E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9997947793980446	WITHOUT_CLASSIFICATION	2.0522060195549035E-4	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999691720199364	WITHOUT_CLASSIFICATION	3.0827980063636774E-5	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999830135644472	WITHOUT_CLASSIFICATION	1.6986435552832963E-5	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9995647029543812	WITHOUT_CLASSIFICATION	4.3529704561880443E-4	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9998912339054858	WITHOUT_CLASSIFICATION	1.0876609451410796E-4	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999744361050542	WITHOUT_CLASSIFICATION	2.5563894945814588E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999893252789743	WITHOUT_CLASSIFICATION	1.0674721025590482E-5	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999837007729209	WITHOUT_CLASSIFICATION	1.6299227079157447E-5	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999922624917562	WITHOUT_CLASSIFICATION	7.737508243750214E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999978855886842	WITHOUT_CLASSIFICATION	2.1144113157826446E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999934157038163	WITHOUT_CLASSIFICATION	6.58429618372475E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997424469257968	WITHOUT_CLASSIFICATION	2.575530742031639E-4	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999997355043502	WITHOUT_CLASSIFICATION	2.6449564986589787E-7	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999998513445968	WITHOUT_CLASSIFICATION	1.4865540322637864E-7	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999975860737903	WITHOUT_CLASSIFICATION	2.413926209724972E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999999112220088	WITHOUT_CLASSIFICATION	8.87779911195605E-8	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999978078706908	WITHOUT_CLASSIFICATION	2.1921293091212736E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999897101765408	WITHOUT_CLASSIFICATION	1.0289823459223389E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999906305064997	WITHOUT_CLASSIFICATION	9.369493500201692E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999955230061487	WITHOUT_CLASSIFICATION	4.476993851326682E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999972290339642	WITHOUT_CLASSIFICATION	2.770966035713187E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999972290339642	WITHOUT_CLASSIFICATION	2.770966035713187E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999997863036951	WITHOUT_CLASSIFICATION	2.1369630479645817E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999997863036951	WITHOUT_CLASSIFICATION	2.1369630479645817E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996679361404	WITHOUT_CLASSIFICATION	3.3206385958729643E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996679361404	WITHOUT_CLASSIFICATION	3.3206385958729643E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998969260896	WITHOUT_CLASSIFICATION	1.0307391035523574E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.999983354379219	WITHOUT_CLASSIFICATION	1.6645620780953048E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998298459943744	WITHOUT_CLASSIFICATION	1.701540056255983E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998298459943744	WITHOUT_CLASSIFICATION	1.701540056255983E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999990148968636	WITHOUT_CLASSIFICATION	9.851031364384508E-7	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999990148968636	WITHOUT_CLASSIFICATION	9.851031364384508E-7	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999990148968636	WITHOUT_CLASSIFICATION	9.851031364384508E-7	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999985476951447	WITHOUT_CLASSIFICATION	1.4523048552146676E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999985476951447	WITHOUT_CLASSIFICATION	1.4523048552146676E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999985476951447	WITHOUT_CLASSIFICATION	1.4523048552146676E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999998546133945	WITHOUT_CLASSIFICATION	1.4538660549308323E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999998546133945	WITHOUT_CLASSIFICATION	1.4538660549308323E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999934157038163	WITHOUT_CLASSIFICATION	6.58429618372475E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997424469257968	WITHOUT_CLASSIFICATION	2.575530742031639E-4	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999992302524754	WITHOUT_CLASSIFICATION	7.697475246297489E-7	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999942358716253	WITHOUT_CLASSIFICATION	5.764128374791471E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999966388901388	WITHOUT_CLASSIFICATION	3.3611098611790564E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999966388901388	WITHOUT_CLASSIFICATION	3.3611098611790564E-6	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.99999366580206	WITHOUT_CLASSIFICATION	6.3341979399551665E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999996320829468	WITHOUT_CLASSIFICATION	3.67917053119671E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999966388901388	WITHOUT_CLASSIFICATION	3.3611098611790564E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999990111560155	WITHOUT_CLASSIFICATION	9.888439844983148E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999989924173346	WITHOUT_CLASSIFICATION	1.0075826654652807E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999989924173346	WITHOUT_CLASSIFICATION	1.0075826654652807E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999989924173346	WITHOUT_CLASSIFICATION	1.0075826654652807E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999988580084029	WITHOUT_CLASSIFICATION	1.1419915970135006E-6	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999986705679891	WITHOUT_CLASSIFICATION	1.3294320109440851E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999760556384586	WITHOUT_CLASSIFICATION	2.394436154140431E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999379344068	WITHOUT_CLASSIFICATION	6.206559322277029E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999379344068	WITHOUT_CLASSIFICATION	6.206559322277029E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999831082621642	WITHOUT_CLASSIFICATION	1.6891737835798465E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999840265661175	WITHOUT_CLASSIFICATION	1.597343388239875E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999897101765408	WITHOUT_CLASSIFICATION	1.0289823459223389E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999906305064997	WITHOUT_CLASSIFICATION	9.369493500201692E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999972290339642	WITHOUT_CLASSIFICATION	2.770966035713187E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999997863036951	WITHOUT_CLASSIFICATION	2.1369630479645817E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996679361404	WITHOUT_CLASSIFICATION	3.3206385958729643E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999996372272245	WITHOUT_CLASSIFICATION	3.6277277550031194E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999997792278444	WITHOUT_CLASSIFICATION	2.2077215561045648E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999997792278444	WITHOUT_CLASSIFICATION	2.2077215561045648E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998969260896	WITHOUT_CLASSIFICATION	1.0307391035523574E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997424469257968	WITHOUT_CLASSIFICATION	2.575530742031639E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997424469257968	WITHOUT_CLASSIFICATION	2.575530742031639E-4	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999999112220088	WITHOUT_CLASSIFICATION	8.87779911195605E-8	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999966388901388	WITHOUT_CLASSIFICATION	3.3611098611790564E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999989924173346	WITHOUT_CLASSIFICATION	1.0075826654652807E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999996320829468	WITHOUT_CLASSIFICATION	3.67917053119671E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999990111560155	WITHOUT_CLASSIFICATION	9.888439844983148E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999990111560155	WITHOUT_CLASSIFICATION	9.888439844983148E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999988580084029	WITHOUT_CLASSIFICATION	1.1419915970135006E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999379344068	WITHOUT_CLASSIFICATION	6.206559322277029E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999831082621642	WITHOUT_CLASSIFICATION	1.6891737835798465E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999998515279278	WITHOUT_CLASSIFICATION	1.4847207216267334E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999998515279278	WITHOUT_CLASSIFICATION	1.4847207216267334E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999998515279278	WITHOUT_CLASSIFICATION	1.4847207216267334E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999997423341421	WITHOUT_CLASSIFICATION	2.576658579568526E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999997423341421	WITHOUT_CLASSIFICATION	2.576658579568526E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999997423341421	WITHOUT_CLASSIFICATION	2.576658579568526E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999856040853183	WITHOUT_CLASSIFICATION	1.4395914681568777E-5	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999994003884456	WITHOUT_CLASSIFICATION	5.996115544892078E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999814143106117	WITHOUT_CLASSIFICATION	1.858568938835614E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999881247568057	WITHOUT_CLASSIFICATION	1.1875243194388915E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999991638217034	WITHOUT_CLASSIFICATION	8.361782967027978E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999998572329092	WITHOUT_CLASSIFICATION	1.4276709074255345E-7	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.999997306783306	WITHOUT_CLASSIFICATION	2.6932166939892585E-6	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.999916798362393	WITHOUT_CLASSIFICATION	8.320163760704003E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999954085252725	WITHOUT_CLASSIFICATION	4.591474727488991E-6	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999996823565345	WITHOUT_CLASSIFICATION	3.176434654988475E-7	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999612805364289	WITHOUT_CLASSIFICATION	3.8719463571172876E-5	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999977947039788	WITHOUT_CLASSIFICATION	2.2052960212792686E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.907762727904345	WITHOUT_CLASSIFICATION	0.092237272095655	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999843936306816	WITHOUT_CLASSIFICATION	1.5606369318411908E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993068462832	WITHOUT_CLASSIFICATION	6.931537168629459E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999897101765408	WITHOUT_CLASSIFICATION	1.0289823459223389E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999906305064997	WITHOUT_CLASSIFICATION	9.369493500201692E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.999998356960152	WITHOUT_CLASSIFICATION	1.6430398480400292E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999997528537475	WITHOUT_CLASSIFICATION	2.4714625236746735E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999963605318426	WITHOUT_CLASSIFICATION	3.639468157415645E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999972290339642	WITHOUT_CLASSIFICATION	2.770966035713187E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999997863036951	WITHOUT_CLASSIFICATION	2.1369630479645817E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996679361404	WITHOUT_CLASSIFICATION	3.3206385958729643E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999998969260896	WITHOUT_CLASSIFICATION	1.0307391035523574E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999996191494972	WITHOUT_CLASSIFICATION	3.808505027504311E-7	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999993735827567	WITHOUT_CLASSIFICATION	6.264172433220479E-7	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9997700176362261	WITHOUT_CLASSIFICATION	2.2998236377402901E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999934157038163	WITHOUT_CLASSIFICATION	6.58429618372475E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997424469257968	WITHOUT_CLASSIFICATION	2.575530742031639E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999989924173346	WITHOUT_CLASSIFICATION	1.0075826654652807E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999996320829468	WITHOUT_CLASSIFICATION	3.67917053119671E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999990111560155	WITHOUT_CLASSIFICATION	9.888439844983148E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999760556384586	WITHOUT_CLASSIFICATION	2.394436154140431E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999840265661175	WITHOUT_CLASSIFICATION	1.597343388239875E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999814143106117	WITHOUT_CLASSIFICATION	1.858568938835614E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999881247568057	WITHOUT_CLASSIFICATION	1.1875243194388915E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999990646954311	WITHOUT_CLASSIFICATION	9.353045688457446E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999946902989262	WITHOUT_CLASSIFICATION	5.309701073780063E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999852104724376	WITHOUT_CLASSIFICATION	1.4789527562376687E-5	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999817030724	WITHOUT_CLASSIFICATION	1.8296927597436943E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999983111870127	WITHOUT_CLASSIFICATION	1.6888129874239392E-6	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999661477260218	WITHOUT_CLASSIFICATION	3.3852273978201055E-5	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999991150458798	WITHOUT_CLASSIFICATION	8.849541202510117E-7	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999791895346162	WITHOUT_CLASSIFICATION	2.081046538380748E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999996530788268	WITHOUT_CLASSIFICATION	3.4692117314407195E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999685434220587	WITHOUT_CLASSIFICATION	3.145657794136803E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999963156349129	WITHOUT_CLASSIFICATION	3.6843650870601024E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999963156349129	WITHOUT_CLASSIFICATION	3.6843650870601024E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999971298238716	WITHOUT_CLASSIFICATION	2.8701761284083854E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999971298238716	WITHOUT_CLASSIFICATION	2.8701761284083854E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999994587860311	WITHOUT_CLASSIFICATION	5.412139688729346E-7	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999797505822724	WITHOUT_CLASSIFICATION	2.024941772760472E-5	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999967145587453	WITHOUT_CLASSIFICATION	3.2854412546221697E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999954848383029	WITHOUT_CLASSIFICATION	4.515161697115904E-6	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999981517415685	WITHOUT_CLASSIFICATION	1.8482584315851897E-6	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9983725422957781	WITHOUT_CLASSIFICATION	0.001627457704221993	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9998701972907958	WITHOUT_CLASSIFICATION	1.2980270920418622E-4	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9995378803867301	WITHOUT_CLASSIFICATION	4.6211961326999586E-4	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.999999458695073	WITHOUT_CLASSIFICATION	5.41304927008968E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999995082081391	WITHOUT_CLASSIFICATION	4.917918607827423E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999996330803966	WITHOUT_CLASSIFICATION	3.669196033802676E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999988824487945	WITHOUT_CLASSIFICATION	1.117551205424889E-6	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999745863094013	WITHOUT_CLASSIFICATION	2.541369059871836E-5	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.99999167372627	WITHOUT_CLASSIFICATION	8.326273729932705E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999998728868326	WITHOUT_CLASSIFICATION	1.2711316743630038E-7	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999999804128517	WITHOUT_CLASSIFICATION	1.9587148337294352E-8	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9999730885863795	WITHOUT_CLASSIFICATION	2.6911413620633465E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999954568308508	WITHOUT_CLASSIFICATION	4.543169149226769E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999997269610587	WITHOUT_CLASSIFICATION	2.730389414141925E-7	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999971494863903	WITHOUT_CLASSIFICATION	2.850513609724347E-6	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.999999558806551	WITHOUT_CLASSIFICATION	4.411934489771696E-7	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999986420459055	WITHOUT_CLASSIFICATION	1.3579540945251396E-6	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9999951561224549	WITHOUT_CLASSIFICATION	4.8438775450744225E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983137663593	WITHOUT_CLASSIFICATION	1.686233640698821E-6	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999877433565665	WITHOUT_CLASSIFICATION	1.2256643433457444E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9998701972907958	WITHOUT_CLASSIFICATION	1.2980270920418622E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9998701972907958	WITHOUT_CLASSIFICATION	1.2980270920418622E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968834861526	WITHOUT_CLASSIFICATION	3.1165138474363576E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999999936563727	WITHOUT_CLASSIFICATION	6.34362729680924E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.999999936563727	WITHOUT_CLASSIFICATION	6.34362729680924E-8	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.99997651337704	WITHOUT_CLASSIFICATION	2.348662296007206E-5	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9983956529055249	WITHOUT_CLASSIFICATION	0.0016043470944751192	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.999999714037597	WITHOUT_CLASSIFICATION	2.8596240302489613E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9998831489984953	WITHOUT_CLASSIFICATION	1.1685100150479782E-4	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.999984431212051	WITHOUT_CLASSIFICATION	1.5568787948963188E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999999459773766	WITHOUT_CLASSIFICATION	5.402262340102095E-7	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999999459773766	WITHOUT_CLASSIFICATION	5.402262340102095E-7	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999309958711	WITHOUT_CLASSIFICATION	6.90041288705657E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999998219554841	WITHOUT_CLASSIFICATION	1.7804451584748904E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998557772824613	WITHOUT_CLASSIFICATION	1.442227175387715E-4	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9997444596038202	WITHOUT_CLASSIFICATION	2.555403961798614E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9994891752507046	WITHOUT_CLASSIFICATION	5.108247492953499E-4	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999972706722616	WITHOUT_CLASSIFICATION	2.7293277383315608E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999999288520832	WITHOUT_CLASSIFICATION	7.114791672860235E-8	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999993113039793	WITHOUT_CLASSIFICATION	6.88696020642598E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999996767483926	WITHOUT_CLASSIFICATION	3.2325160731528524E-7	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999940042041521	WITHOUT_CLASSIFICATION	5.995795847909275E-6	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999980153730166	WITHOUT_CLASSIFICATION	1.9846269834064926E-6	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999985789682595	WITHOUT_CLASSIFICATION	1.4210317404945183E-6	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999976213253333	WITHOUT_CLASSIFICATION	2.378674666710189E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999863909004431	WITHOUT_CLASSIFICATION	1.3609099556995295E-5	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999986572344459	WITHOUT_CLASSIFICATION	1.3427655540499462E-6	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999966723386275	WITHOUT_CLASSIFICATION	3.327661372550589E-6	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999972598757488	WITHOUT_CLASSIFICATION	2.7401242511688554E-6	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999349754341192	WITHOUT_CLASSIFICATION	6.502456588072487E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999237349162	WITHOUT_CLASSIFICATION	7.626508384241793E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999997274082437	WITHOUT_CLASSIFICATION	2.72591756338954E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999992706692636	WITHOUT_CLASSIFICATION	7.293307362376923E-7	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999889954348488	WITHOUT_CLASSIFICATION	1.1004565151220129E-5	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.999999836076555	WITHOUT_CLASSIFICATION	1.6392344496438838E-7	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999997126870341	WITHOUT_CLASSIFICATION	2.8731296589882367E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983410547137	WITHOUT_CLASSIFICATION	1.6589452862180892E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999995398615048	WITHOUT_CLASSIFICATION	4.601384952408252E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999998008208784	WITHOUT_CLASSIFICATION	1.991791215275146E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999998008208784	WITHOUT_CLASSIFICATION	1.991791215275146E-7	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999961613530839	WITHOUT_CLASSIFICATION	3.838646916058963E-6	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999984989302	WITHOUT_CLASSIFICATION	1.501069862691527E-9	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9964290478911538	WITHOUT_CLASSIFICATION	0.003570952108846078	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.999999979155295	WITHOUT_CLASSIFICATION	2.0844704967932823E-8	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999894153852168	WITHOUT_CLASSIFICATION	1.0584614783288465E-5	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999953040180547	WITHOUT_CLASSIFICATION	4.695981945266426E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999997066888924	WITHOUT_CLASSIFICATION	2.9331110759746185E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999996191494972	WITHOUT_CLASSIFICATION	3.808505027504311E-7	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999993735827567	WITHOUT_CLASSIFICATION	6.264172433220479E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998298459943744	WITHOUT_CLASSIFICATION	1.701540056255983E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999934157038163	WITHOUT_CLASSIFICATION	6.58429618372475E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999934157038163	WITHOUT_CLASSIFICATION	6.58429618372475E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997424469257968	WITHOUT_CLASSIFICATION	2.575530742031639E-4	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.999996580531201	WITHOUT_CLASSIFICATION	3.4194687990600792E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999999112220088	WITHOUT_CLASSIFICATION	8.87779911195605E-8	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999999112220088	WITHOUT_CLASSIFICATION	8.87779911195605E-8	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999966388901388	WITHOUT_CLASSIFICATION	3.3611098611790564E-6	DEFECT
// open	WITHOUT_CLASSIFICATION	0.999996987219012	WITHOUT_CLASSIFICATION	3.012780988052989E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999996320829468	WITHOUT_CLASSIFICATION	3.67917053119671E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999379344068	WITHOUT_CLASSIFICATION	6.206559322277029E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999831082621642	WITHOUT_CLASSIFICATION	1.6891737835798465E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999831082621642	WITHOUT_CLASSIFICATION	1.6891737835798465E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999997076241411	WITHOUT_CLASSIFICATION	2.923758589727715E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999990646954311	WITHOUT_CLASSIFICATION	9.353045688457446E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999990646954311	WITHOUT_CLASSIFICATION	9.353045688457446E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999946902989262	WITHOUT_CLASSIFICATION	5.309701073780063E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999946902989262	WITHOUT_CLASSIFICATION	5.309701073780063E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999999405180515	WITHOUT_CLASSIFICATION	5.948194850812338E-8	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999992539233311	WITHOUT_CLASSIFICATION	7.46076668936927E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999998178186573	WITHOUT_CLASSIFICATION	1.8218134258835867E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999998178186573	WITHOUT_CLASSIFICATION	1.8218134258835867E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999992539233311	WITHOUT_CLASSIFICATION	7.46076668936927E-7	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999973958684418	WITHOUT_CLASSIFICATION	2.6041315582407883E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999999405180515	WITHOUT_CLASSIFICATION	5.948194850812338E-8	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999995930196	WITHOUT_CLASSIFICATION	4.069804764649572E-10	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999984999083	WITHOUT_CLASSIFICATION	1.500091725182773E-9	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.999999990229823	WITHOUT_CLASSIFICATION	9.770176975992232E-9	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999943380472252	WITHOUT_CLASSIFICATION	5.661952774895037E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998965771666499	WITHOUT_CLASSIFICATION	1.0342283335011857E-4	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999904929361134	WITHOUT_CLASSIFICATION	9.507063886651207E-6	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999904929361134	WITHOUT_CLASSIFICATION	9.507063886651207E-6	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999979257698582	WITHOUT_CLASSIFICATION	2.074230141760919E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999988940454705	WITHOUT_CLASSIFICATION	1.1059545294404243E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999988940454705	WITHOUT_CLASSIFICATION	1.1059545294404243E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9999915569944948	WITHOUT_CLASSIFICATION	8.443005505284005E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999988940454705	WITHOUT_CLASSIFICATION	1.1059545294404243E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999726257603	WITHOUT_CLASSIFICATION	2.7374239771452327E-8	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999949372339081	WITHOUT_CLASSIFICATION	5.062766091893844E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999414183691443	WITHOUT_CLASSIFICATION	5.8581630855696695E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999971103910684	WITHOUT_CLASSIFICATION	2.8896089315153862E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9985270168127839	WITHOUT_CLASSIFICATION	0.001472983187216125	DEFECT
// todo: not serialized yet	DEFECT	0.9988927015823978	WITHOUT_CLASSIFICATION	0.0011072984176022343	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9994245811184718	WITHOUT_CLASSIFICATION	5.754188815281412E-4	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.787591734664035	WITHOUT_CLASSIFICATION	0.21240826533596507	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.787591734664035	WITHOUT_CLASSIFICATION	0.21240826533596507	DEFECT
// TODO: Check this result...	DEFECT	0.9965313739895034	WITHOUT_CLASSIFICATION	0.0034686260104966676	DEFECT
// TODO: Check this result...	DEFECT	0.9965313739895034	WITHOUT_CLASSIFICATION	0.0034686260104966676	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9999573504475181	WITHOUT_CLASSIFICATION	4.264955248194041E-5	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9999915073901381	WITHOUT_CLASSIFICATION	8.492609861908542E-6	DEFECT
