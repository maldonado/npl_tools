// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999998641405531	WITHOUT_CLASSIFICATION	1.35859446912133E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999984004170274	WITHOUT_CLASSIFICATION	1.5995829725400864E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.999999875382606	WITHOUT_CLASSIFICATION	1.2461739394429237E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999963027916303	WITHOUT_CLASSIFICATION	3.6972083697953226E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999998153177397	WITHOUT_CLASSIFICATION	1.846822602942329E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999811555302769	WITHOUT_CLASSIFICATION	1.8844469722999813E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999960614421479	WITHOUT_CLASSIFICATION	3.938557852087224E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9998443017186072	WITHOUT_CLASSIFICATION	1.5569828139280013E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999891622347463	WITHOUT_CLASSIFICATION	1.083776525370983E-5	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999910237118996	WITHOUT_CLASSIFICATION	8.97628810027994E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994250486761	WITHOUT_CLASSIFICATION	5.749513238582139E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999982371267983	WITHOUT_CLASSIFICATION	1.7628732017647227E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999998998694573	WITHOUT_CLASSIFICATION	1.0013054275829574E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999990355283961	WITHOUT_CLASSIFICATION	9.644716038958058E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999985658763938	WITHOUT_CLASSIFICATION	1.4341236061031407E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999949464356158	WITHOUT_CLASSIFICATION	5.053564384220411E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999999572119838	WITHOUT_CLASSIFICATION	4.278801625419597E-8	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999999732871496	WITHOUT_CLASSIFICATION	2.6712850438449533E-8	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999999795513397	WITHOUT_CLASSIFICATION	2.0448660334698198E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999852610505	WITHOUT_CLASSIFICATION	1.4738949619277766E-8	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999907983733	WITHOUT_CLASSIFICATION	9.20162669640117E-9	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999929561639	WITHOUT_CLASSIFICATION	7.043836018259688E-9	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999976793853945	WITHOUT_CLASSIFICATION	2.3206146055059076E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999983306644267	WITHOUT_CLASSIFICATION	1.669335573325577E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999443355958	WITHOUT_CLASSIFICATION	5.56644041170457E-8	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999922998249066	WITHOUT_CLASSIFICATION	7.700175093395917E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999920344073652	WITHOUT_CLASSIFICATION	7.965592634828414E-6	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999554169107027	WITHOUT_CLASSIFICATION	4.4583089297424425E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999994827933855	WITHOUT_CLASSIFICATION	5.172066145591196E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999948672406866	WITHOUT_CLASSIFICATION	5.132759313385047E-6	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999987764004221	WITHOUT_CLASSIFICATION	1.223599577890676E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999995715591317	WITHOUT_CLASSIFICATION	4.2844086832654556E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999655842157	WITHOUT_CLASSIFICATION	3.4415784290677115E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999824258900788	WITHOUT_CLASSIFICATION	1.757410992118701E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999978089639987	WITHOUT_CLASSIFICATION	2.191036001256518E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999999401684834	WITHOUT_CLASSIFICATION	5.983151660596151E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999911029958031	WITHOUT_CLASSIFICATION	8.897004196938722E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999996380654897	WITHOUT_CLASSIFICATION	3.6193451025922894E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999510805712	WITHOUT_CLASSIFICATION	4.8919428752041677E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999510805712	WITHOUT_CLASSIFICATION	4.8919428752041677E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999510805712	WITHOUT_CLASSIFICATION	4.8919428752041677E-8	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999984296767348	WITHOUT_CLASSIFICATION	1.5703232652043529E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999884218894	WITHOUT_CLASSIFICATION	1.157811050428876E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997754603798	WITHOUT_CLASSIFICATION	2.245396202351923E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999993099942972	WITHOUT_CLASSIFICATION	6.900057028255006E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994014598387	WITHOUT_CLASSIFICATION	5.985401613036061E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994014598387	WITHOUT_CLASSIFICATION	5.985401613036061E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994014598387	WITHOUT_CLASSIFICATION	5.985401613036061E-7	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999995479887	WITHOUT_CLASSIFICATION	4.5201133727186673E-10	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999062378562	WITHOUT_CLASSIFICATION	9.37621438516193E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999915559899873	WITHOUT_CLASSIFICATION	8.444010012633898E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.994970815274744	WITHOUT_CLASSIFICATION	0.005029184725256064	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999910776179901	WITHOUT_CLASSIFICATION	8.922382009891041E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999994506712385	WITHOUT_CLASSIFICATION	5.493287614708672E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999933092918085	WITHOUT_CLASSIFICATION	6.690708191440865E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999992587259482	WITHOUT_CLASSIFICATION	7.412740518711866E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999992587259482	WITHOUT_CLASSIFICATION	7.412740518711866E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999789176352925	WITHOUT_CLASSIFICATION	2.1082364707597458E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9992911837974543	WITHOUT_CLASSIFICATION	7.088162025456252E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9992911837974543	WITHOUT_CLASSIFICATION	7.088162025456252E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9992911837974543	WITHOUT_CLASSIFICATION	7.088162025456252E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9992911837974543	WITHOUT_CLASSIFICATION	7.088162025456252E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999997951859694	WITHOUT_CLASSIFICATION	2.048140305081833E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999932583749767	WITHOUT_CLASSIFICATION	6.741625023328375E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999701390140066	WITHOUT_CLASSIFICATION	2.9860985993460458E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999097492428463	WITHOUT_CLASSIFICATION	9.0250757153718E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999989146827706	WITHOUT_CLASSIFICATION	1.0853172293163187E-6	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.999840218883707	WITHOUT_CLASSIFICATION	1.5978111629294295E-4	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999858841821387	WITHOUT_CLASSIFICATION	1.411581786120462E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999884036994405	WITHOUT_CLASSIFICATION	1.159630055956688E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999971642387474	WITHOUT_CLASSIFICATION	2.835761252691156E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999997121873233	WITHOUT_CLASSIFICATION	2.878126767695043E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999975423642846	WITHOUT_CLASSIFICATION	2.4576357153566746E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999983342948452	WITHOUT_CLASSIFICATION	1.6657051547841065E-6	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999925847570542	WITHOUT_CLASSIFICATION	7.4152429457170235E-6	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999995570748796	WITHOUT_CLASSIFICATION	4.4292512035159336E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.999993231361092	WITHOUT_CLASSIFICATION	6.768638907932653E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999972077855912	WITHOUT_CLASSIFICATION	2.792214408744318E-6	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9997900321130104	WITHOUT_CLASSIFICATION	2.0996788698957758E-4	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999946661338	WITHOUT_CLASSIFICATION	5.3338662663874E-9	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999998645139511	WITHOUT_CLASSIFICATION	1.3548604890326703E-6	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999998645139511	WITHOUT_CLASSIFICATION	1.3548604890326703E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999975784914034	WITHOUT_CLASSIFICATION	2.4215085966007527E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999504461719564	WITHOUT_CLASSIFICATION	4.955382804350029E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999898247250799	WITHOUT_CLASSIFICATION	1.0175274920070973E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999987325389672	WITHOUT_CLASSIFICATION	1.2674610327980688E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999993039846209	WITHOUT_CLASSIFICATION	6.960153791235994E-7	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999997352022336	WITHOUT_CLASSIFICATION	2.6479776640009986E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999644942917656	WITHOUT_CLASSIFICATION	3.550570823450126E-5	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999999921752959	WITHOUT_CLASSIFICATION	7.824704007620228E-9	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999670005697796	WITHOUT_CLASSIFICATION	3.2999430220444095E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998915953906	WITHOUT_CLASSIFICATION	1.0840460934982393E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999692645239384	WITHOUT_CLASSIFICATION	3.073547606155301E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999722925507715	WITHOUT_CLASSIFICATION	2.7707449228588608E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.999999985679658	WITHOUT_CLASSIFICATION	1.4320341987648915E-8	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9996212129128845	WITHOUT_CLASSIFICATION	3.78787087115395E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999995417221011	WITHOUT_CLASSIFICATION	4.582778989035953E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999995417221011	WITHOUT_CLASSIFICATION	4.582778989035953E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999041276029	WITHOUT_CLASSIFICATION	9.587239710678413E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999976623571171	WITHOUT_CLASSIFICATION	2.337642883000728E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999937285979363	WITHOUT_CLASSIFICATION	6.271402063647546E-6	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999508650340341	WITHOUT_CLASSIFICATION	4.913496596589132E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999993434068237	WITHOUT_CLASSIFICATION	6.565931763008877E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999961725985436	WITHOUT_CLASSIFICATION	3.827401456378561E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999961725985436	WITHOUT_CLASSIFICATION	3.827401456378561E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999995636305034	WITHOUT_CLASSIFICATION	4.3636949672890463E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999995636305034	WITHOUT_CLASSIFICATION	4.3636949672890463E-7	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999999110214125	WITHOUT_CLASSIFICATION	8.897858749930756E-8	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999792625349418	WITHOUT_CLASSIFICATION	2.0737465058221454E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999855721389911	WITHOUT_CLASSIFICATION	1.4427861008910705E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999958782883105	WITHOUT_CLASSIFICATION	4.12171168949796E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999958782883105	WITHOUT_CLASSIFICATION	4.12171168949796E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9990977557819255	WITHOUT_CLASSIFICATION	9.022442180744018E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9988047135861484	WITHOUT_CLASSIFICATION	0.0011952864138515891	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999923467057797	WITHOUT_CLASSIFICATION	7.653294220249519E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999995137188816	WITHOUT_CLASSIFICATION	4.862811182925015E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999995137188816	WITHOUT_CLASSIFICATION	4.862811182925015E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999953646711007	WITHOUT_CLASSIFICATION	4.635328899212161E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999953646711007	WITHOUT_CLASSIFICATION	4.635328899212161E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.999999984094614	WITHOUT_CLASSIFICATION	1.5905386024999846E-8	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999565361752	WITHOUT_CLASSIFICATION	4.3463824808769195E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999988645636	WITHOUT_CLASSIFICATION	1.1354363995239464E-9	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999949074124	WITHOUT_CLASSIFICATION	5.092587458702614E-9	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999994374688952	WITHOUT_CLASSIFICATION	5.625311048910588E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999996989028989	WITHOUT_CLASSIFICATION	3.0109710119729317E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999926612107295	WITHOUT_CLASSIFICATION	7.338789270491688E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998329267074	WITHOUT_CLASSIFICATION	1.67073292756888E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999999596621346	WITHOUT_CLASSIFICATION	4.033786539269281E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929055855	WITHOUT_CLASSIFICATION	7.0944145765835115E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999999068338033	WITHOUT_CLASSIFICATION	9.316619669335763E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999999068338033	WITHOUT_CLASSIFICATION	9.316619669335763E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999993094541745	WITHOUT_CLASSIFICATION	6.905458254487587E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999993094541745	WITHOUT_CLASSIFICATION	6.905458254487587E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999785420133	WITHOUT_CLASSIFICATION	2.1457986649941633E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999956669655	WITHOUT_CLASSIFICATION	4.333034494328701E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999956669655	WITHOUT_CLASSIFICATION	4.333034494328701E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999956669655	WITHOUT_CLASSIFICATION	4.333034494328701E-9	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999998974165188	WITHOUT_CLASSIFICATION	1.0258348110825975E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998953260103992	WITHOUT_CLASSIFICATION	1.0467398960086673E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999998576580317	WITHOUT_CLASSIFICATION	1.4234196829800208E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999895070915562	WITHOUT_CLASSIFICATION	1.04929084438598E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999895070915562	WITHOUT_CLASSIFICATION	1.04929084438598E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999646576835607	WITHOUT_CLASSIFICATION	3.5342316439341705E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999543554634961	WITHOUT_CLASSIFICATION	4.564453650394942E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999543554634961	WITHOUT_CLASSIFICATION	4.564453650394942E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995485370573	WITHOUT_CLASSIFICATION	4.5146294266518665E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995485370573	WITHOUT_CLASSIFICATION	4.5146294266518665E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995485370573	WITHOUT_CLASSIFICATION	4.5146294266518665E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997799191261	WITHOUT_CLASSIFICATION	2.20080873783184E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997799191261	WITHOUT_CLASSIFICATION	2.20080873783184E-7	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.999999843474371	WITHOUT_CLASSIFICATION	1.565256290284106E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998290263993	WITHOUT_CLASSIFICATION	1.7097360070791934E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998290263993	WITHOUT_CLASSIFICATION	1.7097360070791934E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999954386573899	WITHOUT_CLASSIFICATION	4.561342610029368E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999997007117298	WITHOUT_CLASSIFICATION	2.9928827022529393E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999735812641738	WITHOUT_CLASSIFICATION	2.6418735826158465E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999962997480454	WITHOUT_CLASSIFICATION	3.7002519545548523E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999987508484935	WITHOUT_CLASSIFICATION	1.2491515064521584E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999987176733	WITHOUT_CLASSIFICATION	1.2823266249091586E-9	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999790463586962	WITHOUT_CLASSIFICATION	2.0953641303834002E-5	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999998391500642	WITHOUT_CLASSIFICATION	1.608499358409561E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999178608842607	WITHOUT_CLASSIFICATION	8.213911573932788E-5	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999936771798075	WITHOUT_CLASSIFICATION	6.3228201925767645E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998299476339	WITHOUT_CLASSIFICATION	1.700523661834779E-7	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.7238394633671221	WITHOUT_CLASSIFICATION	0.27616053663287793	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997092625387	WITHOUT_CLASSIFICATION	2.9073746133172115E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984629079426	WITHOUT_CLASSIFICATION	1.5370920575185266E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999971632942252	WITHOUT_CLASSIFICATION	2.83670577473177E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999877811434164	WITHOUT_CLASSIFICATION	1.221885658352801E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999555370295335	WITHOUT_CLASSIFICATION	4.446297046651125E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999961321700361	WITHOUT_CLASSIFICATION	3.867829963937376E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999961321700361	WITHOUT_CLASSIFICATION	3.867829963937376E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996005584397	WITHOUT_CLASSIFICATION	3.9944156033844046E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999823146641392	WITHOUT_CLASSIFICATION	1.768533586070157E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9933612491210977	WITHOUT_CLASSIFICATION	0.006638750878902314	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999995297706026	WITHOUT_CLASSIFICATION	4.702293974069704E-6	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999999444357914	WITHOUT_CLASSIFICATION	5.556420850267421E-8	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999859498280651	WITHOUT_CLASSIFICATION	1.4050171934881076E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999999121691199	WITHOUT_CLASSIFICATION	8.783088006659752E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999109652701162	WITHOUT_CLASSIFICATION	8.903472988371091E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999109652701162	WITHOUT_CLASSIFICATION	8.903472988371091E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999996835373014	WITHOUT_CLASSIFICATION	3.164626985996044E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999996835373014	WITHOUT_CLASSIFICATION	3.164626985996044E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999961003441151	WITHOUT_CLASSIFICATION	3.899655884828269E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999588435169	WITHOUT_CLASSIFICATION	4.1156483102051244E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999999106942262	WITHOUT_CLASSIFICATION	8.93057737436631E-8	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999999096216641	WITHOUT_CLASSIFICATION	9.037833586859624E-8	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999941060487817	WITHOUT_CLASSIFICATION	5.893951218310291E-6	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999202411188269	WITHOUT_CLASSIFICATION	7.975888117303222E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999969622053926	WITHOUT_CLASSIFICATION	3.0377946075018848E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999997605331449	WITHOUT_CLASSIFICATION	2.39466855073225E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999721564146824	WITHOUT_CLASSIFICATION	2.7843585317686003E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995307255356	WITHOUT_CLASSIFICATION	4.692744643915336E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999996002642763	WITHOUT_CLASSIFICATION	3.9973572375811683E-7	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999989677618587	WITHOUT_CLASSIFICATION	1.0322381412927365E-6	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.999978357622817	WITHOUT_CLASSIFICATION	2.1642377183024387E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9978421079278748	WITHOUT_CLASSIFICATION	0.00215789207212532	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9978421079278748	WITHOUT_CLASSIFICATION	0.00215789207212532	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.999999972824716	WITHOUT_CLASSIFICATION	2.7175283999374785E-8	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999998933179111	WITHOUT_CLASSIFICATION	1.0668208895909393E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999969660706	WITHOUT_CLASSIFICATION	3.033929430540335E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999969660706	WITHOUT_CLASSIFICATION	3.033929430540335E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999997955990609	WITHOUT_CLASSIFICATION	2.0440093903353445E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999982894719373	WITHOUT_CLASSIFICATION	1.7105280627376741E-6	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999737696986	WITHOUT_CLASSIFICATION	2.6230301305131854E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9958074226712242	WITHOUT_CLASSIFICATION	0.004192577328775698	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999950035865336	WITHOUT_CLASSIFICATION	4.996413466348301E-6	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.999998243189357	WITHOUT_CLASSIFICATION	1.756810642907421E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999986007610061	WITHOUT_CLASSIFICATION	1.3992389938588624E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999717851894628	WITHOUT_CLASSIFICATION	2.821481053714395E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999717851894628	WITHOUT_CLASSIFICATION	2.821481053714395E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999919800629745	WITHOUT_CLASSIFICATION	8.01993702550761E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9028764210968273	WITHOUT_CLASSIFICATION	0.09712357890317264	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999917061549295	WITHOUT_CLASSIFICATION	8.293845070629425E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999917061549295	WITHOUT_CLASSIFICATION	8.293845070629425E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999516569081782	WITHOUT_CLASSIFICATION	4.83430918217318E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999157013663	WITHOUT_CLASSIFICATION	8.429863371340688E-8	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999992065008655	WITHOUT_CLASSIFICATION	7.934991345174189E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999927804137	WITHOUT_CLASSIFICATION	7.219586310742959E-9	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999997355107849	WITHOUT_CLASSIFICATION	2.6448921510187934E-7	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999998887455528	WITHOUT_CLASSIFICATION	1.1125444724374567E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999509804273111	WITHOUT_CLASSIFICATION	4.901957268880415E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999509804273111	WITHOUT_CLASSIFICATION	4.901957268880415E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999509804273111	WITHOUT_CLASSIFICATION	4.901957268880415E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999945046109	WITHOUT_CLASSIFICATION	5.495389160075149E-9	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999760448016	WITHOUT_CLASSIFICATION	2.3955198341654364E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998487181716	WITHOUT_CLASSIFICATION	1.5128182829917122E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998262603673	WITHOUT_CLASSIFICATION	1.737396325362171E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999858770235	WITHOUT_CLASSIFICATION	1.4122976535611915E-8	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999169563407002	WITHOUT_CLASSIFICATION	8.304365929974545E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999999791095121	WITHOUT_CLASSIFICATION	2.089048788943034E-8	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999978251674774	WITHOUT_CLASSIFICATION	2.1748325225734035E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999978251674774	WITHOUT_CLASSIFICATION	2.1748325225734035E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999978251674774	WITHOUT_CLASSIFICATION	2.1748325225734035E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999802284313427	WITHOUT_CLASSIFICATION	1.977156865725808E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999978089639987	WITHOUT_CLASSIFICATION	2.191036001256518E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992761818444	WITHOUT_CLASSIFICATION	7.238181557023674E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992761818444	WITHOUT_CLASSIFICATION	7.238181557023674E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992761818444	WITHOUT_CLASSIFICATION	7.238181557023674E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999993318127963	WITHOUT_CLASSIFICATION	6.681872037589141E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999950958102789	WITHOUT_CLASSIFICATION	4.9041897210349595E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999950958102789	WITHOUT_CLASSIFICATION	4.9041897210349595E-6	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999765319061543	WITHOUT_CLASSIFICATION	2.3468093845634486E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999989258304345	WITHOUT_CLASSIFICATION	1.0741695655278223E-6	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999998291192023	WITHOUT_CLASSIFICATION	1.708807977354421E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999995377785025	WITHOUT_CLASSIFICATION	4.6222149749876116E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998512043656	WITHOUT_CLASSIFICATION	1.4879563442310606E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999938801529442	WITHOUT_CLASSIFICATION	6.11984705581565E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999973367377324	WITHOUT_CLASSIFICATION	2.6632622677437343E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999824258900788	WITHOUT_CLASSIFICATION	1.757410992118701E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999997933513831	WITHOUT_CLASSIFICATION	2.0664861693988618E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994250486761	WITHOUT_CLASSIFICATION	5.749513238582139E-7	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999402576494346	WITHOUT_CLASSIFICATION	5.974235056528823E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999961885416945	WITHOUT_CLASSIFICATION	3.811458305462265E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999986666233015	WITHOUT_CLASSIFICATION	1.3333766984937378E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999986666233015	WITHOUT_CLASSIFICATION	1.3333766984937378E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999966521320138	WITHOUT_CLASSIFICATION	3.347867986222178E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998943142374	WITHOUT_CLASSIFICATION	1.0568576247210275E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998943142374	WITHOUT_CLASSIFICATION	1.0568576247210275E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999981988889856	WITHOUT_CLASSIFICATION	1.8011110145276345E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999999199308446	WITHOUT_CLASSIFICATION	8.006915542569444E-8	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999985785306114	WITHOUT_CLASSIFICATION	1.4214693887377985E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999989726663722	WITHOUT_CLASSIFICATION	1.0273336279059617E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998991162679932	WITHOUT_CLASSIFICATION	1.0088373200670782E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998991162679932	WITHOUT_CLASSIFICATION	1.0088373200670782E-4	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999994272853329	WITHOUT_CLASSIFICATION	5.727146671345303E-7	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9868254731192524	WITHOUT_CLASSIFICATION	0.01317452688074769	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999993329802888	WITHOUT_CLASSIFICATION	6.670197111771209E-7	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999953890649607	WITHOUT_CLASSIFICATION	4.610935039336006E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999918404342	WITHOUT_CLASSIFICATION	8.159565857063414E-9	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999999251576978	WITHOUT_CLASSIFICATION	7.484230219470723E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980832374769	WITHOUT_CLASSIFICATION	1.9167625231873744E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999830217631	WITHOUT_CLASSIFICATION	1.6978236946512736E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999661485711	WITHOUT_CLASSIFICATION	3.385142885075822E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999927057762329	WITHOUT_CLASSIFICATION	7.294223767138618E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999933056856256	WITHOUT_CLASSIFICATION	6.694314374371336E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999797294022175	WITHOUT_CLASSIFICATION	2.027059778263204E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.999999049482654	WITHOUT_CLASSIFICATION	9.505173459819548E-7	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.999999965906839	WITHOUT_CLASSIFICATION	3.409316092613567E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999993482729149	WITHOUT_CLASSIFICATION	6.517270851397702E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.999999880737741	WITHOUT_CLASSIFICATION	1.1926225886119424E-7	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999890902371169	WITHOUT_CLASSIFICATION	1.0909762883019685E-5	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999998675059332	WITHOUT_CLASSIFICATION	1.3249406684440487E-7	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999959124925631	WITHOUT_CLASSIFICATION	4.087507436834327E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999973107236475	WITHOUT_CLASSIFICATION	2.6892763525768803E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999973107236475	WITHOUT_CLASSIFICATION	2.6892763525768803E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999845721833029	WITHOUT_CLASSIFICATION	1.5427816697096415E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999988809638082	WITHOUT_CLASSIFICATION	1.1190361918128868E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999827033786035	WITHOUT_CLASSIFICATION	1.7296621396506948E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999891641863466	WITHOUT_CLASSIFICATION	1.0835813653314565E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999972439778407	WITHOUT_CLASSIFICATION	2.756022159190162E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999941789819997	WITHOUT_CLASSIFICATION	5.821018000365443E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.999999716976099	WITHOUT_CLASSIFICATION	2.830239009411053E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999996590678354	WITHOUT_CLASSIFICATION	3.409321645565478E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999939392474729	WITHOUT_CLASSIFICATION	6.060752527015724E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999939392474729	WITHOUT_CLASSIFICATION	6.060752527015724E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9994931040080511	WITHOUT_CLASSIFICATION	5.068959919487915E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999998647920323	WITHOUT_CLASSIFICATION	1.3520796767952756E-7	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.999493979518359	WITHOUT_CLASSIFICATION	5.060204816410091E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9990566157779113	WITHOUT_CLASSIFICATION	9.433842220886719E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9966968046021841	WITHOUT_CLASSIFICATION	0.003303195397815833	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999359960468	WITHOUT_CLASSIFICATION	6.400395320217804E-8	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999998908167206	WITHOUT_CLASSIFICATION	1.0918327936513665E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999999372101749	WITHOUT_CLASSIFICATION	6.27898250502717E-8	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999998582076537	WITHOUT_CLASSIFICATION	1.4179234622674327E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998506974738	WITHOUT_CLASSIFICATION	1.4930252616676954E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998506974738	WITHOUT_CLASSIFICATION	1.4930252616676954E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9994986063078964	WITHOUT_CLASSIFICATION	5.01393692103515E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999970294044207	WITHOUT_CLASSIFICATION	2.97059557937477E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999994498132035	WITHOUT_CLASSIFICATION	5.501867965613096E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999998211247725	WITHOUT_CLASSIFICATION	1.7887522742783906E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999998211247725	WITHOUT_CLASSIFICATION	1.7887522742783906E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999996137560814	WITHOUT_CLASSIFICATION	3.862439187151375E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999996137560814	WITHOUT_CLASSIFICATION	3.862439187151375E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999624624978228	WITHOUT_CLASSIFICATION	3.753750217720513E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999935741929582	WITHOUT_CLASSIFICATION	6.425807041827854E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999988577175349	WITHOUT_CLASSIFICATION	1.1422824650070078E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999988577175349	WITHOUT_CLASSIFICATION	1.1422824650070078E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999978203025381	WITHOUT_CLASSIFICATION	2.1796974618158753E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999982371267983	WITHOUT_CLASSIFICATION	1.7628732017647227E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.999997797938098	WITHOUT_CLASSIFICATION	2.20206190212022E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999977821744369	WITHOUT_CLASSIFICATION	2.217825563032666E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999986297694062	WITHOUT_CLASSIFICATION	1.3702305937762762E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999745811633197	WITHOUT_CLASSIFICATION	2.541883668026897E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999177380664935	WITHOUT_CLASSIFICATION	8.226193350649207E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999999251875453	WITHOUT_CLASSIFICATION	7.481245467113565E-8	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999994161168368	WITHOUT_CLASSIFICATION	5.838831631781607E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999925169415362	WITHOUT_CLASSIFICATION	7.483058463851026E-6	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.999995507022468	WITHOUT_CLASSIFICATION	4.492977531953358E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998063738536	WITHOUT_CLASSIFICATION	1.9362614650011498E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999673102188077	WITHOUT_CLASSIFICATION	3.268978119225137E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999882043828703	WITHOUT_CLASSIFICATION	1.1795617129761735E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.999768036025173	WITHOUT_CLASSIFICATION	2.3196397482705433E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999996139589845	WITHOUT_CLASSIFICATION	3.86041015419551E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999989903530945	WITHOUT_CLASSIFICATION	1.0096469055176848E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999997449663945	WITHOUT_CLASSIFICATION	2.550336054829709E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999978269754201	WITHOUT_CLASSIFICATION	2.1730245800340147E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999994748155201	WITHOUT_CLASSIFICATION	5.251844800015964E-7	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999998231263156	WITHOUT_CLASSIFICATION	1.768736843930135E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999962072444747	WITHOUT_CLASSIFICATION	3.7927555252917044E-6	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.999997247264607	WITHOUT_CLASSIFICATION	2.7527353929240117E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999984536051005	WITHOUT_CLASSIFICATION	1.546394899468727E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999997561746	WITHOUT_CLASSIFICATION	2.438253284916073E-10	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999966668046844	WITHOUT_CLASSIFICATION	3.333195315614491E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999510805712	WITHOUT_CLASSIFICATION	4.8919428752041677E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999510805712	WITHOUT_CLASSIFICATION	4.8919428752041677E-8	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999974989516	WITHOUT_CLASSIFICATION	2.5010482500484348E-9	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999981362344325	WITHOUT_CLASSIFICATION	1.8637655676282064E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999361385364	WITHOUT_CLASSIFICATION	6.386146355075091E-8	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999981542302634	WITHOUT_CLASSIFICATION	1.8457697365542203E-6	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999987856747851	WITHOUT_CLASSIFICATION	1.214325214986343E-6	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999716992949	WITHOUT_CLASSIFICATION	2.8300705141476166E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9269482877461191	WITHOUT_CLASSIFICATION	0.07305171225388087	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.99999986394247	WITHOUT_CLASSIFICATION	1.3605752994371204E-7	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999959515148302	WITHOUT_CLASSIFICATION	4.048485169735984E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999735006868	WITHOUT_CLASSIFICATION	2.64993131235896E-8	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999984500630796	WITHOUT_CLASSIFICATION	1.5499369203620999E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999984296767348	WITHOUT_CLASSIFICATION	1.5703232652043529E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999997454389835	WITHOUT_CLASSIFICATION	2.5456101651011797E-7	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.999998966404995	WITHOUT_CLASSIFICATION	1.0335950050143883E-6	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999972199754263	WITHOUT_CLASSIFICATION	2.7800245736474273E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999999389069723	WITHOUT_CLASSIFICATION	6.109302770895749E-7	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9886064032524913	WITHOUT_CLASSIFICATION	0.011393596747508773	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999999707943648	WITHOUT_CLASSIFICATION	2.9205635205809944E-8	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999972080693588	WITHOUT_CLASSIFICATION	2.7919306412439895E-6	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.999984565068617	WITHOUT_CLASSIFICATION	1.543493138293888E-5	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999981883239338	WITHOUT_CLASSIFICATION	1.8116760661060114E-6	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999778556112	WITHOUT_CLASSIFICATION	2.214438874849289E-8	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999999332588216	WITHOUT_CLASSIFICATION	6.674117837203754E-8	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999986826705	WITHOUT_CLASSIFICATION	1.3173293800944392E-9	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.999999984012782	WITHOUT_CLASSIFICATION	1.5987217993499554E-8	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.99997378218669	WITHOUT_CLASSIFICATION	2.6217813310022353E-5	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999775205355668	WITHOUT_CLASSIFICATION	2.247946443317258E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999973356993056	WITHOUT_CLASSIFICATION	2.6643006944084323E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999999892226797	WITHOUT_CLASSIFICATION	1.0777320273611478E-8	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999538792	WITHOUT_CLASSIFICATION	4.612072433314848E-11	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.999999971861822	WITHOUT_CLASSIFICATION	2.8138177897136313E-8	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999857684761965	WITHOUT_CLASSIFICATION	1.4231523803491412E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999939610685	WITHOUT_CLASSIFICATION	6.038931465042611E-9	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999939610685	WITHOUT_CLASSIFICATION	6.038931465042611E-9	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999907023456376	WITHOUT_CLASSIFICATION	9.29765436238138E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999984807050831	WITHOUT_CLASSIFICATION	1.5192949169008017E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999884218894	WITHOUT_CLASSIFICATION	1.157811050428876E-8	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999884218894	WITHOUT_CLASSIFICATION	1.157811050428876E-8	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999992421574775	WITHOUT_CLASSIFICATION	7.578425224366639E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999729306889	WITHOUT_CLASSIFICATION	2.7069311089615125E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999729306889	WITHOUT_CLASSIFICATION	2.7069311089615125E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999729306889	WITHOUT_CLASSIFICATION	2.7069311089615125E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999984807050831	WITHOUT_CLASSIFICATION	1.5192949169008017E-6	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999995123036579	WITHOUT_CLASSIFICATION	4.876963420906964E-7	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999998251680989	WITHOUT_CLASSIFICATION	1.7483190111413584E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999984807050831	WITHOUT_CLASSIFICATION	1.5192949169008017E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999984807050831	WITHOUT_CLASSIFICATION	1.5192949169008017E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999984807050831	WITHOUT_CLASSIFICATION	1.5192949169008017E-6	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999909304546	WITHOUT_CLASSIFICATION	9.069545418500098E-9	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.999995826353307	WITHOUT_CLASSIFICATION	4.173646693081984E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.999998319589484	WITHOUT_CLASSIFICATION	1.6804105159412554E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998993068765	WITHOUT_CLASSIFICATION	1.0069312352198924E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999493877152551	WITHOUT_CLASSIFICATION	5.061228474485923E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997754603798	WITHOUT_CLASSIFICATION	2.245396202351923E-7	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999991688563	WITHOUT_CLASSIFICATION	8.311437034269292E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997754603798	WITHOUT_CLASSIFICATION	2.245396202351923E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9845992914756846	WITHOUT_CLASSIFICATION	0.015400708524315484	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999997438196163	WITHOUT_CLASSIFICATION	2.5618038367551266E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997754603798	WITHOUT_CLASSIFICATION	2.245396202351923E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997754603798	WITHOUT_CLASSIFICATION	2.245396202351923E-7	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999854278111966	WITHOUT_CLASSIFICATION	1.4572188803428228E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999822124033516	WITHOUT_CLASSIFICATION	1.77875966483587E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999993099942972	WITHOUT_CLASSIFICATION	6.900057028255006E-7	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999999151667994	WITHOUT_CLASSIFICATION	8.483320052979977E-8	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999937938063	WITHOUT_CLASSIFICATION	6.206193655359687E-9	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999999654741739	WITHOUT_CLASSIFICATION	3.452582609978253E-8	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999960258682911	WITHOUT_CLASSIFICATION	3.974131708975493E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999444794267301	WITHOUT_CLASSIFICATION	5.5520573269891386E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999444794267301	WITHOUT_CLASSIFICATION	5.5520573269891386E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999991435936878	WITHOUT_CLASSIFICATION	8.564063121634439E-7	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999851153060494	WITHOUT_CLASSIFICATION	1.4884693950519146E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9961841814926663	WITHOUT_CLASSIFICATION	0.0038158185073338155	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997184564151	WITHOUT_CLASSIFICATION	2.8154358492563125E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994014598387	WITHOUT_CLASSIFICATION	5.985401613036061E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994014598387	WITHOUT_CLASSIFICATION	5.985401613036061E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994014598387	WITHOUT_CLASSIFICATION	5.985401613036061E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997184564151	WITHOUT_CLASSIFICATION	2.8154358492563125E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997184564151	WITHOUT_CLASSIFICATION	2.8154358492563125E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997184564151	WITHOUT_CLASSIFICATION	2.8154358492563125E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997184564151	WITHOUT_CLASSIFICATION	2.8154358492563125E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997184564151	WITHOUT_CLASSIFICATION	2.8154358492563125E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999996082717132	WITHOUT_CLASSIFICATION	3.917282868791124E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997795549119	WITHOUT_CLASSIFICATION	2.2044508819912055E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999987696484499	WITHOUT_CLASSIFICATION	1.2303515500793171E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999987696484499	WITHOUT_CLASSIFICATION	1.2303515500793171E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997795549119	WITHOUT_CLASSIFICATION	2.2044508819912055E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997795549119	WITHOUT_CLASSIFICATION	2.2044508819912055E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997795549119	WITHOUT_CLASSIFICATION	2.2044508819912055E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998586889728	WITHOUT_CLASSIFICATION	1.413110271993984E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998586889728	WITHOUT_CLASSIFICATION	1.413110271993984E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998586889728	WITHOUT_CLASSIFICATION	1.413110271993984E-6	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999185913613	WITHOUT_CLASSIFICATION	8.140863879868E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9269482877461191	WITHOUT_CLASSIFICATION	0.07305171225388087	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997795549119	WITHOUT_CLASSIFICATION	2.2044508819912055E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998586889728	WITHOUT_CLASSIFICATION	1.413110271993984E-6	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999998595491654	WITHOUT_CLASSIFICATION	1.4045083464805344E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999974498475507	WITHOUT_CLASSIFICATION	2.5501524492145614E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999995526162492	WITHOUT_CLASSIFICATION	4.473837508793833E-7	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.999999925024494	WITHOUT_CLASSIFICATION	7.497550610946488E-8	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999999101852223	WITHOUT_CLASSIFICATION	8.981477768083842E-8	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999983158983458	WITHOUT_CLASSIFICATION	1.6841016542587984E-6	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999958539710827	WITHOUT_CLASSIFICATION	4.14602891737322E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999927790387775	WITHOUT_CLASSIFICATION	7.220961222589888E-6	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999995771077871	WITHOUT_CLASSIFICATION	4.2289221292286556E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.999999924397324	WITHOUT_CLASSIFICATION	7.560267595657304E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.999999924397324	WITHOUT_CLASSIFICATION	7.560267595657304E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999363902626	WITHOUT_CLASSIFICATION	6.36097374544008E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999363902626	WITHOUT_CLASSIFICATION	6.36097374544008E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999996906958025	WITHOUT_CLASSIFICATION	3.0930419742995623E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999996906958025	WITHOUT_CLASSIFICATION	3.0930419742995623E-7	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999999531448948	WITHOUT_CLASSIFICATION	4.6855105198071556E-8	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999299730495292	WITHOUT_CLASSIFICATION	7.002695047067487E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9998490406371846	WITHOUT_CLASSIFICATION	1.5095936281541786E-4	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.999997252282466	WITHOUT_CLASSIFICATION	2.747717533852928E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999988842541196	WITHOUT_CLASSIFICATION	1.115745880458361E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999946509271289	WITHOUT_CLASSIFICATION	5.349072871124351E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999938518177	WITHOUT_CLASSIFICATION	6.148182254038586E-9	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999988948314266	WITHOUT_CLASSIFICATION	1.1051685733961834E-6	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999414418702	WITHOUT_CLASSIFICATION	5.855812985247971E-8	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999919038056454	WITHOUT_CLASSIFICATION	8.096194354526815E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.999999692301461	WITHOUT_CLASSIFICATION	3.0769853887466335E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998993068765	WITHOUT_CLASSIFICATION	1.0069312352198924E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999958722807081	WITHOUT_CLASSIFICATION	4.127719291910533E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999994506712385	WITHOUT_CLASSIFICATION	5.493287614708672E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999999259240423	WITHOUT_CLASSIFICATION	7.407595771997587E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999062378562	WITHOUT_CLASSIFICATION	9.37621438516193E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999062378562	WITHOUT_CLASSIFICATION	9.37621438516193E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.99999993615728	WITHOUT_CLASSIFICATION	6.38427200805044E-8	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999998641535476	WITHOUT_CLASSIFICATION	1.3584645245870888E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999990180928683	WITHOUT_CLASSIFICATION	9.819071317290809E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999741383189	WITHOUT_CLASSIFICATION	2.5861681026593143E-8	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.999992914315119	WITHOUT_CLASSIFICATION	7.085684881041492E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999871477797064	WITHOUT_CLASSIFICATION	1.2852220293455073E-5	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999986726689892	WITHOUT_CLASSIFICATION	1.3273310108077817E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999958428444157	WITHOUT_CLASSIFICATION	4.1571555842922285E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999992466114237	WITHOUT_CLASSIFICATION	7.53388576261611E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9998979947679405	WITHOUT_CLASSIFICATION	1.0200523205942354E-4	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999811959034544	WITHOUT_CLASSIFICATION	1.8804096545654465E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999910776179901	WITHOUT_CLASSIFICATION	8.922382009891041E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999956995120398	WITHOUT_CLASSIFICATION	4.30048796017595E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999997009765085	WITHOUT_CLASSIFICATION	2.990234914458533E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999998537269805	WITHOUT_CLASSIFICATION	1.4627301943765265E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999145323701	WITHOUT_CLASSIFICATION	8.546762984175053E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999145323701	WITHOUT_CLASSIFICATION	8.546762984175053E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999997071793071	WITHOUT_CLASSIFICATION	2.928206928099012E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999997071793071	WITHOUT_CLASSIFICATION	2.928206928099012E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999933092918085	WITHOUT_CLASSIFICATION	6.690708191440865E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999933092918085	WITHOUT_CLASSIFICATION	6.690708191440865E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999899373868602	WITHOUT_CLASSIFICATION	1.0062613139770624E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999851153060494	WITHOUT_CLASSIFICATION	1.4884693950519146E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9998637215311105	WITHOUT_CLASSIFICATION	1.362784688895116E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9997022678618527	WITHOUT_CLASSIFICATION	2.977321381473282E-4	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999022368465	WITHOUT_CLASSIFICATION	9.776315348527789E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999930079154729	WITHOUT_CLASSIFICATION	6.992084527147755E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999145323701	WITHOUT_CLASSIFICATION	8.546762984175053E-8	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.999979885453861	WITHOUT_CLASSIFICATION	2.0114546139037376E-5	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9997072521208048	WITHOUT_CLASSIFICATION	2.927478791951046E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999726222266	WITHOUT_CLASSIFICATION	2.737777334509706E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996125975918	WITHOUT_CLASSIFICATION	3.8740240815556876E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999997071793071	WITHOUT_CLASSIFICATION	2.928206928099012E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999933092918085	WITHOUT_CLASSIFICATION	6.690708191440865E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999851153060494	WITHOUT_CLASSIFICATION	1.4884693950519146E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.99999990444167	WITHOUT_CLASSIFICATION	9.555832999263963E-8	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999980976806	WITHOUT_CLASSIFICATION	1.9023194289189554E-9	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999993984807054	WITHOUT_CLASSIFICATION	6.015192945759093E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999312445748	WITHOUT_CLASSIFICATION	6.875542523435476E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999999853127755	WITHOUT_CLASSIFICATION	1.4687224475133146E-8	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999999715281419	WITHOUT_CLASSIFICATION	2.8471858095199207E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9992911837974543	WITHOUT_CLASSIFICATION	7.088162025456252E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999946592803595	WITHOUT_CLASSIFICATION	5.3407196406387506E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999904064533545	WITHOUT_CLASSIFICATION	9.59354664551248E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9982143669170334	WITHOUT_CLASSIFICATION	0.0017856330829667249	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999997951859694	WITHOUT_CLASSIFICATION	2.048140305081833E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999932583749767	WITHOUT_CLASSIFICATION	6.741625023328375E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999982716135171	WITHOUT_CLASSIFICATION	1.7283864829469449E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999982716135171	WITHOUT_CLASSIFICATION	1.7283864829469449E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.999999234138495	WITHOUT_CLASSIFICATION	7.658615050276421E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.999999234138495	WITHOUT_CLASSIFICATION	7.658615050276421E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999992852632322	WITHOUT_CLASSIFICATION	7.147367677404492E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999992852632322	WITHOUT_CLASSIFICATION	7.147367677404492E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999798539328624	WITHOUT_CLASSIFICATION	2.0146067137653947E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999701390140066	WITHOUT_CLASSIFICATION	2.9860985993460458E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9998985876147082	WITHOUT_CLASSIFICATION	1.0141238529177801E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999097492428463	WITHOUT_CLASSIFICATION	9.0250757153718E-5	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999847780310729	WITHOUT_CLASSIFICATION	1.5221968927092858E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999932525682095	WITHOUT_CLASSIFICATION	6.7474317905491496E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.999999702515026	WITHOUT_CLASSIFICATION	2.974849740702006E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.999999702515026	WITHOUT_CLASSIFICATION	2.974849740702006E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997066360905	WITHOUT_CLASSIFICATION	2.933639095152258E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997066360905	WITHOUT_CLASSIFICATION	2.933639095152258E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999989146827706	WITHOUT_CLASSIFICATION	1.0853172293163187E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996739425909867	WITHOUT_CLASSIFICATION	3.2605740901332195E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999762464846643	WITHOUT_CLASSIFICATION	2.3753515335633844E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999627306556955	WITHOUT_CLASSIFICATION	3.726934430448154E-5	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999559111863078	WITHOUT_CLASSIFICATION	4.408881369214787E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999993182494112	WITHOUT_CLASSIFICATION	6.817505886758691E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999992587259482	WITHOUT_CLASSIFICATION	7.412740518711866E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996739425909867	WITHOUT_CLASSIFICATION	3.2605740901332195E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999762464846643	WITHOUT_CLASSIFICATION	2.3753515335633844E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999627306556955	WITHOUT_CLASSIFICATION	3.726934430448154E-5	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999999777670276	WITHOUT_CLASSIFICATION	2.2232972387927947E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.999987879379666	WITHOUT_CLASSIFICATION	1.212062033396309E-5	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999998660502321	WITHOUT_CLASSIFICATION	1.339497679749745E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999752871110306	WITHOUT_CLASSIFICATION	2.471288896932163E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9946074525205272	WITHOUT_CLASSIFICATION	0.005392547479472889	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9987870493965384	WITHOUT_CLASSIFICATION	0.0012129506034616801	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999197695161866	WITHOUT_CLASSIFICATION	8.023048381346223E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999858841821387	WITHOUT_CLASSIFICATION	1.411581786120462E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999304744983891	WITHOUT_CLASSIFICATION	6.952550161083709E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999527524630231	WITHOUT_CLASSIFICATION	4.7247536976972426E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999999483150774	WITHOUT_CLASSIFICATION	5.1684922489843174E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.999999983041431	WITHOUT_CLASSIFICATION	1.6958568967504456E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.999999983041431	WITHOUT_CLASSIFICATION	1.6958568967504456E-8	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999993955540953	WITHOUT_CLASSIFICATION	6.044459046314932E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999993955540953	WITHOUT_CLASSIFICATION	6.044459046314932E-7	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999987153764595	WITHOUT_CLASSIFICATION	1.2846235404806823E-6	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999999722355734	WITHOUT_CLASSIFICATION	2.7764426674850882E-8	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999987182904839	WITHOUT_CLASSIFICATION	1.281709516106992E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999997121873233	WITHOUT_CLASSIFICATION	2.878126767695043E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999948173090715	WITHOUT_CLASSIFICATION	5.182690928517807E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999992428444576	WITHOUT_CLASSIFICATION	7.571555424699573E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999946592803595	WITHOUT_CLASSIFICATION	5.3407196406387506E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999977104062601	WITHOUT_CLASSIFICATION	2.2895937398894662E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999959381548572	WITHOUT_CLASSIFICATION	4.061845142826442E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999998128338741	WITHOUT_CLASSIFICATION	1.8716612601358803E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999922768818556	WITHOUT_CLASSIFICATION	7.723118144403938E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999971642387474	WITHOUT_CLASSIFICATION	2.835761252691156E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999966280628924	WITHOUT_CLASSIFICATION	3.371937107641142E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999966280628924	WITHOUT_CLASSIFICATION	3.371937107641142E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999528379248479	WITHOUT_CLASSIFICATION	4.716207515207288E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999975423642846	WITHOUT_CLASSIFICATION	2.4576357153566746E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999326575440288	WITHOUT_CLASSIFICATION	6.734245597121256E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999517617112665	WITHOUT_CLASSIFICATION	4.8238288733447844E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999997451847423	WITHOUT_CLASSIFICATION	2.548152577048136E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999991365260011	WITHOUT_CLASSIFICATION	8.634739988084465E-7	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999966199911237	WITHOUT_CLASSIFICATION	3.38000887638694E-6	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999978711618586	WITHOUT_CLASSIFICATION	2.1288381413265774E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999975868598036	WITHOUT_CLASSIFICATION	2.4131401963943006E-6	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999998178130596	WITHOUT_CLASSIFICATION	1.8218694042345041E-7	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999997438196163	WITHOUT_CLASSIFICATION	2.5618038367551266E-7	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999918881950268	WITHOUT_CLASSIFICATION	8.111804973149218E-6	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.999994090392353	WITHOUT_CLASSIFICATION	5.909607646991131E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999977107416345	WITHOUT_CLASSIFICATION	2.2892583654564643E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999993111469588	WITHOUT_CLASSIFICATION	6.888530411340136E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999937798162408	WITHOUT_CLASSIFICATION	6.220183759150934E-6	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999981455345268	WITHOUT_CLASSIFICATION	1.8544654731521026E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999956605418712	WITHOUT_CLASSIFICATION	4.3394581287725E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999956990223192	WITHOUT_CLASSIFICATION	4.3009776807033765E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999997760293285	WITHOUT_CLASSIFICATION	2.239706714944158E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999938920033695	WITHOUT_CLASSIFICATION	6.107996630494329E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999974405160402	WITHOUT_CLASSIFICATION	2.559483959750494E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999977107416345	WITHOUT_CLASSIFICATION	2.2892583654564643E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.999999716368473	WITHOUT_CLASSIFICATION	2.83631526985562E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999993111469588	WITHOUT_CLASSIFICATION	6.888530411340136E-7	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999541886114699	WITHOUT_CLASSIFICATION	4.581138853004017E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999972077855912	WITHOUT_CLASSIFICATION	2.792214408744318E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999937798162408	WITHOUT_CLASSIFICATION	6.220183759150934E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999956605418712	WITHOUT_CLASSIFICATION	4.3394581287725E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999981682307291	WITHOUT_CLASSIFICATION	1.8317692708791316E-6	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999974225794644	WITHOUT_CLASSIFICATION	2.5774205355735334E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999998568889911	WITHOUT_CLASSIFICATION	1.4311100883760634E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999991377567579	WITHOUT_CLASSIFICATION	8.622432421288527E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999989703861033	WITHOUT_CLASSIFICATION	1.029613896624277E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999978405944748	WITHOUT_CLASSIFICATION	2.159405525130913E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999907638649251	WITHOUT_CLASSIFICATION	9.236135074800643E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999986955288062	WITHOUT_CLASSIFICATION	1.304471193904659E-6	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999908292192127	WITHOUT_CLASSIFICATION	9.170780787248868E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999889603736819	WITHOUT_CLASSIFICATION	1.103962631796702E-5	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.999999687479668	WITHOUT_CLASSIFICATION	3.1252033195016485E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999594215208594	WITHOUT_CLASSIFICATION	4.057847914062549E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999541886114699	WITHOUT_CLASSIFICATION	4.581138853004017E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999981682307291	WITHOUT_CLASSIFICATION	1.8317692708791316E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999986955288062	WITHOUT_CLASSIFICATION	1.304471193904659E-6	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999980474236132	WITHOUT_CLASSIFICATION	1.9525763866880815E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999441603901317	WITHOUT_CLASSIFICATION	5.583960986827765E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999527329736119	WITHOUT_CLASSIFICATION	4.7267026388007685E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999971927211514	WITHOUT_CLASSIFICATION	2.8072788485763463E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999946297018785	WITHOUT_CLASSIFICATION	5.3702981215531594E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999961286478767	WITHOUT_CLASSIFICATION	3.871352123349714E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999949201314003	WITHOUT_CLASSIFICATION	5.079868599712845E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.999999978056581	WITHOUT_CLASSIFICATION	2.1943419047588436E-8	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999998977724756	WITHOUT_CLASSIFICATION	1.0222752446646385E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999963330680698	WITHOUT_CLASSIFICATION	3.6669319302109946E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999977889102654	WITHOUT_CLASSIFICATION	2.2110897345815005E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999988871367379	WITHOUT_CLASSIFICATION	1.1128632620697541E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999991867327065	WITHOUT_CLASSIFICATION	8.132672936258373E-7	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999997185021727	WITHOUT_CLASSIFICATION	2.814978272748636E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999075332105134	WITHOUT_CLASSIFICATION	9.24667894866099E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999923590758616	WITHOUT_CLASSIFICATION	7.640924138421637E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.99999994612137	WITHOUT_CLASSIFICATION	5.387862991115123E-8	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.999999988205386	WITHOUT_CLASSIFICATION	1.1794613969145121E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9999434522612577	WITHOUT_CLASSIFICATION	5.654773874227289E-5	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999999764125311	WITHOUT_CLASSIFICATION	2.3587468977467576E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999773502566	WITHOUT_CLASSIFICATION	2.2649743503713525E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9499481849687772	WITHOUT_CLASSIFICATION	0.050051815031222836	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999993256211703	WITHOUT_CLASSIFICATION	6.743788295568694E-7	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999943065231369	WITHOUT_CLASSIFICATION	5.693476863043107E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999701390140066	WITHOUT_CLASSIFICATION	2.9860985993460458E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999989146827706	WITHOUT_CLASSIFICATION	1.0853172293163187E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996739425909867	WITHOUT_CLASSIFICATION	3.2605740901332195E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.999988228265297	WITHOUT_CLASSIFICATION	1.1771734703140602E-5	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999996588063282	WITHOUT_CLASSIFICATION	3.411936717234052E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999984831739592	WITHOUT_CLASSIFICATION	1.5168260407470482E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999851150275714	WITHOUT_CLASSIFICATION	1.4884972428631954E-5	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999988064609142	WITHOUT_CLASSIFICATION	1.193539085719917E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.999992543463603	WITHOUT_CLASSIFICATION	7.456536396984556E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999992161791463	WITHOUT_CLASSIFICATION	7.838208537479592E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999975784914034	WITHOUT_CLASSIFICATION	2.4215085966007527E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999411235920603	WITHOUT_CLASSIFICATION	5.887640793971855E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999794463338624	WITHOUT_CLASSIFICATION	2.0553666137652405E-5	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.999425673022861	WITHOUT_CLASSIFICATION	5.743269771389497E-4	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999757871391005	WITHOUT_CLASSIFICATION	2.4212860899498528E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999504461719564	WITHOUT_CLASSIFICATION	4.955382804350029E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9983988409795687	WITHOUT_CLASSIFICATION	0.001601159020431323	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9983988409795687	WITHOUT_CLASSIFICATION	0.001601159020431323	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9998842347830061	WITHOUT_CLASSIFICATION	1.1576521699379987E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9998842347830061	WITHOUT_CLASSIFICATION	1.1576521699379987E-4	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9906438666686439	WITHOUT_CLASSIFICATION	0.009356133331356166	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999898247250799	WITHOUT_CLASSIFICATION	1.0175274920070973E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999998586410682	WITHOUT_CLASSIFICATION	1.413589317266855E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999968829312388	WITHOUT_CLASSIFICATION	3.1170687611696178E-6	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999964136559641	WITHOUT_CLASSIFICATION	3.586344035887635E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999791221689144	WITHOUT_CLASSIFICATION	2.0877831085587465E-5	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999999878390297	WITHOUT_CLASSIFICATION	1.2160970372903945E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999926236263	WITHOUT_CLASSIFICATION	7.3763738343157004E-9	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.999999930892497	WITHOUT_CLASSIFICATION	6.91075029920631E-8	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999932525682095	WITHOUT_CLASSIFICATION	6.7474317905491496E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999627306556955	WITHOUT_CLASSIFICATION	3.726934430448154E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999527524630231	WITHOUT_CLASSIFICATION	4.7247536976972426E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999938702434561	WITHOUT_CLASSIFICATION	6.129756543882847E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.999998575259116	WITHOUT_CLASSIFICATION	1.4247408839840203E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999996932898696	WITHOUT_CLASSIFICATION	3.06710130443677E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997973368571	WITHOUT_CLASSIFICATION	2.0266314301387576E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999165806932	WITHOUT_CLASSIFICATION	8.341930684586326E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997971660548	WITHOUT_CLASSIFICATION	2.028339452303469E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999866230614	WITHOUT_CLASSIFICATION	1.337693859829706E-7	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999999561869385	WITHOUT_CLASSIFICATION	4.3813061495491166E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999993039846209	WITHOUT_CLASSIFICATION	6.960153791235994E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999102735113	WITHOUT_CLASSIFICATION	8.972648871383168E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998790950984	WITHOUT_CLASSIFICATION	1.2090490168204318E-7	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999999555701988	WITHOUT_CLASSIFICATION	4.442980120649541E-8	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999996011952154	WITHOUT_CLASSIFICATION	3.988047845490451E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999996011952154	WITHOUT_CLASSIFICATION	3.988047845490451E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999997408242933	WITHOUT_CLASSIFICATION	2.5917570670121883E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.999999940395458	WITHOUT_CLASSIFICATION	5.960454196032732E-8	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999993706197647	WITHOUT_CLASSIFICATION	6.293802351344607E-7	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999996885617717	WITHOUT_CLASSIFICATION	3.1143822840909724E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999914042089161	WITHOUT_CLASSIFICATION	8.59579108401205E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999964507142625	WITHOUT_CLASSIFICATION	3.5492857375548984E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999993759132967	WITHOUT_CLASSIFICATION	6.240867033631159E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999884327656	WITHOUT_CLASSIFICATION	1.156723451233617E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999993759132967	WITHOUT_CLASSIFICATION	6.240867033631159E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999990695396384	WITHOUT_CLASSIFICATION	9.304603617409754E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975167892445	WITHOUT_CLASSIFICATION	2.4832107554119426E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999884327656	WITHOUT_CLASSIFICATION	1.156723451233617E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999644942917656	WITHOUT_CLASSIFICATION	3.550570823450126E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999895329237	WITHOUT_CLASSIFICATION	1.0467076353221648E-8	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999995547714624	WITHOUT_CLASSIFICATION	4.452285374705213E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999972317849071	WITHOUT_CLASSIFICATION	2.768215092854207E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999962962240186	WITHOUT_CLASSIFICATION	3.7037759814628137E-6	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999670005697796	WITHOUT_CLASSIFICATION	3.2999430220444095E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999957899801054	WITHOUT_CLASSIFICATION	4.2100198945668614E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999991018258095	WITHOUT_CLASSIFICATION	8.981741904233586E-7	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998915953906	WITHOUT_CLASSIFICATION	1.0840460934982393E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999653581104	WITHOUT_CLASSIFICATION	3.464188956677453E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999653581104	WITHOUT_CLASSIFICATION	3.464188956677453E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999996137886684	WITHOUT_CLASSIFICATION	3.862113315954439E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.999999685261852	WITHOUT_CLASSIFICATION	3.1473814805655933E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999692645239384	WITHOUT_CLASSIFICATION	3.073547606155301E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999692645239384	WITHOUT_CLASSIFICATION	3.073547606155301E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999692645239384	WITHOUT_CLASSIFICATION	3.073547606155301E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998350987156455	WITHOUT_CLASSIFICATION	1.6490128435442622E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998350987156455	WITHOUT_CLASSIFICATION	1.6490128435442622E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998350987156455	WITHOUT_CLASSIFICATION	1.6490128435442622E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999981961000044	WITHOUT_CLASSIFICATION	1.8038999955330807E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999981961000044	WITHOUT_CLASSIFICATION	1.8038999955330807E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999981961000044	WITHOUT_CLASSIFICATION	1.8038999955330807E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999722925507715	WITHOUT_CLASSIFICATION	2.7707449228588608E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999722925507715	WITHOUT_CLASSIFICATION	2.7707449228588608E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999992587259482	WITHOUT_CLASSIFICATION	7.412740518711866E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999992587259482	WITHOUT_CLASSIFICATION	7.412740518711866E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999789176352925	WITHOUT_CLASSIFICATION	2.1082364707597458E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999946592803595	WITHOUT_CLASSIFICATION	5.3407196406387506E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999946592803595	WITHOUT_CLASSIFICATION	5.3407196406387506E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9992911837974543	WITHOUT_CLASSIFICATION	7.088162025456252E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9982143669170334	WITHOUT_CLASSIFICATION	0.0017856330829667249	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999701390140066	WITHOUT_CLASSIFICATION	2.9860985993460458E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999898247250799	WITHOUT_CLASSIFICATION	1.0175274920070973E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999692645239384	WITHOUT_CLASSIFICATION	3.073547606155301E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998350987156455	WITHOUT_CLASSIFICATION	1.6490128435442622E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998350987156455	WITHOUT_CLASSIFICATION	1.6490128435442622E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999981961000044	WITHOUT_CLASSIFICATION	1.8038999955330807E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999981961000044	WITHOUT_CLASSIFICATION	1.8038999955330807E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999722925507715	WITHOUT_CLASSIFICATION	2.7707449228588608E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999722925507715	WITHOUT_CLASSIFICATION	2.7707449228588608E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999895329237	WITHOUT_CLASSIFICATION	1.0467076353221648E-8	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999756567664637	WITHOUT_CLASSIFICATION	2.434323353630694E-5	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999972331738862	WITHOUT_CLASSIFICATION	2.7668261137640734E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999999642776671	WITHOUT_CLASSIFICATION	3.572233289931342E-8	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999986847339907	WITHOUT_CLASSIFICATION	1.3152660092840321E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999997722252574	WITHOUT_CLASSIFICATION	2.2777474257045922E-7	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9968157760012964	WITHOUT_CLASSIFICATION	0.0031842239987035434	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.999999985679658	WITHOUT_CLASSIFICATION	1.4320341987648915E-8	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999988949309444	WITHOUT_CLASSIFICATION	1.105069055549091E-6	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9996212129128845	WITHOUT_CLASSIFICATION	3.78787087115395E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999987977695005	WITHOUT_CLASSIFICATION	1.2022304995074971E-6	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9645088220731581	WITHOUT_CLASSIFICATION	0.03549117792684184	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999998656332847	WITHOUT_CLASSIFICATION	1.3436671519937596E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999998656332847	WITHOUT_CLASSIFICATION	1.3436671519937596E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999944888371473	WITHOUT_CLASSIFICATION	5.511162852729104E-6	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999944888371473	WITHOUT_CLASSIFICATION	5.511162852729104E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999509483327778	WITHOUT_CLASSIFICATION	4.905166722226256E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999509483327778	WITHOUT_CLASSIFICATION	4.905166722226256E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999895329237	WITHOUT_CLASSIFICATION	1.0467076353221648E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9992911837974543	WITHOUT_CLASSIFICATION	7.088162025456252E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9982143669170334	WITHOUT_CLASSIFICATION	0.0017856330829667249	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999798539328624	WITHOUT_CLASSIFICATION	2.0146067137653947E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999932525682095	WITHOUT_CLASSIFICATION	6.7474317905491496E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999989146827706	WITHOUT_CLASSIFICATION	1.0853172293163187E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996739425909867	WITHOUT_CLASSIFICATION	3.2605740901332195E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999975784914034	WITHOUT_CLASSIFICATION	2.4215085966007527E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999975784914034	WITHOUT_CLASSIFICATION	2.4215085966007527E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999411235920603	WITHOUT_CLASSIFICATION	5.887640793971855E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999411235920603	WITHOUT_CLASSIFICATION	5.887640793971855E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999602955686	WITHOUT_CLASSIFICATION	3.970443134175294E-8	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999933506527	WITHOUT_CLASSIFICATION	6.649347363690572E-9	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999994635376532	WITHOUT_CLASSIFICATION	5.364623468326628E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999959589423665	WITHOUT_CLASSIFICATION	4.041057633491577E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999959589423665	WITHOUT_CLASSIFICATION	4.041057633491577E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999872478773	WITHOUT_CLASSIFICATION	1.2752122686582226E-8	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999915824005566	WITHOUT_CLASSIFICATION	8.41759944342916E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999997271954721	WITHOUT_CLASSIFICATION	2.7280452789927764E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999958259283642	WITHOUT_CLASSIFICATION	4.1740716357617334E-6	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999982310183904	WITHOUT_CLASSIFICATION	1.7689816097433758E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999997341217869	WITHOUT_CLASSIFICATION	2.658782130676588E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997079590083	WITHOUT_CLASSIFICATION	2.920409917304773E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997079590083	WITHOUT_CLASSIFICATION	2.920409917304773E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999996371714044	WITHOUT_CLASSIFICATION	3.6282859565424434E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.999999933712598	WITHOUT_CLASSIFICATION	6.628740207312207E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999602955686	WITHOUT_CLASSIFICATION	3.970443134175294E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999602955686	WITHOUT_CLASSIFICATION	3.970443134175294E-8	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999982235795037	WITHOUT_CLASSIFICATION	1.7764204963005665E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999959589423665	WITHOUT_CLASSIFICATION	4.041057633491577E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999995417221011	WITHOUT_CLASSIFICATION	4.582778989035953E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.999999617163625	WITHOUT_CLASSIFICATION	3.828363750401646E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.999999617163625	WITHOUT_CLASSIFICATION	3.828363750401646E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999872478773	WITHOUT_CLASSIFICATION	1.2752122686582226E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999958259283642	WITHOUT_CLASSIFICATION	4.1740716357617334E-6	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999993248320121	WITHOUT_CLASSIFICATION	6.751679879768231E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999990756889359	WITHOUT_CLASSIFICATION	9.243110641198238E-7	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999911470035853	WITHOUT_CLASSIFICATION	8.852996414681837E-6	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999998419996328	WITHOUT_CLASSIFICATION	1.5800036717186975E-7	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999997925149446	WITHOUT_CLASSIFICATION	2.074850552336633E-7	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999997049373492	WITHOUT_CLASSIFICATION	2.950626508141001E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999233694511915	WITHOUT_CLASSIFICATION	7.663054880841624E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999947004726196	WITHOUT_CLASSIFICATION	5.299527380433241E-6	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999985330364012	WITHOUT_CLASSIFICATION	1.4669635987377532E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999634366967	WITHOUT_CLASSIFICATION	3.6563303335636814E-8	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999041276029	WITHOUT_CLASSIFICATION	9.587239710678413E-8	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999925654790562	WITHOUT_CLASSIFICATION	7.434520943880398E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999977042040311	WITHOUT_CLASSIFICATION	2.2957959688076865E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999804664744	WITHOUT_CLASSIFICATION	1.9533525516265518E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999463769075	WITHOUT_CLASSIFICATION	5.362309245125741E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999976623571171	WITHOUT_CLASSIFICATION	2.337642883000728E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.999998231868827	WITHOUT_CLASSIFICATION	1.7681311730687742E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999823015261	WITHOUT_CLASSIFICATION	1.7698473925943793E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999988557291885	WITHOUT_CLASSIFICATION	1.144270811482396E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999965037183	WITHOUT_CLASSIFICATION	3.4962816302345163E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999987413248298	WITHOUT_CLASSIFICATION	1.2586751701857258E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999985838410589	WITHOUT_CLASSIFICATION	1.416158941113165E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999970286608033	WITHOUT_CLASSIFICATION	2.971339196732781E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999970286608033	WITHOUT_CLASSIFICATION	2.971339196732781E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999970286608033	WITHOUT_CLASSIFICATION	2.971339196732781E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998936808181189	WITHOUT_CLASSIFICATION	1.063191818809732E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998936808181189	WITHOUT_CLASSIFICATION	1.063191818809732E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999998051385465	WITHOUT_CLASSIFICATION	1.9486145350625125E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999986036632681	WITHOUT_CLASSIFICATION	1.396336731882572E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.999999051220295	WITHOUT_CLASSIFICATION	9.487797049958097E-7	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999986674443371	WITHOUT_CLASSIFICATION	1.3325556629549677E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999997899189346	WITHOUT_CLASSIFICATION	2.100810654671737E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999937285979363	WITHOUT_CLASSIFICATION	6.271402063647546E-6	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9999748020026713	WITHOUT_CLASSIFICATION	2.519799732868879E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999508650340341	WITHOUT_CLASSIFICATION	4.913496596589132E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999915594046592	WITHOUT_CLASSIFICATION	8.440595340815524E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999715716989472	WITHOUT_CLASSIFICATION	2.842830105272198E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999982307549174	WITHOUT_CLASSIFICATION	1.7692450824889174E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999993434068237	WITHOUT_CLASSIFICATION	6.565931763008877E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999993434068237	WITHOUT_CLASSIFICATION	6.565931763008877E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999839092278	WITHOUT_CLASSIFICATION	1.6090772137701417E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9999882069975979	WITHOUT_CLASSIFICATION	1.1793002401995358E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999897499015	WITHOUT_CLASSIFICATION	1.0250098499964152E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994109608573	WITHOUT_CLASSIFICATION	5.890391426019967E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994109608573	WITHOUT_CLASSIFICATION	5.890391426019967E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994109608573	WITHOUT_CLASSIFICATION	5.890391426019967E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999973462639	WITHOUT_CLASSIFICATION	2.653736145109299E-9	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999965558594	WITHOUT_CLASSIFICATION	3.444140752557762E-9	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999993044636	WITHOUT_CLASSIFICATION	6.955363031675571E-10	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999835237709607	WITHOUT_CLASSIFICATION	1.6476229039340546E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999956995120398	WITHOUT_CLASSIFICATION	4.30048796017595E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999997009765085	WITHOUT_CLASSIFICATION	2.990234914458533E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999925654790562	WITHOUT_CLASSIFICATION	7.434520943880398E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999977042040311	WITHOUT_CLASSIFICATION	2.2957959688076865E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999823015261	WITHOUT_CLASSIFICATION	1.7698473925943793E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999988557291885	WITHOUT_CLASSIFICATION	1.144270811482396E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999965037183	WITHOUT_CLASSIFICATION	3.4962816302345163E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999987413248298	WITHOUT_CLASSIFICATION	1.2586751701857258E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999985838410589	WITHOUT_CLASSIFICATION	1.416158941113165E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994109608573	WITHOUT_CLASSIFICATION	5.890391426019967E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999994280928872	WITHOUT_CLASSIFICATION	5.719071127986136E-7	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999980578326	WITHOUT_CLASSIFICATION	1.942167484781276E-9	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999996253628746	WITHOUT_CLASSIFICATION	3.746371254334698E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.96381338256515	WITHOUT_CLASSIFICATION	0.03618661743485002	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9999430757145435	WITHOUT_CLASSIFICATION	5.692428545638368E-5	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999535313577564	WITHOUT_CLASSIFICATION	4.646864224362693E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999833852333789	WITHOUT_CLASSIFICATION	1.6614766621030207E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999998789392366	WITHOUT_CLASSIFICATION	1.2106076342542914E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999961725985436	WITHOUT_CLASSIFICATION	3.827401456378561E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999961725985436	WITHOUT_CLASSIFICATION	3.827401456378561E-6	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999377778667	WITHOUT_CLASSIFICATION	6.22221333416259E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999377778667	WITHOUT_CLASSIFICATION	6.22221333416259E-8	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999994004488774	WITHOUT_CLASSIFICATION	5.995511226317831E-7	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999977946765	WITHOUT_CLASSIFICATION	2.2053235132913278E-9	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999916887233	WITHOUT_CLASSIFICATION	8.311276683897806E-9	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999995636305034	WITHOUT_CLASSIFICATION	4.3636949672890463E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999995636305034	WITHOUT_CLASSIFICATION	4.3636949672890463E-7	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999987922181525	WITHOUT_CLASSIFICATION	1.2077818475466E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.99997378218669	WITHOUT_CLASSIFICATION	2.6217813310022353E-5	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999538792	WITHOUT_CLASSIFICATION	4.612072433314848E-11	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999804664744	WITHOUT_CLASSIFICATION	1.9533525516265518E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999995636305034	WITHOUT_CLASSIFICATION	4.3636949672890463E-7	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999998109294518	WITHOUT_CLASSIFICATION	1.8907054830389984E-7	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.999993079475076	WITHOUT_CLASSIFICATION	6.920524924074151E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999376967712	WITHOUT_CLASSIFICATION	6.23032288062486E-8	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999991906935	WITHOUT_CLASSIFICATION	8.093065001295248E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999999806283122	WITHOUT_CLASSIFICATION	1.937168782563169E-8	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999997815063715	WITHOUT_CLASSIFICATION	2.184936286012071E-7	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999962158994499	WITHOUT_CLASSIFICATION	3.7841005500472466E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999996540055726	WITHOUT_CLASSIFICATION	3.459944274953721E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999963200565923	WITHOUT_CLASSIFICATION	3.6799434075475112E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999963200565923	WITHOUT_CLASSIFICATION	3.6799434075475112E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999855721389911	WITHOUT_CLASSIFICATION	1.4427861008910705E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999855721389911	WITHOUT_CLASSIFICATION	1.4427861008910705E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999855721389911	WITHOUT_CLASSIFICATION	1.4427861008910705E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999977223085952	WITHOUT_CLASSIFICATION	2.277691404812614E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999885930145823	WITHOUT_CLASSIFICATION	1.1406985417611968E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999885930145823	WITHOUT_CLASSIFICATION	1.1406985417611968E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999973516061756	WITHOUT_CLASSIFICATION	2.6483938244155632E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999973516061756	WITHOUT_CLASSIFICATION	2.6483938244155632E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999943201289451	WITHOUT_CLASSIFICATION	5.679871054993489E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999985260971351	WITHOUT_CLASSIFICATION	1.4739028648462179E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999958782883105	WITHOUT_CLASSIFICATION	4.12171168949796E-6	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999989018940065	WITHOUT_CLASSIFICATION	1.0981059934641607E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9990977557819255	WITHOUT_CLASSIFICATION	9.022442180744018E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9988047135861484	WITHOUT_CLASSIFICATION	0.0011952864138515891	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999986558724014	WITHOUT_CLASSIFICATION	1.3441275985760207E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999923467057797	WITHOUT_CLASSIFICATION	7.653294220249519E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994893479963	WITHOUT_CLASSIFICATION	5.106520036870004E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999953646711007	WITHOUT_CLASSIFICATION	4.635328899212161E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999980525732953	WITHOUT_CLASSIFICATION	1.9474267046631007E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.99999710006778	WITHOUT_CLASSIFICATION	2.899932220111456E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999997132041176	WITHOUT_CLASSIFICATION	2.867958823275492E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.99999997913694	WITHOUT_CLASSIFICATION	2.086306001493066E-8	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.997681119424106	WITHOUT_CLASSIFICATION	0.002318880575894022	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999999870439225	WITHOUT_CLASSIFICATION	1.295607766206043E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998125087199	WITHOUT_CLASSIFICATION	1.8749128006736197E-7	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999993102265544	WITHOUT_CLASSIFICATION	6.897734456139126E-7	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999166272608	WITHOUT_CLASSIFICATION	8.33727391593725E-8	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999999161765125	WITHOUT_CLASSIFICATION	8.382348741547881E-8	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999998052917647	WITHOUT_CLASSIFICATION	1.947082352944561E-7	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999314839698	WITHOUT_CLASSIFICATION	6.851603016261956E-8	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999991250759973	WITHOUT_CLASSIFICATION	8.749240026158102E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999999650726544	WITHOUT_CLASSIFICATION	3.492734564861313E-8	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999989373458534	WITHOUT_CLASSIFICATION	1.0626541464884635E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999998965457493	WITHOUT_CLASSIFICATION	1.0345425082729765E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999977332700044	WITHOUT_CLASSIFICATION	2.266729995623068E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999994274069307	WITHOUT_CLASSIFICATION	5.725930693186181E-7	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999999453491275	WITHOUT_CLASSIFICATION	5.465087242918494E-8	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999964207217458	WITHOUT_CLASSIFICATION	3.579278254147997E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999365062417686	WITHOUT_CLASSIFICATION	6.34937582314075E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9998738435900525	WITHOUT_CLASSIFICATION	1.261564099474674E-4	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999988072577777	WITHOUT_CLASSIFICATION	1.1927422222224024E-6	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9997996482362185	WITHOUT_CLASSIFICATION	2.0035176378153642E-4	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999978360131055	WITHOUT_CLASSIFICATION	2.163986894503921E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999988257526458	WITHOUT_CLASSIFICATION	1.1742473541973133E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999951802139723	WITHOUT_CLASSIFICATION	4.819786027738014E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999987531155125	WITHOUT_CLASSIFICATION	1.2468844875790525E-6	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999988209996078	WITHOUT_CLASSIFICATION	1.179000392155029E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9998769040489762	WITHOUT_CLASSIFICATION	1.2309595102377044E-4	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999999506715712	WITHOUT_CLASSIFICATION	4.9328428856605016E-8	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999998666189338	WITHOUT_CLASSIFICATION	1.333810662806638E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999981815183183	WITHOUT_CLASSIFICATION	1.8184816817347009E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999989037408918	WITHOUT_CLASSIFICATION	1.0962591082159679E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999374756719845	WITHOUT_CLASSIFICATION	6.252432801541172E-5	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999041256099628	WITHOUT_CLASSIFICATION	9.587439003726872E-5	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999592332044941	WITHOUT_CLASSIFICATION	4.076679550578889E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999996984907121	WITHOUT_CLASSIFICATION	3.0150928791180806E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999993787501715	WITHOUT_CLASSIFICATION	6.212498284764471E-7	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9995349330585663	WITHOUT_CLASSIFICATION	4.650669414336306E-4	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999999317614786	WITHOUT_CLASSIFICATION	6.823852135724596E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999842953632	WITHOUT_CLASSIFICATION	1.570463681739569E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999252133412007	WITHOUT_CLASSIFICATION	7.478665879931943E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999252133412007	WITHOUT_CLASSIFICATION	7.478665879931943E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998329267074	WITHOUT_CLASSIFICATION	1.67073292756888E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999858766124518	WITHOUT_CLASSIFICATION	1.4123387548357555E-5	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999981016094455	WITHOUT_CLASSIFICATION	1.898390554503941E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999999479710299	WITHOUT_CLASSIFICATION	5.2028970082517387E-8	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999957922524	WITHOUT_CLASSIFICATION	4.207747554744918E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999165597786202	WITHOUT_CLASSIFICATION	8.344022137983493E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999165775191733	WITHOUT_CLASSIFICATION	8.342248082670744E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9998751040073323	WITHOUT_CLASSIFICATION	1.2489599266771463E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929055855	WITHOUT_CLASSIFICATION	7.0944145765835115E-9	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9990977557819255	WITHOUT_CLASSIFICATION	9.022442180744018E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929055855	WITHOUT_CLASSIFICATION	7.0944145765835115E-9	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9992505019225177	WITHOUT_CLASSIFICATION	7.494980774823166E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999173986907	WITHOUT_CLASSIFICATION	8.260130928365622E-8	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999905724044408	WITHOUT_CLASSIFICATION	9.427595559243989E-6	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999987970023272	WITHOUT_CLASSIFICATION	1.202997672806634E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.999995015243124	WITHOUT_CLASSIFICATION	4.984756875993916E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999380858634	WITHOUT_CLASSIFICATION	6.191413653791726E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999599388415	WITHOUT_CLASSIFICATION	4.006115849755237E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999834823357	WITHOUT_CLASSIFICATION	1.651766431823138E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997608331961	WITHOUT_CLASSIFICATION	2.3916680393663123E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998125087199	WITHOUT_CLASSIFICATION	1.8749128006736197E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999565361752	WITHOUT_CLASSIFICATION	4.3463824808769195E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999842953632	WITHOUT_CLASSIFICATION	1.570463681739569E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999999596621346	WITHOUT_CLASSIFICATION	4.033786539269281E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999380858634	WITHOUT_CLASSIFICATION	6.191413653791726E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999599388415	WITHOUT_CLASSIFICATION	4.006115849755237E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999834823357	WITHOUT_CLASSIFICATION	1.651766431823138E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999973308078239	WITHOUT_CLASSIFICATION	2.6691921759452772E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999999397765673	WITHOUT_CLASSIFICATION	6.02234326842564E-8	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999998114156194	WITHOUT_CLASSIFICATION	1.8858438044799318E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999731345230721	WITHOUT_CLASSIFICATION	2.686547692785493E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999997359278756	WITHOUT_CLASSIFICATION	2.640721243678339E-7	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999978552509884	WITHOUT_CLASSIFICATION	2.1447490115592145E-6	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9998966364302495	WITHOUT_CLASSIFICATION	1.0336356975048676E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.999999658880205	WITHOUT_CLASSIFICATION	3.4111979501618105E-7	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9988047135861484	WITHOUT_CLASSIFICATION	0.0011952864138515891	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994893479963	WITHOUT_CLASSIFICATION	5.106520036870004E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994893479963	WITHOUT_CLASSIFICATION	5.106520036870004E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999995137188816	WITHOUT_CLASSIFICATION	4.862811182925015E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999953646711007	WITHOUT_CLASSIFICATION	4.635328899212161E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999980525732953	WITHOUT_CLASSIFICATION	1.9474267046631007E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.99999710006778	WITHOUT_CLASSIFICATION	2.899932220111456E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999997132041176	WITHOUT_CLASSIFICATION	2.867958823275492E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999999317614786	WITHOUT_CLASSIFICATION	6.823852135724596E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999842953632	WITHOUT_CLASSIFICATION	1.570463681739569E-8	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999858766124518	WITHOUT_CLASSIFICATION	1.4123387548357555E-5	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999988289995915	WITHOUT_CLASSIFICATION	1.1710004084667417E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999999068338033	WITHOUT_CLASSIFICATION	9.316619669335763E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999996843383825	WITHOUT_CLASSIFICATION	3.1566161755059217E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999996103594393	WITHOUT_CLASSIFICATION	3.8964056068421575E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999644542208	WITHOUT_CLASSIFICATION	3.5545779177050756E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999974291855233	WITHOUT_CLASSIFICATION	2.5708144766733505E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999953268137725	WITHOUT_CLASSIFICATION	4.67318622753854E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999953268137725	WITHOUT_CLASSIFICATION	4.67318622753854E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999919924171077	WITHOUT_CLASSIFICATION	8.007582892269132E-6	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999957702768224	WITHOUT_CLASSIFICATION	4.229723177554021E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999996125214498	WITHOUT_CLASSIFICATION	3.874785502233021E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999919588902828	WITHOUT_CLASSIFICATION	8.041109717154803E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999995137188816	WITHOUT_CLASSIFICATION	4.862811182925015E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.99999710006778	WITHOUT_CLASSIFICATION	2.899932220111456E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999997132041176	WITHOUT_CLASSIFICATION	2.867958823275492E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.99999997913694	WITHOUT_CLASSIFICATION	2.086306001493066E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998125087199	WITHOUT_CLASSIFICATION	1.8749128006736197E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999999317614786	WITHOUT_CLASSIFICATION	6.823852135724596E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999842953632	WITHOUT_CLASSIFICATION	1.570463681739569E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929055855	WITHOUT_CLASSIFICATION	7.0944145765835115E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999999068338033	WITHOUT_CLASSIFICATION	9.316619669335763E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999995096903646	WITHOUT_CLASSIFICATION	4.903096354875454E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999995096903646	WITHOUT_CLASSIFICATION	4.903096354875454E-7	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999497364763676	WITHOUT_CLASSIFICATION	5.0263523632259124E-5	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.999999451926586	WITHOUT_CLASSIFICATION	5.480734139865906E-7	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999295075841	WITHOUT_CLASSIFICATION	7.049241590544054E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999993094541745	WITHOUT_CLASSIFICATION	6.905458254487587E-7	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999999646652	WITHOUT_CLASSIFICATION	3.533494439396855E-11	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999999646652	WITHOUT_CLASSIFICATION	3.533494439396855E-11	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999785420133	WITHOUT_CLASSIFICATION	2.1457986649941633E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999785420133	WITHOUT_CLASSIFICATION	2.1457986649941633E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999956669655	WITHOUT_CLASSIFICATION	4.333034494328701E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999956669655	WITHOUT_CLASSIFICATION	4.333034494328701E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999956669655	WITHOUT_CLASSIFICATION	4.333034494328701E-9	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996942327556	WITHOUT_CLASSIFICATION	3.0576724442643866E-7	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998750557019	WITHOUT_CLASSIFICATION	1.2494429818144145E-7	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999985401423	WITHOUT_CLASSIFICATION	1.4598576227789167E-9	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999991555118639	WITHOUT_CLASSIFICATION	8.444881360537265E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999999288784158	WITHOUT_CLASSIFICATION	7.112158418531673E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9990977557819255	WITHOUT_CLASSIFICATION	9.022442180744018E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9988047135861484	WITHOUT_CLASSIFICATION	0.0011952864138515891	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999994893479963	WITHOUT_CLASSIFICATION	5.106520036870004E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999953646711007	WITHOUT_CLASSIFICATION	4.635328899212161E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999998052917647	WITHOUT_CLASSIFICATION	1.947082352944561E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999999317614786	WITHOUT_CLASSIFICATION	6.823852135724596E-8	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999731345230721	WITHOUT_CLASSIFICATION	2.686547692785493E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999919588902828	WITHOUT_CLASSIFICATION	8.041109717154803E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999992540500393	WITHOUT_CLASSIFICATION	7.45949960576556E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998953260103992	WITHOUT_CLASSIFICATION	1.0467398960086673E-4	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9993766322139123	WITHOUT_CLASSIFICATION	6.233677860877185E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9997832918795699	WITHOUT_CLASSIFICATION	2.1670812042999288E-4	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999969366965666	WITHOUT_CLASSIFICATION	3.063303433360102E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999086435061548	WITHOUT_CLASSIFICATION	9.135649384524566E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999992580578307	WITHOUT_CLASSIFICATION	7.419421692938604E-7	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999956930178948	WITHOUT_CLASSIFICATION	4.306982105281897E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999891910777046	WITHOUT_CLASSIFICATION	1.0808922295339605E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9939582044908607	WITHOUT_CLASSIFICATION	0.006041795509139359	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.999943439448523	WITHOUT_CLASSIFICATION	5.656055147699808E-5	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999990278709897	WITHOUT_CLASSIFICATION	9.72129010273876E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999990756889359	WITHOUT_CLASSIFICATION	9.243110641198238E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.99999710006778	WITHOUT_CLASSIFICATION	2.899932220111456E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999997132041176	WITHOUT_CLASSIFICATION	2.867958823275492E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999999317614786	WITHOUT_CLASSIFICATION	6.823852135724596E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999842953632	WITHOUT_CLASSIFICATION	1.570463681739569E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999929055855	WITHOUT_CLASSIFICATION	7.0944145765835115E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999999068338033	WITHOUT_CLASSIFICATION	9.316619669335763E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999996843383825	WITHOUT_CLASSIFICATION	3.1566161755059217E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999644542208	WITHOUT_CLASSIFICATION	3.5545779177050756E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999974291855233	WITHOUT_CLASSIFICATION	2.5708144766733505E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999920279417	WITHOUT_CLASSIFICATION	7.9720582816238E-9	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999708158923	WITHOUT_CLASSIFICATION	2.9184107753750575E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999852033525871	WITHOUT_CLASSIFICATION	1.479664741302626E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999999063770135	WITHOUT_CLASSIFICATION	9.362298640216719E-8	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999999079191643	WITHOUT_CLASSIFICATION	9.208083571131728E-8	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.999989278486921	WITHOUT_CLASSIFICATION	1.07215130790036E-5	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9993838804148703	WITHOUT_CLASSIFICATION	6.161195851297787E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999993044011476	WITHOUT_CLASSIFICATION	6.955988523519621E-7	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999987030525734	WITHOUT_CLASSIFICATION	1.2969474264834374E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.999985481488047	WITHOUT_CLASSIFICATION	1.4518511953064096E-5	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.8843528183172444	WITHOUT_CLASSIFICATION	0.11564718168275558	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999014750528956	WITHOUT_CLASSIFICATION	9.852494710434159E-5	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998210043481031	WITHOUT_CLASSIFICATION	1.789956518969236E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9736718374436315	WITHOUT_CLASSIFICATION	0.026328162556368544	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999994961356966	WITHOUT_CLASSIFICATION	5.038643033142337E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999980525732953	WITHOUT_CLASSIFICATION	1.9474267046631007E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998329267074	WITHOUT_CLASSIFICATION	1.67073292756888E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999858766124518	WITHOUT_CLASSIFICATION	1.4123387548357555E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999974291855233	WITHOUT_CLASSIFICATION	2.5708144766733505E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999986810532474	WITHOUT_CLASSIFICATION	1.318946752651151E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999998011847159	WITHOUT_CLASSIFICATION	1.9881528410050803E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999969773733406	WITHOUT_CLASSIFICATION	3.022626659494624E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999969773733406	WITHOUT_CLASSIFICATION	3.022626659494624E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999508549088	WITHOUT_CLASSIFICATION	4.9145091338116236E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999508549088	WITHOUT_CLASSIFICATION	4.9145091338116236E-8	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999971738697934	WITHOUT_CLASSIFICATION	2.8261302067034744E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9605451294626592	WITHOUT_CLASSIFICATION	0.03945487053734078	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999867054433315	WITHOUT_CLASSIFICATION	1.3294556668461691E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999987072543077	WITHOUT_CLASSIFICATION	1.2927456922427957E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999892118228777	WITHOUT_CLASSIFICATION	1.07881771223194E-5	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9998866307484331	WITHOUT_CLASSIFICATION	1.1336925156679243E-4	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999965279383967	WITHOUT_CLASSIFICATION	3.4720616033231684E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999762058190866	WITHOUT_CLASSIFICATION	2.3794180913407183E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999999873114905	WITHOUT_CLASSIFICATION	1.2688509439212521E-8	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999996627451984	WITHOUT_CLASSIFICATION	3.372548015677956E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9986012606742782	WITHOUT_CLASSIFICATION	0.0013987393257217783	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999982542584327	WITHOUT_CLASSIFICATION	1.7457415672645783E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999895064439176	WITHOUT_CLASSIFICATION	1.0493556082359104E-5	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999969878893288	WITHOUT_CLASSIFICATION	3.0121106711302294E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.999991325228454	WITHOUT_CLASSIFICATION	8.674771546115771E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999967726086773	WITHOUT_CLASSIFICATION	3.227391322683603E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.999999692301461	WITHOUT_CLASSIFICATION	3.0769853887466335E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999909982260834	WITHOUT_CLASSIFICATION	9.001773916587031E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.999913080407641	WITHOUT_CLASSIFICATION	8.691959235895197E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999802746495494	WITHOUT_CLASSIFICATION	1.9725350450620873E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999225745788239	WITHOUT_CLASSIFICATION	7.742542117603953E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.999971056925636	WITHOUT_CLASSIFICATION	2.8943074363864696E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999953882333122	WITHOUT_CLASSIFICATION	4.6117666877170435E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999945784225125	WITHOUT_CLASSIFICATION	5.421577487511751E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999285109951	WITHOUT_CLASSIFICATION	7.148900486328575E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999455918754	WITHOUT_CLASSIFICATION	5.440812456180039E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998751714507	WITHOUT_CLASSIFICATION	1.2482854934320866E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999968990884327	WITHOUT_CLASSIFICATION	3.100911567175891E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999395103239017	WITHOUT_CLASSIFICATION	6.048967609819072E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999956192768112	WITHOUT_CLASSIFICATION	4.3807231887550054E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998042757007	WITHOUT_CLASSIFICATION	1.9572429925828503E-7	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.999997592669945	WITHOUT_CLASSIFICATION	2.4073300549153777E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999955208362541	WITHOUT_CLASSIFICATION	4.4791637458772105E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999895070915562	WITHOUT_CLASSIFICATION	1.04929084438598E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999996831412132	WITHOUT_CLASSIFICATION	3.1685878679633737E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999997865036284	WITHOUT_CLASSIFICATION	2.1349637148633476E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999978508086249	WITHOUT_CLASSIFICATION	2.1491913750379185E-6	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999995905485461	WITHOUT_CLASSIFICATION	4.0945145387457055E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999957906474809	WITHOUT_CLASSIFICATION	4.209352519084849E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999995562508341	WITHOUT_CLASSIFICATION	4.437491658543377E-7	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999982245418503	WITHOUT_CLASSIFICATION	1.775458149674867E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998329267074	WITHOUT_CLASSIFICATION	1.67073292756888E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999858766124518	WITHOUT_CLASSIFICATION	1.4123387548357555E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999998011847159	WITHOUT_CLASSIFICATION	1.9881528410050803E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999974291855233	WITHOUT_CLASSIFICATION	2.5708144766733505E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999835237709607	WITHOUT_CLASSIFICATION	1.6476229039340546E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999969773733406	WITHOUT_CLASSIFICATION	3.022626659494624E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999572008749313	WITHOUT_CLASSIFICATION	4.279912506859406E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999508549088	WITHOUT_CLASSIFICATION	4.9145091338116236E-8	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999956192768112	WITHOUT_CLASSIFICATION	4.3807231887550054E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998042757007	WITHOUT_CLASSIFICATION	1.9572429925828503E-7	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999992016703526	WITHOUT_CLASSIFICATION	7.983296473590922E-7	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999646576835607	WITHOUT_CLASSIFICATION	3.5342316439341705E-5	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999995364430733	WITHOUT_CLASSIFICATION	4.63556926748906E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999998946351243	WITHOUT_CLASSIFICATION	1.0536487570125543E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998764940402974	WITHOUT_CLASSIFICATION	1.2350595970253927E-4	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999131379639146	WITHOUT_CLASSIFICATION	8.686203608536363E-5	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9995963407245804	WITHOUT_CLASSIFICATION	4.036592754195859E-4	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999890517094565	WITHOUT_CLASSIFICATION	1.0948290543559827E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999632710917826	WITHOUT_CLASSIFICATION	3.672890821736802E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999987307854312	WITHOUT_CLASSIFICATION	1.269214568752929E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999998727616869	WITHOUT_CLASSIFICATION	1.2723831307867572E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999987561628859	WITHOUT_CLASSIFICATION	1.2438371141806133E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.99999987827025	WITHOUT_CLASSIFICATION	1.217297499585209E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.99994151703186	WITHOUT_CLASSIFICATION	5.8482968139899426E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.999999175073836	WITHOUT_CLASSIFICATION	8.249261640863997E-7	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999978062456502	WITHOUT_CLASSIFICATION	2.1937543498933597E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999999903967055	WITHOUT_CLASSIFICATION	9.603294528618849E-9	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999993750838863	WITHOUT_CLASSIFICATION	6.249161138754585E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999989105658906	WITHOUT_CLASSIFICATION	1.089434109410977E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999995576122862	WITHOUT_CLASSIFICATION	4.423877137388065E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998125087199	WITHOUT_CLASSIFICATION	1.8749128006736197E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999565361752	WITHOUT_CLASSIFICATION	4.3463824808769195E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999842953632	WITHOUT_CLASSIFICATION	1.570463681739569E-8	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999644542208	WITHOUT_CLASSIFICATION	3.5545779177050756E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999954604631939	WITHOUT_CLASSIFICATION	4.53953680605591E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.99999997232854	WITHOUT_CLASSIFICATION	2.7671459978691706E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984096174882	WITHOUT_CLASSIFICATION	1.5903825117790796E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.99999997232854	WITHOUT_CLASSIFICATION	2.7671459978691706E-8	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.99999997232854	WITHOUT_CLASSIFICATION	2.7671459978691706E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999996570663564	WITHOUT_CLASSIFICATION	3.429336436276575E-7	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999993863739955	WITHOUT_CLASSIFICATION	6.136260044778588E-7	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999999365833024	WITHOUT_CLASSIFICATION	6.341669748584288E-8	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999999374943549	WITHOUT_CLASSIFICATION	6.250564511240744E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999959378420219	WITHOUT_CLASSIFICATION	4.062157978096371E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.999998627242578	WITHOUT_CLASSIFICATION	1.3727574218677758E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.999986835864585	WITHOUT_CLASSIFICATION	1.3164135414964428E-5	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999823384912712	WITHOUT_CLASSIFICATION	1.7661508728837267E-5	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999662377577409	WITHOUT_CLASSIFICATION	3.3762242259206334E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.999999646644907	WITHOUT_CLASSIFICATION	3.533550929647622E-7	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9638751995483942	WITHOUT_CLASSIFICATION	0.03612480045160581	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999621062181989	WITHOUT_CLASSIFICATION	3.789378180104423E-5	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999993906054077	WITHOUT_CLASSIFICATION	6.093945923531144E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999201005647104	WITHOUT_CLASSIFICATION	7.989943528957576E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999993702312008	WITHOUT_CLASSIFICATION	6.297687992386929E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999968203103792	WITHOUT_CLASSIFICATION	3.1796896207387087E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998125087199	WITHOUT_CLASSIFICATION	1.8749128006736197E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999252133412007	WITHOUT_CLASSIFICATION	7.478665879931943E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998329267074	WITHOUT_CLASSIFICATION	1.67073292756888E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999858766124518	WITHOUT_CLASSIFICATION	1.4123387548357555E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999998011847159	WITHOUT_CLASSIFICATION	1.9881528410050803E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999973308078239	WITHOUT_CLASSIFICATION	2.6691921759452772E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999731345230721	WITHOUT_CLASSIFICATION	2.686547692785493E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999974291855233	WITHOUT_CLASSIFICATION	2.5708144766733505E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999931657762734	WITHOUT_CLASSIFICATION	6.8342237266585635E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999969773733406	WITHOUT_CLASSIFICATION	3.022626659494624E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999969773733406	WITHOUT_CLASSIFICATION	3.022626659494624E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999572008749313	WITHOUT_CLASSIFICATION	4.279912506859406E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999987072543077	WITHOUT_CLASSIFICATION	1.2927456922427957E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999965279383967	WITHOUT_CLASSIFICATION	3.4720616033231684E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998764940402974	WITHOUT_CLASSIFICATION	1.2350595970253927E-4	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998827300572	WITHOUT_CLASSIFICATION	1.172699427950144E-7	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9995944321778181	WITHOUT_CLASSIFICATION	4.055678221819366E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999998391047807	WITHOUT_CLASSIFICATION	1.6089521936678624E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999997014247293	WITHOUT_CLASSIFICATION	2.9857527080738245E-7	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999994307912653	WITHOUT_CLASSIFICATION	5.692087346875483E-7	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999699084250673	WITHOUT_CLASSIFICATION	3.009157493283235E-5	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999996990884463	WITHOUT_CLASSIFICATION	3.0091155370745773E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999999769461719	WITHOUT_CLASSIFICATION	2.3053828042696212E-8	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999998474003249	WITHOUT_CLASSIFICATION	1.525996752096788E-7	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999999032398812	WITHOUT_CLASSIFICATION	9.676011876531798E-8	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.999999816964217	WITHOUT_CLASSIFICATION	1.8303578300968972E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.999999979754098	WITHOUT_CLASSIFICATION	2.0245902000862137E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999429251423322	WITHOUT_CLASSIFICATION	5.707485766767494E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999999818919798	WITHOUT_CLASSIFICATION	1.8108020220745914E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999976717751573	WITHOUT_CLASSIFICATION	2.3282248427195487E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999930528817943	WITHOUT_CLASSIFICATION	6.947118205610061E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999508549088	WITHOUT_CLASSIFICATION	4.9145091338116236E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999508549088	WITHOUT_CLASSIFICATION	4.9145091338116236E-8	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999802746495494	WITHOUT_CLASSIFICATION	1.9725350450620873E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999225745788239	WITHOUT_CLASSIFICATION	7.742542117603953E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999953882333122	WITHOUT_CLASSIFICATION	4.6117666877170435E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999945784225125	WITHOUT_CLASSIFICATION	5.421577487511751E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999285109951	WITHOUT_CLASSIFICATION	7.148900486328575E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999455918754	WITHOUT_CLASSIFICATION	5.440812456180039E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998751714507	WITHOUT_CLASSIFICATION	1.2482854934320866E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999968990884327	WITHOUT_CLASSIFICATION	3.100911567175891E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999395103239017	WITHOUT_CLASSIFICATION	6.048967609819072E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999956192768112	WITHOUT_CLASSIFICATION	4.3807231887550054E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999956192768112	WITHOUT_CLASSIFICATION	4.3807231887550054E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999890517094565	WITHOUT_CLASSIFICATION	1.0948290543559827E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999620585924915	WITHOUT_CLASSIFICATION	3.7941407508486E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999874657186218	WITHOUT_CLASSIFICATION	1.253428137817094E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999976391098409	WITHOUT_CLASSIFICATION	2.3608901591353844E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.999991288842104	WITHOUT_CLASSIFICATION	8.711157895960592E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999988688602518	WITHOUT_CLASSIFICATION	1.1311397482614622E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999930219580666	WITHOUT_CLASSIFICATION	6.9780419333694685E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999995351650738	WITHOUT_CLASSIFICATION	4.6483492620026447E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.999999050888259	WITHOUT_CLASSIFICATION	9.491117409563068E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995485370573	WITHOUT_CLASSIFICATION	4.5146294266518665E-7	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9985204757308849	WITHOUT_CLASSIFICATION	0.0014795242691151192	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999997342608983	WITHOUT_CLASSIFICATION	2.6573910165627426E-7	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999926803807034	WITHOUT_CLASSIFICATION	7.319619296472971E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999820160636503	WITHOUT_CLASSIFICATION	1.7983936349735764E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999992673384912	WITHOUT_CLASSIFICATION	7.326615088868348E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999995137188816	WITHOUT_CLASSIFICATION	4.862811182925015E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999953646711007	WITHOUT_CLASSIFICATION	4.635328899212161E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999835237709607	WITHOUT_CLASSIFICATION	1.6476229039340546E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999835237709607	WITHOUT_CLASSIFICATION	1.6476229039340546E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998042757007	WITHOUT_CLASSIFICATION	1.9572429925828503E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999996831412132	WITHOUT_CLASSIFICATION	3.1685878679633737E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999996831412132	WITHOUT_CLASSIFICATION	3.1685878679633737E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999997865036284	WITHOUT_CLASSIFICATION	2.1349637148633476E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999978508086249	WITHOUT_CLASSIFICATION	2.1491913750379185E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999978508086249	WITHOUT_CLASSIFICATION	2.1491913750379185E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998764940402974	WITHOUT_CLASSIFICATION	1.2350595970253927E-4	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999987307854312	WITHOUT_CLASSIFICATION	1.269214568752929E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999985575159556	WITHOUT_CLASSIFICATION	1.4424840444878955E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9997519809991652	WITHOUT_CLASSIFICATION	2.480190008348432E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9997519809991652	WITHOUT_CLASSIFICATION	2.480190008348432E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999994737475034	WITHOUT_CLASSIFICATION	5.262524964968796E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999998822605082	WITHOUT_CLASSIFICATION	1.1773949191135719E-7	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999959493418578	WITHOUT_CLASSIFICATION	4.05065814226423E-6	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999938489179102	WITHOUT_CLASSIFICATION	6.151082089754321E-6	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999997856906111	WITHOUT_CLASSIFICATION	2.143093888923674E-7	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999903777711158	WITHOUT_CLASSIFICATION	9.622228884272633E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999998972060795	WITHOUT_CLASSIFICATION	1.027939205068074E-7	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999992126346166	WITHOUT_CLASSIFICATION	7.873653833993115E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998125087199	WITHOUT_CLASSIFICATION	1.8749128006736197E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999842953632	WITHOUT_CLASSIFICATION	1.570463681739569E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999973308078239	WITHOUT_CLASSIFICATION	2.6691921759452772E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999978552509884	WITHOUT_CLASSIFICATION	2.1447490115592145E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999543554634961	WITHOUT_CLASSIFICATION	4.564453650394942E-5	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9994815326365285	WITHOUT_CLASSIFICATION	5.184673634715837E-4	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.999982028847051	WITHOUT_CLASSIFICATION	1.797115294902227E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999999066443975	WITHOUT_CLASSIFICATION	9.335560251473066E-8	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999703892451748	WITHOUT_CLASSIFICATION	2.9610754825177724E-5	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999989583710027	WITHOUT_CLASSIFICATION	1.0416289973282212E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999999694774954	WITHOUT_CLASSIFICATION	3.052250460291059E-8	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999952658832201	WITHOUT_CLASSIFICATION	4.734116779910889E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999999874888671	WITHOUT_CLASSIFICATION	1.2511132952910194E-8	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999999782970397	WITHOUT_CLASSIFICATION	2.1702960311861245E-8	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999998568141738	WITHOUT_CLASSIFICATION	1.4318582619477089E-7	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999983599260753	WITHOUT_CLASSIFICATION	1.6400739246161009E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999965623640096	WITHOUT_CLASSIFICATION	3.4376359904476737E-6	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999983789883581	WITHOUT_CLASSIFICATION	1.6210116419003405E-6	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.999999474235303	WITHOUT_CLASSIFICATION	5.257646969733913E-7	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999998474202666	WITHOUT_CLASSIFICATION	1.525797332626993E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997799191261	WITHOUT_CLASSIFICATION	2.20080873783184E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999859079109954	WITHOUT_CLASSIFICATION	1.4092089004623467E-5	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999995074038809	WITHOUT_CLASSIFICATION	4.925961191457201E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999984903963555	WITHOUT_CLASSIFICATION	1.5096036445901683E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.99999989581875	WITHOUT_CLASSIFICATION	1.0418124990114298E-7	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999998732159702	WITHOUT_CLASSIFICATION	1.2678402982652634E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999997629603615	WITHOUT_CLASSIFICATION	2.3703963841924372E-7	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999974652759693	WITHOUT_CLASSIFICATION	2.5347240306309864E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996587749935	WITHOUT_CLASSIFICATION	3.4122500640070596E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.99999997232854	WITHOUT_CLASSIFICATION	2.7671459978691706E-8	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999859079109954	WITHOUT_CLASSIFICATION	1.4092089004623467E-5	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999990932488474	WITHOUT_CLASSIFICATION	9.067511525582511E-7	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.999999555628863	WITHOUT_CLASSIFICATION	4.4437113706558687E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999856994689641	WITHOUT_CLASSIFICATION	1.4300531035939792E-5	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999999018474893	WITHOUT_CLASSIFICATION	9.815251065447969E-8	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999937496284138	WITHOUT_CLASSIFICATION	6.25037158623639E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999618067982	WITHOUT_CLASSIFICATION	3.819320172709779E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999980253438282	WITHOUT_CLASSIFICATION	1.974656171790061E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999911029958031	WITHOUT_CLASSIFICATION	8.897004196938722E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998290263993	WITHOUT_CLASSIFICATION	1.7097360070791934E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999954386573899	WITHOUT_CLASSIFICATION	4.561342610029368E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999971580371744	WITHOUT_CLASSIFICATION	2.841962825590775E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999999403486832	WITHOUT_CLASSIFICATION	5.965131671264718E-8	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998244389342	WITHOUT_CLASSIFICATION	1.755610657983231E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999995810126939	WITHOUT_CLASSIFICATION	4.18987306100728E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999967590929	WITHOUT_CLASSIFICATION	3.2409070788721015E-9	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999999254349711	WITHOUT_CLASSIFICATION	7.456502896318629E-8	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999588953109085	WITHOUT_CLASSIFICATION	4.11046890915387E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999735812641738	WITHOUT_CLASSIFICATION	2.6418735826158465E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999962997480454	WITHOUT_CLASSIFICATION	3.7002519545548523E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999830242216542	WITHOUT_CLASSIFICATION	1.697577834586203E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999906240737	WITHOUT_CLASSIFICATION	9.375926180327758E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999986023091401	WITHOUT_CLASSIFICATION	1.3976908600222324E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999866513217711	WITHOUT_CLASSIFICATION	1.3348678228856884E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999906240737	WITHOUT_CLASSIFICATION	9.375926180327758E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999906240737	WITHOUT_CLASSIFICATION	9.375926180327758E-9	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993152536802	WITHOUT_CLASSIFICATION	6.847463198311719E-7	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999987508484935	WITHOUT_CLASSIFICATION	1.2491515064521584E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.99999987103398	WITHOUT_CLASSIFICATION	1.2896601997315936E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999997306280836	WITHOUT_CLASSIFICATION	2.693719164146314E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999928489622645	WITHOUT_CLASSIFICATION	7.151037735415892E-6	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.999999946802963	WITHOUT_CLASSIFICATION	5.319703705466983E-8	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999692651748877	WITHOUT_CLASSIFICATION	3.0734825112367036E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999999813032935	WITHOUT_CLASSIFICATION	1.8696706479899348E-8	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999996187850502	WITHOUT_CLASSIFICATION	3.8121494983553793E-7	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974119582803	WITHOUT_CLASSIFICATION	2.588041719652211E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999995297706026	WITHOUT_CLASSIFICATION	4.702293974069704E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999951871212456	WITHOUT_CLASSIFICATION	4.812878754391471E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999998083490284	WITHOUT_CLASSIFICATION	1.9165097166783431E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999983549556515	WITHOUT_CLASSIFICATION	1.6450443484948184E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999996412822154	WITHOUT_CLASSIFICATION	3.587177845513193E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9743431577110999	WITHOUT_CLASSIFICATION	0.025656842288900097	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999987680674731	WITHOUT_CLASSIFICATION	1.2319325268790796E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993997693877	WITHOUT_CLASSIFICATION	6.002306122242616E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999972804482231	WITHOUT_CLASSIFICATION	2.719551776832489E-6	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994316149504	WITHOUT_CLASSIFICATION	5.68385049635312E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999726629091273	WITHOUT_CLASSIFICATION	2.7337090872621036E-5	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999558953449279	WITHOUT_CLASSIFICATION	4.410465507201405E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999866513217711	WITHOUT_CLASSIFICATION	1.3348678228856884E-5	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993997693877	WITHOUT_CLASSIFICATION	6.002306122242616E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999859741826	WITHOUT_CLASSIFICATION	1.4025817390944229E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9998311854611581	WITHOUT_CLASSIFICATION	1.6881453884187885E-4	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999647132042888	WITHOUT_CLASSIFICATION	3.528679571114474E-5	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999980076530743	WITHOUT_CLASSIFICATION	1.9923469257850537E-6	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999991882500348	WITHOUT_CLASSIFICATION	8.117499652011568E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999641286749	WITHOUT_CLASSIFICATION	3.5871325099706985E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995709688989	WITHOUT_CLASSIFICATION	4.290311010852341E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998104106994	WITHOUT_CLASSIFICATION	1.8958930061536882E-7	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998244963973	WITHOUT_CLASSIFICATION	1.7550360266558662E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995362320703	WITHOUT_CLASSIFICATION	4.6376792970418416E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999991284140887	WITHOUT_CLASSIFICATION	8.715859112844421E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998347904694	WITHOUT_CLASSIFICATION	1.6520953048693616E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9999760576976718	WITHOUT_CLASSIFICATION	2.394230232818096E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999996590596388	WITHOUT_CLASSIFICATION	3.409403612405964E-7	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9998969070780946	WITHOUT_CLASSIFICATION	1.0309292190542527E-4	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.999999969221248	WITHOUT_CLASSIFICATION	3.077875194866018E-8	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999861341593113	WITHOUT_CLASSIFICATION	1.386584068864888E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999951565534388	WITHOUT_CLASSIFICATION	4.843446561144253E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999991114857696	WITHOUT_CLASSIFICATION	8.885142304006851E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999995726668974	WITHOUT_CLASSIFICATION	4.2733310245960376E-7	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999995257686463	WITHOUT_CLASSIFICATION	4.7423135374465437E-7	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999979129059984	WITHOUT_CLASSIFICATION	2.0870940015775753E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999532755609124	WITHOUT_CLASSIFICATION	4.672443908750747E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999532755609124	WITHOUT_CLASSIFICATION	4.672443908750747E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998707138785	WITHOUT_CLASSIFICATION	1.292861214921295E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998707138785	WITHOUT_CLASSIFICATION	1.292861214921295E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999134283378597	WITHOUT_CLASSIFICATION	8.657166214033598E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.999969759650775	WITHOUT_CLASSIFICATION	3.0240349225113852E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999974034645861	WITHOUT_CLASSIFICATION	2.59653541391988E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999995468699221	WITHOUT_CLASSIFICATION	4.531300778820595E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.99990562875526	WITHOUT_CLASSIFICATION	9.437124473991072E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999544067008782	WITHOUT_CLASSIFICATION	4.559329912174571E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999997053674031	WITHOUT_CLASSIFICATION	2.946325969454088E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999996164355326	WITHOUT_CLASSIFICATION	3.835644675073172E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998299476339	WITHOUT_CLASSIFICATION	1.700523661834779E-7	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.8663699024254213	DEFECT	0.13363009757457855	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999998818295707	WITHOUT_CLASSIFICATION	1.1817042940437743E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997092625387	WITHOUT_CLASSIFICATION	2.9073746133172115E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997092625387	WITHOUT_CLASSIFICATION	2.9073746133172115E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999945806286721	WITHOUT_CLASSIFICATION	5.419371327908188E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999945806286721	WITHOUT_CLASSIFICATION	5.419371327908188E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999998203466887	WITHOUT_CLASSIFICATION	1.7965331139123368E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984629079426	WITHOUT_CLASSIFICATION	1.5370920575185266E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999998408744591	WITHOUT_CLASSIFICATION	1.5912554084404863E-7	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999803803048283	WITHOUT_CLASSIFICATION	1.9619695171783632E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997239873011	WITHOUT_CLASSIFICATION	2.7601269900002027E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.999990866197403	WITHOUT_CLASSIFICATION	9.133802596959229E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999713096666063	WITHOUT_CLASSIFICATION	2.869033339359642E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999906240737	WITHOUT_CLASSIFICATION	9.375926180327758E-9	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999877811434164	WITHOUT_CLASSIFICATION	1.221885658352801E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997239873011	WITHOUT_CLASSIFICATION	2.7601269900002027E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.999996490780471	WITHOUT_CLASSIFICATION	3.509219528942726E-6	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999998946736466	WITHOUT_CLASSIFICATION	1.0532635342978917E-7	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999998669315602	WITHOUT_CLASSIFICATION	1.330684398853842E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999713096666063	WITHOUT_CLASSIFICATION	2.869033339359642E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998751826518	WITHOUT_CLASSIFICATION	1.248173483237781E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999996088826106	WITHOUT_CLASSIFICATION	3.911173893639336E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999993175722001	WITHOUT_CLASSIFICATION	6.824277999551926E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9996297504163716	WITHOUT_CLASSIFICATION	3.702495836283257E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999555370295335	WITHOUT_CLASSIFICATION	4.446297046651125E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999555370295335	WITHOUT_CLASSIFICATION	4.446297046651125E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999975437713288	WITHOUT_CLASSIFICATION	2.456228671285173E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999982118632101	WITHOUT_CLASSIFICATION	1.78813678990248E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998438824631	WITHOUT_CLASSIFICATION	1.5611753689558015E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999857479329	WITHOUT_CLASSIFICATION	1.4252067110045232E-8	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9998638846649281	WITHOUT_CLASSIFICATION	1.361153350718634E-4	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9998496791317768	WITHOUT_CLASSIFICATION	1.5032086822324906E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.999996434870741	WITHOUT_CLASSIFICATION	3.565129259108055E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999380858634	WITHOUT_CLASSIFICATION	6.191413653791726E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999996590596388	WITHOUT_CLASSIFICATION	3.409403612405964E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.999994096452496	WITHOUT_CLASSIFICATION	5.9035475039127275E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999898773100274	WITHOUT_CLASSIFICATION	1.0122689972465898E-5	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999918440881607	WITHOUT_CLASSIFICATION	8.155911839300342E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999389055584518	WITHOUT_CLASSIFICATION	6.109444154827016E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999911220150965	WITHOUT_CLASSIFICATION	8.877984903425175E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999957601211988	WITHOUT_CLASSIFICATION	4.239878801145186E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999996012659975	WITHOUT_CLASSIFICATION	3.98734002508476E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999996012659975	WITHOUT_CLASSIFICATION	3.98734002508476E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999850828393	WITHOUT_CLASSIFICATION	1.491716077237298E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999850828393	WITHOUT_CLASSIFICATION	1.491716077237298E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999985404684288	WITHOUT_CLASSIFICATION	1.4595315712011642E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999962893040424	WITHOUT_CLASSIFICATION	3.7106959577130225E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999961321700361	WITHOUT_CLASSIFICATION	3.867829963937376E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996987185404	WITHOUT_CLASSIFICATION	3.012814596196906E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999716146065	WITHOUT_CLASSIFICATION	2.838539350108188E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996005584397	WITHOUT_CLASSIFICATION	3.9944156033844046E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999564957668657	WITHOUT_CLASSIFICATION	4.350423313432167E-5	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999998537589505	WITHOUT_CLASSIFICATION	1.4624104953763107E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998822025972235	WITHOUT_CLASSIFICATION	1.1779740277651038E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993272172139414	WITHOUT_CLASSIFICATION	6.727827860586712E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999982511806059	WITHOUT_CLASSIFICATION	1.7488193940694297E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9990060490670591	WITHOUT_CLASSIFICATION	9.939509329407908E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998822025972235	WITHOUT_CLASSIFICATION	1.1779740277651038E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993272172139414	WITHOUT_CLASSIFICATION	6.727827860586712E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999982511806059	WITHOUT_CLASSIFICATION	1.7488193940694297E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999911765650616	WITHOUT_CLASSIFICATION	8.82343493831414E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.999994096452496	WITHOUT_CLASSIFICATION	5.9035475039127275E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.999994096452496	WITHOUT_CLASSIFICATION	5.9035475039127275E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999970437543685	WITHOUT_CLASSIFICATION	2.956245631616881E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999970437543685	WITHOUT_CLASSIFICATION	2.956245631616881E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998496166694	WITHOUT_CLASSIFICATION	1.5038333047044084E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998496166694	WITHOUT_CLASSIFICATION	1.5038333047044084E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999272124093	WITHOUT_CLASSIFICATION	7.278759074318338E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999968369810361	WITHOUT_CLASSIFICATION	3.163018963891683E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999971714819571	WITHOUT_CLASSIFICATION	2.8285180428050728E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998438824631	WITHOUT_CLASSIFICATION	1.5611753689558015E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998438824631	WITHOUT_CLASSIFICATION	1.5611753689558015E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999911220150965	WITHOUT_CLASSIFICATION	8.877984903425175E-6	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999982511806059	WITHOUT_CLASSIFICATION	1.7488193940694297E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.999994096452496	WITHOUT_CLASSIFICATION	5.9035475039127275E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999970437543685	WITHOUT_CLASSIFICATION	2.956245631616881E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998509763456	WITHOUT_CLASSIFICATION	1.4902365446700152E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999932192582982	WITHOUT_CLASSIFICATION	6.780741701778707E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999305246552882	WITHOUT_CLASSIFICATION	6.947534471174847E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999953450793353	WITHOUT_CLASSIFICATION	4.654920664717772E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.999994529556664	WITHOUT_CLASSIFICATION	5.470443336009259E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997279513226897	WITHOUT_CLASSIFICATION	2.72048677310274E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9998785048426932	WITHOUT_CLASSIFICATION	1.2149515730667531E-4	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999939315607949	WITHOUT_CLASSIFICATION	6.068439205181412E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999809670632359	WITHOUT_CLASSIFICATION	1.9032936764002194E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984629079426	WITHOUT_CLASSIFICATION	1.5370920575185266E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999911220150965	WITHOUT_CLASSIFICATION	8.877984903425175E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998822025972235	WITHOUT_CLASSIFICATION	1.1779740277651038E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993272172139414	WITHOUT_CLASSIFICATION	6.727827860586712E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999982511806059	WITHOUT_CLASSIFICATION	1.7488193940694297E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999970437543685	WITHOUT_CLASSIFICATION	2.956245631616881E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997279513226897	WITHOUT_CLASSIFICATION	2.72048677310274E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997279513226897	WITHOUT_CLASSIFICATION	2.72048677310274E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999995298727483	WITHOUT_CLASSIFICATION	4.7012725172607576E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.999953007413856	WITHOUT_CLASSIFICATION	4.699258614394174E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999823146641392	WITHOUT_CLASSIFICATION	1.768533586070157E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999998587678816	WITHOUT_CLASSIFICATION	1.4123211844542192E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999952911969746	WITHOUT_CLASSIFICATION	4.708803025355933E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999270760347052	WITHOUT_CLASSIFICATION	7.292396529480023E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995485370573	WITHOUT_CLASSIFICATION	4.5146294266518665E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984629079426	WITHOUT_CLASSIFICATION	1.5370920575185266E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998438824631	WITHOUT_CLASSIFICATION	1.5611753689558015E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998438824631	WITHOUT_CLASSIFICATION	1.5611753689558015E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999389055584518	WITHOUT_CLASSIFICATION	6.109444154827016E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999911220150965	WITHOUT_CLASSIFICATION	8.877984903425175E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999564957668657	WITHOUT_CLASSIFICATION	4.350423313432167E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999564957668657	WITHOUT_CLASSIFICATION	4.350423313432167E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999564957668657	WITHOUT_CLASSIFICATION	4.350423313432167E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999838981502616	WITHOUT_CLASSIFICATION	1.6101849738434887E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997279513226897	WITHOUT_CLASSIFICATION	2.72048677310274E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.999953007413856	WITHOUT_CLASSIFICATION	4.699258614394174E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999823146641392	WITHOUT_CLASSIFICATION	1.768533586070157E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999869591406	WITHOUT_CLASSIFICATION	1.3040859342696385E-8	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999884327707447	WITHOUT_CLASSIFICATION	1.1567229255179696E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999974675808386	WITHOUT_CLASSIFICATION	2.5324191612921214E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9991404384571508	WITHOUT_CLASSIFICATION	8.59561542849208E-4	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9904974989882983	WITHOUT_CLASSIFICATION	0.009502501011701659	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999996058416675	WITHOUT_CLASSIFICATION	3.9415833254631784E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999555370295335	WITHOUT_CLASSIFICATION	4.446297046651125E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999555370295335	WITHOUT_CLASSIFICATION	4.446297046651125E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999975437713288	WITHOUT_CLASSIFICATION	2.456228671285173E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.999953007413856	WITHOUT_CLASSIFICATION	4.699258614394174E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999999096647723	WITHOUT_CLASSIFICATION	9.033522771518055E-8	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999971103767861	WITHOUT_CLASSIFICATION	2.889623214063178E-6	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.999998994191586	WITHOUT_CLASSIFICATION	1.0058084140067593E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999287539317321	WITHOUT_CLASSIFICATION	7.124606826792324E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.999923561863838	WITHOUT_CLASSIFICATION	7.643813616207026E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999974274699743	WITHOUT_CLASSIFICATION	2.5725300255620965E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999982301101524	WITHOUT_CLASSIFICATION	1.7698898476573131E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999932562513082	WITHOUT_CLASSIFICATION	6.743748691728074E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999997088028417	WITHOUT_CLASSIFICATION	2.911971582013969E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991674681509	WITHOUT_CLASSIFICATION	8.325318490829351E-7	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999966109795836	WITHOUT_CLASSIFICATION	3.389020416426487E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999999096647723	WITHOUT_CLASSIFICATION	9.033522771518055E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999999096647723	WITHOUT_CLASSIFICATION	9.033522771518055E-8	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999975437713288	WITHOUT_CLASSIFICATION	2.456228671285173E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999982118632101	WITHOUT_CLASSIFICATION	1.78813678990248E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9998822025972235	WITHOUT_CLASSIFICATION	1.1779740277651038E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993272172139414	WITHOUT_CLASSIFICATION	6.727827860586712E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999953450793353	WITHOUT_CLASSIFICATION	4.654920664717772E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.999994529556664	WITHOUT_CLASSIFICATION	5.470443336009259E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999821583559133	WITHOUT_CLASSIFICATION	1.7841644086592936E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999134304674181	WITHOUT_CLASSIFICATION	8.656953258187608E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999530064853245	WITHOUT_CLASSIFICATION	4.69935146753791E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999998759456623	WITHOUT_CLASSIFICATION	1.2405433769876175E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999050979862676	WITHOUT_CLASSIFICATION	9.490201373237465E-5	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996900914688	WITHOUT_CLASSIFICATION	3.0990853119888355E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.973303844858715	WITHOUT_CLASSIFICATION	0.026696155141285045	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7946766776137063	WITHOUT_CLASSIFICATION	0.2053233223862937	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999830242216542	WITHOUT_CLASSIFICATION	1.697577834586203E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999951871212456	WITHOUT_CLASSIFICATION	4.812878754391471E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999983549556515	WITHOUT_CLASSIFICATION	1.6450443484948184E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999957601211988	WITHOUT_CLASSIFICATION	4.239878801145186E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999985404684288	WITHOUT_CLASSIFICATION	1.4595315712011642E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.973303844858715	WITHOUT_CLASSIFICATION	0.026696155141285045	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999971356447084	WITHOUT_CLASSIFICATION	2.8643552917255923E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9369425583865136	WITHOUT_CLASSIFICATION	0.06305744161348639	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987280864687	WITHOUT_CLASSIFICATION	1.2719135312564648E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6455799689212581	WITHOUT_CLASSIFICATION	0.35442003107874176	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8312368451263811	DEFECT	0.16876315487361895	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997474461534	WITHOUT_CLASSIFICATION	2.5255384667661987E-7	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7730146862948952	WITHOUT_CLASSIFICATION	0.22698531370510472	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6369839056073987	DEFECT	0.3630160943926013	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999928869616493	WITHOUT_CLASSIFICATION	7.1130383505674E-6	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9908093449372457	WITHOUT_CLASSIFICATION	0.009190655062754226	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8541620335084097	WITHOUT_CLASSIFICATION	0.14583796649159034	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999870888894	WITHOUT_CLASSIFICATION	1.2911110605923018E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9990587186872272	WITHOUT_CLASSIFICATION	9.412813127729566E-4	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9937527484956434	WITHOUT_CLASSIFICATION	0.006247251504356491	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999971420557405	WITHOUT_CLASSIFICATION	2.857944259577777E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9972426698757503	WITHOUT_CLASSIFICATION	0.0027573301242497213	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9716294690101184	WITHOUT_CLASSIFICATION	0.028370530989881647	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999995297706026	WITHOUT_CLASSIFICATION	4.702293974069704E-6	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9979027520424685	WITHOUT_CLASSIFICATION	0.0020972479575316126	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9840020163544717	WITHOUT_CLASSIFICATION	0.015997983645528385	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999961967292194	WITHOUT_CLASSIFICATION	3.8032707806395323E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999970486075	WITHOUT_CLASSIFICATION	2.9513925193165802E-9	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999946016217682	WITHOUT_CLASSIFICATION	5.398378231702036E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.999999811739566	WITHOUT_CLASSIFICATION	1.8826043399100534E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999870888894	WITHOUT_CLASSIFICATION	1.2911110605923018E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9996297504163716	WITHOUT_CLASSIFICATION	3.702495836283257E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999555370295335	WITHOUT_CLASSIFICATION	4.446297046651125E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999975437713288	WITHOUT_CLASSIFICATION	2.456228671285173E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999975437713288	WITHOUT_CLASSIFICATION	2.456228671285173E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999982118632101	WITHOUT_CLASSIFICATION	1.78813678990248E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.999998438824631	WITHOUT_CLASSIFICATION	1.5611753689558015E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9998638846649281	WITHOUT_CLASSIFICATION	1.361153350718634E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.999996434870741	WITHOUT_CLASSIFICATION	3.565129259108055E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999898773100274	WITHOUT_CLASSIFICATION	1.0122689972465898E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999911220150965	WITHOUT_CLASSIFICATION	8.877984903425175E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997279513226897	WITHOUT_CLASSIFICATION	2.72048677310274E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999741992582	WITHOUT_CLASSIFICATION	2.5800741798342192E-8	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999981914828785	WITHOUT_CLASSIFICATION	1.8085171214519864E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999649229997	WITHOUT_CLASSIFICATION	3.50770002866507E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999999528279155	WITHOUT_CLASSIFICATION	4.717208448685243E-8	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999991561032048	WITHOUT_CLASSIFICATION	8.438967952357711E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999991419108563	WITHOUT_CLASSIFICATION	8.580891438236702E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999846562711036	WITHOUT_CLASSIFICATION	1.5343728896442256E-5	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9998538421502767	WITHOUT_CLASSIFICATION	1.461578497233267E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999564957668657	WITHOUT_CLASSIFICATION	4.350423313432167E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999953450793353	WITHOUT_CLASSIFICATION	4.654920664717772E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.999994529556664	WITHOUT_CLASSIFICATION	5.470443336009259E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997279513226897	WITHOUT_CLASSIFICATION	2.72048677310274E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999134304674181	WITHOUT_CLASSIFICATION	8.656953258187608E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999530064853245	WITHOUT_CLASSIFICATION	4.69935146753791E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999999540619456	WITHOUT_CLASSIFICATION	4.593805445781973E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999998974568207	WITHOUT_CLASSIFICATION	1.0254317924421377E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999997032794025	WITHOUT_CLASSIFICATION	2.9672059753507603E-7	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999999617125913	WITHOUT_CLASSIFICATION	3.828740869411867E-8	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999992755585625	WITHOUT_CLASSIFICATION	7.244414374871052E-7	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999981118222617	WITHOUT_CLASSIFICATION	1.888177738312606E-6	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.999970593987153	WITHOUT_CLASSIFICATION	2.940601284690974E-5	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999968849363724	WITHOUT_CLASSIFICATION	3.115063627644176E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999852514018945	WITHOUT_CLASSIFICATION	1.4748598105520321E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999966387241115	WITHOUT_CLASSIFICATION	3.36127588856177E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7946766776137063	WITHOUT_CLASSIFICATION	0.2053233223862937	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999981118222617	WITHOUT_CLASSIFICATION	1.888177738312606E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999852514018945	WITHOUT_CLASSIFICATION	1.4748598105520321E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999966387241115	WITHOUT_CLASSIFICATION	3.36127588856177E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999538374178832	WITHOUT_CLASSIFICATION	4.616258211680014E-5	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999859498280651	WITHOUT_CLASSIFICATION	1.4050171934881076E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999816969618	WITHOUT_CLASSIFICATION	1.8303038149114592E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999816969618	WITHOUT_CLASSIFICATION	1.8303038149114592E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974649737462	WITHOUT_CLASSIFICATION	2.535026253841949E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999964046449377	WITHOUT_CLASSIFICATION	3.595355062276928E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999964046449377	WITHOUT_CLASSIFICATION	3.595355062276928E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.999965620090952	WITHOUT_CLASSIFICATION	3.437990904798382E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999463589553331	WITHOUT_CLASSIFICATION	5.364104466687499E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.999999154560625	WITHOUT_CLASSIFICATION	8.454393749502407E-7	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999952221723851	WITHOUT_CLASSIFICATION	4.777827614884132E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999999529883409	WITHOUT_CLASSIFICATION	4.701165913973276E-8	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.999999997424539	WITHOUT_CLASSIFICATION	2.575460872664404E-9	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.8484851191764201	WITHOUT_CLASSIFICATION	0.15151488082357975	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999976242168	WITHOUT_CLASSIFICATION	2.375783232067471E-9	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999109652701162	WITHOUT_CLASSIFICATION	8.903472988371091E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999494956671	WITHOUT_CLASSIFICATION	5.0504332883894484E-8	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999988951469349	WITHOUT_CLASSIFICATION	1.104853065097186E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999978111071167	WITHOUT_CLASSIFICATION	2.188892883293459E-5	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999896532265	WITHOUT_CLASSIFICATION	1.0346773586113734E-8	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999109652701162	WITHOUT_CLASSIFICATION	8.903472988371091E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999999357125275	WITHOUT_CLASSIFICATION	6.428747245115817E-8	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999992719944016	WITHOUT_CLASSIFICATION	7.280055982764179E-7	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999991749952	WITHOUT_CLASSIFICATION	8.250047790358883E-10	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999996835373014	WITHOUT_CLASSIFICATION	3.164626985996044E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999304075228401	WITHOUT_CLASSIFICATION	6.959247715984784E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999987313966007	WITHOUT_CLASSIFICATION	1.2686033993010795E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999998017070495	WITHOUT_CLASSIFICATION	1.982929504938999E-7	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999986863062506	WITHOUT_CLASSIFICATION	1.3136937494160381E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9892299902054075	WITHOUT_CLASSIFICATION	0.010770009794592535	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9746022474077134	WITHOUT_CLASSIFICATION	0.02539775259228657	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999881113150761	WITHOUT_CLASSIFICATION	1.1888684923904646E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.999999985198729	WITHOUT_CLASSIFICATION	1.4801270897473413E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9999042711926476	WITHOUT_CLASSIFICATION	9.572880735242827E-5	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999955873492947	WITHOUT_CLASSIFICATION	4.412650705274338E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999958379292394	WITHOUT_CLASSIFICATION	4.162070760682929E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999981074337013	WITHOUT_CLASSIFICATION	1.8925662987038817E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999999113202356	WITHOUT_CLASSIFICATION	8.867976446282763E-8	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999955129214	WITHOUT_CLASSIFICATION	4.487078697047677E-9	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999982352896584	WITHOUT_CLASSIFICATION	1.7647103415787661E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999997601050927	WITHOUT_CLASSIFICATION	2.398949072587673E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999998885024713	WITHOUT_CLASSIFICATION	1.1149752859795218E-7	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999999507054084	WITHOUT_CLASSIFICATION	4.92945915068057E-8	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999765520516275	WITHOUT_CLASSIFICATION	2.344794837255132E-5	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999997114393928	WITHOUT_CLASSIFICATION	2.8856060713317117E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999975971877645	WITHOUT_CLASSIFICATION	2.402812235545611E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999977985707346	WITHOUT_CLASSIFICATION	2.2014292654699766E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999319601859	WITHOUT_CLASSIFICATION	6.803981410390964E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999994637935523	WITHOUT_CLASSIFICATION	5.362064476926527E-7	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999995790484252	WITHOUT_CLASSIFICATION	4.209515747270554E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9760661591702066	WITHOUT_CLASSIFICATION	0.023933840829793405	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.999997172441831	WITHOUT_CLASSIFICATION	2.8275581690328285E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999999659614295	WITHOUT_CLASSIFICATION	3.403857057980791E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999999106942262	WITHOUT_CLASSIFICATION	8.93057737436631E-8	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999984483560034	WITHOUT_CLASSIFICATION	1.5516439966367964E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999987581187498	WITHOUT_CLASSIFICATION	1.2418812500996503E-6	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999999713108955	WITHOUT_CLASSIFICATION	2.8689104508863053E-8	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999999827907012	WITHOUT_CLASSIFICATION	1.720929876180489E-8	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999997541698813	WITHOUT_CLASSIFICATION	2.458301187542523E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999999149045702	WITHOUT_CLASSIFICATION	8.509542982004468E-8	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999992185350131	WITHOUT_CLASSIFICATION	7.814649869004185E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.999999554049484	WITHOUT_CLASSIFICATION	4.459505159532472E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.999999934673436	WITHOUT_CLASSIFICATION	6.532656406765236E-8	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999993812247673	WITHOUT_CLASSIFICATION	6.187752326789984E-7	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999992977416643	WITHOUT_CLASSIFICATION	7.022583356696973E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999981738819751	WITHOUT_CLASSIFICATION	1.8261180249615157E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999996504641555	WITHOUT_CLASSIFICATION	3.49535844473811E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999889407147089	WITHOUT_CLASSIFICATION	1.1059285291099083E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999735812641738	WITHOUT_CLASSIFICATION	2.6418735826158465E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999982118632101	WITHOUT_CLASSIFICATION	1.78813678990248E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999987313966007	WITHOUT_CLASSIFICATION	1.2686033993010795E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999319601859	WITHOUT_CLASSIFICATION	6.803981410390964E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999994637935523	WITHOUT_CLASSIFICATION	5.362064476926527E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999996504641555	WITHOUT_CLASSIFICATION	3.49535844473811E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999889407147089	WITHOUT_CLASSIFICATION	1.1059285291099083E-5	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999983116716321	WITHOUT_CLASSIFICATION	1.688328367856187E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999867707140431	WITHOUT_CLASSIFICATION	1.3229285956811408E-5	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.999999963005689	WITHOUT_CLASSIFICATION	3.699431097277437E-8	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999999915439333	WITHOUT_CLASSIFICATION	8.45606671377614E-9	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.999996872559604	WITHOUT_CLASSIFICATION	3.1274403960195054E-6	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999991485486773	WITHOUT_CLASSIFICATION	8.514513227531672E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999298516102	WITHOUT_CLASSIFICATION	7.014838975515922E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999985163299797	WITHOUT_CLASSIFICATION	1.4836700202201828E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999889004825405	WITHOUT_CLASSIFICATION	1.109951745949648E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996900914688	WITHOUT_CLASSIFICATION	3.0990853119888355E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998299476339	WITHOUT_CLASSIFICATION	1.700523661834779E-7	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9904974989882983	WITHOUT_CLASSIFICATION	0.009502501011701659	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9369425583865136	WITHOUT_CLASSIFICATION	0.06305744161348639	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999982858382278	WITHOUT_CLASSIFICATION	1.7141617721996798E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999936801351	WITHOUT_CLASSIFICATION	6.3198648108141015E-9	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991674681509	WITHOUT_CLASSIFICATION	8.325318490829351E-7	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999998873074779	WITHOUT_CLASSIFICATION	1.1269252208408786E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999955885441799	WITHOUT_CLASSIFICATION	4.411455820121674E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999951871212456	WITHOUT_CLASSIFICATION	4.812878754391471E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999983549556515	WITHOUT_CLASSIFICATION	1.6450443484948184E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999861341593113	WITHOUT_CLASSIFICATION	1.386584068864888E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999951565534388	WITHOUT_CLASSIFICATION	4.843446561144253E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6455799689212581	WITHOUT_CLASSIFICATION	0.35442003107874176	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8312368451263811	DEFECT	0.16876315487361895	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7730146862948952	WITHOUT_CLASSIFICATION	0.22698531370510472	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6369839056073987	DEFECT	0.3630160943926013	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9908093449372457	WITHOUT_CLASSIFICATION	0.009190655062754226	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8541620335084097	WITHOUT_CLASSIFICATION	0.14583796649159034	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999999085754582	WITHOUT_CLASSIFICATION	9.142454182157623E-8	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987280864687	WITHOUT_CLASSIFICATION	1.2719135312564648E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997474461534	WITHOUT_CLASSIFICATION	2.5255384667661987E-7	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999928869616493	WITHOUT_CLASSIFICATION	7.1130383505674E-6	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999985667890349	WITHOUT_CLASSIFICATION	1.433210965211591E-6	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999961995980344	WITHOUT_CLASSIFICATION	3.800401965495518E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950935904279	WITHOUT_CLASSIFICATION	4.906409572017942E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.813208543920389	WITHOUT_CLASSIFICATION	0.18679145607961106	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974119582803	WITHOUT_CLASSIFICATION	2.588041719652211E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989582116225	WITHOUT_CLASSIFICATION	1.0417883774802315E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999953579964949	WITHOUT_CLASSIFICATION	4.642003505069424E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999992869200454	WITHOUT_CLASSIFICATION	7.130799546139903E-7	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.999999912142021	WITHOUT_CLASSIFICATION	8.785797892659071E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999992299160484	WITHOUT_CLASSIFICATION	7.700839516134762E-7	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999972056011874	WITHOUT_CLASSIFICATION	2.794398812455149E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999494956671	WITHOUT_CLASSIFICATION	5.0504332883894484E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999989654722439	WITHOUT_CLASSIFICATION	1.0345277560878967E-6	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.999999395743414	WITHOUT_CLASSIFICATION	6.042565859239326E-7	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999650394397098	WITHOUT_CLASSIFICATION	3.4960560290084514E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999901762788496	WITHOUT_CLASSIFICATION	9.823721150418599E-6	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999988928899272	WITHOUT_CLASSIFICATION	1.107110072874482E-6	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999953194499247	WITHOUT_CLASSIFICATION	4.680550075330195E-6	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.999999388847712	WITHOUT_CLASSIFICATION	6.111522879671323E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999910002763679	WITHOUT_CLASSIFICATION	8.999723632094441E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999876340269449	WITHOUT_CLASSIFICATION	1.2365973055187813E-5	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999996133518125	WITHOUT_CLASSIFICATION	3.866481875172339E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999841482677816	WITHOUT_CLASSIFICATION	1.5851732218442987E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998244389342	WITHOUT_CLASSIFICATION	1.755610657983231E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999996590596388	WITHOUT_CLASSIFICATION	3.409403612405964E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.999996490780471	WITHOUT_CLASSIFICATION	3.509219528942726E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.999990866197403	WITHOUT_CLASSIFICATION	9.133802596959229E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999713096666063	WITHOUT_CLASSIFICATION	2.869033339359642E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999976242168	WITHOUT_CLASSIFICATION	2.375783232067471E-9	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999978111071167	WITHOUT_CLASSIFICATION	2.188892883293459E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999992719944016	WITHOUT_CLASSIFICATION	7.280055982764179E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999996835373014	WITHOUT_CLASSIFICATION	3.164626985996044E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999996835373014	WITHOUT_CLASSIFICATION	3.164626985996044E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999744320569	WITHOUT_CLASSIFICATION	2.5567943092626305E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999995268528977	WITHOUT_CLASSIFICATION	4.7314710224176305E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999995576141346	WITHOUT_CLASSIFICATION	4.42385865398189E-7	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9996343131678467	WITHOUT_CLASSIFICATION	3.6568683215330297E-4	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999975195397705	WITHOUT_CLASSIFICATION	2.480460229519872E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999983342081769	WITHOUT_CLASSIFICATION	1.6657918230228098E-6	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999989680233174	WITHOUT_CLASSIFICATION	1.0319766825963226E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999966668046844	WITHOUT_CLASSIFICATION	3.333195315614491E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999173986907	WITHOUT_CLASSIFICATION	8.260130928365622E-8	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999982118632101	WITHOUT_CLASSIFICATION	1.78813678990248E-6	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999901762788496	WITHOUT_CLASSIFICATION	9.823721150418599E-6	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999997578893118	WITHOUT_CLASSIFICATION	2.421106881294319E-7	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.999984433222445	WITHOUT_CLASSIFICATION	1.5566777555026438E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999985653030441	WITHOUT_CLASSIFICATION	1.4346969559341203E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999994709883019	WITHOUT_CLASSIFICATION	5.290116981832394E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999995832039943	WITHOUT_CLASSIFICATION	4.1679600569117765E-7	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999997427365922	WITHOUT_CLASSIFICATION	2.5726340790916666E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999999093608268	WITHOUT_CLASSIFICATION	9.063917307886099E-8	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999991028191998	WITHOUT_CLASSIFICATION	8.971808003401718E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999997948146685	WITHOUT_CLASSIFICATION	2.051853315010606E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.999999998759952	WITHOUT_CLASSIFICATION	1.240047951640246E-9	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.999999769745124	WITHOUT_CLASSIFICATION	2.3025487603346716E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999997639142401	WITHOUT_CLASSIFICATION	2.3608576000334424E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999953670946262	WITHOUT_CLASSIFICATION	4.632905373770436E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999380858634	WITHOUT_CLASSIFICATION	6.191413653791726E-8	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999957601211988	WITHOUT_CLASSIFICATION	4.239878801145186E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999996012659975	WITHOUT_CLASSIFICATION	3.98734002508476E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999996012659975	WITHOUT_CLASSIFICATION	3.98734002508476E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999850828393	WITHOUT_CLASSIFICATION	1.491716077237298E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999850828393	WITHOUT_CLASSIFICATION	1.491716077237298E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999985404684288	WITHOUT_CLASSIFICATION	1.4595315712011642E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999962893040424	WITHOUT_CLASSIFICATION	3.7106959577130225E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996987185404	WITHOUT_CLASSIFICATION	3.012814596196906E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996987185404	WITHOUT_CLASSIFICATION	3.012814596196906E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999716146065	WITHOUT_CLASSIFICATION	2.838539350108188E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999716146065	WITHOUT_CLASSIFICATION	2.838539350108188E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996005584397	WITHOUT_CLASSIFICATION	3.9944156033844046E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996005584397	WITHOUT_CLASSIFICATION	3.9944156033844046E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9991404384571508	WITHOUT_CLASSIFICATION	8.59561542849208E-4	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999996658072158	WITHOUT_CLASSIFICATION	3.341927841174962E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999995519781395	WITHOUT_CLASSIFICATION	4.480218604688535E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999705705546432	WITHOUT_CLASSIFICATION	2.942944535667111E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.999984953928516	WITHOUT_CLASSIFICATION	1.5046071483834495E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999998647352731	WITHOUT_CLASSIFICATION	1.3526472679083588E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999997055599201	WITHOUT_CLASSIFICATION	2.9444007990071695E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999999183107797	WITHOUT_CLASSIFICATION	8.168922029622407E-8	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999984742274847	WITHOUT_CLASSIFICATION	1.525772515335913E-6	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999997558424577	WITHOUT_CLASSIFICATION	2.4415754234674396E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999999693702495	WITHOUT_CLASSIFICATION	3.062975046053872E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999999596650435	WITHOUT_CLASSIFICATION	4.033495645287863E-8	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999971705875175	WITHOUT_CLASSIFICATION	2.8294124825677917E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999982118632101	WITHOUT_CLASSIFICATION	1.78813678990248E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999631258970587	WITHOUT_CLASSIFICATION	3.687410294131991E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999978111071167	WITHOUT_CLASSIFICATION	2.188892883293459E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999992719944016	WITHOUT_CLASSIFICATION	7.280055982764179E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999985163299797	WITHOUT_CLASSIFICATION	1.4836700202201828E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999995268528977	WITHOUT_CLASSIFICATION	4.7314710224176305E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999721564146824	WITHOUT_CLASSIFICATION	2.7843585317686003E-5	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999730315624	WITHOUT_CLASSIFICATION	2.6968437529107876E-8	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999636117588	WITHOUT_CLASSIFICATION	3.638824112719353E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.999999993369582	WITHOUT_CLASSIFICATION	6.630418013506639E-9	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999992819060622	WITHOUT_CLASSIFICATION	7.180939377536551E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999987690275086	WITHOUT_CLASSIFICATION	1.2309724914198372E-6	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999989649730749	WITHOUT_CLASSIFICATION	1.0350269250744743E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999906240737	WITHOUT_CLASSIFICATION	9.375926180327758E-9	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999713096666063	WITHOUT_CLASSIFICATION	2.869033339359642E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998751826518	WITHOUT_CLASSIFICATION	1.248173483237781E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999998587678816	WITHOUT_CLASSIFICATION	1.4123211844542192E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999952911969746	WITHOUT_CLASSIFICATION	4.708803025355933E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999996835373014	WITHOUT_CLASSIFICATION	3.164626985996044E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999987313966007	WITHOUT_CLASSIFICATION	1.2686033993010795E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999936801351	WITHOUT_CLASSIFICATION	6.3198648108141015E-9	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999201322026	WITHOUT_CLASSIFICATION	7.98677974372016E-8	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9992061136309773	WITHOUT_CLASSIFICATION	7.938863690227178E-4	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999999863423455	WITHOUT_CLASSIFICATION	1.3657654518677374E-8	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999996523778572	WITHOUT_CLASSIFICATION	3.4762214275645926E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999999857112436	WITHOUT_CLASSIFICATION	1.4288756399860788E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999991963601387	WITHOUT_CLASSIFICATION	8.036398613844024E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999966668046844	WITHOUT_CLASSIFICATION	3.333195315614491E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999982118632101	WITHOUT_CLASSIFICATION	1.78813678990248E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999741992582	WITHOUT_CLASSIFICATION	2.5800741798342192E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999978111071167	WITHOUT_CLASSIFICATION	2.188892883293459E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999985653030441	WITHOUT_CLASSIFICATION	1.4346969559341203E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999995832039943	WITHOUT_CLASSIFICATION	4.1679600569117765E-7	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999998675167929	WITHOUT_CLASSIFICATION	1.3248320704746277E-7	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999999289202492	WITHOUT_CLASSIFICATION	7.10797506889426E-8	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999823833253062	WITHOUT_CLASSIFICATION	1.761667469374212E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999998372842899	WITHOUT_CLASSIFICATION	1.6271571015817228E-7	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999983806555146	WITHOUT_CLASSIFICATION	1.6193444853898808E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996309474054	WITHOUT_CLASSIFICATION	3.690525945787234E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999980287810339	WITHOUT_CLASSIFICATION	1.971218966003155E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999983806555146	WITHOUT_CLASSIFICATION	1.6193444853898808E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950377840391	WITHOUT_CLASSIFICATION	4.962215960941494E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996309474054	WITHOUT_CLASSIFICATION	3.690525945787234E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999980287810339	WITHOUT_CLASSIFICATION	1.971218966003155E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995307255356	WITHOUT_CLASSIFICATION	4.692744643915336E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999997966510525	WITHOUT_CLASSIFICATION	2.0334894736287913E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999997966510525	WITHOUT_CLASSIFICATION	2.0334894736287913E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999740627020605	WITHOUT_CLASSIFICATION	2.593729793955471E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.999994108326575	WITHOUT_CLASSIFICATION	5.891673425009061E-6	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999999732015834	WITHOUT_CLASSIFICATION	2.6798416610164485E-8	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999999328498247	WITHOUT_CLASSIFICATION	6.715017521452546E-8	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999999219307911	WITHOUT_CLASSIFICATION	7.806920879229204E-8	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999970243452121	WITHOUT_CLASSIFICATION	2.975654787868462E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999781114653319	WITHOUT_CLASSIFICATION	2.18885346681062E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999978111071167	WITHOUT_CLASSIFICATION	2.188892883293459E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999740627020605	WITHOUT_CLASSIFICATION	2.593729793955471E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999934068088	WITHOUT_CLASSIFICATION	6.593191185088943E-9	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999996338488	WITHOUT_CLASSIFICATION	3.661512309054884E-10	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999868722147646	WITHOUT_CLASSIFICATION	1.3127785235458216E-5	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999457162466702	WITHOUT_CLASSIFICATION	5.4283753329779886E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999998587305461	WITHOUT_CLASSIFICATION	1.4126945383323435E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999999677162243	WITHOUT_CLASSIFICATION	3.228377563445724E-8	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999391373996136	WITHOUT_CLASSIFICATION	6.086260038644824E-5	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999951445254632	WITHOUT_CLASSIFICATION	4.855474536760573E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996005584397	WITHOUT_CLASSIFICATION	3.9944156033844046E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999944548811737	WITHOUT_CLASSIFICATION	5.545118826351218E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999970486075	WITHOUT_CLASSIFICATION	2.9513925193165802E-9	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999985653030441	WITHOUT_CLASSIFICATION	1.4346969559341203E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999994709883019	WITHOUT_CLASSIFICATION	5.290116981832394E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999995832039943	WITHOUT_CLASSIFICATION	4.1679600569117765E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999999475989583	WITHOUT_CLASSIFICATION	5.240104169333256E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999853998706933	WITHOUT_CLASSIFICATION	1.4600129306690483E-5	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9997212140950892	WITHOUT_CLASSIFICATION	2.787859049107986E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999995542779154	WITHOUT_CLASSIFICATION	4.457220846216859E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.999999998639709	WITHOUT_CLASSIFICATION	1.3602909343777401E-9	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.999999998639709	WITHOUT_CLASSIFICATION	1.3602909343777401E-9	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999988932512621	WITHOUT_CLASSIFICATION	1.1067487379253435E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.999998378788638	WITHOUT_CLASSIFICATION	1.6212113621254087E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999993593931529	WITHOUT_CLASSIFICATION	6.40606847201523E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999998299476339	WITHOUT_CLASSIFICATION	1.700523661834779E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999862333891704	WITHOUT_CLASSIFICATION	1.3766610829683704E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999272124093	WITHOUT_CLASSIFICATION	7.278759074318338E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999998974568207	WITHOUT_CLASSIFICATION	1.0254317924421377E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999969267163427	WITHOUT_CLASSIFICATION	3.073283657315224E-6	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9998535989200285	WITHOUT_CLASSIFICATION	1.4640107997149486E-4	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999966982504377	WITHOUT_CLASSIFICATION	3.3017495622340056E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999979009611287	WITHOUT_CLASSIFICATION	2.0990388712531716E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999998818295707	WITHOUT_CLASSIFICATION	1.1817042940437743E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997092625387	WITHOUT_CLASSIFICATION	2.9073746133172115E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999945806286721	WITHOUT_CLASSIFICATION	5.419371327908188E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999945806286721	WITHOUT_CLASSIFICATION	5.419371327908188E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999998203466887	WITHOUT_CLASSIFICATION	1.7965331139123368E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999961321700361	WITHOUT_CLASSIFICATION	3.867829963937376E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999996987185404	WITHOUT_CLASSIFICATION	3.012814596196906E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9991404384571508	WITHOUT_CLASSIFICATION	8.59561542849208E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999910002763679	WITHOUT_CLASSIFICATION	8.999723632094441E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999989461451791	WITHOUT_CLASSIFICATION	1.0538548208481163E-6	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999215517008	WITHOUT_CLASSIFICATION	7.844829921304683E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999996936910724	WITHOUT_CLASSIFICATION	3.06308927512839E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999953807961	WITHOUT_CLASSIFICATION	4.6192038554148644E-9	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999998251680989	WITHOUT_CLASSIFICATION	1.7483190111413584E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999965329159179	WITHOUT_CLASSIFICATION	3.467084082098539E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999983806555146	WITHOUT_CLASSIFICATION	1.6193444853898808E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996309474054	WITHOUT_CLASSIFICATION	3.690525945787234E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999980287810339	WITHOUT_CLASSIFICATION	1.971218966003155E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9760661591702066	WITHOUT_CLASSIFICATION	0.023933840829793405	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980671390308	WITHOUT_CLASSIFICATION	1.9328609691573054E-6	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.999999786683514	WITHOUT_CLASSIFICATION	2.133164859740189E-7	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999999783266659	WITHOUT_CLASSIFICATION	2.167333410154393E-8	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.999999820149348	WITHOUT_CLASSIFICATION	1.7985065217135426E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999844719330402	WITHOUT_CLASSIFICATION	1.552806695972733E-5	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999998792405502	WITHOUT_CLASSIFICATION	1.2075944970642745E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999990943569128	WITHOUT_CLASSIFICATION	9.056430872982023E-7	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999995274733691	WITHOUT_CLASSIFICATION	4.725266308878428E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999846461586933	WITHOUT_CLASSIFICATION	1.535384130672482E-5	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999997970377034	WITHOUT_CLASSIFICATION	2.0296229653942023E-7	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999997970377034	WITHOUT_CLASSIFICATION	2.0296229653942023E-7	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999992654953597	WITHOUT_CLASSIFICATION	7.345046402456171E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999999475989583	WITHOUT_CLASSIFICATION	5.240104169333256E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999988901924967	WITHOUT_CLASSIFICATION	1.1098075032877797E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999988901924967	WITHOUT_CLASSIFICATION	1.1098075032877797E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999920528005258	WITHOUT_CLASSIFICATION	7.947199474199222E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999984779580683	WITHOUT_CLASSIFICATION	1.5220419316281196E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999996571867433	WITHOUT_CLASSIFICATION	3.428132566191386E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.999999985679658	WITHOUT_CLASSIFICATION	1.4320341987648915E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999988901924967	WITHOUT_CLASSIFICATION	1.1098075032877797E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.999999811739566	WITHOUT_CLASSIFICATION	1.8826043399100534E-7	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999483890575904	WITHOUT_CLASSIFICATION	5.1610942409493774E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999864856322	WITHOUT_CLASSIFICATION	1.3514367873158854E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.999999966371319	WITHOUT_CLASSIFICATION	3.3628681063575736E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999998734058778	WITHOUT_CLASSIFICATION	1.2659412224053414E-7	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999945042859	WITHOUT_CLASSIFICATION	5.495714074275324E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999973423623448	WITHOUT_CLASSIFICATION	2.6576376552454008E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9978421079278748	WITHOUT_CLASSIFICATION	0.00215789207212532	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9978421079278748	WITHOUT_CLASSIFICATION	0.00215789207212532	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9978421079278748	WITHOUT_CLASSIFICATION	0.00215789207212532	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999070090524551	WITHOUT_CLASSIFICATION	9.299094754487328E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999994875033826	WITHOUT_CLASSIFICATION	5.124966174585414E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9997104972924792	WITHOUT_CLASSIFICATION	2.8950270752082954E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999737878183644	WITHOUT_CLASSIFICATION	2.621218163560657E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999918720194	WITHOUT_CLASSIFICATION	8.127980619289176E-9	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9988412204030012	WITHOUT_CLASSIFICATION	0.0011587795969988345	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999955440060216	WITHOUT_CLASSIFICATION	4.455993978362591E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999932765731476	WITHOUT_CLASSIFICATION	6.723426852286019E-6	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999105423846	WITHOUT_CLASSIFICATION	8.945761540945906E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999750577047	WITHOUT_CLASSIFICATION	2.494229534689612E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.999999972824716	WITHOUT_CLASSIFICATION	2.7175283999374785E-8	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999957762868344	WITHOUT_CLASSIFICATION	4.223713165539177E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999683971378	WITHOUT_CLASSIFICATION	3.1602862191232204E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999683971378	WITHOUT_CLASSIFICATION	3.1602862191232204E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999996436057849	WITHOUT_CLASSIFICATION	3.5639421512841154E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999996436057849	WITHOUT_CLASSIFICATION	3.5639421512841154E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999979107363617	WITHOUT_CLASSIFICATION	2.0892636382641155E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999319218957	WITHOUT_CLASSIFICATION	6.807810420606984E-8	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999989407458209	WITHOUT_CLASSIFICATION	1.0592541791492092E-6	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999964073042	WITHOUT_CLASSIFICATION	3.5926957657143444E-9	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999952613080131	WITHOUT_CLASSIFICATION	4.738691986940266E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999950071538408	WITHOUT_CLASSIFICATION	4.992846159183268E-6	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999982991123498	WITHOUT_CLASSIFICATION	1.7008876501866329E-6	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999992246234688	WITHOUT_CLASSIFICATION	7.753765313025027E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999937384765677	WITHOUT_CLASSIFICATION	6.261523432326174E-6	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999997973142238	WITHOUT_CLASSIFICATION	2.026857760358621E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999863572194	WITHOUT_CLASSIFICATION	1.3642780456498459E-8	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994628251045	WITHOUT_CLASSIFICATION	5.371748953801182E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999830952325828	WITHOUT_CLASSIFICATION	1.6904767417247387E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999977031153418	WITHOUT_CLASSIFICATION	2.2968846582078335E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9997776302653528	WITHOUT_CLASSIFICATION	2.2236973464715134E-4	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999983363783	WITHOUT_CLASSIFICATION	1.6636216613199206E-9	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999973612371496	WITHOUT_CLASSIFICATION	2.6387628503911282E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999973612371496	WITHOUT_CLASSIFICATION	2.6387628503911282E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999988349798613	WITHOUT_CLASSIFICATION	1.1650201386726973E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999988349798613	WITHOUT_CLASSIFICATION	1.1650201386726973E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999517596186785	WITHOUT_CLASSIFICATION	4.824038132138183E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.999980870390646	WITHOUT_CLASSIFICATION	1.9129609354011764E-5	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999587858816263	WITHOUT_CLASSIFICATION	4.121411837360644E-5	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.99999755807441	WITHOUT_CLASSIFICATION	2.441925589937011E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999969660706	WITHOUT_CLASSIFICATION	3.033929430540335E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999969660706	WITHOUT_CLASSIFICATION	3.033929430540335E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9997668529156571	WITHOUT_CLASSIFICATION	2.3314708434290214E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9999290580506186	WITHOUT_CLASSIFICATION	7.094194938143363E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999992691631644	WITHOUT_CLASSIFICATION	7.308368357073667E-7	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999988570321293	WITHOUT_CLASSIFICATION	1.1429678707159055E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999753094835	WITHOUT_CLASSIFICATION	2.469051656551553E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999918370215489	WITHOUT_CLASSIFICATION	8.162978451108758E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999927033930093	WITHOUT_CLASSIFICATION	7.296606990701925E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999927033930093	WITHOUT_CLASSIFICATION	7.296606990701925E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999982894719373	WITHOUT_CLASSIFICATION	1.7105280627376741E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999989623815688	WITHOUT_CLASSIFICATION	1.0376184311042595E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999989623815688	WITHOUT_CLASSIFICATION	1.0376184311042595E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999978885022531	WITHOUT_CLASSIFICATION	2.111497746848287E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999968162714103	WITHOUT_CLASSIFICATION	3.1837285897185825E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999963975779	WITHOUT_CLASSIFICATION	3.602422153650607E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999998856058301	WITHOUT_CLASSIFICATION	1.1439417004040485E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999991573816714	WITHOUT_CLASSIFICATION	8.426183285916032E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999959833193	WITHOUT_CLASSIFICATION	4.016680602127426E-9	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999996453887372	WITHOUT_CLASSIFICATION	3.546112628117279E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999969660706	WITHOUT_CLASSIFICATION	3.033929430540335E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999992691631644	WITHOUT_CLASSIFICATION	7.308368357073667E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983600739	WITHOUT_CLASSIFICATION	1.6399259927732887E-9	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999985471174723	WITHOUT_CLASSIFICATION	1.45288252777604E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999981270897762	WITHOUT_CLASSIFICATION	1.8729102238441996E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999888638601	WITHOUT_CLASSIFICATION	1.1136139751287193E-8	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999984062941901	WITHOUT_CLASSIFICATION	1.5937058098589535E-6	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999725984003	WITHOUT_CLASSIFICATION	2.7401599681885588E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999999829810026	WITHOUT_CLASSIFICATION	1.7018997380800768E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999985688051699	WITHOUT_CLASSIFICATION	1.4311948300932745E-6	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999999388243112	WITHOUT_CLASSIFICATION	6.117568883284667E-8	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999900654068354	WITHOUT_CLASSIFICATION	9.934593164473067E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999994043044368	WITHOUT_CLASSIFICATION	5.95695563168333E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.999998870282331	WITHOUT_CLASSIFICATION	1.1297176689546003E-6	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9958074226712242	WITHOUT_CLASSIFICATION	0.004192577328775698	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999272976356	WITHOUT_CLASSIFICATION	7.270236436026675E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999851499021934	WITHOUT_CLASSIFICATION	1.4850097806537448E-5	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999727121332853	WITHOUT_CLASSIFICATION	2.7287866714709654E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999994774617104	WITHOUT_CLASSIFICATION	5.225382897397824E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.99994858012949	WITHOUT_CLASSIFICATION	5.141987050998571E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999970027091477	WITHOUT_CLASSIFICATION	2.9972908522464073E-6	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999984678259305	WITHOUT_CLASSIFICATION	1.5321740694729347E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999991748715404	WITHOUT_CLASSIFICATION	8.25128459524088E-7	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999998251075176	WITHOUT_CLASSIFICATION	1.7489248229297017E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999999712007175	WITHOUT_CLASSIFICATION	2.8799282625283496E-8	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9996798401549724	WITHOUT_CLASSIFICATION	3.201598450276834E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999999943266158	WITHOUT_CLASSIFICATION	5.673384185031087E-9	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999821753289	WITHOUT_CLASSIFICATION	1.7824671002365614E-8	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999994025147753	WITHOUT_CLASSIFICATION	5.97485224777412E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999821753289	WITHOUT_CLASSIFICATION	1.7824671002365614E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999562089756	WITHOUT_CLASSIFICATION	4.3791024331876574E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996756645331	WITHOUT_CLASSIFICATION	3.243354670069375E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999752865691	WITHOUT_CLASSIFICATION	2.471343090336565E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999325571237	WITHOUT_CLASSIFICATION	6.744287628956337E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998331893348	WITHOUT_CLASSIFICATION	1.6681066505816117E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998825622071	WITHOUT_CLASSIFICATION	1.1743779289455055E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993364605911	WITHOUT_CLASSIFICATION	6.635394089560676E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983600739	WITHOUT_CLASSIFICATION	1.6399259927732887E-9	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996445944973	WITHOUT_CLASSIFICATION	3.554055026483535E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996445944973	WITHOUT_CLASSIFICATION	3.554055026483535E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999397037383	WITHOUT_CLASSIFICATION	6.029626166442415E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999397037383	WITHOUT_CLASSIFICATION	6.029626166442415E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999397037383	WITHOUT_CLASSIFICATION	6.029626166442415E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.99999993673152	WITHOUT_CLASSIFICATION	6.326848009589346E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.99999993673152	WITHOUT_CLASSIFICATION	6.326848009589346E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999986007610061	WITHOUT_CLASSIFICATION	1.3992389938588624E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999986007610061	WITHOUT_CLASSIFICATION	1.3992389938588624E-6	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999966680950283	WITHOUT_CLASSIFICATION	3.331904971674364E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999999383516808	WITHOUT_CLASSIFICATION	6.164831926656856E-8	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999999383516808	WITHOUT_CLASSIFICATION	6.164831926656856E-8	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999985719575127	WITHOUT_CLASSIFICATION	1.4280424871996408E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999717851894628	WITHOUT_CLASSIFICATION	2.821481053714395E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999717851894628	WITHOUT_CLASSIFICATION	2.821481053714395E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9987851685232746	WITHOUT_CLASSIFICATION	0.0012148314767253135	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9987851685232746	WITHOUT_CLASSIFICATION	0.0012148314767253135	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9987851685232746	WITHOUT_CLASSIFICATION	0.0012148314767253135	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999972061248674	WITHOUT_CLASSIFICATION	2.7938751325808423E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.999342917448465	WITHOUT_CLASSIFICATION	6.570825515350186E-4	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999951463354867	WITHOUT_CLASSIFICATION	4.853664513267409E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999272124093	WITHOUT_CLASSIFICATION	7.278759074318338E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999272124093	WITHOUT_CLASSIFICATION	7.278759074318338E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999999540619456	WITHOUT_CLASSIFICATION	4.593805445781973E-8	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999978885022531	WITHOUT_CLASSIFICATION	2.111497746848287E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999994774617104	WITHOUT_CLASSIFICATION	5.225382897397824E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999994774617104	WITHOUT_CLASSIFICATION	5.225382897397824E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996756645331	WITHOUT_CLASSIFICATION	3.243354670069375E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983600739	WITHOUT_CLASSIFICATION	1.6399259927732887E-9	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999972061248674	WITHOUT_CLASSIFICATION	2.7938751325808423E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999972061248674	WITHOUT_CLASSIFICATION	2.7938751325808423E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999920523208443	WITHOUT_CLASSIFICATION	7.947679155640106E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999998899969631	WITHOUT_CLASSIFICATION	1.1000303691165436E-7	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999999799076285	WITHOUT_CLASSIFICATION	2.009237158772943E-8	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999991936235917	WITHOUT_CLASSIFICATION	8.06376408390461E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999999627490447	WITHOUT_CLASSIFICATION	3.72509551977745E-8	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999994973971388	WITHOUT_CLASSIFICATION	5.026028612729229E-7	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999929928220617	WITHOUT_CLASSIFICATION	7.007177938331519E-6	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999964132137	WITHOUT_CLASSIFICATION	3.5867862728130038E-9	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999999645438516	WITHOUT_CLASSIFICATION	3.5456148260907434E-8	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.999998374833736	WITHOUT_CLASSIFICATION	1.6251662640374824E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999974743446948	WITHOUT_CLASSIFICATION	2.525655305293045E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999996216531409	WITHOUT_CLASSIFICATION	3.7834685907011176E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999991963601387	WITHOUT_CLASSIFICATION	8.036398613844024E-7	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999993645830726	WITHOUT_CLASSIFICATION	6.354169273722624E-7	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999391159565933	WITHOUT_CLASSIFICATION	6.0884043406595885E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999915911070696	WITHOUT_CLASSIFICATION	8.408892930416336E-6	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999985438627205	WITHOUT_CLASSIFICATION	1.45613727958602E-6	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9997236855456001	WITHOUT_CLASSIFICATION	2.7631445439992285E-4	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999962826319971	WITHOUT_CLASSIFICATION	3.717368002762326E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999998643114199	WITHOUT_CLASSIFICATION	1.3568858014144254E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9997121210264285	WITHOUT_CLASSIFICATION	2.8787897357152097E-4	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999881850943415	WITHOUT_CLASSIFICATION	1.1814905658454045E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999969660706	WITHOUT_CLASSIFICATION	3.033929430540335E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999969660706	WITHOUT_CLASSIFICATION	3.033929430540335E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999753094835	WITHOUT_CLASSIFICATION	2.469051656551553E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999562089756	WITHOUT_CLASSIFICATION	4.3791024331876574E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999325571237	WITHOUT_CLASSIFICATION	6.744287628956337E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998331893348	WITHOUT_CLASSIFICATION	1.6681066505816117E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998331893348	WITHOUT_CLASSIFICATION	1.6681066505816117E-7	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999617480704237	WITHOUT_CLASSIFICATION	3.825192957629838E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999910228099981	WITHOUT_CLASSIFICATION	8.977190001926336E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.99999987916731	WITHOUT_CLASSIFICATION	1.208326898987611E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999997854107853	WITHOUT_CLASSIFICATION	2.1458921466992204E-7	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.999999292279563	WITHOUT_CLASSIFICATION	7.077204370558847E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999961043533	WITHOUT_CLASSIFICATION	3.89564666649683E-9	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999987746444136	WITHOUT_CLASSIFICATION	1.2253555865324485E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999998393538546	WITHOUT_CLASSIFICATION	1.6064614540517804E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999350180915116	WITHOUT_CLASSIFICATION	6.498190848841895E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999995383013788	WITHOUT_CLASSIFICATION	4.616986212706252E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999995590483538	WITHOUT_CLASSIFICATION	4.4095164621621075E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999992779436788	WITHOUT_CLASSIFICATION	7.22056321157137E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999993029331296	WITHOUT_CLASSIFICATION	6.970668704841189E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999999392300251	WITHOUT_CLASSIFICATION	6.076997492244811E-8	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999996105877077	WITHOUT_CLASSIFICATION	3.8941229225313325E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999986497266	WITHOUT_CLASSIFICATION	1.3502734828709364E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999998794274912	WITHOUT_CLASSIFICATION	1.205725087543647E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999973040218848	WITHOUT_CLASSIFICATION	2.6959781151853575E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999998769288838	WITHOUT_CLASSIFICATION	1.2307111621755028E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999999299898339	WITHOUT_CLASSIFICATION	7.001016606349642E-8	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999988541899588	WITHOUT_CLASSIFICATION	1.1458100411550752E-6	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999993960349058	WITHOUT_CLASSIFICATION	6.03965094134732E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999986497266	WITHOUT_CLASSIFICATION	1.3502734828709364E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999971867084846	WITHOUT_CLASSIFICATION	2.8132915154687875E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999997207867323	WITHOUT_CLASSIFICATION	2.792132676877957E-7	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999998140546134	WITHOUT_CLASSIFICATION	1.8594538661016896E-7	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999706072937551	WITHOUT_CLASSIFICATION	2.9392706244876765E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999637530659	WITHOUT_CLASSIFICATION	3.624693423439253E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999994025147753	WITHOUT_CLASSIFICATION	5.97485224777412E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999997207867323	WITHOUT_CLASSIFICATION	2.792132676877957E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999832815104651	WITHOUT_CLASSIFICATION	1.6718489534958195E-5	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990906392875	WITHOUT_CLASSIFICATION	9.093607124876218E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9741502182966801	WITHOUT_CLASSIFICATION	0.02584978170331986	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999992855668391	WITHOUT_CLASSIFICATION	7.144331608045748E-7	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999948162146065	WITHOUT_CLASSIFICATION	5.183785393473676E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999342347082096	WITHOUT_CLASSIFICATION	6.576529179038587E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999342347082096	WITHOUT_CLASSIFICATION	6.576529179038587E-5	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999999644226331	WITHOUT_CLASSIFICATION	3.55773670100318E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999863572194	WITHOUT_CLASSIFICATION	1.3642780456498459E-8	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.999999997530733	WITHOUT_CLASSIFICATION	2.4692671001612005E-9	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9028764210968273	WITHOUT_CLASSIFICATION	0.09712357890317264	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999600545558	WITHOUT_CLASSIFICATION	3.9945444133345353E-8	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999981575127069	WITHOUT_CLASSIFICATION	1.842487293085308E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999981575127069	WITHOUT_CLASSIFICATION	1.842487293085308E-6	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999998958234966	WITHOUT_CLASSIFICATION	1.04176503380368E-7	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999989650960623	WITHOUT_CLASSIFICATION	1.0349039375630654E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999375034632978	WITHOUT_CLASSIFICATION	6.249653670226835E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9993789851355043	WITHOUT_CLASSIFICATION	6.210148644957621E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999972799027013	WITHOUT_CLASSIFICATION	2.7200972988049263E-6	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999986270443683	WITHOUT_CLASSIFICATION	1.3729556316820327E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999914080160344	WITHOUT_CLASSIFICATION	8.591983965596256E-6	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999958717906354	WITHOUT_CLASSIFICATION	4.128209364543243E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999917061549295	WITHOUT_CLASSIFICATION	8.293845070629425E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999643053982219	WITHOUT_CLASSIFICATION	3.569460177813648E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999643053982219	WITHOUT_CLASSIFICATION	3.569460177813648E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999916682919191	WITHOUT_CLASSIFICATION	8.33170808084201E-6	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999998857677183	WITHOUT_CLASSIFICATION	1.142322817611254E-7	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999993110023718	WITHOUT_CLASSIFICATION	6.889976281242473E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999952847164	WITHOUT_CLASSIFICATION	4.715283705921271E-9	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999995052969216	WITHOUT_CLASSIFICATION	4.94703078288495E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999996206020874	WITHOUT_CLASSIFICATION	3.7939791267136956E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999991323911921	WITHOUT_CLASSIFICATION	8.676088079778452E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999981147482104	WITHOUT_CLASSIFICATION	1.8852517895862638E-6	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.999999965318866	WITHOUT_CLASSIFICATION	3.468113397367985E-8	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999752278075275	WITHOUT_CLASSIFICATION	2.4772192472541173E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999752278075275	WITHOUT_CLASSIFICATION	2.4772192472541173E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999999960011162	WITHOUT_CLASSIFICATION	3.998883748429001E-9	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.999970670696985	WITHOUT_CLASSIFICATION	2.9329303015124334E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.999879256924794	WITHOUT_CLASSIFICATION	1.2074307520598434E-4	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999999199848703	WITHOUT_CLASSIFICATION	8.001512966654E-8	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999998567717577	WITHOUT_CLASSIFICATION	1.432282421779097E-7	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999245475182004	WITHOUT_CLASSIFICATION	7.545248179958881E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9999794065777936	WITHOUT_CLASSIFICATION	2.0593422206349307E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.99999995936738	WITHOUT_CLASSIFICATION	4.063262011855608E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999999277833347	WITHOUT_CLASSIFICATION	7.221666534368044E-8	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999876510874	WITHOUT_CLASSIFICATION	1.2348912588120643E-8	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999353495437892	WITHOUT_CLASSIFICATION	6.465045621081713E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999999844893813	WITHOUT_CLASSIFICATION	1.5510618656052346E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999998991271987	WITHOUT_CLASSIFICATION	1.0087280127005855E-7	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999896645367221	WITHOUT_CLASSIFICATION	1.0335463277877752E-5	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999999600558	WITHOUT_CLASSIFICATION	3.9944172003729484E-11	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999157013663	WITHOUT_CLASSIFICATION	8.429863371340688E-8	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999963793986136	WITHOUT_CLASSIFICATION	3.6206013864195518E-6	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999981068232466	WITHOUT_CLASSIFICATION	1.8931767534766949E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999983982099262	WITHOUT_CLASSIFICATION	1.6017900737690913E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999843679533277	WITHOUT_CLASSIFICATION	1.5632046672267602E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.999746633791602	WITHOUT_CLASSIFICATION	2.533662083980822E-4	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999991084752093	WITHOUT_CLASSIFICATION	8.915247906026814E-7	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999926591532	WITHOUT_CLASSIFICATION	7.340846857101982E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999996196120517	WITHOUT_CLASSIFICATION	3.803879482506495E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999996196120517	WITHOUT_CLASSIFICATION	3.803879482506495E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999990939129249	WITHOUT_CLASSIFICATION	9.060870750166257E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999851499021934	WITHOUT_CLASSIFICATION	1.4850097806537448E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999914080160344	WITHOUT_CLASSIFICATION	8.591983965596256E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.999805493540578	WITHOUT_CLASSIFICATION	1.9450645942205473E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999998013796598	WITHOUT_CLASSIFICATION	1.986203402411964E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9926896777312652	WITHOUT_CLASSIFICATION	0.007310322268734819	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.996211288460635	WITHOUT_CLASSIFICATION	0.003788711539364975	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.5695172303992594	DEFECT	0.4304827696007407	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994986577703	WITHOUT_CLASSIFICATION	5.013422297141839E-7	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999984370641116	WITHOUT_CLASSIFICATION	1.562935888403857E-6	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999877802578889	WITHOUT_CLASSIFICATION	1.2219742111108574E-5	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999997598356993	WITHOUT_CLASSIFICATION	2.401643006775133E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999762055821358	WITHOUT_CLASSIFICATION	2.379441786410345E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999871806807571	WITHOUT_CLASSIFICATION	1.2819319242941943E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999952496201	WITHOUT_CLASSIFICATION	4.750379803166063E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999157013663	WITHOUT_CLASSIFICATION	8.429863371340688E-8	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999983417453371	WITHOUT_CLASSIFICATION	1.6582546629287713E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.999999287442767	WITHOUT_CLASSIFICATION	7.125572330546604E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999995956967416	WITHOUT_CLASSIFICATION	4.043032584592844E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9994589447371011	WITHOUT_CLASSIFICATION	5.410552628989338E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999830952325828	WITHOUT_CLASSIFICATION	1.6904767417247387E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999851499021934	WITHOUT_CLASSIFICATION	1.4850097806537448E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999919800629745	WITHOUT_CLASSIFICATION	8.01993702550761E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984507109356	WITHOUT_CLASSIFICATION	1.5492890643650624E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999940596542978	WITHOUT_CLASSIFICATION	5.940345702313168E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9741502182966801	WITHOUT_CLASSIFICATION	0.02584978170331986	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999991305078706	WITHOUT_CLASSIFICATION	8.694921294669393E-7	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976370323843	WITHOUT_CLASSIFICATION	2.3629676157744147E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999992635149962	WITHOUT_CLASSIFICATION	7.364850036216404E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999992635149962	WITHOUT_CLASSIFICATION	7.364850036216404E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999993824295038	WITHOUT_CLASSIFICATION	6.175704962261134E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999993824295038	WITHOUT_CLASSIFICATION	6.175704962261134E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999993824295038	WITHOUT_CLASSIFICATION	6.175704962261134E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999969474742514	WITHOUT_CLASSIFICATION	3.052525748700466E-6	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999999993355	WITHOUT_CLASSIFICATION	6.645368414769358E-13	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999999522388682	WITHOUT_CLASSIFICATION	4.776113187595041E-8	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999959941792897	WITHOUT_CLASSIFICATION	4.005820710333073E-6	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998863589448	WITHOUT_CLASSIFICATION	1.1364105513234267E-7	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.999999651162135	WITHOUT_CLASSIFICATION	3.4883786500972476E-7	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999993829737445	WITHOUT_CLASSIFICATION	6.170262556373056E-7	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999999615468921	WITHOUT_CLASSIFICATION	3.845310797904736E-8	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999977805921357	WITHOUT_CLASSIFICATION	2.2194078641962377E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999753094835	WITHOUT_CLASSIFICATION	2.469051656551553E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999272976356	WITHOUT_CLASSIFICATION	7.270236436026675E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999851499021934	WITHOUT_CLASSIFICATION	1.4850097806537448E-5	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999983417453371	WITHOUT_CLASSIFICATION	1.6582546629287713E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999995956967416	WITHOUT_CLASSIFICATION	4.043032584592844E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999603469495755	WITHOUT_CLASSIFICATION	3.9653050424555944E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9695363449532806	WITHOUT_CLASSIFICATION	0.030463655046719475	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.99999999897848	WITHOUT_CLASSIFICATION	1.0215198970998475E-9	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.99999999897848	WITHOUT_CLASSIFICATION	1.0215198970998475E-9	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999603469495755	WITHOUT_CLASSIFICATION	3.9653050424555944E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999927804137	WITHOUT_CLASSIFICATION	7.219586310742959E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999243890131	WITHOUT_CLASSIFICATION	7.56109869163709E-8	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999942945608	WITHOUT_CLASSIFICATION	5.705439194468915E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999998725172361	WITHOUT_CLASSIFICATION	1.2748276400350523E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999623126622	WITHOUT_CLASSIFICATION	3.7687337837767634E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.999999321210922	WITHOUT_CLASSIFICATION	6.787890779694248E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.999999985679658	WITHOUT_CLASSIFICATION	1.4320341987648915E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.999999985679658	WITHOUT_CLASSIFICATION	1.4320341987648915E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999992246234688	WITHOUT_CLASSIFICATION	7.753765313025027E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999999857112436	WITHOUT_CLASSIFICATION	1.4288756399860788E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999997973142238	WITHOUT_CLASSIFICATION	2.026857760358621E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999830952325828	WITHOUT_CLASSIFICATION	1.6904767417247387E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999753094835	WITHOUT_CLASSIFICATION	2.469051656551553E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999826925104498	WITHOUT_CLASSIFICATION	1.7307489550199565E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9741502182966801	WITHOUT_CLASSIFICATION	0.02584978170331986	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999342347082096	WITHOUT_CLASSIFICATION	6.576529179038587E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.999999287442767	WITHOUT_CLASSIFICATION	7.125572330546604E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999927804137	WITHOUT_CLASSIFICATION	7.219586310742959E-9	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999927804137	WITHOUT_CLASSIFICATION	7.219586310742959E-9	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999603469495755	WITHOUT_CLASSIFICATION	3.9653050424555944E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999942945608	WITHOUT_CLASSIFICATION	5.705439194468915E-9	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999243890131	WITHOUT_CLASSIFICATION	7.56109869163709E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999243890131	WITHOUT_CLASSIFICATION	7.56109869163709E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999623126622	WITHOUT_CLASSIFICATION	3.7687337837767634E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999623126622	WITHOUT_CLASSIFICATION	3.7687337837767634E-8	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999994733805181	WITHOUT_CLASSIFICATION	5.266194818718906E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999351374047455	WITHOUT_CLASSIFICATION	6.486259525456351E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999845685211	WITHOUT_CLASSIFICATION	1.5431478881851723E-8	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999950057137861	WITHOUT_CLASSIFICATION	4.994286213941152E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9970858567633278	WITHOUT_CLASSIFICATION	0.002914143236672096	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998997259418	WITHOUT_CLASSIFICATION	1.0027405811953805E-7	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999241351124876	WITHOUT_CLASSIFICATION	7.586488751248533E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998557915526	WITHOUT_CLASSIFICATION	1.442084473729195E-7	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998557915526	WITHOUT_CLASSIFICATION	1.442084473729195E-7	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999878094984089	WITHOUT_CLASSIFICATION	1.2190501591054235E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999916688256031	WITHOUT_CLASSIFICATION	8.33117439691451E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999993685430991	WITHOUT_CLASSIFICATION	6.31456900813339E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999661301131857	WITHOUT_CLASSIFICATION	3.386988681431141E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999981362344325	WITHOUT_CLASSIFICATION	1.8637655676282064E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999974989516	WITHOUT_CLASSIFICATION	2.5010482500484348E-9	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999716992949	WITHOUT_CLASSIFICATION	2.8300705141476166E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9269482877461191	WITHOUT_CLASSIFICATION	0.07305171225388087	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999735006868	WITHOUT_CLASSIFICATION	2.64993131235896E-8	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999999389069723	WITHOUT_CLASSIFICATION	6.109302770895749E-7	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.99997378218669	WITHOUT_CLASSIFICATION	2.6217813310022353E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999939610685	WITHOUT_CLASSIFICATION	6.038931465042611E-9	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999939610685	WITHOUT_CLASSIFICATION	6.038931465042611E-9	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999998789392366	WITHOUT_CLASSIFICATION	1.2106076342542914E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999863572194	WITHOUT_CLASSIFICATION	1.3642780456498459E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999272976356	WITHOUT_CLASSIFICATION	7.270236436026675E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999927804137	WITHOUT_CLASSIFICATION	7.219586310742959E-9	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999927804137	WITHOUT_CLASSIFICATION	7.219586310742959E-9	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999998964477436	WITHOUT_CLASSIFICATION	1.0355225635573153E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999998071309183	WITHOUT_CLASSIFICATION	1.9286908168730954E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999998071309183	WITHOUT_CLASSIFICATION	1.9286908168730954E-7	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9983271026933774	WITHOUT_CLASSIFICATION	0.0016728973066226342	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999993121205966	WITHOUT_CLASSIFICATION	6.878794034914678E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999993740499432	WITHOUT_CLASSIFICATION	6.259500566684851E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999997817482338	WITHOUT_CLASSIFICATION	2.1825176618379422E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999929259381	WITHOUT_CLASSIFICATION	7.074061890427753E-9	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999811598257644	WITHOUT_CLASSIFICATION	1.8840174235595694E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999811598257644	WITHOUT_CLASSIFICATION	1.8840174235595694E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999348839331	WITHOUT_CLASSIFICATION	6.511606687804722E-8	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999991872898545	WITHOUT_CLASSIFICATION	8.127101454733106E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.999999966985776	WITHOUT_CLASSIFICATION	3.301422395035144E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999990281395936	WITHOUT_CLASSIFICATION	9.718604064404064E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999999270802802	WITHOUT_CLASSIFICATION	7.291971986939057E-8	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999999836249436	WITHOUT_CLASSIFICATION	1.637505641224252E-8	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999992714419288	WITHOUT_CLASSIFICATION	7.285580712220053E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999884218894	WITHOUT_CLASSIFICATION	1.157811050428876E-8	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999493877152551	WITHOUT_CLASSIFICATION	5.061228474485923E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999993099942972	WITHOUT_CLASSIFICATION	6.900057028255006E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.999998231868827	WITHOUT_CLASSIFICATION	1.7681311730687742E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999998964477436	WITHOUT_CLASSIFICATION	1.0355225635573153E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999996497477831	WITHOUT_CLASSIFICATION	3.502522169642349E-7	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999837721184262	WITHOUT_CLASSIFICATION	1.6227881573889246E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999125321476835	WITHOUT_CLASSIFICATION	8.746785231655713E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999998793976664	WITHOUT_CLASSIFICATION	1.206023334661239E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999974205979318	WITHOUT_CLASSIFICATION	2.579402068119514E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999944725533484	WITHOUT_CLASSIFICATION	5.52744665159585E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999924759305	WITHOUT_CLASSIFICATION	7.524069441808094E-9	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999520828447472	WITHOUT_CLASSIFICATION	4.7917155252842736E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999612109829582	WITHOUT_CLASSIFICATION	3.878901704186797E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999302584721262	WITHOUT_CLASSIFICATION	6.974152787367296E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999720613943393	WITHOUT_CLASSIFICATION	2.793860566071299E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999773764603659	WITHOUT_CLASSIFICATION	2.2623539634176208E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999992016703526	WITHOUT_CLASSIFICATION	7.983296473590922E-7	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999770965638177	WITHOUT_CLASSIFICATION	2.2903436182289215E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999955400177798	WITHOUT_CLASSIFICATION	4.459982220212025E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9998855437387392	WITHOUT_CLASSIFICATION	1.1445626126082985E-4	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.999983323784807	WITHOUT_CLASSIFICATION	1.6676215192983225E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999997970017711	WITHOUT_CLASSIFICATION	2.0299822886809115E-7	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.999999681597809	WITHOUT_CLASSIFICATION	3.184021909405115E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999984780063449	WITHOUT_CLASSIFICATION	1.5219936551432241E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999920181405912	WITHOUT_CLASSIFICATION	7.98185940880508E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999946887150685	WITHOUT_CLASSIFICATION	5.311284931442446E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999768296820386	WITHOUT_CLASSIFICATION	2.317031796140849E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999961347693059	WITHOUT_CLASSIFICATION	3.86523069404852E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998180714558	WITHOUT_CLASSIFICATION	1.8192854424869306E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998487181716	WITHOUT_CLASSIFICATION	1.5128182829917122E-7	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999976892154998	WITHOUT_CLASSIFICATION	2.3107845001690602E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998936808181189	WITHOUT_CLASSIFICATION	1.063191818809732E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999915594046592	WITHOUT_CLASSIFICATION	8.440595340815524E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999768296820386	WITHOUT_CLASSIFICATION	2.317031796140849E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998180714558	WITHOUT_CLASSIFICATION	1.8192854424869306E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998180714558	WITHOUT_CLASSIFICATION	1.8192854424869306E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998487181716	WITHOUT_CLASSIFICATION	1.5128182829917122E-7	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999999305022721	WITHOUT_CLASSIFICATION	6.9497727996481E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998262603673	WITHOUT_CLASSIFICATION	1.737396325362171E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998262603673	WITHOUT_CLASSIFICATION	1.737396325362171E-7	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999991372703784	WITHOUT_CLASSIFICATION	8.627296216487228E-7	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999734738448222	WITHOUT_CLASSIFICATION	2.652615517789823E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999734738448222	WITHOUT_CLASSIFICATION	2.652615517789823E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999999053542625	WITHOUT_CLASSIFICATION	9.464573741670852E-8	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999999110342829	WITHOUT_CLASSIFICATION	8.896571720029171E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999349552579	WITHOUT_CLASSIFICATION	6.504474211471169E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999349552579	WITHOUT_CLASSIFICATION	6.504474211471169E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999987987131892	WITHOUT_CLASSIFICATION	1.2012868108229762E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999972310956527	WITHOUT_CLASSIFICATION	2.768904347208504E-6	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999996925687021	WITHOUT_CLASSIFICATION	3.0743129780636503E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999992469597295	WITHOUT_CLASSIFICATION	7.530402703691536E-7	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999971656932666	WITHOUT_CLASSIFICATION	2.8343067334374534E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999965521097612	WITHOUT_CLASSIFICATION	3.447890238726841E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999985430157288	WITHOUT_CLASSIFICATION	1.4569842713040096E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999990782093647	WITHOUT_CLASSIFICATION	9.217906352312312E-7	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999928480079803	WITHOUT_CLASSIFICATION	7.151992019742674E-6	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999998811524367	WITHOUT_CLASSIFICATION	1.1884756331995723E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9997259206665372	WITHOUT_CLASSIFICATION	2.740793334627189E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999635634420796	WITHOUT_CLASSIFICATION	3.6436557920410095E-5	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999381967631049	WITHOUT_CLASSIFICATION	6.180323689510021E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999672652705833	WITHOUT_CLASSIFICATION	3.273472941671472E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999982553681404	WITHOUT_CLASSIFICATION	1.7446318596768092E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.999980818672238	WITHOUT_CLASSIFICATION	1.9181327761970086E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999999601938903	WITHOUT_CLASSIFICATION	3.980610977839507E-8	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999833852333789	WITHOUT_CLASSIFICATION	1.6614766621030207E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999990756889359	WITHOUT_CLASSIFICATION	9.243110641198238E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999509804273111	WITHOUT_CLASSIFICATION	4.901957268880415E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999773764603659	WITHOUT_CLASSIFICATION	2.2623539634176208E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999983223177185	WITHOUT_CLASSIFICATION	1.6776822815623386E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999999248949415	WITHOUT_CLASSIFICATION	7.510505846351016E-8	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999998553854743	WITHOUT_CLASSIFICATION	1.4461452567085488E-7	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999969147426748	WITHOUT_CLASSIFICATION	3.085257325174387E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999929709248021	WITHOUT_CLASSIFICATION	7.029075197944556E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999997937521475	WITHOUT_CLASSIFICATION	2.0624785241569177E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999999492601325	WITHOUT_CLASSIFICATION	5.0739867583562446E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999996849798669	WITHOUT_CLASSIFICATION	3.1502013304150766E-7	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999858073471	WITHOUT_CLASSIFICATION	1.4192652905854105E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999968538207307	WITHOUT_CLASSIFICATION	3.146179269280428E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999998157084365	WITHOUT_CLASSIFICATION	1.8429156339862635E-7	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999992116257337	WITHOUT_CLASSIFICATION	7.883742663687365E-7	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999970236885363	WITHOUT_CLASSIFICATION	2.9763114636959777E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999954616937817	WITHOUT_CLASSIFICATION	4.5383062182576595E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999999325165474	WITHOUT_CLASSIFICATION	6.748345251156184E-8	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999986856759434	WITHOUT_CLASSIFICATION	1.3143240564934815E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999002293672031	WITHOUT_CLASSIFICATION	9.977063279690395E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999996085058375	WITHOUT_CLASSIFICATION	3.9149416263088616E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999978837524852	WITHOUT_CLASSIFICATION	2.116247514897442E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999891653817817	WITHOUT_CLASSIFICATION	1.0834618218300757E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999998214047066	WITHOUT_CLASSIFICATION	1.78595293505578E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999999360887879	WITHOUT_CLASSIFICATION	6.39112120515933E-8	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999885898242186	WITHOUT_CLASSIFICATION	1.1410175781313975E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999991863272315	WITHOUT_CLASSIFICATION	8.13672768554341E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999899893803988	WITHOUT_CLASSIFICATION	1.0010619601139461E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999978251674774	WITHOUT_CLASSIFICATION	2.1748325225734035E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999992442144287	WITHOUT_CLASSIFICATION	7.557855712718508E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999990587998207	WITHOUT_CLASSIFICATION	9.412001792994618E-7	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999993383426	WITHOUT_CLASSIFICATION	6.616574238520538E-10	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999993099942972	WITHOUT_CLASSIFICATION	6.900057028255006E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999993099942972	WITHOUT_CLASSIFICATION	6.900057028255006E-7	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999941943384775	WITHOUT_CLASSIFICATION	5.80566152250979E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999999035465	WITHOUT_CLASSIFICATION	9.645349479366121E-11	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999951484411	WITHOUT_CLASSIFICATION	4.851558960121787E-9	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999993318127963	WITHOUT_CLASSIFICATION	6.681872037589141E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999978089639987	WITHOUT_CLASSIFICATION	2.191036001256518E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999263478679	WITHOUT_CLASSIFICATION	7.365213200221827E-8	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999999401684834	WITHOUT_CLASSIFICATION	5.983151660596151E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999994138234033	WITHOUT_CLASSIFICATION	5.861765967760393E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992761818444	WITHOUT_CLASSIFICATION	7.238181557023674E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999263478679	WITHOUT_CLASSIFICATION	7.365213200221827E-8	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999983856612499	WITHOUT_CLASSIFICATION	1.6143387500888626E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999263478679	WITHOUT_CLASSIFICATION	7.365213200221827E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999263478679	WITHOUT_CLASSIFICATION	7.365213200221827E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999263478679	WITHOUT_CLASSIFICATION	7.365213200221827E-8	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999142790539	WITHOUT_CLASSIFICATION	8.572094603690269E-8	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999982504830195	WITHOUT_CLASSIFICATION	1.749516980510243E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999950958102789	WITHOUT_CLASSIFICATION	4.9041897210349595E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999950958102789	WITHOUT_CLASSIFICATION	4.9041897210349595E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999982504830195	WITHOUT_CLASSIFICATION	1.749516980510243E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999982504830195	WITHOUT_CLASSIFICATION	1.749516980510243E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999982504830195	WITHOUT_CLASSIFICATION	1.749516980510243E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999982504830195	WITHOUT_CLASSIFICATION	1.749516980510243E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999982504830195	WITHOUT_CLASSIFICATION	1.749516980510243E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999989788887051	WITHOUT_CLASSIFICATION	1.0211112948901347E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999989788887051	WITHOUT_CLASSIFICATION	1.0211112948901347E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999989788887051	WITHOUT_CLASSIFICATION	1.0211112948901347E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999989788887051	WITHOUT_CLASSIFICATION	1.0211112948901347E-5	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9999155715056592	WITHOUT_CLASSIFICATION	8.442849434066316E-5	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999734536935382	WITHOUT_CLASSIFICATION	2.6546306461826012E-5	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999987994412614	WITHOUT_CLASSIFICATION	1.2005587386331417E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999973338123466	WITHOUT_CLASSIFICATION	2.6661876534082805E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999981556719418	WITHOUT_CLASSIFICATION	1.8443280581067003E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999937905294002	WITHOUT_CLASSIFICATION	6.209470599733678E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999973478681289	WITHOUT_CLASSIFICATION	2.652131871103179E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999984057663875	WITHOUT_CLASSIFICATION	1.5942336125339222E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999920394210406	WITHOUT_CLASSIFICATION	7.960578959396995E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.999980360657529	WITHOUT_CLASSIFICATION	1.963934247090433E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999960926090745	WITHOUT_CLASSIFICATION	3.907390925482927E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.999999307510332	WITHOUT_CLASSIFICATION	6.924896680658364E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999932192582982	WITHOUT_CLASSIFICATION	6.780741701778707E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999952759791124	WITHOUT_CLASSIFICATION	4.724020887496438E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999986551643448	WITHOUT_CLASSIFICATION	1.3448356551254118E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999992768979454	WITHOUT_CLASSIFICATION	7.231020546023309E-7	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.999999587224518	WITHOUT_CLASSIFICATION	4.127754819626766E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999902431208515	WITHOUT_CLASSIFICATION	9.756879148517097E-6	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999960506632808	WITHOUT_CLASSIFICATION	3.949336719222639E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999983860809594	WITHOUT_CLASSIFICATION	1.6139190407007857E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999940181488898	WITHOUT_CLASSIFICATION	5.981851110186355E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999996156210705	WITHOUT_CLASSIFICATION	3.843789294865485E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.999978554420949	WITHOUT_CLASSIFICATION	2.144557905107279E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999906013377027	WITHOUT_CLASSIFICATION	9.39866229736094E-6	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999597995899111	WITHOUT_CLASSIFICATION	4.020041008897251E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999989258304345	WITHOUT_CLASSIFICATION	1.0741695655278223E-6	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999998580950085	WITHOUT_CLASSIFICATION	1.4190499153611774E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999998580950085	WITHOUT_CLASSIFICATION	1.4190499153611774E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999998291192023	WITHOUT_CLASSIFICATION	1.708807977354421E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999978879543874	WITHOUT_CLASSIFICATION	2.1120456126271717E-6	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999978879543874	WITHOUT_CLASSIFICATION	2.1120456126271717E-6	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999995377785025	WITHOUT_CLASSIFICATION	4.6222149749876116E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9996984941362768	WITHOUT_CLASSIFICATION	3.0150586372319836E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9996984941362768	WITHOUT_CLASSIFICATION	3.0150586372319836E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999950317337167	WITHOUT_CLASSIFICATION	4.9682662832663945E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999950317337167	WITHOUT_CLASSIFICATION	4.9682662832663945E-6	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998512043656	WITHOUT_CLASSIFICATION	1.4879563442310606E-7	DEFECT
// text	WITHOUT_CLASSIFICATION	0.99998549779384	WITHOUT_CLASSIFICATION	1.4502206160013048E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.99998549779384	WITHOUT_CLASSIFICATION	1.4502206160013048E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999837272070756	WITHOUT_CLASSIFICATION	1.62727929244131E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999984295009907	WITHOUT_CLASSIFICATION	1.5704990092930596E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999938801529442	WITHOUT_CLASSIFICATION	6.11984705581565E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999980678574325	WITHOUT_CLASSIFICATION	1.932142567524479E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999969978310522	WITHOUT_CLASSIFICATION	3.0021689479061672E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999986860687979	WITHOUT_CLASSIFICATION	1.3139312020210832E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999965365016844	WITHOUT_CLASSIFICATION	3.4634983156100123E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999976792569899	WITHOUT_CLASSIFICATION	2.3207430100170673E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999966094038241	WITHOUT_CLASSIFICATION	3.390596175898696E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999953708044219	WITHOUT_CLASSIFICATION	4.629195578028412E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999939797388467	WITHOUT_CLASSIFICATION	6.020261153236777E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999912929345788	WITHOUT_CLASSIFICATION	8.707065421189789E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999824258900788	WITHOUT_CLASSIFICATION	1.757410992118701E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999993318127963	WITHOUT_CLASSIFICATION	6.681872037589141E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999824258900788	WITHOUT_CLASSIFICATION	1.757410992118701E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999976498287118	WITHOUT_CLASSIFICATION	2.3501712881681733E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999985963607358	WITHOUT_CLASSIFICATION	1.4036392641990023E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999974715410108	WITHOUT_CLASSIFICATION	2.5284589891328772E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999914723358769	WITHOUT_CLASSIFICATION	8.527664123041659E-6	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999931171448375	WITHOUT_CLASSIFICATION	6.882855162368336E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999948627218521	WITHOUT_CLASSIFICATION	5.13727814785311E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999994199300797	WITHOUT_CLASSIFICATION	5.800699204113788E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994250486761	WITHOUT_CLASSIFICATION	5.749513238582139E-7	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.999929852026472	WITHOUT_CLASSIFICATION	7.014797352800469E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999993580566299	WITHOUT_CLASSIFICATION	6.419433701327345E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999994367052217	WITHOUT_CLASSIFICATION	5.632947782678747E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999980811978141	WITHOUT_CLASSIFICATION	1.9188021858939314E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999993404536357	WITHOUT_CLASSIFICATION	6.595463642488328E-7	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999984702304008	WITHOUT_CLASSIFICATION	1.529769599145825E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999984702304008	WITHOUT_CLASSIFICATION	1.529769599145825E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999980693744001	WITHOUT_CLASSIFICATION	1.930625600011318E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999976414546106	WITHOUT_CLASSIFICATION	2.358545389424096E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999976414546106	WITHOUT_CLASSIFICATION	2.358545389424096E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999980693744001	WITHOUT_CLASSIFICATION	1.930625600011318E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999986551643448	WITHOUT_CLASSIFICATION	1.3448356551254118E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999974134074887	WITHOUT_CLASSIFICATION	2.586592511313206E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999999022369219	WITHOUT_CLASSIFICATION	9.776307817477451E-8	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9997361763290977	WITHOUT_CLASSIFICATION	2.638236709023213E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999989219025546	WITHOUT_CLASSIFICATION	1.0780974454388658E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999994829018265	WITHOUT_CLASSIFICATION	5.170981734056632E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999990837361173	WITHOUT_CLASSIFICATION	9.162638826943204E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999986666233015	WITHOUT_CLASSIFICATION	1.3333766984937378E-6	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999988844096146	WITHOUT_CLASSIFICATION	1.1155903853214445E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999969836272673	WITHOUT_CLASSIFICATION	3.016372732683053E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999985810022438	WITHOUT_CLASSIFICATION	1.4189977561781715E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993475045671	WITHOUT_CLASSIFICATION	6.524954328970521E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999966521320138	WITHOUT_CLASSIFICATION	3.347867986222178E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998943142374	WITHOUT_CLASSIFICATION	1.0568576247210275E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998943142374	WITHOUT_CLASSIFICATION	1.0568576247210275E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999987242578856	WITHOUT_CLASSIFICATION	1.2757421143812826E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999987242578856	WITHOUT_CLASSIFICATION	1.2757421143812826E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999983522763607	WITHOUT_CLASSIFICATION	1.6477236392084283E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999996687837989	WITHOUT_CLASSIFICATION	3.3121620106094255E-7	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999985629924861	WITHOUT_CLASSIFICATION	1.4370075137857247E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999996944210122	WITHOUT_CLASSIFICATION	3.055789877905864E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.999999839625382	WITHOUT_CLASSIFICATION	1.6037461803718114E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.999999819493926	WITHOUT_CLASSIFICATION	1.8050607396680165E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999969836272673	WITHOUT_CLASSIFICATION	3.016372732683053E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999985810022438	WITHOUT_CLASSIFICATION	1.4189977561781715E-6	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993475045671	WITHOUT_CLASSIFICATION	6.524954328970521E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999974339341461	WITHOUT_CLASSIFICATION	2.5660658538402423E-6	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.99999995603655	WITHOUT_CLASSIFICATION	4.396344995936585E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999995687813338	WITHOUT_CLASSIFICATION	4.312186662864958E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999995361108934	WITHOUT_CLASSIFICATION	4.6388910654195793E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999992508318738	WITHOUT_CLASSIFICATION	7.491681263353015E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999939010495226	WITHOUT_CLASSIFICATION	6.098950477495334E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999976805315496	WITHOUT_CLASSIFICATION	2.319468450497446E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999960456188276	WITHOUT_CLASSIFICATION	3.954381172419228E-6	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999999233090315	WITHOUT_CLASSIFICATION	7.66909684227097E-8	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999973141597117	WITHOUT_CLASSIFICATION	2.685840288216998E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999907414896325	WITHOUT_CLASSIFICATION	9.25851036743593E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999998131703329	WITHOUT_CLASSIFICATION	1.8682966705573556E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999938484985622	WITHOUT_CLASSIFICATION	6.151501437789095E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998991162679932	WITHOUT_CLASSIFICATION	1.0088373200670782E-4	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.999997438037494	WITHOUT_CLASSIFICATION	2.5619625060589987E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.999944962387841	WITHOUT_CLASSIFICATION	5.503761215904201E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999999251576978	WITHOUT_CLASSIFICATION	7.484230219470723E-8	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999999251576978	WITHOUT_CLASSIFICATION	7.484230219470723E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992252020322	WITHOUT_CLASSIFICATION	7.747979678133902E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999990688011325	WITHOUT_CLASSIFICATION	9.311988673049861E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9997189901495235	WITHOUT_CLASSIFICATION	2.8100985047652073E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999521520805806	WITHOUT_CLASSIFICATION	4.784791941932838E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999559216798668	WITHOUT_CLASSIFICATION	4.4078320133255477E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988235847624	WITHOUT_CLASSIFICATION	1.1764152375528779E-6	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999982043623686	WITHOUT_CLASSIFICATION	1.7956376313863159E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999995909806068	WITHOUT_CLASSIFICATION	4.090193932595353E-7	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999988559243164	WITHOUT_CLASSIFICATION	1.1440756836445181E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999981828391775	WITHOUT_CLASSIFICATION	1.817160822413781E-6	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.999999938221164	WITHOUT_CLASSIFICATION	6.177883600899607E-8	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999959659172485	WITHOUT_CLASSIFICATION	4.0340827515134085E-6	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999975703526773	WITHOUT_CLASSIFICATION	2.429647322630597E-6	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999935765638791	WITHOUT_CLASSIFICATION	6.4234361208251845E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.999983985583678	WITHOUT_CLASSIFICATION	1.601441632201546E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999988620038723	WITHOUT_CLASSIFICATION	1.1379961277050007E-6	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999998779803267	WITHOUT_CLASSIFICATION	1.2201967317163752E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999999541589877	WITHOUT_CLASSIFICATION	4.584101224735356E-8	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.999999898811294	WITHOUT_CLASSIFICATION	1.0118870595467688E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999999724645049	WITHOUT_CLASSIFICATION	2.7535495095659577E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999962774386537	WITHOUT_CLASSIFICATION	3.7225613463583E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999144290947889	WITHOUT_CLASSIFICATION	8.55709052111035E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999981008541664	WITHOUT_CLASSIFICATION	1.8991458335505918E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999963933301	WITHOUT_CLASSIFICATION	3.6066697797127613E-9	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999493985925	WITHOUT_CLASSIFICATION	5.060140741896606E-8	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999988371596743	WITHOUT_CLASSIFICATION	1.1628403256316295E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999927057762329	WITHOUT_CLASSIFICATION	7.294223767138618E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999983092473173	WITHOUT_CLASSIFICATION	1.6907526827657494E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999081613926378	WITHOUT_CLASSIFICATION	9.183860736217555E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999983522763607	WITHOUT_CLASSIFICATION	1.6477236392084283E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999996687837989	WITHOUT_CLASSIFICATION	3.3121620106094255E-7	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.999999977001072	WITHOUT_CLASSIFICATION	2.2998927902563553E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996242299051	WITHOUT_CLASSIFICATION	3.75770094913623E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999661485711	WITHOUT_CLASSIFICATION	3.385142885075822E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999990604092748	WITHOUT_CLASSIFICATION	9.395907251952268E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999999389920093	WITHOUT_CLASSIFICATION	6.100799065608728E-8	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999998331306608	WITHOUT_CLASSIFICATION	1.6686933927313773E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999999544323739	WITHOUT_CLASSIFICATION	4.556762621560752E-8	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999998804212269	WITHOUT_CLASSIFICATION	1.195787731631768E-7	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999895138894576	WITHOUT_CLASSIFICATION	1.0486110542320712E-5	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999838674997371	WITHOUT_CLASSIFICATION	1.6132500262962058E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999211728390188	WITHOUT_CLASSIFICATION	7.882716098113322E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999813981115405	WITHOUT_CLASSIFICATION	1.8601888459420536E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999987966958798	WITHOUT_CLASSIFICATION	1.2033041202033871E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999945248643858	WITHOUT_CLASSIFICATION	5.475135614135688E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999807421825672	WITHOUT_CLASSIFICATION	1.9257817432846467E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999861169270546	WITHOUT_CLASSIFICATION	1.3883072945294791E-5	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999968907248152	WITHOUT_CLASSIFICATION	3.109275184770625E-6	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999337314876994	WITHOUT_CLASSIFICATION	6.626851230060261E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999973795086763	WITHOUT_CLASSIFICATION	2.620491323747668E-6	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9998978156967931	WITHOUT_CLASSIFICATION	1.0218430320681626E-4	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999772559925294	WITHOUT_CLASSIFICATION	2.2744007470606613E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999781966155513	WITHOUT_CLASSIFICATION	2.180338444866823E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999618957609596	WITHOUT_CLASSIFICATION	3.810423904035457E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999873092976291	WITHOUT_CLASSIFICATION	1.2690702370946996E-5	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9998524468309692	WITHOUT_CLASSIFICATION	1.4755316903081124E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9998791180221511	WITHOUT_CLASSIFICATION	1.2088197784889911E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999964827555968	WITHOUT_CLASSIFICATION	3.517244403250566E-6	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999988619784744	WITHOUT_CLASSIFICATION	1.1380215255725653E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999975639915974	WITHOUT_CLASSIFICATION	2.4360084025201687E-6	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999949292844251	WITHOUT_CLASSIFICATION	5.070715574760954E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999951123802263	WITHOUT_CLASSIFICATION	4.887619773759521E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.999945206738415	WITHOUT_CLASSIFICATION	5.479326158510692E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999986472657176	WITHOUT_CLASSIFICATION	1.3527342823569368E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999999134812824	WITHOUT_CLASSIFICATION	8.65187176998276E-8	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999963073896757	WITHOUT_CLASSIFICATION	3.6926103242963287E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999998721745073	WITHOUT_CLASSIFICATION	1.2782549286675598E-7	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999975839228963	WITHOUT_CLASSIFICATION	2.416077103749596E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999980821423323	WITHOUT_CLASSIFICATION	1.917857667719357E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999997158773268	WITHOUT_CLASSIFICATION	2.841226732493071E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.999999630158905	WITHOUT_CLASSIFICATION	3.6984109493001373E-7	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999977015584227	WITHOUT_CLASSIFICATION	2.2984415773336914E-6	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999996719820643	WITHOUT_CLASSIFICATION	3.2801793568997183E-7	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999991678923026	WITHOUT_CLASSIFICATION	8.321076973222639E-7	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.999960140249085	WITHOUT_CLASSIFICATION	3.985975091498376E-5	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.99999667763918	WITHOUT_CLASSIFICATION	3.3223608199324617E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999811996373291	WITHOUT_CLASSIFICATION	1.880036267084511E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9977212294773657	WITHOUT_CLASSIFICATION	0.002278770522634344	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9999548445094194	WITHOUT_CLASSIFICATION	4.515549058063347E-5	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9993523804107918	WITHOUT_CLASSIFICATION	6.476195892081954E-4	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9996068364223295	WITHOUT_CLASSIFICATION	3.9316357767058224E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999062971485346	WITHOUT_CLASSIFICATION	9.370285146536621E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999062971485346	WITHOUT_CLASSIFICATION	9.370285146536621E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999982952425358	WITHOUT_CLASSIFICATION	1.7047574641876367E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999982952425358	WITHOUT_CLASSIFICATION	1.7047574641876367E-6	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9986750856660606	WITHOUT_CLASSIFICATION	0.00132491433393936	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999845721833029	WITHOUT_CLASSIFICATION	1.5427816697096415E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999998053258987	WITHOUT_CLASSIFICATION	1.9467410127074366E-7	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999998053258987	WITHOUT_CLASSIFICATION	1.9467410127074366E-7	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999090681032118	WITHOUT_CLASSIFICATION	9.093189678825736E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999971451907856	WITHOUT_CLASSIFICATION	2.8548092142956153E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.999998928377875	WITHOUT_CLASSIFICATION	1.0716221251056792E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999851272299578	WITHOUT_CLASSIFICATION	1.48727700421067E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999990196311086	WITHOUT_CLASSIFICATION	9.803688914244583E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999824613078445	WITHOUT_CLASSIFICATION	1.7538692155582327E-5	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999827033786035	WITHOUT_CLASSIFICATION	1.7296621396506948E-5	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999966574555084	WITHOUT_CLASSIFICATION	3.3425444916712155E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999891641863466	WITHOUT_CLASSIFICATION	1.0835813653314565E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999950205252057	WITHOUT_CLASSIFICATION	4.979474794188484E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999911406386974	WITHOUT_CLASSIFICATION	8.859361302592929E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999954026158715	WITHOUT_CLASSIFICATION	4.597384128487623E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999967811414143	WITHOUT_CLASSIFICATION	3.2188585855442295E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999977453721136	WITHOUT_CLASSIFICATION	2.2546278864122134E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999941789819997	WITHOUT_CLASSIFICATION	5.821018000365443E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996125975918	WITHOUT_CLASSIFICATION	3.8740240815556876E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999971451907856	WITHOUT_CLASSIFICATION	2.8548092142956153E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.999998928377875	WITHOUT_CLASSIFICATION	1.0716221251056792E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999851272299578	WITHOUT_CLASSIFICATION	1.48727700421067E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999990196311086	WITHOUT_CLASSIFICATION	9.803688914244583E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999824613078445	WITHOUT_CLASSIFICATION	1.7538692155582327E-5	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999998641405531	WITHOUT_CLASSIFICATION	1.35859446912133E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999984004170274	WITHOUT_CLASSIFICATION	1.5995829725400864E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.999999875382606	WITHOUT_CLASSIFICATION	1.2461739394429237E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999963027916303	WITHOUT_CLASSIFICATION	3.6972083697953226E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999998153177397	WITHOUT_CLASSIFICATION	1.846822602942329E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999811555302769	WITHOUT_CLASSIFICATION	1.8844469722999813E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999960614421479	WITHOUT_CLASSIFICATION	3.938557852087224E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9998443017186072	WITHOUT_CLASSIFICATION	1.5569828139280013E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999891622347463	WITHOUT_CLASSIFICATION	1.083776525370983E-5	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999910237118996	WITHOUT_CLASSIFICATION	8.97628810027994E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999988809638082	WITHOUT_CLASSIFICATION	1.1190361918128868E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999966574555084	WITHOUT_CLASSIFICATION	3.3425444916712155E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.999999716976099	WITHOUT_CLASSIFICATION	2.830239009411053E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998672265504	WITHOUT_CLASSIFICATION	1.3277344946739014E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998672265504	WITHOUT_CLASSIFICATION	1.3277344946739014E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.999999102125024	WITHOUT_CLASSIFICATION	8.978749759743839E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999996590678354	WITHOUT_CLASSIFICATION	3.409321645565478E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999939392474729	WITHOUT_CLASSIFICATION	6.060752527015724E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999939392474729	WITHOUT_CLASSIFICATION	6.060752527015724E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.999997446725781	WITHOUT_CLASSIFICATION	2.553274218934733E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999938226066994	WITHOUT_CLASSIFICATION	6.177393300535282E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999980566248607	WITHOUT_CLASSIFICATION	1.9433751392954794E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999997841143068	WITHOUT_CLASSIFICATION	2.1588569327721147E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999996971596397	WITHOUT_CLASSIFICATION	3.0284036031979783E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.999999897434198	WITHOUT_CLASSIFICATION	1.0256580192328324E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999991701302537	WITHOUT_CLASSIFICATION	8.298697463185304E-7	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999990025511465	WITHOUT_CLASSIFICATION	9.9744885353138E-7	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999996044832947	WITHOUT_CLASSIFICATION	3.955167052994829E-7	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998493174163283	WITHOUT_CLASSIFICATION	1.506825836716178E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999969053268207	WITHOUT_CLASSIFICATION	3.0946731792527555E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999951408166089	WITHOUT_CLASSIFICATION	4.859183391148324E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999981033999134	WITHOUT_CLASSIFICATION	1.8966000866341897E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999999413918599	WITHOUT_CLASSIFICATION	5.8608140127964744E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999986835134822	WITHOUT_CLASSIFICATION	1.3164865178298483E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999800618082	WITHOUT_CLASSIFICATION	1.993819181388477E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999995265903593	WITHOUT_CLASSIFICATION	4.734096406943566E-7	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999994156310368	WITHOUT_CLASSIFICATION	5.843689632203883E-7	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999837396729084	WITHOUT_CLASSIFICATION	1.6260327091631033E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999961695945905	WITHOUT_CLASSIFICATION	3.830405409467267E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999840617074965	WITHOUT_CLASSIFICATION	1.5938292503462507E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.999999551647789	WITHOUT_CLASSIFICATION	4.4835221091500494E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999950205252057	WITHOUT_CLASSIFICATION	4.979474794188484E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999911406386974	WITHOUT_CLASSIFICATION	8.859361302592929E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999972439778407	WITHOUT_CLASSIFICATION	2.756022159190162E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999954026158715	WITHOUT_CLASSIFICATION	4.597384128487623E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999967811414143	WITHOUT_CLASSIFICATION	3.2188585855442295E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999977453721136	WITHOUT_CLASSIFICATION	2.2546278864122134E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9997205386895118	WITHOUT_CLASSIFICATION	2.7946131048816345E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998905269693644	WITHOUT_CLASSIFICATION	1.0947303063554322E-4	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999961907675528	WITHOUT_CLASSIFICATION	3.8092324472149807E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999995629542887	WITHOUT_CLASSIFICATION	4.370457112475915E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999953508345661	WITHOUT_CLASSIFICATION	4.649165433789628E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9997958372030525	WITHOUT_CLASSIFICATION	2.041627969474972E-4	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999988217198474	WITHOUT_CLASSIFICATION	1.1782801525141208E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999980976864182	WITHOUT_CLASSIFICATION	1.9023135818050595E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999853301622404	WITHOUT_CLASSIFICATION	1.4669837759644176E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999510347052076	WITHOUT_CLASSIFICATION	4.8965294792389565E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.999911188435581	WITHOUT_CLASSIFICATION	8.881156441891131E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999775537298112	WITHOUT_CLASSIFICATION	2.244627018875173E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.999855016597402	WITHOUT_CLASSIFICATION	1.4498340259795322E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999359960468	WITHOUT_CLASSIFICATION	6.400395320217804E-8	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.999995967017244	WITHOUT_CLASSIFICATION	4.032982755970515E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.999999820758466	WITHOUT_CLASSIFICATION	1.7924153391179225E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999580038162	WITHOUT_CLASSIFICATION	4.199618376113191E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999954691502538	WITHOUT_CLASSIFICATION	4.530849746192665E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999999372101749	WITHOUT_CLASSIFICATION	6.27898250502717E-8	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996427228219	WITHOUT_CLASSIFICATION	3.572771781243952E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996243498525	WITHOUT_CLASSIFICATION	3.756501475675242E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999955124263832	WITHOUT_CLASSIFICATION	4.487573616742245E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999997453365744	WITHOUT_CLASSIFICATION	2.546634255763981E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.999999794827617	WITHOUT_CLASSIFICATION	2.0517238296977217E-7	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999998406097832	WITHOUT_CLASSIFICATION	1.593902169010436E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999938191686872	WITHOUT_CLASSIFICATION	6.180831312803482E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999951983529999	WITHOUT_CLASSIFICATION	4.801647000170728E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.999999267555187	WITHOUT_CLASSIFICATION	7.324448130375992E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999939367154513	WITHOUT_CLASSIFICATION	6.06328454863117E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999805565491261	WITHOUT_CLASSIFICATION	1.9443450873924218E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999845214499584	WITHOUT_CLASSIFICATION	1.547855004161715E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999893394654786	WITHOUT_CLASSIFICATION	1.0660534521411788E-5	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999995456417069	WITHOUT_CLASSIFICATION	4.5435829306304763E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999992754464705	WITHOUT_CLASSIFICATION	7.245535293958881E-7	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996052559406	WITHOUT_CLASSIFICATION	3.9474405946687356E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999950418264367	WITHOUT_CLASSIFICATION	4.958173563322886E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999368397783	WITHOUT_CLASSIFICATION	6.316022176387972E-8	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999998211247725	WITHOUT_CLASSIFICATION	1.7887522742783906E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999930536961648	WITHOUT_CLASSIFICATION	6.946303835196014E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999935741929582	WITHOUT_CLASSIFICATION	6.425807041827854E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999935741929582	WITHOUT_CLASSIFICATION	6.425807041827854E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999874503993921	WITHOUT_CLASSIFICATION	1.2549600607998502E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999978089639987	WITHOUT_CLASSIFICATION	2.191036001256518E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999999401684834	WITHOUT_CLASSIFICATION	5.983151660596151E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999990355283961	WITHOUT_CLASSIFICATION	9.644716038958058E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999988577175349	WITHOUT_CLASSIFICATION	1.1422824650070078E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9997877774983026	WITHOUT_CLASSIFICATION	2.1222250169727568E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999978203025381	WITHOUT_CLASSIFICATION	2.1796974618158753E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999978203025381	WITHOUT_CLASSIFICATION	2.1796974618158753E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999978203025381	WITHOUT_CLASSIFICATION	2.1796974618158753E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999924130124258	WITHOUT_CLASSIFICATION	7.586987574244449E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999749338459736	WITHOUT_CLASSIFICATION	2.5066154026396157E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999987110139384	WITHOUT_CLASSIFICATION	1.2889860614756598E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999987110139384	WITHOUT_CLASSIFICATION	1.2889860614756598E-6	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999978805645898	WITHOUT_CLASSIFICATION	2.1194354102661614E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999974950765769	WITHOUT_CLASSIFICATION	2.5049234231067773E-6	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999998885195204	WITHOUT_CLASSIFICATION	1.114804796885144E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999966207000868	WITHOUT_CLASSIFICATION	3.3792999132171733E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999988667069648	WITHOUT_CLASSIFICATION	1.1332930352296802E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.999997299060965	WITHOUT_CLASSIFICATION	2.7009390349848395E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.999999402798113	WITHOUT_CLASSIFICATION	5.972018871359944E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999995718111421	WITHOUT_CLASSIFICATION	4.281888578586201E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999988671977238	WITHOUT_CLASSIFICATION	1.1328022762327888E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999998874585618	WITHOUT_CLASSIFICATION	1.1254143817610183E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999995144828006	WITHOUT_CLASSIFICATION	4.855171994157934E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998807052063166	WITHOUT_CLASSIFICATION	1.1929479368344805E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999928378275086	WITHOUT_CLASSIFICATION	7.162172491389491E-6	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9999009799621276	WITHOUT_CLASSIFICATION	9.902003787251523E-5	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.999996183908339	WITHOUT_CLASSIFICATION	3.816091660981317E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9998070800539225	WITHOUT_CLASSIFICATION	1.9291994607750564E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.999981425195611	WITHOUT_CLASSIFICATION	1.8574804389008875E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999996459882025	WITHOUT_CLASSIFICATION	3.540117975849832E-7	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999993144871812	WITHOUT_CLASSIFICATION	6.855128188378068E-7	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999996854461023	WITHOUT_CLASSIFICATION	3.1455389760030604E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999998086456304	WITHOUT_CLASSIFICATION	1.9135436949770277E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999996435145329	WITHOUT_CLASSIFICATION	3.564854671949285E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999967571213046	WITHOUT_CLASSIFICATION	3.2428786952599872E-6	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999997035118987	WITHOUT_CLASSIFICATION	2.9648810128340285E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999829551397945	WITHOUT_CLASSIFICATION	1.7044860205530983E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.999999956405468	WITHOUT_CLASSIFICATION	4.3594531984407676E-8	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999997538584353	WITHOUT_CLASSIFICATION	2.4614156468621433E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.999999730976991	WITHOUT_CLASSIFICATION	2.6902300904411106E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.999999899984331	WITHOUT_CLASSIFICATION	1.0001566900896797E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998520067679	WITHOUT_CLASSIFICATION	1.4799323205360735E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.999999907606812	WITHOUT_CLASSIFICATION	9.239318800197101E-8	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999398653321	WITHOUT_CLASSIFICATION	6.013466790567448E-8	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999946170493972	WITHOUT_CLASSIFICATION	5.382950602782536E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999982930295749	WITHOUT_CLASSIFICATION	1.7069704250955761E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999994063597268	WITHOUT_CLASSIFICATION	5.936402731712382E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988947476159	WITHOUT_CLASSIFICATION	1.1052523839988562E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996624000205	WITHOUT_CLASSIFICATION	3.3759997956869356E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997267309377	WITHOUT_CLASSIFICATION	2.732690622174712E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999907777606913	WITHOUT_CLASSIFICATION	9.22223930857749E-6	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.999998921461978	WITHOUT_CLASSIFICATION	1.0785380219617897E-6	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999996466657001	WITHOUT_CLASSIFICATION	3.5333429993307654E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999990756889359	WITHOUT_CLASSIFICATION	9.243110641198238E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998290263993	WITHOUT_CLASSIFICATION	1.7097360070791934E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999992442144287	WITHOUT_CLASSIFICATION	7.557855712718508E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999990587998207	WITHOUT_CLASSIFICATION	9.412001792994618E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999993318127963	WITHOUT_CLASSIFICATION	6.681872037589141E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999368397783	WITHOUT_CLASSIFICATION	6.316022176387972E-8	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999829551397945	WITHOUT_CLASSIFICATION	1.7044860205530983E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999995376892935	WITHOUT_CLASSIFICATION	4.6231070644572534E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999998506509143	WITHOUT_CLASSIFICATION	1.4934908556596403E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999994336084577	WITHOUT_CLASSIFICATION	5.663915423894844E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999986448107354	WITHOUT_CLASSIFICATION	1.3551892646052997E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999221786717	WITHOUT_CLASSIFICATION	7.782132823277882E-8	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999980689429093	WITHOUT_CLASSIFICATION	1.9310570906503985E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999984588026657	WITHOUT_CLASSIFICATION	1.5411973342882314E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999874635092825	WITHOUT_CLASSIFICATION	1.253649071757445E-5	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999999673478727	WITHOUT_CLASSIFICATION	3.265212728241054E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999499997066	WITHOUT_CLASSIFICATION	5.000029324952948E-8	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.999999759824245	WITHOUT_CLASSIFICATION	2.401757549282798E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999984588026657	WITHOUT_CLASSIFICATION	1.5411973342882314E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999647351886	WITHOUT_CLASSIFICATION	3.5264811444719675E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999997899305402	WITHOUT_CLASSIFICATION	2.100694598299871E-7	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.999999952414374	WITHOUT_CLASSIFICATION	4.758562590868369E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998746775813	WITHOUT_CLASSIFICATION	1.2532241878305046E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999964269057295	WITHOUT_CLASSIFICATION	3.573094270573129E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999977870895927	WITHOUT_CLASSIFICATION	2.2129104072497707E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999977870895927	WITHOUT_CLASSIFICATION	2.2129104072497707E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999940317755603	WITHOUT_CLASSIFICATION	5.968224439650603E-6	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999967686041716	WITHOUT_CLASSIFICATION	3.231395828382657E-6	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999967686041716	WITHOUT_CLASSIFICATION	3.231395828382657E-6	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999989652979	WITHOUT_CLASSIFICATION	1.0347021441616885E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999994767007	WITHOUT_CLASSIFICATION	5.23299264706586E-10	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999879600198	WITHOUT_CLASSIFICATION	1.2039980200444275E-8	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.999999826523137	WITHOUT_CLASSIFICATION	1.734768629712332E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999998202914532	WITHOUT_CLASSIFICATION	1.7970854691903443E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999999102714723	WITHOUT_CLASSIFICATION	8.972852773258133E-8	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999990502703844	WITHOUT_CLASSIFICATION	9.497296155832512E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999662149753129	WITHOUT_CLASSIFICATION	3.3785024687065186E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999972798713204	WITHOUT_CLASSIFICATION	2.7201286797175817E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999940775417725	WITHOUT_CLASSIFICATION	5.9224582274056515E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999998915415655	WITHOUT_CLASSIFICATION	1.0845843444283E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999949279736441	WITHOUT_CLASSIFICATION	5.072026355933154E-6	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999996526433493	WITHOUT_CLASSIFICATION	3.4735665071954663E-7	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999997000427282	WITHOUT_CLASSIFICATION	2.999572718337001E-7	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999997676813618	WITHOUT_CLASSIFICATION	2.323186381464465E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999988269868877	WITHOUT_CLASSIFICATION	1.1730131122536463E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.999977787404841	WITHOUT_CLASSIFICATION	2.2212595158971805E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999509804273111	WITHOUT_CLASSIFICATION	4.901957268880415E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999509804273111	WITHOUT_CLASSIFICATION	4.901957268880415E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999773764603659	WITHOUT_CLASSIFICATION	2.2623539634176208E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999929709248021	WITHOUT_CLASSIFICATION	7.029075197944556E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999773764603659	WITHOUT_CLASSIFICATION	2.2623539634176208E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999773764603659	WITHOUT_CLASSIFICATION	2.2623539634176208E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999773764603659	WITHOUT_CLASSIFICATION	2.2623539634176208E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999978089639987	WITHOUT_CLASSIFICATION	2.191036001256518E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999999401684834	WITHOUT_CLASSIFICATION	5.983151660596151E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.999999965906839	WITHOUT_CLASSIFICATION	3.409316092613567E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999986472657176	WITHOUT_CLASSIFICATION	1.3527342823569368E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998493174163283	WITHOUT_CLASSIFICATION	1.506825836716178E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999837396729084	WITHOUT_CLASSIFICATION	1.6260327091631033E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999961695945905	WITHOUT_CLASSIFICATION	3.830405409467267E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998063738536	WITHOUT_CLASSIFICATION	1.9362614650011498E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999221786717	WITHOUT_CLASSIFICATION	7.782132823277882E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999499997066	WITHOUT_CLASSIFICATION	5.000029324952948E-8	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999999645738538	WITHOUT_CLASSIFICATION	3.542614611537235E-8	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999993774019101	WITHOUT_CLASSIFICATION	6.225980898672342E-7	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999973450751922	WITHOUT_CLASSIFICATION	2.654924807714477E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999995107494462	WITHOUT_CLASSIFICATION	4.892505537396965E-7	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999998750773126	WITHOUT_CLASSIFICATION	1.2492268732797464E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999999279079844	WITHOUT_CLASSIFICATION	7.209201559236195E-8	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.999999627941931	WITHOUT_CLASSIFICATION	3.7205806897528786E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999998736476298	WITHOUT_CLASSIFICATION	1.2635237022388818E-7	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999831950252102	WITHOUT_CLASSIFICATION	1.6804974789826505E-5	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999953446547191	WITHOUT_CLASSIFICATION	4.655345280916241E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999979313885056	WITHOUT_CLASSIFICATION	2.068611494475456E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999362659181766	WITHOUT_CLASSIFICATION	6.373408182335451E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999990890112067	WITHOUT_CLASSIFICATION	9.109887933534037E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999996862099133	WITHOUT_CLASSIFICATION	3.137900866862272E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999996101612838	WITHOUT_CLASSIFICATION	3.8983871617060017E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999948507169685	WITHOUT_CLASSIFICATION	5.149283031497484E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999991255921686	WITHOUT_CLASSIFICATION	8.744078314622181E-7	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9792689080273663	WITHOUT_CLASSIFICATION	0.020731091972633644	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999999099008031	WITHOUT_CLASSIFICATION	9.009919690267175E-8	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999984072109814	WITHOUT_CLASSIFICATION	1.5927890186119114E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999854405366752	WITHOUT_CLASSIFICATION	1.4559463324765228E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999623156303087	WITHOUT_CLASSIFICATION	3.768436969133417E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9997380570214205	WITHOUT_CLASSIFICATION	2.6194297857951867E-4	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999973696714448	WITHOUT_CLASSIFICATION	2.6303285552224063E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999890312053412	WITHOUT_CLASSIFICATION	1.0968794658802437E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.999446132742221	WITHOUT_CLASSIFICATION	5.538672577788444E-4	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9996379126195669	WITHOUT_CLASSIFICATION	3.620873804330937E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999420564324089	WITHOUT_CLASSIFICATION	5.794356759125322E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999906076049672	WITHOUT_CLASSIFICATION	9.392395032832223E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996125975918	WITHOUT_CLASSIFICATION	3.8740240815556876E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999996125975918	WITHOUT_CLASSIFICATION	3.8740240815556876E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999980253438282	WITHOUT_CLASSIFICATION	1.974656171790061E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998493174163283	WITHOUT_CLASSIFICATION	1.506825836716178E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999969053268207	WITHOUT_CLASSIFICATION	3.0946731792527555E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999951408166089	WITHOUT_CLASSIFICATION	4.859183391148324E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9994931040080511	WITHOUT_CLASSIFICATION	5.068959919487915E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999981033999134	WITHOUT_CLASSIFICATION	1.8966000866341897E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.999995967017244	WITHOUT_CLASSIFICATION	4.032982755970515E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.999999820758466	WITHOUT_CLASSIFICATION	1.7924153391179225E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999580038162	WITHOUT_CLASSIFICATION	4.199618376113191E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999954691502538	WITHOUT_CLASSIFICATION	4.530849746192665E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996427228219	WITHOUT_CLASSIFICATION	3.572771781243952E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996243498525	WITHOUT_CLASSIFICATION	3.756501475675242E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999955124263832	WITHOUT_CLASSIFICATION	4.487573616742245E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999997453365744	WITHOUT_CLASSIFICATION	2.546634255763981E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999939367154513	WITHOUT_CLASSIFICATION	6.06328454863117E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999970294044207	WITHOUT_CLASSIFICATION	2.97059557937477E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999368397783	WITHOUT_CLASSIFICATION	6.316022176387972E-8	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999935741929582	WITHOUT_CLASSIFICATION	6.425807041827854E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999874503993921	WITHOUT_CLASSIFICATION	1.2549600607998502E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9997877774983026	WITHOUT_CLASSIFICATION	2.1222250169727568E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999978203025381	WITHOUT_CLASSIFICATION	2.1796974618158753E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999978203025381	WITHOUT_CLASSIFICATION	2.1796974618158753E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999924130124258	WITHOUT_CLASSIFICATION	7.586987574244449E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999987110139384	WITHOUT_CLASSIFICATION	1.2889860614756598E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999987110139384	WITHOUT_CLASSIFICATION	1.2889860614756598E-6	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999978805645898	WITHOUT_CLASSIFICATION	2.1194354102661614E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999974950765769	WITHOUT_CLASSIFICATION	2.5049234231067773E-6	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999998554064335	WITHOUT_CLASSIFICATION	1.4459356652862883E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999982329469093	WITHOUT_CLASSIFICATION	1.767053090801866E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999999080648342	WITHOUT_CLASSIFICATION	9.193516577129047E-8	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999996732225188	WITHOUT_CLASSIFICATION	3.267774812922755E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999918114677149	WITHOUT_CLASSIFICATION	8.1885322850775E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999995798042817	WITHOUT_CLASSIFICATION	4.2019571836230225E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999999011216839	WITHOUT_CLASSIFICATION	9.887831613105696E-8	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999948534138208	WITHOUT_CLASSIFICATION	5.146586179254971E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999968039195312	WITHOUT_CLASSIFICATION	3.196080468768323E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999943208144666	WITHOUT_CLASSIFICATION	5.6791855333730576E-6	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999998482493925	WITHOUT_CLASSIFICATION	1.5175060746833073E-7	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999999582351495	WITHOUT_CLASSIFICATION	4.176485045355671E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999999019829896	WITHOUT_CLASSIFICATION	9.801701042136957E-8	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.999987553406166	WITHOUT_CLASSIFICATION	1.2446593834161068E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999998937019394	WITHOUT_CLASSIFICATION	1.0629806058746815E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999846734255826	WITHOUT_CLASSIFICATION	1.532657441748895E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999725235961586	WITHOUT_CLASSIFICATION	2.7476403841352814E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.999712395022472	WITHOUT_CLASSIFICATION	2.876049775279484E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999971062965604	WITHOUT_CLASSIFICATION	2.893703439609864E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999993937270415	WITHOUT_CLASSIFICATION	6.062729585045224E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999980253438282	WITHOUT_CLASSIFICATION	1.974656171790061E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999911029958031	WITHOUT_CLASSIFICATION	8.897004196938722E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998290263993	WITHOUT_CLASSIFICATION	1.7097360070791934E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999954386573899	WITHOUT_CLASSIFICATION	4.561342610029368E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999971580371744	WITHOUT_CLASSIFICATION	2.841962825590775E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999978251674774	WITHOUT_CLASSIFICATION	2.1748325225734035E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999993318127963	WITHOUT_CLASSIFICATION	6.681872037589141E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999938801529442	WITHOUT_CLASSIFICATION	6.11984705581565E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999965365016844	WITHOUT_CLASSIFICATION	3.4634983156100123E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999824258900788	WITHOUT_CLASSIFICATION	1.757410992118701E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999624624978228	WITHOUT_CLASSIFICATION	3.753750217720513E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999988577175349	WITHOUT_CLASSIFICATION	1.1422824650070078E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999749338459736	WITHOUT_CLASSIFICATION	2.5066154026396157E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999662149753129	WITHOUT_CLASSIFICATION	3.3785024687065186E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.997742305595511	WITHOUT_CLASSIFICATION	0.0022576944044888888	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9866887991542528	WITHOUT_CLASSIFICATION	0.013311200845747172	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999989203308829	WITHOUT_CLASSIFICATION	1.0796691170345622E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999999629622166	WITHOUT_CLASSIFICATION	3.703778339140141E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999999629622166	WITHOUT_CLASSIFICATION	3.703778339140141E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999999629622166	WITHOUT_CLASSIFICATION	3.703778339140141E-7	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999990011221518	WITHOUT_CLASSIFICATION	9.988778482426662E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999991539760804	WITHOUT_CLASSIFICATION	8.460239196212482E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999996114303348	WITHOUT_CLASSIFICATION	3.8856966521983453E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999999209987491	WITHOUT_CLASSIFICATION	7.900125095758397E-8	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999995056136849	WITHOUT_CLASSIFICATION	4.943863150898433E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999893856075137	WITHOUT_CLASSIFICATION	1.061439248624886E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999893856075137	WITHOUT_CLASSIFICATION	1.061439248624886E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999992793530529	WITHOUT_CLASSIFICATION	7.2064694706293E-7	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999998175844088	WITHOUT_CLASSIFICATION	1.82415591182869E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999990815979122	WITHOUT_CLASSIFICATION	9.184020878702536E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999990595982715	WITHOUT_CLASSIFICATION	9.404017284009333E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999994495538226	WITHOUT_CLASSIFICATION	5.504461774168898E-7	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999992903272807	WITHOUT_CLASSIFICATION	7.096727192480516E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999834318130654	WITHOUT_CLASSIFICATION	1.6568186934690578E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999562430311	WITHOUT_CLASSIFICATION	4.375696898350166E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999997387747304	WITHOUT_CLASSIFICATION	2.6122526971125823E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999938924097327	WITHOUT_CLASSIFICATION	6.107590267295872E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999632876070474	WITHOUT_CLASSIFICATION	3.671239295257222E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999996662036288	WITHOUT_CLASSIFICATION	3.337963711228999E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999897316659699	WITHOUT_CLASSIFICATION	1.0268334030059201E-5	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.999994115825524	WITHOUT_CLASSIFICATION	5.884174476040256E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999993318127963	WITHOUT_CLASSIFICATION	6.681872037589141E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999938801529442	WITHOUT_CLASSIFICATION	6.11984705581565E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999824258900788	WITHOUT_CLASSIFICATION	1.757410992118701E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999655842157	WITHOUT_CLASSIFICATION	3.4415784290677115E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999981988889856	WITHOUT_CLASSIFICATION	1.8011110145276345E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999995361108934	WITHOUT_CLASSIFICATION	4.6388910654195793E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999662149753129	WITHOUT_CLASSIFICATION	3.3785024687065186E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999999949399212	WITHOUT_CLASSIFICATION	5.060078798623505E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999855212671	WITHOUT_CLASSIFICATION	1.4478732795574851E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998315320846	WITHOUT_CLASSIFICATION	1.6846791535003603E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.999999629622166	WITHOUT_CLASSIFICATION	3.703778339140141E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999992793530529	WITHOUT_CLASSIFICATION	7.2064694706293E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999562430311	WITHOUT_CLASSIFICATION	4.375696898350166E-8	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999562430311	WITHOUT_CLASSIFICATION	4.375696898350166E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999997387747304	WITHOUT_CLASSIFICATION	2.6122526971125823E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999983837660268	WITHOUT_CLASSIFICATION	1.616233973179862E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999986709034083	WITHOUT_CLASSIFICATION	1.3290965916533946E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999996058559831	WITHOUT_CLASSIFICATION	3.9414401688672747E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999923360555779	WITHOUT_CLASSIFICATION	7.663944422096357E-6	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999990277732143	WITHOUT_CLASSIFICATION	9.722267857033313E-7	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999997738396175	WITHOUT_CLASSIFICATION	2.2616038243792934E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999989903530945	WITHOUT_CLASSIFICATION	1.0096469055176848E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999997449663945	WITHOUT_CLASSIFICATION	2.550336054829709E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999971748884173	WITHOUT_CLASSIFICATION	2.8251115826383534E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.999999957461151	WITHOUT_CLASSIFICATION	4.253884909601579E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999998676463936	WITHOUT_CLASSIFICATION	1.323536064493782E-7	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999974887775707	WITHOUT_CLASSIFICATION	2.5112224294420895E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.999999782626196	WITHOUT_CLASSIFICATION	2.1737380394264748E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999997868633033	WITHOUT_CLASSIFICATION	2.131366967343085E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999999372614693	WITHOUT_CLASSIFICATION	6.273853067387124E-8	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999986386548645	WITHOUT_CLASSIFICATION	1.3613451354965704E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999993728197397	WITHOUT_CLASSIFICATION	6.271802602891408E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999998591517825	WITHOUT_CLASSIFICATION	1.408482174771536E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.999999928964112	WITHOUT_CLASSIFICATION	7.103588796234112E-8	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999998911839457	WITHOUT_CLASSIFICATION	1.0881605430685528E-7	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999998367204157	WITHOUT_CLASSIFICATION	1.6327958437337653E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999672898006	WITHOUT_CLASSIFICATION	3.271019950738411E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999900564754491	WITHOUT_CLASSIFICATION	9.943524550921338E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999904871518287	WITHOUT_CLASSIFICATION	9.512848171404294E-6	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999987021382171	WITHOUT_CLASSIFICATION	1.297861782867789E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999998505765441	WITHOUT_CLASSIFICATION	1.4942345599097046E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999999410386591	WITHOUT_CLASSIFICATION	5.8961340986082356E-8	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999999482608477	WITHOUT_CLASSIFICATION	5.173915238944363E-8	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999219665404	WITHOUT_CLASSIFICATION	7.803345962196619E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.999999881895312	WITHOUT_CLASSIFICATION	1.1810468803454567E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999999373625745	WITHOUT_CLASSIFICATION	6.263742544928244E-8	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999695813254	WITHOUT_CLASSIFICATION	3.041867453471221E-8	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999999935008398	WITHOUT_CLASSIFICATION	6.499160202560797E-9	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999854515164	WITHOUT_CLASSIFICATION	1.4548483734031426E-8	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999998885395137	WITHOUT_CLASSIFICATION	1.1146048632575635E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999998632463079	WITHOUT_CLASSIFICATION	1.367536920929282E-7	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999998974173563	WITHOUT_CLASSIFICATION	1.0258264370739396E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.99999987103398	WITHOUT_CLASSIFICATION	1.2896601997315936E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999928489622645	WITHOUT_CLASSIFICATION	7.151037735415892E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999672898006	WITHOUT_CLASSIFICATION	3.271019950738411E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999937461466	WITHOUT_CLASSIFICATION	6.2538534455462906E-9	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999999202726951	WITHOUT_CLASSIFICATION	7.972730489252862E-8	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999999590586446	WITHOUT_CLASSIFICATION	4.094135548705779E-8	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999966053771965	WITHOUT_CLASSIFICATION	3.394622803560828E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999997141504172	WITHOUT_CLASSIFICATION	2.8584958278622594E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.999975737863837	WITHOUT_CLASSIFICATION	2.4262136162987406E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.999999203578893	WITHOUT_CLASSIFICATION	7.964211070387793E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999994262643218	WITHOUT_CLASSIFICATION	5.737356781325353E-7	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999991361539169	WITHOUT_CLASSIFICATION	8.638460830393245E-7	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999987345205024	WITHOUT_CLASSIFICATION	1.2654794975820195E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999957408477211	WITHOUT_CLASSIFICATION	4.259152278771807E-6	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999995745032073	WITHOUT_CLASSIFICATION	4.254967927747488E-7	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999966233575314	WITHOUT_CLASSIFICATION	3.3766424686224162E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999921638061	WITHOUT_CLASSIFICATION	7.836193965900992E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999921638061	WITHOUT_CLASSIFICATION	7.836193965900992E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999921638061	WITHOUT_CLASSIFICATION	7.836193965900992E-9	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.999973385743132	WITHOUT_CLASSIFICATION	2.6614256867888213E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.999973385743132	WITHOUT_CLASSIFICATION	2.6614256867888213E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.999973385743132	WITHOUT_CLASSIFICATION	2.6614256867888213E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999602955686	WITHOUT_CLASSIFICATION	3.970443134175294E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999602955686	WITHOUT_CLASSIFICATION	3.970443134175294E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999463769075	WITHOUT_CLASSIFICATION	5.362309245125741E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999463769075	WITHOUT_CLASSIFICATION	5.362309245125741E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999463769075	WITHOUT_CLASSIFICATION	5.362309245125741E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999463769075	WITHOUT_CLASSIFICATION	5.362309245125741E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999996253628746	WITHOUT_CLASSIFICATION	3.746371254334698E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999996253628746	WITHOUT_CLASSIFICATION	3.746371254334698E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999996253628746	WITHOUT_CLASSIFICATION	3.746371254334698E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999996253628746	WITHOUT_CLASSIFICATION	3.746371254334698E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999993472178547	WITHOUT_CLASSIFICATION	6.52782145334646E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999993472178547	WITHOUT_CLASSIFICATION	6.52782145334646E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999993472178547	WITHOUT_CLASSIFICATION	6.52782145334646E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999993472178547	WITHOUT_CLASSIFICATION	6.52782145334646E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999993472178547	WITHOUT_CLASSIFICATION	6.52782145334646E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999376967712	WITHOUT_CLASSIFICATION	6.23032288062486E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999376967712	WITHOUT_CLASSIFICATION	6.23032288062486E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999376967712	WITHOUT_CLASSIFICATION	6.23032288062486E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999376967712	WITHOUT_CLASSIFICATION	6.23032288062486E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997608331961	WITHOUT_CLASSIFICATION	2.3916680393663123E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997608331961	WITHOUT_CLASSIFICATION	2.3916680393663123E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999602955686	WITHOUT_CLASSIFICATION	3.970443134175294E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999463769075	WITHOUT_CLASSIFICATION	5.362309245125741E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999996253628746	WITHOUT_CLASSIFICATION	3.746371254334698E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999993472178547	WITHOUT_CLASSIFICATION	6.52782145334646E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999376967712	WITHOUT_CLASSIFICATION	6.23032288062486E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997608331961	WITHOUT_CLASSIFICATION	2.3916680393663123E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.99999980924668	WITHOUT_CLASSIFICATION	1.9075331989813575E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.999999658880205	WITHOUT_CLASSIFICATION	3.4111979501618105E-7	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.999997843573731	WITHOUT_CLASSIFICATION	2.1564262689365684E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999867054433315	WITHOUT_CLASSIFICATION	1.3294556668461691E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999867054433315	WITHOUT_CLASSIFICATION	1.3294556668461691E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806355370994	WITHOUT_CLASSIFICATION	1.9364462900584745E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806355370994	WITHOUT_CLASSIFICATION	1.9364462900584745E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806355370994	WITHOUT_CLASSIFICATION	1.9364462900584745E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9996965644041869	WITHOUT_CLASSIFICATION	3.0343559581311386E-4	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999999298301417	WITHOUT_CLASSIFICATION	7.016985830437258E-8	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999989504635193	WITHOUT_CLASSIFICATION	1.0495364806722882E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.999999867096301	WITHOUT_CLASSIFICATION	1.3290369914042557E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999968771827772	WITHOUT_CLASSIFICATION	3.12281722279184E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.999999617384596	WITHOUT_CLASSIFICATION	3.82615404117199E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988947476159	WITHOUT_CLASSIFICATION	1.1052523839988562E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996624000205	WITHOUT_CLASSIFICATION	3.3759997956869356E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999221786717	WITHOUT_CLASSIFICATION	7.782132823277882E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999499997066	WITHOUT_CLASSIFICATION	5.000029324952948E-8	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999867054433315	WITHOUT_CLASSIFICATION	1.3294556668461691E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999806355370994	WITHOUT_CLASSIFICATION	1.9364462900584745E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999992437717421	WITHOUT_CLASSIFICATION	7.562282580123191E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999924898566908	WITHOUT_CLASSIFICATION	7.5101433092314126E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999876274792	WITHOUT_CLASSIFICATION	1.2372520749803126E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.999999997062951	WITHOUT_CLASSIFICATION	2.937049117494239E-9	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999911226198	WITHOUT_CLASSIFICATION	8.877380040654477E-9	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999982942327	WITHOUT_CLASSIFICATION	1.7057671969157027E-9	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999952918364	WITHOUT_CLASSIFICATION	4.708163674198912E-9	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.999999990090887	WITHOUT_CLASSIFICATION	9.909112984487335E-9	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999939817273	WITHOUT_CLASSIFICATION	6.018272662480083E-9	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.999999895063822	WITHOUT_CLASSIFICATION	1.049361779011664E-7	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999564269848	WITHOUT_CLASSIFICATION	4.3573015199430325E-8	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999997953408626	WITHOUT_CLASSIFICATION	2.0465913746332776E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975766610791	WITHOUT_CLASSIFICATION	2.423338920855121E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975766610791	WITHOUT_CLASSIFICATION	2.423338920855121E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975766610791	WITHOUT_CLASSIFICATION	2.423338920855121E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999997979429123	WITHOUT_CLASSIFICATION	2.0205708764131227E-7	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999998936340733	WITHOUT_CLASSIFICATION	1.0636592677657329E-7	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.999999685217096	WITHOUT_CLASSIFICATION	3.147829039334602E-7	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999992867587509	WITHOUT_CLASSIFICATION	7.132412489796449E-7	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999995542834195	WITHOUT_CLASSIFICATION	4.457165806025908E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999927350274	WITHOUT_CLASSIFICATION	7.2649726681915144E-9	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999975799951027	WITHOUT_CLASSIFICATION	2.4200048972152247E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999969505650408	WITHOUT_CLASSIFICATION	3.049434959290238E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998985990847	WITHOUT_CLASSIFICATION	1.0140091530434686E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999986227979221	WITHOUT_CLASSIFICATION	1.3772020778966447E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988947476159	WITHOUT_CLASSIFICATION	1.1052523839988562E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996624000205	WITHOUT_CLASSIFICATION	3.3759997956869356E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999992437717421	WITHOUT_CLASSIFICATION	7.562282580123191E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998985990847	WITHOUT_CLASSIFICATION	1.0140091530434686E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999986227979221	WITHOUT_CLASSIFICATION	1.3772020778966447E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999989342049426	WITHOUT_CLASSIFICATION	1.0657950574702174E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9998892055875263	WITHOUT_CLASSIFICATION	1.107944124736777E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999999878862974	WITHOUT_CLASSIFICATION	1.2113702509937542E-8	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.999999381308091	WITHOUT_CLASSIFICATION	6.186919090403717E-7	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.99999970718459	WITHOUT_CLASSIFICATION	2.928154100720391E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999999831785062	WITHOUT_CLASSIFICATION	1.6821493776039768E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999999410715976	WITHOUT_CLASSIFICATION	5.892840228319908E-8	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999998625189197	WITHOUT_CLASSIFICATION	1.3748108037529527E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999933872214293	WITHOUT_CLASSIFICATION	6.6127785708058904E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999964811958849	WITHOUT_CLASSIFICATION	3.518804115175564E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999955659754121	WITHOUT_CLASSIFICATION	4.434024587885396E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999996447753	WITHOUT_CLASSIFICATION	3.5522466765522013E-10	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999831714166149	WITHOUT_CLASSIFICATION	1.6828583385103005E-5	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999997534174103	WITHOUT_CLASSIFICATION	2.465825897350319E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999996082946389	WITHOUT_CLASSIFICATION	3.917053611675712E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999997070426888	WITHOUT_CLASSIFICATION	2.9295731118901645E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999957055385161	WITHOUT_CLASSIFICATION	4.294461483851891E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999995456052061	WITHOUT_CLASSIFICATION	4.5439479386998606E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999998113721815	WITHOUT_CLASSIFICATION	1.886278184402484E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999999419007692	WITHOUT_CLASSIFICATION	5.809923083649766E-8	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.999999603850738	WITHOUT_CLASSIFICATION	3.961492619568089E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999999223541993	WITHOUT_CLASSIFICATION	7.76458006192466E-8	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999859553921648	WITHOUT_CLASSIFICATION	1.4044607835208982E-5	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999981196738972	WITHOUT_CLASSIFICATION	1.8803261027872653E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999890165923564	WITHOUT_CLASSIFICATION	1.098340764365375E-5	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999911925795996	WITHOUT_CLASSIFICATION	8.80742040044825E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999970916344707	WITHOUT_CLASSIFICATION	2.908365529384873E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999959798633414	WITHOUT_CLASSIFICATION	4.020136658640069E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999996542621604	WITHOUT_CLASSIFICATION	3.457378396193814E-7	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9999774947128743	WITHOUT_CLASSIFICATION	2.250528712573558E-5	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999938746861	WITHOUT_CLASSIFICATION	6.125313905386153E-9	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999996763297256	WITHOUT_CLASSIFICATION	3.236702744318093E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999936694171693	WITHOUT_CLASSIFICATION	6.33058283066302E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999996859840601	WITHOUT_CLASSIFICATION	3.140159398632718E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999994876512412	WITHOUT_CLASSIFICATION	5.123487587675224E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999994476457338	WITHOUT_CLASSIFICATION	5.52354266225997E-7	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999983426400411	WITHOUT_CLASSIFICATION	1.6573599589246275E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999998373371932	WITHOUT_CLASSIFICATION	1.6266280682739893E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999978251674774	WITHOUT_CLASSIFICATION	2.1748325225734035E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999929709248021	WITHOUT_CLASSIFICATION	7.029075197944556E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999951484411	WITHOUT_CLASSIFICATION	4.851558960121787E-9	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992761818444	WITHOUT_CLASSIFICATION	7.238181557023674E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999993318127963	WITHOUT_CLASSIFICATION	6.681872037589141E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999994138234033	WITHOUT_CLASSIFICATION	5.861765967760393E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999998921036209	WITHOUT_CLASSIFICATION	1.0789637909008423E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999867886029553	WITHOUT_CLASSIFICATION	1.3211397044549708E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999655842157	WITHOUT_CLASSIFICATION	3.4415784290677115E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999662149753129	WITHOUT_CLASSIFICATION	3.3785024687065186E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999996862099133	WITHOUT_CLASSIFICATION	3.137900866862272E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999888822201	WITHOUT_CLASSIFICATION	1.1117779895816319E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975766610791	WITHOUT_CLASSIFICATION	2.423338920855121E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975766610791	WITHOUT_CLASSIFICATION	2.423338920855121E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999975766610791	WITHOUT_CLASSIFICATION	2.423338920855121E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999981196738972	WITHOUT_CLASSIFICATION	1.8803261027872653E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999890165923564	WITHOUT_CLASSIFICATION	1.098340764365375E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996383558310747	WITHOUT_CLASSIFICATION	3.6164416892525865E-4	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999995622224166	WITHOUT_CLASSIFICATION	4.377775833304398E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998827300572	WITHOUT_CLASSIFICATION	1.172699427950144E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998827300572	WITHOUT_CLASSIFICATION	1.172699427950144E-7	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999032367264	WITHOUT_CLASSIFICATION	9.676327358898043E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999998007389587	WITHOUT_CLASSIFICATION	1.992610412615449E-7	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999974805595717	WITHOUT_CLASSIFICATION	2.519440428249004E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999987290570701	WITHOUT_CLASSIFICATION	1.2709429299643372E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999999055870594	WITHOUT_CLASSIFICATION	9.441294058229814E-8	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999999055870594	WITHOUT_CLASSIFICATION	9.441294058229814E-8	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999994037997302	WITHOUT_CLASSIFICATION	5.962002697563581E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.999998994137621	WITHOUT_CLASSIFICATION	1.0058623791040612E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999999120425734	WITHOUT_CLASSIFICATION	8.79574265492363E-8	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999998626222383	WITHOUT_CLASSIFICATION	1.373777618035061E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999636078718	WITHOUT_CLASSIFICATION	3.6392128192126713E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999882175136	WITHOUT_CLASSIFICATION	1.1782486414251952E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999980941602393	WITHOUT_CLASSIFICATION	1.905839760635649E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999997400204751	WITHOUT_CLASSIFICATION	2.5997952490234017E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999998738563594	WITHOUT_CLASSIFICATION	1.261436406386816E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999118735363	WITHOUT_CLASSIFICATION	8.812646370437313E-8	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999997882815594	WITHOUT_CLASSIFICATION	2.1171844064895493E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999996978179385	WITHOUT_CLASSIFICATION	3.0218206150132114E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999966754563498	WITHOUT_CLASSIFICATION	3.3245436502454556E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999492544864317	WITHOUT_CLASSIFICATION	5.074551356842144E-5	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999999138737145	WITHOUT_CLASSIFICATION	8.612628545629713E-8	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999960106539402	WITHOUT_CLASSIFICATION	3.989346059819672E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999988581582725	WITHOUT_CLASSIFICATION	1.1418417275020643E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999985881140167	WITHOUT_CLASSIFICATION	1.4118859834376084E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999994969484667	WITHOUT_CLASSIFICATION	5.030515333401991E-7	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999997892299574	WITHOUT_CLASSIFICATION	2.107700427776441E-7	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999951637731943	WITHOUT_CLASSIFICATION	4.8362268057557085E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999022368465	WITHOUT_CLASSIFICATION	9.776315348527789E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999938226066994	WITHOUT_CLASSIFICATION	6.177393300535282E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999989342049426	WITHOUT_CLASSIFICATION	1.0657950574702174E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9990060490670591	WITHOUT_CLASSIFICATION	9.939509329407908E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999951637731943	WITHOUT_CLASSIFICATION	4.8362268057557085E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998509763456	WITHOUT_CLASSIFICATION	1.4902365446700152E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999967709957172	WITHOUT_CLASSIFICATION	3.2290042829062126E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999967709957172	WITHOUT_CLASSIFICATION	3.2290042829062126E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999995731567985	WITHOUT_CLASSIFICATION	4.268432013820587E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999995731567985	WITHOUT_CLASSIFICATION	4.268432013820587E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999995298727483	WITHOUT_CLASSIFICATION	4.7012725172607576E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999869591406	WITHOUT_CLASSIFICATION	1.3040859342696385E-8	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999998880997281	WITHOUT_CLASSIFICATION	1.11900271890003E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999996287067091	WITHOUT_CLASSIFICATION	3.7129329099028814E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999931995131917	WITHOUT_CLASSIFICATION	6.8004868082584754E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999931995131917	WITHOUT_CLASSIFICATION	6.8004868082584754E-6	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999232429789385	WITHOUT_CLASSIFICATION	7.675702106151844E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999822577974	WITHOUT_CLASSIFICATION	1.7742202594379603E-7	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999999945126743	WITHOUT_CLASSIFICATION	5.487325749945555E-9	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999996707566418	WITHOUT_CLASSIFICATION	3.2924335829911625E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999999096647723	WITHOUT_CLASSIFICATION	9.033522771518055E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974649737462	WITHOUT_CLASSIFICATION	2.535026253841949E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999999357125275	WITHOUT_CLASSIFICATION	6.428747245115817E-8	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999883379230521	WITHOUT_CLASSIFICATION	1.166207694789688E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999883379230521	WITHOUT_CLASSIFICATION	1.166207694789688E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999981074337013	WITHOUT_CLASSIFICATION	1.8925662987038817E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999999927404519	WITHOUT_CLASSIFICATION	7.259547990026893E-9	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.999999870948767	WITHOUT_CLASSIFICATION	1.29051233094512E-7	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9996859270049422	WITHOUT_CLASSIFICATION	3.140729950578826E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999664781597367	WITHOUT_CLASSIFICATION	3.352184026333405E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999604300288412	WITHOUT_CLASSIFICATION	3.956997115878099E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.999997440866898	WITHOUT_CLASSIFICATION	2.5591331020986825E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999360737999737	WITHOUT_CLASSIFICATION	6.392620002618791E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999959710126162	WITHOUT_CLASSIFICATION	4.028987383931924E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999986472454581	WITHOUT_CLASSIFICATION	1.3527545419221823E-6	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999999126203964	WITHOUT_CLASSIFICATION	8.737960348788662E-8	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999992843882737	WITHOUT_CLASSIFICATION	7.156117263894708E-7	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999950179542918	WITHOUT_CLASSIFICATION	4.982045708170528E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999952449251638	WITHOUT_CLASSIFICATION	4.755074836222708E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999996714956872	WITHOUT_CLASSIFICATION	3.285043127450506E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999989654722439	WITHOUT_CLASSIFICATION	1.0345277560878967E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999744320569	WITHOUT_CLASSIFICATION	2.5567943092626305E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999983561936089	WITHOUT_CLASSIFICATION	1.6438063910521199E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999988465043269	WITHOUT_CLASSIFICATION	1.1534956731534497E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999951726193019	WITHOUT_CLASSIFICATION	4.827380698123448E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999998664097878	WITHOUT_CLASSIFICATION	1.3359021216908482E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999201322026	WITHOUT_CLASSIFICATION	7.98677974372016E-8	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999986283349144	WITHOUT_CLASSIFICATION	1.3716650856337937E-6	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999999822474236	WITHOUT_CLASSIFICATION	1.775257648833268E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999822577974	WITHOUT_CLASSIFICATION	1.7742202594379603E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999999096647723	WITHOUT_CLASSIFICATION	9.033522771518055E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999999096647723	WITHOUT_CLASSIFICATION	9.033522771518055E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999870888894	WITHOUT_CLASSIFICATION	1.2911110605923018E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999870888894	WITHOUT_CLASSIFICATION	1.2911110605923018E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999870888894	WITHOUT_CLASSIFICATION	1.2911110605923018E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999870888894	WITHOUT_CLASSIFICATION	1.2911110605923018E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974649737462	WITHOUT_CLASSIFICATION	2.535026253841949E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974649737462	WITHOUT_CLASSIFICATION	2.535026253841949E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974649737462	WITHOUT_CLASSIFICATION	2.535026253841949E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974649737462	WITHOUT_CLASSIFICATION	2.535026253841949E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999986283349144	WITHOUT_CLASSIFICATION	1.3716650856337937E-6	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9997397762028334	WITHOUT_CLASSIFICATION	2.602237971666507E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9997065255624986	WITHOUT_CLASSIFICATION	2.9347443750137926E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999858753722786	WITHOUT_CLASSIFICATION	1.412462772146871E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999996382908793	WITHOUT_CLASSIFICATION	3.6170912064563293E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999885439919087	WITHOUT_CLASSIFICATION	1.145600809123434E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.999995941209359	WITHOUT_CLASSIFICATION	4.058790640973215E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999968393037247	WITHOUT_CLASSIFICATION	3.1606962752906062E-6	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.999999765762517	WITHOUT_CLASSIFICATION	2.342374828212654E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999751749129	WITHOUT_CLASSIFICATION	2.4825087096508142E-8	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999751749129	WITHOUT_CLASSIFICATION	2.4825087096508142E-8	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999997311010637	WITHOUT_CLASSIFICATION	2.688989364007457E-7	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.999995586063979	WITHOUT_CLASSIFICATION	4.413936020977652E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9994049709441722	WITHOUT_CLASSIFICATION	5.950290558277477E-4	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9997086740472059	WITHOUT_CLASSIFICATION	2.9132595279414235E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999256876053069	WITHOUT_CLASSIFICATION	7.431239469308452E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999575601197804	WITHOUT_CLASSIFICATION	4.2439880219568354E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.999947846588268	WITHOUT_CLASSIFICATION	5.21534117319866E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999704088850686	WITHOUT_CLASSIFICATION	2.9591114931448963E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999934691086872	WITHOUT_CLASSIFICATION	6.530891312778932E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999956522286806	WITHOUT_CLASSIFICATION	4.347771319440795E-6	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998345596205	WITHOUT_CLASSIFICATION	1.6544037952151702E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998345596205	WITHOUT_CLASSIFICATION	1.6544037952151702E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999752319849082	WITHOUT_CLASSIFICATION	2.4768015091730065E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999999650779581	WITHOUT_CLASSIFICATION	3.4922041895921396E-8	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999979217689452	WITHOUT_CLASSIFICATION	2.0782310547652397E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999989872163021	WITHOUT_CLASSIFICATION	1.0127836979113817E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999971092993709	WITHOUT_CLASSIFICATION	2.890700629100426E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999971092993709	WITHOUT_CLASSIFICATION	2.890700629100426E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999836251186005	WITHOUT_CLASSIFICATION	1.637488139945481E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999836251186005	WITHOUT_CLASSIFICATION	1.637488139945481E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999836251186005	WITHOUT_CLASSIFICATION	1.637488139945481E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999991573581153	WITHOUT_CLASSIFICATION	8.426418846922808E-7	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999998333654025	WITHOUT_CLASSIFICATION	1.6663459735503318E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999357647931	WITHOUT_CLASSIFICATION	6.423520682864034E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999984493706529	WITHOUT_CLASSIFICATION	1.5506293471108013E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999752319849082	WITHOUT_CLASSIFICATION	2.4768015091730065E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999900619868	WITHOUT_CLASSIFICATION	9.93801328199815E-9	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999836251186005	WITHOUT_CLASSIFICATION	1.637488139945481E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999836251186005	WITHOUT_CLASSIFICATION	1.637488139945481E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999836251186005	WITHOUT_CLASSIFICATION	1.637488139945481E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999991573581153	WITHOUT_CLASSIFICATION	8.426418846922808E-7	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999998333654025	WITHOUT_CLASSIFICATION	1.6663459735503318E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999844459028	WITHOUT_CLASSIFICATION	1.555409730787242E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999914925292354	WITHOUT_CLASSIFICATION	8.507470764604348E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999995250521208	WITHOUT_CLASSIFICATION	4.749478793310551E-7	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999923788938665	WITHOUT_CLASSIFICATION	7.6211061334930146E-6	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999968472607498	WITHOUT_CLASSIFICATION	3.1527392501494524E-6	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9987949485297747	WITHOUT_CLASSIFICATION	0.0012050514702253066	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9997730311026012	WITHOUT_CLASSIFICATION	2.2696889739871857E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999964251455042	WITHOUT_CLASSIFICATION	3.574854495679534E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999964251455042	WITHOUT_CLASSIFICATION	3.574854495679534E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999451187703	WITHOUT_CLASSIFICATION	5.488122957936917E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999831131456	WITHOUT_CLASSIFICATION	1.6886854360497574E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999994945576225	WITHOUT_CLASSIFICATION	5.054423775773712E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999995543889197	WITHOUT_CLASSIFICATION	4.4561108021897435E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.999999679026003	WITHOUT_CLASSIFICATION	3.209739971145682E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999998947740343	WITHOUT_CLASSIFICATION	1.0522596573255954E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998368540295	WITHOUT_CLASSIFICATION	1.631459705380603E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998368540295	WITHOUT_CLASSIFICATION	1.631459705380603E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998368540295	WITHOUT_CLASSIFICATION	1.631459705380603E-7	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999861999343437	WITHOUT_CLASSIFICATION	1.3800065656406405E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999985849632904	WITHOUT_CLASSIFICATION	1.415036709624643E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999992808815504	WITHOUT_CLASSIFICATION	7.191184496155653E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.999999937241811	WITHOUT_CLASSIFICATION	6.27581889540206E-8	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999991236347346	WITHOUT_CLASSIFICATION	8.763652652145583E-7	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999999591799854	WITHOUT_CLASSIFICATION	4.082001454822047E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999863099439	WITHOUT_CLASSIFICATION	1.3690056224554986E-8	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999990973092041	WITHOUT_CLASSIFICATION	9.026907959263814E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999990973092041	WITHOUT_CLASSIFICATION	9.026907959263814E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999994733805181	WITHOUT_CLASSIFICATION	5.266194818718906E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.999999907936143	WITHOUT_CLASSIFICATION	9.206385703950196E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999989342049426	WITHOUT_CLASSIFICATION	1.0657950574702174E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999989342049426	WITHOUT_CLASSIFICATION	1.0657950574702174E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999869591406	WITHOUT_CLASSIFICATION	1.3040859342696385E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999914925292354	WITHOUT_CLASSIFICATION	8.507470764604348E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999964251455042	WITHOUT_CLASSIFICATION	3.574854495679534E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.999999937241811	WITHOUT_CLASSIFICATION	6.27581889540206E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.999999937241811	WITHOUT_CLASSIFICATION	6.27581889540206E-8	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999992808815504	WITHOUT_CLASSIFICATION	7.191184496155653E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999844459028	WITHOUT_CLASSIFICATION	1.555409730787242E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999863099439	WITHOUT_CLASSIFICATION	1.3690056224554986E-8	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999999591799854	WITHOUT_CLASSIFICATION	4.082001454822047E-8	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999995943242292	WITHOUT_CLASSIFICATION	4.056757706681896E-7	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9996488773057146	WITHOUT_CLASSIFICATION	3.511226942853146E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999956037147	WITHOUT_CLASSIFICATION	4.396285360203807E-9	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.999956376603096	WITHOUT_CLASSIFICATION	4.3623396903934834E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.999999496413125	WITHOUT_CLASSIFICATION	5.03586874970216E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.999999496413125	WITHOUT_CLASSIFICATION	5.03586874970216E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999993071246833	WITHOUT_CLASSIFICATION	6.928753168049851E-7	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999994283631272	WITHOUT_CLASSIFICATION	5.716368728504679E-7	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999996826911716	WITHOUT_CLASSIFICATION	3.173088284277747E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999999311181813	WITHOUT_CLASSIFICATION	6.888181873260798E-8	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999443355958	WITHOUT_CLASSIFICATION	5.56644041170457E-8	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999999188879444	WITHOUT_CLASSIFICATION	8.111205561789904E-8	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999999563511597	WITHOUT_CLASSIFICATION	4.364884022243088E-8	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999999426309533	WITHOUT_CLASSIFICATION	5.7369046744188434E-8	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999984871703905	WITHOUT_CLASSIFICATION	1.5128296094838374E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999968534231238	WITHOUT_CLASSIFICATION	3.146576876210211E-6	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999472451961919	WITHOUT_CLASSIFICATION	5.275480380800772E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999770824663505	WITHOUT_CLASSIFICATION	2.291753364949223E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.999999870726154	WITHOUT_CLASSIFICATION	1.2927384606757075E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999916411671378	WITHOUT_CLASSIFICATION	8.358832862195392E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999907867141206	WITHOUT_CLASSIFICATION	9.213285879376371E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999967649615409	WITHOUT_CLASSIFICATION	3.2350384590990764E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999947141379146	WITHOUT_CLASSIFICATION	5.285862085330727E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999998915176345	WITHOUT_CLASSIFICATION	1.0848236542580533E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999986551643448	WITHOUT_CLASSIFICATION	1.3448356551254118E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999998891890173	WITHOUT_CLASSIFICATION	1.1081098274230839E-7	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.999995390669807	WITHOUT_CLASSIFICATION	4.609330193019896E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999997776162474	WITHOUT_CLASSIFICATION	2.2238375273644966E-7	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999961696285032	WITHOUT_CLASSIFICATION	3.8303714968475045E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999999248468407	WITHOUT_CLASSIFICATION	7.515315925219663E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999997945477268	WITHOUT_CLASSIFICATION	2.054522731722466E-7	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999990799469114	WITHOUT_CLASSIFICATION	9.200530886535321E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999991297357962	WITHOUT_CLASSIFICATION	8.702642038325006E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999990939129249	WITHOUT_CLASSIFICATION	9.060870750166257E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999998011847159	WITHOUT_CLASSIFICATION	1.9881528410050803E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999989342049426	WITHOUT_CLASSIFICATION	1.0657950574702174E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999986551643448	WITHOUT_CLASSIFICATION	1.3448356551254118E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999972889945389	WITHOUT_CLASSIFICATION	2.7110054611670605E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.99999289765327	WITHOUT_CLASSIFICATION	7.102346730039234E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999932935292265	WITHOUT_CLASSIFICATION	6.706470773587253E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999998079088382	WITHOUT_CLASSIFICATION	1.9209116182006384E-7	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.999999968135768	WITHOUT_CLASSIFICATION	3.186423204207755E-8	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.999999960785905	WITHOUT_CLASSIFICATION	3.921409500996518E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999730763653	WITHOUT_CLASSIFICATION	2.6923634649942134E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999981130145	WITHOUT_CLASSIFICATION	1.8869853683696537E-9	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999934718305502	WITHOUT_CLASSIFICATION	6.528169449789463E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999985176235365	WITHOUT_CLASSIFICATION	1.4823764633728328E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996383558310747	WITHOUT_CLASSIFICATION	3.6164416892525865E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.999530191450288	WITHOUT_CLASSIFICATION	4.698085497121061E-4	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999958548430575	WITHOUT_CLASSIFICATION	4.1451569425391615E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999975085346124	WITHOUT_CLASSIFICATION	2.4914653876179932E-6	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999986348674179	WITHOUT_CLASSIFICATION	1.365132582051036E-6	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9997788829857003	WITHOUT_CLASSIFICATION	2.2111701429965744E-4	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999999551484565	WITHOUT_CLASSIFICATION	4.4851543446838216E-8	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999983832217749	WITHOUT_CLASSIFICATION	1.6167782250969468E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999912889035388	WITHOUT_CLASSIFICATION	8.711096461139767E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999866021414069	WITHOUT_CLASSIFICATION	1.3397858593055777E-5	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999956552681348	WITHOUT_CLASSIFICATION	4.344731865103735E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999990285761	WITHOUT_CLASSIFICATION	9.71423903198145E-10	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999997052856009	WITHOUT_CLASSIFICATION	2.9471439903797285E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999997052856009	WITHOUT_CLASSIFICATION	2.9471439903797285E-7	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999996996467754	WITHOUT_CLASSIFICATION	3.0035322453442115E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999906851800521	WITHOUT_CLASSIFICATION	9.314819947934207E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999996354704199	WITHOUT_CLASSIFICATION	3.645295800791004E-7	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9999206057845352	WITHOUT_CLASSIFICATION	7.939421546477736E-5	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999997924044418	WITHOUT_CLASSIFICATION	2.0759555808277784E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999982718312274	WITHOUT_CLASSIFICATION	1.7281687726953042E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999999658793441	WITHOUT_CLASSIFICATION	3.412065578789338E-8	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999287809037	WITHOUT_CLASSIFICATION	7.121909626588916E-8	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999998307986954	WITHOUT_CLASSIFICATION	1.6920130476357365E-7	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999993305905759	WITHOUT_CLASSIFICATION	6.694094241244927E-7	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9998580828625234	WITHOUT_CLASSIFICATION	1.4191713747647463E-4	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999998685813284	WITHOUT_CLASSIFICATION	1.3141867160515358E-7	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999983725677751	WITHOUT_CLASSIFICATION	1.6274322249705666E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999953598420998	WITHOUT_CLASSIFICATION	4.640157900327966E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9987786295773126	WITHOUT_CLASSIFICATION	0.0012213704226875179	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999916201803	WITHOUT_CLASSIFICATION	8.379819691742021E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999999630934053	WITHOUT_CLASSIFICATION	3.690659461193441E-8	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998816111852327	WITHOUT_CLASSIFICATION	1.1838881476731612E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998816111852327	WITHOUT_CLASSIFICATION	1.1838881476731612E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998816111852327	WITHOUT_CLASSIFICATION	1.1838881476731612E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999930109490033	WITHOUT_CLASSIFICATION	6.989050996659198E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999944596149948	WITHOUT_CLASSIFICATION	5.540385005167799E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999944596149948	WITHOUT_CLASSIFICATION	5.540385005167799E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999990578510716	WITHOUT_CLASSIFICATION	9.421489283679223E-7	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999913910960376	WITHOUT_CLASSIFICATION	8.608903962379322E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999962066661883	WITHOUT_CLASSIFICATION	3.793333811613149E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999983318065568	WITHOUT_CLASSIFICATION	1.6681934431592687E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999983318065568	WITHOUT_CLASSIFICATION	1.6681934431592687E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999993582257748	WITHOUT_CLASSIFICATION	6.417742252765837E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999990767930532	WITHOUT_CLASSIFICATION	9.23206946726192E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999115584178	WITHOUT_CLASSIFICATION	8.844158221230509E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999896004335	WITHOUT_CLASSIFICATION	1.0399566486762663E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999988725132405	WITHOUT_CLASSIFICATION	1.1274867595109304E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999115584178	WITHOUT_CLASSIFICATION	8.844158221230509E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999896004335	WITHOUT_CLASSIFICATION	1.0399566486762663E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999998863485275	WITHOUT_CLASSIFICATION	1.1365147246659633E-7	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999996668856787	WITHOUT_CLASSIFICATION	3.331143213785531E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999999106912252	WITHOUT_CLASSIFICATION	8.930877470562409E-8	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999999106912252	WITHOUT_CLASSIFICATION	8.930877470562409E-8	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999985445135949	WITHOUT_CLASSIFICATION	1.4554864051258657E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999976099543479	WITHOUT_CLASSIFICATION	2.3900456520349422E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999913118864685	WITHOUT_CLASSIFICATION	8.688113531477367E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.999997600075672	WITHOUT_CLASSIFICATION	2.399924327992958E-6	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999976131103078	WITHOUT_CLASSIFICATION	2.38688969219287E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999991911426406	WITHOUT_CLASSIFICATION	8.088573593770797E-7	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999688747614066	WITHOUT_CLASSIFICATION	3.112523859329535E-5	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999997589508285	WITHOUT_CLASSIFICATION	2.4104917152839447E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999787648117906	WITHOUT_CLASSIFICATION	2.123518820938302E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999964002977049	WITHOUT_CLASSIFICATION	3.599702295083499E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999290061574391	WITHOUT_CLASSIFICATION	7.099384256087616E-5	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.999995186333817	WITHOUT_CLASSIFICATION	4.8136661829747466E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999998007572889	WITHOUT_CLASSIFICATION	1.9924271106546648E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999922998249066	WITHOUT_CLASSIFICATION	7.700175093395917E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998115824534849	WITHOUT_CLASSIFICATION	1.8841754651516819E-4	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999716195496	WITHOUT_CLASSIFICATION	2.8380450478603352E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999827250391	WITHOUT_CLASSIFICATION	1.7274960975904267E-8	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999999458793993	WITHOUT_CLASSIFICATION	5.412060072534021E-8	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988150755431	WITHOUT_CLASSIFICATION	1.1849244569597945E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999973121671561	WITHOUT_CLASSIFICATION	2.687832843806917E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999837272070756	WITHOUT_CLASSIFICATION	1.62727929244131E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999984295009907	WITHOUT_CLASSIFICATION	1.5704990092930596E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999939010495226	WITHOUT_CLASSIFICATION	6.098950477495334E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999996714956872	WITHOUT_CLASSIFICATION	3.285043127450506E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999996714956872	WITHOUT_CLASSIFICATION	3.285043127450506E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999989654722439	WITHOUT_CLASSIFICATION	1.0345277560878967E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999989654722439	WITHOUT_CLASSIFICATION	1.0345277560878967E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999744320569	WITHOUT_CLASSIFICATION	2.5567943092626305E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999744320569	WITHOUT_CLASSIFICATION	2.5567943092626305E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999443355958	WITHOUT_CLASSIFICATION	5.56644041170457E-8	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996383558310747	WITHOUT_CLASSIFICATION	3.6164416892525865E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998816111852327	WITHOUT_CLASSIFICATION	1.1838881476731612E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998816111852327	WITHOUT_CLASSIFICATION	1.1838881476731612E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999944596149948	WITHOUT_CLASSIFICATION	5.540385005167799E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999944596149948	WITHOUT_CLASSIFICATION	5.540385005167799E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999944596149948	WITHOUT_CLASSIFICATION	5.540385005167799E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999913910960376	WITHOUT_CLASSIFICATION	8.608903962379322E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999913910960376	WITHOUT_CLASSIFICATION	8.608903962379322E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999913910960376	WITHOUT_CLASSIFICATION	8.608903962379322E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999930109490033	WITHOUT_CLASSIFICATION	6.989050996659198E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999930109490033	WITHOUT_CLASSIFICATION	6.989050996659198E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999922998249066	WITHOUT_CLASSIFICATION	7.700175093395917E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998115824534849	WITHOUT_CLASSIFICATION	1.8841754651516819E-4	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999755418915	WITHOUT_CLASSIFICATION	2.4458108617506038E-8	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999995533519693	WITHOUT_CLASSIFICATION	4.4664803064424875E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.99999976570277	WITHOUT_CLASSIFICATION	2.3429722988188428E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.99999976570277	WITHOUT_CLASSIFICATION	2.3429722988188428E-7	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999982565752823	WITHOUT_CLASSIFICATION	1.743424717769338E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999803791113	WITHOUT_CLASSIFICATION	1.9620888701482392E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.99999976570277	WITHOUT_CLASSIFICATION	2.3429722988188428E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999948672406866	WITHOUT_CLASSIFICATION	5.132759313385047E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999919531679949	WITHOUT_CLASSIFICATION	8.046832004981743E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999919531679949	WITHOUT_CLASSIFICATION	8.046832004981743E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999919531679949	WITHOUT_CLASSIFICATION	8.046832004981743E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999999195557446	WITHOUT_CLASSIFICATION	8.044425539747131E-8	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999999184490317	WITHOUT_CLASSIFICATION	8.155096831831585E-8	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.999962266533046	WITHOUT_CLASSIFICATION	3.773346695394783E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999709713743	WITHOUT_CLASSIFICATION	2.9028625705985207E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999709713743	WITHOUT_CLASSIFICATION	2.9028625705985207E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998857256236	WITHOUT_CLASSIFICATION	1.1427437644332416E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999784059897877	WITHOUT_CLASSIFICATION	2.1594010212401898E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999837272070756	WITHOUT_CLASSIFICATION	1.62727929244131E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999984295009907	WITHOUT_CLASSIFICATION	1.5704990092930596E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999996714956872	WITHOUT_CLASSIFICATION	3.285043127450506E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999989654722439	WITHOUT_CLASSIFICATION	1.0345277560878967E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999744320569	WITHOUT_CLASSIFICATION	2.5567943092626305E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9994490133523264	WITHOUT_CLASSIFICATION	5.509866476736257E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999964251455042	WITHOUT_CLASSIFICATION	3.574854495679534E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999964251455042	WITHOUT_CLASSIFICATION	3.574854495679534E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999443355958	WITHOUT_CLASSIFICATION	5.56644041170457E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998115824534849	WITHOUT_CLASSIFICATION	1.8841754651516819E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998115824534849	WITHOUT_CLASSIFICATION	1.8841754651516819E-4	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988150755431	WITHOUT_CLASSIFICATION	1.1849244569597945E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.99999976570277	WITHOUT_CLASSIFICATION	2.3429722988188428E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999919531679949	WITHOUT_CLASSIFICATION	8.046832004981743E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999803791113	WITHOUT_CLASSIFICATION	1.9620888701482392E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999948672406866	WITHOUT_CLASSIFICATION	5.132759313385047E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999948672406866	WITHOUT_CLASSIFICATION	5.132759313385047E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999999195557446	WITHOUT_CLASSIFICATION	8.044425539747131E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999709713743	WITHOUT_CLASSIFICATION	2.9028625705985207E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998857256236	WITHOUT_CLASSIFICATION	1.1427437644332416E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999995115729262	WITHOUT_CLASSIFICATION	4.884270736746553E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999995115729262	WITHOUT_CLASSIFICATION	4.884270736746553E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999995115729262	WITHOUT_CLASSIFICATION	4.884270736746553E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998803334206	WITHOUT_CLASSIFICATION	1.196665794406577E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998803334206	WITHOUT_CLASSIFICATION	1.196665794406577E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998803334206	WITHOUT_CLASSIFICATION	1.196665794406577E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999948792611584	WITHOUT_CLASSIFICATION	5.120738841690203E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999993069544019	WITHOUT_CLASSIFICATION	6.930455981268756E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999741166056735	WITHOUT_CLASSIFICATION	2.588339432649869E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999857538257881	WITHOUT_CLASSIFICATION	1.4246174211935365E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.999999567641148	WITHOUT_CLASSIFICATION	4.3235885207297555E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999989089865038	WITHOUT_CLASSIFICATION	1.0910134962787758E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.999999743712723	WITHOUT_CLASSIFICATION	2.562872769937806E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999380084665415	WITHOUT_CLASSIFICATION	6.199153345846292E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999041276029	WITHOUT_CLASSIFICATION	9.587239710678413E-8	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999916788466741	WITHOUT_CLASSIFICATION	8.321153325938972E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999978022944132	WITHOUT_CLASSIFICATION	2.197705586770797E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999951309584812	WITHOUT_CLASSIFICATION	4.869041518762556E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9995135284770109	WITHOUT_CLASSIFICATION	4.8647152298902295E-4	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.999998733876204	WITHOUT_CLASSIFICATION	1.266123796017266E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999996640657749	WITHOUT_CLASSIFICATION	3.3593422506927215E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999837272070756	WITHOUT_CLASSIFICATION	1.62727929244131E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.999984295009907	WITHOUT_CLASSIFICATION	1.5704990092930596E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995376222693	WITHOUT_CLASSIFICATION	4.623777307437269E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.999999551647789	WITHOUT_CLASSIFICATION	4.4835221091500494E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999995441725124	WITHOUT_CLASSIFICATION	4.5582748766414944E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999996714956872	WITHOUT_CLASSIFICATION	3.285043127450506E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999989654722439	WITHOUT_CLASSIFICATION	1.0345277560878967E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999744320569	WITHOUT_CLASSIFICATION	2.5567943092626305E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999443355958	WITHOUT_CLASSIFICATION	5.56644041170457E-8	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999991078352786	WITHOUT_CLASSIFICATION	8.921647214240089E-7	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999577759323479	WITHOUT_CLASSIFICATION	4.2224067652038235E-5	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9987786295773126	WITHOUT_CLASSIFICATION	0.0012213704226875179	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999922998249066	WITHOUT_CLASSIFICATION	7.700175093395917E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998115824534849	WITHOUT_CLASSIFICATION	1.8841754651516819E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999919531679949	WITHOUT_CLASSIFICATION	8.046832004981743E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999803791113	WITHOUT_CLASSIFICATION	1.9620888701482392E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999948672406866	WITHOUT_CLASSIFICATION	5.132759313385047E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.999962266533046	WITHOUT_CLASSIFICATION	3.773346695394783E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999784059897877	WITHOUT_CLASSIFICATION	2.1594010212401898E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999741166056735	WITHOUT_CLASSIFICATION	2.588339432649869E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999857538257881	WITHOUT_CLASSIFICATION	1.4246174211935365E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999999520824464	WITHOUT_CLASSIFICATION	4.7917553473644035E-8	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999989778898565	WITHOUT_CLASSIFICATION	1.022110143580847E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999999509226489	WITHOUT_CLASSIFICATION	4.907735098872716E-8	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999064512227	WITHOUT_CLASSIFICATION	9.354877732842564E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.999999942470528	WITHOUT_CLASSIFICATION	5.752947195285609E-8	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999908232429089	WITHOUT_CLASSIFICATION	9.176757091110993E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999993715260983	WITHOUT_CLASSIFICATION	6.284739016220265E-7	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999615716916193	WITHOUT_CLASSIFICATION	3.842830838066794E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999998549235938	WITHOUT_CLASSIFICATION	1.4507640616366112E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999945183565362	WITHOUT_CLASSIFICATION	5.481643463812955E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999953379917074	WITHOUT_CLASSIFICATION	4.662008292538998E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999953379917074	WITHOUT_CLASSIFICATION	4.662008292538998E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999958548887178	WITHOUT_CLASSIFICATION	4.145111282218548E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999958548887178	WITHOUT_CLASSIFICATION	4.145111282218548E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999983391802892	WITHOUT_CLASSIFICATION	1.660819710667336E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999995716141598	WITHOUT_CLASSIFICATION	4.28385840204699E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999976170639552	WITHOUT_CLASSIFICATION	2.3829360447522707E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999976623571171	WITHOUT_CLASSIFICATION	2.337642883000728E-6	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999998181586335	WITHOUT_CLASSIFICATION	1.8184136661629664E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999982235795037	WITHOUT_CLASSIFICATION	1.7764204963005665E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999043792531511	WITHOUT_CLASSIFICATION	9.562074684879064E-5	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9953587372049398	WITHOUT_CLASSIFICATION	0.0046412627950601915	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999166272608	WITHOUT_CLASSIFICATION	8.33727391593725E-8	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.999998198972783	WITHOUT_CLASSIFICATION	1.8010272170635221E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.999999984094614	WITHOUT_CLASSIFICATION	1.5905386024999846E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999999317614786	WITHOUT_CLASSIFICATION	6.823852135724596E-8	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999925160596717	WITHOUT_CLASSIFICATION	7.483940328371799E-6	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999994327824709	WITHOUT_CLASSIFICATION	5.672175289768729E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999999068338033	WITHOUT_CLASSIFICATION	9.316619669335763E-7	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999996889917699	WITHOUT_CLASSIFICATION	3.110082300871581E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9986012606742782	WITHOUT_CLASSIFICATION	0.0013987393257217783	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999572008749313	WITHOUT_CLASSIFICATION	4.279912506859406E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999998140546134	WITHOUT_CLASSIFICATION	1.8594538661016896E-7	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999996650918074	WITHOUT_CLASSIFICATION	3.349081926794001E-7	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9996098645778978	WITHOUT_CLASSIFICATION	3.9013542210220795E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999997739279117	WITHOUT_CLASSIFICATION	2.2607208830080095E-7	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9997985199135861	WITHOUT_CLASSIFICATION	2.0148008641390598E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999866513217711	WITHOUT_CLASSIFICATION	1.3348678228856884E-5	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999996575402346	WITHOUT_CLASSIFICATION	3.4245976542397753E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999043792531511	WITHOUT_CLASSIFICATION	9.562074684879064E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999043792531511	WITHOUT_CLASSIFICATION	9.562074684879064E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999752865691	WITHOUT_CLASSIFICATION	2.471343090336565E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999741992582	WITHOUT_CLASSIFICATION	2.5800741798342192E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999741992582	WITHOUT_CLASSIFICATION	2.5800741798342192E-8	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999999770526032	WITHOUT_CLASSIFICATION	2.2947396846821653E-8	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9992902409511265	WITHOUT_CLASSIFICATION	7.097590488735542E-4	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999998723077143	WITHOUT_CLASSIFICATION	1.2769228565729379E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999824994280004	WITHOUT_CLASSIFICATION	1.750057199964821E-5	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999963397992	WITHOUT_CLASSIFICATION	3.6602007486705087E-9	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999565074216067	WITHOUT_CLASSIFICATION	4.349257839330074E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999565074216067	WITHOUT_CLASSIFICATION	4.349257839330074E-5	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999619194049	WITHOUT_CLASSIFICATION	3.808059515817542E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983600739	WITHOUT_CLASSIFICATION	1.6399259927732887E-9	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985498369615	WITHOUT_CLASSIFICATION	1.4501630385503366E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999919800629745	WITHOUT_CLASSIFICATION	8.01993702550761E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999835958346502	WITHOUT_CLASSIFICATION	1.640416534982001E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.999998230540094	WITHOUT_CLASSIFICATION	1.7694599060647474E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999538374178832	WITHOUT_CLASSIFICATION	4.616258211680014E-5	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999997022873989	WITHOUT_CLASSIFICATION	2.9771260119345946E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999999529008139	WITHOUT_CLASSIFICATION	4.709918612700515E-8	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999966772757658	WITHOUT_CLASSIFICATION	3.3227242341253676E-6	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999994953811955	WITHOUT_CLASSIFICATION	5.046188045642679E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999982858382278	WITHOUT_CLASSIFICATION	1.7141617721996798E-6	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999810426733339	WITHOUT_CLASSIFICATION	1.89573266660289E-5	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999971978492	WITHOUT_CLASSIFICATION	2.8021509494731995E-9	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.999999797032764	WITHOUT_CLASSIFICATION	2.0296723594912363E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999514655081214	WITHOUT_CLASSIFICATION	4.853449187856334E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999998186395979	WITHOUT_CLASSIFICATION	1.813604020831788E-7	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999339211610268	WITHOUT_CLASSIFICATION	6.607883897328882E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999858770235	WITHOUT_CLASSIFICATION	1.4122976535611915E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.99999980924668	WITHOUT_CLASSIFICATION	1.9075331989813575E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999689419515408	WITHOUT_CLASSIFICATION	3.105804845918407E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999960372605676	WITHOUT_CLASSIFICATION	3.96273943236712E-6	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999199290969	WITHOUT_CLASSIFICATION	8.007090307576074E-8	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999950509626	WITHOUT_CLASSIFICATION	4.9490374178696826E-9	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994510036331	WITHOUT_CLASSIFICATION	5.489963668892427E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999989807546308	WITHOUT_CLASSIFICATION	1.01924536914689E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999995625309128	WITHOUT_CLASSIFICATION	4.3746908707512704E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999995625309128	WITHOUT_CLASSIFICATION	4.3746908707512704E-7	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999999503792394	WITHOUT_CLASSIFICATION	4.962076070285177E-8	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999966990891	WITHOUT_CLASSIFICATION	3.300910790404408E-9	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.990935674965686	WITHOUT_CLASSIFICATION	0.009064325034313885	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999767310418711	WITHOUT_CLASSIFICATION	2.326895812884809E-5	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999947894588757	WITHOUT_CLASSIFICATION	5.21054112431269E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999982718312274	WITHOUT_CLASSIFICATION	1.7281687726953042E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999287809037	WITHOUT_CLASSIFICATION	7.121909626588916E-8	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999991078352786	WITHOUT_CLASSIFICATION	8.921647214240089E-7	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999577759323479	WITHOUT_CLASSIFICATION	4.2224067652038235E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998816111852327	WITHOUT_CLASSIFICATION	1.1838881476731612E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999922998249066	WITHOUT_CLASSIFICATION	7.700175093395917E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999922998249066	WITHOUT_CLASSIFICATION	7.700175093395917E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998115824534849	WITHOUT_CLASSIFICATION	1.8841754651516819E-4	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999996332989247	WITHOUT_CLASSIFICATION	3.6670107539180446E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988150755431	WITHOUT_CLASSIFICATION	1.1849244569597945E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999988150755431	WITHOUT_CLASSIFICATION	1.1849244569597945E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.99999976570277	WITHOUT_CLASSIFICATION	2.3429722988188428E-7	DEFECT
// open	WITHOUT_CLASSIFICATION	0.999992198455214	WITHOUT_CLASSIFICATION	7.801544785988621E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999803791113	WITHOUT_CLASSIFICATION	1.9620888701482392E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999709713743	WITHOUT_CLASSIFICATION	2.9028625705985207E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998857256236	WITHOUT_CLASSIFICATION	1.1427437644332416E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998857256236	WITHOUT_CLASSIFICATION	1.1427437644332416E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999987573536359	WITHOUT_CLASSIFICATION	1.2426463641347236E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999999520824464	WITHOUT_CLASSIFICATION	4.7917553473644035E-8	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999999520824464	WITHOUT_CLASSIFICATION	4.7917553473644035E-8	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999989778898565	WITHOUT_CLASSIFICATION	1.022110143580847E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999989778898565	WITHOUT_CLASSIFICATION	1.022110143580847E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999199597783197	WITHOUT_CLASSIFICATION	8.004022168033504E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999958722807081	WITHOUT_CLASSIFICATION	4.127719291910533E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999487279176	WITHOUT_CLASSIFICATION	5.12720824138753E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999487279176	WITHOUT_CLASSIFICATION	5.12720824138753E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999958722807081	WITHOUT_CLASSIFICATION	4.127719291910533E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999982024866841	WITHOUT_CLASSIFICATION	1.7975133158610207E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999199597783197	WITHOUT_CLASSIFICATION	8.004022168033504E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999989789	WITHOUT_CLASSIFICATION	1.0211469618324515E-12	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999931783	WITHOUT_CLASSIFICATION	6.8215696908800456E-12	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999997593824	WITHOUT_CLASSIFICATION	2.406176841920328E-10	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994232401849	WITHOUT_CLASSIFICATION	5.767598150601803E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999726172474	WITHOUT_CLASSIFICATION	2.738275259538914E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999752278075275	WITHOUT_CLASSIFICATION	2.4772192472541173E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999950131556192	WITHOUT_CLASSIFICATION	4.986844380761113E-6	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999950131556192	WITHOUT_CLASSIFICATION	4.986844380761113E-6	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.999997314344249	WITHOUT_CLASSIFICATION	2.6856557509907645E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999999076701663	WITHOUT_CLASSIFICATION	9.232983370847195E-7	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999999076701663	WITHOUT_CLASSIFICATION	9.232983370847195E-7	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9998521006968216	WITHOUT_CLASSIFICATION	1.4789930317837745E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999999076701663	WITHOUT_CLASSIFICATION	9.232983370847195E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999931199689	WITHOUT_CLASSIFICATION	6.88003108294114E-9	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999997111512426	WITHOUT_CLASSIFICATION	2.88848757410382E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999940570867619	WITHOUT_CLASSIFICATION	5.942913238148775E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.999998011847159	WITHOUT_CLASSIFICATION	1.9881528410050803E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9987420103811038	WITHOUT_CLASSIFICATION	0.0012579896188961602	DEFECT
// todo: not serialized yet	DEFECT	0.9998157824581018	WITHOUT_CLASSIFICATION	1.8421754189819188E-4	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9913359256668048	WITHOUT_CLASSIFICATION	0.008664074333195226	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7907585280888044	WITHOUT_CLASSIFICATION	0.20924147191119558	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7907585280888044	WITHOUT_CLASSIFICATION	0.20924147191119558	DEFECT
// TODO: Check this result...	DEFECT	0.7987100817214744	WITHOUT_CLASSIFICATION	0.20128991827852563	DEFECT
// TODO: Check this result...	DEFECT	0.7987100817214744	WITHOUT_CLASSIFICATION	0.20128991827852563	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9988262086637927	WITHOUT_CLASSIFICATION	0.0011737913362073573	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9989872829144513	WITHOUT_CLASSIFICATION	0.0010127170855487766	DEFECT
