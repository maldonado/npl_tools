// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999991906203993	WITHOUT_CLASSIFICATION	8.093796006494439E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998852273799909	WITHOUT_CLASSIFICATION	1.1477262000905796E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999971504781098	WITHOUT_CLASSIFICATION	2.8495218903034174E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9970551995734048	WITHOUT_CLASSIFICATION	0.0029448004265950427	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995424227070477	WITHOUT_CLASSIFICATION	4.575772929523225E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998187271065	WITHOUT_CLASSIFICATION	1.8127289354595384E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999726923056732	WITHOUT_CLASSIFICATION	2.7307694326760293E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998443264353	WITHOUT_CLASSIFICATION	1.5567356469380834E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999489385147553	WITHOUT_CLASSIFICATION	5.106148524480365E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999967238400121	WITHOUT_CLASSIFICATION	3.2761599878155435E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999922338312909	WITHOUT_CLASSIFICATION	7.766168709140091E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983362948951	WITHOUT_CLASSIFICATION	1.6637051049244072E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996972194272505	WITHOUT_CLASSIFICATION	3.0278057274954977E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994531515246	WITHOUT_CLASSIFICATION	5.468484753945823E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996913521025	WITHOUT_CLASSIFICATION	3.0864789745329465E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998663215497	WITHOUT_CLASSIFICATION	1.3367845032477266E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999833859529544	WITHOUT_CLASSIFICATION	1.6614047045530886E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999726923056732	WITHOUT_CLASSIFICATION	2.7307694326760293E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999950351333303	WITHOUT_CLASSIFICATION	4.964866669711431E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999964945047203	WITHOUT_CLASSIFICATION	3.5054952796635106E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962481985848	WITHOUT_CLASSIFICATION	3.751801415296441E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999726760699457	WITHOUT_CLASSIFICATION	2.732393005437326E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999726760699457	WITHOUT_CLASSIFICATION	2.732393005437326E-5	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999996543905919	WITHOUT_CLASSIFICATION	3.456094080520317E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999832923558	WITHOUT_CLASSIFICATION	1.6707644207489973E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999936701707438	WITHOUT_CLASSIFICATION	6.329829256205051E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999124835573149	WITHOUT_CLASSIFICATION	8.751644268505788E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999952151053261	WITHOUT_CLASSIFICATION	4.784894673929405E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.999992477464191	WITHOUT_CLASSIFICATION	7.5225358089863045E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999845555898446	WITHOUT_CLASSIFICATION	1.5444410155406263E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999129156481495	WITHOUT_CLASSIFICATION	8.708435185047208E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999999295393438	WITHOUT_CLASSIFICATION	7.046065626526849E-8	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9986914710148505	WITHOUT_CLASSIFICATION	0.001308528985149604	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999777666320878	WITHOUT_CLASSIFICATION	2.223336791222942E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985716493826	WITHOUT_CLASSIFICATION	1.4283506174485949E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999989873877697	WITHOUT_CLASSIFICATION	1.0126122302997985E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999937507494321	WITHOUT_CLASSIFICATION	6.249250567979727E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999939082825673	WITHOUT_CLASSIFICATION	6.0917174326680246E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999809429822789	WITHOUT_CLASSIFICATION	1.9057017721065918E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999975993313462	WITHOUT_CLASSIFICATION	2.400668653662063E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999312803667	WITHOUT_CLASSIFICATION	6.871963336797085E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995222746381746	WITHOUT_CLASSIFICATION	4.777253618255386E-4	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999465516087	WITHOUT_CLASSIFICATION	5.344839136451692E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999996569537	WITHOUT_CLASSIFICATION	3.4304627085351996E-10	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999032036067951	WITHOUT_CLASSIFICATION	9.679639320482757E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999116364145569	WITHOUT_CLASSIFICATION	8.836358544302499E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999915881936511	WITHOUT_CLASSIFICATION	8.411806348925673E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999407256018	WITHOUT_CLASSIFICATION	5.9274398078166477E-8	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998708005936688	WITHOUT_CLASSIFICATION	1.2919940633114997E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9997924670590639	WITHOUT_CLASSIFICATION	2.0753294093610252E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999915881936511	WITHOUT_CLASSIFICATION	8.411806348925673E-6	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999968358208546	WITHOUT_CLASSIFICATION	3.1641791452873066E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999502342967516	WITHOUT_CLASSIFICATION	4.9765703248531933E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999910027132671	WITHOUT_CLASSIFICATION	8.997286732844528E-6	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.999968626682551	WITHOUT_CLASSIFICATION	3.1373317448985744E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999880539265548	WITHOUT_CLASSIFICATION	1.1946073445289825E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999865618227083	WITHOUT_CLASSIFICATION	1.3438177291721515E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998213184687	WITHOUT_CLASSIFICATION	1.7868153130507133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999407957698347	WITHOUT_CLASSIFICATION	5.9204230165418054E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999975293736515	WITHOUT_CLASSIFICATION	2.470626348518206E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999914012392911	WITHOUT_CLASSIFICATION	8.598760708896897E-6	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9962016100654394	WITHOUT_CLASSIFICATION	0.0037983899345605874	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999984673350446	WITHOUT_CLASSIFICATION	1.53266495543624E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9881231421916994	WITHOUT_CLASSIFICATION	0.011876857808300634	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9992993046269979	WITHOUT_CLASSIFICATION	7.006953730021245E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999717083621908	WITHOUT_CLASSIFICATION	2.8291637809232425E-5	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999998936474596	WITHOUT_CLASSIFICATION	1.0635254039011005E-7	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999484851588143	WITHOUT_CLASSIFICATION	5.151484118559575E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9995330445654764	WITHOUT_CLASSIFICATION	4.6695543452349305E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983362948951	WITHOUT_CLASSIFICATION	1.6637051049244072E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996972194272505	WITHOUT_CLASSIFICATION	3.0278057274954977E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994531515246	WITHOUT_CLASSIFICATION	5.468484753945823E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999874015618156	WITHOUT_CLASSIFICATION	1.2598438184359731E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999931358094399	WITHOUT_CLASSIFICATION	6.8641905599637384E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996913521025	WITHOUT_CLASSIFICATION	3.0864789745329465E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998663215497	WITHOUT_CLASSIFICATION	1.3367845032477266E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999833859529544	WITHOUT_CLASSIFICATION	1.6614047045530886E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.999988389890279	WITHOUT_CLASSIFICATION	1.161010972102376E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.999988389890279	WITHOUT_CLASSIFICATION	1.161010972102376E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.999988389890279	WITHOUT_CLASSIFICATION	1.161010972102376E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998187271065	WITHOUT_CLASSIFICATION	1.8127289354595384E-7	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999933251623762	WITHOUT_CLASSIFICATION	6.674837623758839E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999539950248	WITHOUT_CLASSIFICATION	4.6004975185727296E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999980030417476	WITHOUT_CLASSIFICATION	1.9969582524213844E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962481985848	WITHOUT_CLASSIFICATION	3.751801415296441E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985178726035	WITHOUT_CLASSIFICATION	1.4821273965259404E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999845555898446	WITHOUT_CLASSIFICATION	1.5444410155406263E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999129156481495	WITHOUT_CLASSIFICATION	8.708435185047208E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9986914710148505	WITHOUT_CLASSIFICATION	0.001308528985149604	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999989873877697	WITHOUT_CLASSIFICATION	1.0126122302997985E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9997435988780675	WITHOUT_CLASSIFICATION	2.564011219324623E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9998969648909849	WITHOUT_CLASSIFICATION	1.0303510901513606E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999987140596951	WITHOUT_CLASSIFICATION	1.285940304832302E-6	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999957915549991	WITHOUT_CLASSIFICATION	4.208445000833289E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999425532996497	WITHOUT_CLASSIFICATION	5.7446700350447786E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999975993313462	WITHOUT_CLASSIFICATION	2.400668653662063E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995222746381746	WITHOUT_CLASSIFICATION	4.777253618255386E-4	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999997931533118	WITHOUT_CLASSIFICATION	2.0684668815953345E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9995266419307343	WITHOUT_CLASSIFICATION	4.7335806926581336E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999998519756408	WITHOUT_CLASSIFICATION	1.4802435915477559E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999992980273874	WITHOUT_CLASSIFICATION	7.019726126244021E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999949978947988	WITHOUT_CLASSIFICATION	5.002105201125566E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999403962696833	WITHOUT_CLASSIFICATION	5.960373031672819E-5	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.999999125533387	WITHOUT_CLASSIFICATION	8.744666128810773E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.99999209081897	WITHOUT_CLASSIFICATION	7.909181029966344E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999729964780152	WITHOUT_CLASSIFICATION	2.7003521984875095E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999965305166498	WITHOUT_CLASSIFICATION	3.469483350197652E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999997717057976	WITHOUT_CLASSIFICATION	2.2829420244574641E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999729964780152	WITHOUT_CLASSIFICATION	2.7003521984875095E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999418201350102	WITHOUT_CLASSIFICATION	5.817986498989816E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999994119340069	WITHOUT_CLASSIFICATION	5.880659931432556E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999164038729	WITHOUT_CLASSIFICATION	8.359612708808077E-8	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999973972927405	WITHOUT_CLASSIFICATION	2.6027072594915483E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999729964780152	WITHOUT_CLASSIFICATION	2.7003521984875095E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999965305166498	WITHOUT_CLASSIFICATION	3.469483350197652E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999999188906359	WITHOUT_CLASSIFICATION	8.110936409527205E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999564052376	WITHOUT_CLASSIFICATION	4.3594762414899056E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999932102347668	WITHOUT_CLASSIFICATION	6.789765233127021E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999989720496741	WITHOUT_CLASSIFICATION	1.0279503258704067E-6	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998875348444	WITHOUT_CLASSIFICATION	1.1246515556965298E-7	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999451392739547	WITHOUT_CLASSIFICATION	5.486072604541809E-5	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999977945527897	WITHOUT_CLASSIFICATION	2.205447210243399E-6	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999513049561376	WITHOUT_CLASSIFICATION	4.869504386248512E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9997879192845399	WITHOUT_CLASSIFICATION	2.120807154601111E-4	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9997379558543789	WITHOUT_CLASSIFICATION	2.6204414562113745E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9917920983424147	WITHOUT_CLASSIFICATION	0.008207901657585373	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999995622293397	WITHOUT_CLASSIFICATION	4.3777066027211505E-7	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998777680882	WITHOUT_CLASSIFICATION	1.222319118397324E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999407256018	WITHOUT_CLASSIFICATION	5.9274398078166477E-8	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999661153713	WITHOUT_CLASSIFICATION	3.3884628587766825E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999957710742187	WITHOUT_CLASSIFICATION	4.228925781377119E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999751438538137	WITHOUT_CLASSIFICATION	2.485614618630328E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999702157495671	WITHOUT_CLASSIFICATION	2.9784250432894238E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999965159623322	WITHOUT_CLASSIFICATION	3.484037667746887E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999652654637368	WITHOUT_CLASSIFICATION	3.4734536263360015E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999361822021471	WITHOUT_CLASSIFICATION	6.381779785292375E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999661153713	WITHOUT_CLASSIFICATION	3.3884628587766825E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999957710742187	WITHOUT_CLASSIFICATION	4.228925781377119E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999097951589907	WITHOUT_CLASSIFICATION	9.020484100926747E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999097951589907	WITHOUT_CLASSIFICATION	9.020484100926747E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999665167849836	WITHOUT_CLASSIFICATION	3.348321501631996E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9235340189348492	WITHOUT_CLASSIFICATION	0.07646598106515075	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9997285574866894	WITHOUT_CLASSIFICATION	2.714425133104991E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999665167849836	WITHOUT_CLASSIFICATION	3.348321501631996E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9235340189348492	WITHOUT_CLASSIFICATION	0.07646598106515075	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.999998906592544	WITHOUT_CLASSIFICATION	1.0934074561292874E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9996235953774596	WITHOUT_CLASSIFICATION	3.764046225403367E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999992023294	WITHOUT_CLASSIFICATION	7.976705826029996E-10	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999999270535063	WITHOUT_CLASSIFICATION	7.29464936415609E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999992023294	WITHOUT_CLASSIFICATION	7.976705826029996E-10	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999997410333569	WITHOUT_CLASSIFICATION	2.5896664307581373E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999998862513	WITHOUT_CLASSIFICATION	1.1374876702385906E-10	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999998862513	WITHOUT_CLASSIFICATION	1.1374876702385906E-10	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999987490536661	WITHOUT_CLASSIFICATION	1.2509463338507842E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998624450437	WITHOUT_CLASSIFICATION	1.3755495631128592E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999945753193233	WITHOUT_CLASSIFICATION	5.424680676609688E-6	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999964300991	WITHOUT_CLASSIFICATION	3.5699009957906406E-9	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999980915175336	WITHOUT_CLASSIFICATION	1.908482466471846E-6	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999998373279251	WITHOUT_CLASSIFICATION	1.6267207505404345E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999977454795643	WITHOUT_CLASSIFICATION	2.2545204356312618E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.999999345367504	WITHOUT_CLASSIFICATION	6.546324960564688E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999998246637	WITHOUT_CLASSIFICATION	1.7533635990516731E-10	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999992294204204	WITHOUT_CLASSIFICATION	7.70579579525676E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999999554826211	WITHOUT_CLASSIFICATION	4.451737883816058E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999955413564209	WITHOUT_CLASSIFICATION	4.45864357908928E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999994807797493	WITHOUT_CLASSIFICATION	5.192202506850567E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999989487016325	WITHOUT_CLASSIFICATION	1.0512983674216734E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999750062349207	WITHOUT_CLASSIFICATION	2.4993765079163725E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.999810221545573	WITHOUT_CLASSIFICATION	1.897784544269689E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999976262464471	WITHOUT_CLASSIFICATION	2.373753552965839E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999994783773062	WITHOUT_CLASSIFICATION	5.216226937563745E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998040274095	WITHOUT_CLASSIFICATION	1.9597259045935904E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998040274095	WITHOUT_CLASSIFICATION	1.9597259045935904E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999992289668297	WITHOUT_CLASSIFICATION	7.71033170309686E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999988260177842	WITHOUT_CLASSIFICATION	1.1739822157122199E-6	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999236505751224	WITHOUT_CLASSIFICATION	7.634942487761421E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999880981252635	WITHOUT_CLASSIFICATION	1.1901874736588361E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999956938151097	WITHOUT_CLASSIFICATION	4.3061848903396335E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999996837453542	WITHOUT_CLASSIFICATION	3.16254645823963E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999750062349207	WITHOUT_CLASSIFICATION	2.4993765079163725E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999426199460741	WITHOUT_CLASSIFICATION	5.7380053925940586E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999998182277504	WITHOUT_CLASSIFICATION	1.817722494960459E-7	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999958732134571	WITHOUT_CLASSIFICATION	4.126786542866867E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999997528281671	WITHOUT_CLASSIFICATION	2.4717183297560507E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.999932041930593	WITHOUT_CLASSIFICATION	6.79580694069754E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999201202397	WITHOUT_CLASSIFICATION	7.98797602406827E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9996709669014735	WITHOUT_CLASSIFICATION	3.2903309852649263E-4	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999318843837816	WITHOUT_CLASSIFICATION	6.811561621849536E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999996308686072	WITHOUT_CLASSIFICATION	3.6913139274530513E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999961390805295	WITHOUT_CLASSIFICATION	3.860919470394999E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999999105695	WITHOUT_CLASSIFICATION	8.943054145342208E-11	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999998548781213	WITHOUT_CLASSIFICATION	1.451218787115493E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999998548781213	WITHOUT_CLASSIFICATION	1.451218787115493E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999950558391238	WITHOUT_CLASSIFICATION	4.944160876182982E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999998963986757	WITHOUT_CLASSIFICATION	1.0360132422797192E-7	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999677855951901	WITHOUT_CLASSIFICATION	3.2214404809911334E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9880574918361549	WITHOUT_CLASSIFICATION	0.011942508163845077	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999111139454	WITHOUT_CLASSIFICATION	8.888605460152716E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999518955174354	WITHOUT_CLASSIFICATION	4.810448256470992E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9993746948211552	WITHOUT_CLASSIFICATION	6.253051788448784E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999993246855404	WITHOUT_CLASSIFICATION	6.753144595447285E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999822177822	WITHOUT_CLASSIFICATION	1.7782217764522836E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9997469499543292	WITHOUT_CLASSIFICATION	2.530500456707866E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999999973844645	WITHOUT_CLASSIFICATION	2.6155354434886138E-9	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.999998671225452	WITHOUT_CLASSIFICATION	1.3287745479596847E-6	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999949391583117	WITHOUT_CLASSIFICATION	5.060841688280979E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999998087963858	WITHOUT_CLASSIFICATION	1.9120361417312467E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9967915878283844	WITHOUT_CLASSIFICATION	0.0032084121716154847	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999522268990108	WITHOUT_CLASSIFICATION	4.7773100989302876E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999999393058308	WITHOUT_CLASSIFICATION	6.069416924894914E-8	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999999784058755	WITHOUT_CLASSIFICATION	2.159412446176681E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.999997506159451	WITHOUT_CLASSIFICATION	2.4938405488863805E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999922383106	WITHOUT_CLASSIFICATION	7.761689422343995E-9	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999996814031298	WITHOUT_CLASSIFICATION	3.18596870284567E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9995727741447475	WITHOUT_CLASSIFICATION	4.2722585525248417E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999998573850734	WITHOUT_CLASSIFICATION	1.426149266560527E-7	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999973243298371	WITHOUT_CLASSIFICATION	2.6756701629750785E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999984474451861	WITHOUT_CLASSIFICATION	1.5525548139475307E-6	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999985349254517	WITHOUT_CLASSIFICATION	1.4650745483074505E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999940752241174	WITHOUT_CLASSIFICATION	5.924775882577894E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999997006866739	WITHOUT_CLASSIFICATION	2.9931332609654105E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9998041534070965	WITHOUT_CLASSIFICATION	1.9584659290356634E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999998967707625	WITHOUT_CLASSIFICATION	1.0322923745794886E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.999999170137919	WITHOUT_CLASSIFICATION	8.298620809878085E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.999999170137919	WITHOUT_CLASSIFICATION	8.298620809878085E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999837595060836	WITHOUT_CLASSIFICATION	1.6240493916386537E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999837595060836	WITHOUT_CLASSIFICATION	1.6240493916386537E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999229446446	WITHOUT_CLASSIFICATION	7.705535539997252E-8	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999816411153267	WITHOUT_CLASSIFICATION	1.8358884673234225E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999946911229218	WITHOUT_CLASSIFICATION	5.308877078150527E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999946911229218	WITHOUT_CLASSIFICATION	5.308877078150527E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999972729520011	WITHOUT_CLASSIFICATION	2.727047998961596E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999997952055089	WITHOUT_CLASSIFICATION	2.0479449123755114E-7	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999994807797493	WITHOUT_CLASSIFICATION	5.192202506850567E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999997993145355	WITHOUT_CLASSIFICATION	2.0068546445202706E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999997993145355	WITHOUT_CLASSIFICATION	2.0068546445202706E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999997993145355	WITHOUT_CLASSIFICATION	2.0068546445202706E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999997952055089	WITHOUT_CLASSIFICATION	2.0479449123755114E-7	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999999719023742	WITHOUT_CLASSIFICATION	2.8097625891687585E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999855967527731	WITHOUT_CLASSIFICATION	1.4403247226976473E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9989131451777017	WITHOUT_CLASSIFICATION	0.0010868548222983867	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.999988938872565	WITHOUT_CLASSIFICATION	1.1061127435066729E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999993952132948	WITHOUT_CLASSIFICATION	6.047867052275842E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999998668426638	WITHOUT_CLASSIFICATION	1.3315733615825173E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999971504781098	WITHOUT_CLASSIFICATION	2.8495218903034174E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9970551995734048	WITHOUT_CLASSIFICATION	0.0029448004265950427	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995424227070477	WITHOUT_CLASSIFICATION	4.575772929523225E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998187271065	WITHOUT_CLASSIFICATION	1.8127289354595384E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998443264353	WITHOUT_CLASSIFICATION	1.5567356469380834E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999489385147553	WITHOUT_CLASSIFICATION	5.106148524480365E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999967238400121	WITHOUT_CLASSIFICATION	3.2761599878155435E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983362948951	WITHOUT_CLASSIFICATION	1.6637051049244072E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996972194272505	WITHOUT_CLASSIFICATION	3.0278057274954977E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994531515246	WITHOUT_CLASSIFICATION	5.468484753945823E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999899102543808	WITHOUT_CLASSIFICATION	1.0089745619224599E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996913521025	WITHOUT_CLASSIFICATION	3.0864789745329465E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998663215497	WITHOUT_CLASSIFICATION	1.3367845032477266E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999833859529544	WITHOUT_CLASSIFICATION	1.6614047045530886E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999950351333303	WITHOUT_CLASSIFICATION	4.964866669711431E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999964945047203	WITHOUT_CLASSIFICATION	3.5054952796635106E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998375876268	WITHOUT_CLASSIFICATION	1.6241237328984E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998722464661	WITHOUT_CLASSIFICATION	1.2775353396603488E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962481985848	WITHOUT_CLASSIFICATION	3.751801415296441E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999996543905919	WITHOUT_CLASSIFICATION	3.456094080520317E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999832923558	WITHOUT_CLASSIFICATION	1.6707644207489973E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985178726035	WITHOUT_CLASSIFICATION	1.4821273965259404E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999845555898446	WITHOUT_CLASSIFICATION	1.5444410155406263E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999129156481495	WITHOUT_CLASSIFICATION	8.708435185047208E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999999295393438	WITHOUT_CLASSIFICATION	7.046065626526849E-8	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9986914710148505	WITHOUT_CLASSIFICATION	0.001308528985149604	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999302856343	WITHOUT_CLASSIFICATION	6.97143657778388E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999450512206	WITHOUT_CLASSIFICATION	5.494877951030131E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999939082825673	WITHOUT_CLASSIFICATION	6.0917174326680246E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999777666320878	WITHOUT_CLASSIFICATION	2.223336791222942E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999989873877697	WITHOUT_CLASSIFICATION	1.0126122302997985E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985716493826	WITHOUT_CLASSIFICATION	1.4283506174485949E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999982077032394	WITHOUT_CLASSIFICATION	1.7922967605970257E-6	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999965577870571	WITHOUT_CLASSIFICATION	3.442212942867675E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999989873877697	WITHOUT_CLASSIFICATION	1.0126122302997985E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999975993313462	WITHOUT_CLASSIFICATION	2.400668653662063E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999809429822789	WITHOUT_CLASSIFICATION	1.9057017721065918E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999994134668182	WITHOUT_CLASSIFICATION	5.865331818028382E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995222746381746	WITHOUT_CLASSIFICATION	4.777253618255386E-4	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999976176737415	WITHOUT_CLASSIFICATION	2.3823262585682145E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999982077032394	WITHOUT_CLASSIFICATION	1.7922967605970257E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995222746381746	WITHOUT_CLASSIFICATION	4.777253618255386E-4	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999963357366607	WITHOUT_CLASSIFICATION	3.6642633392931317E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999935363147	WITHOUT_CLASSIFICATION	6.4636852749644885E-9	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999781715684596	WITHOUT_CLASSIFICATION	2.182843154042763E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999990207765901	WITHOUT_CLASSIFICATION	9.792234098633821E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999998907923926	WITHOUT_CLASSIFICATION	1.0920760729671249E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999412889217314	WITHOUT_CLASSIFICATION	5.871107826850182E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999816341155	WITHOUT_CLASSIFICATION	1.836588444063907E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999971722727671	WITHOUT_CLASSIFICATION	2.8277272328723454E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999859770437717	WITHOUT_CLASSIFICATION	1.4022956228436018E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999850626969071	WITHOUT_CLASSIFICATION	1.4937303092859099E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999992278094234	WITHOUT_CLASSIFICATION	7.721905766331597E-7	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999998018477989	WITHOUT_CLASSIFICATION	1.9815220104418984E-7	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.999999593166718	WITHOUT_CLASSIFICATION	4.068332819615587E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999962779601815	WITHOUT_CLASSIFICATION	3.722039818462356E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999993648426132	WITHOUT_CLASSIFICATION	6.351573867195463E-7	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.999999679917157	WITHOUT_CLASSIFICATION	3.2008284304468875E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999945761583856	WITHOUT_CLASSIFICATION	5.42384161437141E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999263103059478	WITHOUT_CLASSIFICATION	7.368969405217296E-5	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999709691599	WITHOUT_CLASSIFICATION	2.9030840109663882E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999996441389044	WITHOUT_CLASSIFICATION	3.5586109565510774E-7	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.999992338642263	WITHOUT_CLASSIFICATION	7.66135773691221E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.999990048747928	WITHOUT_CLASSIFICATION	9.951252072159626E-6	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999825852606	WITHOUT_CLASSIFICATION	1.741473941585161E-8	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999997354131852	WITHOUT_CLASSIFICATION	2.6458681476376887E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.99999648435188	WITHOUT_CLASSIFICATION	3.5156481198582985E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9256943620347368	WITHOUT_CLASSIFICATION	0.0743056379652632	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999949583778187	WITHOUT_CLASSIFICATION	5.041622181243564E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999996330379649	WITHOUT_CLASSIFICATION	3.669620351579745E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999680631297	WITHOUT_CLASSIFICATION	3.193687022948787E-8	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.999998432211064	WITHOUT_CLASSIFICATION	1.5677889360660638E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999465516087	WITHOUT_CLASSIFICATION	5.344839136451692E-8	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999993870644438	WITHOUT_CLASSIFICATION	6.129355562693581E-7	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999997200798024	WITHOUT_CLASSIFICATION	2.799201976062084E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999992485273216	WITHOUT_CLASSIFICATION	7.514726784303875E-7	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999784926324715	WITHOUT_CLASSIFICATION	2.1507367528499333E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.999971016512806	WITHOUT_CLASSIFICATION	2.8983487194009263E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9997006827766344	WITHOUT_CLASSIFICATION	2.993172233656355E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999988390616632	WITHOUT_CLASSIFICATION	1.1609383367518344E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999994403562114	WITHOUT_CLASSIFICATION	5.596437886315887E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999994082661774	WITHOUT_CLASSIFICATION	5.9173382262733E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999986072534778	WITHOUT_CLASSIFICATION	1.3927465221602758E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999989880951446	WITHOUT_CLASSIFICATION	1.0119048553439626E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999994799429797	WITHOUT_CLASSIFICATION	5.200570204148722E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999982360387772	WITHOUT_CLASSIFICATION	1.7639612227094256E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999835746759062	WITHOUT_CLASSIFICATION	1.6425324093841986E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999990217356246	WITHOUT_CLASSIFICATION	9.782643754382966E-7	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999458417962053	WITHOUT_CLASSIFICATION	5.4158203794683175E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999471228963147	WITHOUT_CLASSIFICATION	5.287710368533312E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999831325487	WITHOUT_CLASSIFICATION	1.6867451346248513E-8	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999257048858	WITHOUT_CLASSIFICATION	7.42951141292469E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.999999920201804	WITHOUT_CLASSIFICATION	7.979819598865448E-8	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.999637824839958	WITHOUT_CLASSIFICATION	3.621751600420241E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.999536860024628	WITHOUT_CLASSIFICATION	4.631399753719353E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999996270331636	WITHOUT_CLASSIFICATION	3.7296683631788225E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999996225917743	WITHOUT_CLASSIFICATION	3.774082257613396E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998624450437	WITHOUT_CLASSIFICATION	1.3755495631128592E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999887811373898	WITHOUT_CLASSIFICATION	1.1218862610182064E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999984922350446	WITHOUT_CLASSIFICATION	1.507764955338496E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999997851342168	WITHOUT_CLASSIFICATION	2.1486578302596444E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999990174627571	WITHOUT_CLASSIFICATION	9.825372429101235E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999729203705	WITHOUT_CLASSIFICATION	2.7079629495301324E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999430812491477	WITHOUT_CLASSIFICATION	5.691875085236573E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9997652825884826	WITHOUT_CLASSIFICATION	2.3471741151745605E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.999996782560842	WITHOUT_CLASSIFICATION	3.217439158088133E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.999999995445821	WITHOUT_CLASSIFICATION	4.554179080331731E-9	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999995353355932	WITHOUT_CLASSIFICATION	4.646644069232534E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999999991154859	WITHOUT_CLASSIFICATION	8.845140852196788E-9	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999976262464471	WITHOUT_CLASSIFICATION	2.373753552965839E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999994783773062	WITHOUT_CLASSIFICATION	5.216226937563745E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999996837453542	WITHOUT_CLASSIFICATION	3.16254645823963E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999430812491477	WITHOUT_CLASSIFICATION	5.691875085236573E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999995353355932	WITHOUT_CLASSIFICATION	4.646644069232534E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999999991154859	WITHOUT_CLASSIFICATION	8.845140852196788E-9	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999972330899	WITHOUT_CLASSIFICATION	2.7669101792409037E-9	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999962812138039	WITHOUT_CLASSIFICATION	3.718786196058866E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999858048274752	WITHOUT_CLASSIFICATION	1.4195172524827392E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.999992176896432	WITHOUT_CLASSIFICATION	7.823103567955315E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.999994692225017	WITHOUT_CLASSIFICATION	5.307774983031241E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999968403555	WITHOUT_CLASSIFICATION	3.1596445693186203E-9	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999909688742	WITHOUT_CLASSIFICATION	9.031125854130733E-9	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9997962077503108	WITHOUT_CLASSIFICATION	2.0379224968938994E-4	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999998575770902	WITHOUT_CLASSIFICATION	1.4242290976207485E-7	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.999686939346089	WITHOUT_CLASSIFICATION	3.1306065391097234E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999744242635961	WITHOUT_CLASSIFICATION	2.557573640391126E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999779350219807	WITHOUT_CLASSIFICATION	2.206497801924018E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.99998847109738	WITHOUT_CLASSIFICATION	1.1528902620062598E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999992459739723	WITHOUT_CLASSIFICATION	7.540260277825841E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999987866099002	WITHOUT_CLASSIFICATION	1.2133900998250752E-6	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999999020413828	WITHOUT_CLASSIFICATION	9.79586172294484E-8	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9998421809444326	WITHOUT_CLASSIFICATION	1.5781905556752689E-4	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999990449510732	WITHOUT_CLASSIFICATION	9.550489268641735E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999263597225	WITHOUT_CLASSIFICATION	7.364027761584199E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999836283746566	WITHOUT_CLASSIFICATION	1.6371625343358072E-5	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.999999982753454	WITHOUT_CLASSIFICATION	1.7246545960278965E-8	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.999999999742398	WITHOUT_CLASSIFICATION	2.5760203958623444E-10	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999990174627571	WITHOUT_CLASSIFICATION	9.825372429101235E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999729203705	WITHOUT_CLASSIFICATION	2.7079629495301324E-8	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999666072487	WITHOUT_CLASSIFICATION	3.339275130985539E-8	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999987038166	WITHOUT_CLASSIFICATION	1.2961833644641207E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999120978604	WITHOUT_CLASSIFICATION	8.790213964125154E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999990622029695	WITHOUT_CLASSIFICATION	9.377970304444354E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999856387496671	WITHOUT_CLASSIFICATION	1.4361250332989696E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999971655038435	WITHOUT_CLASSIFICATION	2.834496156332449E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9983212523400125	WITHOUT_CLASSIFICATION	0.0016787476599875281	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9997069138672383	WITHOUT_CLASSIFICATION	2.930861327617595E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999986822908457	WITHOUT_CLASSIFICATION	1.3177091543401507E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999986822908457	WITHOUT_CLASSIFICATION	1.3177091543401507E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999932895005209	WITHOUT_CLASSIFICATION	6.710499479039095E-6	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999955154151364	WITHOUT_CLASSIFICATION	4.484584863544923E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999934787431521	WITHOUT_CLASSIFICATION	6.521256847801921E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999964345927924	WITHOUT_CLASSIFICATION	3.565407207534718E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999954517835	WITHOUT_CLASSIFICATION	4.548216451670005E-9	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999705134089	WITHOUT_CLASSIFICATION	2.9486591068926466E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999983059665009	WITHOUT_CLASSIFICATION	1.694033499171134E-6	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999983059665009	WITHOUT_CLASSIFICATION	1.694033499171134E-6	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999932842011	WITHOUT_CLASSIFICATION	6.7157989295691906E-9	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999997447891878	WITHOUT_CLASSIFICATION	2.552108121993811E-7	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999988875283607	WITHOUT_CLASSIFICATION	1.1124716391684391E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999998608781699	WITHOUT_CLASSIFICATION	1.391218301127458E-7	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999042396807	WITHOUT_CLASSIFICATION	9.576031934411534E-8	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999938124322645	WITHOUT_CLASSIFICATION	6.187567735424684E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999765546903	WITHOUT_CLASSIFICATION	2.344530976478814E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999982396902819	WITHOUT_CLASSIFICATION	1.760309718050615E-6	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999889149271	WITHOUT_CLASSIFICATION	1.1085072888276222E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.999999994131737	WITHOUT_CLASSIFICATION	5.868262904588192E-9	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999867992504028	WITHOUT_CLASSIFICATION	1.3200749597086767E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.999999999529351	WITHOUT_CLASSIFICATION	4.706490268092893E-10	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999958958805624	WITHOUT_CLASSIFICATION	4.1041194376073365E-6	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999998546667164	WITHOUT_CLASSIFICATION	1.4533328371079886E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999972860663271	WITHOUT_CLASSIFICATION	2.713933672904827E-5	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999960706565248	WITHOUT_CLASSIFICATION	3.929343475122636E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999968274755003	WITHOUT_CLASSIFICATION	3.172524499676785E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999981685542716	WITHOUT_CLASSIFICATION	1.8314457284130349E-6	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999996768439671	WITHOUT_CLASSIFICATION	3.231560329642979E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999984198334493	WITHOUT_CLASSIFICATION	1.5801665507331597E-6	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999971652768775	WITHOUT_CLASSIFICATION	2.83472312249256E-6	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999883637471	WITHOUT_CLASSIFICATION	1.1636252723001613E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.999999900164994	WITHOUT_CLASSIFICATION	9.983500606943663E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999642256883623	WITHOUT_CLASSIFICATION	3.57743116377557E-5	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999997613186388	WITHOUT_CLASSIFICATION	2.3868136119457806E-7	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999994062668526	WITHOUT_CLASSIFICATION	5.937331474089301E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999999151762838	WITHOUT_CLASSIFICATION	8.482371623742227E-8	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999996143898316	WITHOUT_CLASSIFICATION	3.856101682871174E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999987859021588	WITHOUT_CLASSIFICATION	1.2140978411274364E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999739583914	WITHOUT_CLASSIFICATION	2.6041608664617096E-8	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.999996316860613	WITHOUT_CLASSIFICATION	3.683139387186001E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999920597353102	WITHOUT_CLASSIFICATION	7.940264689831475E-6	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.999992694784732	WITHOUT_CLASSIFICATION	7.305215268142797E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999984498576351	WITHOUT_CLASSIFICATION	1.5501423650202945E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.999932434434876	WITHOUT_CLASSIFICATION	6.756556512401091E-5	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999970710509131	WITHOUT_CLASSIFICATION	2.9289490869794784E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9998338531874617	WITHOUT_CLASSIFICATION	1.6614681253827388E-4	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9997390706391165	WITHOUT_CLASSIFICATION	2.6092936088346685E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999525334818514	WITHOUT_CLASSIFICATION	4.746651814860265E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999309616801355	WITHOUT_CLASSIFICATION	6.90383198644686E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999951775016723	WITHOUT_CLASSIFICATION	4.8224983276340604E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9995925798355467	WITHOUT_CLASSIFICATION	4.074201644532419E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998092650495	WITHOUT_CLASSIFICATION	1.9073495049729762E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999582489241009	WITHOUT_CLASSIFICATION	4.175107589906584E-5	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999952167300606	WITHOUT_CLASSIFICATION	4.783269939332846E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999951775016723	WITHOUT_CLASSIFICATION	4.8224983276340604E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998092650495	WITHOUT_CLASSIFICATION	1.9073495049729762E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999962417071485	WITHOUT_CLASSIFICATION	3.758292851425645E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.999999967526714	WITHOUT_CLASSIFICATION	3.2473285919685654E-8	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.999997553526607	WITHOUT_CLASSIFICATION	2.4464733929122E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999919500026	WITHOUT_CLASSIFICATION	8.04999744187041E-9	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999309616801355	WITHOUT_CLASSIFICATION	6.90383198644686E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999309616801355	WITHOUT_CLASSIFICATION	6.90383198644686E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999951775016723	WITHOUT_CLASSIFICATION	4.8224983276340604E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999991078603508	WITHOUT_CLASSIFICATION	8.921396491862644E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999769136627374	WITHOUT_CLASSIFICATION	2.308633726256943E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999988812765394	WITHOUT_CLASSIFICATION	1.118723460608132E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999988812765394	WITHOUT_CLASSIFICATION	1.118723460608132E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998831917131	WITHOUT_CLASSIFICATION	1.1680828695849997E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999969428335869	WITHOUT_CLASSIFICATION	3.057166413252029E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999659728235736	WITHOUT_CLASSIFICATION	3.40271764264043E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999659728235736	WITHOUT_CLASSIFICATION	3.40271764264043E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999990140670191	WITHOUT_CLASSIFICATION	9.859329809369344E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999969428335869	WITHOUT_CLASSIFICATION	3.057166413252029E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999659728235736	WITHOUT_CLASSIFICATION	3.40271764264043E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999990140670191	WITHOUT_CLASSIFICATION	9.859329809369344E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999941467343256	WITHOUT_CLASSIFICATION	5.853265674355576E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999998775366077	WITHOUT_CLASSIFICATION	1.2246339232648953E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999808422737	WITHOUT_CLASSIFICATION	1.9157726250217798E-8	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999956376463891	WITHOUT_CLASSIFICATION	4.362353610953472E-6	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999456211769674	WITHOUT_CLASSIFICATION	5.437882303259665E-5	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999998418395234	WITHOUT_CLASSIFICATION	1.581604766135014E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999500017972861	WITHOUT_CLASSIFICATION	4.999820271394391E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999992286360487	WITHOUT_CLASSIFICATION	7.713639511840948E-7	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999007367857162	WITHOUT_CLASSIFICATION	9.926321428377496E-5	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.999960004927691	WITHOUT_CLASSIFICATION	3.9995072309053885E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.999998736704484	WITHOUT_CLASSIFICATION	1.2632955159376549E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999976620808849	WITHOUT_CLASSIFICATION	2.3379191150056705E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999692159816	WITHOUT_CLASSIFICATION	3.078401848244804E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.999999970221296	WITHOUT_CLASSIFICATION	2.9778703835523976E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999603753	WITHOUT_CLASSIFICATION	3.962478987515798E-11	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999909370342407	WITHOUT_CLASSIFICATION	9.062965759425619E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999997711160978	WITHOUT_CLASSIFICATION	2.2888390220977114E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999997649358711	WITHOUT_CLASSIFICATION	2.3506412894640705E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999997286980422	WITHOUT_CLASSIFICATION	2.7130195778993976E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999990442610383	WITHOUT_CLASSIFICATION	9.55738961742599E-7	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.999999999792361	WITHOUT_CLASSIFICATION	2.0763898436205132E-10	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999990650574302	WITHOUT_CLASSIFICATION	9.349425699150339E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999824963336	WITHOUT_CLASSIFICATION	1.7503666380979232E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999306349292	WITHOUT_CLASSIFICATION	6.936507074231914E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999997806906027	WITHOUT_CLASSIFICATION	2.1930939735682981E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999045245647	WITHOUT_CLASSIFICATION	9.547543534885943E-8	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999935826328	WITHOUT_CLASSIFICATION	6.417367162191613E-9	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999997997897038	WITHOUT_CLASSIFICATION	2.0021029626661628E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999996382331666	WITHOUT_CLASSIFICATION	3.6176683344649604E-7	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.999271997671688	WITHOUT_CLASSIFICATION	7.280023283120678E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999991487029103	WITHOUT_CLASSIFICATION	8.512970896761009E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.999999977825645	WITHOUT_CLASSIFICATION	2.2174355104102336E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999997505344874	WITHOUT_CLASSIFICATION	2.4946551266422497E-7	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999999536067891	WITHOUT_CLASSIFICATION	4.639321084040989E-8	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999999109575635	WITHOUT_CLASSIFICATION	8.904243650667838E-8	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999972658594377	WITHOUT_CLASSIFICATION	2.7341405622986903E-6	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999998579192	WITHOUT_CLASSIFICATION	1.4208081764397568E-10	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999976128821534	WITHOUT_CLASSIFICATION	2.3871178466541273E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999971341001118	WITHOUT_CLASSIFICATION	2.865899888215432E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999971341001118	WITHOUT_CLASSIFICATION	2.865899888215432E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999971341001118	WITHOUT_CLASSIFICATION	2.865899888215432E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999999137664479	WITHOUT_CLASSIFICATION	8.623355214341245E-8	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.999999009537357	WITHOUT_CLASSIFICATION	9.904626430317792E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999982694076912	WITHOUT_CLASSIFICATION	1.7305923087789493E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999812442357	WITHOUT_CLASSIFICATION	1.875576438455263E-8	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999293840332917	WITHOUT_CLASSIFICATION	7.061596670826177E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.999974128783039	WITHOUT_CLASSIFICATION	2.5871216960931358E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999862924319	WITHOUT_CLASSIFICATION	1.3707568144065386E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999917490171303	WITHOUT_CLASSIFICATION	8.250982869685485E-6	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999985170583506	WITHOUT_CLASSIFICATION	1.4829416493541657E-6	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999992959565898	WITHOUT_CLASSIFICATION	7.040434101312248E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999787026548604	WITHOUT_CLASSIFICATION	2.1297345139613364E-5	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999628859852127	WITHOUT_CLASSIFICATION	3.711401478741973E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999975791842134	WITHOUT_CLASSIFICATION	2.4208157866958817E-6	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999665492015597	WITHOUT_CLASSIFICATION	3.345079844021821E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999669605093668	WITHOUT_CLASSIFICATION	3.3039490633111544E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999991212802339	WITHOUT_CLASSIFICATION	8.787197660244333E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999999332608731	WITHOUT_CLASSIFICATION	6.67391268583253E-8	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.999998999422808	WITHOUT_CLASSIFICATION	1.0005771920117245E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999803513739668	WITHOUT_CLASSIFICATION	1.9648626033232163E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999939068373667	WITHOUT_CLASSIFICATION	6.0931626333408035E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999943140025529	WITHOUT_CLASSIFICATION	5.68599744707033E-6	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999985319542138	WITHOUT_CLASSIFICATION	1.4680457861894756E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999796875703448	WITHOUT_CLASSIFICATION	2.0312429655125783E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999998898318294	WITHOUT_CLASSIFICATION	1.1016817064071099E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999856622862846	WITHOUT_CLASSIFICATION	1.4337713715433164E-5	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999983544521445	WITHOUT_CLASSIFICATION	1.6455478555115503E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999957058777	WITHOUT_CLASSIFICATION	4.294122272059799E-9	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995455668154	WITHOUT_CLASSIFICATION	4.5443318455424974E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999997124153035	WITHOUT_CLASSIFICATION	2.8758469649274937E-7	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.999922203611229	WITHOUT_CLASSIFICATION	7.77963887710019E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999927837155606	WITHOUT_CLASSIFICATION	7.216284439505864E-6	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999933764888589	WITHOUT_CLASSIFICATION	6.623511141035443E-6	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9974931996277067	WITHOUT_CLASSIFICATION	0.002506800372293355	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.999991759684595	WITHOUT_CLASSIFICATION	8.240315405007187E-6	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999890790838215	WITHOUT_CLASSIFICATION	1.0920916178415249E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999432577878	WITHOUT_CLASSIFICATION	5.674221213051904E-8	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999999887076523	WITHOUT_CLASSIFICATION	1.1292347687204271E-8	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999824197287205	WITHOUT_CLASSIFICATION	1.7580271279535674E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.999998389079696	WITHOUT_CLASSIFICATION	1.6109203040654755E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999857662107781	WITHOUT_CLASSIFICATION	1.4233789221968523E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999992889166746	WITHOUT_CLASSIFICATION	7.110833254801436E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999977863386792	WITHOUT_CLASSIFICATION	2.2136613209045113E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999971655038435	WITHOUT_CLASSIFICATION	2.834496156332449E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998783449679538	WITHOUT_CLASSIFICATION	1.2165503204614128E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9996929026540381	WITHOUT_CLASSIFICATION	3.070973459619902E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999249873626466	WITHOUT_CLASSIFICATION	7.501263735334742E-5	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999695740451096	WITHOUT_CLASSIFICATION	3.0425954890503248E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999867794598031	WITHOUT_CLASSIFICATION	1.3220540197008106E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9932151729035914	WITHOUT_CLASSIFICATION	0.006784827096408616	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998887306834103	WITHOUT_CLASSIFICATION	1.112693165897199E-4	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999998264716	WITHOUT_CLASSIFICATION	1.7352844888561981E-10	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999827643137312	WITHOUT_CLASSIFICATION	1.723568626867051E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999892965139636	WITHOUT_CLASSIFICATION	1.0703486036418829E-5	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999992063398233	WITHOUT_CLASSIFICATION	7.936601766956278E-7	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999746195243615	WITHOUT_CLASSIFICATION	2.538047563851009E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999994669276387	WITHOUT_CLASSIFICATION	5.330723613015019E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999967720130178	WITHOUT_CLASSIFICATION	3.227986982266143E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999272313774943	WITHOUT_CLASSIFICATION	7.27686225056516E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999998314423288	WITHOUT_CLASSIFICATION	1.6855767111862148E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999988119269766	WITHOUT_CLASSIFICATION	1.1880730234464215E-6	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999998891780597	WITHOUT_CLASSIFICATION	1.1082194033223356E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.999999338431689	WITHOUT_CLASSIFICATION	6.615683110228285E-7	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999473165463473	WITHOUT_CLASSIFICATION	5.2683453652696196E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.999993170183469	WITHOUT_CLASSIFICATION	6.8298165309967035E-6	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999477623988523	WITHOUT_CLASSIFICATION	5.223760114780353E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999960479583064	WITHOUT_CLASSIFICATION	3.9520416935927035E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999934668123535	WITHOUT_CLASSIFICATION	6.533187646430829E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999997658190962	WITHOUT_CLASSIFICATION	2.3418090382899267E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999997658190962	WITHOUT_CLASSIFICATION	2.3418090382899267E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964582293311	WITHOUT_CLASSIFICATION	3.541770668898921E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964582293311	WITHOUT_CLASSIFICATION	3.541770668898921E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999960479583064	WITHOUT_CLASSIFICATION	3.9520416935927035E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964582293311	WITHOUT_CLASSIFICATION	3.541770668898921E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999981972462753	WITHOUT_CLASSIFICATION	1.8027537247941573E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999969949064126	WITHOUT_CLASSIFICATION	3.0050935874893898E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999969949064126	WITHOUT_CLASSIFICATION	3.0050935874893898E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999974778794932	WITHOUT_CLASSIFICATION	2.522120506764624E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999998162459152	WITHOUT_CLASSIFICATION	1.837540849040063E-7	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999460457248	WITHOUT_CLASSIFICATION	5.395427517644934E-8	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9995574357579691	WITHOUT_CLASSIFICATION	4.425642420309907E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999343053214557	WITHOUT_CLASSIFICATION	6.569467854433313E-5	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.999998181873222	WITHOUT_CLASSIFICATION	1.818126778043307E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999856513640982	WITHOUT_CLASSIFICATION	1.434863590183331E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999636734871735	WITHOUT_CLASSIFICATION	3.6326512826426667E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999630966065958	WITHOUT_CLASSIFICATION	3.6903393404219834E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999977833566167	WITHOUT_CLASSIFICATION	2.2166433833672655E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999419670875	WITHOUT_CLASSIFICATION	5.803291237057363E-8	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999995509904	WITHOUT_CLASSIFICATION	4.4900961656941637E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999988429132848	WITHOUT_CLASSIFICATION	1.1570867152602122E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999712730009	WITHOUT_CLASSIFICATION	2.872699913217778E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999959217472505	WITHOUT_CLASSIFICATION	4.078252749477407E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999986263569	WITHOUT_CLASSIFICATION	1.373643073163017E-9	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999989192467195	WITHOUT_CLASSIFICATION	1.0807532804600298E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9566875837277846	WITHOUT_CLASSIFICATION	0.04331241627221548	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9990846513409701	WITHOUT_CLASSIFICATION	9.153486590297599E-4	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999993183973912	WITHOUT_CLASSIFICATION	6.816026087326183E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999982828454	WITHOUT_CLASSIFICATION	1.717154662070509E-9	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999955338213351	WITHOUT_CLASSIFICATION	4.466178664976212E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999871310911	WITHOUT_CLASSIFICATION	1.286890891851056E-8	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999997544719691	WITHOUT_CLASSIFICATION	2.4552803089578182E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999997544719691	WITHOUT_CLASSIFICATION	2.4552803089578182E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999999712092804	WITHOUT_CLASSIFICATION	2.8790719602977E-8	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999995233212159	WITHOUT_CLASSIFICATION	4.766787841426586E-7	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999893066943268	WITHOUT_CLASSIFICATION	1.0693305673282753E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999804197732978	WITHOUT_CLASSIFICATION	1.958022670224034E-5	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999998119218094	WITHOUT_CLASSIFICATION	1.8807819054647704E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999989891393454	WITHOUT_CLASSIFICATION	1.0108606547169712E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999998076489909	WITHOUT_CLASSIFICATION	1.9235100914609522E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9993619855682384	WITHOUT_CLASSIFICATION	6.380144317615444E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999884167973654	WITHOUT_CLASSIFICATION	1.1583202634593453E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999474238832119	WITHOUT_CLASSIFICATION	5.257611678818448E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999991396128823	WITHOUT_CLASSIFICATION	8.603871176431953E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999737430989383	WITHOUT_CLASSIFICATION	2.625690106171659E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999999655271633	WITHOUT_CLASSIFICATION	3.4472836712010834E-8	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999983408035655	WITHOUT_CLASSIFICATION	1.6591964345083783E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999994370373	WITHOUT_CLASSIFICATION	5.629627247798172E-10	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999998350123871	WITHOUT_CLASSIFICATION	1.6498761302325322E-7	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999794591207405	WITHOUT_CLASSIFICATION	2.054087925945938E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999932622009	WITHOUT_CLASSIFICATION	6.737799079212078E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.99999968689667	WITHOUT_CLASSIFICATION	3.131033299936958E-7	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999999326918814	WITHOUT_CLASSIFICATION	6.73081186658358E-8	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999995948540467	WITHOUT_CLASSIFICATION	4.051459533390203E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999902988248797	WITHOUT_CLASSIFICATION	9.701175120390829E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999895028398973	WITHOUT_CLASSIFICATION	1.0497160102721753E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999940380948863	WITHOUT_CLASSIFICATION	5.961905113700782E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999997862099748	WITHOUT_CLASSIFICATION	2.137900253140842E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999969331021148	WITHOUT_CLASSIFICATION	3.0668978851982206E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999993654742	WITHOUT_CLASSIFICATION	6.345258178525133E-10	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999994938288749	WITHOUT_CLASSIFICATION	5.061711250790126E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999683553557	WITHOUT_CLASSIFICATION	3.164464429286254E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999416279405	WITHOUT_CLASSIFICATION	5.8372059559991174E-8	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999995514929358	WITHOUT_CLASSIFICATION	4.485070641434988E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999998977509865	WITHOUT_CLASSIFICATION	1.0224901342644771E-7	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999927381332726	WITHOUT_CLASSIFICATION	7.2618667273694935E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999996889461408	WITHOUT_CLASSIFICATION	3.11053859236261E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9995368023632784	WITHOUT_CLASSIFICATION	4.631976367216032E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999979176358482	WITHOUT_CLASSIFICATION	2.0823641517969524E-6	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999816924844	WITHOUT_CLASSIFICATION	1.8307515609673727E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999981369618933	WITHOUT_CLASSIFICATION	1.8630381066619676E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999424584038825	WITHOUT_CLASSIFICATION	5.754159611746397E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9997087014996289	WITHOUT_CLASSIFICATION	2.9129850037104365E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999836417972	WITHOUT_CLASSIFICATION	1.635820279311518E-8	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999986947619	WITHOUT_CLASSIFICATION	1.305238037349854E-9	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999992772314543	WITHOUT_CLASSIFICATION	7.22768545634471E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999971504781098	WITHOUT_CLASSIFICATION	2.8495218903034174E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9970551995734048	WITHOUT_CLASSIFICATION	0.0029448004265950427	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999884167973654	WITHOUT_CLASSIFICATION	1.1583202634593453E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999474238832119	WITHOUT_CLASSIFICATION	5.257611678818448E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999991396128823	WITHOUT_CLASSIFICATION	8.603871176431953E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999997592096179	WITHOUT_CLASSIFICATION	2.4079038213526633E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999998677060573	WITHOUT_CLASSIFICATION	1.322939426483188E-7	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999995925731329	WITHOUT_CLASSIFICATION	4.0742686710616934E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999966528601314	WITHOUT_CLASSIFICATION	3.3471398686897303E-6	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999992925073596	WITHOUT_CLASSIFICATION	7.074926403977609E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999971408781413	WITHOUT_CLASSIFICATION	2.8591218587388573E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999997953465736	WITHOUT_CLASSIFICATION	2.046534264998718E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.999991611194639	WITHOUT_CLASSIFICATION	8.388805361046283E-6	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999529138816	WITHOUT_CLASSIFICATION	4.708611841850643E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999998350215404	WITHOUT_CLASSIFICATION	1.6497845948197486E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.999997678835893	WITHOUT_CLASSIFICATION	2.3211641070233364E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.999997678835893	WITHOUT_CLASSIFICATION	2.3211641070233364E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999948399861844	WITHOUT_CLASSIFICATION	5.1600138155511774E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999945675656973	WITHOUT_CLASSIFICATION	5.432434302773579E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999756251515	WITHOUT_CLASSIFICATION	2.4374848538033197E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993433389153	WITHOUT_CLASSIFICATION	6.566610846689938E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999996009073813	WITHOUT_CLASSIFICATION	3.990926187077543E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999769038946	WITHOUT_CLASSIFICATION	2.3096105398502003E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999991747112281	WITHOUT_CLASSIFICATION	8.252887718955639E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999980977198374	WITHOUT_CLASSIFICATION	1.9022801626254555E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999908352588784	WITHOUT_CLASSIFICATION	9.164741121579758E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999655179502	WITHOUT_CLASSIFICATION	3.44820497497348E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999383648019	WITHOUT_CLASSIFICATION	6.163519797981818E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999994572729201	WITHOUT_CLASSIFICATION	5.427270799065543E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993886708498	WITHOUT_CLASSIFICATION	6.11329150213425E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998618414456736	WITHOUT_CLASSIFICATION	1.3815855432640798E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999983924835537	WITHOUT_CLASSIFICATION	1.6075164462926357E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999257618528896	WITHOUT_CLASSIFICATION	7.423814711031695E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999922338312909	WITHOUT_CLASSIFICATION	7.766168709140091E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995424227070477	WITHOUT_CLASSIFICATION	4.575772929523225E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998187271065	WITHOUT_CLASSIFICATION	1.8127289354595384E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998443264353	WITHOUT_CLASSIFICATION	1.5567356469380834E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999489385147553	WITHOUT_CLASSIFICATION	5.106148524480365E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999967238400121	WITHOUT_CLASSIFICATION	3.2761599878155435E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999983362948951	WITHOUT_CLASSIFICATION	1.6637051049244072E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996972194272505	WITHOUT_CLASSIFICATION	3.0278057274954977E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994531515246	WITHOUT_CLASSIFICATION	5.468484753945823E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999899102543808	WITHOUT_CLASSIFICATION	1.0089745619224599E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996913521025	WITHOUT_CLASSIFICATION	3.0864789745329465E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998663215497	WITHOUT_CLASSIFICATION	1.3367845032477266E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999833859529544	WITHOUT_CLASSIFICATION	1.6614047045530886E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999950351333303	WITHOUT_CLASSIFICATION	4.964866669711431E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999964945047203	WITHOUT_CLASSIFICATION	3.5054952796635106E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999962481985848	WITHOUT_CLASSIFICATION	3.751801415296441E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999996543905919	WITHOUT_CLASSIFICATION	3.456094080520317E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999832923558	WITHOUT_CLASSIFICATION	1.6707644207489973E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985178726035	WITHOUT_CLASSIFICATION	1.4821273965259404E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999845555898446	WITHOUT_CLASSIFICATION	1.5444410155406263E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999129156481495	WITHOUT_CLASSIFICATION	8.708435185047208E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999999295393438	WITHOUT_CLASSIFICATION	7.046065626526849E-8	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999302856343	WITHOUT_CLASSIFICATION	6.97143657778388E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999777666320878	WITHOUT_CLASSIFICATION	2.223336791222942E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985716493826	WITHOUT_CLASSIFICATION	1.4283506174485949E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999982077032394	WITHOUT_CLASSIFICATION	1.7922967605970257E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999939082825673	WITHOUT_CLASSIFICATION	6.0917174326680246E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999809429822789	WITHOUT_CLASSIFICATION	1.9057017721065918E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999975993313462	WITHOUT_CLASSIFICATION	2.400668653662063E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995222746381746	WITHOUT_CLASSIFICATION	4.777253618255386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999948399861844	WITHOUT_CLASSIFICATION	5.1600138155511774E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999945675656973	WITHOUT_CLASSIFICATION	5.432434302773579E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999756251515	WITHOUT_CLASSIFICATION	2.4374848538033197E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993433389153	WITHOUT_CLASSIFICATION	6.566610846689938E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999991747112281	WITHOUT_CLASSIFICATION	8.252887718955639E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999980977198374	WITHOUT_CLASSIFICATION	1.9022801626254555E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9999938607676148	WITHOUT_CLASSIFICATION	6.139232385317513E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999781715684596	WITHOUT_CLASSIFICATION	2.182843154042763E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999990207765901	WITHOUT_CLASSIFICATION	9.792234098633821E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999383648019	WITHOUT_CLASSIFICATION	6.163519797981818E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999994572729201	WITHOUT_CLASSIFICATION	5.427270799065543E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993886708498	WITHOUT_CLASSIFICATION	6.11329150213425E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998618414456736	WITHOUT_CLASSIFICATION	1.3815855432640798E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999257618528896	WITHOUT_CLASSIFICATION	7.423814711031695E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999840634687278	WITHOUT_CLASSIFICATION	1.5936531272206662E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999777340142258	WITHOUT_CLASSIFICATION	2.2265985774089335E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999689230498	WITHOUT_CLASSIFICATION	3.1076950198711764E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9963747053031209	WITHOUT_CLASSIFICATION	0.0036252946968791024	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999944086717083	WITHOUT_CLASSIFICATION	5.591328291669639E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999970045098957	WITHOUT_CLASSIFICATION	2.9954901041765395E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999997600724104	WITHOUT_CLASSIFICATION	2.399275896077204E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999991906203993	WITHOUT_CLASSIFICATION	8.093796006494439E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999996733704017	WITHOUT_CLASSIFICATION	3.266295983556743E-7	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999991808485061	WITHOUT_CLASSIFICATION	8.191514938043153E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999996733704017	WITHOUT_CLASSIFICATION	3.266295983556743E-7	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9909532667783065	WITHOUT_CLASSIFICATION	0.009046733221693585	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999991769503339	WITHOUT_CLASSIFICATION	8.230496661672785E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999590226871184	WITHOUT_CLASSIFICATION	4.097731288146027E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999590226871184	WITHOUT_CLASSIFICATION	4.097731288146027E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999970216238335	WITHOUT_CLASSIFICATION	2.978376166545626E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999989670590681	WITHOUT_CLASSIFICATION	1.0329409318729738E-6	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999993806112438	WITHOUT_CLASSIFICATION	6.193887562094641E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999952537831934	WITHOUT_CLASSIFICATION	4.74621680661327E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9995899581012456	WITHOUT_CLASSIFICATION	4.1004189875428284E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999991985619	WITHOUT_CLASSIFICATION	8.014381371533468E-10	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999903178845836	WITHOUT_CLASSIFICATION	9.68211541646017E-6	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999350744829	WITHOUT_CLASSIFICATION	6.492551712367137E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999993086566877	WITHOUT_CLASSIFICATION	6.913433122545154E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999998543573684	WITHOUT_CLASSIFICATION	1.4564263158771584E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.999999062537263	WITHOUT_CLASSIFICATION	9.374627370766792E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999907067780146	WITHOUT_CLASSIFICATION	9.293221985417941E-6	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999785824736416	WITHOUT_CLASSIFICATION	2.1417526358436043E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999785824736416	WITHOUT_CLASSIFICATION	2.1417526358436043E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999999795843433	WITHOUT_CLASSIFICATION	2.0415656697137525E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999992254653112	WITHOUT_CLASSIFICATION	7.745346888778792E-7	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999846238000006	WITHOUT_CLASSIFICATION	1.5376199999410604E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999530113977801	WITHOUT_CLASSIFICATION	4.698860221980513E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999993401578346	WITHOUT_CLASSIFICATION	6.59842165376651E-7	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999975727579976	WITHOUT_CLASSIFICATION	2.4272420024293296E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.999999200235604	WITHOUT_CLASSIFICATION	7.997643960846589E-7	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999993635398807	WITHOUT_CLASSIFICATION	6.364601193743166E-7	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999470031372	WITHOUT_CLASSIFICATION	5.2996862767089134E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999410748249	WITHOUT_CLASSIFICATION	5.892517499206218E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.999996647901883	WITHOUT_CLASSIFICATION	3.352098117126736E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9998833206464128	WITHOUT_CLASSIFICATION	1.1667935358717973E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999962877924649	WITHOUT_CLASSIFICATION	3.7122075351646616E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9994591307770294	WITHOUT_CLASSIFICATION	5.40869222970637E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999804197732978	WITHOUT_CLASSIFICATION	1.958022670224034E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999542062519	WITHOUT_CLASSIFICATION	4.579374808431659E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999991074882512	WITHOUT_CLASSIFICATION	8.925117487607328E-7	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999995287569796	WITHOUT_CLASSIFICATION	4.7124302044869593E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999997550948373	WITHOUT_CLASSIFICATION	2.4490516269075866E-7	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9998336272496096	WITHOUT_CLASSIFICATION	1.6637275039045382E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999657008508	WITHOUT_CLASSIFICATION	3.4299149199935757E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999874924655374	WITHOUT_CLASSIFICATION	1.2507534462576002E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.999999984647898	WITHOUT_CLASSIFICATION	1.5352102069082267E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999981022876895	WITHOUT_CLASSIFICATION	1.897712310525698E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999987332132385	WITHOUT_CLASSIFICATION	1.2667867614848368E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999971500444	WITHOUT_CLASSIFICATION	2.8499556335809246E-9	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999971500444	WITHOUT_CLASSIFICATION	2.8499556335809246E-9	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9988304245941436	WITHOUT_CLASSIFICATION	0.0011695754058564393	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999894196489537	WITHOUT_CLASSIFICATION	1.0580351046276267E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999990886127	WITHOUT_CLASSIFICATION	9.11387300443622E-10	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999438858929374	WITHOUT_CLASSIFICATION	5.6114107062775426E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999438729009893	WITHOUT_CLASSIFICATION	5.612709901083315E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999498434138306	WITHOUT_CLASSIFICATION	5.015658616931376E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999982808937928	WITHOUT_CLASSIFICATION	1.719106207222868E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.999683738230153	WITHOUT_CLASSIFICATION	3.162617698470218E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999861636967249	WITHOUT_CLASSIFICATION	1.3836303274979529E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9976530941813639	WITHOUT_CLASSIFICATION	0.002346905818636014	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.999990853502748	WITHOUT_CLASSIFICATION	9.146497252002544E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998771798564	WITHOUT_CLASSIFICATION	1.2282014366388354E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999989941799559	WITHOUT_CLASSIFICATION	1.0058200441000685E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9998972827309817	WITHOUT_CLASSIFICATION	1.0271726901825097E-4	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999775146	WITHOUT_CLASSIFICATION	2.248539999655202E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.999995572643621	WITHOUT_CLASSIFICATION	4.4273563788912685E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999990172551	WITHOUT_CLASSIFICATION	9.827448166436235E-10	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.999511202441688	WITHOUT_CLASSIFICATION	4.887975583119504E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9999229379799252	WITHOUT_CLASSIFICATION	7.706202007475179E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999984326565593	WITHOUT_CLASSIFICATION	1.5673434406970523E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999992380890002	WITHOUT_CLASSIFICATION	7.619109997280763E-7	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999486601119	WITHOUT_CLASSIFICATION	5.133988799553681E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999899102543808	WITHOUT_CLASSIFICATION	1.0089745619224599E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998375876268	WITHOUT_CLASSIFICATION	1.6241237328984E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999982077032394	WITHOUT_CLASSIFICATION	1.7922967605970257E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999970045098957	WITHOUT_CLASSIFICATION	2.9954901041765395E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999997585994577	WITHOUT_CLASSIFICATION	2.414005423516235E-7	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999886233802642	WITHOUT_CLASSIFICATION	1.137661973589355E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999967238400121	WITHOUT_CLASSIFICATION	3.2761599878155435E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999986658357481	WITHOUT_CLASSIFICATION	1.3341642518465856E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999953726626973	WITHOUT_CLASSIFICATION	4.627337302640831E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999391847412786	WITHOUT_CLASSIFICATION	6.081525872128429E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9996302966291156	WITHOUT_CLASSIFICATION	3.697033708844342E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999982077032394	WITHOUT_CLASSIFICATION	1.7922967605970257E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999965305166498	WITHOUT_CLASSIFICATION	3.469483350197652E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999418201350102	WITHOUT_CLASSIFICATION	5.817986498989816E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9997069138672383	WITHOUT_CLASSIFICATION	2.930861327617595E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999997348019165	WITHOUT_CLASSIFICATION	2.6519808348522965E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999994138445459	WITHOUT_CLASSIFICATION	5.861554541358271E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9989502222108688	WITHOUT_CLASSIFICATION	0.0010497777891312055	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999979893262	WITHOUT_CLASSIFICATION	2.010673834583353E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999725039374553	WITHOUT_CLASSIFICATION	2.7496062544756753E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999309616801355	WITHOUT_CLASSIFICATION	6.90383198644686E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999660899262344	WITHOUT_CLASSIFICATION	3.391007376553554E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998831917131	WITHOUT_CLASSIFICATION	1.1680828695849997E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998831917131	WITHOUT_CLASSIFICATION	1.1680828695849997E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998831917131	WITHOUT_CLASSIFICATION	1.1680828695849997E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999659728235736	WITHOUT_CLASSIFICATION	3.40271764264043E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9907296495832144	WITHOUT_CLASSIFICATION	0.009270350416785674	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999983996794676	WITHOUT_CLASSIFICATION	1.600320532382887E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.999999732875626	WITHOUT_CLASSIFICATION	2.671243740046115E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999992286360487	WITHOUT_CLASSIFICATION	7.713639511840948E-7	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999893131322	WITHOUT_CLASSIFICATION	1.0686867870965973E-8	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999990680435537	WITHOUT_CLASSIFICATION	9.319564464197928E-7	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999965065543858	WITHOUT_CLASSIFICATION	3.493445614364011E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999950728632733	WITHOUT_CLASSIFICATION	4.927136726715248E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999990591852279	WITHOUT_CLASSIFICATION	9.40814772052096E-7	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999913358	WITHOUT_CLASSIFICATION	8.664057599239112E-12	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999777784921	WITHOUT_CLASSIFICATION	2.222150779328969E-8	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999974721830898	WITHOUT_CLASSIFICATION	2.52781691027531E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999990681625371	WITHOUT_CLASSIFICATION	9.3183746273909E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999146121618245	WITHOUT_CLASSIFICATION	8.538783817545304E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999943521	WITHOUT_CLASSIFICATION	5.647918460656738E-12	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999993249713947	WITHOUT_CLASSIFICATION	6.750286053328237E-7	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999995095870343	WITHOUT_CLASSIFICATION	4.904129656178626E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999907180879	WITHOUT_CLASSIFICATION	9.28191211496998E-9	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999995288522318	WITHOUT_CLASSIFICATION	4.711477681971527E-7	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999994309	WITHOUT_CLASSIFICATION	5.691837083190347E-13	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999971341001118	WITHOUT_CLASSIFICATION	2.865899888215432E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999917162293985	WITHOUT_CLASSIFICATION	8.283770601533852E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.999999936825094	WITHOUT_CLASSIFICATION	6.317490593542779E-8	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999189026936	WITHOUT_CLASSIFICATION	8.109730644413954E-8	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999284417372	WITHOUT_CLASSIFICATION	7.155826273342583E-8	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999999652758811	WITHOUT_CLASSIFICATION	3.4724118924688284E-8	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.999999983507143	WITHOUT_CLASSIFICATION	1.649285691822146E-8	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999925868924302	WITHOUT_CLASSIFICATION	7.41310756972842E-6	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999919573228	WITHOUT_CLASSIFICATION	8.042677267841778E-9	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999992290525966	WITHOUT_CLASSIFICATION	7.709474034314784E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999072192172447	WITHOUT_CLASSIFICATION	9.278078275530513E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999367477693	WITHOUT_CLASSIFICATION	6.325223068172837E-8	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999871229023	WITHOUT_CLASSIFICATION	1.2877097663280339E-8	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.999999998033447	WITHOUT_CLASSIFICATION	1.9665531353567233E-9	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999712756322403	WITHOUT_CLASSIFICATION	2.8724367759707644E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999824555545283	WITHOUT_CLASSIFICATION	1.754444547168924E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999913408703764	WITHOUT_CLASSIFICATION	8.659129623462937E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964582293311	WITHOUT_CLASSIFICATION	3.541770668898921E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964582293311	WITHOUT_CLASSIFICATION	3.541770668898921E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999988429132848	WITHOUT_CLASSIFICATION	1.1570867152602122E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999988429132848	WITHOUT_CLASSIFICATION	1.1570867152602122E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999996410112016	WITHOUT_CLASSIFICATION	3.589887983537111E-7	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999670209737687	WITHOUT_CLASSIFICATION	3.297902623127196E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999997493734482	WITHOUT_CLASSIFICATION	2.506265518771824E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999999924102767	WITHOUT_CLASSIFICATION	7.589723295296758E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999999924102767	WITHOUT_CLASSIFICATION	7.589723295296758E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999999924102767	WITHOUT_CLASSIFICATION	7.589723295296758E-8	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999949617541289	WITHOUT_CLASSIFICATION	5.0382458711027175E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.999999992600333	WITHOUT_CLASSIFICATION	7.399667025899022E-9	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999737430989383	WITHOUT_CLASSIFICATION	2.625690106171659E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999985643289591	WITHOUT_CLASSIFICATION	1.435671040988823E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999266504662	WITHOUT_CLASSIFICATION	7.334953373712122E-8	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999978097164752	WITHOUT_CLASSIFICATION	2.1902835247842076E-6	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999996426771316	WITHOUT_CLASSIFICATION	3.5732286843207887E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999994339813169	WITHOUT_CLASSIFICATION	5.660186831000807E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999994339813169	WITHOUT_CLASSIFICATION	5.660186831000807E-7	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999992520373	WITHOUT_CLASSIFICATION	7.479627697419278E-10	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999998477281877	WITHOUT_CLASSIFICATION	1.5227181220672764E-7	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999987406214677	WITHOUT_CLASSIFICATION	1.259378532411116E-6	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999919545279	WITHOUT_CLASSIFICATION	8.045472085537488E-9	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999755938112	WITHOUT_CLASSIFICATION	2.440618889099306E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999829620745153	WITHOUT_CLASSIFICATION	1.7037925484624287E-5	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999999607735689	WITHOUT_CLASSIFICATION	3.9226431073207924E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.999997678835893	WITHOUT_CLASSIFICATION	2.3211641070233364E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999996009073813	WITHOUT_CLASSIFICATION	3.990926187077543E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999769038946	WITHOUT_CLASSIFICATION	2.3096105398502003E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999655179502	WITHOUT_CLASSIFICATION	3.44820497497348E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999983924835537	WITHOUT_CLASSIFICATION	1.6075164462926357E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.99999970719333	WITHOUT_CLASSIFICATION	2.928066699807789E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999994439668666	WITHOUT_CLASSIFICATION	5.560331333815979E-7	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999998499385928	WITHOUT_CLASSIFICATION	1.5006140711806337E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999997600724104	WITHOUT_CLASSIFICATION	2.399275896077204E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999959775426903	WITHOUT_CLASSIFICATION	4.022457309686727E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999996602387411	WITHOUT_CLASSIFICATION	3.3976125890098866E-7	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999999795843433	WITHOUT_CLASSIFICATION	2.0415656697137525E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999205500771	WITHOUT_CLASSIFICATION	7.944992282909988E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.998863334301109	WITHOUT_CLASSIFICATION	0.0011366656988911136	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999998775682802	WITHOUT_CLASSIFICATION	1.2243171978524365E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999998855334788	WITHOUT_CLASSIFICATION	1.144665212102693E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999994094723073	WITHOUT_CLASSIFICATION	5.905276927907343E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999971268602326	WITHOUT_CLASSIFICATION	2.8731397674046446E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999993200373342	WITHOUT_CLASSIFICATION	6.799626658758443E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999985272798956	WITHOUT_CLASSIFICATION	1.4727201045085698E-6	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999978049183	WITHOUT_CLASSIFICATION	2.1950816308021103E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999891758354	WITHOUT_CLASSIFICATION	1.0824164567650011E-8	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999891758354	WITHOUT_CLASSIFICATION	1.0824164567650011E-8	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999954379102	WITHOUT_CLASSIFICATION	4.562089779879579E-9	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999834015590772	WITHOUT_CLASSIFICATION	1.6598440922747958E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999989461987	WITHOUT_CLASSIFICATION	1.0538013003732767E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999995908377643	WITHOUT_CLASSIFICATION	4.091622356961198E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999995908377643	WITHOUT_CLASSIFICATION	4.091622356961198E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999989798513768	WITHOUT_CLASSIFICATION	1.0201486232781803E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9907135014973171	WITHOUT_CLASSIFICATION	0.009286498502682932	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999995734049905	WITHOUT_CLASSIFICATION	4.265950096406632E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999592401758	WITHOUT_CLASSIFICATION	4.075982411689698E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9998988161243234	WITHOUT_CLASSIFICATION	1.0118387567648359E-4	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999950294207	WITHOUT_CLASSIFICATION	4.970579278984383E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999998869553732	WITHOUT_CLASSIFICATION	1.1304462674047825E-7	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999977330512834	WITHOUT_CLASSIFICATION	2.266948716539041E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.999999348492336	WITHOUT_CLASSIFICATION	6.515076641210558E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999955609130603	WITHOUT_CLASSIFICATION	4.439086939709983E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999977553329	WITHOUT_CLASSIFICATION	2.244667019780651E-9	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999987209767242	WITHOUT_CLASSIFICATION	1.2790232757968498E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999510810547	WITHOUT_CLASSIFICATION	4.891894530004903E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999996418353	WITHOUT_CLASSIFICATION	3.581647322507342E-10	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999640750519351	WITHOUT_CLASSIFICATION	3.5924948064819945E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999998761803612	WITHOUT_CLASSIFICATION	1.2381963882595606E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999999644556436	WITHOUT_CLASSIFICATION	3.554435639583209E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999970401274	WITHOUT_CLASSIFICATION	2.95987267023497E-9	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999813811183	WITHOUT_CLASSIFICATION	1.861888171441712E-8	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999842075944	WITHOUT_CLASSIFICATION	1.5792405619891553E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999996863865896	WITHOUT_CLASSIFICATION	3.136134103388605E-7	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998040252223663	WITHOUT_CLASSIFICATION	1.9597477763362095E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999709103794272	WITHOUT_CLASSIFICATION	2.908962057290628E-5	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999975587720457	WITHOUT_CLASSIFICATION	2.441227954206743E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999991122122014	WITHOUT_CLASSIFICATION	8.877877986252303E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999991122122014	WITHOUT_CLASSIFICATION	8.877877986252303E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999991122122014	WITHOUT_CLASSIFICATION	8.877877986252303E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999991122122014	WITHOUT_CLASSIFICATION	8.877877986252303E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999999409608496	WITHOUT_CLASSIFICATION	5.903915040473859E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999974241296385	WITHOUT_CLASSIFICATION	2.5758703614563396E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999974923193656	WITHOUT_CLASSIFICATION	2.507680634328747E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999974923193656	WITHOUT_CLASSIFICATION	2.507680634328747E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999974923193656	WITHOUT_CLASSIFICATION	2.507680634328747E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.999999945512677	WITHOUT_CLASSIFICATION	5.448732299780776E-8	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.999848305943331	WITHOUT_CLASSIFICATION	1.5169405666910164E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999991868907565	WITHOUT_CLASSIFICATION	8.13109243582748E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999967880942116	WITHOUT_CLASSIFICATION	3.2119057884423815E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999967880942116	WITHOUT_CLASSIFICATION	3.2119057884423815E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999997550948373	WITHOUT_CLASSIFICATION	2.4490516269075866E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999997550948373	WITHOUT_CLASSIFICATION	2.4490516269075866E-7	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9956233879052353	WITHOUT_CLASSIFICATION	0.004376612094764737	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9956233879052353	WITHOUT_CLASSIFICATION	0.004376612094764737	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999642676742407	WITHOUT_CLASSIFICATION	3.573232575929871E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999992467220283	WITHOUT_CLASSIFICATION	7.53277971722282E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999951657760157	WITHOUT_CLASSIFICATION	4.834223984383638E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999974323402192	WITHOUT_CLASSIFICATION	2.5676597808779024E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999995375603268	WITHOUT_CLASSIFICATION	4.6243967317156666E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999839680490203	WITHOUT_CLASSIFICATION	1.603195097970223E-5	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.999952931114339	WITHOUT_CLASSIFICATION	4.706888566108088E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999732251335	WITHOUT_CLASSIFICATION	2.6774866614294376E-8	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999999906378497	WITHOUT_CLASSIFICATION	9.362150149791278E-9	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999851193772668	WITHOUT_CLASSIFICATION	1.4880622733126253E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999941168286058	WITHOUT_CLASSIFICATION	5.883171394219063E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999954209229015	WITHOUT_CLASSIFICATION	4.57907709846584E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999999266615999	WITHOUT_CLASSIFICATION	7.333840015683781E-8	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999998324447604	WITHOUT_CLASSIFICATION	1.6755523960628374E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999962894596199	WITHOUT_CLASSIFICATION	3.710540380093195E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999918036058089	WITHOUT_CLASSIFICATION	8.19639419111192E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999993916114444	WITHOUT_CLASSIFICATION	6.083885555433014E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987198305132	WITHOUT_CLASSIFICATION	1.2801694868245877E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999452437589473	WITHOUT_CLASSIFICATION	5.475624105265391E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999998745443519	WITHOUT_CLASSIFICATION	1.2545564820160303E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999818643624002	WITHOUT_CLASSIFICATION	1.8135637599825586E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999818643624002	WITHOUT_CLASSIFICATION	1.8135637599825586E-5	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999874123236756	WITHOUT_CLASSIFICATION	1.2587676324471582E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999890401536509	WITHOUT_CLASSIFICATION	1.0959846349124787E-5	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9987850661767989	WITHOUT_CLASSIFICATION	0.0012149338232011321	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9984208566875131	WITHOUT_CLASSIFICATION	0.0015791433124868884	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.998182179413594	WITHOUT_CLASSIFICATION	0.0018178205864060836	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9989709752030155	WITHOUT_CLASSIFICATION	0.0010290247969845978	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9990798606334644	WITHOUT_CLASSIFICATION	9.201393665354593E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.996984495999106	WITHOUT_CLASSIFICATION	0.003015504000894064	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9986355396297529	WITHOUT_CLASSIFICATION	0.0013644603702470583	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9967142300782109	WITHOUT_CLASSIFICATION	0.0032857699217890782	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9989446095453333	WITHOUT_CLASSIFICATION	0.0010553904546667008	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.998941658381414	WITHOUT_CLASSIFICATION	0.0010583416185860357	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9983713192069926	WITHOUT_CLASSIFICATION	0.0016286807930073694	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9964775789855822	WITHOUT_CLASSIFICATION	0.0035224210144179013	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9987237756825649	WITHOUT_CLASSIFICATION	0.0012762243174351097	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9980416885062704	WITHOUT_CLASSIFICATION	0.001958311493729598	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999963798349667	WITHOUT_CLASSIFICATION	3.6201650333512415E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999923019272423	WITHOUT_CLASSIFICATION	7.698072757591754E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999994757701997	WITHOUT_CLASSIFICATION	5.242298003147359E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999993193064	WITHOUT_CLASSIFICATION	6.806935485058817E-10	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999914257743749	WITHOUT_CLASSIFICATION	8.574225625075289E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999914257743749	WITHOUT_CLASSIFICATION	8.574225625075289E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999914257743749	WITHOUT_CLASSIFICATION	8.574225625075289E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999914257743749	WITHOUT_CLASSIFICATION	8.574225625075289E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9977342372295285	WITHOUT_CLASSIFICATION	0.002265762770471484	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924309243	WITHOUT_CLASSIFICATION	7.56907579259167E-9	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999999551188	WITHOUT_CLASSIFICATION	4.48811482389002E-11	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995213724953	WITHOUT_CLASSIFICATION	4.786275046387378E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995213724953	WITHOUT_CLASSIFICATION	4.786275046387378E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999459283817755	WITHOUT_CLASSIFICATION	5.407161822443398E-5	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999973437244714	WITHOUT_CLASSIFICATION	2.656275528643897E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999973437244714	WITHOUT_CLASSIFICATION	2.656275528643897E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999973974180988	WITHOUT_CLASSIFICATION	2.602581901292548E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999973974180988	WITHOUT_CLASSIFICATION	2.602581901292548E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999938685773282	WITHOUT_CLASSIFICATION	6.1314226717620095E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999724526491134	WITHOUT_CLASSIFICATION	2.7547350886659113E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999862225367172	WITHOUT_CLASSIFICATION	1.3777463282802522E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999995475210625	WITHOUT_CLASSIFICATION	4.524789376184962E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999877695284	WITHOUT_CLASSIFICATION	1.2230471520395022E-8	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999962321312	WITHOUT_CLASSIFICATION	3.76786877011325E-9	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999391808765	WITHOUT_CLASSIFICATION	6.081912355595205E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999981504148368	WITHOUT_CLASSIFICATION	1.8495851632996442E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9995270831104177	WITHOUT_CLASSIFICATION	4.7291688958227827E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9995270831104177	WITHOUT_CLASSIFICATION	4.7291688958227827E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999997283324705	WITHOUT_CLASSIFICATION	2.7166752949569775E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999998620472444	WITHOUT_CLASSIFICATION	1.3795275565042125E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999124312527	WITHOUT_CLASSIFICATION	8.756874721673635E-8	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999928868492	WITHOUT_CLASSIFICATION	7.11315089844571E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999765881675025	WITHOUT_CLASSIFICATION	2.341183249758204E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999768817371	WITHOUT_CLASSIFICATION	2.3118262892128958E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999768817371	WITHOUT_CLASSIFICATION	2.3118262892128958E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999768817371	WITHOUT_CLASSIFICATION	2.3118262892128958E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999977058566	WITHOUT_CLASSIFICATION	2.2941433615662046E-9	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999977058566	WITHOUT_CLASSIFICATION	2.2941433615662046E-9	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999957319174	WITHOUT_CLASSIFICATION	4.26808250035854E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999720037295	WITHOUT_CLASSIFICATION	2.799627055075716E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999720037295	WITHOUT_CLASSIFICATION	2.799627055075716E-8	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.999999791445777	WITHOUT_CLASSIFICATION	2.085542229007016E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999998390472761	WITHOUT_CLASSIFICATION	1.6095272403092642E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999438858929374	WITHOUT_CLASSIFICATION	5.6114107062775426E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999625604516745	WITHOUT_CLASSIFICATION	3.743954832548508E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995421297150733	WITHOUT_CLASSIFICATION	4.5787028492678825E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995421297150733	WITHOUT_CLASSIFICATION	4.5787028492678825E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998078841852662	WITHOUT_CLASSIFICATION	1.9211581473379987E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999118698763969	WITHOUT_CLASSIFICATION	8.813012360305977E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999163127375382	WITHOUT_CLASSIFICATION	8.368726246176894E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999907961444914	WITHOUT_CLASSIFICATION	9.203855508601607E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999020508482712	WITHOUT_CLASSIFICATION	9.79491517288433E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999242646866493	WITHOUT_CLASSIFICATION	7.573531335070505E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999318123730454	WITHOUT_CLASSIFICATION	6.818762695452813E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999937788801321	WITHOUT_CLASSIFICATION	6.2211198679585565E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998449561081261	WITHOUT_CLASSIFICATION	1.5504389187387152E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998919907365564	WITHOUT_CLASSIFICATION	1.080092634435276E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919747104384	WITHOUT_CLASSIFICATION	8.025289561484447E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999324498872749	WITHOUT_CLASSIFICATION	6.755011272516978E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999924045899831	WITHOUT_CLASSIFICATION	7.595410016960923E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9997285574866894	WITHOUT_CLASSIFICATION	2.714425133104991E-4	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999986829557228	WITHOUT_CLASSIFICATION	1.3170442771939812E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999909241694894	WITHOUT_CLASSIFICATION	9.075830510516623E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.999999522563857	WITHOUT_CLASSIFICATION	4.774361429288519E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9866135675528057	WITHOUT_CLASSIFICATION	0.013386432447194204	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999979404171568	WITHOUT_CLASSIFICATION	2.0595828430891196E-6	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.999999754436019	WITHOUT_CLASSIFICATION	2.4556398108794497E-7	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999933703304699	WITHOUT_CLASSIFICATION	6.629669530176018E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.999988855951412	WITHOUT_CLASSIFICATION	1.114404858798083E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999987042618486	WITHOUT_CLASSIFICATION	1.295738151450201E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999991697914618	WITHOUT_CLASSIFICATION	8.302085381860147E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999994592222046	WITHOUT_CLASSIFICATION	5.407777954298265E-7	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999834872951	WITHOUT_CLASSIFICATION	1.651270479131142E-8	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999979882181979	WITHOUT_CLASSIFICATION	2.0117818020950665E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999858011037145	WITHOUT_CLASSIFICATION	1.4198896285663076E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999900324942799	WITHOUT_CLASSIFICATION	9.967505720090848E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999970748868457	WITHOUT_CLASSIFICATION	2.9251131542766975E-6	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999977086064232	WITHOUT_CLASSIFICATION	2.291393576851655E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999996207412354	WITHOUT_CLASSIFICATION	3.792587645946538E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.999999659532539	WITHOUT_CLASSIFICATION	3.404674610716291E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999945793940266	WITHOUT_CLASSIFICATION	5.420605973410092E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999317373328463	WITHOUT_CLASSIFICATION	6.826266715367171E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999265646054649	WITHOUT_CLASSIFICATION	7.343539453509205E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999995680729574	WITHOUT_CLASSIFICATION	4.3192704257621925E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989754490187	WITHOUT_CLASSIFICATION	1.024550981175689E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999138891810497	WITHOUT_CLASSIFICATION	8.611081895031278E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998213184687	WITHOUT_CLASSIFICATION	1.7868153130507133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999996367859905	WITHOUT_CLASSIFICATION	3.6321400957386447E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999989452682201	WITHOUT_CLASSIFICATION	1.0547317799639623E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999923720100637	WITHOUT_CLASSIFICATION	7.627989936239836E-6	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999970682659257	WITHOUT_CLASSIFICATION	2.9317340743786068E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999964729502616	WITHOUT_CLASSIFICATION	3.527049738435473E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999986910175807	WITHOUT_CLASSIFICATION	1.3089824193569201E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999931895903091	WITHOUT_CLASSIFICATION	6.810409690818065E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999994856166118	WITHOUT_CLASSIFICATION	5.143833881905549E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992667941929642	WITHOUT_CLASSIFICATION	7.332058070358724E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.999995283871609	WITHOUT_CLASSIFICATION	4.716128391061565E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992667941929642	WITHOUT_CLASSIFICATION	7.332058070358724E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999989146771838	WITHOUT_CLASSIFICATION	1.085322816127533E-6	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999993665523137	WITHOUT_CLASSIFICATION	6.334476862714928E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999966960438711	WITHOUT_CLASSIFICATION	3.30395612886209E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999804982547031	WITHOUT_CLASSIFICATION	1.950174529692653E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999996534465905	WITHOUT_CLASSIFICATION	3.465534094865013E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999999727475073	WITHOUT_CLASSIFICATION	2.725249264906762E-8	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999422938294	WITHOUT_CLASSIFICATION	5.770617066803314E-8	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999976973112246	WITHOUT_CLASSIFICATION	2.302688775493949E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9866135675528057	WITHOUT_CLASSIFICATION	0.013386432447194204	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999848713872377	WITHOUT_CLASSIFICATION	1.5128612762447802E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999949597497453	WITHOUT_CLASSIFICATION	5.0402502546707315E-6	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999998060285996	WITHOUT_CLASSIFICATION	1.9397140034669856E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999950843211	WITHOUT_CLASSIFICATION	4.915678884719546E-9	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.99998846290926	WITHOUT_CLASSIFICATION	1.1537090740060978E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999955271764588	WITHOUT_CLASSIFICATION	4.472823541140994E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999812820874208	WITHOUT_CLASSIFICATION	1.8717912579250154E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999363743066	WITHOUT_CLASSIFICATION	6.362569344034673E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999999314860781	WITHOUT_CLASSIFICATION	6.851392185389609E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999942883912761	WITHOUT_CLASSIFICATION	5.7116087239560555E-6	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999505018152	WITHOUT_CLASSIFICATION	4.949818468546648E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999391929901102	WITHOUT_CLASSIFICATION	6.0807009889843246E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999954086057268	WITHOUT_CLASSIFICATION	4.591394273197453E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999907676300156	WITHOUT_CLASSIFICATION	9.232369984401434E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999977037840503	WITHOUT_CLASSIFICATION	2.2962159497586238E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999942779640747	WITHOUT_CLASSIFICATION	5.722035925308693E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998389328617	WITHOUT_CLASSIFICATION	1.6106713835069667E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999912316634583	WITHOUT_CLASSIFICATION	8.768336541697003E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999912316634583	WITHOUT_CLASSIFICATION	8.768336541697003E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999925916856384	WITHOUT_CLASSIFICATION	7.40831436164242E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9997582363495485	WITHOUT_CLASSIFICATION	2.4176365045147592E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9917072675650619	WITHOUT_CLASSIFICATION	0.008292732434938043	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9998436546570861	WITHOUT_CLASSIFICATION	1.563453429138384E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997208694948	WITHOUT_CLASSIFICATION	2.7913050514739084E-7	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.999976246399418	WITHOUT_CLASSIFICATION	2.3753600582011235E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9995330445654764	WITHOUT_CLASSIFICATION	4.6695543452349305E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999995836605463	WITHOUT_CLASSIFICATION	4.163394535801632E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992042930995	WITHOUT_CLASSIFICATION	7.957069004415232E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978464324634	WITHOUT_CLASSIFICATION	2.153567536608728E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999000195015773	WITHOUT_CLASSIFICATION	9.998049842275613E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999897025368417	WITHOUT_CLASSIFICATION	1.0297463158287459E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999741212503931	WITHOUT_CLASSIFICATION	2.5878749606919585E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999915737866923	WITHOUT_CLASSIFICATION	8.426213307765708E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999407256018	WITHOUT_CLASSIFICATION	5.9274398078166477E-8	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999925257513226	WITHOUT_CLASSIFICATION	7.474248677379817E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997129212633	WITHOUT_CLASSIFICATION	2.8707873660928453E-7	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999937440976026	WITHOUT_CLASSIFICATION	6.2559023974288416E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999964507127083	WITHOUT_CLASSIFICATION	3.5492872918582436E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997208694948	WITHOUT_CLASSIFICATION	2.7913050514739084E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997129212633	WITHOUT_CLASSIFICATION	2.8707873660928453E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999995836605463	WITHOUT_CLASSIFICATION	4.163394535801632E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992042930995	WITHOUT_CLASSIFICATION	7.957069004415232E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999998484818288	WITHOUT_CLASSIFICATION	1.5151817132768055E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990677893038	WITHOUT_CLASSIFICATION	9.322106961912131E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999982593857377	WITHOUT_CLASSIFICATION	1.7406142623102127E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999237324219	WITHOUT_CLASSIFICATION	7.62675780891077E-8	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999584942568	WITHOUT_CLASSIFICATION	4.150574314626225E-8	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999896482711712	WITHOUT_CLASSIFICATION	1.0351728828775284E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999896482711712	WITHOUT_CLASSIFICATION	1.0351728828775284E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999915239222603	WITHOUT_CLASSIFICATION	8.476077739720909E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999985175398387	WITHOUT_CLASSIFICATION	1.4824601612136628E-6	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999108438185	WITHOUT_CLASSIFICATION	8.915618155175456E-8	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997782445378	WITHOUT_CLASSIFICATION	2.2175546215121764E-7	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998842376735	WITHOUT_CLASSIFICATION	1.1576232647837023E-7	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999986903853019	WITHOUT_CLASSIFICATION	1.3096146981357706E-6	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998977348437	WITHOUT_CLASSIFICATION	1.022651562956468E-7	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998040998487	WITHOUT_CLASSIFICATION	1.9590015133983363E-7	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999986427711688	WITHOUT_CLASSIFICATION	1.357228831142158E-6	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999894016748	WITHOUT_CLASSIFICATION	1.0598325204806042E-7	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997969774281	WITHOUT_CLASSIFICATION	2.030225718816551E-7	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999312872753	WITHOUT_CLASSIFICATION	6.871272466498736E-8	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999986394545677	WITHOUT_CLASSIFICATION	1.3605454322832512E-6	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999107819023	WITHOUT_CLASSIFICATION	8.921809767948374E-8	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998290929218	WITHOUT_CLASSIFICATION	1.7090707802690299E-7	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999992459657767	WITHOUT_CLASSIFICATION	7.540342232346881E-7	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999428467157	WITHOUT_CLASSIFICATION	5.715328438690328E-8	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999169285138	WITHOUT_CLASSIFICATION	8.307148619741738E-8	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998965765327	WITHOUT_CLASSIFICATION	1.0342346734645625E-7	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999982283238674	WITHOUT_CLASSIFICATION	1.77167613262663E-6	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998657127197	WITHOUT_CLASSIFICATION	1.3428728028869667E-7	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997427579568	WITHOUT_CLASSIFICATION	2.57242043264522E-7	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999341367805	WITHOUT_CLASSIFICATION	6.586321946096409E-8	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999989048472828	WITHOUT_CLASSIFICATION	1.0951527172095774E-6	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999144817618	WITHOUT_CLASSIFICATION	8.551823815748951E-8	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998361804091	WITHOUT_CLASSIFICATION	1.6381959076873247E-7	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999025458998	WITHOUT_CLASSIFICATION	9.745410026814297E-8	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999987926436936	WITHOUT_CLASSIFICATION	1.2073563063810017E-6	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999592838131	WITHOUT_CLASSIFICATION	4.0716186755781617E-8	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995784877601	WITHOUT_CLASSIFICATION	4.215122398886516E-7	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999611873884096	WITHOUT_CLASSIFICATION	3.8812611590521716E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989882810185	WITHOUT_CLASSIFICATION	1.0117189815458413E-6	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997331159588	WITHOUT_CLASSIFICATION	2.668840411897046E-7	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999982499032	WITHOUT_CLASSIFICATION	1.7500968036467467E-8	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999664749688	WITHOUT_CLASSIFICATION	3.352503117592318E-8	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997593419133	WITHOUT_CLASSIFICATION	2.406580867705477E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999842188039	WITHOUT_CLASSIFICATION	1.578119606665082E-8	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999697693813	WITHOUT_CLASSIFICATION	3.023061866397787E-8	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999996804087183	WITHOUT_CLASSIFICATION	3.195912816720875E-7	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999757760544	WITHOUT_CLASSIFICATION	2.422394569399838E-8	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999535963653	WITHOUT_CLASSIFICATION	4.6403634810594846E-8	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998045205508	WITHOUT_CLASSIFICATION	1.954794491163748E-7	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999871814015	WITHOUT_CLASSIFICATION	1.2818598471678995E-8	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999748414591	WITHOUT_CLASSIFICATION	2.5158540873296202E-8	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997826423497	WITHOUT_CLASSIFICATION	2.1735765044264614E-7	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999914803033	WITHOUT_CLASSIFICATION	8.519696652441511E-9	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999841072603	WITHOUT_CLASSIFICATION	1.5892739664632702E-8	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999997567503954	WITHOUT_CLASSIFICATION	2.4324960453472015E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999471156636	WITHOUT_CLASSIFICATION	5.2884336299645926E-8	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999935361910789	WITHOUT_CLASSIFICATION	6.4638089209924575E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999998842674452	WITHOUT_CLASSIFICATION	1.1573255476255518E-7	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999570195318	WITHOUT_CLASSIFICATION	4.2980468231702986E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9998640419598731	WITHOUT_CLASSIFICATION	1.359580401268816E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999580890090127	WITHOUT_CLASSIFICATION	4.191099098732071E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999897025368417	WITHOUT_CLASSIFICATION	1.0297463158287459E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999996221716598	WITHOUT_CLASSIFICATION	3.778283402055252E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999707637319	WITHOUT_CLASSIFICATION	2.92362680720856E-8	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999949830891355	WITHOUT_CLASSIFICATION	5.016910864559723E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999905059163541	WITHOUT_CLASSIFICATION	9.494083645965431E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999998957972362	WITHOUT_CLASSIFICATION	1.0420276372691113E-7	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999989364173373	WITHOUT_CLASSIFICATION	1.0635826627491355E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999999620102483	WITHOUT_CLASSIFICATION	3.798975169650379E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999000195015773	WITHOUT_CLASSIFICATION	9.998049842275613E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999893877470375	WITHOUT_CLASSIFICATION	1.06122529624339E-5	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999999964064126	WITHOUT_CLASSIFICATION	3.5935872815715266E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999911971992415	WITHOUT_CLASSIFICATION	8.802800758619479E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999887154964096	WITHOUT_CLASSIFICATION	1.1284503590447286E-5	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999944504802942	WITHOUT_CLASSIFICATION	5.549519705680613E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999944619250314	WITHOUT_CLASSIFICATION	5.538074968578939E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999998266305651	WITHOUT_CLASSIFICATION	1.7336943483067206E-7	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999994660481419	WITHOUT_CLASSIFICATION	5.339518579762868E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999961390805295	WITHOUT_CLASSIFICATION	3.860919470394999E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999998963986757	WITHOUT_CLASSIFICATION	1.0360132422797192E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999990601266636	WITHOUT_CLASSIFICATION	9.398733364052524E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998772295426	WITHOUT_CLASSIFICATION	1.2277045732752612E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999841772571715	WITHOUT_CLASSIFICATION	1.5822742828528796E-5	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999997629171801	WITHOUT_CLASSIFICATION	2.370828197834376E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999967675814	WITHOUT_CLASSIFICATION	3.2324186398107246E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999955191937605	WITHOUT_CLASSIFICATION	4.4808062395594846E-6	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999995344076364	WITHOUT_CLASSIFICATION	4.655923635718481E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999865103290503	WITHOUT_CLASSIFICATION	1.3489670949784248E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999000195015773	WITHOUT_CLASSIFICATION	9.998049842275613E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999990601266636	WITHOUT_CLASSIFICATION	9.398733364052524E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998772295426	WITHOUT_CLASSIFICATION	1.2277045732752612E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999841772571715	WITHOUT_CLASSIFICATION	1.5822742828528796E-5	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999979925604174	WITHOUT_CLASSIFICATION	2.007439582540638E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999534816645893	WITHOUT_CLASSIFICATION	4.651833541079267E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999997952055089	WITHOUT_CLASSIFICATION	2.0479449123755114E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999996442908	WITHOUT_CLASSIFICATION	3.557092364544661E-10	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999982985233542	WITHOUT_CLASSIFICATION	1.7014766457402022E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999959181340091	WITHOUT_CLASSIFICATION	4.08186599093174E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999982574831707	WITHOUT_CLASSIFICATION	1.7425168291740587E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999987638317789	WITHOUT_CLASSIFICATION	1.2361682211597844E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999956437390912	WITHOUT_CLASSIFICATION	4.356260908846809E-6	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.999999979875396	WITHOUT_CLASSIFICATION	2.012460402094335E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9996887521371449	WITHOUT_CLASSIFICATION	3.112478628551309E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999944353752069	WITHOUT_CLASSIFICATION	5.564624793009123E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999450512206	WITHOUT_CLASSIFICATION	5.494877951030131E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999997561245675	WITHOUT_CLASSIFICATION	2.4387543254150344E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999954216743826	WITHOUT_CLASSIFICATION	4.578325617425583E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999998613976119	WITHOUT_CLASSIFICATION	1.386023881417221E-7	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999805596794838	WITHOUT_CLASSIFICATION	1.9440320516125437E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.999999984909897	WITHOUT_CLASSIFICATION	1.5090102906661216E-8	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999998680639837	WITHOUT_CLASSIFICATION	1.3193601638143805E-7	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999977328343612	WITHOUT_CLASSIFICATION	2.2671656386733236E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9955563839013335	WITHOUT_CLASSIFICATION	0.004443616098666459	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9981565785017561	WITHOUT_CLASSIFICATION	0.0018434214982439258	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999977562931465	WITHOUT_CLASSIFICATION	2.243706853524065E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999885581863511	WITHOUT_CLASSIFICATION	1.1441813648912175E-5	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999981557801386	WITHOUT_CLASSIFICATION	1.8442198614035985E-6	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999766686794076	WITHOUT_CLASSIFICATION	2.333132059235159E-5	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999964789880916	WITHOUT_CLASSIFICATION	3.521011908439609E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999511283015	WITHOUT_CLASSIFICATION	4.8871698439578606E-8	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999998990998105	WITHOUT_CLASSIFICATION	1.0090018961894537E-7	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999850626969071	WITHOUT_CLASSIFICATION	1.4937303092859099E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999790181619529	WITHOUT_CLASSIFICATION	2.0981838047054158E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999973987242733	WITHOUT_CLASSIFICATION	2.6012757267282262E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.999999545559464	WITHOUT_CLASSIFICATION	4.544405359849002E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999975446057963	WITHOUT_CLASSIFICATION	2.455394203730575E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999990196132816	WITHOUT_CLASSIFICATION	9.80386718351474E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999943898023466	WITHOUT_CLASSIFICATION	5.6101976533434955E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999658133965	WITHOUT_CLASSIFICATION	3.418660349777051E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9998918443228971	WITHOUT_CLASSIFICATION	1.0815567710286012E-4	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.999963224297349	WITHOUT_CLASSIFICATION	3.6775702651016214E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999992947647368	WITHOUT_CLASSIFICATION	7.052352633184601E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999970748868457	WITHOUT_CLASSIFICATION	2.9251131542766975E-6	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999852591604979	WITHOUT_CLASSIFICATION	1.4740839502214787E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999994983175	WITHOUT_CLASSIFICATION	5.016824493916463E-10	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994966849473	WITHOUT_CLASSIFICATION	5.033150527434565E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999975069071342	WITHOUT_CLASSIFICATION	2.493092865837518E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998824616573911	WITHOUT_CLASSIFICATION	1.1753834260877914E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998370430261169	WITHOUT_CLASSIFICATION	1.6295697388314155E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998824616573911	WITHOUT_CLASSIFICATION	1.1753834260877914E-4	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999997071331741	WITHOUT_CLASSIFICATION	2.928668259441454E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999970394358826	WITHOUT_CLASSIFICATION	2.9605641175185445E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999614868264239	WITHOUT_CLASSIFICATION	3.851317357612709E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999981520029836	WITHOUT_CLASSIFICATION	1.8479970163457725E-6	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999998195350732	WITHOUT_CLASSIFICATION	1.8046492685125114E-7	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999998000452874	WITHOUT_CLASSIFICATION	1.9995471244741194E-7	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999706816723942	WITHOUT_CLASSIFICATION	2.9318327605746868E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999992160156367	WITHOUT_CLASSIFICATION	7.839843633762465E-7	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999984267030049	WITHOUT_CLASSIFICATION	1.5732969951035259E-6	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.99999973855298	WITHOUT_CLASSIFICATION	2.6144701998293927E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999999091613438	WITHOUT_CLASSIFICATION	9.083865609951207E-8	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999993865795936	WITHOUT_CLASSIFICATION	6.134204063738058E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999993219436958	WITHOUT_CLASSIFICATION	6.780563042650535E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999705112852	WITHOUT_CLASSIFICATION	2.9488714770280405E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999703639350193	WITHOUT_CLASSIFICATION	2.9636064980727127E-5	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.999988675535548	WITHOUT_CLASSIFICATION	1.1324464452063872E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999791337666	WITHOUT_CLASSIFICATION	2.0866233391525916E-8	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.99998911609356	WITHOUT_CLASSIFICATION	1.0883906439873416E-5	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999995918384378	WITHOUT_CLASSIFICATION	4.0816156213934875E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999997622374809	WITHOUT_CLASSIFICATION	2.3776251904092893E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.999999951170399	WITHOUT_CLASSIFICATION	4.882960107481901E-8	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999974538864549	WITHOUT_CLASSIFICATION	2.5461135450258197E-6	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999980512316571	WITHOUT_CLASSIFICATION	1.9487683428786968E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995455668154	WITHOUT_CLASSIFICATION	4.5443318455424974E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999986861218039	WITHOUT_CLASSIFICATION	1.3138781961659466E-6	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.999999924421444	WITHOUT_CLASSIFICATION	7.557855596461261E-8	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999993701472057	WITHOUT_CLASSIFICATION	6.298527942441819E-7	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.999998069305173	WITHOUT_CLASSIFICATION	1.9306948269029613E-6	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9996701277720782	WITHOUT_CLASSIFICATION	3.298722279217672E-4	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999983569027229	WITHOUT_CLASSIFICATION	1.6430972771750622E-6	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999512383993968	WITHOUT_CLASSIFICATION	4.876160060317625E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999927837155606	WITHOUT_CLASSIFICATION	7.216284439505864E-6	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999989474566	WITHOUT_CLASSIFICATION	1.0525434099859117E-9	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.999989837852457	WITHOUT_CLASSIFICATION	1.016214754309172E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999993301681338	WITHOUT_CLASSIFICATION	6.698318662655296E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999996172139708	WITHOUT_CLASSIFICATION	3.827860292380145E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999926488491	WITHOUT_CLASSIFICATION	7.351150875019886E-9	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999995129837099	WITHOUT_CLASSIFICATION	4.870162900529435E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994966849473	WITHOUT_CLASSIFICATION	5.033150527434565E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999995101851028	WITHOUT_CLASSIFICATION	4.898148971543542E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999995021570102	WITHOUT_CLASSIFICATION	4.978429898194571E-7	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999989590830826	WITHOUT_CLASSIFICATION	1.040916917438419E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999998929536982	WITHOUT_CLASSIFICATION	1.0704630189014903E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998370430261169	WITHOUT_CLASSIFICATION	1.6295697388314155E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999824197287205	WITHOUT_CLASSIFICATION	1.7580271279535674E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999942790263258	WITHOUT_CLASSIFICATION	5.720973674142283E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999988278827847	WITHOUT_CLASSIFICATION	1.1721172153036707E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999815850869438	WITHOUT_CLASSIFICATION	1.8414913056239428E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999998852562744	WITHOUT_CLASSIFICATION	1.1474372567900422E-7	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999914452599894	WITHOUT_CLASSIFICATION	8.554740010579E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999996377095624	WITHOUT_CLASSIFICATION	3.622904375684826E-7	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999954166385139	WITHOUT_CLASSIFICATION	4.5833614861243346E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999998723421867	WITHOUT_CLASSIFICATION	1.2765781327636986E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999434660121309	WITHOUT_CLASSIFICATION	5.653398786915268E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999977086064232	WITHOUT_CLASSIFICATION	2.291393576851655E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999977863386792	WITHOUT_CLASSIFICATION	2.2136613209045113E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999915088330795	WITHOUT_CLASSIFICATION	8.491166920490598E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999981468788667	WITHOUT_CLASSIFICATION	1.8531211333402396E-6	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999935270942545	WITHOUT_CLASSIFICATION	6.472905745480783E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999998023083948	WITHOUT_CLASSIFICATION	1.976916052332105E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.999946180682073	WITHOUT_CLASSIFICATION	5.3819317926969155E-5	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999998985347396	WITHOUT_CLASSIFICATION	1.0146526043058793E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979963478717	WITHOUT_CLASSIFICATION	2.0036521283128215E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999073964986	WITHOUT_CLASSIFICATION	9.260350141076851E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999996729344998	WITHOUT_CLASSIFICATION	3.2706550034186235E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979963478717	WITHOUT_CLASSIFICATION	2.0036521283128215E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999143194046	WITHOUT_CLASSIFICATION	8.568059535548366E-8	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999986794952953	WITHOUT_CLASSIFICATION	1.3205047046086283E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999281224896	WITHOUT_CLASSIFICATION	7.187751044676717E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999990637314791	WITHOUT_CLASSIFICATION	9.362685208493697E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.999999992804661	WITHOUT_CLASSIFICATION	7.1953390147978655E-9	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999431668312	WITHOUT_CLASSIFICATION	5.683316874277524E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999696280534	WITHOUT_CLASSIFICATION	3.037194658753014E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999982743935523	WITHOUT_CLASSIFICATION	1.725606447716499E-6	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999990434682537	WITHOUT_CLASSIFICATION	9.56531746281293E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999759833059	WITHOUT_CLASSIFICATION	2.4016694041787597E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999978343301642	WITHOUT_CLASSIFICATION	2.1656698357624226E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999863099552	WITHOUT_CLASSIFICATION	1.3690044845069394E-8	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999997742272	WITHOUT_CLASSIFICATION	2.2577280214076757E-10	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.999999989586595	WITHOUT_CLASSIFICATION	1.0413405034732204E-8	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999985478429245	WITHOUT_CLASSIFICATION	1.4521570754813043E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999941462686804	WITHOUT_CLASSIFICATION	5.853731319572481E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999953459893104	WITHOUT_CLASSIFICATION	4.654010689615846E-6	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999998431493531	WITHOUT_CLASSIFICATION	1.5685064699863866E-7	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999999924799001	WITHOUT_CLASSIFICATION	7.52009989102305E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999999331535615	WITHOUT_CLASSIFICATION	6.68464384596952E-8	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999993520169685	WITHOUT_CLASSIFICATION	6.479830313879251E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999966960438711	WITHOUT_CLASSIFICATION	3.30395612886209E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996760520345	WITHOUT_CLASSIFICATION	3.239479655212316E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.99999877483618	WITHOUT_CLASSIFICATION	1.2251638199639363E-6	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999891537429	WITHOUT_CLASSIFICATION	1.0846257123418025E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999891537429	WITHOUT_CLASSIFICATION	1.0846257123418025E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999871310911	WITHOUT_CLASSIFICATION	1.286890891851056E-8	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999934031405	WITHOUT_CLASSIFICATION	6.596859482816063E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999818423169	WITHOUT_CLASSIFICATION	1.8157683184456063E-8	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999997745921344	WITHOUT_CLASSIFICATION	2.2540786570681621E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999999289183781	WITHOUT_CLASSIFICATION	7.108162200638936E-8	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999626207352033	WITHOUT_CLASSIFICATION	3.737926479678918E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999975375143482	WITHOUT_CLASSIFICATION	2.4624856518747744E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999981742533741	WITHOUT_CLASSIFICATION	1.8257466258948858E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999383534663	WITHOUT_CLASSIFICATION	6.164653371621895E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999383534663	WITHOUT_CLASSIFICATION	6.164653371621895E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999969651903869	WITHOUT_CLASSIFICATION	3.034809613052174E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999969651903869	WITHOUT_CLASSIFICATION	3.034809613052174E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999857662107781	WITHOUT_CLASSIFICATION	1.4233789221968523E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999999580703586	WITHOUT_CLASSIFICATION	4.1929641566210245E-8	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999986078996559	WITHOUT_CLASSIFICATION	1.3921003441349486E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999702847872278	WITHOUT_CLASSIFICATION	2.9715212772201987E-5	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999999963410812	WITHOUT_CLASSIFICATION	3.6589189514008813E-9	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999850617248	WITHOUT_CLASSIFICATION	1.4938275169364403E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999933693908204	WITHOUT_CLASSIFICATION	6.630609179686544E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999979376903768	WITHOUT_CLASSIFICATION	2.0623096230825192E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.999993048145442	WITHOUT_CLASSIFICATION	6.95185455808678E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999919417820365	WITHOUT_CLASSIFICATION	8.058217963424241E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999228566234	WITHOUT_CLASSIFICATION	7.714337654833422E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999996786484059	WITHOUT_CLASSIFICATION	3.213515940563217E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999996786484059	WITHOUT_CLASSIFICATION	3.213515940563217E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999697250793	WITHOUT_CLASSIFICATION	3.0274920633183484E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999697250793	WITHOUT_CLASSIFICATION	3.0274920633183484E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999986568239861	WITHOUT_CLASSIFICATION	1.3431760138660057E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9996232344508499	WITHOUT_CLASSIFICATION	3.7676554915006157E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999999259314836	WITHOUT_CLASSIFICATION	7.406851639867909E-7	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999787654174583	WITHOUT_CLASSIFICATION	2.1234582541718474E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999840649619436	WITHOUT_CLASSIFICATION	1.5935038056383903E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999984942104837	WITHOUT_CLASSIFICATION	1.5057895162149574E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.999999732875626	WITHOUT_CLASSIFICATION	2.671243740046115E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999990452701275	WITHOUT_CLASSIFICATION	9.54729872434634E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999990452701275	WITHOUT_CLASSIFICATION	9.54729872434634E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999989891332741	WITHOUT_CLASSIFICATION	1.0108667257909306E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999989891332741	WITHOUT_CLASSIFICATION	1.0108667257909306E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999966717609707	WITHOUT_CLASSIFICATION	3.3282390292360035E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999962856254144	WITHOUT_CLASSIFICATION	3.714374585572112E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999974158845816	WITHOUT_CLASSIFICATION	2.584115418458019E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999974158845816	WITHOUT_CLASSIFICATION	2.584115418458019E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999974158845816	WITHOUT_CLASSIFICATION	2.584115418458019E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999981385865183	WITHOUT_CLASSIFICATION	1.861413481692636E-6	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999995895826265	WITHOUT_CLASSIFICATION	4.1041737345574453E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999996331735156	WITHOUT_CLASSIFICATION	3.668264844294469E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999544767351	WITHOUT_CLASSIFICATION	4.55232649433355E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999999436283644	WITHOUT_CLASSIFICATION	5.6371635534700754E-8	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999375072568172	WITHOUT_CLASSIFICATION	6.249274318281424E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999999113291408	WITHOUT_CLASSIFICATION	8.867085929840631E-8	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999987789220482	WITHOUT_CLASSIFICATION	1.2210779517834424E-6	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999997374701414	WITHOUT_CLASSIFICATION	2.6252985869874207E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999990012386611	WITHOUT_CLASSIFICATION	9.987613388733947E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999953311102258	WITHOUT_CLASSIFICATION	4.668889774222792E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999999128112341	WITHOUT_CLASSIFICATION	8.718876581726112E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999777784921	WITHOUT_CLASSIFICATION	2.222150779328969E-8	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999962525756	WITHOUT_CLASSIFICATION	3.747424387490637E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.999999761079956	WITHOUT_CLASSIFICATION	2.3892004399786714E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999989994064616	WITHOUT_CLASSIFICATION	1.000593538442015E-6	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999905851142625	WITHOUT_CLASSIFICATION	9.414885737530509E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998862894746167	WITHOUT_CLASSIFICATION	1.1371052538335587E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999867518607	WITHOUT_CLASSIFICATION	1.3248139402955075E-8	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999998116954	WITHOUT_CLASSIFICATION	1.8830465724934843E-10	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999987065377	WITHOUT_CLASSIFICATION	1.2934622858768794E-9	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999989591799745	WITHOUT_CLASSIFICATION	1.0408200255179068E-6	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999981854564655	WITHOUT_CLASSIFICATION	1.8145435345786172E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999984228323745	WITHOUT_CLASSIFICATION	1.5771676254941528E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999994053713367	WITHOUT_CLASSIFICATION	5.946286634391571E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.999999233932765	WITHOUT_CLASSIFICATION	7.660672350569294E-7	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999996871710323	WITHOUT_CLASSIFICATION	3.128289677435552E-7	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999901930577	WITHOUT_CLASSIFICATION	9.806942223831809E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999990177576711	WITHOUT_CLASSIFICATION	9.82242328855832E-7	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999995288522318	WITHOUT_CLASSIFICATION	4.711477681971527E-7	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999999996408471	WITHOUT_CLASSIFICATION	3.5915289114452444E-9	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999890635762722	WITHOUT_CLASSIFICATION	1.0936423727772847E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999935668132593	WITHOUT_CLASSIFICATION	6.433186740682297E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999988616256603	WITHOUT_CLASSIFICATION	1.1383743396994694E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999502865786528	WITHOUT_CLASSIFICATION	4.9713421347229686E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999997753801262	WITHOUT_CLASSIFICATION	2.2461987375988898E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999961544954848	WITHOUT_CLASSIFICATION	3.845504515077683E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999998504611588	WITHOUT_CLASSIFICATION	1.495388412322821E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999023455591	WITHOUT_CLASSIFICATION	9.76544408535562E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.999999936825094	WITHOUT_CLASSIFICATION	6.317490593542779E-8	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999916294203695	WITHOUT_CLASSIFICATION	8.370579630557592E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999189026936	WITHOUT_CLASSIFICATION	8.109730644413954E-8	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999415136303655	WITHOUT_CLASSIFICATION	5.8486369634477224E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999872871177	WITHOUT_CLASSIFICATION	1.2712882210430802E-8	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999928985312226	WITHOUT_CLASSIFICATION	7.101468777356302E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999980107180221	WITHOUT_CLASSIFICATION	1.9892819778756524E-6	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999976474857629	WITHOUT_CLASSIFICATION	2.3525142370375585E-6	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.999999348947531	WITHOUT_CLASSIFICATION	6.510524690337535E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999866951390276	WITHOUT_CLASSIFICATION	1.3304860972399083E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999935459817519	WITHOUT_CLASSIFICATION	6.4540182481084106E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999924417593273	WITHOUT_CLASSIFICATION	7.558240672705341E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999991610497851	WITHOUT_CLASSIFICATION	8.389502149117304E-7	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999170794897	WITHOUT_CLASSIFICATION	8.292051038670862E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999966666490147	WITHOUT_CLASSIFICATION	3.333350985336749E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999792587848952	WITHOUT_CLASSIFICATION	2.0741215104724082E-5	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.999949002453032	WITHOUT_CLASSIFICATION	5.0997546967964356E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999415136303655	WITHOUT_CLASSIFICATION	5.8486369634477224E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999415136303655	WITHOUT_CLASSIFICATION	5.8486369634477224E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999996237096412	WITHOUT_CLASSIFICATION	3.76290358830923E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999955433395289	WITHOUT_CLASSIFICATION	4.456660471108574E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999367477693	WITHOUT_CLASSIFICATION	6.325223068172837E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999984223978299	WITHOUT_CLASSIFICATION	1.5776021700988896E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999984223978299	WITHOUT_CLASSIFICATION	1.5776021700988896E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999906996385	WITHOUT_CLASSIFICATION	9.300361553272122E-9	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.999999915190284	WITHOUT_CLASSIFICATION	8.480971600362218E-8	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999992310671312	WITHOUT_CLASSIFICATION	7.689328687409723E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9997462915125422	WITHOUT_CLASSIFICATION	2.537084874577692E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999089083269371	WITHOUT_CLASSIFICATION	9.109167306295212E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999989407461	WITHOUT_CLASSIFICATION	1.0592539042775687E-9	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999998965916967	WITHOUT_CLASSIFICATION	1.0340830322497455E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999991196031268	WITHOUT_CLASSIFICATION	8.803968732531778E-7	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9998200356531747	WITHOUT_CLASSIFICATION	1.7996434682528235E-4	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999773145277866	WITHOUT_CLASSIFICATION	2.2685472213331047E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999830209251	WITHOUT_CLASSIFICATION	1.697907493997944E-8	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999930944293	WITHOUT_CLASSIFICATION	6.905570687973343E-9	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999089083269371	WITHOUT_CLASSIFICATION	9.109167306295212E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999383534663	WITHOUT_CLASSIFICATION	6.164653371621895E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999383534663	WITHOUT_CLASSIFICATION	6.164653371621895E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999987687616736	WITHOUT_CLASSIFICATION	1.2312383263950628E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.999998586490877	WITHOUT_CLASSIFICATION	1.4135091230414143E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999420003576	WITHOUT_CLASSIFICATION	5.799964235496671E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999864683926697	WITHOUT_CLASSIFICATION	1.3531607330407007E-5	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999973440384551	WITHOUT_CLASSIFICATION	2.655961544951293E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999938240836013	WITHOUT_CLASSIFICATION	6.175916398812912E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999938240836013	WITHOUT_CLASSIFICATION	6.175916398812912E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999198840957554	WITHOUT_CLASSIFICATION	8.011590424463837E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999704836322983	WITHOUT_CLASSIFICATION	2.9516367701766492E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999999538262711	WITHOUT_CLASSIFICATION	4.617372889502116E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999773917785009	WITHOUT_CLASSIFICATION	2.260822149918469E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999827657533049	WITHOUT_CLASSIFICATION	1.723424669504734E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999552663293145	WITHOUT_CLASSIFICATION	4.473367068550213E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999956068978696	WITHOUT_CLASSIFICATION	4.3931021303919054E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999844657828267	WITHOUT_CLASSIFICATION	1.553421717327281E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998213184687	WITHOUT_CLASSIFICATION	1.7868153130507133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999996367859905	WITHOUT_CLASSIFICATION	3.6321400957386447E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999989452682201	WITHOUT_CLASSIFICATION	1.0547317799639623E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999521804638	WITHOUT_CLASSIFICATION	4.781953628456275E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999997924655929	WITHOUT_CLASSIFICATION	2.0753440710591144E-7	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999361995544	WITHOUT_CLASSIFICATION	6.380044563826119E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999996452862281	WITHOUT_CLASSIFICATION	3.5471377183297024E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999983124984584	WITHOUT_CLASSIFICATION	1.6875015415329609E-6	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999989013188961	WITHOUT_CLASSIFICATION	1.0986811037939226E-6	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.999999841060089	WITHOUT_CLASSIFICATION	1.5893991098309236E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999983630420425	WITHOUT_CLASSIFICATION	1.6369579575914732E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999999401669851	WITHOUT_CLASSIFICATION	5.98330148840493E-8	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999993180858519	WITHOUT_CLASSIFICATION	6.819141480667611E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999979912312841	WITHOUT_CLASSIFICATION	2.008768715869737E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999979912312841	WITHOUT_CLASSIFICATION	2.008768715869737E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999996876414033	WITHOUT_CLASSIFICATION	3.1235859665355804E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999996410112016	WITHOUT_CLASSIFICATION	3.589887983537111E-7	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.99999915589215	WITHOUT_CLASSIFICATION	8.441078498986405E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999992619762764	WITHOUT_CLASSIFICATION	7.380237236624817E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999992619762764	WITHOUT_CLASSIFICATION	7.380237236624817E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999990518725906	WITHOUT_CLASSIFICATION	9.481274093877657E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999019828409983	WITHOUT_CLASSIFICATION	9.801715900170725E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999999924102767	WITHOUT_CLASSIFICATION	7.589723295296758E-8	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.999998672895019	WITHOUT_CLASSIFICATION	1.3271049810368395E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999986961176781	WITHOUT_CLASSIFICATION	1.303882321904744E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996961011648	WITHOUT_CLASSIFICATION	3.038988352497046E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999407256018	WITHOUT_CLASSIFICATION	5.9274398078166477E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999697250793	WITHOUT_CLASSIFICATION	3.0274920633183484E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999982488511354	WITHOUT_CLASSIFICATION	1.7511488646343255E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999983547307203	WITHOUT_CLASSIFICATION	1.6452692796479014E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999997395066499	WITHOUT_CLASSIFICATION	2.6049335004145623E-7	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999992288510748	WITHOUT_CLASSIFICATION	7.711489251109281E-7	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999987199048757	WITHOUT_CLASSIFICATION	1.280095124400608E-6	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999996027069775	WITHOUT_CLASSIFICATION	3.97293022481972E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.999969101193237	WITHOUT_CLASSIFICATION	3.0898806763062817E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999979460461685	WITHOUT_CLASSIFICATION	2.0539538314767873E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999995616050442	WITHOUT_CLASSIFICATION	4.383949557032274E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999996035965051	WITHOUT_CLASSIFICATION	3.964034949175486E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999998502001681	WITHOUT_CLASSIFICATION	1.4979983197267925E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999951104722776	WITHOUT_CLASSIFICATION	4.889527722343363E-6	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999967426616787	WITHOUT_CLASSIFICATION	3.257338321228222E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999755459746004	WITHOUT_CLASSIFICATION	2.445402539960044E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.999999817861147	WITHOUT_CLASSIFICATION	1.8213885289722262E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999990894628678	WITHOUT_CLASSIFICATION	9.105371322746296E-7	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999710739808298	WITHOUT_CLASSIFICATION	2.892601917019652E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999985643289591	WITHOUT_CLASSIFICATION	1.435671040988823E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999657900950013	WITHOUT_CLASSIFICATION	3.420990499872649E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999657900950013	WITHOUT_CLASSIFICATION	3.420990499872649E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.999999735469941	WITHOUT_CLASSIFICATION	2.6453005897657033E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999866835623769	WITHOUT_CLASSIFICATION	1.3316437623147057E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999994339813169	WITHOUT_CLASSIFICATION	5.660186831000807E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999994339813169	WITHOUT_CLASSIFICATION	5.660186831000807E-7	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999998250538088	WITHOUT_CLASSIFICATION	1.7494619111256328E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999982337870578	WITHOUT_CLASSIFICATION	1.7662129423260288E-6	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999983420380054	WITHOUT_CLASSIFICATION	1.6579619945408064E-6	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999208453824	WITHOUT_CLASSIFICATION	7.915461763270149E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999689807484	WITHOUT_CLASSIFICATION	3.101925158946028E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999999080862279	WITHOUT_CLASSIFICATION	9.191377221379239E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999999732599705	WITHOUT_CLASSIFICATION	2.6740029515569873E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999100037568	WITHOUT_CLASSIFICATION	8.99962432369069E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999995456380821	WITHOUT_CLASSIFICATION	4.543619178701596E-7	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999996753664188	WITHOUT_CLASSIFICATION	3.2463358125387905E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998501357707343	WITHOUT_CLASSIFICATION	1.4986422926573155E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999755459746004	WITHOUT_CLASSIFICATION	2.445402539960044E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999688637189	WITHOUT_CLASSIFICATION	3.1136281066573986E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999000195015773	WITHOUT_CLASSIFICATION	9.998049842275613E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999897025368417	WITHOUT_CLASSIFICATION	1.0297463158287459E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999894632958	WITHOUT_CLASSIFICATION	1.0536704100827813E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9976523641571574	WITHOUT_CLASSIFICATION	0.002347635842842538	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999991111750659	WITHOUT_CLASSIFICATION	8.888249339624135E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.999999964786884	WITHOUT_CLASSIFICATION	3.5213115947850044E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997777743629856	WITHOUT_CLASSIFICATION	2.2222563701428805E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997777743629856	WITHOUT_CLASSIFICATION	2.2222563701428805E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999146585387123	WITHOUT_CLASSIFICATION	8.534146128772898E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999264611026	WITHOUT_CLASSIFICATION	7.353889744673582E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999100037568	WITHOUT_CLASSIFICATION	8.99962432369069E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999100037568	WITHOUT_CLASSIFICATION	8.99962432369069E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999973452136768	WITHOUT_CLASSIFICATION	2.654786323151571E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9996716842419453	WITHOUT_CLASSIFICATION	3.283157580546894E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999953890408971	WITHOUT_CLASSIFICATION	4.610959102885666E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999942620171982	WITHOUT_CLASSIFICATION	5.737982801825386E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999984552590918	WITHOUT_CLASSIFICATION	1.5447409082288257E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999953104268183	WITHOUT_CLASSIFICATION	4.689573181642434E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9998925916496308	WITHOUT_CLASSIFICATION	1.0740835036922807E-4	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999999032157246	WITHOUT_CLASSIFICATION	9.678427532440664E-8	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.999999905455162	WITHOUT_CLASSIFICATION	9.454483798724421E-8	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999995928199042	WITHOUT_CLASSIFICATION	4.071800956875652E-7	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999330876252	WITHOUT_CLASSIFICATION	6.691237478926087E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999776989777333	WITHOUT_CLASSIFICATION	2.2301022266791193E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999776989777333	WITHOUT_CLASSIFICATION	2.2301022266791193E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999749876535	WITHOUT_CLASSIFICATION	2.5012346525492574E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999958317057169	WITHOUT_CLASSIFICATION	4.1682942830995764E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999958317057169	WITHOUT_CLASSIFICATION	4.1682942830995764E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999973079509961	WITHOUT_CLASSIFICATION	2.692049003980666E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999973079509961	WITHOUT_CLASSIFICATION	2.692049003980666E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999918986203593	WITHOUT_CLASSIFICATION	8.101379640651878E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999757981954	WITHOUT_CLASSIFICATION	2.4201804489135105E-8	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999757981954	WITHOUT_CLASSIFICATION	2.4201804489135105E-8	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999998393056292	WITHOUT_CLASSIFICATION	1.6069437075046054E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999997882520301	WITHOUT_CLASSIFICATION	2.1174796997056184E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978464324634	WITHOUT_CLASSIFICATION	2.153567536608728E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999975727579976	WITHOUT_CLASSIFICATION	2.4272420024293296E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999205500771	WITHOUT_CLASSIFICATION	7.944992282909988E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999938046427904	WITHOUT_CLASSIFICATION	6.195357209585939E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.998863334301109	WITHOUT_CLASSIFICATION	0.0011366656988911136	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999697225885732	WITHOUT_CLASSIFICATION	3.0277411426823242E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999998712056107	WITHOUT_CLASSIFICATION	1.2879438932608695E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.99999987324539	WITHOUT_CLASSIFICATION	1.267546101168433E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999998360328528	WITHOUT_CLASSIFICATION	1.639671473275649E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.999999997387686	WITHOUT_CLASSIFICATION	2.6123141728707963E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999189550089909	WITHOUT_CLASSIFICATION	8.104499100908857E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999997882520301	WITHOUT_CLASSIFICATION	2.1174796997056184E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999991166485429	WITHOUT_CLASSIFICATION	8.833514571034013E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999998775682802	WITHOUT_CLASSIFICATION	1.2243171978524365E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999582273247	WITHOUT_CLASSIFICATION	4.1772675349242674E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999301342653082	WITHOUT_CLASSIFICATION	6.986573469188431E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999966254884	WITHOUT_CLASSIFICATION	3.374511513639363E-9	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999971073911914	WITHOUT_CLASSIFICATION	2.8926088084863212E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999874883422595	WITHOUT_CLASSIFICATION	1.2511657740546767E-5	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.99999999298209	WITHOUT_CLASSIFICATION	7.017909967032843E-9	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999999775314025	WITHOUT_CLASSIFICATION	2.246859756977753E-8	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999992872604059	WITHOUT_CLASSIFICATION	7.127395940215262E-7	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999997700522322	WITHOUT_CLASSIFICATION	2.2994776791184845E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999951355020971	WITHOUT_CLASSIFICATION	4.864497903022809E-6	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999997807929469	WITHOUT_CLASSIFICATION	2.1920705295870497E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999477330674477	WITHOUT_CLASSIFICATION	5.226693255241018E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999986566407485	WITHOUT_CLASSIFICATION	1.3433592514686377E-6	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999996318947229	WITHOUT_CLASSIFICATION	3.6810527720425876E-7	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999968088560066	WITHOUT_CLASSIFICATION	3.191143993423755E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999990601155833	WITHOUT_CLASSIFICATION	9.39884416754008E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999994973857902	WITHOUT_CLASSIFICATION	5.026142097482758E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999983494098116	WITHOUT_CLASSIFICATION	1.6505901884802763E-6	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999999156004128	WITHOUT_CLASSIFICATION	8.439958715354542E-8	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999316950560158	WITHOUT_CLASSIFICATION	6.830494398423498E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999993200373342	WITHOUT_CLASSIFICATION	6.799626658758443E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999897862648807	WITHOUT_CLASSIFICATION	1.021373511929203E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9877041952176143	WITHOUT_CLASSIFICATION	0.012295804782385606	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999997717012525	WITHOUT_CLASSIFICATION	2.2829874748963773E-7	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999992040064378	WITHOUT_CLASSIFICATION	7.959935622374173E-7	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999970700214759	WITHOUT_CLASSIFICATION	2.9299785240803114E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999666221196583	WITHOUT_CLASSIFICATION	3.3377880341863944E-5	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.999410795691917	WITHOUT_CLASSIFICATION	5.892043080829497E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999943923502812	WITHOUT_CLASSIFICATION	5.607649718871783E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999997224875343	WITHOUT_CLASSIFICATION	2.7751246563798887E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999994270468571	WITHOUT_CLASSIFICATION	5.72953142971375E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999990394566157	WITHOUT_CLASSIFICATION	9.605433842555477E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999913747681572	WITHOUT_CLASSIFICATION	8.625231842758427E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9998996084625322	WITHOUT_CLASSIFICATION	1.0039153746778715E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999980446662229	WITHOUT_CLASSIFICATION	1.9553337771267985E-6	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999897862648807	WITHOUT_CLASSIFICATION	1.021373511929203E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999470031372	WITHOUT_CLASSIFICATION	5.2996862767089134E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999881679008	WITHOUT_CLASSIFICATION	1.183209918019526E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999881679008	WITHOUT_CLASSIFICATION	1.183209918019526E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999999938185741	WITHOUT_CLASSIFICATION	6.181425908158726E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999999938185741	WITHOUT_CLASSIFICATION	6.181425908158726E-8	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.999506022293159	WITHOUT_CLASSIFICATION	4.939777068409629E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999109276027	WITHOUT_CLASSIFICATION	8.907239730088667E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999998302302963	WITHOUT_CLASSIFICATION	1.697697037577843E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999980590235834	WITHOUT_CLASSIFICATION	1.940976416568542E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999982976736533	WITHOUT_CLASSIFICATION	1.7023263466329672E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999596523613832	WITHOUT_CLASSIFICATION	4.0347638616814546E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999944720659983	WITHOUT_CLASSIFICATION	5.527934001580754E-6	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999979043782237	WITHOUT_CLASSIFICATION	2.095621776387244E-6	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999894399614	WITHOUT_CLASSIFICATION	1.056003862129444E-8	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999970796483	WITHOUT_CLASSIFICATION	2.9203516982457123E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999863092260637	WITHOUT_CLASSIFICATION	1.3690773936206977E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999951287854036	WITHOUT_CLASSIFICATION	4.871214596385952E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999995902528198	WITHOUT_CLASSIFICATION	4.097471801178469E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999996429157512	WITHOUT_CLASSIFICATION	3.570842488636081E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999999303416789	WITHOUT_CLASSIFICATION	6.96583211173484E-8	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999770782684416	WITHOUT_CLASSIFICATION	2.2921731558375075E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999993165328606	WITHOUT_CLASSIFICATION	6.834671394521889E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999894632958	WITHOUT_CLASSIFICATION	1.0536704100827813E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999988291829519	WITHOUT_CLASSIFICATION	1.1708170481362456E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999998878100878	WITHOUT_CLASSIFICATION	1.1218991220417535E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999407256018	WITHOUT_CLASSIFICATION	5.9274398078166477E-8	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999998878100878	WITHOUT_CLASSIFICATION	1.1218991220417535E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999867882495862	WITHOUT_CLASSIFICATION	1.3211750413917882E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999831446729128	WITHOUT_CLASSIFICATION	1.6855327087182484E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.999953669493983	WITHOUT_CLASSIFICATION	4.6330506017006995E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999989461987	WITHOUT_CLASSIFICATION	1.0538013003732767E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999994864375136	WITHOUT_CLASSIFICATION	5.135624864219592E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998530688337192	WITHOUT_CLASSIFICATION	1.4693116628080205E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998530688337192	WITHOUT_CLASSIFICATION	1.4693116628080205E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999952555571516	WITHOUT_CLASSIFICATION	4.744442848406091E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999597537083397	WITHOUT_CLASSIFICATION	4.0246291660236436E-5	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999887979281	WITHOUT_CLASSIFICATION	1.1202072050215678E-8	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999749087247	WITHOUT_CLASSIFICATION	2.5091275228015093E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999999834980087	WITHOUT_CLASSIFICATION	1.6501991361662804E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999985940292342	WITHOUT_CLASSIFICATION	1.4059707657406785E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999994864375136	WITHOUT_CLASSIFICATION	5.135624864219592E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998530688337192	WITHOUT_CLASSIFICATION	1.4693116628080205E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998530688337192	WITHOUT_CLASSIFICATION	1.4693116628080205E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999952555571516	WITHOUT_CLASSIFICATION	4.744442848406091E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999688503863	WITHOUT_CLASSIFICATION	3.1149613624596255E-8	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999999486590487	WITHOUT_CLASSIFICATION	5.134095128833214E-8	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999990342991896	WITHOUT_CLASSIFICATION	9.65700810477569E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999928923899598	WITHOUT_CLASSIFICATION	7.107610040281771E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999914272604792	WITHOUT_CLASSIFICATION	8.572739520832082E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9989908874709166	WITHOUT_CLASSIFICATION	0.0010091125290835011	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999788257886	WITHOUT_CLASSIFICATION	2.1174211444181837E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999842866294999	WITHOUT_CLASSIFICATION	1.5713370500046882E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999842866294999	WITHOUT_CLASSIFICATION	1.5713370500046882E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999919180942787	WITHOUT_CLASSIFICATION	8.081905721391024E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999990515319608	WITHOUT_CLASSIFICATION	9.484680390807758E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999993409579887	WITHOUT_CLASSIFICATION	6.590420112472428E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9973112116142328	WITHOUT_CLASSIFICATION	0.0026887883857672243	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999994203150159	WITHOUT_CLASSIFICATION	5.796849841914121E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999870691497468	WITHOUT_CLASSIFICATION	1.293085025318842E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9998990025857541	WITHOUT_CLASSIFICATION	1.0099741424585609E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.999999966516593	WITHOUT_CLASSIFICATION	3.3483407088327044E-8	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999024362650819	WITHOUT_CLASSIFICATION	9.75637349180677E-5	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999883003932941	WITHOUT_CLASSIFICATION	1.1699606705990407E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999999780315554	WITHOUT_CLASSIFICATION	2.1968444634303023E-8	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999967684834951	WITHOUT_CLASSIFICATION	3.231516504981843E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.999999910969579	WITHOUT_CLASSIFICATION	8.903042101666368E-8	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9981279683785275	WITHOUT_CLASSIFICATION	0.0018720316214725014	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999993423686644	WITHOUT_CLASSIFICATION	6.576313356448242E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999992725590184	WITHOUT_CLASSIFICATION	7.274409815208242E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999252448972028	WITHOUT_CLASSIFICATION	7.47551027972224E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999961637836918	WITHOUT_CLASSIFICATION	3.836216308192171E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.999993823389427	WITHOUT_CLASSIFICATION	6.176610573046233E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999985910373562	WITHOUT_CLASSIFICATION	1.4089626438271375E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999985869610963	WITHOUT_CLASSIFICATION	1.4130389037058416E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999996169327707	WITHOUT_CLASSIFICATION	3.830672293424677E-7	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999978994308303	WITHOUT_CLASSIFICATION	2.1005691696806983E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999994220951554	WITHOUT_CLASSIFICATION	5.779048446704599E-7	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999985193442565	WITHOUT_CLASSIFICATION	1.4806557434437713E-6	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999994092681588	WITHOUT_CLASSIFICATION	5.907318411904766E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999997550888454	WITHOUT_CLASSIFICATION	2.4491115465556813E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999964409302888	WITHOUT_CLASSIFICATION	3.5590697112271843E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999874611755	WITHOUT_CLASSIFICATION	1.2538824638780653E-8	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999998125135542	WITHOUT_CLASSIFICATION	1.87486445907575E-7	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999981845958058	WITHOUT_CLASSIFICATION	1.815404194164924E-6	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.999996159600601	WITHOUT_CLASSIFICATION	3.840399398970573E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999976258884713	WITHOUT_CLASSIFICATION	2.3741115286893507E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.999999496625042	WITHOUT_CLASSIFICATION	5.033749581285722E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999954004542566	WITHOUT_CLASSIFICATION	4.599545743501953E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999954004542566	WITHOUT_CLASSIFICATION	4.599545743501953E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.999998627990655	WITHOUT_CLASSIFICATION	1.3720093449573458E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999979476763557	WITHOUT_CLASSIFICATION	2.0523236442418733E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999989510086781	WITHOUT_CLASSIFICATION	1.0489913219251967E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.999999009478406	WITHOUT_CLASSIFICATION	9.905215940226313E-7	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.99999952366799	WITHOUT_CLASSIFICATION	4.763320099744784E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999999650988164	WITHOUT_CLASSIFICATION	3.490118372579507E-8	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999738893977648	WITHOUT_CLASSIFICATION	2.6110602235264884E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999712266445908	WITHOUT_CLASSIFICATION	2.8773355409176384E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9994646476087151	WITHOUT_CLASSIFICATION	5.353523912848572E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999998478020596	WITHOUT_CLASSIFICATION	1.521979404267692E-7	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998325771784	WITHOUT_CLASSIFICATION	1.6742282157025147E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999133022366749	WITHOUT_CLASSIFICATION	8.66977633252053E-5	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999516921623348	WITHOUT_CLASSIFICATION	4.830783766522024E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9986887824225685	WITHOUT_CLASSIFICATION	0.0013112175774314873	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9826918305098518	WITHOUT_CLASSIFICATION	0.017308169490148188	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999935024809735	WITHOUT_CLASSIFICATION	6.497519026563097E-6	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999964627967166	WITHOUT_CLASSIFICATION	3.5372032832256415E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999986860628531	WITHOUT_CLASSIFICATION	1.3139371469066316E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999990428902463	WITHOUT_CLASSIFICATION	9.57109753702029E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999999517336657	WITHOUT_CLASSIFICATION	4.82663343375463E-8	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999609825388	WITHOUT_CLASSIFICATION	3.9017461213751937E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999985551092836	WITHOUT_CLASSIFICATION	1.4448907164502185E-6	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999755531736818	WITHOUT_CLASSIFICATION	2.4446826318265453E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999977553329	WITHOUT_CLASSIFICATION	2.244667019780651E-9	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999986602227	WITHOUT_CLASSIFICATION	1.3397773455435792E-9	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.999999596001394	WITHOUT_CLASSIFICATION	4.039986059012106E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999999314944605	WITHOUT_CLASSIFICATION	6.850553941510005E-8	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999982815672755	WITHOUT_CLASSIFICATION	1.718432724444943E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999690899037292	WITHOUT_CLASSIFICATION	3.09100962707029E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999736873842144	WITHOUT_CLASSIFICATION	2.6312615785636598E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999869534068838	WITHOUT_CLASSIFICATION	1.3046593116191798E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999961287478927	WITHOUT_CLASSIFICATION	3.871252107379074E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999996950676698	WITHOUT_CLASSIFICATION	3.049323302302373E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999952554186731	WITHOUT_CLASSIFICATION	4.74458132690705E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9998537686321832	WITHOUT_CLASSIFICATION	1.4623136781682098E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999968943335706	WITHOUT_CLASSIFICATION	3.1056664292797236E-6	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999859822783387	WITHOUT_CLASSIFICATION	1.4017721661332275E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.999997628902382	WITHOUT_CLASSIFICATION	2.3710976180517796E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.999999994505021	WITHOUT_CLASSIFICATION	5.4949790616438274E-9	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999838925213884	WITHOUT_CLASSIFICATION	1.6107478611636854E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999922257332	WITHOUT_CLASSIFICATION	7.77426681007151E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999998756405964	WITHOUT_CLASSIFICATION	1.2435940362031634E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999997135792233	WITHOUT_CLASSIFICATION	2.8642077659994444E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999981488199288	WITHOUT_CLASSIFICATION	1.8511800711408374E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999793594026395	WITHOUT_CLASSIFICATION	2.0640597360448954E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999999763887265	WITHOUT_CLASSIFICATION	2.3611273506339696E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.99999999886366	WITHOUT_CLASSIFICATION	1.136339936967666E-9	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999999763887265	WITHOUT_CLASSIFICATION	2.3611273506339696E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999969639944854	WITHOUT_CLASSIFICATION	3.036005514602533E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9957225050618393	WITHOUT_CLASSIFICATION	0.0042774949381606175	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999451296816	WITHOUT_CLASSIFICATION	5.487031841850129E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.999999966269325	WITHOUT_CLASSIFICATION	3.373067506939962E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999974473914349	WITHOUT_CLASSIFICATION	2.552608565109109E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999984275679	WITHOUT_CLASSIFICATION	1.5724321636339705E-9	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999991651142581	WITHOUT_CLASSIFICATION	8.348857418390547E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9999355955488508	WITHOUT_CLASSIFICATION	6.440445114920186E-5	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9998523455244501	WITHOUT_CLASSIFICATION	1.476544755498294E-4	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999988076068029	WITHOUT_CLASSIFICATION	1.1923931969679883E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999985783223597	WITHOUT_CLASSIFICATION	1.4216776402200863E-6	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999998981498012	WITHOUT_CLASSIFICATION	1.0185019888394693E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999931057698916	WITHOUT_CLASSIFICATION	6.894230108401799E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9977309665744258	WITHOUT_CLASSIFICATION	0.002269033425574147	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.999989229807529	WITHOUT_CLASSIFICATION	1.0770192471083215E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999640750519351	WITHOUT_CLASSIFICATION	3.5924948064819945E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999872608710305	WITHOUT_CLASSIFICATION	1.2739128969418994E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9994690579300886	WITHOUT_CLASSIFICATION	5.309420699114313E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999985067199519	WITHOUT_CLASSIFICATION	1.4932800481024107E-6	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999989824483928	WITHOUT_CLASSIFICATION	1.0175516072592758E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999999104657759	WITHOUT_CLASSIFICATION	8.953422417890705E-8	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999985537892679	WITHOUT_CLASSIFICATION	1.4462107319668802E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999991651142581	WITHOUT_CLASSIFICATION	8.348857418390547E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999992727034578	WITHOUT_CLASSIFICATION	7.272965422204143E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999995573414392	WITHOUT_CLASSIFICATION	4.426585608148829E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999995573414392	WITHOUT_CLASSIFICATION	4.426585608148829E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999999644556436	WITHOUT_CLASSIFICATION	3.554435639583209E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999997214005695	WITHOUT_CLASSIFICATION	2.785994305685804E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999997214005695	WITHOUT_CLASSIFICATION	2.785994305685804E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999757142430625	WITHOUT_CLASSIFICATION	2.4285756937500132E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999757142430625	WITHOUT_CLASSIFICATION	2.4285756937500132E-5	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.6937004630493524	DEFECT	0.30629953695064766	WITHOUT_CLASSIFICATION
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999999486380758	WITHOUT_CLASSIFICATION	5.136192415268177E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999970401274	WITHOUT_CLASSIFICATION	2.95987267023497E-9	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999988488803251	WITHOUT_CLASSIFICATION	1.1511196748880163E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999998269715216	WITHOUT_CLASSIFICATION	1.730284783276509E-7	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999964631560655	WITHOUT_CLASSIFICATION	3.5368439343745386E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9998501868459717	WITHOUT_CLASSIFICATION	1.4981315402838333E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999973788844351	WITHOUT_CLASSIFICATION	2.621115564867306E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999761746732	WITHOUT_CLASSIFICATION	2.382532686775519E-8	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999978083575405	WITHOUT_CLASSIFICATION	2.1916424594381357E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.99999985723557	WITHOUT_CLASSIFICATION	1.4276442990220816E-7	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999947384994693	WITHOUT_CLASSIFICATION	5.261500530674559E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999813811183	WITHOUT_CLASSIFICATION	1.861888171441712E-8	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999998082576058	WITHOUT_CLASSIFICATION	1.9174239424564455E-7	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999985396694042	WITHOUT_CLASSIFICATION	1.4603305957630659E-6	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999966318367347	WITHOUT_CLASSIFICATION	3.3681632653915175E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999995891314388	WITHOUT_CLASSIFICATION	4.108685611751774E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999990612487407	WITHOUT_CLASSIFICATION	9.387512592894025E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999990612487407	WITHOUT_CLASSIFICATION	9.387512592894025E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999842075944	WITHOUT_CLASSIFICATION	1.5792405619891553E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9996885640820176	WITHOUT_CLASSIFICATION	3.1143591798243376E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999840642577	WITHOUT_CLASSIFICATION	1.5935742382725384E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999962024670168	WITHOUT_CLASSIFICATION	3.7975329832523434E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999934407138308	WITHOUT_CLASSIFICATION	6.559286169134387E-6	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999910636609685	WITHOUT_CLASSIFICATION	8.936339031600812E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999991915816081	WITHOUT_CLASSIFICATION	8.084183918666417E-7	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.999994247208094	WITHOUT_CLASSIFICATION	5.752791906022839E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999984245588962	WITHOUT_CLASSIFICATION	1.5754411038274302E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999971035212556	WITHOUT_CLASSIFICATION	2.896478744374016E-6	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.99999999940234	WITHOUT_CLASSIFICATION	5.976600133841814E-10	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999997997912758	WITHOUT_CLASSIFICATION	2.0020872418654603E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999998032208915	WITHOUT_CLASSIFICATION	1.9677910843052441E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999998643754004	WITHOUT_CLASSIFICATION	1.3562459963200964E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.999999217134662	WITHOUT_CLASSIFICATION	7.82865337982436E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999998597849376	WITHOUT_CLASSIFICATION	1.402150624833411E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999945092618193	WITHOUT_CLASSIFICATION	5.490738180726267E-6	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999782609175989	WITHOUT_CLASSIFICATION	2.173908240107799E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999825090125036	WITHOUT_CLASSIFICATION	1.7490987496335E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999915542750778	WITHOUT_CLASSIFICATION	8.445724922230506E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999840962325853	WITHOUT_CLASSIFICATION	1.5903767414623517E-5	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999749135306244	WITHOUT_CLASSIFICATION	2.5086469375693234E-5	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999956264799793	WITHOUT_CLASSIFICATION	4.3735200206882235E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999978703197406	WITHOUT_CLASSIFICATION	2.1296802594445866E-6	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999845306802	WITHOUT_CLASSIFICATION	1.546931980788308E-8	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999933115167	WITHOUT_CLASSIFICATION	6.688483404881328E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999992665877122	WITHOUT_CLASSIFICATION	7.33412287874877E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999821672889	WITHOUT_CLASSIFICATION	1.7832711029826487E-8	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999887517323305	WITHOUT_CLASSIFICATION	1.1248267669464547E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999976094734636	WITHOUT_CLASSIFICATION	2.390526536346001E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.999999950222056	WITHOUT_CLASSIFICATION	4.97779440699382E-8	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999999662992406	WITHOUT_CLASSIFICATION	3.370075947289483E-8	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999989891438847	WITHOUT_CLASSIFICATION	1.0108561152398696E-6	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999973164817565	WITHOUT_CLASSIFICATION	2.683518243406286E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999895279720444	WITHOUT_CLASSIFICATION	1.0472027955473533E-5	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999896133165747	WITHOUT_CLASSIFICATION	1.038668342536602E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9997333017680531	WITHOUT_CLASSIFICATION	2.6669823194697476E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999750741825957	WITHOUT_CLASSIFICATION	2.4925817404297124E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999998129833715	WITHOUT_CLASSIFICATION	1.8701662855861583E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999991122122014	WITHOUT_CLASSIFICATION	8.877877986252303E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999981247171108	WITHOUT_CLASSIFICATION	1.875282889136858E-6	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999997142014891	WITHOUT_CLASSIFICATION	2.857985108580795E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999998436420867	WITHOUT_CLASSIFICATION	1.563579132197962E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999992692446135	WITHOUT_CLASSIFICATION	7.307553865372843E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9983251512813685	WITHOUT_CLASSIFICATION	0.0016748487186315454	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999999409608496	WITHOUT_CLASSIFICATION	5.903915040473859E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998983376981267	WITHOUT_CLASSIFICATION	1.0166230187320775E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999992692446135	WITHOUT_CLASSIFICATION	7.307553865372843E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999762743403469	WITHOUT_CLASSIFICATION	2.3725659653054027E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999974314979143	WITHOUT_CLASSIFICATION	2.5685020856982905E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999999437020007	WITHOUT_CLASSIFICATION	5.629799934200039E-8	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9998974196807073	WITHOUT_CLASSIFICATION	1.0258031929263694E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999915668902373	WITHOUT_CLASSIFICATION	8.433109762718392E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9983251512813685	WITHOUT_CLASSIFICATION	0.0016748487186315454	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998983376981267	WITHOUT_CLASSIFICATION	1.0166230187320775E-4	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.999999070157924	WITHOUT_CLASSIFICATION	9.298420760869535E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999974241296385	WITHOUT_CLASSIFICATION	2.5758703614563396E-6	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999991247166734	WITHOUT_CLASSIFICATION	8.752833265779948E-7	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999998950099931	WITHOUT_CLASSIFICATION	1.0499000698894974E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99980642663593	WITHOUT_CLASSIFICATION	1.9357336407002952E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999970406104733	WITHOUT_CLASSIFICATION	2.959389526652371E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.997621680935907	WITHOUT_CLASSIFICATION	0.002378319064093079	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999992415911316	WITHOUT_CLASSIFICATION	7.584088683668499E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999974923193656	WITHOUT_CLASSIFICATION	2.507680634328747E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999974923193656	WITHOUT_CLASSIFICATION	2.507680634328747E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999992900690909	WITHOUT_CLASSIFICATION	7.099309089873474E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999933720620965	WITHOUT_CLASSIFICATION	6.627937903564615E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999977850647155	WITHOUT_CLASSIFICATION	2.2149352844802036E-6	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999795793130561	WITHOUT_CLASSIFICATION	2.042068694388274E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998213184687	WITHOUT_CLASSIFICATION	1.7868153130507133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996961011648	WITHOUT_CLASSIFICATION	3.038988352497046E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996961011648	WITHOUT_CLASSIFICATION	3.038988352497046E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999996367859905	WITHOUT_CLASSIFICATION	3.6321400957386447E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999989452682201	WITHOUT_CLASSIFICATION	1.0547317799639623E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999995616050442	WITHOUT_CLASSIFICATION	4.383949557032274E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999996035965051	WITHOUT_CLASSIFICATION	3.964034949175486E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999933732570926	WITHOUT_CLASSIFICATION	6.6267429074331425E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998916924119663	WITHOUT_CLASSIFICATION	1.0830758803371846E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999942033464841	WITHOUT_CLASSIFICATION	5.796653515807818E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.999998363812896	WITHOUT_CLASSIFICATION	1.6361871040295442E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999855762737729	WITHOUT_CLASSIFICATION	1.4423726227176982E-5	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999965266085	WITHOUT_CLASSIFICATION	3.473391413399198E-9	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999984030948	WITHOUT_CLASSIFICATION	1.5969051641672302E-9	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999992059387	WITHOUT_CLASSIFICATION	7.940611678273529E-10	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999886503752077	WITHOUT_CLASSIFICATION	1.1349624792442258E-5	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999989415292284	WITHOUT_CLASSIFICATION	1.0584707716021452E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999991868907565	WITHOUT_CLASSIFICATION	8.13109243582748E-7	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999992055912561	WITHOUT_CLASSIFICATION	7.944087438243068E-7	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.99999327446312	WITHOUT_CLASSIFICATION	6.725536880052133E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999978080574435	WITHOUT_CLASSIFICATION	2.19194255645345E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999978337621183	WITHOUT_CLASSIFICATION	2.1662378817946963E-6	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999977835008673	WITHOUT_CLASSIFICATION	2.216499132615361E-6	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999985031807692	WITHOUT_CLASSIFICATION	1.4968192307888235E-6	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999989956615797	WITHOUT_CLASSIFICATION	1.0043384202597976E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999860997415789	WITHOUT_CLASSIFICATION	1.3900258421199317E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.999994154374234	WITHOUT_CLASSIFICATION	5.845625765994065E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999999291271077	WITHOUT_CLASSIFICATION	7.087289232292941E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999736484176089	WITHOUT_CLASSIFICATION	2.635158239116304E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999528097230374	WITHOUT_CLASSIFICATION	4.719027696255754E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999995616050442	WITHOUT_CLASSIFICATION	4.383949557032274E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999996035965051	WITHOUT_CLASSIFICATION	3.964034949175486E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999842866294999	WITHOUT_CLASSIFICATION	1.5713370500046882E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998700740153824	WITHOUT_CLASSIFICATION	1.2992598461765214E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999958239466433	WITHOUT_CLASSIFICATION	4.1760533566695985E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.999917222307118	WITHOUT_CLASSIFICATION	8.277769288200734E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999351335065856	WITHOUT_CLASSIFICATION	6.486649341443519E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999997420813865	WITHOUT_CLASSIFICATION	2.5791861350369446E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999894428441	WITHOUT_CLASSIFICATION	1.0557155902344385E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999894428441	WITHOUT_CLASSIFICATION	1.0557155902344385E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999760275771847	WITHOUT_CLASSIFICATION	2.3972422815216785E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.99997406322336	WITHOUT_CLASSIFICATION	2.593677663996208E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999435235746957	WITHOUT_CLASSIFICATION	5.6476425304339536E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999999192998784	WITHOUT_CLASSIFICATION	8.070012160552071E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999999192998784	WITHOUT_CLASSIFICATION	8.070012160552071E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999877529913236	WITHOUT_CLASSIFICATION	1.2247008676491866E-5	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999999047598804	WITHOUT_CLASSIFICATION	9.524011955416653E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999999180227688	WITHOUT_CLASSIFICATION	8.197723131543186E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999999252214069	WITHOUT_CLASSIFICATION	7.477859310699284E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999989149623	WITHOUT_CLASSIFICATION	1.0850377123199465E-9	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999562158073482	WITHOUT_CLASSIFICATION	4.3784192651850655E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999646371940828	WITHOUT_CLASSIFICATION	3.536280591717002E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999834394474345	WITHOUT_CLASSIFICATION	1.6560552565560173E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9998888309998832	WITHOUT_CLASSIFICATION	1.111690001167192E-4	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999921845501307	WITHOUT_CLASSIFICATION	7.815449869282353E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999086305166152	WITHOUT_CLASSIFICATION	9.136948338484621E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999086305166152	WITHOUT_CLASSIFICATION	9.136948338484621E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9956233879052353	WITHOUT_CLASSIFICATION	0.004376612094764737	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9994088455646316	WITHOUT_CLASSIFICATION	5.911544353684236E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9994088455646316	WITHOUT_CLASSIFICATION	5.911544353684236E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9994088455646316	WITHOUT_CLASSIFICATION	5.911544353684236E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999642676742407	WITHOUT_CLASSIFICATION	3.573232575929871E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999642676742407	WITHOUT_CLASSIFICATION	3.573232575929871E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999983502608765	WITHOUT_CLASSIFICATION	1.6497391235714866E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999983502608765	WITHOUT_CLASSIFICATION	1.6497391235714866E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999983502608765	WITHOUT_CLASSIFICATION	1.6497391235714866E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999994664872995	WITHOUT_CLASSIFICATION	5.335127003383029E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999994664872995	WITHOUT_CLASSIFICATION	5.335127003383029E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999994664872995	WITHOUT_CLASSIFICATION	5.335127003383029E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999997954315	WITHOUT_CLASSIFICATION	2.045684101837714E-10	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999997954315	WITHOUT_CLASSIFICATION	2.045684101837714E-10	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999913428914665	WITHOUT_CLASSIFICATION	8.657108533407825E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999913428914665	WITHOUT_CLASSIFICATION	8.657108533407825E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994368448674	WITHOUT_CLASSIFICATION	5.631551326825573E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994368448674	WITHOUT_CLASSIFICATION	5.631551326825573E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999542062519	WITHOUT_CLASSIFICATION	4.579374808431659E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999542062519	WITHOUT_CLASSIFICATION	4.579374808431659E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999998335925667	WITHOUT_CLASSIFICATION	1.6640743332956863E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999998335925667	WITHOUT_CLASSIFICATION	1.6640743332956863E-7	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999659528954822	WITHOUT_CLASSIFICATION	3.4047104517736555E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999659528954822	WITHOUT_CLASSIFICATION	3.4047104517736555E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999967646064084	WITHOUT_CLASSIFICATION	3.2353935916305353E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999967646064084	WITHOUT_CLASSIFICATION	3.2353935916305353E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999997954315	WITHOUT_CLASSIFICATION	2.045684101837714E-10	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999913428914665	WITHOUT_CLASSIFICATION	8.657108533407825E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994368448674	WITHOUT_CLASSIFICATION	5.631551326825573E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999998335925667	WITHOUT_CLASSIFICATION	1.6640743332956863E-7	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999659528954822	WITHOUT_CLASSIFICATION	3.4047104517736555E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999967646064084	WITHOUT_CLASSIFICATION	3.2353935916305353E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999902941043363	WITHOUT_CLASSIFICATION	9.705895663773984E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999978375101438	WITHOUT_CLASSIFICATION	2.1624898562633448E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999915783215076	WITHOUT_CLASSIFICATION	8.421678492324925E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.999595065851866	WITHOUT_CLASSIFICATION	4.049341481340069E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999941388818626	WITHOUT_CLASSIFICATION	5.861118137338135E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999941401447954	WITHOUT_CLASSIFICATION	5.8598552047439754E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.999999804197468	WITHOUT_CLASSIFICATION	1.958025318923395E-7	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999978597064456	WITHOUT_CLASSIFICATION	2.1402935544163575E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999913692503238	WITHOUT_CLASSIFICATION	8.630749676151906E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999998584339026	WITHOUT_CLASSIFICATION	1.4156609742840888E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999987945489215	WITHOUT_CLASSIFICATION	1.2054510786020671E-6	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.999999866612407	WITHOUT_CLASSIFICATION	1.3338759288554606E-7	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999982385811881	WITHOUT_CLASSIFICATION	1.761418811885799E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999998925100176	WITHOUT_CLASSIFICATION	1.0748998232773803E-7	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999978649043781	WITHOUT_CLASSIFICATION	2.135095621780388E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999951657760157	WITHOUT_CLASSIFICATION	4.834223984383638E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999720683239365	WITHOUT_CLASSIFICATION	2.7931676063489707E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999756835431023	WITHOUT_CLASSIFICATION	2.4316456897639842E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999974323402192	WITHOUT_CLASSIFICATION	2.5676597808779024E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.999905595283979	WITHOUT_CLASSIFICATION	9.440471602089973E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999997727599956	WITHOUT_CLASSIFICATION	2.272400045097622E-7	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999940404627101	WITHOUT_CLASSIFICATION	5.959537289977045E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999992484714937	WITHOUT_CLASSIFICATION	7.515285062325693E-7	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999984793658044	WITHOUT_CLASSIFICATION	1.5206341956302642E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999907990554747	WITHOUT_CLASSIFICATION	9.200944525323968E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.999976380265737	WITHOUT_CLASSIFICATION	2.361973426298816E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999800188865824	WITHOUT_CLASSIFICATION	1.9981113417604824E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999994755475199	WITHOUT_CLASSIFICATION	5.244524800738935E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999839680490203	WITHOUT_CLASSIFICATION	1.603195097970223E-5	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999982485070216	WITHOUT_CLASSIFICATION	1.7514929784235019E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.999998733378602	WITHOUT_CLASSIFICATION	1.2666213979545537E-6	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.999952931114339	WITHOUT_CLASSIFICATION	4.706888566108088E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999944458149977	WITHOUT_CLASSIFICATION	5.554185002173233E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999944458149977	WITHOUT_CLASSIFICATION	5.554185002173233E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999985635257951	WITHOUT_CLASSIFICATION	1.4364742049047758E-6	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999969583133305	WITHOUT_CLASSIFICATION	3.0416866694937845E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999136297034313	WITHOUT_CLASSIFICATION	8.637029656865669E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999968824604044	WITHOUT_CLASSIFICATION	3.117539595522749E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999732251335	WITHOUT_CLASSIFICATION	2.6774866614294376E-8	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999996628571828	WITHOUT_CLASSIFICATION	3.371428172151815E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999957176693888	WITHOUT_CLASSIFICATION	4.282330611205295E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999046803422321	WITHOUT_CLASSIFICATION	9.531965776787993E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999990422162452	WITHOUT_CLASSIFICATION	9.577837547704274E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.99991047176731	WITHOUT_CLASSIFICATION	8.952823269003502E-5	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.999987823510895	WITHOUT_CLASSIFICATION	1.2176489105009098E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.999999225528485	WITHOUT_CLASSIFICATION	7.744715150648144E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999818643624002	WITHOUT_CLASSIFICATION	1.8135637599825586E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999818643624002	WITHOUT_CLASSIFICATION	1.8135637599825586E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999851193772668	WITHOUT_CLASSIFICATION	1.4880622733126253E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999851193772668	WITHOUT_CLASSIFICATION	1.4880622733126253E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999851193772668	WITHOUT_CLASSIFICATION	1.4880622733126253E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998072243716303	WITHOUT_CLASSIFICATION	1.9277562836968258E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999741170954873	WITHOUT_CLASSIFICATION	2.5882904512637547E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999941168286058	WITHOUT_CLASSIFICATION	5.883171394219063E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999941168286058	WITHOUT_CLASSIFICATION	5.883171394219063E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999911701679469	WITHOUT_CLASSIFICATION	8.829832053134731E-6	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999826682022349	WITHOUT_CLASSIFICATION	1.7331797765066112E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.999999390115739	WITHOUT_CLASSIFICATION	6.098842610581622E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999975150521044	WITHOUT_CLASSIFICATION	2.484947895640566E-6	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999968632189424	WITHOUT_CLASSIFICATION	3.1367810574726605E-6	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999827831220839	WITHOUT_CLASSIFICATION	1.721687791616474E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999748707209172	WITHOUT_CLASSIFICATION	2.5129279082874228E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999998298179107	WITHOUT_CLASSIFICATION	1.701820892366814E-7	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999998921480239	WITHOUT_CLASSIFICATION	1.0785197623124837E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9998342604044562	WITHOUT_CLASSIFICATION	1.657395955438233E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999982161641576	WITHOUT_CLASSIFICATION	1.783835842334752E-6	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999969492905346	WITHOUT_CLASSIFICATION	3.0507094654269133E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999998674108923	WITHOUT_CLASSIFICATION	1.325891076817009E-7	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999953118273783	WITHOUT_CLASSIFICATION	4.6881726217394004E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999733863533727	WITHOUT_CLASSIFICATION	2.6613646627164297E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.999995484458682	WITHOUT_CLASSIFICATION	4.515541317959986E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999680755343	WITHOUT_CLASSIFICATION	3.1924465726184376E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999902831957412	WITHOUT_CLASSIFICATION	9.71680425886951E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999877816944962	WITHOUT_CLASSIFICATION	1.2218305503831972E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999416523643087	WITHOUT_CLASSIFICATION	5.8347635691307504E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999334504486428	WITHOUT_CLASSIFICATION	6.654955135719355E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999998324447604	WITHOUT_CLASSIFICATION	1.6755523960628374E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9952036663072417	WITHOUT_CLASSIFICATION	0.0047963336927583245	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999993916114444	WITHOUT_CLASSIFICATION	6.083885555433014E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999993916114444	WITHOUT_CLASSIFICATION	6.083885555433014E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999993916114444	WITHOUT_CLASSIFICATION	6.083885555433014E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987198305132	WITHOUT_CLASSIFICATION	1.2801694868245877E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987198305132	WITHOUT_CLASSIFICATION	1.2801694868245877E-6	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999452437589473	WITHOUT_CLASSIFICATION	5.475624105265391E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998578963390923	WITHOUT_CLASSIFICATION	1.4210366090772032E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998578963390923	WITHOUT_CLASSIFICATION	1.4210366090772032E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999947040930374	WITHOUT_CLASSIFICATION	5.295906962571665E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999990390230703	WITHOUT_CLASSIFICATION	9.609769296755353E-7	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999452437589473	WITHOUT_CLASSIFICATION	5.475624105265391E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999999638562393	WITHOUT_CLASSIFICATION	3.614376069239388E-8	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999452437589473	WITHOUT_CLASSIFICATION	5.475624105265391E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999993186978099	WITHOUT_CLASSIFICATION	6.813021900654859E-7	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999993186978099	WITHOUT_CLASSIFICATION	6.813021900654859E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999818643624002	WITHOUT_CLASSIFICATION	1.8135637599825586E-5	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998650861413491	WITHOUT_CLASSIFICATION	1.349138586509103E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9990800789163533	WITHOUT_CLASSIFICATION	9.199210836467152E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9984784060485442	WITHOUT_CLASSIFICATION	0.001521593951455763	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9982964362337056	WITHOUT_CLASSIFICATION	0.0017035637662944207	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9992011416994858	WITHOUT_CLASSIFICATION	7.988583005141285E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9976695418720181	WITHOUT_CLASSIFICATION	0.0023304581279819806	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.997939905656101	WITHOUT_CLASSIFICATION	0.0020600943438989455	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9987071587188975	WITHOUT_CLASSIFICATION	0.001292841281102472	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9985932583096498	WITHOUT_CLASSIFICATION	0.0014067416903501772	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9989832421885181	WITHOUT_CLASSIFICATION	0.0010167578114819373	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9991032591958671	WITHOUT_CLASSIFICATION	8.967408041328121E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9990551379882536	WITHOUT_CLASSIFICATION	9.448620117463522E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.998956143118043	WITHOUT_CLASSIFICATION	0.0010438568819570362	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9982690821868925	WITHOUT_CLASSIFICATION	0.0017309178131075375	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9982689626915378	WITHOUT_CLASSIFICATION	0.0017310373084623452	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9987866519037402	WITHOUT_CLASSIFICATION	0.0012133480962597807	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9986720918263243	WITHOUT_CLASSIFICATION	0.0013279081736756757	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.997480194419346	WITHOUT_CLASSIFICATION	0.002519805580654065	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9981593744148918	WITHOUT_CLASSIFICATION	0.0018406255851083075	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9992822042320189	WITHOUT_CLASSIFICATION	7.17795767981145E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9994812895964439	WITHOUT_CLASSIFICATION	5.187104035560047E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9986762163363943	WITHOUT_CLASSIFICATION	0.0013237836636057433	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9987649280366527	WITHOUT_CLASSIFICATION	0.001235071963347324	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9990578513075139	WITHOUT_CLASSIFICATION	9.421486924860765E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9988963651137396	WITHOUT_CLASSIFICATION	0.0011036348862603386	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9978467870897236	WITHOUT_CLASSIFICATION	0.0021532129102762826	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9990239373297596	WITHOUT_CLASSIFICATION	9.760626702405047E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9972704809729709	WITHOUT_CLASSIFICATION	0.002729519027029243	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9989044790248003	WITHOUT_CLASSIFICATION	0.0010955209751997417	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9988170098363255	WITHOUT_CLASSIFICATION	0.0011829901636745623	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9990373685650179	WITHOUT_CLASSIFICATION	9.626314349821203E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9983817471014192	WITHOUT_CLASSIFICATION	0.0016182528985807486	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.998313525865877	WITHOUT_CLASSIFICATION	0.0016864741341231036	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.998757500767257	WITHOUT_CLASSIFICATION	0.0012424992327430334	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9988239957808144	WITHOUT_CLASSIFICATION	0.0011760042191856308	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9982698451688258	WITHOUT_CLASSIFICATION	0.0017301548311742729	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9990430753357266	WITHOUT_CLASSIFICATION	9.569246642734435E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9980168930580541	WITHOUT_CLASSIFICATION	0.0019831069419458816	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9986075522578108	WITHOUT_CLASSIFICATION	0.001392447742189171	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.998498032743617	WITHOUT_CLASSIFICATION	0.0015019672563829863	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.997680611869255	WITHOUT_CLASSIFICATION	0.0023193881307449157	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.998434535619873	WITHOUT_CLASSIFICATION	0.0015654643801269242	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9985419460706684	WITHOUT_CLASSIFICATION	0.0014580539293315871	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9985624893197642	WITHOUT_CLASSIFICATION	0.0014375106802357585	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9992186539400497	WITHOUT_CLASSIFICATION	7.813460599503767E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9977584925300355	WITHOUT_CLASSIFICATION	0.002241507469964496	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.998044273208258	WITHOUT_CLASSIFICATION	0.0019557267917420726	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9986952174481781	WITHOUT_CLASSIFICATION	0.0013047825518218315	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.99576897267791	WITHOUT_CLASSIFICATION	0.004231027322089979	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9982071646743539	WITHOUT_CLASSIFICATION	0.0017928353256461316	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9987061246334292	WITHOUT_CLASSIFICATION	0.0012938753665708315	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9980064703326743	WITHOUT_CLASSIFICATION	0.001993529667325726	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9982291094659054	WITHOUT_CLASSIFICATION	0.0017708905340945993	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9990094265047477	WITHOUT_CLASSIFICATION	9.90573495252386E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9989790341989309	WITHOUT_CLASSIFICATION	0.0010209658010691285	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9983605767435111	WITHOUT_CLASSIFICATION	0.0016394232564890321	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9992266307816451	WITHOUT_CLASSIFICATION	7.73369218354846E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.997789256941324	WITHOUT_CLASSIFICATION	0.002210743058675938	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9976175535519228	WITHOUT_CLASSIFICATION	0.002382446448077093	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.998907607600049	WITHOUT_CLASSIFICATION	0.001092392399950893	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9963985564772353	WITHOUT_CLASSIFICATION	0.0036014435227647327	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.998963473872576	WITHOUT_CLASSIFICATION	0.0010365261274240525	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9994355007850442	WITHOUT_CLASSIFICATION	5.644992149558806E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9988924578846093	WITHOUT_CLASSIFICATION	0.001107542115390719	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9985184258084272	WITHOUT_CLASSIFICATION	0.0014815741915727668	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9980096235717917	WITHOUT_CLASSIFICATION	0.0019903764282082318	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.998018211306795	WITHOUT_CLASSIFICATION	0.0019817886932050276	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9987319882528762	WITHOUT_CLASSIFICATION	0.0012680117471237724	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9993023416015908	WITHOUT_CLASSIFICATION	6.976583984091811E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9988032703104961	WITHOUT_CLASSIFICATION	0.0011967296895038953	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9989405228963397	WITHOUT_CLASSIFICATION	0.0010594771036601927	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9991882299644801	WITHOUT_CLASSIFICATION	8.11770035519799E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9980315736544196	WITHOUT_CLASSIFICATION	0.0019684263455803314	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9989606037368042	WITHOUT_CLASSIFICATION	0.001039396263195901	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9989254121636553	WITHOUT_CLASSIFICATION	0.0010745878363447427	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9978834062441603	WITHOUT_CLASSIFICATION	0.0021165937558397328	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9982785680256864	WITHOUT_CLASSIFICATION	0.001721431974313522	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.995946778543055	WITHOUT_CLASSIFICATION	0.004053221456944964	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.997833897250928	WITHOUT_CLASSIFICATION	0.0021661027490720163	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9991052508896772	WITHOUT_CLASSIFICATION	8.947491103229236E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999696272785378	WITHOUT_CLASSIFICATION	3.0372721462197316E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999890496768783	WITHOUT_CLASSIFICATION	1.095032312181481E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999998434645557	WITHOUT_CLASSIFICATION	1.5653544430743237E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999998389084668	WITHOUT_CLASSIFICATION	1.6109153332755801E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999825583206	WITHOUT_CLASSIFICATION	1.744167939601345E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999998393898999	WITHOUT_CLASSIFICATION	1.6061010006931834E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999804960128794	WITHOUT_CLASSIFICATION	1.9503987120556908E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999867463603896	WITHOUT_CLASSIFICATION	1.3253639610285083E-5	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999972905098292	WITHOUT_CLASSIFICATION	2.7094901708864816E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999979764378925	WITHOUT_CLASSIFICATION	2.0235621074866025E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999996628571828	WITHOUT_CLASSIFICATION	3.371428172151815E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998072243716303	WITHOUT_CLASSIFICATION	1.9277562836968258E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999741170954873	WITHOUT_CLASSIFICATION	2.5882904512637547E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999941168286058	WITHOUT_CLASSIFICATION	5.883171394219063E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999902831957412	WITHOUT_CLASSIFICATION	9.71680425886951E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999877816944962	WITHOUT_CLASSIFICATION	1.2218305503831972E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999962894596199	WITHOUT_CLASSIFICATION	3.710540380093195E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987198305132	WITHOUT_CLASSIFICATION	1.2801694868245877E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999818643624002	WITHOUT_CLASSIFICATION	1.8135637599825586E-5	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999874010333614	WITHOUT_CLASSIFICATION	1.2598966638606954E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999926239424118	WITHOUT_CLASSIFICATION	7.376057588140529E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999982344691268	WITHOUT_CLASSIFICATION	1.765530873256904E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.999999454015218	WITHOUT_CLASSIFICATION	5.459847820756048E-7	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9998110605960621	WITHOUT_CLASSIFICATION	1.889394039379141E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999980118753414	WITHOUT_CLASSIFICATION	1.9881246585278794E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999998592893422	WITHOUT_CLASSIFICATION	1.407106578113948E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999490606203	WITHOUT_CLASSIFICATION	5.0939379737382734E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999756835431023	WITHOUT_CLASSIFICATION	2.4316456897639842E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999944750916703	WITHOUT_CLASSIFICATION	5.52490832971506E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999978244880863	WITHOUT_CLASSIFICATION	2.1755119137760385E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999998943519719	WITHOUT_CLASSIFICATION	1.0564802806268286E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.999963181247898	WITHOUT_CLASSIFICATION	3.681875210214508E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999977091353766	WITHOUT_CLASSIFICATION	2.2908646235094497E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999910739446644	WITHOUT_CLASSIFICATION	8.926055335756331E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999815136345498	WITHOUT_CLASSIFICATION	1.848636545019434E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999979052253533	WITHOUT_CLASSIFICATION	2.0947746467613386E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999990295910898	WITHOUT_CLASSIFICATION	9.704089102566232E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999506641134268	WITHOUT_CLASSIFICATION	4.933588657316808E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999857078564701	WITHOUT_CLASSIFICATION	1.4292143529898481E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999981138692537	WITHOUT_CLASSIFICATION	1.886130746239528E-6	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999877901036756	WITHOUT_CLASSIFICATION	1.2209896324408032E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999999423708725	WITHOUT_CLASSIFICATION	5.762912763113464E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999997490511146	WITHOUT_CLASSIFICATION	2.5094888550334736E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999842482246395	WITHOUT_CLASSIFICATION	1.575177536056895E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999617357363861	WITHOUT_CLASSIFICATION	3.826426361393862E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9997707069386096	WITHOUT_CLASSIFICATION	2.2929306139050196E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999997558045973	WITHOUT_CLASSIFICATION	2.4419540267523526E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999172728515859	WITHOUT_CLASSIFICATION	8.272714841409583E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999999834370209	WITHOUT_CLASSIFICATION	1.6562979107501701E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999986671816291	WITHOUT_CLASSIFICATION	1.3328183710019685E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924309243	WITHOUT_CLASSIFICATION	7.56907579259167E-9	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924309243	WITHOUT_CLASSIFICATION	7.56907579259167E-9	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.999999984647898	WITHOUT_CLASSIFICATION	1.5352102069082267E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999991569456045	WITHOUT_CLASSIFICATION	8.430543955496889E-7	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999919807825793	WITHOUT_CLASSIFICATION	8.019217420683786E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9858870348877645	WITHOUT_CLASSIFICATION	0.014112965112235474	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999898085740977	WITHOUT_CLASSIFICATION	1.0191425902259059E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999162144525	WITHOUT_CLASSIFICATION	8.378554745547007E-8	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9988480806942404	WITHOUT_CLASSIFICATION	0.001151919305759639	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999459283817755	WITHOUT_CLASSIFICATION	5.407161822443398E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999904282236898	WITHOUT_CLASSIFICATION	9.571776310228778E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999916906965731	WITHOUT_CLASSIFICATION	8.30930342683721E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999973974180988	WITHOUT_CLASSIFICATION	2.602581901292548E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999962879508719	WITHOUT_CLASSIFICATION	3.712049127952418E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998668547901028	WITHOUT_CLASSIFICATION	1.3314520989709996E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999934126703232	WITHOUT_CLASSIFICATION	6.587329676783577E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999938685773282	WITHOUT_CLASSIFICATION	6.1314226717620095E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999724526491134	WITHOUT_CLASSIFICATION	2.7547350886659113E-5	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.999997650715794	WITHOUT_CLASSIFICATION	2.349284206011781E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.999917770815091	WITHOUT_CLASSIFICATION	8.222918490899624E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.99993290738462	WITHOUT_CLASSIFICATION	6.709261538002205E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999926311568	WITHOUT_CLASSIFICATION	7.368843284806365E-9	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999862225367172	WITHOUT_CLASSIFICATION	1.3777463282802522E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999337755390268	WITHOUT_CLASSIFICATION	6.622446097313688E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999518318617	WITHOUT_CLASSIFICATION	4.816813824902564E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999996686696667	WITHOUT_CLASSIFICATION	3.313303332151471E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999997350552905	WITHOUT_CLASSIFICATION	2.649447094682931E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999995475210625	WITHOUT_CLASSIFICATION	4.524789376184962E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999932836808	WITHOUT_CLASSIFICATION	6.71631917671088E-9	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999877695284	WITHOUT_CLASSIFICATION	1.2230471520395022E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999977923155	WITHOUT_CLASSIFICATION	2.2076845787416036E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.999999992410476	WITHOUT_CLASSIFICATION	7.589524008411695E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999996780906086	WITHOUT_CLASSIFICATION	3.219093913261937E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999391808765	WITHOUT_CLASSIFICATION	6.081912355595205E-8	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999996720024429	WITHOUT_CLASSIFICATION	3.2799755712650517E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999773697625	WITHOUT_CLASSIFICATION	2.263023746816907E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999143385539855	WITHOUT_CLASSIFICATION	8.5661446014441E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999913160603724	WITHOUT_CLASSIFICATION	8.683939627603987E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999971934055614	WITHOUT_CLASSIFICATION	2.8065944387314052E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999996585735407	WITHOUT_CLASSIFICATION	3.414264593715108E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999932386477456	WITHOUT_CLASSIFICATION	6.761352254414459E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999928868492	WITHOUT_CLASSIFICATION	7.11315089844571E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999994315407477	WITHOUT_CLASSIFICATION	5.6845925229917955E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999765881675025	WITHOUT_CLASSIFICATION	2.341183249758204E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999934537798623	WITHOUT_CLASSIFICATION	6.546220137663021E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999628577153909	WITHOUT_CLASSIFICATION	3.714228460910678E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999799888316715	WITHOUT_CLASSIFICATION	2.0011168328500615E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9952307647375311	WITHOUT_CLASSIFICATION	0.004769235262468822	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.999998151643833	WITHOUT_CLASSIFICATION	1.848356167027022E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.999999828716136	WITHOUT_CLASSIFICATION	1.7128386405236892E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999861556534707	WITHOUT_CLASSIFICATION	1.3844346529317982E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999968388126	WITHOUT_CLASSIFICATION	3.161187402245553E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999999632776514	WITHOUT_CLASSIFICATION	3.6722348613282004E-8	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999666216977	WITHOUT_CLASSIFICATION	3.337830230378987E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999988100278	WITHOUT_CLASSIFICATION	1.1899722793198282E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999768817371	WITHOUT_CLASSIFICATION	2.3118262892128958E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999999627933	WITHOUT_CLASSIFICATION	3.72066296604554E-11	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999995229674464	WITHOUT_CLASSIFICATION	4.770325535786963E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9995049943125027	WITHOUT_CLASSIFICATION	4.950056874972249E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999841194371	WITHOUT_CLASSIFICATION	1.5880562912880816E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999981022876895	WITHOUT_CLASSIFICATION	1.897712310525698E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999604494035	WITHOUT_CLASSIFICATION	3.955059646693612E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999903019062182	WITHOUT_CLASSIFICATION	9.698093781757414E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999993417453696	WITHOUT_CLASSIFICATION	6.582546303521144E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999998373687433	WITHOUT_CLASSIFICATION	1.6263125670983947E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999985123712882	WITHOUT_CLASSIFICATION	1.4876287118036826E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999997631148839	WITHOUT_CLASSIFICATION	2.368851160700391E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999984668691811	WITHOUT_CLASSIFICATION	1.5331308188522807E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999168132204	WITHOUT_CLASSIFICATION	8.318677962819033E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999999918652172	WITHOUT_CLASSIFICATION	8.134782796557984E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999884486954045	WITHOUT_CLASSIFICATION	1.1551304595478794E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999973343404615	WITHOUT_CLASSIFICATION	2.665659538559741E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999957319174	WITHOUT_CLASSIFICATION	4.26808250035854E-9	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999996985565685	WITHOUT_CLASSIFICATION	3.0144343152614927E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999976980186038	WITHOUT_CLASSIFICATION	2.3019813961372647E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.999999486784042	WITHOUT_CLASSIFICATION	5.1321595802231E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999995005537138	WITHOUT_CLASSIFICATION	4.994462862392849E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9994918354476819	WITHOUT_CLASSIFICATION	5.081645523180992E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.99999968844837	WITHOUT_CLASSIFICATION	3.1155163002993535E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999996049106677	WITHOUT_CLASSIFICATION	3.950893323497975E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999905554535651	WITHOUT_CLASSIFICATION	9.444546434901208E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999387130021	WITHOUT_CLASSIFICATION	6.128699791812516E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999997443195888	WITHOUT_CLASSIFICATION	2.5568041116805306E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999974239124838	WITHOUT_CLASSIFICATION	2.5760875162042038E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999894196489537	WITHOUT_CLASSIFICATION	1.0580351046276267E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999961127529939	WITHOUT_CLASSIFICATION	3.8872470061058125E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.999999791445777	WITHOUT_CLASSIFICATION	2.085542229007016E-7	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999878636553331	WITHOUT_CLASSIFICATION	1.2136344666875299E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999237069929023	WITHOUT_CLASSIFICATION	7.629300709758718E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.999887179937958	WITHOUT_CLASSIFICATION	1.1282006204195147E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999379712544	WITHOUT_CLASSIFICATION	6.202874557702175E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995213724953	WITHOUT_CLASSIFICATION	4.786275046387378E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999937463886	WITHOUT_CLASSIFICATION	6.2536114353474206E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999995362658457	WITHOUT_CLASSIFICATION	4.637341543033479E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999952363426977	WITHOUT_CLASSIFICATION	4.763657302293472E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.999994462513112	WITHOUT_CLASSIFICATION	5.537486888075185E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998468349995	WITHOUT_CLASSIFICATION	1.5316500044379847E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999990502013412	WITHOUT_CLASSIFICATION	9.497986588713766E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999984491502756	WITHOUT_CLASSIFICATION	1.5508497244125946E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999993897909304	WITHOUT_CLASSIFICATION	6.102090696956313E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999993225789899	WITHOUT_CLASSIFICATION	6.774210100854811E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999994153924018	WITHOUT_CLASSIFICATION	5.846075982132984E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999412764342129	WITHOUT_CLASSIFICATION	5.872356578706368E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999959661843405	WITHOUT_CLASSIFICATION	4.033815659498075E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999019683485111	WITHOUT_CLASSIFICATION	9.803165148886765E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999938354746184	WITHOUT_CLASSIFICATION	6.164525381561553E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999625604516745	WITHOUT_CLASSIFICATION	3.743954832548508E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999511308616016	WITHOUT_CLASSIFICATION	4.886913839842656E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915009358126	WITHOUT_CLASSIFICATION	8.49906418736556E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998838909366657	WITHOUT_CLASSIFICATION	1.1610906333433544E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985794643821	WITHOUT_CLASSIFICATION	1.4205356179102714E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817802284897	WITHOUT_CLASSIFICATION	1.8219771510238443E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913306773732	WITHOUT_CLASSIFICATION	8.669322626839193E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999536317413396	WITHOUT_CLASSIFICATION	4.636825866033755E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998950093197914	WITHOUT_CLASSIFICATION	1.0499068020873306E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840484049267	WITHOUT_CLASSIFICATION	1.5951595073350988E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804625245262	WITHOUT_CLASSIFICATION	1.9537475473786844E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901968484184	WITHOUT_CLASSIFICATION	9.803151581574301E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999118698763969	WITHOUT_CLASSIFICATION	8.813012360305977E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892896203408	WITHOUT_CLASSIFICATION	1.0710379659123888E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999858294786158	WITHOUT_CLASSIFICATION	1.4170521384216484E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999163127375382	WITHOUT_CLASSIFICATION	8.368726246176894E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998879767543395	WITHOUT_CLASSIFICATION	1.1202324566045373E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999147632470541	WITHOUT_CLASSIFICATION	8.52367529459393E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893563363079	WITHOUT_CLASSIFICATION	1.0643663692112032E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999914069735867	WITHOUT_CLASSIFICATION	8.593026413292295E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999024972647692	WITHOUT_CLASSIFICATION	9.750273523082295E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998910560600353	WITHOUT_CLASSIFICATION	1.0894393996474955E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999261293615075	WITHOUT_CLASSIFICATION	7.387063849250021E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999261293615075	WITHOUT_CLASSIFICATION	7.387063849250021E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999020508482712	WITHOUT_CLASSIFICATION	9.79491517288433E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999334426056737	WITHOUT_CLASSIFICATION	6.655739432620226E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999144112592006	WITHOUT_CLASSIFICATION	8.55887407993773E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999510283427447	WITHOUT_CLASSIFICATION	4.897165725520237E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999391306523504	WITHOUT_CLASSIFICATION	6.086934764953235E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998865915610619	WITHOUT_CLASSIFICATION	1.1340843893810436E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999276845040392	WITHOUT_CLASSIFICATION	7.231549596081887E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999269311771531	WITHOUT_CLASSIFICATION	7.30688228468482E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999065739023857	WITHOUT_CLASSIFICATION	9.342609761435113E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999984702067091	WITHOUT_CLASSIFICATION	1.5297932909050544E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998856434943758	WITHOUT_CLASSIFICATION	1.1435650562415244E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999989763110606	WITHOUT_CLASSIFICATION	1.0236889393987316E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999952981855878	WITHOUT_CLASSIFICATION	4.701814412202334E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999318123730454	WITHOUT_CLASSIFICATION	6.818762695452813E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999067242522959	WITHOUT_CLASSIFICATION	9.327574770407004E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999931302831657	WITHOUT_CLASSIFICATION	6.86971683430526E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999946732808374	WITHOUT_CLASSIFICATION	5.3267191626010134E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999256640690137	WITHOUT_CLASSIFICATION	7.433593098632823E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999324582226085	WITHOUT_CLASSIFICATION	6.754177739155918E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999458453155763	WITHOUT_CLASSIFICATION	5.4154684423719004E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998919907365564	WITHOUT_CLASSIFICATION	1.080092634435276E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880079672541	WITHOUT_CLASSIFICATION	1.1992032745962508E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880079672541	WITHOUT_CLASSIFICATION	1.1992032745962508E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886816543709	WITHOUT_CLASSIFICATION	1.1318345629104512E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886816543709	WITHOUT_CLASSIFICATION	1.1318345629104512E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919747104384	WITHOUT_CLASSIFICATION	8.025289561484447E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999324498872749	WITHOUT_CLASSIFICATION	6.755011272516978E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999858294786158	WITHOUT_CLASSIFICATION	1.4170521384216484E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999458453155763	WITHOUT_CLASSIFICATION	5.4154684423719004E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880079672541	WITHOUT_CLASSIFICATION	1.1992032745962508E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886816543709	WITHOUT_CLASSIFICATION	1.1318345629104512E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999324498872749	WITHOUT_CLASSIFICATION	6.755011272516978E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999496539455128	WITHOUT_CLASSIFICATION	5.034605448723806E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999044396525717	WITHOUT_CLASSIFICATION	9.556034742835853E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999009925053813	WITHOUT_CLASSIFICATION	9.90074946186621E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999857045733132	WITHOUT_CLASSIFICATION	1.4295426686795697E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999682280070343	WITHOUT_CLASSIFICATION	3.177199296570253E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999373174920514	WITHOUT_CLASSIFICATION	6.268250794859758E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914754522543	WITHOUT_CLASSIFICATION	8.524547745798134E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999498434138306	WITHOUT_CLASSIFICATION	5.015658616931376E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914754522543	WITHOUT_CLASSIFICATION	8.524547745798134E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999383346298333	WITHOUT_CLASSIFICATION	6.166537016677206E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998274427783264	WITHOUT_CLASSIFICATION	1.7255722167356448E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999206835858994	WITHOUT_CLASSIFICATION	7.931641410064026E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999258585719648	WITHOUT_CLASSIFICATION	7.414142803523976E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999094396950827	WITHOUT_CLASSIFICATION	9.056030491733409E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999415893433986	WITHOUT_CLASSIFICATION	5.841065660136426E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999683090574131	WITHOUT_CLASSIFICATION	3.169094258690922E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999198840957554	WITHOUT_CLASSIFICATION	8.011590424463837E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999943028479925	WITHOUT_CLASSIFICATION	5.6971520075054664E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999959248725856	WITHOUT_CLASSIFICATION	4.075127414425772E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999318321974322	WITHOUT_CLASSIFICATION	6.81678025677317E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999544979449284	WITHOUT_CLASSIFICATION	4.550205507159133E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999454439494426	WITHOUT_CLASSIFICATION	5.455605055728247E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999947392151143	WITHOUT_CLASSIFICATION	5.260784885747738E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999991480239827	WITHOUT_CLASSIFICATION	8.519760172913504E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999366808216795	WITHOUT_CLASSIFICATION	6.33191783205219E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999494402664124	WITHOUT_CLASSIFICATION	5.055973358751223E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999951083827263	WITHOUT_CLASSIFICATION	4.891617273713003E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999931734737458	WITHOUT_CLASSIFICATION	6.8265262541703565E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915572009878	WITHOUT_CLASSIFICATION	8.442799012258224E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999926311568	WITHOUT_CLASSIFICATION	7.368843284806365E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999189550089909	WITHOUT_CLASSIFICATION	8.104499100908857E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99980642663593	WITHOUT_CLASSIFICATION	1.9357336407002952E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999552843962747	WITHOUT_CLASSIFICATION	4.471560372532319E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999318321974322	WITHOUT_CLASSIFICATION	6.81678025677317E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999509771554691	WITHOUT_CLASSIFICATION	4.90228445307987E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997827923323124	WITHOUT_CLASSIFICATION	2.1720766768760285E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998970519759438	WITHOUT_CLASSIFICATION	1.0294802405620178E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999995785891653	WITHOUT_CLASSIFICATION	4.2141083476219277E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999995713787048	WITHOUT_CLASSIFICATION	4.2862129530262255E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999994195309383	WITHOUT_CLASSIFICATION	5.804690617262111E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999996246269027	WITHOUT_CLASSIFICATION	3.7537309722210783E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999997109951198	WITHOUT_CLASSIFICATION	2.890048802801475E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999322376771	WITHOUT_CLASSIFICATION	6.77623229078239E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997624884313	WITHOUT_CLASSIFICATION	2.3751156868209394E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999589514931	WITHOUT_CLASSIFICATION	4.1048506889029496E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998561221709	WITHOUT_CLASSIFICATION	1.43877829114107E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999993932194986	WITHOUT_CLASSIFICATION	6.06780501462793E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998474051754	WITHOUT_CLASSIFICATION	1.5259482455050958E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998468349995	WITHOUT_CLASSIFICATION	1.5316500044379847E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999463681601	WITHOUT_CLASSIFICATION	5.363183985224202E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999999617497179	WITHOUT_CLASSIFICATION	3.825028210873963E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999923213618437	WITHOUT_CLASSIFICATION	7.678638156292536E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999767158576149	WITHOUT_CLASSIFICATION	2.3284142385108108E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999964370181944	WITHOUT_CLASSIFICATION	3.562981805510197E-6	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999862866651479	WITHOUT_CLASSIFICATION	1.3713334852079095E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999990349425742	WITHOUT_CLASSIFICATION	9.650574257622116E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999998066065903	WITHOUT_CLASSIFICATION	1.933934098066566E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999998071668917	WITHOUT_CLASSIFICATION	1.9283310829900365E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9997707069386096	WITHOUT_CLASSIFICATION	2.2929306139050196E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999997558045973	WITHOUT_CLASSIFICATION	2.4419540267523526E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999172728515859	WITHOUT_CLASSIFICATION	8.272714841409583E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999999834370209	WITHOUT_CLASSIFICATION	1.6562979107501701E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999986671816291	WITHOUT_CLASSIFICATION	1.3328183710019685E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924309243	WITHOUT_CLASSIFICATION	7.56907579259167E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999991569456045	WITHOUT_CLASSIFICATION	8.430543955496889E-7	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999919807825793	WITHOUT_CLASSIFICATION	8.019217420683786E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9858870348877645	WITHOUT_CLASSIFICATION	0.014112965112235474	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999898085740977	WITHOUT_CLASSIFICATION	1.0191425902259059E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999162144525	WITHOUT_CLASSIFICATION	8.378554745547007E-8	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999987332132385	WITHOUT_CLASSIFICATION	1.2667867614848368E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995213724953	WITHOUT_CLASSIFICATION	4.786275046387378E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999916906965731	WITHOUT_CLASSIFICATION	8.30930342683721E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999962879508719	WITHOUT_CLASSIFICATION	3.712049127952418E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.999997650715794	WITHOUT_CLASSIFICATION	2.349284206011781E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.999917770815091	WITHOUT_CLASSIFICATION	8.222918490899624E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.99993290738462	WITHOUT_CLASSIFICATION	6.709261538002205E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999904282236898	WITHOUT_CLASSIFICATION	9.571776310228778E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999973974180988	WITHOUT_CLASSIFICATION	2.602581901292548E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999926311568	WITHOUT_CLASSIFICATION	7.368843284806365E-9	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999934126703232	WITHOUT_CLASSIFICATION	6.587329676783577E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999617357363861	WITHOUT_CLASSIFICATION	3.826426361393862E-5	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998668547901028	WITHOUT_CLASSIFICATION	1.3314520989709996E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999518318617	WITHOUT_CLASSIFICATION	4.816813824902564E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999996686696667	WITHOUT_CLASSIFICATION	3.313303332151471E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999997350552905	WITHOUT_CLASSIFICATION	2.649447094682931E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998468349995	WITHOUT_CLASSIFICATION	1.5316500044379847E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993033244744055	WITHOUT_CLASSIFICATION	6.966755255944676E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999977144234	WITHOUT_CLASSIFICATION	2.285576603175615E-9	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999932836808	WITHOUT_CLASSIFICATION	6.71631917671088E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999977923155	WITHOUT_CLASSIFICATION	2.2076845787416036E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999962321312	WITHOUT_CLASSIFICATION	3.76786877011325E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.999999992410476	WITHOUT_CLASSIFICATION	7.589524008411695E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999996780906086	WITHOUT_CLASSIFICATION	3.219093913261937E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999996720024429	WITHOUT_CLASSIFICATION	3.2799755712650517E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999981504148368	WITHOUT_CLASSIFICATION	1.8495851632996442E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999773697625	WITHOUT_CLASSIFICATION	2.263023746816907E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999143385539855	WITHOUT_CLASSIFICATION	8.5661446014441E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999913160603724	WITHOUT_CLASSIFICATION	8.683939627603987E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999997283324705	WITHOUT_CLASSIFICATION	2.7166752949569775E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999971934055614	WITHOUT_CLASSIFICATION	2.8065944387314052E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999124312527	WITHOUT_CLASSIFICATION	8.756874721673635E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999994315407477	WITHOUT_CLASSIFICATION	5.6845925229917955E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999996585735407	WITHOUT_CLASSIFICATION	3.414264593715108E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999932386477456	WITHOUT_CLASSIFICATION	6.761352254414459E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999934537798623	WITHOUT_CLASSIFICATION	6.546220137663021E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999628577153909	WITHOUT_CLASSIFICATION	3.714228460910678E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999799888316715	WITHOUT_CLASSIFICATION	2.0011168328500615E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9988304245941436	WITHOUT_CLASSIFICATION	0.0011695754058564393	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9952307647375311	WITHOUT_CLASSIFICATION	0.004769235262468822	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.999998151643833	WITHOUT_CLASSIFICATION	1.848356167027022E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.999999828716136	WITHOUT_CLASSIFICATION	1.7128386405236892E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999861556534707	WITHOUT_CLASSIFICATION	1.3844346529317982E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999968388126	WITHOUT_CLASSIFICATION	3.161187402245553E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999999632776514	WITHOUT_CLASSIFICATION	3.6722348613282004E-8	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999666216977	WITHOUT_CLASSIFICATION	3.337830230378987E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999988100278	WITHOUT_CLASSIFICATION	1.1899722793198282E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999768817371	WITHOUT_CLASSIFICATION	2.3118262892128958E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999768817371	WITHOUT_CLASSIFICATION	2.3118262892128958E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999999627933	WITHOUT_CLASSIFICATION	3.72066296604554E-11	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999995229674464	WITHOUT_CLASSIFICATION	4.770325535786963E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9995049943125027	WITHOUT_CLASSIFICATION	4.950056874972249E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999841194371	WITHOUT_CLASSIFICATION	1.5880562912880816E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999604494035	WITHOUT_CLASSIFICATION	3.955059646693612E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999903019062182	WITHOUT_CLASSIFICATION	9.698093781757414E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999993417453696	WITHOUT_CLASSIFICATION	6.582546303521144E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999998373687433	WITHOUT_CLASSIFICATION	1.6263125670983947E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999997631148839	WITHOUT_CLASSIFICATION	2.368851160700391E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999990886127	WITHOUT_CLASSIFICATION	9.11387300443622E-10	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999984668691811	WITHOUT_CLASSIFICATION	1.5331308188522807E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999168132204	WITHOUT_CLASSIFICATION	8.318677962819033E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999999918652172	WITHOUT_CLASSIFICATION	8.134782796557984E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999884486954045	WITHOUT_CLASSIFICATION	1.1551304595478794E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999973343404615	WITHOUT_CLASSIFICATION	2.665659538559741E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999996985565685	WITHOUT_CLASSIFICATION	3.0144343152614927E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999976980186038	WITHOUT_CLASSIFICATION	2.3019813961372647E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.999999486784042	WITHOUT_CLASSIFICATION	5.1321595802231E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999995005537138	WITHOUT_CLASSIFICATION	4.994462862392849E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9994918354476819	WITHOUT_CLASSIFICATION	5.081645523180992E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.99999968844837	WITHOUT_CLASSIFICATION	3.1155163002993535E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999996049106677	WITHOUT_CLASSIFICATION	3.950893323497975E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999905554535651	WITHOUT_CLASSIFICATION	9.444546434901208E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999387130021	WITHOUT_CLASSIFICATION	6.128699791812516E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999997443195888	WITHOUT_CLASSIFICATION	2.5568041116805306E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999974239124838	WITHOUT_CLASSIFICATION	2.5760875162042038E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999961127529939	WITHOUT_CLASSIFICATION	3.8872470061058125E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999878636553331	WITHOUT_CLASSIFICATION	1.2136344666875299E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999237069929023	WITHOUT_CLASSIFICATION	7.629300709758718E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.999887179937958	WITHOUT_CLASSIFICATION	1.1282006204195147E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999379712544	WITHOUT_CLASSIFICATION	6.202874557702175E-8	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999438729009893	WITHOUT_CLASSIFICATION	5.612709901083315E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999891487604	WITHOUT_CLASSIFICATION	1.085123956603955E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999966451511264	WITHOUT_CLASSIFICATION	3.3548488735005323E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999937463886	WITHOUT_CLASSIFICATION	6.2536114353474206E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999606595855	WITHOUT_CLASSIFICATION	3.934041452062151E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999995362658457	WITHOUT_CLASSIFICATION	4.637341543033479E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999952363426977	WITHOUT_CLASSIFICATION	4.763657302293472E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.999994462513112	WITHOUT_CLASSIFICATION	5.537486888075185E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999998390472761	WITHOUT_CLASSIFICATION	1.6095272403092642E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999990502013412	WITHOUT_CLASSIFICATION	9.497986588713766E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999984491502756	WITHOUT_CLASSIFICATION	1.5508497244125946E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999993897909304	WITHOUT_CLASSIFICATION	6.102090696956313E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999993225789899	WITHOUT_CLASSIFICATION	6.774210100854811E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999994153924018	WITHOUT_CLASSIFICATION	5.846075982132984E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999412764342129	WITHOUT_CLASSIFICATION	5.872356578706368E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999959661843405	WITHOUT_CLASSIFICATION	4.033815659498075E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999019683485111	WITHOUT_CLASSIFICATION	9.803165148886765E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999938354746184	WITHOUT_CLASSIFICATION	6.164525381561553E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999511308616016	WITHOUT_CLASSIFICATION	4.886913839842656E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915009358126	WITHOUT_CLASSIFICATION	8.49906418736556E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998838909366657	WITHOUT_CLASSIFICATION	1.1610906333433544E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985794643821	WITHOUT_CLASSIFICATION	1.4205356179102714E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913808604083	WITHOUT_CLASSIFICATION	8.619139591801692E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817802284897	WITHOUT_CLASSIFICATION	1.8219771510238443E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913306773732	WITHOUT_CLASSIFICATION	8.669322626839193E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999536317413396	WITHOUT_CLASSIFICATION	4.636825866033755E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998950093197914	WITHOUT_CLASSIFICATION	1.0499068020873306E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840484049267	WITHOUT_CLASSIFICATION	1.5951595073350988E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804625245262	WITHOUT_CLASSIFICATION	1.9537475473786844E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901968484184	WITHOUT_CLASSIFICATION	9.803151581574301E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998078841852662	WITHOUT_CLASSIFICATION	1.9211581473379987E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892896203408	WITHOUT_CLASSIFICATION	1.0710379659123888E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999858294786158	WITHOUT_CLASSIFICATION	1.4170521384216484E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998879767543395	WITHOUT_CLASSIFICATION	1.1202324566045373E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999147632470541	WITHOUT_CLASSIFICATION	8.52367529459393E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893563363079	WITHOUT_CLASSIFICATION	1.0643663692112032E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999914069735867	WITHOUT_CLASSIFICATION	8.593026413292295E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999024972647692	WITHOUT_CLASSIFICATION	9.750273523082295E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999907961444914	WITHOUT_CLASSIFICATION	9.203855508601607E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998910560600353	WITHOUT_CLASSIFICATION	1.0894393996474955E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999261293615075	WITHOUT_CLASSIFICATION	7.387063849250021E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999334426056737	WITHOUT_CLASSIFICATION	6.655739432620226E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999269311771531	WITHOUT_CLASSIFICATION	7.30688228468482E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999261293615075	WITHOUT_CLASSIFICATION	7.387063849250021E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999144112592006	WITHOUT_CLASSIFICATION	8.55887407993773E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999510283427447	WITHOUT_CLASSIFICATION	4.897165725520237E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999391306523504	WITHOUT_CLASSIFICATION	6.086934764953235E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998865915610619	WITHOUT_CLASSIFICATION	1.1340843893810436E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999276845040392	WITHOUT_CLASSIFICATION	7.231549596081887E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999065739023857	WITHOUT_CLASSIFICATION	9.342609761435113E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999984702067091	WITHOUT_CLASSIFICATION	1.5297932909050544E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998856434943758	WITHOUT_CLASSIFICATION	1.1435650562415244E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999989763110606	WITHOUT_CLASSIFICATION	1.0236889393987316E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999952981855878	WITHOUT_CLASSIFICATION	4.701814412202334E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999242646866493	WITHOUT_CLASSIFICATION	7.573531335070505E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998449561081261	WITHOUT_CLASSIFICATION	1.5504389187387152E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999067242522959	WITHOUT_CLASSIFICATION	9.327574770407004E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999931302831657	WITHOUT_CLASSIFICATION	6.86971683430526E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999256640690137	WITHOUT_CLASSIFICATION	7.433593098632823E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918438394618	WITHOUT_CLASSIFICATION	8.156160538266548E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999946732808374	WITHOUT_CLASSIFICATION	5.3267191626010134E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999324582226085	WITHOUT_CLASSIFICATION	6.754177739155918E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999458453155763	WITHOUT_CLASSIFICATION	5.4154684423719004E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880079672541	WITHOUT_CLASSIFICATION	1.1992032745962508E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880079672541	WITHOUT_CLASSIFICATION	1.1992032745962508E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886816543709	WITHOUT_CLASSIFICATION	1.1318345629104512E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886816543709	WITHOUT_CLASSIFICATION	1.1318345629104512E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919747104384	WITHOUT_CLASSIFICATION	8.025289561484447E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919747104384	WITHOUT_CLASSIFICATION	8.025289561484447E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999324498872749	WITHOUT_CLASSIFICATION	6.755011272516978E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999496539455128	WITHOUT_CLASSIFICATION	5.034605448723806E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999858294786158	WITHOUT_CLASSIFICATION	1.4170521384216484E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999458453155763	WITHOUT_CLASSIFICATION	5.4154684423719004E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880079672541	WITHOUT_CLASSIFICATION	1.1992032745962508E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886816543709	WITHOUT_CLASSIFICATION	1.1318345629104512E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999044396525717	WITHOUT_CLASSIFICATION	9.556034742835853E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999009925053813	WITHOUT_CLASSIFICATION	9.90074946186621E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999857045733132	WITHOUT_CLASSIFICATION	1.4295426686795697E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999682280070343	WITHOUT_CLASSIFICATION	3.177199296570253E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999373174920514	WITHOUT_CLASSIFICATION	6.268250794859758E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999498434138306	WITHOUT_CLASSIFICATION	5.015658616931376E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999498434138306	WITHOUT_CLASSIFICATION	5.015658616931376E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914754522543	WITHOUT_CLASSIFICATION	8.524547745798134E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999383346298333	WITHOUT_CLASSIFICATION	6.166537016677206E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998274427783264	WITHOUT_CLASSIFICATION	1.7255722167356448E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999206835858994	WITHOUT_CLASSIFICATION	7.931641410064026E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999258585719648	WITHOUT_CLASSIFICATION	7.414142803523976E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900295350491	WITHOUT_CLASSIFICATION	9.970464950839554E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850251034629	WITHOUT_CLASSIFICATION	1.4974896537145104E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914754522543	WITHOUT_CLASSIFICATION	8.524547745798134E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999094396950827	WITHOUT_CLASSIFICATION	9.056030491733409E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999415893433986	WITHOUT_CLASSIFICATION	5.841065660136426E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999683090574131	WITHOUT_CLASSIFICATION	3.169094258690922E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999943028479925	WITHOUT_CLASSIFICATION	5.6971520075054664E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999959248725856	WITHOUT_CLASSIFICATION	4.075127414425772E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999318321974322	WITHOUT_CLASSIFICATION	6.81678025677317E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999544979449284	WITHOUT_CLASSIFICATION	4.550205507159133E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999454439494426	WITHOUT_CLASSIFICATION	5.455605055728247E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999947392151143	WITHOUT_CLASSIFICATION	5.260784885747738E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999991480239827	WITHOUT_CLASSIFICATION	8.519760172913504E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999366808216795	WITHOUT_CLASSIFICATION	6.33191783205219E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999494402664124	WITHOUT_CLASSIFICATION	5.055973358751223E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999951083827263	WITHOUT_CLASSIFICATION	4.891617273713003E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999931734737458	WITHOUT_CLASSIFICATION	6.8265262541703565E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915572009878	WITHOUT_CLASSIFICATION	8.442799012258224E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999712266445908	WITHOUT_CLASSIFICATION	2.8773355409176384E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999552843962747	WITHOUT_CLASSIFICATION	4.471560372532319E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999318321974322	WITHOUT_CLASSIFICATION	6.81678025677317E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999509771554691	WITHOUT_CLASSIFICATION	4.90228445307987E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997827923323124	WITHOUT_CLASSIFICATION	2.1720766768760285E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998970519759438	WITHOUT_CLASSIFICATION	1.0294802405620178E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993033244744055	WITHOUT_CLASSIFICATION	6.966755255944676E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999995785891653	WITHOUT_CLASSIFICATION	4.2141083476219277E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999995713787048	WITHOUT_CLASSIFICATION	4.2862129530262255E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999994195309383	WITHOUT_CLASSIFICATION	5.804690617262111E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999996246269027	WITHOUT_CLASSIFICATION	3.7537309722210783E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999997109951198	WITHOUT_CLASSIFICATION	2.890048802801475E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999322376771	WITHOUT_CLASSIFICATION	6.77623229078239E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997624884313	WITHOUT_CLASSIFICATION	2.3751156868209394E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999589514931	WITHOUT_CLASSIFICATION	4.1048506889029496E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998561221709	WITHOUT_CLASSIFICATION	1.43877829114107E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999993932194986	WITHOUT_CLASSIFICATION	6.06780501462793E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998474051754	WITHOUT_CLASSIFICATION	1.5259482455050958E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998468349995	WITHOUT_CLASSIFICATION	1.5316500044379847E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999463681601	WITHOUT_CLASSIFICATION	5.363183985224202E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999999617497179	WITHOUT_CLASSIFICATION	3.825028210873963E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999923213618437	WITHOUT_CLASSIFICATION	7.678638156292536E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999767158576149	WITHOUT_CLASSIFICATION	2.3284142385108108E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999926311568	WITHOUT_CLASSIFICATION	7.368843284806365E-9	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999964370181944	WITHOUT_CLASSIFICATION	3.562981805510197E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999964370181944	WITHOUT_CLASSIFICATION	3.562981805510197E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999990349425742	WITHOUT_CLASSIFICATION	9.650574257622116E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999998066065903	WITHOUT_CLASSIFICATION	1.933934098066566E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999977144234	WITHOUT_CLASSIFICATION	2.285576603175615E-9	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999975070131677	WITHOUT_CLASSIFICATION	2.4929868323978223E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999975070131677	WITHOUT_CLASSIFICATION	2.4929868323978223E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999861665608218	WITHOUT_CLASSIFICATION	1.3833439178046555E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999489195658193	WITHOUT_CLASSIFICATION	5.108043418072813E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999969353368652	WITHOUT_CLASSIFICATION	3.064663134841277E-6	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999191727302849	WITHOUT_CLASSIFICATION	8.082726971514347E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9934055154620125	WITHOUT_CLASSIFICATION	0.006594484537987471	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999528120233467	WITHOUT_CLASSIFICATION	4.71879766533927E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997745938897	WITHOUT_CLASSIFICATION	2.2540611037304197E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999999020445437	WITHOUT_CLASSIFICATION	9.795545632344748E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9932896375342383	WITHOUT_CLASSIFICATION	0.006710362465761743	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999941212336602	WITHOUT_CLASSIFICATION	5.878766339901157E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999353528704159	WITHOUT_CLASSIFICATION	6.464712958412883E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999950949596769	WITHOUT_CLASSIFICATION	4.905040323117056E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999867562237796	WITHOUT_CLASSIFICATION	1.3243776220388933E-5	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9995107129412345	WITHOUT_CLASSIFICATION	4.892870587655177E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.999997674194236	WITHOUT_CLASSIFICATION	2.325805763952825E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999924503592	WITHOUT_CLASSIFICATION	7.549640716762517E-9	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999445866655231	WITHOUT_CLASSIFICATION	5.541333447704128E-5	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999594708442215	WITHOUT_CLASSIFICATION	4.052915577832233E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999950333201882	WITHOUT_CLASSIFICATION	4.966679811673371E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999982282332126	WITHOUT_CLASSIFICATION	1.771766787435064E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.999999634585107	WITHOUT_CLASSIFICATION	3.654148930574194E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999733256108122	WITHOUT_CLASSIFICATION	2.6674389187874645E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999987148016775	WITHOUT_CLASSIFICATION	1.2851983225204175E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999841143494297	WITHOUT_CLASSIFICATION	1.5885650570310508E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999888887047147	WITHOUT_CLASSIFICATION	1.1111295285286195E-5	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999908941035522	WITHOUT_CLASSIFICATION	9.105896447768868E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999951984927948	WITHOUT_CLASSIFICATION	4.801507205115818E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998119775461135	WITHOUT_CLASSIFICATION	1.8802245388662326E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999782197677372	WITHOUT_CLASSIFICATION	2.1780232262833327E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999972457380555	WITHOUT_CLASSIFICATION	2.7542619444255164E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999972457380555	WITHOUT_CLASSIFICATION	2.7542619444255164E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999950303129913	WITHOUT_CLASSIFICATION	4.969687008685023E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999959442284712	WITHOUT_CLASSIFICATION	4.055771528825385E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999016940937	WITHOUT_CLASSIFICATION	9.830590632747815E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999102675073381	WITHOUT_CLASSIFICATION	8.973249266187557E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999932538700002	WITHOUT_CLASSIFICATION	6.746129999892305E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.999998895103262	WITHOUT_CLASSIFICATION	1.1048967379380866E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999997106766113	WITHOUT_CLASSIFICATION	2.8932338867434925E-7	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999948668173971	WITHOUT_CLASSIFICATION	5.133182602834282E-6	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999999337363267	WITHOUT_CLASSIFICATION	6.626367337419161E-8	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999994987579337	WITHOUT_CLASSIFICATION	5.012420663320274E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999994987579337	WITHOUT_CLASSIFICATION	5.012420663320274E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996891396740593	WITHOUT_CLASSIFICATION	3.1086032594073966E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996891396740593	WITHOUT_CLASSIFICATION	3.1086032594073966E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999706984364078	WITHOUT_CLASSIFICATION	2.9301563592085147E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999977569856615	WITHOUT_CLASSIFICATION	2.2430143384926793E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999998839300663	WITHOUT_CLASSIFICATION	1.1606993368220713E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999993740742475	WITHOUT_CLASSIFICATION	6.259257524829134E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.999999821568283	WITHOUT_CLASSIFICATION	1.7843171699886574E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999999257791777	WITHOUT_CLASSIFICATION	7.422082221140852E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999894903115455	WITHOUT_CLASSIFICATION	1.0509688454595116E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999998911712402	WITHOUT_CLASSIFICATION	1.0882875973753868E-7	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9976048809600849	WITHOUT_CLASSIFICATION	0.002395119039914988	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999997240992882	WITHOUT_CLASSIFICATION	2.75900711872588E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999906150694162	WITHOUT_CLASSIFICATION	9.384930583815822E-6	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999998715437757	WITHOUT_CLASSIFICATION	1.284562243104624E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999971307073247	WITHOUT_CLASSIFICATION	2.8692926754337397E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999990794004933	WITHOUT_CLASSIFICATION	9.205995066999954E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999761800288	WITHOUT_CLASSIFICATION	2.3819971302122658E-8	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999969010683861	WITHOUT_CLASSIFICATION	3.098931613810356E-6	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999976426996853	WITHOUT_CLASSIFICATION	2.357300314817491E-6	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.999980705369244	WITHOUT_CLASSIFICATION	1.9294630755954275E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999771597153204	WITHOUT_CLASSIFICATION	2.2840284679547817E-5	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.999999488679294	WITHOUT_CLASSIFICATION	5.113207060191192E-7	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9944709836100976	WITHOUT_CLASSIFICATION	0.005529016389902434	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999889926683002	WITHOUT_CLASSIFICATION	1.1007331699757493E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999997126347953	WITHOUT_CLASSIFICATION	2.873652047346637E-7	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999993623141846	WITHOUT_CLASSIFICATION	6.376858153544761E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999628251054	WITHOUT_CLASSIFICATION	3.717489460709793E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9953025070719417	WITHOUT_CLASSIFICATION	0.004697492928058415	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999974274886513	WITHOUT_CLASSIFICATION	2.5725113487795274E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999995645199764	WITHOUT_CLASSIFICATION	4.354800235178894E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999995645199764	WITHOUT_CLASSIFICATION	4.354800235178894E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999679639443219	WITHOUT_CLASSIFICATION	3.20360556780505E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9997832362847214	WITHOUT_CLASSIFICATION	2.1676371527861888E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999994676950401	WITHOUT_CLASSIFICATION	5.323049598537993E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9996739538800141	WITHOUT_CLASSIFICATION	3.260461199859202E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999963615450675	WITHOUT_CLASSIFICATION	3.638454932402085E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999813611692747	WITHOUT_CLASSIFICATION	1.8638830725263827E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999996529091063	WITHOUT_CLASSIFICATION	3.470908937293129E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997947805295458	WITHOUT_CLASSIFICATION	2.0521947045405722E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9953025070719417	WITHOUT_CLASSIFICATION	0.004697492928058415	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9976530941813639	WITHOUT_CLASSIFICATION	0.002346905818636014	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999945975262723	WITHOUT_CLASSIFICATION	5.4024737277891E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.999999229482834	WITHOUT_CLASSIFICATION	7.705171659228955E-7	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9995424798239203	WITHOUT_CLASSIFICATION	4.575201760797431E-4	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999918932408693	WITHOUT_CLASSIFICATION	8.106759130744875E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999948127620724	WITHOUT_CLASSIFICATION	5.187237927686771E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.999999898660542	WITHOUT_CLASSIFICATION	1.0133945796252836E-7	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999362662313	WITHOUT_CLASSIFICATION	6.373376868167733E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.999798544598048	WITHOUT_CLASSIFICATION	2.0145540195192315E-4	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.999999442034555	WITHOUT_CLASSIFICATION	5.579654450580684E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.99999997764053	WITHOUT_CLASSIFICATION	2.235947000344971E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999824012299	WITHOUT_CLASSIFICATION	1.7598770192822237E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999999016294657	WITHOUT_CLASSIFICATION	9.837053432184666E-8	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999997346999264	WITHOUT_CLASSIFICATION	2.653000736668202E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999990037864522	WITHOUT_CLASSIFICATION	9.962135478337242E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999872383619847	WITHOUT_CLASSIFICATION	1.276163801525378E-5	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9998649396931198	WITHOUT_CLASSIFICATION	1.3506030688012304E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999994833970828	WITHOUT_CLASSIFICATION	5.166029171962205E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999965972654898	WITHOUT_CLASSIFICATION	3.402734510144078E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999991360351046	WITHOUT_CLASSIFICATION	8.639648954756189E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999962566224698	WITHOUT_CLASSIFICATION	3.743377530201051E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999842285003159	WITHOUT_CLASSIFICATION	1.577149968419062E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999941918347645	WITHOUT_CLASSIFICATION	5.808165235469534E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999564988607735	WITHOUT_CLASSIFICATION	4.350113922648279E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999920081762608	WITHOUT_CLASSIFICATION	7.991823739325405E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.999999898660542	WITHOUT_CLASSIFICATION	1.0133945796252836E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999990037864522	WITHOUT_CLASSIFICATION	9.962135478337242E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999996128876225	WITHOUT_CLASSIFICATION	3.8711237740155574E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999995519114193	WITHOUT_CLASSIFICATION	4.480885806528629E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999572367870602	WITHOUT_CLASSIFICATION	4.2763212939827416E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9952493800670392	WITHOUT_CLASSIFICATION	0.004750619932960758	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999507641044635	WITHOUT_CLASSIFICATION	4.923589553649611E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999529812704048	WITHOUT_CLASSIFICATION	4.701872959518715E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999994923225846	WITHOUT_CLASSIFICATION	5.076774153781171E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999834082965473	WITHOUT_CLASSIFICATION	1.659170345261017E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9994631042999933	WITHOUT_CLASSIFICATION	5.368957000066529E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999970765847522	WITHOUT_CLASSIFICATION	2.9234152477598396E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999673148845788	WITHOUT_CLASSIFICATION	3.268511542120215E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999673148845788	WITHOUT_CLASSIFICATION	3.268511542120215E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9998404591884632	WITHOUT_CLASSIFICATION	1.5954081153684983E-4	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.999987285346604	WITHOUT_CLASSIFICATION	1.2714653396108185E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999995273839561	WITHOUT_CLASSIFICATION	4.7261604381855295E-7	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999470520838	WITHOUT_CLASSIFICATION	5.29479161197495E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998562519987504	WITHOUT_CLASSIFICATION	1.437480012496839E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999423108532317	WITHOUT_CLASSIFICATION	5.768914676831785E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999945205390713	WITHOUT_CLASSIFICATION	5.479460928652279E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999976255974029	WITHOUT_CLASSIFICATION	2.3744025970522764E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999874399341934	WITHOUT_CLASSIFICATION	1.2560065806620239E-5	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999794288122	WITHOUT_CLASSIFICATION	2.0571187750814312E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999506558984952	WITHOUT_CLASSIFICATION	4.9344101504767726E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996891396740593	WITHOUT_CLASSIFICATION	3.1086032594073966E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999894903115455	WITHOUT_CLASSIFICATION	1.0509688454595116E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999990037864522	WITHOUT_CLASSIFICATION	9.962135478337242E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998562519987504	WITHOUT_CLASSIFICATION	1.437480012496839E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999423108532317	WITHOUT_CLASSIFICATION	5.768914676831785E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999608980757065	WITHOUT_CLASSIFICATION	3.910192429349299E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999995681860064	WITHOUT_CLASSIFICATION	4.318139935524226E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9997556098689923	WITHOUT_CLASSIFICATION	2.443901310077674E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9995028753647329	WITHOUT_CLASSIFICATION	4.971246352671055E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999472440003094	WITHOUT_CLASSIFICATION	5.275599969057182E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999993876453981	WITHOUT_CLASSIFICATION	6.123546019398927E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9963560754879316	WITHOUT_CLASSIFICATION	0.0036439245120685583	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999773456777	WITHOUT_CLASSIFICATION	2.265432229268562E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999930524043741	WITHOUT_CLASSIFICATION	6.947595625980623E-6	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999996362238167	WITHOUT_CLASSIFICATION	3.6377618330939786E-7	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999668765363	WITHOUT_CLASSIFICATION	3.312346375821249E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999995903486479	WITHOUT_CLASSIFICATION	4.09651352087253E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9901942572966567	WITHOUT_CLASSIFICATION	0.009805742703343416	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.999999552504341	WITHOUT_CLASSIFICATION	4.474956589171918E-7	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9998759331090658	WITHOUT_CLASSIFICATION	1.2406689093417118E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999743749259	WITHOUT_CLASSIFICATION	2.562507405607732E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9901942572966567	WITHOUT_CLASSIFICATION	0.009805742703343416	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9901942572966567	WITHOUT_CLASSIFICATION	0.009805742703343416	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9901942572966567	WITHOUT_CLASSIFICATION	0.009805742703343416	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999790174018529	WITHOUT_CLASSIFICATION	2.0982598147130367E-5	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999992669989923	WITHOUT_CLASSIFICATION	7.330010075560123E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999998809617059	WITHOUT_CLASSIFICATION	1.1903829417400852E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999980422168072	WITHOUT_CLASSIFICATION	1.9577831927874947E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999959433095317	WITHOUT_CLASSIFICATION	4.0566904683589685E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.999890376506668	WITHOUT_CLASSIFICATION	1.0962349333201449E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999830700413518	WITHOUT_CLASSIFICATION	1.6929958648198137E-5	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999955653603142	WITHOUT_CLASSIFICATION	4.43463968580396E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999905489924075	WITHOUT_CLASSIFICATION	9.451007592538709E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999895989775742	WITHOUT_CLASSIFICATION	1.0401022425734353E-5	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.999999606678059	WITHOUT_CLASSIFICATION	3.9332194109021656E-7	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9998425513392531	WITHOUT_CLASSIFICATION	1.5744866074691115E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993433389153	WITHOUT_CLASSIFICATION	6.566610846689938E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999964370181944	WITHOUT_CLASSIFICATION	3.562981805510197E-6	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999586650438425	WITHOUT_CLASSIFICATION	4.133495615745753E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9996458835062537	WITHOUT_CLASSIFICATION	3.541164937463384E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999478699472669	WITHOUT_CLASSIFICATION	5.213005273306074E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999947669781486	WITHOUT_CLASSIFICATION	5.233021851483598E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999995647835799	WITHOUT_CLASSIFICATION	4.352164200725432E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999995647835799	WITHOUT_CLASSIFICATION	4.352164200725432E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998379398922	WITHOUT_CLASSIFICATION	1.620601078377067E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998379398922	WITHOUT_CLASSIFICATION	1.620601078377067E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999992735240211	WITHOUT_CLASSIFICATION	7.264759788933459E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999995277481374	WITHOUT_CLASSIFICATION	4.7225186260691773E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.999999492828729	WITHOUT_CLASSIFICATION	5.07171270967889E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998469336224	WITHOUT_CLASSIFICATION	1.530663776537418E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998469336224	WITHOUT_CLASSIFICATION	1.530663776537418E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995933380577	WITHOUT_CLASSIFICATION	4.06661942377258E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995933380577	WITHOUT_CLASSIFICATION	4.06661942377258E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997160990312	WITHOUT_CLASSIFICATION	2.839009688551951E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997160990312	WITHOUT_CLASSIFICATION	2.839009688551951E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999996889069872	WITHOUT_CLASSIFICATION	3.1109301278939287E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999993000080627	WITHOUT_CLASSIFICATION	6.999919372697573E-7	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999971159644535	WITHOUT_CLASSIFICATION	2.8840355464927405E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999997220146383	WITHOUT_CLASSIFICATION	2.779853617017774E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999425101000762	WITHOUT_CLASSIFICATION	5.748989992386741E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999813627838046	WITHOUT_CLASSIFICATION	1.8637216195408284E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999997999447037	WITHOUT_CLASSIFICATION	2.0005529638075345E-7	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999964213182532	WITHOUT_CLASSIFICATION	3.5786817469609684E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999970601576509	WITHOUT_CLASSIFICATION	2.939842349037667E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9997023767656597	WITHOUT_CLASSIFICATION	2.97623234340402E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999129861359	WITHOUT_CLASSIFICATION	8.70138640711531E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999743143674015	WITHOUT_CLASSIFICATION	2.5685632598539597E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999957270114256	WITHOUT_CLASSIFICATION	4.272988574450092E-6	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999956944208901	WITHOUT_CLASSIFICATION	4.305579109969584E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999998399968869	WITHOUT_CLASSIFICATION	1.6000311311324877E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999913268897368	WITHOUT_CLASSIFICATION	8.673110263162394E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999978513523866	WITHOUT_CLASSIFICATION	2.148647613329107E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999996173141109	WITHOUT_CLASSIFICATION	3.8268588910552586E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999883619889812	WITHOUT_CLASSIFICATION	1.1638011018703015E-5	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999992166164269	WITHOUT_CLASSIFICATION	7.83383573037174E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999925904463818	WITHOUT_CLASSIFICATION	7.409553618244666E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999974346469976	WITHOUT_CLASSIFICATION	2.565353002274596E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9981847803311494	WITHOUT_CLASSIFICATION	0.0018152196688506182	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9981847803311494	WITHOUT_CLASSIFICATION	0.0018152196688506182	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9984226479957641	WITHOUT_CLASSIFICATION	0.001577352004235851	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9984226479957641	WITHOUT_CLASSIFICATION	0.001577352004235851	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999989941799559	WITHOUT_CLASSIFICATION	1.0058200441000685E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999867682884012	WITHOUT_CLASSIFICATION	1.3231711598792396E-5	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.999999984050884	WITHOUT_CLASSIFICATION	1.5949116114951897E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.999999892616665	WITHOUT_CLASSIFICATION	1.0738333504906876E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999996138745644	WITHOUT_CLASSIFICATION	3.8612543573015224E-7	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999927667930537	WITHOUT_CLASSIFICATION	7.233206946220145E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999997091973402	WITHOUT_CLASSIFICATION	2.9080265992238955E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9976196576182611	WITHOUT_CLASSIFICATION	0.0023803423817388655	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999990594743835	WITHOUT_CLASSIFICATION	9.405256164115665E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999997895428366	WITHOUT_CLASSIFICATION	2.1045716340426251E-7	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999998357746334	WITHOUT_CLASSIFICATION	1.6422536658631963E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999991367650638	WITHOUT_CLASSIFICATION	8.632349361216962E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999986867789856	WITHOUT_CLASSIFICATION	1.3132210143563427E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999992154917	WITHOUT_CLASSIFICATION	7.845084985449818E-10	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999994473401942	WITHOUT_CLASSIFICATION	5.526598057634648E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999783964112269	WITHOUT_CLASSIFICATION	2.1603588773074386E-5	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999994618242863	WITHOUT_CLASSIFICATION	5.381757136806445E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9973007882149361	WITHOUT_CLASSIFICATION	0.0026992117850640315	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999990184456349	WITHOUT_CLASSIFICATION	9.815543650214496E-7	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998450508015005	WITHOUT_CLASSIFICATION	1.5494919849949935E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999998136619954	WITHOUT_CLASSIFICATION	1.86338004556544E-7	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999981861739689	WITHOUT_CLASSIFICATION	1.8138260311454313E-6	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999996824175045	WITHOUT_CLASSIFICATION	3.1758249549004404E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9981509850351655	WITHOUT_CLASSIFICATION	0.0018490149648345447	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999961625961834	WITHOUT_CLASSIFICATION	3.8374038166391585E-6	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999991530899413	WITHOUT_CLASSIFICATION	8.469100587144776E-7	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999821915358877	WITHOUT_CLASSIFICATION	1.7808464112268737E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999753963111803	WITHOUT_CLASSIFICATION	2.460368881965136E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999995862173715	WITHOUT_CLASSIFICATION	4.137826285000353E-7	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999276463631329	WITHOUT_CLASSIFICATION	7.235363686710893E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998213184687	WITHOUT_CLASSIFICATION	1.7868153130507133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999407256018	WITHOUT_CLASSIFICATION	5.9274398078166477E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999975070131677	WITHOUT_CLASSIFICATION	2.4929868323978223E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999774343577301	WITHOUT_CLASSIFICATION	2.256564226990624E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999078216895	WITHOUT_CLASSIFICATION	9.217831054484508E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999993655573769	WITHOUT_CLASSIFICATION	6.34442623093205E-7	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999988209476459	WITHOUT_CLASSIFICATION	1.1790523541294072E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999999171167454	WITHOUT_CLASSIFICATION	8.288325468742013E-8	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999862909488972	WITHOUT_CLASSIFICATION	1.3709051102749594E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999151700038	WITHOUT_CLASSIFICATION	8.482999623419736E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999962788022	WITHOUT_CLASSIFICATION	3.721197771800613E-9	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999970221187799	WITHOUT_CLASSIFICATION	2.977881220106382E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999935565976875	WITHOUT_CLASSIFICATION	6.443402312573178E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999944959060527	WITHOUT_CLASSIFICATION	5.504093947214376E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999969258676643	WITHOUT_CLASSIFICATION	3.0741323356727945E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999957471463902	WITHOUT_CLASSIFICATION	4.252853609868202E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999774919639924	WITHOUT_CLASSIFICATION	2.2508036007558817E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999954197623843	WITHOUT_CLASSIFICATION	4.580237615663045E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.999997624937118	WITHOUT_CLASSIFICATION	2.3750628820156254E-6	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999916434684629	WITHOUT_CLASSIFICATION	8.356531537139835E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999932442332614	WITHOUT_CLASSIFICATION	6.755766738671897E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999940532475	WITHOUT_CLASSIFICATION	5.946752455480797E-9	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999288434382793	WITHOUT_CLASSIFICATION	7.11565617207901E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9951731098995532	WITHOUT_CLASSIFICATION	0.0048268901004468396	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999956429031005	WITHOUT_CLASSIFICATION	4.357096899534475E-6	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999997472845331	WITHOUT_CLASSIFICATION	2.5271546681470685E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.6760485290475698	WITHOUT_CLASSIFICATION	0.3239514709524301	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9994388542839402	WITHOUT_CLASSIFICATION	5.611457160597328E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999980700722305	WITHOUT_CLASSIFICATION	1.9299277695575245E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999998925480015	WITHOUT_CLASSIFICATION	1.0745199863886853E-7	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999714986412	WITHOUT_CLASSIFICATION	2.8501358848773295E-8	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999999318306391	WITHOUT_CLASSIFICATION	6.816936094737448E-8	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999991042258075	WITHOUT_CLASSIFICATION	8.957741925655621E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.999998076270631	WITHOUT_CLASSIFICATION	1.923729368929961E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9998372075629605	WITHOUT_CLASSIFICATION	1.6279243703949396E-4	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999164074228	WITHOUT_CLASSIFICATION	8.359257716631133E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999998309547038	WITHOUT_CLASSIFICATION	1.6904529631718541E-7	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999638376422502	WITHOUT_CLASSIFICATION	3.616235774977281E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999969791456631	WITHOUT_CLASSIFICATION	3.0208543368388554E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999986724274385	WITHOUT_CLASSIFICATION	1.327572561547513E-6	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999995135436399	WITHOUT_CLASSIFICATION	4.864563600208715E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999854952610185	WITHOUT_CLASSIFICATION	1.4504738981429211E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999991539951196	WITHOUT_CLASSIFICATION	8.460048804733298E-7	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999999629011573	WITHOUT_CLASSIFICATION	3.709884269410522E-8	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999988481617629	WITHOUT_CLASSIFICATION	1.1518382371185957E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999995747477677	WITHOUT_CLASSIFICATION	4.2525223237594734E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999948393870911	WITHOUT_CLASSIFICATION	5.160612908927359E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999998755468834	WITHOUT_CLASSIFICATION	1.2445311659730257E-7	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999996146838764	WITHOUT_CLASSIFICATION	3.8531612356221587E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999267276974364	WITHOUT_CLASSIFICATION	7.327230256366778E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999993678149486	WITHOUT_CLASSIFICATION	6.321850513122972E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9990927815049212	WITHOUT_CLASSIFICATION	9.072184950788493E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999979125384206	WITHOUT_CLASSIFICATION	2.0874615793920365E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999803168698352	WITHOUT_CLASSIFICATION	1.968313016472093E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999996663967124	WITHOUT_CLASSIFICATION	3.336032875068696E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999996652196667	WITHOUT_CLASSIFICATION	3.347803333360305E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999998827338309	WITHOUT_CLASSIFICATION	1.1726616917687544E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999990984544115	WITHOUT_CLASSIFICATION	9.015455884278285E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999990984544115	WITHOUT_CLASSIFICATION	9.015455884278285E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.999999999614495	WITHOUT_CLASSIFICATION	3.8550497310433385E-10	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999911834178432	WITHOUT_CLASSIFICATION	8.816582156787845E-6	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999996100042259	WITHOUT_CLASSIFICATION	3.8999577408537557E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999997274589862	WITHOUT_CLASSIFICATION	2.7254101371172716E-7	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.999999562435453	WITHOUT_CLASSIFICATION	4.3756454709218893E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999550307803985	WITHOUT_CLASSIFICATION	4.496921960159895E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999512291163	WITHOUT_CLASSIFICATION	4.877088363805346E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999996576133916	WITHOUT_CLASSIFICATION	3.423866084539219E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999998470811082	WITHOUT_CLASSIFICATION	1.529188917846498E-7	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999899812513049	WITHOUT_CLASSIFICATION	1.0018748695066628E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999477860174	WITHOUT_CLASSIFICATION	5.22139826243375E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9971991546294988	WITHOUT_CLASSIFICATION	0.0028008453705012136	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999928939008508	WITHOUT_CLASSIFICATION	7.10609914930999E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999990606176371	WITHOUT_CLASSIFICATION	9.393823628001309E-7	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999423393395	WITHOUT_CLASSIFICATION	5.7660660408253794E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9996648870688649	WITHOUT_CLASSIFICATION	3.351129311351146E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999960914377248	WITHOUT_CLASSIFICATION	3.908562275215243E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999973474578	WITHOUT_CLASSIFICATION	2.6525421009262234E-9	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999976870788674	WITHOUT_CLASSIFICATION	2.3129211326045714E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9993361938680178	WITHOUT_CLASSIFICATION	6.638061319821653E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999966228545081	WITHOUT_CLASSIFICATION	3.3771454918863317E-6	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.999998568339391	WITHOUT_CLASSIFICATION	1.4316606089484412E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999893008025	WITHOUT_CLASSIFICATION	1.0699197548831673E-8	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999475702002	WITHOUT_CLASSIFICATION	5.242979996586949E-8	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999998641544982	WITHOUT_CLASSIFICATION	1.358455018960173E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999966960438711	WITHOUT_CLASSIFICATION	3.30395612886209E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999937788801321	WITHOUT_CLASSIFICATION	6.2211198679585565E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999926488624379	WITHOUT_CLASSIFICATION	7.351137562027735E-6	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999614667359917	WITHOUT_CLASSIFICATION	3.853326400823706E-5	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999925866527386	WITHOUT_CLASSIFICATION	7.413347261316763E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9993864874459186	WITHOUT_CLASSIFICATION	6.135125540813422E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999993257002137	WITHOUT_CLASSIFICATION	6.742997863576658E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999759151107722	WITHOUT_CLASSIFICATION	2.408488922769365E-5	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999975638336566	WITHOUT_CLASSIFICATION	2.4361663434448694E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999901321674	WITHOUT_CLASSIFICATION	9.867832606220453E-9	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999977418398299	WITHOUT_CLASSIFICATION	2.258160170082502E-6	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999977152976391	WITHOUT_CLASSIFICATION	2.2847023609338034E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999968265219	WITHOUT_CLASSIFICATION	3.1734780724114664E-9	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999940067248336	WITHOUT_CLASSIFICATION	5.993275166447407E-6	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999977141028235	WITHOUT_CLASSIFICATION	2.2858971764723445E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999892336438293	WITHOUT_CLASSIFICATION	1.076635617073355E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999981243107376	WITHOUT_CLASSIFICATION	1.875689262341716E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999972819454546	WITHOUT_CLASSIFICATION	2.718054545304031E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999995647835799	WITHOUT_CLASSIFICATION	4.352164200725432E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999995647835799	WITHOUT_CLASSIFICATION	4.352164200725432E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998379398922	WITHOUT_CLASSIFICATION	1.620601078377067E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998379398922	WITHOUT_CLASSIFICATION	1.620601078377067E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998771798564	WITHOUT_CLASSIFICATION	1.2282014366388354E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9995029897045056	WITHOUT_CLASSIFICATION	4.970102954943924E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999997082077609	WITHOUT_CLASSIFICATION	2.917922390441652E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999827917196544	WITHOUT_CLASSIFICATION	1.7208280345517056E-5	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999917914623232	WITHOUT_CLASSIFICATION	8.208537676840065E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999996356554467	WITHOUT_CLASSIFICATION	3.643445533528907E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999994404069384	WITHOUT_CLASSIFICATION	5.595930615275064E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999996887896389	WITHOUT_CLASSIFICATION	3.112103612194116E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989754490187	WITHOUT_CLASSIFICATION	1.024550981175689E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989754490187	WITHOUT_CLASSIFICATION	1.024550981175689E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999776989777333	WITHOUT_CLASSIFICATION	2.2301022266791193E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999776989777333	WITHOUT_CLASSIFICATION	2.2301022266791193E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999743749259	WITHOUT_CLASSIFICATION	2.562507405607732E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999995277481374	WITHOUT_CLASSIFICATION	4.7225186260691773E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999992735240211	WITHOUT_CLASSIFICATION	7.264759788933459E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.999999492828729	WITHOUT_CLASSIFICATION	5.07171270967889E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998469336224	WITHOUT_CLASSIFICATION	1.530663776537418E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998469336224	WITHOUT_CLASSIFICATION	1.530663776537418E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995933380577	WITHOUT_CLASSIFICATION	4.06661942377258E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995933380577	WITHOUT_CLASSIFICATION	4.06661942377258E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997160990312	WITHOUT_CLASSIFICATION	2.839009688551951E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997160990312	WITHOUT_CLASSIFICATION	2.839009688551951E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999526437810569	WITHOUT_CLASSIFICATION	4.7356218943238666E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999998324153428	WITHOUT_CLASSIFICATION	1.675846572612809E-7	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999914032613723	WITHOUT_CLASSIFICATION	8.59673862777402E-6	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9883213128779821	WITHOUT_CLASSIFICATION	0.011678687122017825	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999965316213131	WITHOUT_CLASSIFICATION	3.468378686856742E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999998151729631	WITHOUT_CLASSIFICATION	1.8482703694224394E-7	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999997675064545	WITHOUT_CLASSIFICATION	2.324935453849959E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999983790008964	WITHOUT_CLASSIFICATION	1.6209991035461843E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999997217276019	WITHOUT_CLASSIFICATION	2.78272398082751E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999841270570263	WITHOUT_CLASSIFICATION	1.58729429736947E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999284222058	WITHOUT_CLASSIFICATION	7.157779420136938E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999869470102692	WITHOUT_CLASSIFICATION	1.3052989730817425E-5	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999967179307844	WITHOUT_CLASSIFICATION	3.282069215684018E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999997912792432	WITHOUT_CLASSIFICATION	2.0872075670428844E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999976588592163	WITHOUT_CLASSIFICATION	2.34114078361651E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999412437202309	WITHOUT_CLASSIFICATION	5.8756279769177766E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999926558427886	WITHOUT_CLASSIFICATION	7.344157211292316E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999986600488565	WITHOUT_CLASSIFICATION	1.339951143478255E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999995827378	WITHOUT_CLASSIFICATION	4.172622911252542E-10	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999937224342327	WITHOUT_CLASSIFICATION	6.277565767261965E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999996213161181	WITHOUT_CLASSIFICATION	3.7868388193206494E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999968607282612	WITHOUT_CLASSIFICATION	3.139271738738481E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999975277873522	WITHOUT_CLASSIFICATION	2.4722126478880578E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999990095799111	WITHOUT_CLASSIFICATION	9.90420088903611E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998667532693398	WITHOUT_CLASSIFICATION	1.3324673066004083E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999796501297	WITHOUT_CLASSIFICATION	2.034987038351139E-8	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9994332352873222	WITHOUT_CLASSIFICATION	5.667647126778022E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999819122761086	WITHOUT_CLASSIFICATION	1.8087723891473502E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.997330550119886	WITHOUT_CLASSIFICATION	0.002669449880113978	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.999123909405615	WITHOUT_CLASSIFICATION	8.760905943849669E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999773691489	WITHOUT_CLASSIFICATION	2.2630851100696863E-8	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999991589143363	WITHOUT_CLASSIFICATION	8.410856637232704E-7	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999957872132359	WITHOUT_CLASSIFICATION	4.212786764077369E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999987803464938	WITHOUT_CLASSIFICATION	1.2196535061108343E-6	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.999999166882785	WITHOUT_CLASSIFICATION	8.331172150203935E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999554964479	WITHOUT_CLASSIFICATION	4.450355212134459E-8	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999990352435206	WITHOUT_CLASSIFICATION	9.647564793952288E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999993604590817	WITHOUT_CLASSIFICATION	6.395409183471632E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999013561093	WITHOUT_CLASSIFICATION	9.864389071518682E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999977943093534	WITHOUT_CLASSIFICATION	2.205690646449393E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999981462811168	WITHOUT_CLASSIFICATION	1.8537188831808906E-6	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999973533066787	WITHOUT_CLASSIFICATION	2.646693321243403E-6	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999949798396	WITHOUT_CLASSIFICATION	5.020160407557931E-9	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999998303846314	WITHOUT_CLASSIFICATION	1.6961536861438562E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999391325217	WITHOUT_CLASSIFICATION	6.086747827555995E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999857557620806	WITHOUT_CLASSIFICATION	1.424423791934028E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9007413927974048	WITHOUT_CLASSIFICATION	0.09925860720259523	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999993742117189	WITHOUT_CLASSIFICATION	6.257882811049089E-7	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999979994183095	WITHOUT_CLASSIFICATION	2.00058169050435E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999994227103431	WITHOUT_CLASSIFICATION	5.772896568783447E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999972142100849	WITHOUT_CLASSIFICATION	2.785789915203502E-6	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999924766367729	WITHOUT_CLASSIFICATION	7.523363227033745E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9994663007223226	WITHOUT_CLASSIFICATION	5.336992776775368E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9793625505841783	WITHOUT_CLASSIFICATION	0.020637449415821667	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999083403072403	WITHOUT_CLASSIFICATION	9.16596927597716E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999349106852	WITHOUT_CLASSIFICATION	6.50893147902823E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999480947806232	WITHOUT_CLASSIFICATION	5.190521937682381E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999996400600811	WITHOUT_CLASSIFICATION	3.5993991891294974E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999872223575	WITHOUT_CLASSIFICATION	1.2777642530474186E-8	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999998663072005	WITHOUT_CLASSIFICATION	1.3369279948706633E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999996835012536	WITHOUT_CLASSIFICATION	3.164987464494899E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.999999999318783	WITHOUT_CLASSIFICATION	6.8121701468461E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999288236044	WITHOUT_CLASSIFICATION	7.117639548840978E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999994141350157	WITHOUT_CLASSIFICATION	5.858649842582066E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999998871729362	WITHOUT_CLASSIFICATION	1.1282706386399047E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9997962921475588	WITHOUT_CLASSIFICATION	2.0370785244107342E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.999999866163919	WITHOUT_CLASSIFICATION	1.3383608097685581E-7	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999971826043356	WITHOUT_CLASSIFICATION	2.8173956645108505E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999304767608392	WITHOUT_CLASSIFICATION	6.952323916077299E-5	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999989914260351	WITHOUT_CLASSIFICATION	1.0085739648772745E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999804222363	WITHOUT_CLASSIFICATION	1.9577763791986313E-8	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999978360097258	WITHOUT_CLASSIFICATION	2.1639902741838155E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999999176587504	WITHOUT_CLASSIFICATION	8.234124964396294E-8	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999983633159	WITHOUT_CLASSIFICATION	1.6366841200734662E-9	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.999990872641511	WITHOUT_CLASSIFICATION	9.127358489096041E-6	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999998080205167	WITHOUT_CLASSIFICATION	1.9197948327453244E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999991389301203	WITHOUT_CLASSIFICATION	8.610698798331799E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9998578867382789	WITHOUT_CLASSIFICATION	1.4211326172109426E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999995543628507	WITHOUT_CLASSIFICATION	4.4563714928750103E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999471471935971	WITHOUT_CLASSIFICATION	5.285280640273939E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999985309311868	WITHOUT_CLASSIFICATION	1.4690688131384826E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999974811	WITHOUT_CLASSIFICATION	2.518930713817759E-12	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9995407608050475	WITHOUT_CLASSIFICATION	4.592391949524933E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999997406127707	WITHOUT_CLASSIFICATION	2.5938722933503854E-7	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999553531558	WITHOUT_CLASSIFICATION	4.464684414940449E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9997734399256462	WITHOUT_CLASSIFICATION	2.2656007435377119E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999976119081916	WITHOUT_CLASSIFICATION	2.3880918084447384E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999990445105849	WITHOUT_CLASSIFICATION	9.554894151576308E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999952732104042	WITHOUT_CLASSIFICATION	4.726789595747232E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999997467769	WITHOUT_CLASSIFICATION	2.5322320739713115E-10	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999988014951405	WITHOUT_CLASSIFICATION	1.1985048594079457E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999410904763775	WITHOUT_CLASSIFICATION	5.8909523622523E-5	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999149369169208	WITHOUT_CLASSIFICATION	8.506308307930144E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999988387085212	WITHOUT_CLASSIFICATION	1.1612914787233822E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999996101400662	WITHOUT_CLASSIFICATION	3.89859933812585E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999985831387588	WITHOUT_CLASSIFICATION	1.4168612411395354E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997135867803	WITHOUT_CLASSIFICATION	2.86413219789826E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999957247020366	WITHOUT_CLASSIFICATION	4.275297963391345E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.999998304289387	WITHOUT_CLASSIFICATION	1.6957106129586466E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.999998304289387	WITHOUT_CLASSIFICATION	1.6957106129586466E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999996921644126	WITHOUT_CLASSIFICATION	3.078355873139783E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999999352613472	WITHOUT_CLASSIFICATION	6.473865266556084E-8	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999993400516689	WITHOUT_CLASSIFICATION	6.599483310537053E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999998491373849	WITHOUT_CLASSIFICATION	1.5086261514729966E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999999906858633	WITHOUT_CLASSIFICATION	9.31413666430452E-9	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999998427750975	WITHOUT_CLASSIFICATION	1.5722490258933582E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999998046686579	WITHOUT_CLASSIFICATION	1.9533134213095745E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999988530990336	WITHOUT_CLASSIFICATION	1.146900966440394E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999927019942559	WITHOUT_CLASSIFICATION	7.298005744108427E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.999998297531716	WITHOUT_CLASSIFICATION	1.702468284022088E-6	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.999999899545381	WITHOUT_CLASSIFICATION	1.0045461900038048E-7	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999961810643	WITHOUT_CLASSIFICATION	3.818935686752181E-9	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999984038975436	WITHOUT_CLASSIFICATION	1.5961024564502944E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999978558080261	WITHOUT_CLASSIFICATION	2.1441919739777794E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999987061254795	WITHOUT_CLASSIFICATION	1.293874520505922E-6	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999996516830593	WITHOUT_CLASSIFICATION	3.483169407453298E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999995179117711	WITHOUT_CLASSIFICATION	4.820882289707147E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999913204691915	WITHOUT_CLASSIFICATION	8.679530808510364E-6	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999999665248867	WITHOUT_CLASSIFICATION	3.3475113253886876E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999989791517847	WITHOUT_CLASSIFICATION	1.020848215320799E-6	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999996968136812	WITHOUT_CLASSIFICATION	3.0318631886439187E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999958728406042	WITHOUT_CLASSIFICATION	4.1271593957840555E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999965465929491	WITHOUT_CLASSIFICATION	3.4534070510173524E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.999999992623933	WITHOUT_CLASSIFICATION	7.3760669060536725E-9	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.999996977672298	WITHOUT_CLASSIFICATION	3.022327702000218E-6	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999567500452	WITHOUT_CLASSIFICATION	4.324995479945851E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999994083816297	WITHOUT_CLASSIFICATION	5.916183703414577E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999982689709637	WITHOUT_CLASSIFICATION	1.7310290364132764E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999994906629863	WITHOUT_CLASSIFICATION	5.093370136836203E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.99999930261877	WITHOUT_CLASSIFICATION	6.973812298425913E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999955126528899	WITHOUT_CLASSIFICATION	4.487347110123124E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999938216585017	WITHOUT_CLASSIFICATION	6.178341498269787E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999863402025566	WITHOUT_CLASSIFICATION	1.3659797443339031E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999976662877265	WITHOUT_CLASSIFICATION	2.3337122735337914E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999979602372997	WITHOUT_CLASSIFICATION	2.039762700420062E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999847656199282	WITHOUT_CLASSIFICATION	1.5234380071874948E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999868960873541	WITHOUT_CLASSIFICATION	1.3103912645954686E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999994906629863	WITHOUT_CLASSIFICATION	5.093370136836203E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999998295038466	WITHOUT_CLASSIFICATION	1.7049615347051724E-7	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.999999235325276	WITHOUT_CLASSIFICATION	7.646747239180215E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999969637284362	WITHOUT_CLASSIFICATION	3.0362715637321964E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9998487147806278	WITHOUT_CLASSIFICATION	1.5128521937225544E-4	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999929810558816	WITHOUT_CLASSIFICATION	7.018944118420585E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999910063482552	WITHOUT_CLASSIFICATION	8.99365174466663E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999938493265549	WITHOUT_CLASSIFICATION	6.150673445059247E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999888176265458	WITHOUT_CLASSIFICATION	1.1182373454253727E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999992146696087	WITHOUT_CLASSIFICATION	7.853303913298075E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999991469176661	WITHOUT_CLASSIFICATION	8.530823339048803E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999938147446629	WITHOUT_CLASSIFICATION	6.18525533713494E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999995708034151	WITHOUT_CLASSIFICATION	4.2919658495090026E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999963149715582	WITHOUT_CLASSIFICATION	3.6850284418854493E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.999945295405374	WITHOUT_CLASSIFICATION	5.470459462590242E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.999998182808763	WITHOUT_CLASSIFICATION	1.8171912370724626E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9997629255977237	WITHOUT_CLASSIFICATION	2.370744022762498E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9997629255977237	WITHOUT_CLASSIFICATION	2.370744022762498E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.989974483495349	WITHOUT_CLASSIFICATION	0.010025516504651001	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9986971445532193	WITHOUT_CLASSIFICATION	0.001302855446780606	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999627866278082	WITHOUT_CLASSIFICATION	3.7213372191823345E-5	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999289868972745	WITHOUT_CLASSIFICATION	7.101310272546948E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999948288916	WITHOUT_CLASSIFICATION	5.17110842792009E-9	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999997446041525	WITHOUT_CLASSIFICATION	2.5539584750942737E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999826642761144	WITHOUT_CLASSIFICATION	1.733572388567131E-5	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999897009787635	WITHOUT_CLASSIFICATION	1.0299021236540688E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9990382352777144	WITHOUT_CLASSIFICATION	9.617647222857518E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999990035502968	WITHOUT_CLASSIFICATION	9.964497031945405E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999997792176106	WITHOUT_CLASSIFICATION	2.207823892892047E-7	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9967620503366689	WITHOUT_CLASSIFICATION	0.003237949663331094	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999999050033	WITHOUT_CLASSIFICATION	9.499671886818368E-11	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999627866278082	WITHOUT_CLASSIFICATION	3.7213372191823345E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999997792176106	WITHOUT_CLASSIFICATION	2.207823892892047E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999970671737541	WITHOUT_CLASSIFICATION	2.9328262458965377E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9998104758637326	WITHOUT_CLASSIFICATION	1.895241362674097E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9987488041360937	WITHOUT_CLASSIFICATION	0.001251195863906391	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9998722610406583	WITHOUT_CLASSIFICATION	1.2773895934174723E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9997698288361594	WITHOUT_CLASSIFICATION	2.3017116384071575E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999972576837148	WITHOUT_CLASSIFICATION	2.7423162852582083E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999262830461515	WITHOUT_CLASSIFICATION	7.371695384850175E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999470906988	WITHOUT_CLASSIFICATION	5.2909301211936505E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999986454183	WITHOUT_CLASSIFICATION	1.3545816587957868E-9	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999970123035359	WITHOUT_CLASSIFICATION	2.9876964641529603E-6	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9998657975302334	WITHOUT_CLASSIFICATION	1.342024697665818E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9997463712902327	WITHOUT_CLASSIFICATION	2.5362870976738873E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999306238843063	WITHOUT_CLASSIFICATION	6.93761156936656E-5	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999928201426567	WITHOUT_CLASSIFICATION	7.179857343348759E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999976812920984	WITHOUT_CLASSIFICATION	2.318707901679744E-6	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999949966401076	WITHOUT_CLASSIFICATION	5.003359892370808E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999895566084378	WITHOUT_CLASSIFICATION	1.0443391562152017E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999995233693315	WITHOUT_CLASSIFICATION	4.7663066860610013E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999984239793618	WITHOUT_CLASSIFICATION	1.5760206382317346E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999998227048984	WITHOUT_CLASSIFICATION	1.772951016859327E-7	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.996599615832341	WITHOUT_CLASSIFICATION	0.0034003841676589473	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999991239826079	WITHOUT_CLASSIFICATION	8.760173921074094E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.908306092459008	WITHOUT_CLASSIFICATION	0.09169390754099206	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999904519533424	WITHOUT_CLASSIFICATION	9.54804665777522E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999995741066	WITHOUT_CLASSIFICATION	4.258934737502883E-10	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999997798807563	WITHOUT_CLASSIFICATION	2.2011924378910277E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999924716793381	WITHOUT_CLASSIFICATION	7.528320661878991E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999998751749479	WITHOUT_CLASSIFICATION	1.2482505201215769E-7	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999919541084016	WITHOUT_CLASSIFICATION	8.045891598420414E-6	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9988518517601981	WITHOUT_CLASSIFICATION	0.001148148239801929	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999997673691144	WITHOUT_CLASSIFICATION	2.326308855198675E-7	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999508415195	WITHOUT_CLASSIFICATION	4.915848043047754E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.999999980894792	WITHOUT_CLASSIFICATION	1.910520796946335E-8	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999836045734	WITHOUT_CLASSIFICATION	1.6395426602793534E-8	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999562843381664	WITHOUT_CLASSIFICATION	4.371566183361637E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999777481353	WITHOUT_CLASSIFICATION	2.225186463677176E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999965003784	WITHOUT_CLASSIFICATION	3.4996216554510136E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999999054703721	WITHOUT_CLASSIFICATION	9.452962786074614E-8	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999999824961814	WITHOUT_CLASSIFICATION	1.750381857987264E-8	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999999167208721	WITHOUT_CLASSIFICATION	8.327912784660908E-8	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999846268723	WITHOUT_CLASSIFICATION	1.5373127669181498E-8	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999968519982033	WITHOUT_CLASSIFICATION	3.1480017965886747E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.999999988472872	WITHOUT_CLASSIFICATION	1.1527128059282432E-8	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999799630983229	WITHOUT_CLASSIFICATION	2.003690167707673E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999920475175459	WITHOUT_CLASSIFICATION	7.952482454216669E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999777703161677	WITHOUT_CLASSIFICATION	2.2229683832227904E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999650714705	WITHOUT_CLASSIFICATION	3.492852948027673E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999879506939	WITHOUT_CLASSIFICATION	1.2049306179424687E-8	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999726923056732	WITHOUT_CLASSIFICATION	2.7307694326760293E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999407256018	WITHOUT_CLASSIFICATION	5.9274398078166477E-8	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999988429132848	WITHOUT_CLASSIFICATION	1.1570867152602122E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999948399861844	WITHOUT_CLASSIFICATION	5.1600138155511774E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999945675656973	WITHOUT_CLASSIFICATION	5.432434302773579E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999756251515	WITHOUT_CLASSIFICATION	2.4374848538033197E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993433389153	WITHOUT_CLASSIFICATION	6.566610846689938E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999996009073813	WITHOUT_CLASSIFICATION	3.990926187077543E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999769038946	WITHOUT_CLASSIFICATION	2.3096105398502003E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999991747112281	WITHOUT_CLASSIFICATION	8.252887718955639E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999980977198374	WITHOUT_CLASSIFICATION	1.9022801626254555E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999603500714963	WITHOUT_CLASSIFICATION	3.9649928503687476E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999808542759865	WITHOUT_CLASSIFICATION	1.914572401354393E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999889844307615	WITHOUT_CLASSIFICATION	1.1015569238590525E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9999633939469922	WITHOUT_CLASSIFICATION	3.6606053007922374E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999942793022835	WITHOUT_CLASSIFICATION	5.720697716593576E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999942793022835	WITHOUT_CLASSIFICATION	5.720697716593576E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999978259065231	WITHOUT_CLASSIFICATION	2.1740934769024818E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999609466691194	WITHOUT_CLASSIFICATION	3.9053330880729236E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999634517149658	WITHOUT_CLASSIFICATION	3.654828503417308E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999726760699457	WITHOUT_CLASSIFICATION	2.732393005437326E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999726760699457	WITHOUT_CLASSIFICATION	2.732393005437326E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999726760699457	WITHOUT_CLASSIFICATION	2.732393005437326E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999032611186813	WITHOUT_CLASSIFICATION	9.673888131863069E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998213184687	WITHOUT_CLASSIFICATION	1.7868153130507133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.999999999909447	WITHOUT_CLASSIFICATION	9.055302406537962E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994848348538	WITHOUT_CLASSIFICATION	5.151651463210354E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997141700447	WITHOUT_CLASSIFICATION	2.858299552700843E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998062885552	WITHOUT_CLASSIFICATION	1.9371144470859682E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999994559977455	WITHOUT_CLASSIFICATION	5.440022544973229E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998854884496	WITHOUT_CLASSIFICATION	1.1451155040011026E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999948399861844	WITHOUT_CLASSIFICATION	5.1600138155511774E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999945675656973	WITHOUT_CLASSIFICATION	5.432434302773579E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999756251515	WITHOUT_CLASSIFICATION	2.4374848538033197E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999655179502	WITHOUT_CLASSIFICATION	3.44820497497348E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999383648019	WITHOUT_CLASSIFICATION	6.163519797981818E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999994572729201	WITHOUT_CLASSIFICATION	5.427270799065543E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993886708498	WITHOUT_CLASSIFICATION	6.11329150213425E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998618414456736	WITHOUT_CLASSIFICATION	1.3815855432640798E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999983924835537	WITHOUT_CLASSIFICATION	1.6075164462926357E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999257618528896	WITHOUT_CLASSIFICATION	7.423814711031695E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999980116077843	WITHOUT_CLASSIFICATION	1.988392215692499E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999204635445484	WITHOUT_CLASSIFICATION	7.953645545147301E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9998665410961969	WITHOUT_CLASSIFICATION	1.33458903803116E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9994583270426202	WITHOUT_CLASSIFICATION	5.416729573798514E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9998649055663649	WITHOUT_CLASSIFICATION	1.350944336352406E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999996793346797	WITHOUT_CLASSIFICATION	3.206653203237096E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999998651769533	WITHOUT_CLASSIFICATION	1.3482304669503908E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999334642996492	WITHOUT_CLASSIFICATION	6.653570035084826E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999903957339309	WITHOUT_CLASSIFICATION	9.604266069129048E-6	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9999338628338743	WITHOUT_CLASSIFICATION	6.613716612563325E-5	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9999240008720139	WITHOUT_CLASSIFICATION	7.599912798600304E-5	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.999750923682453	WITHOUT_CLASSIFICATION	2.4907631754705754E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999781715684596	WITHOUT_CLASSIFICATION	2.182843154042763E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999990207765901	WITHOUT_CLASSIFICATION	9.792234098633821E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999988429132848	WITHOUT_CLASSIFICATION	1.1570867152602122E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999769038946	WITHOUT_CLASSIFICATION	2.3096105398502003E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999991747112281	WITHOUT_CLASSIFICATION	8.252887718955639E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999980977198374	WITHOUT_CLASSIFICATION	1.9022801626254555E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999383648019	WITHOUT_CLASSIFICATION	6.163519797981818E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999994572729201	WITHOUT_CLASSIFICATION	5.427270799065543E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993886708498	WITHOUT_CLASSIFICATION	6.11329150213425E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998618414456736	WITHOUT_CLASSIFICATION	1.3815855432640798E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999983924835537	WITHOUT_CLASSIFICATION	1.6075164462926357E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999689230498	WITHOUT_CLASSIFICATION	3.1076950198711764E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9963747053031209	WITHOUT_CLASSIFICATION	0.0036252946968791024	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999944086717083	WITHOUT_CLASSIFICATION	5.591328291669639E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999950333201882	WITHOUT_CLASSIFICATION	4.966679811673371E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999950333201882	WITHOUT_CLASSIFICATION	4.966679811673371E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999950333201882	WITHOUT_CLASSIFICATION	4.966679811673371E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999950333201882	WITHOUT_CLASSIFICATION	4.966679811673371E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999950333201882	WITHOUT_CLASSIFICATION	4.966679811673371E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999888887047147	WITHOUT_CLASSIFICATION	1.1111295285286195E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999880605184	WITHOUT_CLASSIFICATION	1.1939481598316322E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999997054185723	WITHOUT_CLASSIFICATION	2.9458142774243197E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.999984319306308	WITHOUT_CLASSIFICATION	1.568069369189878E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999998754707267	WITHOUT_CLASSIFICATION	1.2452927325861165E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979736128282	WITHOUT_CLASSIFICATION	2.0263871718221703E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.999998357956483	WITHOUT_CLASSIFICATION	1.6420435169723515E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999995339968274	WITHOUT_CLASSIFICATION	4.6600317263435323E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999926066557706	WITHOUT_CLASSIFICATION	7.3933442294231965E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989754490187	WITHOUT_CLASSIFICATION	1.024550981175689E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989754490187	WITHOUT_CLASSIFICATION	1.024550981175689E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989754490187	WITHOUT_CLASSIFICATION	1.024550981175689E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999974274886513	WITHOUT_CLASSIFICATION	2.5725113487795274E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999361822021471	WITHOUT_CLASSIFICATION	6.381779785292375E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999878130875713	WITHOUT_CLASSIFICATION	1.2186912428557253E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9996235953774596	WITHOUT_CLASSIFICATION	3.764046225403367E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9996235953774596	WITHOUT_CLASSIFICATION	3.764046225403367E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999990037864522	WITHOUT_CLASSIFICATION	9.962135478337242E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9996235953774596	WITHOUT_CLASSIFICATION	3.764046225403367E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999991360351046	WITHOUT_CLASSIFICATION	8.639648954756189E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999962566224698	WITHOUT_CLASSIFICATION	3.743377530201051E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999842285003159	WITHOUT_CLASSIFICATION	1.577149968419062E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999976634842019	WITHOUT_CLASSIFICATION	2.3365157979371344E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999976634842019	WITHOUT_CLASSIFICATION	2.3365157979371344E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999999089824434	WITHOUT_CLASSIFICATION	9.101755659562367E-8	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999818896283299	WITHOUT_CLASSIFICATION	1.811037167001859E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878475164495	WITHOUT_CLASSIFICATION	1.2152483550413952E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.999689361619478	WITHOUT_CLASSIFICATION	3.1063838052198644E-4	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.999989658868178	WITHOUT_CLASSIFICATION	1.0341131821824703E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999826542405746	WITHOUT_CLASSIFICATION	1.7345759425347146E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999990402854627	WITHOUT_CLASSIFICATION	9.597145373472151E-7	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999974599110334	WITHOUT_CLASSIFICATION	2.5400889665872514E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.999980466293347	WITHOUT_CLASSIFICATION	1.9533706652972263E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999116364145569	WITHOUT_CLASSIFICATION	8.836358544302499E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995583285404	WITHOUT_CLASSIFICATION	4.4167145962061517E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999116364145569	WITHOUT_CLASSIFICATION	8.836358544302499E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999032611186813	WITHOUT_CLASSIFICATION	9.673888131863069E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999726760699457	WITHOUT_CLASSIFICATION	2.732393005437326E-5	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999149859563	WITHOUT_CLASSIFICATION	8.501404365821106E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999607334134778	WITHOUT_CLASSIFICATION	3.926658652224997E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998852273799909	WITHOUT_CLASSIFICATION	1.1477262000905796E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998772138613424	WITHOUT_CLASSIFICATION	1.2278613865749266E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999032611186813	WITHOUT_CLASSIFICATION	9.673888131863069E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999384673603314	WITHOUT_CLASSIFICATION	6.15326396686001E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999984372525536	WITHOUT_CLASSIFICATION	1.5627474463788633E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996936560306	WITHOUT_CLASSIFICATION	3.0634396941293754E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999813627838046	WITHOUT_CLASSIFICATION	1.8637216195408284E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999738520093503	WITHOUT_CLASSIFICATION	2.614799064973966E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999738520093503	WITHOUT_CLASSIFICATION	2.614799064973966E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999986861505691	WITHOUT_CLASSIFICATION	1.313849430996972E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999999809188	WITHOUT_CLASSIFICATION	1.908116692366982E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999416763	WITHOUT_CLASSIFICATION	5.83236717363112E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999997846388	WITHOUT_CLASSIFICATION	2.15361230094959E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999995625974	WITHOUT_CLASSIFICATION	4.3740257669908394E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999998950465	WITHOUT_CLASSIFICATION	1.049534622829022E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999997877641	WITHOUT_CLASSIFICATION	2.122360029511495E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999985393726913	WITHOUT_CLASSIFICATION	1.460627308554458E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999999471536442	WITHOUT_CLASSIFICATION	5.284635580306949E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999001075974	WITHOUT_CLASSIFICATION	9.989240261052223E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997812575082	WITHOUT_CLASSIFICATION	2.1874249179775762E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999896941776	WITHOUT_CLASSIFICATION	1.030582244333437E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999951619931	WITHOUT_CLASSIFICATION	4.838006829238071E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999949791986	WITHOUT_CLASSIFICATION	5.020801426207526E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999462440343	WITHOUT_CLASSIFICATION	5.375596572297045E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999036252	WITHOUT_CLASSIFICATION	9.637480370563434E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999998989609	WITHOUT_CLASSIFICATION	1.01039059702208E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999997447141	WITHOUT_CLASSIFICATION	2.5528599382489244E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999980910621	WITHOUT_CLASSIFICATION	1.9089379515034653E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.999999999736857	WITHOUT_CLASSIFICATION	2.631429938456564E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999955912	WITHOUT_CLASSIFICATION	4.408729592036615E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999996442908	WITHOUT_CLASSIFICATION	3.557092364544661E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999036252	WITHOUT_CLASSIFICATION	9.637480370563434E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999973319235	WITHOUT_CLASSIFICATION	2.668076473039633E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999033278	WITHOUT_CLASSIFICATION	9.667224706473681E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999996431929	WITHOUT_CLASSIFICATION	3.5680706852321275E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999998573692	WITHOUT_CLASSIFICATION	1.42630752972168E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999073593	WITHOUT_CLASSIFICATION	9.264067148328344E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999986922018	WITHOUT_CLASSIFICATION	1.3077982745403668E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999997079684	WITHOUT_CLASSIFICATION	2.920315232650186E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999991401973	WITHOUT_CLASSIFICATION	8.598025475692999E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999999648864	WITHOUT_CLASSIFICATION	3.5113593898637013E-10	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999915757686724	WITHOUT_CLASSIFICATION	8.42423132763656E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999915757686724	WITHOUT_CLASSIFICATION	8.42423132763656E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999955912	WITHOUT_CLASSIFICATION	4.408729592036615E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999992644382	WITHOUT_CLASSIFICATION	7.355618835892025E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999832498	WITHOUT_CLASSIFICATION	1.6750070035353976E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999984791119	WITHOUT_CLASSIFICATION	1.520887974472315E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999990402041	WITHOUT_CLASSIFICATION	9.597958464271078E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999987895476	WITHOUT_CLASSIFICATION	1.2104523838911864E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999859929424	WITHOUT_CLASSIFICATION	1.4007057679424151E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999994768307552	WITHOUT_CLASSIFICATION	5.231692447833009E-7	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999998421255484	WITHOUT_CLASSIFICATION	1.5787445168945318E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999914244245	WITHOUT_CLASSIFICATION	8.57557555470847E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999052089185	WITHOUT_CLASSIFICATION	9.479108154570256E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.999999996139153	WITHOUT_CLASSIFICATION	3.860846906672335E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998858860939	WITHOUT_CLASSIFICATION	1.1411390606103062E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999939600593	WITHOUT_CLASSIFICATION	6.039940639670791E-9	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999999863037	WITHOUT_CLASSIFICATION	1.3696373275754881E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.999999999909447	WITHOUT_CLASSIFICATION	9.055302406537962E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999946844	WITHOUT_CLASSIFICATION	5.315615162147635E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999994170934	WITHOUT_CLASSIFICATION	5.829065844011103E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999200325627	WITHOUT_CLASSIFICATION	7.996743731206967E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999483194782	WITHOUT_CLASSIFICATION	5.168052171370576E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999946844	WITHOUT_CLASSIFICATION	5.315615162147635E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999945771909	WITHOUT_CLASSIFICATION	5.422808987015992E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999999999446519	WITHOUT_CLASSIFICATION	5.534811208638601E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999986474156	WITHOUT_CLASSIFICATION	1.3525843322998712E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999959145095	WITHOUT_CLASSIFICATION	4.085490520570373E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999944812675	WITHOUT_CLASSIFICATION	5.518732491196425E-9	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999614868264239	WITHOUT_CLASSIFICATION	3.851317357612709E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999614868264239	WITHOUT_CLASSIFICATION	3.851317357612709E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999614868264239	WITHOUT_CLASSIFICATION	3.851317357612709E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999614868264239	WITHOUT_CLASSIFICATION	3.851317357612709E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999614868264239	WITHOUT_CLASSIFICATION	3.851317357612709E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999614868264239	WITHOUT_CLASSIFICATION	3.851317357612709E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999992965831613	WITHOUT_CLASSIFICATION	7.034168387789499E-7	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999988010750811	WITHOUT_CLASSIFICATION	1.1989249188855493E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9998566762163313	WITHOUT_CLASSIFICATION	1.4332378366855374E-4	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999985414988173	WITHOUT_CLASSIFICATION	1.458501182724148E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999698317715	WITHOUT_CLASSIFICATION	3.016822860366866E-8	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999997861447489	WITHOUT_CLASSIFICATION	2.138552511042557E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999940532475	WITHOUT_CLASSIFICATION	5.946752455480797E-9	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999976489277101	WITHOUT_CLASSIFICATION	2.3510722898926092E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9959392815622797	WITHOUT_CLASSIFICATION	0.004060718437720175	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999884842051256	WITHOUT_CLASSIFICATION	1.1515794874335426E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.999999801385526	WITHOUT_CLASSIFICATION	1.9861447391476795E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999750062349207	WITHOUT_CLASSIFICATION	2.4993765079163725E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999788522153	WITHOUT_CLASSIFICATION	2.1147784774768483E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.99999952375179	WITHOUT_CLASSIFICATION	4.7624821002033304E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999998749385857	WITHOUT_CLASSIFICATION	1.250614143652002E-7	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999989262711405	WITHOUT_CLASSIFICATION	1.073728859461419E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999992535938997	WITHOUT_CLASSIFICATION	7.464061003500805E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999609961379	WITHOUT_CLASSIFICATION	3.900386223087824E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999609961379	WITHOUT_CLASSIFICATION	3.900386223087824E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999609961379	WITHOUT_CLASSIFICATION	3.900386223087824E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999893008025	WITHOUT_CLASSIFICATION	1.0699197548831673E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998040274095	WITHOUT_CLASSIFICATION	1.9597259045935904E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999996417616073	WITHOUT_CLASSIFICATION	3.582383927173008E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999645060313	WITHOUT_CLASSIFICATION	3.549396862579019E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9559673073147736	WITHOUT_CLASSIFICATION	0.04403269268522643	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998213184687	WITHOUT_CLASSIFICATION	1.7868153130507133E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.999999983084967	WITHOUT_CLASSIFICATION	1.691503305609527E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999990644899884	WITHOUT_CLASSIFICATION	9.355100116371095E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998667532693398	WITHOUT_CLASSIFICATION	1.3324673066004083E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999997725312956	WITHOUT_CLASSIFICATION	2.2746870446466641E-7	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9958654915511942	WITHOUT_CLASSIFICATION	0.004134508448805725	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996961011648	WITHOUT_CLASSIFICATION	3.038988352497046E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999998372514999	WITHOUT_CLASSIFICATION	1.6274850012402093E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999116364145569	WITHOUT_CLASSIFICATION	8.836358544302499E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999116364145569	WITHOUT_CLASSIFICATION	8.836358544302499E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999032036067951	WITHOUT_CLASSIFICATION	9.679639320482757E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999959137575889	WITHOUT_CLASSIFICATION	4.086242411166884E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999957872132359	WITHOUT_CLASSIFICATION	4.212786764077369E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999863824259	WITHOUT_CLASSIFICATION	1.3617574107376265E-8	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9989900875543649	WITHOUT_CLASSIFICATION	0.0010099124456350247	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999996387368302	WITHOUT_CLASSIFICATION	3.6126316985334615E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999967910605334	WITHOUT_CLASSIFICATION	3.2089394666080114E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999967839293517	WITHOUT_CLASSIFICATION	3.2160706482407283E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999410226215	WITHOUT_CLASSIFICATION	5.897737847436191E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999116364145569	WITHOUT_CLASSIFICATION	8.836358544302499E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999726760699457	WITHOUT_CLASSIFICATION	2.732393005437326E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995260154361	WITHOUT_CLASSIFICATION	4.7398456386443815E-7	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999999867652817	WITHOUT_CLASSIFICATION	1.3234718281662988E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999991080584947	WITHOUT_CLASSIFICATION	8.919415053183238E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999850411011311	WITHOUT_CLASSIFICATION	1.4958898868842619E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999975200952492	WITHOUT_CLASSIFICATION	2.479904750847013E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999975200952492	WITHOUT_CLASSIFICATION	2.479904750847013E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999991902659023	WITHOUT_CLASSIFICATION	8.097340975395607E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999880981252635	WITHOUT_CLASSIFICATION	1.1901874736588361E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999236200877	WITHOUT_CLASSIFICATION	7.637991229542035E-8	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9998693398117318	WITHOUT_CLASSIFICATION	1.306601882683261E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997135867803	WITHOUT_CLASSIFICATION	2.86413219789826E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997135867803	WITHOUT_CLASSIFICATION	2.86413219789826E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992667941929642	WITHOUT_CLASSIFICATION	7.332058070358724E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992667941929642	WITHOUT_CLASSIFICATION	7.332058070358724E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999996921644126	WITHOUT_CLASSIFICATION	3.078355873139783E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999966960438711	WITHOUT_CLASSIFICATION	3.30395612886209E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.99999654880448	WITHOUT_CLASSIFICATION	3.4511955200413207E-6	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999901428098574	WITHOUT_CLASSIFICATION	9.85719014255404E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.999999141944089	WITHOUT_CLASSIFICATION	8.580559109387455E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.999999448004606	WITHOUT_CLASSIFICATION	5.519953940280196E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.999999448004606	WITHOUT_CLASSIFICATION	5.519953940280196E-7	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9997830433281331	WITHOUT_CLASSIFICATION	2.1695667186688613E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999992291798	WITHOUT_CLASSIFICATION	7.708200724918384E-10	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999998973126284	WITHOUT_CLASSIFICATION	1.0268737162401965E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999943177914	WITHOUT_CLASSIFICATION	5.6822086375941515E-9	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999994906629863	WITHOUT_CLASSIFICATION	5.093370136836203E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999950558391238	WITHOUT_CLASSIFICATION	4.944160876182982E-6	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9969148816470563	WITHOUT_CLASSIFICATION	0.0030851183529436105	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999693415154	WITHOUT_CLASSIFICATION	3.065848464641493E-8	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.989974483495349	WITHOUT_CLASSIFICATION	0.010025516504651001	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999661161429413	WITHOUT_CLASSIFICATION	3.388385705865263E-5	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999708305553058	WITHOUT_CLASSIFICATION	2.916944469425261E-5	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999718758189	WITHOUT_CLASSIFICATION	2.8124181020285783E-8	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9815495997106045	WITHOUT_CLASSIFICATION	0.018450400289395485	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999990378559511	WITHOUT_CLASSIFICATION	9.621440488921434E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999962456271256	WITHOUT_CLASSIFICATION	3.754372874456098E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999988475082439	WITHOUT_CLASSIFICATION	1.1524917560881007E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999815563956	WITHOUT_CLASSIFICATION	1.8443604431825605E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999970671737541	WITHOUT_CLASSIFICATION	2.9328262458965377E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999993990605625	WITHOUT_CLASSIFICATION	6.009394375997317E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.999999758953076	WITHOUT_CLASSIFICATION	2.4104692404632144E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.999999758953076	WITHOUT_CLASSIFICATION	2.4104692404632144E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999999310177428	WITHOUT_CLASSIFICATION	6.89822572490557E-8	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9775229163938265	WITHOUT_CLASSIFICATION	0.022477083606173478	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999954086057268	WITHOUT_CLASSIFICATION	4.591394273197453E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999967786853206	WITHOUT_CLASSIFICATION	3.221314679390472E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999995819204534	WITHOUT_CLASSIFICATION	4.180795465613566E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.999980384175035	WITHOUT_CLASSIFICATION	1.9615824964978818E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999678620242471	WITHOUT_CLASSIFICATION	3.21379757528319E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999996924610103	WITHOUT_CLASSIFICATION	3.075389896094558E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999994255303128	WITHOUT_CLASSIFICATION	5.744696870925304E-7	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999997620808256	WITHOUT_CLASSIFICATION	2.3791917431547218E-7	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999481138519652	WITHOUT_CLASSIFICATION	5.188614803482753E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999946911229218	WITHOUT_CLASSIFICATION	5.308877078150527E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.999988389890279	WITHOUT_CLASSIFICATION	1.161010972102376E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.8966524709664362	WITHOUT_CLASSIFICATION	0.10334752903356374	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999428409741645	WITHOUT_CLASSIFICATION	5.7159025835579105E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999990204262919	WITHOUT_CLASSIFICATION	9.795737081659236E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999963809955662	WITHOUT_CLASSIFICATION	3.6190044336739937E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999976217961648	WITHOUT_CLASSIFICATION	2.378203835171833E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999897035256006	WITHOUT_CLASSIFICATION	1.0296474399495748E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999989929297763	WITHOUT_CLASSIFICATION	1.0070702236150735E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995275478782	WITHOUT_CLASSIFICATION	4.7245212174010916E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995275478782	WITHOUT_CLASSIFICATION	4.7245212174010916E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999985123712882	WITHOUT_CLASSIFICATION	1.4876287118036826E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999891487604	WITHOUT_CLASSIFICATION	1.085123956603955E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999966451511264	WITHOUT_CLASSIFICATION	3.3548488735005323E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999606595855	WITHOUT_CLASSIFICATION	3.934041452062151E-8	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999885589287694	WITHOUT_CLASSIFICATION	1.1441071230650004E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998443264353	WITHOUT_CLASSIFICATION	1.5567356469380834E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9996887521371449	WITHOUT_CLASSIFICATION	3.112478628551309E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999946922479692	WITHOUT_CLASSIFICATION	5.307752030792126E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999962833617358	WITHOUT_CLASSIFICATION	3.7166382640830694E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998375876268	WITHOUT_CLASSIFICATION	1.6241237328984E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999621815979061	WITHOUT_CLASSIFICATION	3.7818402093937766E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998722464661	WITHOUT_CLASSIFICATION	1.2775353396603488E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998722464661	WITHOUT_CLASSIFICATION	1.2775353396603488E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999611161877	WITHOUT_CLASSIFICATION	3.888381225302304E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999832923558	WITHOUT_CLASSIFICATION	1.6707644207489973E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985178726035	WITHOUT_CLASSIFICATION	1.4821273965259404E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999129156481495	WITHOUT_CLASSIFICATION	8.708435185047208E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9986914710148505	WITHOUT_CLASSIFICATION	0.001308528985149604	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999302856343	WITHOUT_CLASSIFICATION	6.97143657778388E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999989873877697	WITHOUT_CLASSIFICATION	1.0126122302997985E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999845011813	WITHOUT_CLASSIFICATION	1.549881873276788E-8	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999559969227	WITHOUT_CLASSIFICATION	4.400307734253433E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999997587658109	WITHOUT_CLASSIFICATION	2.4123418904872986E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999789984862	WITHOUT_CLASSIFICATION	2.1001513728145145E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999000195015773	WITHOUT_CLASSIFICATION	9.998049842275613E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999000195015773	WITHOUT_CLASSIFICATION	9.998049842275613E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999645297449263	WITHOUT_CLASSIFICATION	3.547025507355536E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978464324634	WITHOUT_CLASSIFICATION	2.153567536608728E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978464324634	WITHOUT_CLASSIFICATION	2.153567536608728E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999905754575799	WITHOUT_CLASSIFICATION	9.424542420113852E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999701461532	WITHOUT_CLASSIFICATION	2.985384673966299E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999701461532	WITHOUT_CLASSIFICATION	2.985384673966299E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999754445632	WITHOUT_CLASSIFICATION	2.4555436838786027E-8	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999699623886593	WITHOUT_CLASSIFICATION	3.0037611340751172E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9993949551109532	WITHOUT_CLASSIFICATION	6.050448890466621E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999726923056732	WITHOUT_CLASSIFICATION	2.7307694326760293E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999726923056732	WITHOUT_CLASSIFICATION	2.7307694326760293E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999944136216236	WITHOUT_CLASSIFICATION	5.5863783763905966E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999807225789	WITHOUT_CLASSIFICATION	1.9277421148656783E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9993917804650272	WITHOUT_CLASSIFICATION	6.082195349727728E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.7026281470450855	DEFECT	0.2973718529549145	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999998527182107	WITHOUT_CLASSIFICATION	1.4728178936666017E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999998527182107	WITHOUT_CLASSIFICATION	1.4728178936666017E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9306384672882467	DEFECT	0.06936153271175331	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999950025639971	WITHOUT_CLASSIFICATION	4.997436002946989E-6	DEFECT
// is this an error???	DEFECT	0.9999950025639971	WITHOUT_CLASSIFICATION	4.997436002946989E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9998032079433424	WITHOUT_CLASSIFICATION	1.967920566576073E-4	DEFECT
