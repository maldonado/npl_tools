/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999040628258606	WITHOUT_CLASSIFICATION	9.59371741393466E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999919404448547	WITHOUT_CLASSIFICATION	8.059555145210384E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998816330967	WITHOUT_CLASSIFICATION	1.1836690329767306E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998816330967	WITHOUT_CLASSIFICATION	1.1836690329767306E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999957297507184	WITHOUT_CLASSIFICATION	4.2702492816825355E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999922896896366	WITHOUT_CLASSIFICATION	7.710310363467611E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999993048492615	WITHOUT_CLASSIFICATION	6.9515073844247E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999987560262839	WITHOUT_CLASSIFICATION	1.2439737161728595E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999999341216087	WITHOUT_CLASSIFICATION	6.587839129459876E-7	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999214009267381	WITHOUT_CLASSIFICATION	7.859907326187246E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.999989792097207	WITHOUT_CLASSIFICATION	1.0207902793000519E-5	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.999999353530778	WITHOUT_CLASSIFICATION	6.464692220185024E-7	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999996862794136	WITHOUT_CLASSIFICATION	3.1372058650672247E-7	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999829275625157	WITHOUT_CLASSIFICATION	1.707243748430305E-5	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999985903613124	WITHOUT_CLASSIFICATION	1.4096386874777019E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999613677205964	WITHOUT_CLASSIFICATION	3.8632279403647956E-5	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999613677205964	WITHOUT_CLASSIFICATION	3.8632279403647956E-5	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999980913497123	WITHOUT_CLASSIFICATION	1.9086502876242923E-6	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999985459531197	WITHOUT_CLASSIFICATION	1.454046880377876E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9998219074717623	WITHOUT_CLASSIFICATION	1.7809252823773735E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999996071506072	WITHOUT_CLASSIFICATION	3.9284939274024654E-7	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999266979211221	WITHOUT_CLASSIFICATION	7.33020788779211E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999831077259	WITHOUT_CLASSIFICATION	1.6892274184981247E-8	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999996384839175	WITHOUT_CLASSIFICATION	3.6151608251863467E-7	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999969735612	WITHOUT_CLASSIFICATION	3.0264387858797955E-9	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999586796328	WITHOUT_CLASSIFICATION	4.132036732901486E-8	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999947440947	WITHOUT_CLASSIFICATION	5.255905290398508E-9	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999858687079848	WITHOUT_CLASSIFICATION	1.4131292015273637E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999540414733	WITHOUT_CLASSIFICATION	4.5958526602808886E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999848145977	WITHOUT_CLASSIFICATION	1.5185402362773576E-8	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999860255863	WITHOUT_CLASSIFICATION	1.3974413766337032E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998914099337	WITHOUT_CLASSIFICATION	1.0859006628247439E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.999998321230003	WITHOUT_CLASSIFICATION	1.678769996977682E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.999999756437658	WITHOUT_CLASSIFICATION	2.4356234205563695E-7	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999999204556628	WITHOUT_CLASSIFICATION	7.954433725605662E-8	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999994400065427	WITHOUT_CLASSIFICATION	5.599934573302464E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999907215837094	WITHOUT_CLASSIFICATION	9.27841629059957E-6	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999996071506072	WITHOUT_CLASSIFICATION	3.9284939274024654E-7	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999993771629193	WITHOUT_CLASSIFICATION	6.2283708063684E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999985929014471	WITHOUT_CLASSIFICATION	1.4070985528704103E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999985929014471	WITHOUT_CLASSIFICATION	1.4070985528704103E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999955833623562	WITHOUT_CLASSIFICATION	4.416637643810968E-6	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999997501221418	WITHOUT_CLASSIFICATION	2.49877858203839E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999979455674145	WITHOUT_CLASSIFICATION	2.054432585547749E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999979455674145	WITHOUT_CLASSIFICATION	2.054432585547749E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999987473269571	WITHOUT_CLASSIFICATION	1.2526730429492177E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999881388547878	WITHOUT_CLASSIFICATION	1.1861145212205679E-5	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999996497316654	WITHOUT_CLASSIFICATION	3.502683346191176E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999999432277056	WITHOUT_CLASSIFICATION	5.6772294499132456E-8	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999987482154258	WITHOUT_CLASSIFICATION	1.2517845742165797E-6	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999988016957049	WITHOUT_CLASSIFICATION	1.1983042951090507E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999974539121906	WITHOUT_CLASSIFICATION	2.546087809499183E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999795248705	WITHOUT_CLASSIFICATION	2.04751295476374E-8	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999795248705	WITHOUT_CLASSIFICATION	2.04751295476374E-8	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999994378322262	WITHOUT_CLASSIFICATION	5.621677738499702E-7	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999998815758312	WITHOUT_CLASSIFICATION	1.1842416881620516E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999558355238	WITHOUT_CLASSIFICATION	4.4164476173039657E-8	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999999558355238	WITHOUT_CLASSIFICATION	4.4164476173039657E-8	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999999324684092	WITHOUT_CLASSIFICATION	6.75315908212004E-8	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999996600323813	WITHOUT_CLASSIFICATION	3.399676188233574E-7	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999892559935125	WITHOUT_CLASSIFICATION	1.074400648743948E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999975665476704	WITHOUT_CLASSIFICATION	2.4334523296060926E-6	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999920331773882	WITHOUT_CLASSIFICATION	7.966822611869862E-6	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999990147010738	WITHOUT_CLASSIFICATION	9.85298926212418E-7	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999993209711263	WITHOUT_CLASSIFICATION	6.790288735916782E-7	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999976791566338	WITHOUT_CLASSIFICATION	2.320843366189327E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999992062219101	WITHOUT_CLASSIFICATION	7.937780899782135E-7	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999983912645577	WITHOUT_CLASSIFICATION	1.6087354424110475E-6	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999998903377341	WITHOUT_CLASSIFICATION	1.0966226594206552E-7	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999993812284352	WITHOUT_CLASSIFICATION	6.187715648174689E-7	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9995468594655512	WITHOUT_CLASSIFICATION	4.5314053444871243E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.999979751718943	WITHOUT_CLASSIFICATION	2.024828105690909E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999768767984	WITHOUT_CLASSIFICATION	2.312320159905132E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999768767984	WITHOUT_CLASSIFICATION	2.312320159905132E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999975665476704	WITHOUT_CLASSIFICATION	2.4334523296060926E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999966343257749	WITHOUT_CLASSIFICATION	3.365674225054036E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999975665476704	WITHOUT_CLASSIFICATION	2.4334523296060926E-6	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999995890371568	WITHOUT_CLASSIFICATION	4.109628431967067E-6	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999966343257749	WITHOUT_CLASSIFICATION	3.365674225054036E-6	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999944952935992	WITHOUT_CLASSIFICATION	5.504706400759012E-6	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999939709986514	WITHOUT_CLASSIFICATION	6.029001348558614E-6	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999900694563385	WITHOUT_CLASSIFICATION	9.930543661442255E-6	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999999626035	WITHOUT_CLASSIFICATION	3.739657795707729E-11	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999998089937783	WITHOUT_CLASSIFICATION	1.910062216372405E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999998089937783	WITHOUT_CLASSIFICATION	1.910062216372405E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999998089937783	WITHOUT_CLASSIFICATION	1.910062216372405E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999998089937783	WITHOUT_CLASSIFICATION	1.910062216372405E-7	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999962076080798	WITHOUT_CLASSIFICATION	3.7923919201639392E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999832430509719	WITHOUT_CLASSIFICATION	1.6756949028087314E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999832430509719	WITHOUT_CLASSIFICATION	1.6756949028087314E-5	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999989406747017	WITHOUT_CLASSIFICATION	1.059325298252063E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999832430509719	WITHOUT_CLASSIFICATION	1.6756949028087314E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999989538624	WITHOUT_CLASSIFICATION	1.0461377134783737E-9	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999949181171021	WITHOUT_CLASSIFICATION	5.081882898011217E-6	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999999892413759	WITHOUT_CLASSIFICATION	1.0758624117220967E-8	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999994623879764	WITHOUT_CLASSIFICATION	5.376120236389364E-7	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999999912073393	WITHOUT_CLASSIFICATION	8.792660725469297E-9	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999999892238377	WITHOUT_CLASSIFICATION	1.0776162220079588E-8	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999955500955066	WITHOUT_CLASSIFICATION	4.449904493415752E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999990511983411	WITHOUT_CLASSIFICATION	9.48801658842462E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999999498378063	WITHOUT_CLASSIFICATION	5.016219370222889E-7	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999988814176228	WITHOUT_CLASSIFICATION	1.1185823772245998E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999985116623161	WITHOUT_CLASSIFICATION	1.4883376838342436E-6	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999863033221	WITHOUT_CLASSIFICATION	1.3696677922757156E-8	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999991830556112	WITHOUT_CLASSIFICATION	8.169443887637095E-7	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999998654826526	WITHOUT_CLASSIFICATION	1.345173474000767E-7	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999980206730379	WITHOUT_CLASSIFICATION	1.9793269620156274E-6	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999964655408526	WITHOUT_CLASSIFICATION	3.5344591474091672E-6	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999821268829446	WITHOUT_CLASSIFICATION	1.7873117055338587E-5	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999960773330723	WITHOUT_CLASSIFICATION	3.922666927675483E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999999657058187	WITHOUT_CLASSIFICATION	3.4294181314855796E-8	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.999990450691532	WITHOUT_CLASSIFICATION	9.549308468092423E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999991069121488	WITHOUT_CLASSIFICATION	8.930878513025471E-7	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999998039443597	WITHOUT_CLASSIFICATION	1.96055640270887E-7	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999991655894472	WITHOUT_CLASSIFICATION	8.344105526600727E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999999498378063	WITHOUT_CLASSIFICATION	5.016219370222889E-7	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999959967734412	WITHOUT_CLASSIFICATION	4.003226558755169E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999990559489993	WITHOUT_CLASSIFICATION	9.440510008017371E-7	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999997480203758	WITHOUT_CLASSIFICATION	2.5197962415206997E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999937306909834	WITHOUT_CLASSIFICATION	6.269309016561564E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999986850826	WITHOUT_CLASSIFICATION	1.3149174249652407E-9	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999905789478	WITHOUT_CLASSIFICATION	9.421052179949515E-9	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999766833422	WITHOUT_CLASSIFICATION	2.3316657768179814E-8	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999977163220656	WITHOUT_CLASSIFICATION	2.283677934320097E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999971274611309	WITHOUT_CLASSIFICATION	2.8725388690743486E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999966240593295	WITHOUT_CLASSIFICATION	3.375940670460283E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999807660151779	WITHOUT_CLASSIFICATION	1.923398482208948E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999858041663463	WITHOUT_CLASSIFICATION	1.4195833653625428E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999996074407059	WITHOUT_CLASSIFICATION	3.9255929415261066E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999999744562187	WITHOUT_CLASSIFICATION	2.55437812828123E-8	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999999769801059	WITHOUT_CLASSIFICATION	2.3019894051226468E-8	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999996251059615	WITHOUT_CLASSIFICATION	3.748940385505768E-7	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999998602077717	WITHOUT_CLASSIFICATION	1.3979222832497268E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9997273861170733	WITHOUT_CLASSIFICATION	2.726138829266437E-4	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999991442463734	WITHOUT_CLASSIFICATION	8.557536265130551E-7	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999999807284147	WITHOUT_CLASSIFICATION	1.9271585351955698E-8	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999998047572316	WITHOUT_CLASSIFICATION	1.9524276831274876E-7	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999999773372318	WITHOUT_CLASSIFICATION	2.2662768316494008E-8	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.999999842963967	WITHOUT_CLASSIFICATION	1.5703603299451762E-7	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.999990764409783	WITHOUT_CLASSIFICATION	9.235590217032797E-6	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999989600594121	WITHOUT_CLASSIFICATION	1.0399405879048696E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999999509809423	WITHOUT_CLASSIFICATION	4.901905766523325E-8	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999998632246431	WITHOUT_CLASSIFICATION	1.3677535694817842E-7	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999909836285189	WITHOUT_CLASSIFICATION	9.016371481049685E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.999998329079522	WITHOUT_CLASSIFICATION	1.670920477971234E-6	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999736632149178	WITHOUT_CLASSIFICATION	2.6336785082147885E-5	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999998679156415	WITHOUT_CLASSIFICATION	1.320843584794593E-7	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999951434572989	WITHOUT_CLASSIFICATION	4.856542701128327E-6	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999998810385702	WITHOUT_CLASSIFICATION	1.1896142977989128E-7	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999921523902773	WITHOUT_CLASSIFICATION	7.84760972271805E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999989538624	WITHOUT_CLASSIFICATION	1.0461377134783737E-9	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.999999998458641	WITHOUT_CLASSIFICATION	1.5413590432819226E-9	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.999999905009922	WITHOUT_CLASSIFICATION	9.4990078048763E-8	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999999818622128	WITHOUT_CLASSIFICATION	1.8137787162257825E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999993224013992	WITHOUT_CLASSIFICATION	6.775986007075037E-7	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999894537536205	WITHOUT_CLASSIFICATION	1.0546246379652342E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999992776414005	WITHOUT_CLASSIFICATION	7.223585995923809E-7	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999990168549872	WITHOUT_CLASSIFICATION	9.8314501286637E-7	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999995670846547	WITHOUT_CLASSIFICATION	4.3291534547180804E-7	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999933797655	WITHOUT_CLASSIFICATION	6.620234589271472E-9	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999999252752539	WITHOUT_CLASSIFICATION	7.47247461150627E-8	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999986621935681	WITHOUT_CLASSIFICATION	1.3378064318566284E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.999997377020343	WITHOUT_CLASSIFICATION	2.6229796569554083E-6	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999988910241413	WITHOUT_CLASSIFICATION	1.1089758587074942E-6	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999995277530682	WITHOUT_CLASSIFICATION	4.7224693173694386E-7	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999838871743193	WITHOUT_CLASSIFICATION	1.6112825680720174E-5	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.999999579502331	WITHOUT_CLASSIFICATION	4.2049766906309967E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999998856452835	WITHOUT_CLASSIFICATION	1.1435471642240706E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.999999411078309	WITHOUT_CLASSIFICATION	5.889216909875465E-7	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999380033902187	WITHOUT_CLASSIFICATION	6.199660978129936E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.999996258079484	WITHOUT_CLASSIFICATION	3.7419205160358257E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999997798125169	WITHOUT_CLASSIFICATION	2.2018748328103938E-7	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999999799119795	WITHOUT_CLASSIFICATION	2.0088020446803352E-8	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.999999141697881	WITHOUT_CLASSIFICATION	8.583021191008573E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999963547301	WITHOUT_CLASSIFICATION	3.645269951644316E-9	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999963547301	WITHOUT_CLASSIFICATION	3.645269951644316E-9	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.999999501860592	WITHOUT_CLASSIFICATION	4.981394079263667E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.999996238906884	WITHOUT_CLASSIFICATION	3.761093115979175E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999997387172049	WITHOUT_CLASSIFICATION	2.612827950743317E-7	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999997387172049	WITHOUT_CLASSIFICATION	2.612827950743317E-7	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999997091365995	WITHOUT_CLASSIFICATION	2.908634004722801E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.999999856365887	WITHOUT_CLASSIFICATION	1.4363411303790895E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999945865841782	WITHOUT_CLASSIFICATION	5.41341582179194E-6	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999994806544757	WITHOUT_CLASSIFICATION	5.193455243759371E-7	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999888421451083	WITHOUT_CLASSIFICATION	1.1157854891647873E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999983304780371	WITHOUT_CLASSIFICATION	1.6695219629339624E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999996648780002	WITHOUT_CLASSIFICATION	3.3512199988114275E-7	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999687585521124	WITHOUT_CLASSIFICATION	3.124144788759871E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999952926915072	WITHOUT_CLASSIFICATION	4.707308492800619E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999999609081441	WITHOUT_CLASSIFICATION	3.909185580955116E-8	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999976154388497	WITHOUT_CLASSIFICATION	2.384561150339748E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999999020305425	WITHOUT_CLASSIFICATION	9.796945756042962E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999997786296431	WITHOUT_CLASSIFICATION	2.2137035682164538E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999987560262839	WITHOUT_CLASSIFICATION	1.2439737161728595E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999999341216087	WITHOUT_CLASSIFICATION	6.587839129459876E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999768767984	WITHOUT_CLASSIFICATION	2.312320159905132E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999997786296431	WITHOUT_CLASSIFICATION	2.2137035682164538E-7	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9995850269712658	WITHOUT_CLASSIFICATION	4.149730287341892E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9997885840916085	WITHOUT_CLASSIFICATION	2.114159083914378E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9997885840916085	WITHOUT_CLASSIFICATION	2.114159083914378E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9997885840916085	WITHOUT_CLASSIFICATION	2.114159083914378E-4	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999998672431348	WITHOUT_CLASSIFICATION	1.327568652503994E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999990220296312	WITHOUT_CLASSIFICATION	9.779703687811383E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.999999082775752	WITHOUT_CLASSIFICATION	9.17224247917434E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9992261625645719	WITHOUT_CLASSIFICATION	7.738374354281656E-4	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999914062345646	WITHOUT_CLASSIFICATION	8.593765435350303E-6	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999934917310743	WITHOUT_CLASSIFICATION	6.508268925640154E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9995850269712658	WITHOUT_CLASSIFICATION	4.149730287341892E-4	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999983767572318	WITHOUT_CLASSIFICATION	1.6232427681624784E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999996075388808	WITHOUT_CLASSIFICATION	3.924611191319101E-7	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999996578145586	WITHOUT_CLASSIFICATION	3.4218544144846133E-7	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999997288322684	WITHOUT_CLASSIFICATION	2.711677316051338E-7	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999998709110471	WITHOUT_CLASSIFICATION	1.2908895295970144E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999768767984	WITHOUT_CLASSIFICATION	2.312320159905132E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999768767984	WITHOUT_CLASSIFICATION	2.312320159905132E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999952926915072	WITHOUT_CLASSIFICATION	4.707308492800619E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999983767572318	WITHOUT_CLASSIFICATION	1.6232427681624784E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999996113568904	WITHOUT_CLASSIFICATION	3.886431096013293E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999996113568904	WITHOUT_CLASSIFICATION	3.886431096013293E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999996113568904	WITHOUT_CLASSIFICATION	3.886431096013293E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999997519115301	WITHOUT_CLASSIFICATION	2.48088469776078E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999997519115301	WITHOUT_CLASSIFICATION	2.48088469776078E-7	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999994082588781	WITHOUT_CLASSIFICATION	5.917411218220464E-7	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999994082588781	WITHOUT_CLASSIFICATION	5.917411218220464E-7	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999998450291314	WITHOUT_CLASSIFICATION	1.5497086858786862E-7	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999997637597164	WITHOUT_CLASSIFICATION	2.3624028362384559E-7	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999997637597164	WITHOUT_CLASSIFICATION	2.3624028362384559E-7	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999988710598939	WITHOUT_CLASSIFICATION	1.1289401061565977E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999951032070767	WITHOUT_CLASSIFICATION	4.896792923221136E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999997356479405	WITHOUT_CLASSIFICATION	2.643520594340656E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999998375800206	WITHOUT_CLASSIFICATION	1.6241997931036714E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999998375800206	WITHOUT_CLASSIFICATION	1.6241997931036714E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999998430720944	WITHOUT_CLASSIFICATION	1.5692790555965038E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999998430720944	WITHOUT_CLASSIFICATION	1.5692790555965038E-7	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999998750480426	WITHOUT_CLASSIFICATION	1.2495195746986572E-7	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999993223948266	WITHOUT_CLASSIFICATION	6.776051734986196E-7	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999983172215271	WITHOUT_CLASSIFICATION	1.682778473007507E-6	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999998760454764	WITHOUT_CLASSIFICATION	1.2395452358406984E-7	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999997761381704	WITHOUT_CLASSIFICATION	2.238618295312348E-7	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999993805347429	WITHOUT_CLASSIFICATION	6.194652570159741E-7	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999999397689074	WITHOUT_CLASSIFICATION	6.023109248320123E-8	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999999234629272	WITHOUT_CLASSIFICATION	7.653707282752512E-8	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9999744562794658	WITHOUT_CLASSIFICATION	2.5543720534121252E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999991921405382	WITHOUT_CLASSIFICATION	8.078594617008973E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999991924710314	WITHOUT_CLASSIFICATION	8.075289685545753E-7	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999993568804162	WITHOUT_CLASSIFICATION	6.431195837886013E-7	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999992859741078	WITHOUT_CLASSIFICATION	7.140258922605688E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999506657011	WITHOUT_CLASSIFICATION	4.933429877442475E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999965284873265	WITHOUT_CLASSIFICATION	3.471512673439632E-6	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999998399968254	WITHOUT_CLASSIFICATION	1.6000317451018626E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999961081143	WITHOUT_CLASSIFICATION	3.891885699071887E-9	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999506657011	WITHOUT_CLASSIFICATION	4.933429877442475E-8	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999996938477334	WITHOUT_CLASSIFICATION	3.06152266580624E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999506657011	WITHOUT_CLASSIFICATION	4.933429877442475E-8	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999965284873265	WITHOUT_CLASSIFICATION	3.471512673439632E-6	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.999999934898082	WITHOUT_CLASSIFICATION	6.510191799704437E-8	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999999998009612	WITHOUT_CLASSIFICATION	1.9903879433656594E-10	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.999999945213732	WITHOUT_CLASSIFICATION	5.4786267981701545E-8	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.999999946711928	WITHOUT_CLASSIFICATION	5.32880720928871E-8	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.999999936054182	WITHOUT_CLASSIFICATION	6.394581799011285E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999972815225813	WITHOUT_CLASSIFICATION	2.718477418771033E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999457485131	WITHOUT_CLASSIFICATION	5.42514867949078E-8	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999936517005673	WITHOUT_CLASSIFICATION	6.348299432729031E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999972815225813	WITHOUT_CLASSIFICATION	2.718477418771033E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999972815225813	WITHOUT_CLASSIFICATION	2.718477418771033E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999972815225813	WITHOUT_CLASSIFICATION	2.718477418771033E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999972815225813	WITHOUT_CLASSIFICATION	2.718477418771033E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999987622726713	WITHOUT_CLASSIFICATION	1.2377273287815732E-6	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999985979428474	WITHOUT_CLASSIFICATION	1.4020571526824416E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999998320831048	WITHOUT_CLASSIFICATION	1.6791689524199705E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999998320831048	WITHOUT_CLASSIFICATION	1.6791689524199705E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999962334731116	WITHOUT_CLASSIFICATION	3.7665268883593838E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999987496866908	WITHOUT_CLASSIFICATION	1.2503133092731406E-6	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999985491628	WITHOUT_CLASSIFICATION	1.4508372325197133E-9	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999995999325317	WITHOUT_CLASSIFICATION	4.000674682973333E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999999455311692	WITHOUT_CLASSIFICATION	5.446883087413242E-8	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999953084005181	WITHOUT_CLASSIFICATION	4.691599481883008E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999953084005181	WITHOUT_CLASSIFICATION	4.691599481883008E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999953084005181	WITHOUT_CLASSIFICATION	4.691599481883008E-6	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.999999999913381	WITHOUT_CLASSIFICATION	8.661904161369719E-11	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999962365809	WITHOUT_CLASSIFICATION	3.763419055250539E-9	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999990194534372	WITHOUT_CLASSIFICATION	9.805465627679075E-7	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999861926937672	WITHOUT_CLASSIFICATION	1.380730623281046E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999998741394404	WITHOUT_CLASSIFICATION	1.2586055957129832E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999999560100377	WITHOUT_CLASSIFICATION	4.3989962270635934E-8	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999535151642	WITHOUT_CLASSIFICATION	4.648483576804622E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.999999905509451	WITHOUT_CLASSIFICATION	9.449054900353867E-8	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999992492969723	WITHOUT_CLASSIFICATION	7.507030278153977E-7	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999844378753603	WITHOUT_CLASSIFICATION	1.556212463968938E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999992527995548	WITHOUT_CLASSIFICATION	7.472004450862575E-7	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999947809989361	WITHOUT_CLASSIFICATION	5.219001063862392E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999990017902	WITHOUT_CLASSIFICATION	9.982098576981623E-10	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999999805036356	WITHOUT_CLASSIFICATION	1.9496364400209394E-8	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999952049494696	WITHOUT_CLASSIFICATION	4.795050530440921E-6	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999998945208126	WITHOUT_CLASSIFICATION	1.0547918737865055E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999952049494696	WITHOUT_CLASSIFICATION	4.795050530440921E-6	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999999859375788	WITHOUT_CLASSIFICATION	1.406242128640384E-8	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.999998026492575	WITHOUT_CLASSIFICATION	1.9735074251166085E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999914862373493	WITHOUT_CLASSIFICATION	8.51376265065643E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999996224627701	WITHOUT_CLASSIFICATION	3.7753722995588567E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999999020431	WITHOUT_CLASSIFICATION	9.795688875733694E-11	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999824700483	WITHOUT_CLASSIFICATION	1.7529951745489926E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999971887546056	WITHOUT_CLASSIFICATION	2.811245394263198E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999992727203876	WITHOUT_CLASSIFICATION	7.272796124508798E-7	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9998051668740887	WITHOUT_CLASSIFICATION	1.9483312591125174E-4	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999918011646891	WITHOUT_CLASSIFICATION	8.198835310942016E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999999556471	WITHOUT_CLASSIFICATION	4.43527732026207E-11	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999992475063508	WITHOUT_CLASSIFICATION	7.524936492429987E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.999999725086721	WITHOUT_CLASSIFICATION	2.749132790426922E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.999999931758825	WITHOUT_CLASSIFICATION	6.824117504361759E-8	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.999999958499048	WITHOUT_CLASSIFICATION	4.1500952005154996E-8	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999997180892408	WITHOUT_CLASSIFICATION	2.819107592217169E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999988005006	WITHOUT_CLASSIFICATION	1.199499354908821E-9	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999999059776883	WITHOUT_CLASSIFICATION	9.40223116899721E-8	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999998533152492	WITHOUT_CLASSIFICATION	1.466847508172088E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.999997497393449	WITHOUT_CLASSIFICATION	2.5026065510573947E-6	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999997150769648	WITHOUT_CLASSIFICATION	2.849230351030543E-7	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.999999012279001	WITHOUT_CLASSIFICATION	9.877209990548832E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999103146502	WITHOUT_CLASSIFICATION	8.968534981441062E-8	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999999103146502	WITHOUT_CLASSIFICATION	8.968534981441062E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999949985179	WITHOUT_CLASSIFICATION	5.001482169099412E-9	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999949985179	WITHOUT_CLASSIFICATION	5.001482169099412E-9	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999794871176027	WITHOUT_CLASSIFICATION	2.0512882397327278E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999871012931347	WITHOUT_CLASSIFICATION	1.2898706865367206E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999871012931347	WITHOUT_CLASSIFICATION	1.2898706865367206E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999051917691	WITHOUT_CLASSIFICATION	9.480823091562013E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999051917691	WITHOUT_CLASSIFICATION	9.480823091562013E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999924522241066	WITHOUT_CLASSIFICATION	7.547775893433693E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999993470577386	WITHOUT_CLASSIFICATION	6.529422613394562E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999999925189464	WITHOUT_CLASSIFICATION	7.481053535691872E-9	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999996548079119	WITHOUT_CLASSIFICATION	3.451920881564534E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.999997317706604	WITHOUT_CLASSIFICATION	2.6822933959526783E-6	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999995354752121	WITHOUT_CLASSIFICATION	4.64524787868798E-7	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999999093853964	WITHOUT_CLASSIFICATION	9.061460353817452E-8	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999996568570545	WITHOUT_CLASSIFICATION	3.431429454683797E-7	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999992513837664	WITHOUT_CLASSIFICATION	7.48616233556619E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999582786031815	WITHOUT_CLASSIFICATION	4.1721396818417585E-5	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999943971736	WITHOUT_CLASSIFICATION	5.602826367433146E-9	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999978256272568	WITHOUT_CLASSIFICATION	2.1743727430863277E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999993400589	WITHOUT_CLASSIFICATION	6.599410452631159E-10	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.999999584888337	WITHOUT_CLASSIFICATION	4.151116629832363E-7	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999998293337751	WITHOUT_CLASSIFICATION	1.706662249795252E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999907215837094	WITHOUT_CLASSIFICATION	9.27841629059957E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999971887546056	WITHOUT_CLASSIFICATION	2.811245394263198E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999918011646891	WITHOUT_CLASSIFICATION	8.198835310942016E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.999999747012888	WITHOUT_CLASSIFICATION	2.5298711209718173E-7	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.999999973706616	WITHOUT_CLASSIFICATION	2.6293384015726046E-8	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999884918309638	WITHOUT_CLASSIFICATION	1.150816903611467E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.999994670000307	WITHOUT_CLASSIFICATION	5.329999693017003E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999982170881858	WITHOUT_CLASSIFICATION	1.7829118142533323E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999603141027775	WITHOUT_CLASSIFICATION	3.9685897222384154E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999987351801456	WITHOUT_CLASSIFICATION	1.2648198544221466E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999999549312636	WITHOUT_CLASSIFICATION	4.506873634617522E-8	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999991328992235	WITHOUT_CLASSIFICATION	8.671007763921358E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999979658003	WITHOUT_CLASSIFICATION	2.0341996134593032E-9	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999813705276834	WITHOUT_CLASSIFICATION	1.8629472316549567E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999996902681753	WITHOUT_CLASSIFICATION	3.097318246644669E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999979811975794	WITHOUT_CLASSIFICATION	2.018802420603671E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999979811975794	WITHOUT_CLASSIFICATION	2.018802420603671E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9998406840074126	WITHOUT_CLASSIFICATION	1.593159925873554E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999529846258741	WITHOUT_CLASSIFICATION	4.701537412602396E-5	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999998274787886	WITHOUT_CLASSIFICATION	1.7252121141210483E-7	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999903210506506	WITHOUT_CLASSIFICATION	9.678949349352404E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999984794542802	WITHOUT_CLASSIFICATION	1.5205457197801297E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999997992876216	WITHOUT_CLASSIFICATION	2.0071237829166478E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999996171519507	WITHOUT_CLASSIFICATION	3.828480492514001E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999681812974924	WITHOUT_CLASSIFICATION	3.1818702507548145E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999997981668204	WITHOUT_CLASSIFICATION	2.0183317947522407E-7	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999992887872046	WITHOUT_CLASSIFICATION	7.112127954551749E-7	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.999999726889811	WITHOUT_CLASSIFICATION	2.731101890677291E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999999504464688	WITHOUT_CLASSIFICATION	4.955353122574937E-8	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999999536522118	WITHOUT_CLASSIFICATION	4.6347788192178856E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999998213439337	WITHOUT_CLASSIFICATION	1.7865606618993577E-7	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999993718007696	WITHOUT_CLASSIFICATION	6.281992304162784E-7	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999935844881133	WITHOUT_CLASSIFICATION	6.415511886734536E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999995324662281	WITHOUT_CLASSIFICATION	4.6753377199497554E-7	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999996179753414	WITHOUT_CLASSIFICATION	3.8202465852068104E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999858687079848	WITHOUT_CLASSIFICATION	1.4131292015273637E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999540414733	WITHOUT_CLASSIFICATION	4.5958526602808886E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999848145977	WITHOUT_CLASSIFICATION	1.5185402362773576E-8	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999999848145977	WITHOUT_CLASSIFICATION	1.5185402362773576E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998914099337	WITHOUT_CLASSIFICATION	1.0859006628247439E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999998914099337	WITHOUT_CLASSIFICATION	1.0859006628247439E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999999090206207	WITHOUT_CLASSIFICATION	9.097937919472079E-8	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999988778689772	WITHOUT_CLASSIFICATION	1.1221310227717672E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999590451366087	WITHOUT_CLASSIFICATION	4.095486339127492E-5	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999955370329048	WITHOUT_CLASSIFICATION	4.4629670953246856E-6	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999791053388002	WITHOUT_CLASSIFICATION	2.0894661199808938E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9757762436725759	WITHOUT_CLASSIFICATION	0.024223756327424063	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.999993550255234	WITHOUT_CLASSIFICATION	6.4497447660269156E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999992431357773	WITHOUT_CLASSIFICATION	7.568642226994151E-7	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999992431357773	WITHOUT_CLASSIFICATION	7.568642226994151E-7	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999999111149369	WITHOUT_CLASSIFICATION	8.888506305391634E-8	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999998935808254	WITHOUT_CLASSIFICATION	1.0641917456409073E-7	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999500521741264	WITHOUT_CLASSIFICATION	4.994782587365619E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999500521741264	WITHOUT_CLASSIFICATION	4.994782587365619E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.99999596349246	WITHOUT_CLASSIFICATION	4.036507540062385E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999992731125366	WITHOUT_CLASSIFICATION	7.268874633883669E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999976642903101	WITHOUT_CLASSIFICATION	2.3357096899761833E-6	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999980843256158	WITHOUT_CLASSIFICATION	1.9156743842836514E-6	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.999997980241267	WITHOUT_CLASSIFICATION	2.019758733026327E-6	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999999716598895	WITHOUT_CLASSIFICATION	2.8340110444496695E-8	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999992016614992	WITHOUT_CLASSIFICATION	7.983385008460873E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999992016614992	WITHOUT_CLASSIFICATION	7.983385008460873E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.999998943555164	WITHOUT_CLASSIFICATION	1.0564448358826012E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999998479678854	WITHOUT_CLASSIFICATION	1.5203211460757647E-6	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999932285167933	WITHOUT_CLASSIFICATION	6.77148320671421E-6	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999979651817057	WITHOUT_CLASSIFICATION	2.0348182942043218E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999979697811913	WITHOUT_CLASSIFICATION	2.0302188087692077E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999996834539354	WITHOUT_CLASSIFICATION	3.165460646400725E-7	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.999969511494667	WITHOUT_CLASSIFICATION	3.048850533311624E-5	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999998234690435	WITHOUT_CLASSIFICATION	1.7653095652783616E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999994389062038	WITHOUT_CLASSIFICATION	5.610937962482437E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999994389062038	WITHOUT_CLASSIFICATION	5.610937962482437E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999994389062038	WITHOUT_CLASSIFICATION	5.610937962482437E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999994389062038	WITHOUT_CLASSIFICATION	5.610937962482437E-7	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999893525472267	WITHOUT_CLASSIFICATION	1.06474527732935E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999997684736615	WITHOUT_CLASSIFICATION	2.3152633864293116E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999992278850846	WITHOUT_CLASSIFICATION	7.721149154854007E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999958921970071	WITHOUT_CLASSIFICATION	4.1078029928746265E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999958921970071	WITHOUT_CLASSIFICATION	4.1078029928746265E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999898944181295	WITHOUT_CLASSIFICATION	1.0105581870495165E-5	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999898944181295	WITHOUT_CLASSIFICATION	1.0105581870495165E-5	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999851481728749	WITHOUT_CLASSIFICATION	1.48518271251164E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999595906008534	WITHOUT_CLASSIFICATION	4.0409399146577985E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999955516361462	WITHOUT_CLASSIFICATION	4.448363853855654E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995101550033	WITHOUT_CLASSIFICATION	4.898449967278605E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997580601974	WITHOUT_CLASSIFICATION	2.4193980255547095E-7	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999888786580148	WITHOUT_CLASSIFICATION	1.1121341985151153E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999988592528	WITHOUT_CLASSIFICATION	1.140747132409854E-9	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999426196128794	WITHOUT_CLASSIFICATION	5.7380387120480206E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999987901123664	WITHOUT_CLASSIFICATION	1.2098876336222518E-6	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999823666268	WITHOUT_CLASSIFICATION	1.76333732200694E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999903668556891	WITHOUT_CLASSIFICATION	9.633144310908129E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999999470150708	WITHOUT_CLASSIFICATION	5.298492916123992E-8	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999937819611008	WITHOUT_CLASSIFICATION	6.218038899151925E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999999891845333	WITHOUT_CLASSIFICATION	1.0815466674349013E-8	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999999361173766	WITHOUT_CLASSIFICATION	6.388262338228553E-8	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999657301970641	WITHOUT_CLASSIFICATION	3.426980293591969E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999998803291897	WITHOUT_CLASSIFICATION	1.1967081016555686E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999970391580739	WITHOUT_CLASSIFICATION	2.96084192616971E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999970391580739	WITHOUT_CLASSIFICATION	2.96084192616971E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999970391580739	WITHOUT_CLASSIFICATION	2.96084192616971E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999998760160198	WITHOUT_CLASSIFICATION	1.2398398024882912E-7	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999938326136127	WITHOUT_CLASSIFICATION	6.1673863873240344E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999999810603196	WITHOUT_CLASSIFICATION	1.8939680374199856E-8	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999968056594803	WITHOUT_CLASSIFICATION	3.1943405196508607E-6	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999968081257	WITHOUT_CLASSIFICATION	3.191874214051571E-9	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999976474898598	WITHOUT_CLASSIFICATION	2.352510140361898E-6	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999945602412494	WITHOUT_CLASSIFICATION	5.439758750474248E-6	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999981745158418	WITHOUT_CLASSIFICATION	1.825484158142454E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999954878630224	WITHOUT_CLASSIFICATION	4.512136977592154E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9999665910604998	WITHOUT_CLASSIFICATION	3.340893950031403E-5	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999999906952192	WITHOUT_CLASSIFICATION	9.304780817289785E-9	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999977462253542	WITHOUT_CLASSIFICATION	2.2537746458688616E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999998257438771	WITHOUT_CLASSIFICATION	1.7425612293163046E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.999996556571339	WITHOUT_CLASSIFICATION	3.4434286609228535E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999983632421628	WITHOUT_CLASSIFICATION	1.6367578370773119E-6	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999999277648877	WITHOUT_CLASSIFICATION	7.223511234668155E-8	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.999999757097751	WITHOUT_CLASSIFICATION	2.429022489507262E-7	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999897625226	WITHOUT_CLASSIFICATION	1.0237477390762857E-8	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.999999999837025	WITHOUT_CLASSIFICATION	1.629750685625536E-10	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.99999982258159	WITHOUT_CLASSIFICATION	1.7741840998455278E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999993246982751	WITHOUT_CLASSIFICATION	6.753017248400667E-7	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999567394995497	WITHOUT_CLASSIFICATION	4.32605004502786E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999986774937	WITHOUT_CLASSIFICATION	1.3225063803971398E-9	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999995365617689	WITHOUT_CLASSIFICATION	4.6343823113566145E-7	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999990392637605	WITHOUT_CLASSIFICATION	9.60736239418817E-7	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999698977524745	WITHOUT_CLASSIFICATION	3.010224752557143E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999874069130701	WITHOUT_CLASSIFICATION	1.2593086929916498E-5	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999986376017161	WITHOUT_CLASSIFICATION	1.3623982838425594E-6	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999992433531522	WITHOUT_CLASSIFICATION	7.566468479110632E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999183030178	WITHOUT_CLASSIFICATION	8.169698223204991E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999999369057855	WITHOUT_CLASSIFICATION	6.309421450872639E-8	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999941283878867	WITHOUT_CLASSIFICATION	5.871612113215119E-6	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999998735785574	WITHOUT_CLASSIFICATION	1.264214425983053E-7	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.999999448020161	WITHOUT_CLASSIFICATION	5.51979838967712E-7	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999689040122497	WITHOUT_CLASSIFICATION	3.1095987750332725E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999625750187204	WITHOUT_CLASSIFICATION	3.742498127968488E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999857310897791	WITHOUT_CLASSIFICATION	1.4268910220985979E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999969672521111	WITHOUT_CLASSIFICATION	3.0327478890701337E-6	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999992143206544	WITHOUT_CLASSIFICATION	7.856793454463351E-7	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999999737139922	WITHOUT_CLASSIFICATION	2.628600773455513E-8	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999999653060675	WITHOUT_CLASSIFICATION	3.469393257811167E-8	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999404394178442	WITHOUT_CLASSIFICATION	5.956058215583897E-5	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999999829284308	WITHOUT_CLASSIFICATION	1.7071569160435578E-8	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999836241883662	WITHOUT_CLASSIFICATION	1.6375811633851255E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999999278083175	WITHOUT_CLASSIFICATION	7.219168249437533E-8	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.999998725299622	WITHOUT_CLASSIFICATION	1.2747003779363992E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.999999118503524	WITHOUT_CLASSIFICATION	8.814964760234266E-7	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999999612093269	WITHOUT_CLASSIFICATION	3.879067306429444E-8	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999997076590985	WITHOUT_CLASSIFICATION	2.9234090149497034E-7	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999999863108767	WITHOUT_CLASSIFICATION	1.368912319188848E-8	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999992579188296	WITHOUT_CLASSIFICATION	7.420811704963394E-7	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.999999983664421	WITHOUT_CLASSIFICATION	1.633557895985806E-8	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999994997340736	WITHOUT_CLASSIFICATION	5.002659263938047E-7	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999991626462399	WITHOUT_CLASSIFICATION	8.373537601362877E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999999041923956	WITHOUT_CLASSIFICATION	9.580760437577126E-8	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9993678275577953	WITHOUT_CLASSIFICATION	6.321724422046139E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999899491698	WITHOUT_CLASSIFICATION	1.0050830084895347E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999999213585012	WITHOUT_CLASSIFICATION	7.864149871127603E-8	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999999774516021	WITHOUT_CLASSIFICATION	2.2548398000193688E-8	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999999751153708	WITHOUT_CLASSIFICATION	2.4884629281446286E-8	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999993392635	WITHOUT_CLASSIFICATION	6.60736499856297E-10	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999999938582262	WITHOUT_CLASSIFICATION	6.141773706375228E-9	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9987190323347847	WITHOUT_CLASSIFICATION	0.0012809676652152542	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999771196194	WITHOUT_CLASSIFICATION	2.2880380564656104E-8	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9996761716256074	WITHOUT_CLASSIFICATION	3.238283743925779E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999922649140258	WITHOUT_CLASSIFICATION	7.735085974208904E-5	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999991614074655	WITHOUT_CLASSIFICATION	8.385925345610171E-7	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999981415168113	WITHOUT_CLASSIFICATION	1.858483188670914E-6	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999997368517939	WITHOUT_CLASSIFICATION	2.631482061581164E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999915083493435	WITHOUT_CLASSIFICATION	8.49165065656005E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999999412332903	WITHOUT_CLASSIFICATION	5.8766709856962935E-8	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9888726121449313	WITHOUT_CLASSIFICATION	0.011127387855068796	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999825395489	WITHOUT_CLASSIFICATION	1.7460450997084328E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999999884884	WITHOUT_CLASSIFICATION	1.151165065481936E-11	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999801218015	WITHOUT_CLASSIFICATION	1.987819855854076E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999954886634435	WITHOUT_CLASSIFICATION	4.511336556554913E-6	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999552749054985	WITHOUT_CLASSIFICATION	4.4725094501529604E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997280754947881	WITHOUT_CLASSIFICATION	2.7192450521186404E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997280754947881	WITHOUT_CLASSIFICATION	2.7192450521186404E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997280754947881	WITHOUT_CLASSIFICATION	2.7192450521186404E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999994098280225	WITHOUT_CLASSIFICATION	5.901719774530016E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999997764051494	WITHOUT_CLASSIFICATION	2.2359485060442698E-7	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999638040826	WITHOUT_CLASSIFICATION	3.619591732077076E-8	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999999633725875	WITHOUT_CLASSIFICATION	3.6627412524521745E-8	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999987627398277	WITHOUT_CLASSIFICATION	1.2372601723119514E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999999918571224	WITHOUT_CLASSIFICATION	8.142877537014562E-9	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999999690981171	WITHOUT_CLASSIFICATION	3.090188300659109E-8	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994427931727	WITHOUT_CLASSIFICATION	5.572068273595787E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999999508824845	WITHOUT_CLASSIFICATION	4.9117515422131156E-8	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999999508824845	WITHOUT_CLASSIFICATION	4.9117515422131156E-8	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999970540653098	WITHOUT_CLASSIFICATION	2.9459346901132994E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999975670809784	WITHOUT_CLASSIFICATION	2.4329190214949615E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999801218015	WITHOUT_CLASSIFICATION	1.987819855854076E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999999738691173	WITHOUT_CLASSIFICATION	2.6130882622384854E-8	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999881917974	WITHOUT_CLASSIFICATION	1.1808202627344534E-8	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999937418933121	WITHOUT_CLASSIFICATION	6.258106687867381E-6	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999997277544672	WITHOUT_CLASSIFICATION	2.72245532794909E-7	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999846667844994	WITHOUT_CLASSIFICATION	1.5333215500559743E-5	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999998585294908	WITHOUT_CLASSIFICATION	1.4147050913316684E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999998371392326	WITHOUT_CLASSIFICATION	1.6286076741080917E-7	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9999136117676215	WITHOUT_CLASSIFICATION	8.63882323784895E-5	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9998594256431015	WITHOUT_CLASSIFICATION	1.40574356898569E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999961690203064	WITHOUT_CLASSIFICATION	3.830979693606359E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9999834679750429	WITHOUT_CLASSIFICATION	1.6532024957111397E-5	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999993762311042	WITHOUT_CLASSIFICATION	6.237688958820201E-7	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.999999806222217	WITHOUT_CLASSIFICATION	1.9377778308294267E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.99999864955207	WITHOUT_CLASSIFICATION	1.3504479300054134E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999955154437024	WITHOUT_CLASSIFICATION	4.484556297655507E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999643095059729	WITHOUT_CLASSIFICATION	3.569049402716295E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9999805019697268	WITHOUT_CLASSIFICATION	1.9498030273157033E-5	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999964464369054	WITHOUT_CLASSIFICATION	3.5535630945767357E-6	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999976129628635	WITHOUT_CLASSIFICATION	2.3870371365290955E-6	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.99999992084774	WITHOUT_CLASSIFICATION	7.91522599610553E-8	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.999997064044647	WITHOUT_CLASSIFICATION	2.935955352958828E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998720531559	WITHOUT_CLASSIFICATION	1.2794684422921266E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.999999153334813	WITHOUT_CLASSIFICATION	8.46665186979113E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999987122783751	WITHOUT_CLASSIFICATION	1.287721624839889E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999707686176333	WITHOUT_CLASSIFICATION	2.923138236661078E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999993144947399	WITHOUT_CLASSIFICATION	6.855052600398342E-7	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999919750527325	WITHOUT_CLASSIFICATION	8.02494726750644E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999834599371	WITHOUT_CLASSIFICATION	1.654006291775976E-8	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999999887842543	WITHOUT_CLASSIFICATION	1.1215745561221316E-8	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999829311149	WITHOUT_CLASSIFICATION	1.706888513441228E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999999979357	WITHOUT_CLASSIFICATION	2.06437775237384E-12	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9994041484153443	WITHOUT_CLASSIFICATION	5.958515846556913E-4	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.999997131098063	WITHOUT_CLASSIFICATION	2.8689019369525347E-6	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.999999817061238	WITHOUT_CLASSIFICATION	1.8293876203488585E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999977492063247	WITHOUT_CLASSIFICATION	2.250793675205593E-6	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999999692569	WITHOUT_CLASSIFICATION	3.074309990029828E-8	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999990096091593	WITHOUT_CLASSIFICATION	9.903908407075625E-7	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999993409670151	WITHOUT_CLASSIFICATION	6.59032984814723E-7	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999936125584091	WITHOUT_CLASSIFICATION	6.387441590950842E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999969015375736	WITHOUT_CLASSIFICATION	3.0984624263934357E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999994665359201	WITHOUT_CLASSIFICATION	5.334640799371503E-7	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999996424412588	WITHOUT_CLASSIFICATION	3.57558741166961E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9987183778687926	WITHOUT_CLASSIFICATION	0.0012816221312073963	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999949136203218	WITHOUT_CLASSIFICATION	5.086379678195629E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999997118661156	WITHOUT_CLASSIFICATION	2.8813388445391795E-7	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999943091218171	WITHOUT_CLASSIFICATION	5.690878182843561E-6	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999990325179786	WITHOUT_CLASSIFICATION	9.674820213111338E-7	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999922144537888	WITHOUT_CLASSIFICATION	7.785546211191918E-6	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999989131725184	WITHOUT_CLASSIFICATION	1.0868274815084254E-6	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999930529776496	WITHOUT_CLASSIFICATION	6.947022350301672E-6	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9992412251083297	WITHOUT_CLASSIFICATION	7.587748916703106E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999772013323126	WITHOUT_CLASSIFICATION	2.2798667687362983E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999863250162121	WITHOUT_CLASSIFICATION	1.367498378788476E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999442821686445	WITHOUT_CLASSIFICATION	5.571783135549681E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999991608060262	WITHOUT_CLASSIFICATION	8.391939736767428E-7	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999993561190986	WITHOUT_CLASSIFICATION	6.438809013190277E-7	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999865952863696	WITHOUT_CLASSIFICATION	1.3404713630485247E-5	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999989841348874	WITHOUT_CLASSIFICATION	1.015865112553946E-6	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999793613941	WITHOUT_CLASSIFICATION	2.063860592450689E-8	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999990022706543	WITHOUT_CLASSIFICATION	9.97729345689146E-7	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999949589952178	WITHOUT_CLASSIFICATION	5.041004782202347E-6	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999988555220356	WITHOUT_CLASSIFICATION	1.144477964414273E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9663058803473658	WITHOUT_CLASSIFICATION	0.03369411965263429	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.990594637284353	WITHOUT_CLASSIFICATION	0.009405362715647018	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999603102673684	WITHOUT_CLASSIFICATION	3.96897326316086E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999999821242008	WITHOUT_CLASSIFICATION	1.787579909563085E-8	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999620422761	WITHOUT_CLASSIFICATION	3.7957723937841036E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999980969367239	WITHOUT_CLASSIFICATION	1.9030632761472097E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999979997679278	WITHOUT_CLASSIFICATION	2.0002320721712466E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999361364945867	WITHOUT_CLASSIFICATION	6.386350541331348E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999922649140258	WITHOUT_CLASSIFICATION	7.735085974208904E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999999620422761	WITHOUT_CLASSIFICATION	3.7957723937841036E-8	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999980969367239	WITHOUT_CLASSIFICATION	1.9030632761472097E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999997416722309	WITHOUT_CLASSIFICATION	2.5832776914643724E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999684829798	WITHOUT_CLASSIFICATION	3.151702025956624E-8	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999997507581082	WITHOUT_CLASSIFICATION	2.4924189189631243E-7	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.999999859482769	WITHOUT_CLASSIFICATION	1.405172310213613E-7	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999997673232632	WITHOUT_CLASSIFICATION	2.3267673672828023E-7	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999990841079108	WITHOUT_CLASSIFICATION	9.158920891155575E-7	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999980528313576	WITHOUT_CLASSIFICATION	1.947168642415524E-6	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999995410495518	WITHOUT_CLASSIFICATION	4.5895044825011893E-7	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999995219002413	WITHOUT_CLASSIFICATION	4.780997585825132E-7	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999999381289091	WITHOUT_CLASSIFICATION	6.187109083295811E-8	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999998783101681	WITHOUT_CLASSIFICATION	1.2168983191993077E-7	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999999349362229	WITHOUT_CLASSIFICATION	6.506377705980614E-8	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.999983407213037	WITHOUT_CLASSIFICATION	1.6592786962894366E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999995086846755	WITHOUT_CLASSIFICATION	4.91315324551629E-7	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999453800878793	WITHOUT_CLASSIFICATION	5.461991212067419E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999779151707062	WITHOUT_CLASSIFICATION	2.2084829293743364E-5	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999948736580816	WITHOUT_CLASSIFICATION	5.126341918433074E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9999042382215901	WITHOUT_CLASSIFICATION	9.576177840990218E-5	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999999556238571	WITHOUT_CLASSIFICATION	4.437614284505684E-8	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999652302947527	WITHOUT_CLASSIFICATION	3.476970524727251E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999975480600942	WITHOUT_CLASSIFICATION	2.4519399058181292E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999971852709703	WITHOUT_CLASSIFICATION	2.8147290297179317E-6	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999908857459587	WITHOUT_CLASSIFICATION	9.114254041277128E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999997368517939	WITHOUT_CLASSIFICATION	2.631482061581164E-7	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999992839874446	WITHOUT_CLASSIFICATION	7.16012555349337E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999902843945975	WITHOUT_CLASSIFICATION	9.71560540257957E-6	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9995251299485886	WITHOUT_CLASSIFICATION	4.7487005141147914E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.998907396677614	WITHOUT_CLASSIFICATION	0.001092603322385948	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999933778025022	WITHOUT_CLASSIFICATION	6.622197497889432E-6	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999893996014293	WITHOUT_CLASSIFICATION	1.0600398570802752E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999995640285942	WITHOUT_CLASSIFICATION	4.359714056930702E-7	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999925661201287	WITHOUT_CLASSIFICATION	7.4338798713707375E-6	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999832822511576	WITHOUT_CLASSIFICATION	1.6717748842465656E-5	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999999710700139	WITHOUT_CLASSIFICATION	2.892998614060311E-8	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999998910313617	WITHOUT_CLASSIFICATION	1.0896863829701237E-7	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999962132345126	WITHOUT_CLASSIFICATION	3.7867654875489283E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999921511298018	WITHOUT_CLASSIFICATION	7.848870198175701E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999999702526399	WITHOUT_CLASSIFICATION	2.9747360127626548E-8	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999997728035093	WITHOUT_CLASSIFICATION	2.2719649071759826E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999889366461	WITHOUT_CLASSIFICATION	1.1063353840969435E-8	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999996027634236	WITHOUT_CLASSIFICATION	3.9723657643494316E-7	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999986351558287	WITHOUT_CLASSIFICATION	1.3648441713004482E-6	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999999224925451	WITHOUT_CLASSIFICATION	7.750745494435882E-8	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999948295767995	WITHOUT_CLASSIFICATION	5.170423200451322E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999878797529993	WITHOUT_CLASSIFICATION	1.2120247000783443E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999972695594435	WITHOUT_CLASSIFICATION	2.730440556478652E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999972695594435	WITHOUT_CLASSIFICATION	2.730440556478652E-6	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999998528594701	WITHOUT_CLASSIFICATION	1.471405298673614E-7	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.999998132023632	WITHOUT_CLASSIFICATION	1.8679763679889555E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999990608031915	WITHOUT_CLASSIFICATION	9.391968084958875E-7	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999998629963804	WITHOUT_CLASSIFICATION	1.3700361965927107E-7	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999997071456824	WITHOUT_CLASSIFICATION	2.928543176134895E-7	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999999674739344	WITHOUT_CLASSIFICATION	3.2526065623441164E-8	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999994347848346	WITHOUT_CLASSIFICATION	5.652151654849609E-7	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.999997905311218	WITHOUT_CLASSIFICATION	2.0946887820243126E-6	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.99997012006428	WITHOUT_CLASSIFICATION	2.987993571996867E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999880031705979	WITHOUT_CLASSIFICATION	1.1996829402237213E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999996367266141	WITHOUT_CLASSIFICATION	3.632733859812207E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999988552373391	WITHOUT_CLASSIFICATION	1.1447626608278677E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999999935176547	WITHOUT_CLASSIFICATION	6.482345336803464E-9	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999999935176547	WITHOUT_CLASSIFICATION	6.482345336803464E-9	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999998173903751	WITHOUT_CLASSIFICATION	1.8260962491773919E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999999531970033	WITHOUT_CLASSIFICATION	4.680299668379252E-8	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999999667201596	WITHOUT_CLASSIFICATION	3.327984049268131E-8	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999991241444087	WITHOUT_CLASSIFICATION	8.758555913374036E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.999999987519768	WITHOUT_CLASSIFICATION	1.2480231869264651E-8	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999912042089	WITHOUT_CLASSIFICATION	8.795791021713621E-9	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999985126874146	WITHOUT_CLASSIFICATION	1.4873125854851412E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999918324413533	WITHOUT_CLASSIFICATION	8.167558646664696E-6	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999995158249967	WITHOUT_CLASSIFICATION	4.841750032903791E-7	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999997074238164	WITHOUT_CLASSIFICATION	2.9257618357066003E-7	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999996778117423	WITHOUT_CLASSIFICATION	3.2218825773684384E-7	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999847130926962	WITHOUT_CLASSIFICATION	1.528690730378929E-5	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999999087157669	WITHOUT_CLASSIFICATION	9.128423302575495E-8	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999603417225906	WITHOUT_CLASSIFICATION	3.965827740939292E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999999012925749	WITHOUT_CLASSIFICATION	9.87074250878708E-8	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.999999858147593	WITHOUT_CLASSIFICATION	1.4185240691357428E-7	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998232092203	WITHOUT_CLASSIFICATION	1.7679077976530954E-7	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999998736227005	WITHOUT_CLASSIFICATION	1.263772994582583E-7	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999999369717559	WITHOUT_CLASSIFICATION	6.302824409264702E-8	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999929792375	WITHOUT_CLASSIFICATION	7.0207625070627535E-9	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999711628408	WITHOUT_CLASSIFICATION	2.88371592534925E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999997002214247	WITHOUT_CLASSIFICATION	2.9977857527376605E-7	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9997530661397336	WITHOUT_CLASSIFICATION	2.4693386026641265E-4	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999998972586774	WITHOUT_CLASSIFICATION	1.0274132267739967E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9999108185409891	WITHOUT_CLASSIFICATION	8.91814590109282E-5	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999987941583522	WITHOUT_CLASSIFICATION	1.2058416478274508E-6	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999980496439362	WITHOUT_CLASSIFICATION	1.950356063706435E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999996634737562	WITHOUT_CLASSIFICATION	3.365262437967894E-7	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999994256497319	WITHOUT_CLASSIFICATION	5.743502679947718E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999999674996798	WITHOUT_CLASSIFICATION	3.250032019089536E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.999999990952355	WITHOUT_CLASSIFICATION	9.04764491890535E-9	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999988987625	WITHOUT_CLASSIFICATION	1.1012375444417064E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998665478429	WITHOUT_CLASSIFICATION	1.334521571768791E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999907068085	WITHOUT_CLASSIFICATION	9.293191539296475E-9	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999417772924638	WITHOUT_CLASSIFICATION	5.822270753628383E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999997898546114	WITHOUT_CLASSIFICATION	2.1014538855995263E-7	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999996843100282	WITHOUT_CLASSIFICATION	3.156899717556346E-7	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999961215280105	WITHOUT_CLASSIFICATION	3.878471989460981E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999994139118964	WITHOUT_CLASSIFICATION	5.860881035636611E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999999322036673	WITHOUT_CLASSIFICATION	6.779633256626948E-8	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999969980609705	WITHOUT_CLASSIFICATION	3.001939029379061E-6	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999183488584	WITHOUT_CLASSIFICATION	8.16511416148689E-8	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999999738987244	WITHOUT_CLASSIFICATION	2.6101275659876523E-8	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999996536894813	WITHOUT_CLASSIFICATION	3.463105186815976E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999996536894813	WITHOUT_CLASSIFICATION	3.463105186815976E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.99999952907182	WITHOUT_CLASSIFICATION	4.709281799924618E-7	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999999636737286	WITHOUT_CLASSIFICATION	3.632627148256984E-8	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999999504100607	WITHOUT_CLASSIFICATION	4.958993930971428E-8	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999999730615157	WITHOUT_CLASSIFICATION	2.693848431909955E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999968675991	WITHOUT_CLASSIFICATION	3.13240099013396E-9	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999999080208662	WITHOUT_CLASSIFICATION	9.197913370547897E-8	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999998928613448	WITHOUT_CLASSIFICATION	1.0713865517073697E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999061933623871	WITHOUT_CLASSIFICATION	9.380663761298608E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999990152434769	WITHOUT_CLASSIFICATION	9.847565230387664E-7	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999998538765202	WITHOUT_CLASSIFICATION	1.461234797280456E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999999963984018	WITHOUT_CLASSIFICATION	3.6015983605448235E-9	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.999994817051236	WITHOUT_CLASSIFICATION	5.182948763942648E-6	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999973706907	WITHOUT_CLASSIFICATION	2.629309347360277E-9	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9843237253558179	WITHOUT_CLASSIFICATION	0.015676274644182184	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999999183488584	WITHOUT_CLASSIFICATION	8.16511416148689E-8	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999968675991	WITHOUT_CLASSIFICATION	3.13240099013396E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999997652384128	WITHOUT_CLASSIFICATION	2.3476158724397895E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999983325793765	WITHOUT_CLASSIFICATION	1.6674206234894867E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999999754428655	WITHOUT_CLASSIFICATION	2.455713459872317E-8	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.999999401317109	WITHOUT_CLASSIFICATION	5.986828910665903E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999996676469207	WITHOUT_CLASSIFICATION	3.3235307933206517E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999899913830705	WITHOUT_CLASSIFICATION	1.0008616929513663E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999998299191462	WITHOUT_CLASSIFICATION	1.7008085379562066E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999997094010019	WITHOUT_CLASSIFICATION	2.905989980914187E-7	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999962647223554	WITHOUT_CLASSIFICATION	3.7352776447486165E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999999242666971	WITHOUT_CLASSIFICATION	7.573330291660447E-8	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996188482784	WITHOUT_CLASSIFICATION	3.811517216141412E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999967044414979	WITHOUT_CLASSIFICATION	3.2955585020160897E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999981145053658	WITHOUT_CLASSIFICATION	1.885494634180868E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999765433567669	WITHOUT_CLASSIFICATION	2.3456643233111307E-5	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999947751381707	WITHOUT_CLASSIFICATION	5.224861829352709E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9995680333862565	WITHOUT_CLASSIFICATION	4.31966613743452E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999997716760498	WITHOUT_CLASSIFICATION	2.2832395012316402E-7	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9981381224457202	WITHOUT_CLASSIFICATION	0.0018618775542798111	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999322173942649	WITHOUT_CLASSIFICATION	6.778260573520365E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999994376870763	WITHOUT_CLASSIFICATION	5.62312923588001E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999990861099318	WITHOUT_CLASSIFICATION	9.138900681436465E-7	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999998507089193	WITHOUT_CLASSIFICATION	1.4929108082942203E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999910970847	WITHOUT_CLASSIFICATION	8.902915195280306E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999931752012	WITHOUT_CLASSIFICATION	6.824798899567383E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999999059361956	WITHOUT_CLASSIFICATION	9.40638043114253E-8	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999990341245774	WITHOUT_CLASSIFICATION	9.65875422623028E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999999718092413	WITHOUT_CLASSIFICATION	2.8190758774296716E-8	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.999995283745917	WITHOUT_CLASSIFICATION	4.71625408299005E-6	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999994817263034	WITHOUT_CLASSIFICATION	5.182736965678251E-7	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999993117693189	WITHOUT_CLASSIFICATION	6.882306810755544E-7	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999968735266123	WITHOUT_CLASSIFICATION	3.1264733877827857E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999998424100335	WITHOUT_CLASSIFICATION	1.5758996664490328E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999816122325	WITHOUT_CLASSIFICATION	1.838776750129436E-8	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.999998990210228	WITHOUT_CLASSIFICATION	1.0097897720595759E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999999817760759	WITHOUT_CLASSIFICATION	1.822392408519654E-8	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999999474339143	WITHOUT_CLASSIFICATION	5.256608577578618E-8	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999999667727987	WITHOUT_CLASSIFICATION	3.3227201304281795E-8	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999999971266879	WITHOUT_CLASSIFICATION	2.873312025415695E-9	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999999929524357	WITHOUT_CLASSIFICATION	7.0475642435461984E-9	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999998925359898	WITHOUT_CLASSIFICATION	1.0746401024347697E-7	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999972807472209	WITHOUT_CLASSIFICATION	2.7192527790940616E-6	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999714713836821	WITHOUT_CLASSIFICATION	2.852861631785581E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999910218197275	WITHOUT_CLASSIFICATION	8.978180272443025E-6	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.999999873836754	WITHOUT_CLASSIFICATION	1.2616324597383063E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999992901693461	WITHOUT_CLASSIFICATION	7.098306538660745E-7	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.999999242339423	WITHOUT_CLASSIFICATION	7.576605770203282E-7	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999998522819696	WITHOUT_CLASSIFICATION	1.4771803036994146E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999961962784725	WITHOUT_CLASSIFICATION	3.803721527468625E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999992663700792	WITHOUT_CLASSIFICATION	7.336299208317273E-7	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999981924451138	WITHOUT_CLASSIFICATION	1.8075548862054221E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999950994257782	WITHOUT_CLASSIFICATION	4.9005742216987206E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999835574102	WITHOUT_CLASSIFICATION	1.6442589852187214E-8	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999998116824538	WITHOUT_CLASSIFICATION	1.8831754615161665E-7	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999981928583296	WITHOUT_CLASSIFICATION	1.807141670506158E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999979794906889	WITHOUT_CLASSIFICATION	2.020509311095085E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999746454768461	WITHOUT_CLASSIFICATION	2.535452315390902E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999998875086167	WITHOUT_CLASSIFICATION	1.1249138325741986E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999730773327	WITHOUT_CLASSIFICATION	2.6922667213621384E-8	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999963094052877	WITHOUT_CLASSIFICATION	3.690594712303151E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999999974762622	WITHOUT_CLASSIFICATION	2.523737775418688E-9	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999951505309703	WITHOUT_CLASSIFICATION	4.849469029651902E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999999949581081	WITHOUT_CLASSIFICATION	5.041891905539998E-9	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999963094052877	WITHOUT_CLASSIFICATION	3.690594712303151E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999978923253386	WITHOUT_CLASSIFICATION	2.1076746613659937E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999947077716704	WITHOUT_CLASSIFICATION	5.29222832953718E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999947975602159	WITHOUT_CLASSIFICATION	5.202439784003121E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999926102866	WITHOUT_CLASSIFICATION	7.3897133708511205E-9	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999933490005678	WITHOUT_CLASSIFICATION	6.650999432131208E-6	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999748112826	WITHOUT_CLASSIFICATION	2.518871738533071E-8	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999996962014214	WITHOUT_CLASSIFICATION	3.037985787027919E-7	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999998963320218	WITHOUT_CLASSIFICATION	1.0366797822151058E-7	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999998952559106	WITHOUT_CLASSIFICATION	1.0474408946341463E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999998917481093	WITHOUT_CLASSIFICATION	1.0825189073536992E-7	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999997671081022	WITHOUT_CLASSIFICATION	2.3289189791806364E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999945582286	WITHOUT_CLASSIFICATION	5.441771337773133E-9	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999994156816127	WITHOUT_CLASSIFICATION	5.843183874209478E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999941877568671	WITHOUT_CLASSIFICATION	5.812243132835542E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999998694981	WITHOUT_CLASSIFICATION	1.3050190797122782E-10	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.999999975613117	WITHOUT_CLASSIFICATION	2.4386882905913715E-8	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999977362761	WITHOUT_CLASSIFICATION	2.2637240024521134E-9	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999912906607403	WITHOUT_CLASSIFICATION	8.709339259781574E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999934667034666	WITHOUT_CLASSIFICATION	6.533296533446549E-6	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.999998490334782	WITHOUT_CLASSIFICATION	1.5096652179513625E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999997380576126	WITHOUT_CLASSIFICATION	2.619423874223413E-7	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999891835283358	WITHOUT_CLASSIFICATION	1.0816471664292954E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999998579596333	WITHOUT_CLASSIFICATION	1.4204036673374629E-7	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999999845853988	WITHOUT_CLASSIFICATION	1.541460111979509E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999961822229	WITHOUT_CLASSIFICATION	3.817777152750607E-9	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999847226423	WITHOUT_CLASSIFICATION	1.5277357691642516E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999884092702	WITHOUT_CLASSIFICATION	1.1590729870305894E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999999780426577	WITHOUT_CLASSIFICATION	2.1957342289789737E-8	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9980628253206468	WITHOUT_CLASSIFICATION	0.0019371746793531263	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999999779890243	WITHOUT_CLASSIFICATION	2.2010975688129612E-8	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999916983827197	WITHOUT_CLASSIFICATION	8.301617280329889E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999998532765487	WITHOUT_CLASSIFICATION	1.4672345130800877E-7	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999997471822678	WITHOUT_CLASSIFICATION	2.528177322158345E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999884092702	WITHOUT_CLASSIFICATION	1.1590729870305894E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999849946621975	WITHOUT_CLASSIFICATION	1.5005337802615417E-5	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999849946621975	WITHOUT_CLASSIFICATION	1.5005337802615417E-5	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999997643324539	WITHOUT_CLASSIFICATION	2.3566754612058296E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999884092702	WITHOUT_CLASSIFICATION	1.1590729870305894E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999884092702	WITHOUT_CLASSIFICATION	1.1590729870305894E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999995447210048	WITHOUT_CLASSIFICATION	4.552789951976238E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999999303825073	WITHOUT_CLASSIFICATION	6.961749262539652E-8	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999994996651268	WITHOUT_CLASSIFICATION	5.00334873182485E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999994996651268	WITHOUT_CLASSIFICATION	5.00334873182485E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999957565051552	WITHOUT_CLASSIFICATION	4.243494844786492E-6	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999988409643953	WITHOUT_CLASSIFICATION	1.1590356046146177E-6	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999965382324996	WITHOUT_CLASSIFICATION	3.461767500291368E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999934667034666	WITHOUT_CLASSIFICATION	6.533296533446549E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999934667034666	WITHOUT_CLASSIFICATION	6.533296533446549E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999957565051552	WITHOUT_CLASSIFICATION	4.243494844786492E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.999999988805681	WITHOUT_CLASSIFICATION	1.1194319081283722E-8	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999993884105546	WITHOUT_CLASSIFICATION	6.115894453826319E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999994691183688	WITHOUT_CLASSIFICATION	5.30881631208446E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999970267032	WITHOUT_CLASSIFICATION	2.9732967925455743E-9	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.999990379913206	WITHOUT_CLASSIFICATION	9.620086793918001E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999989783707095	WITHOUT_CLASSIFICATION	1.0216292905003577E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999994572782693	WITHOUT_CLASSIFICATION	5.427217306786313E-7	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999999924235098	WITHOUT_CLASSIFICATION	7.576490168933942E-9	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999973668491292	WITHOUT_CLASSIFICATION	2.633150870730507E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999973641164962	WITHOUT_CLASSIFICATION	2.6358835038971138E-6	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999993942338581	WITHOUT_CLASSIFICATION	6.057661419723972E-7	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999996459253079	WITHOUT_CLASSIFICATION	3.5407469212727847E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999477079037706	WITHOUT_CLASSIFICATION	5.229209622943513E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.999999346344941	WITHOUT_CLASSIFICATION	6.536550589594581E-7	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999902235468114	WITHOUT_CLASSIFICATION	9.77645318844041E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999998497360532	WITHOUT_CLASSIFICATION	1.5026394687664063E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.99999902818158	WITHOUT_CLASSIFICATION	9.718184199775338E-7	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999989525419567	WITHOUT_CLASSIFICATION	1.0474580433818305E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999743592372411	WITHOUT_CLASSIFICATION	2.564076275884338E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999974315308977	WITHOUT_CLASSIFICATION	2.568469102192643E-6	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999958964405594	WITHOUT_CLASSIFICATION	4.10355944050614E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999999990485663	WITHOUT_CLASSIFICATION	9.514336586353816E-10	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999998023040121	WITHOUT_CLASSIFICATION	1.9769598792388602E-7	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999112658062878	WITHOUT_CLASSIFICATION	8.873419371231992E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999997711959767	WITHOUT_CLASSIFICATION	2.2880402336300314E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999955345338323	WITHOUT_CLASSIFICATION	4.4654661677685465E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999997544298398	WITHOUT_CLASSIFICATION	2.4557016016116823E-7	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999613988966115	WITHOUT_CLASSIFICATION	3.8601103388536995E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999996045988803	WITHOUT_CLASSIFICATION	3.954011198165662E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999998761745551	WITHOUT_CLASSIFICATION	1.2382544501354248E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999538711660723	WITHOUT_CLASSIFICATION	4.612883392769183E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9999711820707906	WITHOUT_CLASSIFICATION	2.8817929209498356E-5	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999999641245335	WITHOUT_CLASSIFICATION	3.587546648688608E-8	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999998112738088	WITHOUT_CLASSIFICATION	1.8872619134174484E-7	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999828647687	WITHOUT_CLASSIFICATION	1.713523136597293E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999991815946634	WITHOUT_CLASSIFICATION	8.184053366106569E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999997569529151	WITHOUT_CLASSIFICATION	2.4304708490801446E-7	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999990308916087	WITHOUT_CLASSIFICATION	9.691083912738087E-7	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999999331929129	WITHOUT_CLASSIFICATION	6.680708703938904E-8	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.99999107850268	WITHOUT_CLASSIFICATION	8.921497319973746E-6	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.999999807564221	WITHOUT_CLASSIFICATION	1.924357789379891E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999992249181786	WITHOUT_CLASSIFICATION	7.750818214210471E-7	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999997817161816	WITHOUT_CLASSIFICATION	2.1828381837485528E-7	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999967554197846	WITHOUT_CLASSIFICATION	3.2445802154067653E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999983291920466	WITHOUT_CLASSIFICATION	1.670807953374383E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999957160442969	WITHOUT_CLASSIFICATION	4.283955703076926E-6	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999610520502037	WITHOUT_CLASSIFICATION	3.8947949796368364E-5	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.999998303038965	WITHOUT_CLASSIFICATION	1.6969610350863408E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999998613952886	WITHOUT_CLASSIFICATION	1.3860471137819968E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999991294194085	WITHOUT_CLASSIFICATION	8.705805916030252E-7	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.999996103118327	WITHOUT_CLASSIFICATION	3.896881672967686E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999873451563438	WITHOUT_CLASSIFICATION	1.2654843656295678E-5	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999998021201855	WITHOUT_CLASSIFICATION	1.9787981463014795E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999977489819956	WITHOUT_CLASSIFICATION	2.2510180044535635E-6	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999998971458376	WITHOUT_CLASSIFICATION	1.0285416241674408E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999927976071261	WITHOUT_CLASSIFICATION	7.202392873889916E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999974798104009	WITHOUT_CLASSIFICATION	2.52018959915272E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999977457636283	WITHOUT_CLASSIFICATION	2.2542363717081927E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999998438818126	WITHOUT_CLASSIFICATION	1.5611818744406678E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999994750162646	WITHOUT_CLASSIFICATION	5.249837352593245E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999998447048	WITHOUT_CLASSIFICATION	1.552951551751614E-10	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999948990663006	WITHOUT_CLASSIFICATION	5.100933699468339E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.99998984738949	WITHOUT_CLASSIFICATION	1.015261050991743E-5	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999999117362076	WITHOUT_CLASSIFICATION	8.82637924066136E-8	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9980803463266547	WITHOUT_CLASSIFICATION	0.0019196536733453347	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999998743297396	WITHOUT_CLASSIFICATION	1.2567026032929613E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999999737383757	WITHOUT_CLASSIFICATION	2.6261624254211578E-8	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999102852015009	WITHOUT_CLASSIFICATION	8.971479849912225E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999998216249079	WITHOUT_CLASSIFICATION	1.7837509203821084E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999819476996163	WITHOUT_CLASSIFICATION	1.805230038367041E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999938012060272	WITHOUT_CLASSIFICATION	6.198793972873062E-6	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999996485394229	WITHOUT_CLASSIFICATION	3.514605771223224E-7	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999996791336752	WITHOUT_CLASSIFICATION	3.2086632483212876E-7	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999906257950499	WITHOUT_CLASSIFICATION	9.374204950027463E-6	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999999827517603	WITHOUT_CLASSIFICATION	1.7248239737761187E-8	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999994271597836	WITHOUT_CLASSIFICATION	5.728402163652274E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999994271597836	WITHOUT_CLASSIFICATION	5.728402163652274E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999994070797598	WITHOUT_CLASSIFICATION	5.929202401550115E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9984532003354369	WITHOUT_CLASSIFICATION	0.0015467996645631068	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999968998510842	WITHOUT_CLASSIFICATION	3.1001489158339343E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.652222984684987	WITHOUT_CLASSIFICATION	0.34777701531501304	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999897458757737	WITHOUT_CLASSIFICATION	1.0254124226329978E-5	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999999609280072	WITHOUT_CLASSIFICATION	3.907199263249509E-8	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.8292716797911718	WITHOUT_CLASSIFICATION	0.17072832020882814	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999999735948966	WITHOUT_CLASSIFICATION	2.6405103479578336E-8	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9994703873242777	WITHOUT_CLASSIFICATION	5.296126757221757E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.999999999706623	WITHOUT_CLASSIFICATION	2.933768960095167E-10	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999990500607	WITHOUT_CLASSIFICATION	9.499393221067788E-10	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999999882000163	WITHOUT_CLASSIFICATION	1.1799983638704639E-8	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999998871235573	WITHOUT_CLASSIFICATION	1.1287644275756533E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999995009459	WITHOUT_CLASSIFICATION	4.990541002547454E-10	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999999734984	WITHOUT_CLASSIFICATION	2.6501492593903793E-11	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999995719263307	WITHOUT_CLASSIFICATION	4.280736693712285E-7	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999991334524483	WITHOUT_CLASSIFICATION	8.665475515685302E-7	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999759021686	WITHOUT_CLASSIFICATION	2.409783138159061E-8	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999742169800757	WITHOUT_CLASSIFICATION	2.5783019924192698E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999848278175083	WITHOUT_CLASSIFICATION	1.5172182491602872E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.999994572744737	WITHOUT_CLASSIFICATION	5.427255262952926E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999779920493335	WITHOUT_CLASSIFICATION	2.2007950666512913E-5	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999982676240939	WITHOUT_CLASSIFICATION	1.732375906016511E-6	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.999994129619345	WITHOUT_CLASSIFICATION	5.870380655100341E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9999904139366946	WITHOUT_CLASSIFICATION	9.58606330545707E-6	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999993624091766	WITHOUT_CLASSIFICATION	6.375908234247388E-7	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9999563334169661	WITHOUT_CLASSIFICATION	4.366658303394316E-5	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999983417719582	WITHOUT_CLASSIFICATION	1.6582280417430048E-6	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999888878478788	WITHOUT_CLASSIFICATION	1.1112152121170339E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999848278175083	WITHOUT_CLASSIFICATION	1.5172182491602872E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999779920493335	WITHOUT_CLASSIFICATION	2.2007950666512913E-5	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999998560912502	WITHOUT_CLASSIFICATION	1.4390874988792096E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999908060022	WITHOUT_CLASSIFICATION	9.193997789634385E-8	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999998126736799	WITHOUT_CLASSIFICATION	1.873263202003443E-7	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9999570070474267	WITHOUT_CLASSIFICATION	4.2992952573226886E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998484881263	WITHOUT_CLASSIFICATION	1.5151187369497254E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999982275002023	WITHOUT_CLASSIFICATION	1.7724997977468349E-6	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.999993291076206	WITHOUT_CLASSIFICATION	6.708923793905397E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999325390085387	WITHOUT_CLASSIFICATION	6.746099146120842E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999991003908648	WITHOUT_CLASSIFICATION	8.996091352142313E-7	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999978859253595	WITHOUT_CLASSIFICATION	2.114074640407703E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999931052190109	WITHOUT_CLASSIFICATION	6.894780989206315E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.999999739729276	WITHOUT_CLASSIFICATION	2.602707239740122E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999994477759075	WITHOUT_CLASSIFICATION	5.522240924922732E-7	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999994287446899	WITHOUT_CLASSIFICATION	5.71255310135384E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999998088152713	WITHOUT_CLASSIFICATION	1.9118472864326485E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.999999794762646	WITHOUT_CLASSIFICATION	2.052373538935542E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999965021882361	WITHOUT_CLASSIFICATION	3.4978117639368136E-6	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.999997051186253	WITHOUT_CLASSIFICATION	2.94881374689351E-6	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999995123506489	WITHOUT_CLASSIFICATION	4.876493510278641E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999999847226423	WITHOUT_CLASSIFICATION	1.5277357691642516E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999982766996572	WITHOUT_CLASSIFICATION	1.7233003426628156E-6	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999866578252	WITHOUT_CLASSIFICATION	1.334217479457234E-8	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999998745919721	WITHOUT_CLASSIFICATION	1.254080277692554E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999998444305885	WITHOUT_CLASSIFICATION	1.5556941144047327E-7	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999992238266588	WITHOUT_CLASSIFICATION	7.761733412208989E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999894397747134	WITHOUT_CLASSIFICATION	1.056022528647292E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999907361248236	WITHOUT_CLASSIFICATION	9.263875176473136E-6	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999989811135017	WITHOUT_CLASSIFICATION	1.0188864982953187E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999999138598229	WITHOUT_CLASSIFICATION	8.614017717862023E-8	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999999952026636	WITHOUT_CLASSIFICATION	4.797336355999936E-9	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999995784965536	WITHOUT_CLASSIFICATION	4.215034463461317E-7	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999988969279661	WITHOUT_CLASSIFICATION	1.1030720338976471E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999999175395573	WITHOUT_CLASSIFICATION	8.246044271791876E-8	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999997799024791	WITHOUT_CLASSIFICATION	2.200975209148038E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999841905548746	WITHOUT_CLASSIFICATION	1.5809445125399966E-5	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999992447519516	WITHOUT_CLASSIFICATION	7.552480483322873E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999944683355	WITHOUT_CLASSIFICATION	5.53166454808609E-9	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999999736319797	WITHOUT_CLASSIFICATION	2.6368020260786745E-8	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999821208106	WITHOUT_CLASSIFICATION	1.7879189446368408E-8	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999999275923945	WITHOUT_CLASSIFICATION	7.240760551180947E-8	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999861271200939	WITHOUT_CLASSIFICATION	1.3872879906038438E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999847506548676	WITHOUT_CLASSIFICATION	1.524934513229767E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999906762050098	WITHOUT_CLASSIFICATION	9.323794990189312E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999990185426609	WITHOUT_CLASSIFICATION	9.81457339038777E-7	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.999999440225613	WITHOUT_CLASSIFICATION	5.597743870260451E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9960159726166408	WITHOUT_CLASSIFICATION	0.003984027383359132	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999998909873697	WITHOUT_CLASSIFICATION	1.090126302914562E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999496733292471	WITHOUT_CLASSIFICATION	5.0326670752973874E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999996468668344	WITHOUT_CLASSIFICATION	3.531331655949014E-7	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999952394848575	WITHOUT_CLASSIFICATION	4.760515142572249E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999992550096235	WITHOUT_CLASSIFICATION	7.449903764615011E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999995089513098	WITHOUT_CLASSIFICATION	4.910486901611125E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999774820792	WITHOUT_CLASSIFICATION	2.2517920779936822E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999715981644	WITHOUT_CLASSIFICATION	2.8401835547945354E-8	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999999542994286	WITHOUT_CLASSIFICATION	4.570057137933309E-8	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999956813503086	WITHOUT_CLASSIFICATION	4.318649691373321E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999974715175016	WITHOUT_CLASSIFICATION	2.5284824983338892E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999978599428263	WITHOUT_CLASSIFICATION	2.1400571737036045E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.999999456445631	WITHOUT_CLASSIFICATION	5.435543690490121E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999912906607403	WITHOUT_CLASSIFICATION	8.709339259781574E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999926015571873	WITHOUT_CLASSIFICATION	7.398442812652021E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999887486488684	WITHOUT_CLASSIFICATION	1.1251351131518072E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998699414258	WITHOUT_CLASSIFICATION	1.300585741699153E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999998699414258	WITHOUT_CLASSIFICATION	1.300585741699153E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.999988123217607	WITHOUT_CLASSIFICATION	1.1876782392959152E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.999999579808955	WITHOUT_CLASSIFICATION	4.201910450025443E-7	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999945123992	WITHOUT_CLASSIFICATION	5.487600759431912E-9	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999992185798048	WITHOUT_CLASSIFICATION	7.814201952618488E-7	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999971543680063	WITHOUT_CLASSIFICATION	2.845631993713399E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999999201027324	WITHOUT_CLASSIFICATION	7.989726760776388E-8	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999661907942	WITHOUT_CLASSIFICATION	3.3809205765978304E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9999321665372641	WITHOUT_CLASSIFICATION	6.783346273586198E-5	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999957753945788	WITHOUT_CLASSIFICATION	4.224605421137719E-6	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999999716169109	WITHOUT_CLASSIFICATION	2.8383089169448586E-8	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999999501487542	WITHOUT_CLASSIFICATION	4.985124576401543E-8	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.999999993479807	WITHOUT_CLASSIFICATION	6.520193074196926E-9	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999622072354	WITHOUT_CLASSIFICATION	3.779276458794704E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999952512541734	WITHOUT_CLASSIFICATION	4.7487458266195E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999870387165182	WITHOUT_CLASSIFICATION	1.2961283481939339E-5	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999988591798809	WITHOUT_CLASSIFICATION	1.1408201192081886E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999969752358705	WITHOUT_CLASSIFICATION	3.024764129488594E-6	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999938878172442	WITHOUT_CLASSIFICATION	6.112182755742613E-6	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.999999597849444	WITHOUT_CLASSIFICATION	4.0215055599155417E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999974074867394	WITHOUT_CLASSIFICATION	2.5925132606536917E-6	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999993702546922	WITHOUT_CLASSIFICATION	6.297453077210746E-7	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999988686496896	WITHOUT_CLASSIFICATION	1.1313503104620516E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999999472021257	WITHOUT_CLASSIFICATION	5.279787425798741E-8	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999999932767688	WITHOUT_CLASSIFICATION	6.723231256135823E-9	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999987122783751	WITHOUT_CLASSIFICATION	1.287721624839889E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999707686176333	WITHOUT_CLASSIFICATION	2.923138236661078E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999988686496896	WITHOUT_CLASSIFICATION	1.1313503104620516E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999696302377746	WITHOUT_CLASSIFICATION	3.0369762225379917E-5	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9999079772401505	WITHOUT_CLASSIFICATION	9.202275984955305E-5	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999930403349441	WITHOUT_CLASSIFICATION	6.959665055927775E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999910606418096	WITHOUT_CLASSIFICATION	8.939358190397534E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9998671604124537	WITHOUT_CLASSIFICATION	1.328395875463106E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999999538881308	WITHOUT_CLASSIFICATION	4.61118692868716E-8	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999997298343755	WITHOUT_CLASSIFICATION	2.7016562458736753E-7	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999623778071	WITHOUT_CLASSIFICATION	3.762219293441024E-8	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999980415123172	WITHOUT_CLASSIFICATION	1.958487682856499E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999653365802	WITHOUT_CLASSIFICATION	3.4663419747762534E-8	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999987281771999	WITHOUT_CLASSIFICATION	1.271822800039224E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999998671221696	WITHOUT_CLASSIFICATION	1.3287783050579024E-7	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999997628158521	WITHOUT_CLASSIFICATION	2.371841479743348E-7	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999967936885	WITHOUT_CLASSIFICATION	3.2063114940616922E-9	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999998280048915	WITHOUT_CLASSIFICATION	1.7199510857333698E-7	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999999645737115	WITHOUT_CLASSIFICATION	3.542628848838317E-8	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999993243837211	WITHOUT_CLASSIFICATION	6.756162788935723E-7	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999999622744044	WITHOUT_CLASSIFICATION	3.7725595672755994E-8	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999997465284233	WITHOUT_CLASSIFICATION	2.534715767934217E-7	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.999999628186692	WITHOUT_CLASSIFICATION	3.7181330797218654E-7	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999991505271044	WITHOUT_CLASSIFICATION	8.494728956542932E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999999773604986	WITHOUT_CLASSIFICATION	2.2639501434778074E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999999290476221	WITHOUT_CLASSIFICATION	7.095237788449706E-8	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999999728070653	WITHOUT_CLASSIFICATION	2.7192934691747313E-8	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.999999631940247	WITHOUT_CLASSIFICATION	3.680597529926161E-7	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999225534458	WITHOUT_CLASSIFICATION	7.744655409655842E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999476980284	WITHOUT_CLASSIFICATION	5.230197157212613E-8	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999983255639062	WITHOUT_CLASSIFICATION	1.6744360937423271E-6	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999990099313144	WITHOUT_CLASSIFICATION	9.900686856333183E-7	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.999999957873248	WITHOUT_CLASSIFICATION	4.2126751855842355E-8	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999988610026049	WITHOUT_CLASSIFICATION	1.1389973951403663E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999998675298394	WITHOUT_CLASSIFICATION	1.324701606220193E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999878797529993	WITHOUT_CLASSIFICATION	1.2120247000783443E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9998671604124537	WITHOUT_CLASSIFICATION	1.328395875463106E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999999538881308	WITHOUT_CLASSIFICATION	4.61118692868716E-8	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999997298343755	WITHOUT_CLASSIFICATION	2.7016562458736753E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999980415123172	WITHOUT_CLASSIFICATION	1.958487682856499E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999653365802	WITHOUT_CLASSIFICATION	3.4663419747762534E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9977051003660639	WITHOUT_CLASSIFICATION	0.0022948996339361397	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999987729754	WITHOUT_CLASSIFICATION	1.2270246411757253E-9	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999979541543	WITHOUT_CLASSIFICATION	2.0458457369086196E-9	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999982212104319	WITHOUT_CLASSIFICATION	1.7787895680511238E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9997358429204202	WITHOUT_CLASSIFICATION	2.6415707957984965E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999961057472375	WITHOUT_CLASSIFICATION	3.894252762429857E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.999999896147165	WITHOUT_CLASSIFICATION	1.0385283508688761E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999948133252559	WITHOUT_CLASSIFICATION	5.186674744130951E-6	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999993000222422	WITHOUT_CLASSIFICATION	6.999777578541381E-7	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.999999321765266	WITHOUT_CLASSIFICATION	6.782347340893685E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999988823384021	WITHOUT_CLASSIFICATION	1.1176615979197444E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999994256133924	WITHOUT_CLASSIFICATION	5.743866075905572E-7	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999823493871359	WITHOUT_CLASSIFICATION	1.765061286409527E-5	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999898619080475	WITHOUT_CLASSIFICATION	1.0138091952606027E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999998234869126	WITHOUT_CLASSIFICATION	1.7651308736778606E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999995619128206	WITHOUT_CLASSIFICATION	4.380871793543066E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999947253317	WITHOUT_CLASSIFICATION	5.274668219027026E-9	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.999999806358642	WITHOUT_CLASSIFICATION	1.9364135789336933E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999966456493	WITHOUT_CLASSIFICATION	3.354350761685519E-9	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999999376367846	WITHOUT_CLASSIFICATION	6.236321537912296E-8	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999996166544745	WITHOUT_CLASSIFICATION	3.8334552556514146E-7	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999990139031601	WITHOUT_CLASSIFICATION	9.860968398858447E-7	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999993751858812	WITHOUT_CLASSIFICATION	6.248141187857656E-7	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999994508257366	WITHOUT_CLASSIFICATION	5.491742634031661E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999998751932756	WITHOUT_CLASSIFICATION	1.2480672434484082E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999950994257782	WITHOUT_CLASSIFICATION	4.9005742216987206E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999894397747134	WITHOUT_CLASSIFICATION	1.056022528647292E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999992550096235	WITHOUT_CLASSIFICATION	7.449903764615011E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999653365802	WITHOUT_CLASSIFICATION	3.4663419747762534E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999999703627835	WITHOUT_CLASSIFICATION	2.963721636298904E-8	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999601239575113	WITHOUT_CLASSIFICATION	3.987604248871822E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999995665331	WITHOUT_CLASSIFICATION	4.3346702475775275E-10	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999855746164158	WITHOUT_CLASSIFICATION	1.4425383584200671E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999855746164158	WITHOUT_CLASSIFICATION	1.4425383584200671E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999865096323	WITHOUT_CLASSIFICATION	1.3490367766048582E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999993570258364	WITHOUT_CLASSIFICATION	6.429741634707641E-7	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999998888610409	WITHOUT_CLASSIFICATION	1.1113895911669588E-7	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999992244929584	WITHOUT_CLASSIFICATION	7.755070415647443E-7	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.999994978567558	WITHOUT_CLASSIFICATION	5.02143244195009E-6	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999405081902236	WITHOUT_CLASSIFICATION	5.949180977640468E-5	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999999821024411	WITHOUT_CLASSIFICATION	1.789755891143739E-8	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999755655157293	WITHOUT_CLASSIFICATION	2.4434484270720547E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999871976990623	WITHOUT_CLASSIFICATION	1.280230093771295E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999988668538762	WITHOUT_CLASSIFICATION	1.133146123754212E-6	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999994683327561	WITHOUT_CLASSIFICATION	5.316672438797695E-7	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999833913055446	WITHOUT_CLASSIFICATION	1.6608694455431726E-5	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998675675234302	WITHOUT_CLASSIFICATION	1.3243247656989843E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9990894377929922	WITHOUT_CLASSIFICATION	9.105622070078918E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999949321115497	WITHOUT_CLASSIFICATION	5.067888450333217E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999995571398521	WITHOUT_CLASSIFICATION	4.4286014781509143E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999996674359992	WITHOUT_CLASSIFICATION	3.3256400082292693E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999918706396	WITHOUT_CLASSIFICATION	8.129360475048517E-9	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999973685175766	WITHOUT_CLASSIFICATION	2.63148242340803E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999993352862893	WITHOUT_CLASSIFICATION	6.647137107374452E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999995571398521	WITHOUT_CLASSIFICATION	4.4286014781509143E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999994490196249	WITHOUT_CLASSIFICATION	5.509803750786489E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999412390822	WITHOUT_CLASSIFICATION	5.876091777235573E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999412390822	WITHOUT_CLASSIFICATION	5.876091777235573E-8	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999918706396	WITHOUT_CLASSIFICATION	8.129360475048517E-9	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999995381963669	WITHOUT_CLASSIFICATION	4.6180363308767904E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999994064665177	WITHOUT_CLASSIFICATION	5.935334823182439E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999994064665177	WITHOUT_CLASSIFICATION	5.935334823182439E-7	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999999873841113	WITHOUT_CLASSIFICATION	1.2615888730750435E-8	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.999999599931735	WITHOUT_CLASSIFICATION	4.0006826486064467E-7	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9998439859381251	WITHOUT_CLASSIFICATION	1.5601406187499593E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999983410012021	WITHOUT_CLASSIFICATION	1.6589987979979385E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999981062639349	WITHOUT_CLASSIFICATION	1.8937360650300043E-6	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999984711634807	WITHOUT_CLASSIFICATION	1.5288365191821761E-6	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999992662003256	WITHOUT_CLASSIFICATION	7.337996744453926E-7	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999935438057529	WITHOUT_CLASSIFICATION	6.456194247078581E-6	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999984676275202	WITHOUT_CLASSIFICATION	1.5323724798391307E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999944294546167	WITHOUT_CLASSIFICATION	5.570545383332036E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999833562309	WITHOUT_CLASSIFICATION	1.6643769178464534E-8	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999957452357131	WITHOUT_CLASSIFICATION	4.254764286976663E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9997695603193154	WITHOUT_CLASSIFICATION	2.304396806845487E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999992798963182	WITHOUT_CLASSIFICATION	7.201036817658073E-7	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999997896996263	WITHOUT_CLASSIFICATION	2.103003736962936E-6	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999990674896357	WITHOUT_CLASSIFICATION	9.325103641951119E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999994365475113	WITHOUT_CLASSIFICATION	5.634524886814377E-7	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999942143057444	WITHOUT_CLASSIFICATION	5.785694255582408E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999262822960039	WITHOUT_CLASSIFICATION	7.371770399616948E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999892223528898	WITHOUT_CLASSIFICATION	1.0777647110250452E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999992037451638	WITHOUT_CLASSIFICATION	7.962548363100339E-7	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999998252383665	WITHOUT_CLASSIFICATION	1.747616335097311E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999961846801593	WITHOUT_CLASSIFICATION	3.815319840773232E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999871976990623	WITHOUT_CLASSIFICATION	1.280230093771295E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999998653782719	WITHOUT_CLASSIFICATION	1.3462172820054616E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999960435557	WITHOUT_CLASSIFICATION	3.956444275653582E-9	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999874471848	WITHOUT_CLASSIFICATION	1.255281518681793E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999985619935582	WITHOUT_CLASSIFICATION	1.4380064418615958E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.999983372119102	WITHOUT_CLASSIFICATION	1.6627880897963703E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999993884653855	WITHOUT_CLASSIFICATION	6.115346145329789E-7	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999834875588156	WITHOUT_CLASSIFICATION	1.6512441184433794E-5	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999629448554	WITHOUT_CLASSIFICATION	3.7055144680963326E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999995255661422	WITHOUT_CLASSIFICATION	4.7443385767601685E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999988236505613	WITHOUT_CLASSIFICATION	1.176349438762819E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999966438403085	WITHOUT_CLASSIFICATION	3.3561596915118973E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999998432015419	WITHOUT_CLASSIFICATION	1.567984581786043E-7	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.999998632542559	WITHOUT_CLASSIFICATION	1.367457440996105E-6	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999972631499637	WITHOUT_CLASSIFICATION	2.7368500362942597E-6	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999986509265402	WITHOUT_CLASSIFICATION	1.3490734597819616E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999888223964	WITHOUT_CLASSIFICATION	1.1177603613308519E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999999789173201	WITHOUT_CLASSIFICATION	2.1082679960099677E-8	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999961876010852	WITHOUT_CLASSIFICATION	3.8123989146988807E-6	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9998671650391772	WITHOUT_CLASSIFICATION	1.3283496082296882E-4	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999980429744613	WITHOUT_CLASSIFICATION	1.957025538662386E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999997331738458	WITHOUT_CLASSIFICATION	2.668261541777203E-7	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999929293625824	WITHOUT_CLASSIFICATION	7.0706374175910505E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999712110954346	WITHOUT_CLASSIFICATION	2.8788904565350154E-5	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999901887950833	WITHOUT_CLASSIFICATION	9.81120491672973E-6	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999964282887991	WITHOUT_CLASSIFICATION	3.5717112009959032E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999993356492483	WITHOUT_CLASSIFICATION	6.643507517981401E-7	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999999563193539	WITHOUT_CLASSIFICATION	4.368064603445372E-8	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999981531798693	WITHOUT_CLASSIFICATION	1.8468201307177914E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999996211976263	WITHOUT_CLASSIFICATION	3.7880237367333117E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999975067954625	WITHOUT_CLASSIFICATION	2.493204537509139E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999969638841848	WITHOUT_CLASSIFICATION	3.036115815136581E-6	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999992953837304	WITHOUT_CLASSIFICATION	7.046162696258958E-7	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.999990765186545	WITHOUT_CLASSIFICATION	9.234813455080295E-6	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9999295746737638	WITHOUT_CLASSIFICATION	7.042532623623467E-5	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999844063699597	WITHOUT_CLASSIFICATION	1.5593630040350845E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999999268507741	WITHOUT_CLASSIFICATION	7.314922580212678E-8	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999894650359823	WITHOUT_CLASSIFICATION	1.0534964017634599E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999894650359823	WITHOUT_CLASSIFICATION	1.0534964017634599E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999966673038	WITHOUT_CLASSIFICATION	3.332696229815045E-9	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999997689278572	WITHOUT_CLASSIFICATION	2.3107214285433184E-7	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999913414807	WITHOUT_CLASSIFICATION	8.658519328114397E-9	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9998613083166017	WITHOUT_CLASSIFICATION	1.3869168339835627E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999999466718118	WITHOUT_CLASSIFICATION	5.3328188234757616E-8	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999999482285744	WITHOUT_CLASSIFICATION	5.177142558377487E-8	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999954260439702	WITHOUT_CLASSIFICATION	4.5739560298614454E-6	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.999998902897715	WITHOUT_CLASSIFICATION	1.0971022850848388E-6	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999704854341371	WITHOUT_CLASSIFICATION	2.951456586298999E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999999483392167	WITHOUT_CLASSIFICATION	5.166078327531097E-8	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999996948867034	WITHOUT_CLASSIFICATION	3.051132966019715E-7	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.999994330282477	WITHOUT_CLASSIFICATION	5.669717523061851E-6	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999999903511678	WITHOUT_CLASSIFICATION	9.648832167642516E-9	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999976130431726	WITHOUT_CLASSIFICATION	2.386956827546293E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999999747545436	WITHOUT_CLASSIFICATION	2.524545647740082E-8	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999983705000607	WITHOUT_CLASSIFICATION	1.6294999393590366E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999996944296449	WITHOUT_CLASSIFICATION	3.055703550962801E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999614369992	WITHOUT_CLASSIFICATION	3.8563000847358055E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999370344729188	WITHOUT_CLASSIFICATION	6.296552708108186E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999988970915683	WITHOUT_CLASSIFICATION	1.1029084316280642E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999442821686445	WITHOUT_CLASSIFICATION	5.571783135549681E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999442821686445	WITHOUT_CLASSIFICATION	5.571783135549681E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.999999550232064	WITHOUT_CLASSIFICATION	4.4976793600781723E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999988439797	WITHOUT_CLASSIFICATION	1.1560202993495411E-9	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.999999999781936	WITHOUT_CLASSIFICATION	2.1806404320646245E-10	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999988910294464	WITHOUT_CLASSIFICATION	1.1089705536011167E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998660547949727	WITHOUT_CLASSIFICATION	1.3394520502732477E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999940495848479	WITHOUT_CLASSIFICATION	5.950415152081546E-6	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999988210246605	WITHOUT_CLASSIFICATION	1.1789753394844015E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9998790823153532	WITHOUT_CLASSIFICATION	1.2091768464679344E-4	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.999970797051269	WITHOUT_CLASSIFICATION	2.9202948730962507E-5	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9997299769534013	WITHOUT_CLASSIFICATION	2.7002304659867786E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999999262686481	WITHOUT_CLASSIFICATION	7.37313519730963E-8	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999600974733882	WITHOUT_CLASSIFICATION	3.990252661190644E-5	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999996397337314	WITHOUT_CLASSIFICATION	3.602662686838287E-7	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.999999982165665	WITHOUT_CLASSIFICATION	1.783433500321786E-8	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999815397952	WITHOUT_CLASSIFICATION	1.8460204820607872E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999999857258591	WITHOUT_CLASSIFICATION	1.4274140844552804E-8	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999901833858839	WITHOUT_CLASSIFICATION	9.81661411605023E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999502272427973	WITHOUT_CLASSIFICATION	4.977275720276258E-5	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999996902490631	WITHOUT_CLASSIFICATION	3.0975093691093553E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999872097676389	WITHOUT_CLASSIFICATION	1.2790232361115012E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999974315308977	WITHOUT_CLASSIFICATION	2.568469102192643E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999908060022	WITHOUT_CLASSIFICATION	9.193997789634385E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999622280149502	WITHOUT_CLASSIFICATION	3.7771985049854295E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999999947773749	WITHOUT_CLASSIFICATION	5.2226250902656925E-9	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9998596541895083	WITHOUT_CLASSIFICATION	1.4034581049166562E-4	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999999920335966	WITHOUT_CLASSIFICATION	7.966403406734543E-9	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999999884665646	WITHOUT_CLASSIFICATION	1.1533435353059776E-8	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999994670607312	WITHOUT_CLASSIFICATION	5.329392687938352E-7	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999986508260079	WITHOUT_CLASSIFICATION	1.3491739921360653E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999992210864	WITHOUT_CLASSIFICATION	7.789135954281866E-10	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999979678878096	WITHOUT_CLASSIFICATION	2.0321121904969262E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999987408366825	WITHOUT_CLASSIFICATION	1.259163317511546E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999994135770128	WITHOUT_CLASSIFICATION	5.864229872188221E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999994135770128	WITHOUT_CLASSIFICATION	5.864229872188221E-7	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9994927996327096	WITHOUT_CLASSIFICATION	5.072003672902855E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.999977858308234	WITHOUT_CLASSIFICATION	2.214169176593411E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999999238117897	WITHOUT_CLASSIFICATION	7.618821029107002E-8	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999925196798902	WITHOUT_CLASSIFICATION	7.48032010972694E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999972747099	WITHOUT_CLASSIFICATION	2.725290102170883E-8	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999999459256722	WITHOUT_CLASSIFICATION	5.407432791122891E-8	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999971516510009	WITHOUT_CLASSIFICATION	2.848348999080403E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999966582533761	WITHOUT_CLASSIFICATION	3.341746623954071E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.99999837883889	WITHOUT_CLASSIFICATION	1.6211611100519246E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999999231325789	WITHOUT_CLASSIFICATION	7.686742107853937E-8	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999997687858168	WITHOUT_CLASSIFICATION	2.3121418334668815E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999998916738233	WITHOUT_CLASSIFICATION	1.0832617665143069E-7	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.999999939436568	WITHOUT_CLASSIFICATION	6.056343204878096E-8	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999995959482008	WITHOUT_CLASSIFICATION	4.040517993217557E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999999981207818	WITHOUT_CLASSIFICATION	1.8792181915353784E-9	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999999866143533	WITHOUT_CLASSIFICATION	1.3385646766152196E-8	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9998918392080101	WITHOUT_CLASSIFICATION	1.0816079198989764E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.999196297444465	WITHOUT_CLASSIFICATION	8.037025555350409E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999835574102	WITHOUT_CLASSIFICATION	1.6442589852187214E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999961962784725	WITHOUT_CLASSIFICATION	3.803721527468625E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999871976990623	WITHOUT_CLASSIFICATION	1.280230093771295E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999999695323399	WITHOUT_CLASSIFICATION	3.046766013893414E-8	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.999995225445198	WITHOUT_CLASSIFICATION	4.77455480197583E-6	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999986350055902	WITHOUT_CLASSIFICATION	1.3649944098691166E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9999075252294015	WITHOUT_CLASSIFICATION	9.247477059840796E-5	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999983721744858	WITHOUT_CLASSIFICATION	1.6278255141388816E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999992194386428	WITHOUT_CLASSIFICATION	7.805613571812031E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999980079878327	WITHOUT_CLASSIFICATION	1.992012167308879E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999993099375845	WITHOUT_CLASSIFICATION	6.900624155161191E-7	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999980372684396	WITHOUT_CLASSIFICATION	1.962731560343047E-6	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999986964334364	WITHOUT_CLASSIFICATION	1.3035665635413608E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999999944777913	WITHOUT_CLASSIFICATION	5.5222087410137755E-9	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999974348878024	WITHOUT_CLASSIFICATION	2.565112197696717E-6	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999994362573432	WITHOUT_CLASSIFICATION	5.637426567838121E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999914431828677	WITHOUT_CLASSIFICATION	8.556817132401313E-6	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999751969413541	WITHOUT_CLASSIFICATION	2.4803058645946067E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999998947494924	WITHOUT_CLASSIFICATION	1.0525050761538524E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999998503350029	WITHOUT_CLASSIFICATION	1.49664997038895E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999999345531059	WITHOUT_CLASSIFICATION	6.544689411055633E-8	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999653365802	WITHOUT_CLASSIFICATION	3.4663419747762534E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999963071385616	WITHOUT_CLASSIFICATION	3.6928614383996885E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999982623676853	WITHOUT_CLASSIFICATION	1.7376323146640173E-6	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9999945479600024	WITHOUT_CLASSIFICATION	5.452039997487371E-6	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999943446416655	WITHOUT_CLASSIFICATION	5.655358334547545E-6	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999893438508359	WITHOUT_CLASSIFICATION	1.0656149164130149E-5	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999998628535325	WITHOUT_CLASSIFICATION	1.3714646744143038E-7	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999950549419657	WITHOUT_CLASSIFICATION	4.945058034266194E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999977981833317	WITHOUT_CLASSIFICATION	2.201816668291627E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999892936776008	WITHOUT_CLASSIFICATION	1.0706322399194163E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999991473289989	WITHOUT_CLASSIFICATION	8.526710012242669E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999995947856275	WITHOUT_CLASSIFICATION	4.0521437248417726E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999974580117098	WITHOUT_CLASSIFICATION	2.5419882902823483E-6	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999990955920889	WITHOUT_CLASSIFICATION	9.04407911063928E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999993237954478	WITHOUT_CLASSIFICATION	6.762045523389326E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999996005419618	WITHOUT_CLASSIFICATION	3.99458038173079E-7	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999992223023518	WITHOUT_CLASSIFICATION	7.776976481611341E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999991037773217	WITHOUT_CLASSIFICATION	8.962226782777327E-7	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999999762608193	WITHOUT_CLASSIFICATION	2.3739180749523705E-8	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999998774116909	WITHOUT_CLASSIFICATION	1.2258830898868117E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999295940845	WITHOUT_CLASSIFICATION	7.04059154483543E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999295940845	WITHOUT_CLASSIFICATION	7.04059154483543E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999993684148704	WITHOUT_CLASSIFICATION	6.315851297183765E-7	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999779266960053	WITHOUT_CLASSIFICATION	2.2073303994826633E-5	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999802418056789	WITHOUT_CLASSIFICATION	1.975819432098534E-5	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999985124922339	WITHOUT_CLASSIFICATION	1.4875077661054382E-6	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999998740433532	WITHOUT_CLASSIFICATION	1.2595664672865804E-7	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999880064242563	WITHOUT_CLASSIFICATION	1.1993575743601866E-5	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999592636676738	WITHOUT_CLASSIFICATION	4.0736332326154996E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999995273119053	WITHOUT_CLASSIFICATION	4.7268809472101874E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999995273119053	WITHOUT_CLASSIFICATION	4.7268809472101874E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999883678039	WITHOUT_CLASSIFICATION	1.1632196080768209E-8	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.999972388084156	WITHOUT_CLASSIFICATION	2.7611915843921914E-5	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.999999659033778	WITHOUT_CLASSIFICATION	3.409662220087353E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999999403416046	WITHOUT_CLASSIFICATION	5.965839546796341E-8	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999980548480454	WITHOUT_CLASSIFICATION	1.945151954583546E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997677214538	WITHOUT_CLASSIFICATION	2.3227854608259117E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999998423158563	WITHOUT_CLASSIFICATION	1.5768414373058224E-7	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999997780786791	WITHOUT_CLASSIFICATION	2.219213207871894E-7	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999999318297931	WITHOUT_CLASSIFICATION	6.817020692036845E-8	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999993208971985	WITHOUT_CLASSIFICATION	6.791028015475136E-7	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999995824371223	WITHOUT_CLASSIFICATION	4.175628776786782E-7	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999990919847956	WITHOUT_CLASSIFICATION	9.080152044492921E-7	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999999179596089	WITHOUT_CLASSIFICATION	8.204039108724187E-8	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999403480898387	WITHOUT_CLASSIFICATION	5.965191016136414E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999712568240461	WITHOUT_CLASSIFICATION	2.8743175953880547E-5	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999566035228343	WITHOUT_CLASSIFICATION	4.339647716577199E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999365019625468	WITHOUT_CLASSIFICATION	6.349803745325161E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999956476917169	WITHOUT_CLASSIFICATION	4.352308283135116E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999906606876483	WITHOUT_CLASSIFICATION	9.339312351659682E-6	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.998870544664807	WITHOUT_CLASSIFICATION	0.0011294553351931015	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999992292470159	WITHOUT_CLASSIFICATION	7.707529840509823E-7	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999999593459314	WITHOUT_CLASSIFICATION	4.0654068575772416E-8	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999894750975246	WITHOUT_CLASSIFICATION	1.0524902475349962E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999998146072898	WITHOUT_CLASSIFICATION	1.8539271020899887E-7	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999998752160455	WITHOUT_CLASSIFICATION	1.2478395454108603E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999974816242523	WITHOUT_CLASSIFICATION	2.5183757476783553E-6	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9998921845416396	WITHOUT_CLASSIFICATION	1.0781545836035478E-4	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999985247817152	WITHOUT_CLASSIFICATION	1.4752182847457993E-6	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.999999858008987	WITHOUT_CLASSIFICATION	1.4199101294685182E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9991017174726604	WITHOUT_CLASSIFICATION	8.982825273396325E-4	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.999999622966043	WITHOUT_CLASSIFICATION	3.7703395701728216E-7	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999973376697117	WITHOUT_CLASSIFICATION	2.662330288348145E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9982519253160684	WITHOUT_CLASSIFICATION	0.001748074683931615	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999988483943453	WITHOUT_CLASSIFICATION	1.1516056547413517E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.999999663196846	WITHOUT_CLASSIFICATION	3.3680315399069747E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999761478234173	WITHOUT_CLASSIFICATION	2.385217658278811E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999882632127755	WITHOUT_CLASSIFICATION	1.173678722467883E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999989983728739	WITHOUT_CLASSIFICATION	1.0016271261817083E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999801968755457	WITHOUT_CLASSIFICATION	1.980312445423767E-5	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999988784983529	WITHOUT_CLASSIFICATION	1.1215016470978174E-6	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999996416743681	WITHOUT_CLASSIFICATION	3.583256319493484E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.999931807720651	WITHOUT_CLASSIFICATION	6.819227934895129E-5	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999784233078262	WITHOUT_CLASSIFICATION	2.1576692173845917E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999816489422753	WITHOUT_CLASSIFICATION	1.8351057724760872E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.999999545734964	WITHOUT_CLASSIFICATION	4.5426503599774006E-7	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9994789648375586	WITHOUT_CLASSIFICATION	5.210351624414005E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999994566648339	WITHOUT_CLASSIFICATION	5.433351661770538E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999908060022	WITHOUT_CLASSIFICATION	9.193997789634385E-8	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999994566648339	WITHOUT_CLASSIFICATION	5.433351661770538E-7	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999955705436337	WITHOUT_CLASSIFICATION	4.429456366173942E-6	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999582137477837	WITHOUT_CLASSIFICATION	4.178625221633605E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999476378293	WITHOUT_CLASSIFICATION	5.236217071741304E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999913508598215	WITHOUT_CLASSIFICATION	8.64914017849009E-6	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9971011893475802	WITHOUT_CLASSIFICATION	0.0028988106524199427	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9998273700919502	WITHOUT_CLASSIFICATION	1.7262990804981057E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999294377749242	WITHOUT_CLASSIFICATION	7.056222507583986E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999909669612497	WITHOUT_CLASSIFICATION	9.03303875038368E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999999625175444	WITHOUT_CLASSIFICATION	3.7482455599339404E-8	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999989819911911	WITHOUT_CLASSIFICATION	1.0180088088993732E-6	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.999999834669717	WITHOUT_CLASSIFICATION	1.653302829830708E-7	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999996120206375	WITHOUT_CLASSIFICATION	3.8797936249797493E-7	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999883233329795	WITHOUT_CLASSIFICATION	1.1676667020531424E-5	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999983024082486	WITHOUT_CLASSIFICATION	1.6975917513923163E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999983664178632	WITHOUT_CLASSIFICATION	1.6335821367803563E-6	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999999412476465	WITHOUT_CLASSIFICATION	5.875235342151232E-8	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999984976476628	WITHOUT_CLASSIFICATION	1.5023523372181125E-6	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999218231369846	WITHOUT_CLASSIFICATION	7.817686301528717E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999709469011006	WITHOUT_CLASSIFICATION	2.9053098899517164E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999939818839056	WITHOUT_CLASSIFICATION	6.018116094395863E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999852309617089	WITHOUT_CLASSIFICATION	1.4769038291067135E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999974798007	WITHOUT_CLASSIFICATION	2.520199294521979E-9	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999998909066407	WITHOUT_CLASSIFICATION	1.090933594505137E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999798470993	WITHOUT_CLASSIFICATION	2.0152900661529112E-8	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999991438191	WITHOUT_CLASSIFICATION	8.561809421633015E-10	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999691665363644	WITHOUT_CLASSIFICATION	3.0833463635622015E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9998815415700356	WITHOUT_CLASSIFICATION	1.1845842996442651E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999977003639058	WITHOUT_CLASSIFICATION	2.2996360942857934E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999995932151903	WITHOUT_CLASSIFICATION	4.0678480981870856E-7	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9999789149700955	WITHOUT_CLASSIFICATION	2.1085029904551118E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999925360109096	WITHOUT_CLASSIFICATION	7.4639890903042475E-6	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9998323976086808	WITHOUT_CLASSIFICATION	1.6760239131922565E-4	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.997149999286271	WITHOUT_CLASSIFICATION	0.0028500007137290673	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999854293741	WITHOUT_CLASSIFICATION	1.457062595166611E-8	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999998025710479	WITHOUT_CLASSIFICATION	1.9742895203605282E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999999460247	WITHOUT_CLASSIFICATION	5.3975207574425136E-11	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999999534468288	WITHOUT_CLASSIFICATION	4.65531711269969E-8	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999999337228556	WITHOUT_CLASSIFICATION	6.627714437080124E-8	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999999337228556	WITHOUT_CLASSIFICATION	6.627714437080124E-8	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9991497300462027	WITHOUT_CLASSIFICATION	8.502699537972473E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.999973033545194	WITHOUT_CLASSIFICATION	2.696645480604026E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999818526767007	WITHOUT_CLASSIFICATION	1.814732329922463E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999972564937	WITHOUT_CLASSIFICATION	2.74350642734079E-9	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999998812402136	WITHOUT_CLASSIFICATION	1.1875978644107355E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999880853737	WITHOUT_CLASSIFICATION	1.1914626263096853E-8	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999754624106566	WITHOUT_CLASSIFICATION	2.4537589343485433E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999979125435	WITHOUT_CLASSIFICATION	2.0874565035412457E-9	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.999999445992585	WITHOUT_CLASSIFICATION	5.540074149985176E-7	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999944698569232	WITHOUT_CLASSIFICATION	5.530143076723509E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9997772215292839	WITHOUT_CLASSIFICATION	2.2277847071618242E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9998722461144475	WITHOUT_CLASSIFICATION	1.2775388555256043E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999993790089575	WITHOUT_CLASSIFICATION	6.209910424549652E-7	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9922916666442267	WITHOUT_CLASSIFICATION	0.007708333355773182	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.999997807749377	WITHOUT_CLASSIFICATION	2.1922506230446085E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999998599200972	WITHOUT_CLASSIFICATION	1.400799028561943E-7	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999994561235511	WITHOUT_CLASSIFICATION	5.438764489542417E-7	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999676471857445	WITHOUT_CLASSIFICATION	3.2352814255500487E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999610907834457	WITHOUT_CLASSIFICATION	3.8909216554210094E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999994691183688	WITHOUT_CLASSIFICATION	5.30881631208446E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999991261214491	WITHOUT_CLASSIFICATION	8.738785509694099E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998484881263	WITHOUT_CLASSIFICATION	1.5151187369497254E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9908794774188783	WITHOUT_CLASSIFICATION	0.009120522581121627	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9995813577676709	WITHOUT_CLASSIFICATION	4.1864223232913726E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9994940628589883	WITHOUT_CLASSIFICATION	5.059371410115774E-4	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999994268753879	WITHOUT_CLASSIFICATION	5.731246120453745E-7	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9992162608622656	WITHOUT_CLASSIFICATION	7.837391377344917E-4	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999269780139702	WITHOUT_CLASSIFICATION	7.302198602968133E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999983124444565	WITHOUT_CLASSIFICATION	1.687555543484025E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999214469673883	WITHOUT_CLASSIFICATION	7.855303261171004E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999916664216417	WITHOUT_CLASSIFICATION	8.333578358338658E-6	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999997329438097	WITHOUT_CLASSIFICATION	2.670561903250725E-7	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.999994210752717	WITHOUT_CLASSIFICATION	5.78924728304124E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999973230161	WITHOUT_CLASSIFICATION	2.676983880072584E-9	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999749819346396	WITHOUT_CLASSIFICATION	2.501806536038207E-5	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999999751888121	WITHOUT_CLASSIFICATION	2.4811187864793676E-8	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999960442192048	WITHOUT_CLASSIFICATION	3.955780795150835E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999960442192048	WITHOUT_CLASSIFICATION	3.955780795150835E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999999494315297	WITHOUT_CLASSIFICATION	5.056847027664693E-8	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999914502601712	WITHOUT_CLASSIFICATION	8.549739828832717E-6	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.999997817667421	WITHOUT_CLASSIFICATION	2.1823325789342948E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999952820435	WITHOUT_CLASSIFICATION	4.71795640150793E-9	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999999403273995	WITHOUT_CLASSIFICATION	5.967260047935965E-8	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999988198014937	WITHOUT_CLASSIFICATION	1.1801985061907773E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999996042907171	WITHOUT_CLASSIFICATION	3.957092828649419E-7	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999998898650893	WITHOUT_CLASSIFICATION	1.1013491075887667E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999986244290051	WITHOUT_CLASSIFICATION	1.3755709948526837E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999998115447207	WITHOUT_CLASSIFICATION	1.884552792981207E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999997703904734	WITHOUT_CLASSIFICATION	2.296095266736061E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9998859021239241	WITHOUT_CLASSIFICATION	1.1409787607586328E-4	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999970567942392	WITHOUT_CLASSIFICATION	2.9432057606736616E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.999999363690332	WITHOUT_CLASSIFICATION	6.363096679512155E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999998474469474	WITHOUT_CLASSIFICATION	1.5255305258377752E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999998114526857	WITHOUT_CLASSIFICATION	1.885473144039534E-7	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999845129402224	WITHOUT_CLASSIFICATION	1.548705977751658E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999990222776586	WITHOUT_CLASSIFICATION	9.7772234140959E-7	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999876584367827	WITHOUT_CLASSIFICATION	1.2341563217364996E-5	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999989848169434	WITHOUT_CLASSIFICATION	1.0151830565716625E-6	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999999626234962	WITHOUT_CLASSIFICATION	3.7376503701758586E-8	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999772812327458	WITHOUT_CLASSIFICATION	2.271876725421811E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999980318458089	WITHOUT_CLASSIFICATION	1.968154191115013E-6	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999935329074106	WITHOUT_CLASSIFICATION	6.467092589406867E-6	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999974673333165	WITHOUT_CLASSIFICATION	2.5326666834351364E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999982003971019	WITHOUT_CLASSIFICATION	1.7996028981648735E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999999638189574	WITHOUT_CLASSIFICATION	3.618104251700695E-8	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999892581733073	WITHOUT_CLASSIFICATION	1.074182669271882E-5	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999796254636277	WITHOUT_CLASSIFICATION	2.0374536372265527E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999965595784832	WITHOUT_CLASSIFICATION	3.4404215167573684E-6	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999993726395767	WITHOUT_CLASSIFICATION	6.273604234022704E-7	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999999723813144	WITHOUT_CLASSIFICATION	2.7618685487666715E-8	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999886536484186	WITHOUT_CLASSIFICATION	1.1346351581265748E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.999996884231416	WITHOUT_CLASSIFICATION	3.115768583948441E-6	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999934811763703	WITHOUT_CLASSIFICATION	6.518823629655115E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999999143247148	WITHOUT_CLASSIFICATION	8.567528511784934E-8	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999945921839875	WITHOUT_CLASSIFICATION	5.407816012475677E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999976538400596	WITHOUT_CLASSIFICATION	2.3461599404282353E-6	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999974568960814	WITHOUT_CLASSIFICATION	2.5431039184590955E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999997611005307	WITHOUT_CLASSIFICATION	2.3889946930562477E-7	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999999456137655	WITHOUT_CLASSIFICATION	5.438623455665008E-8	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999996723379443	WITHOUT_CLASSIFICATION	3.2766205580317326E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995547721203	WITHOUT_CLASSIFICATION	4.452278797218708E-7	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999818116548981	WITHOUT_CLASSIFICATION	1.818834510189376E-5	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999802456755	WITHOUT_CLASSIFICATION	1.9754324556056355E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999858428677518	WITHOUT_CLASSIFICATION	1.4157132248264633E-5	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999944299944308	WITHOUT_CLASSIFICATION	5.570005569229151E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999999288418265	WITHOUT_CLASSIFICATION	7.115817344376629E-8	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999991575391293	WITHOUT_CLASSIFICATION	8.424608707865906E-7	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999999809442449	WITHOUT_CLASSIFICATION	1.9055755115883736E-8	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999998297586906	WITHOUT_CLASSIFICATION	1.7024130937425307E-7	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999998646576042	WITHOUT_CLASSIFICATION	1.3534239592951416E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999997982908653	WITHOUT_CLASSIFICATION	2.0170913466795992E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999999110709492	WITHOUT_CLASSIFICATION	8.892905087910049E-8	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999999478824504	WITHOUT_CLASSIFICATION	5.211754962012939E-8	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999987008830485	WITHOUT_CLASSIFICATION	1.2991169514966742E-6	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999999129345383	WITHOUT_CLASSIFICATION	8.70654616694778E-8	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999997349096065	WITHOUT_CLASSIFICATION	2.6509039355043335E-7	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999999363190215	WITHOUT_CLASSIFICATION	6.368097844259604E-8	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999981898012493	WITHOUT_CLASSIFICATION	1.8101987507255216E-6	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9991923680905435	WITHOUT_CLASSIFICATION	8.07631909456483E-4	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999999572900284	WITHOUT_CLASSIFICATION	4.270997162724266E-8	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999926449757168	WITHOUT_CLASSIFICATION	7.3550242831772925E-6	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999998692147852	WITHOUT_CLASSIFICATION	1.3078521473113462E-7	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9998822644541714	WITHOUT_CLASSIFICATION	1.1773554582863733E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999996479365544	WITHOUT_CLASSIFICATION	3.520634456648277E-7	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9983656227533244	WITHOUT_CLASSIFICATION	0.0016343772466755314	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999999856437	WITHOUT_CLASSIFICATION	1.4356332267115732E-11	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999999250521565	WITHOUT_CLASSIFICATION	7.494784344493652E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998620218457	WITHOUT_CLASSIFICATION	1.3797815429635483E-7	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999487132359	WITHOUT_CLASSIFICATION	5.128676420036131E-8	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999978397972188	WITHOUT_CLASSIFICATION	2.160202781236678E-6	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.999991955058632	WITHOUT_CLASSIFICATION	8.044941367941279E-6	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999359837324	WITHOUT_CLASSIFICATION	6.401626759874733E-8	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999999359837324	WITHOUT_CLASSIFICATION	6.401626759874733E-8	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999984797374923	WITHOUT_CLASSIFICATION	1.5202625076471062E-6	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999898010989935	WITHOUT_CLASSIFICATION	1.0198901006610832E-5	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999970358052239	WITHOUT_CLASSIFICATION	2.964194775970091E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999994771358434	WITHOUT_CLASSIFICATION	5.228641567630076E-7	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999997418855474	WITHOUT_CLASSIFICATION	2.5811445263727157E-7	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999919310310238	WITHOUT_CLASSIFICATION	8.068968976209211E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999998963320218	WITHOUT_CLASSIFICATION	1.0366797822151058E-7	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999999633381847	WITHOUT_CLASSIFICATION	3.6661815107910355E-8	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999372045411247	WITHOUT_CLASSIFICATION	6.279545887533791E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999986965419344	WITHOUT_CLASSIFICATION	1.3034580656221132E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999961017496234	WITHOUT_CLASSIFICATION	3.898250376587501E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999999361908405	WITHOUT_CLASSIFICATION	6.380915952279817E-8	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999999224760407	WITHOUT_CLASSIFICATION	7.752395929744671E-8	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999995947667774	WITHOUT_CLASSIFICATION	4.0523322255377386E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999980809696756	WITHOUT_CLASSIFICATION	1.9190303244264646E-6	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999996232612987	WITHOUT_CLASSIFICATION	3.7673870128881237E-7	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999998533354983	WITHOUT_CLASSIFICATION	1.4666450176958233E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999998120909758	WITHOUT_CLASSIFICATION	1.8790902423890495E-7	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999999063994764	WITHOUT_CLASSIFICATION	9.36005235320925E-8	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999998477723467	WITHOUT_CLASSIFICATION	1.5222765318879977E-7	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999956030438539	WITHOUT_CLASSIFICATION	4.3969561459903315E-6	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999989113426597	WITHOUT_CLASSIFICATION	1.088657340255585E-6	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999994993849287	WITHOUT_CLASSIFICATION	5.006150713386768E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.999998562649339	WITHOUT_CLASSIFICATION	1.4373506611256093E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999994182673184	WITHOUT_CLASSIFICATION	5.81732681602287E-7	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999997625846114	WITHOUT_CLASSIFICATION	2.374153885674979E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999998644802237	WITHOUT_CLASSIFICATION	1.355197763131926E-7	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.999998797928161	WITHOUT_CLASSIFICATION	1.2020718389170218E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999999523968067	WITHOUT_CLASSIFICATION	4.7603193363131996E-8	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999999886603458	WITHOUT_CLASSIFICATION	1.1339654158880253E-8	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999996575936821	WITHOUT_CLASSIFICATION	3.4240631791801085E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.99999056486338	WITHOUT_CLASSIFICATION	9.435136620036289E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999931417087	WITHOUT_CLASSIFICATION	6.858291216289793E-9	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999998208022116	WITHOUT_CLASSIFICATION	1.7919778836009664E-7	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.999997940328872	WITHOUT_CLASSIFICATION	2.0596711279694694E-6	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999998620994701	WITHOUT_CLASSIFICATION	1.3790052978634796E-7	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999999745356087	WITHOUT_CLASSIFICATION	2.5464391310099666E-8	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999996828280986	WITHOUT_CLASSIFICATION	3.1717190146557154E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999950405984	WITHOUT_CLASSIFICATION	4.959401551044085E-9	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.999993313278612	WITHOUT_CLASSIFICATION	6.686721387963493E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.999997114263264	WITHOUT_CLASSIFICATION	2.8857367359763716E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.999999997361263	WITHOUT_CLASSIFICATION	2.6387368733512667E-9	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999985589578256	WITHOUT_CLASSIFICATION	1.441042174319144E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999961822229	WITHOUT_CLASSIFICATION	3.817777152750607E-9	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999999845232019	WITHOUT_CLASSIFICATION	1.54767980769438E-8	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999901457401097	WITHOUT_CLASSIFICATION	9.854259890295195E-6	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999473372012136	WITHOUT_CLASSIFICATION	5.266279878640422E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999984388222396	WITHOUT_CLASSIFICATION	1.5611777603220512E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.999996416909285	WITHOUT_CLASSIFICATION	3.583090715003713E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999972365611839	WITHOUT_CLASSIFICATION	2.763438816127511E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999972712754955	WITHOUT_CLASSIFICATION	2.728724504347807E-6	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999966674879287	WITHOUT_CLASSIFICATION	3.3325120711651783E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.586294411506573	WITHOUT_CLASSIFICATION	0.4137055884934269	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999971317105164	WITHOUT_CLASSIFICATION	2.8682894836047754E-6	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9982049569517191	WITHOUT_CLASSIFICATION	0.0017950430482809759	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.999999896260496	WITHOUT_CLASSIFICATION	1.0373950395805572E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999999463596313	WITHOUT_CLASSIFICATION	5.364036861200002E-8	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999991049111308	WITHOUT_CLASSIFICATION	8.950888691397679E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999905182321149	WITHOUT_CLASSIFICATION	9.481767885117466E-6	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999996547054735	WITHOUT_CLASSIFICATION	3.452945266180325E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999912640937164	WITHOUT_CLASSIFICATION	8.735906283610107E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999859393612505	WITHOUT_CLASSIFICATION	1.406063874951627E-5	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999999761625924	WITHOUT_CLASSIFICATION	2.3837407625359936E-8	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999984926442305	WITHOUT_CLASSIFICATION	1.5073557695610366E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.999999818287722	WITHOUT_CLASSIFICATION	1.8171227803814413E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9998175714343568	WITHOUT_CLASSIFICATION	1.8242856564325776E-4	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999999552767919	WITHOUT_CLASSIFICATION	4.47232082642069E-8	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999999217315408	WITHOUT_CLASSIFICATION	7.826845925293282E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999991717887436	WITHOUT_CLASSIFICATION	8.282112562618483E-7	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999999122966553	WITHOUT_CLASSIFICATION	8.770334471037865E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999999979775854	WITHOUT_CLASSIFICATION	2.0224144625970976E-9	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.99999979337421	WITHOUT_CLASSIFICATION	2.0662579008526881E-7	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999999855896472	WITHOUT_CLASSIFICATION	1.4410352827117963E-8	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999999416992378	WITHOUT_CLASSIFICATION	5.8300762252686244E-8	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999997745190835	WITHOUT_CLASSIFICATION	2.2548091644872004E-7	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999992379247784	WITHOUT_CLASSIFICATION	7.620752215633286E-7	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.999999547687658	WITHOUT_CLASSIFICATION	4.5231234195230355E-7	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999999711782177	WITHOUT_CLASSIFICATION	2.882178230920095E-8	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999513837469	WITHOUT_CLASSIFICATION	4.861625306710588E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.999999768767984	WITHOUT_CLASSIFICATION	2.312320159905132E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9544548836188383	WITHOUT_CLASSIFICATION	0.04554511638116158	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999984626060892	WITHOUT_CLASSIFICATION	1.537393910854191E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999991376460383	WITHOUT_CLASSIFICATION	8.623539615465392E-7	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999972788218	WITHOUT_CLASSIFICATION	2.721178174625616E-9	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999994043682897	WITHOUT_CLASSIFICATION	5.956317102590723E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.999999969277326	WITHOUT_CLASSIFICATION	3.0722673903331225E-8	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999851336674218	WITHOUT_CLASSIFICATION	1.4866332578248054E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999999753768666	WITHOUT_CLASSIFICATION	2.4623133389135066E-8	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999981674755021	WITHOUT_CLASSIFICATION	1.8325244979366197E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999994517457	WITHOUT_CLASSIFICATION	5.482543358427629E-10	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999998954022278	WITHOUT_CLASSIFICATION	1.0459777216716868E-7	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999985132502731	WITHOUT_CLASSIFICATION	1.4867497268381159E-6	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.999999696482936	WITHOUT_CLASSIFICATION	3.0351706405997427E-7	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.999999838493547	WITHOUT_CLASSIFICATION	1.615064529996319E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999988940979999	WITHOUT_CLASSIFICATION	1.105902000094557E-6	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999999974306313	WITHOUT_CLASSIFICATION	2.56936873952704E-9	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.999999987512	WITHOUT_CLASSIFICATION	1.248800007534318E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999926961429418	WITHOUT_CLASSIFICATION	7.303857058166204E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999999840469295	WITHOUT_CLASSIFICATION	1.595307055223977E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999999931710559	WITHOUT_CLASSIFICATION	6.828944098796125E-8	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999998725027796	WITHOUT_CLASSIFICATION	1.274972204392186E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999998790120909	WITHOUT_CLASSIFICATION	1.209879092115004E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999958707129227	WITHOUT_CLASSIFICATION	4.1292870772347535E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.999997103502289	WITHOUT_CLASSIFICATION	2.8964977109673045E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999997608355832	WITHOUT_CLASSIFICATION	2.391644168197754E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999993080135722	WITHOUT_CLASSIFICATION	6.919864278076547E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999984004485993	WITHOUT_CLASSIFICATION	1.5995514006489314E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999997608355832	WITHOUT_CLASSIFICATION	2.391644168197754E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999993080135722	WITHOUT_CLASSIFICATION	6.919864278076547E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999965552508138	WITHOUT_CLASSIFICATION	3.444749186200172E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998643483547	WITHOUT_CLASSIFICATION	1.356516453104544E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999985599593503	WITHOUT_CLASSIFICATION	1.4400406496792115E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.999997386062938	WITHOUT_CLASSIFICATION	2.6139370620664866E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999968140057566	WITHOUT_CLASSIFICATION	3.185994243301466E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999986877241634	WITHOUT_CLASSIFICATION	1.312275836466996E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999995910562718	WITHOUT_CLASSIFICATION	4.089437282036497E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999985998394733	WITHOUT_CLASSIFICATION	1.4001605267627753E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999295052779	WITHOUT_CLASSIFICATION	7.049472207672748E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999740489408	WITHOUT_CLASSIFICATION	2.5951059113030708E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.999980413554194	WITHOUT_CLASSIFICATION	1.9586445806015803E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999999931710559	WITHOUT_CLASSIFICATION	6.828944098796125E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999999931710559	WITHOUT_CLASSIFICATION	6.828944098796125E-8	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999993080135722	WITHOUT_CLASSIFICATION	6.919864278076547E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999985599593503	WITHOUT_CLASSIFICATION	1.4400406496792115E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999968140057566	WITHOUT_CLASSIFICATION	3.185994243301466E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995067286506	WITHOUT_CLASSIFICATION	4.932713493452136E-7	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999981599203973	WITHOUT_CLASSIFICATION	1.8400796026084086E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999939872420491	WITHOUT_CLASSIFICATION	6.01275795091382E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999999705105026	WITHOUT_CLASSIFICATION	2.94894974843461E-8	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999965493212252	WITHOUT_CLASSIFICATION	3.450678774850343E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999965493212252	WITHOUT_CLASSIFICATION	3.450678774850343E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999981494905699	WITHOUT_CLASSIFICATION	1.8505094301155107E-6	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999967471912982	WITHOUT_CLASSIFICATION	3.25280870179985E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999996039985986	WITHOUT_CLASSIFICATION	3.960014014165946E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994908097626	WITHOUT_CLASSIFICATION	5.091902374993109E-7	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999998466544651	WITHOUT_CLASSIFICATION	1.533455348794801E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999983130493294	WITHOUT_CLASSIFICATION	1.6869506706059183E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999912055740946	WITHOUT_CLASSIFICATION	8.794425905473704E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999997608355832	WITHOUT_CLASSIFICATION	2.391644168197754E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999998207548599	WITHOUT_CLASSIFICATION	1.7924514007310812E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998643483547	WITHOUT_CLASSIFICATION	1.356516453104544E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999986877241634	WITHOUT_CLASSIFICATION	1.312275836466996E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999995910562718	WITHOUT_CLASSIFICATION	4.089437282036497E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999995910562718	WITHOUT_CLASSIFICATION	4.089437282036497E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999295052779	WITHOUT_CLASSIFICATION	7.049472207672748E-8	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999999740489408	WITHOUT_CLASSIFICATION	2.5951059113030708E-8	DEFECT
// type	WITHOUT_CLASSIFICATION	0.999980413554194	WITHOUT_CLASSIFICATION	1.9586445806015803E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999960306417838	WITHOUT_CLASSIFICATION	3.96935821620866E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999991096071933	WITHOUT_CLASSIFICATION	8.903928066248773E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999545291846257	WITHOUT_CLASSIFICATION	4.547081537442473E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999999344282827	WITHOUT_CLASSIFICATION	6.557171728543458E-8	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999971113622123	WITHOUT_CLASSIFICATION	2.8886377878795087E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999972044437213	WITHOUT_CLASSIFICATION	2.7955562787860597E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999984205602569	WITHOUT_CLASSIFICATION	1.5794397431354858E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999993714446304	WITHOUT_CLASSIFICATION	6.285553696130185E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999999036675572	WITHOUT_CLASSIFICATION	9.63324428121123E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999985599593503	WITHOUT_CLASSIFICATION	1.4400406496792115E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999995910562718	WITHOUT_CLASSIFICATION	4.089437282036497E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999295052779	WITHOUT_CLASSIFICATION	7.049472207672748E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999999295052779	WITHOUT_CLASSIFICATION	7.049472207672748E-8	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995067286506	WITHOUT_CLASSIFICATION	4.932713493452136E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999981494905699	WITHOUT_CLASSIFICATION	1.8505094301155107E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999981494905699	WITHOUT_CLASSIFICATION	1.8505094301155107E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999996039985986	WITHOUT_CLASSIFICATION	3.960014014165946E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.999999751327397	WITHOUT_CLASSIFICATION	2.4867260293031336E-7	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999986773269693	WITHOUT_CLASSIFICATION	1.3226730307005772E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999983061844134	WITHOUT_CLASSIFICATION	1.6938155865184055E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999995823292166	WITHOUT_CLASSIFICATION	4.1767078349747837E-7	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999995279409195	WITHOUT_CLASSIFICATION	4.720590804663516E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999997880708256	WITHOUT_CLASSIFICATION	2.119291743747564E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999988640247213	WITHOUT_CLASSIFICATION	1.1359752786336161E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999990997252323	WITHOUT_CLASSIFICATION	9.002747677785146E-7	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999998333402468	WITHOUT_CLASSIFICATION	1.6665975323967164E-7	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999997929774703	WITHOUT_CLASSIFICATION	2.0702252960089266E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999968090205892	WITHOUT_CLASSIFICATION	3.190979410892286E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999984733838011	WITHOUT_CLASSIFICATION	1.5266161988718891E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.999999891224385	WITHOUT_CLASSIFICATION	1.0877561495968942E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999995518885143	WITHOUT_CLASSIFICATION	4.4811148566975255E-7	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999998660724877	WITHOUT_CLASSIFICATION	1.3392751241107211E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999950839042697	WITHOUT_CLASSIFICATION	4.916095730336163E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999999318512693	WITHOUT_CLASSIFICATION	6.814873064636678E-8	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999999538881308	WITHOUT_CLASSIFICATION	4.61118692868716E-8	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999997298343755	WITHOUT_CLASSIFICATION	2.7016562458736753E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999998412098187	WITHOUT_CLASSIFICATION	1.5879018140655925E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999999638174536	WITHOUT_CLASSIFICATION	3.618254645261819E-8	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999987572949421	WITHOUT_CLASSIFICATION	1.2427050578678266E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998870413843	WITHOUT_CLASSIFICATION	1.1295861574937057E-7	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999714774631	WITHOUT_CLASSIFICATION	2.852253686129045E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999025302711233	WITHOUT_CLASSIFICATION	9.746972887668374E-5	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999982055035551	WITHOUT_CLASSIFICATION	1.7944964447840854E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999976925145864	WITHOUT_CLASSIFICATION	2.3074854136448257E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999873513697364	WITHOUT_CLASSIFICATION	1.2648630263736268E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999910810381717	WITHOUT_CLASSIFICATION	8.918961828351877E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999990821195727	WITHOUT_CLASSIFICATION	9.178804273352314E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.999999968690484	WITHOUT_CLASSIFICATION	3.13095160379402E-8	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999960349927559	WITHOUT_CLASSIFICATION	3.965007244121227E-6	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.999999598628166	WITHOUT_CLASSIFICATION	4.013718340320223E-7	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999998355487013	WITHOUT_CLASSIFICATION	1.6445129862143858E-7	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999986809739733	WITHOUT_CLASSIFICATION	1.3190260267932963E-6	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999995032195328	WITHOUT_CLASSIFICATION	4.967804672166731E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999992765972875	WITHOUT_CLASSIFICATION	7.234027125449486E-7	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999959802977307	WITHOUT_CLASSIFICATION	4.019702269226102E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999999525753273	WITHOUT_CLASSIFICATION	4.742467277949088E-8	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999888144186	WITHOUT_CLASSIFICATION	1.1185581228864035E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999956091464084	WITHOUT_CLASSIFICATION	4.390853591511809E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999995934323843	WITHOUT_CLASSIFICATION	4.0656761565708957E-7	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999925367417	WITHOUT_CLASSIFICATION	7.463258351191253E-9	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999999419765887	WITHOUT_CLASSIFICATION	5.802341122870155E-8	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999813302259204	WITHOUT_CLASSIFICATION	1.8669774079651872E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999970645088336	WITHOUT_CLASSIFICATION	2.9354911663626064E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9997333900343716	WITHOUT_CLASSIFICATION	2.666099656284909E-4	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999926800990196	WITHOUT_CLASSIFICATION	7.319900980413452E-6	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999953409359575	WITHOUT_CLASSIFICATION	4.659064042440233E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996303060886	WITHOUT_CLASSIFICATION	3.696939114236566E-7	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999992936526169	WITHOUT_CLASSIFICATION	7.06347383027939E-7	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999999525325829	WITHOUT_CLASSIFICATION	4.74674171046694E-8	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999991375864403	WITHOUT_CLASSIFICATION	8.624135597824424E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999995390598992	WITHOUT_CLASSIFICATION	4.609401008213978E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968319371435	WITHOUT_CLASSIFICATION	3.1680628565659003E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968319371435	WITHOUT_CLASSIFICATION	3.1680628565659003E-6	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999992010455737	WITHOUT_CLASSIFICATION	7.989544263874766E-7	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999952932985143	WITHOUT_CLASSIFICATION	4.706701485598889E-6	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999992834813862	WITHOUT_CLASSIFICATION	7.165186137907031E-7	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999996603500831	WITHOUT_CLASSIFICATION	3.396499168648806E-7	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.8947099846356253	WITHOUT_CLASSIFICATION	0.10529001536437463	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999969826561839	WITHOUT_CLASSIFICATION	3.0173438160674416E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9996760394733816	WITHOUT_CLASSIFICATION	3.239605266184414E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999936017142783	WITHOUT_CLASSIFICATION	6.398285721614601E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999994452523311	WITHOUT_CLASSIFICATION	5.547476688995282E-7	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999994452523311	WITHOUT_CLASSIFICATION	5.547476688995282E-7	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.999999931132672	WITHOUT_CLASSIFICATION	6.886732800500639E-8	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999995835633044	WITHOUT_CLASSIFICATION	4.1643669560429434E-7	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999995606358301	WITHOUT_CLASSIFICATION	4.3936416988497957E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999999708807394	WITHOUT_CLASSIFICATION	2.9119260632793696E-8	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999999120892998	WITHOUT_CLASSIFICATION	8.791070013144747E-8	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999995826239014	WITHOUT_CLASSIFICATION	4.17376098592635E-7	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999999581702022	WITHOUT_CLASSIFICATION	4.1829797758995575E-8	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999970337520152	WITHOUT_CLASSIFICATION	2.9662479848463584E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999998815344486	WITHOUT_CLASSIFICATION	1.184655513634929E-7	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999964278037263	WITHOUT_CLASSIFICATION	3.572196273617453E-6	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.999999968248087	WITHOUT_CLASSIFICATION	3.175191303294594E-8	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999687587441666	WITHOUT_CLASSIFICATION	3.12412558333376E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995101550033	WITHOUT_CLASSIFICATION	4.898449967278605E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999925196798902	WITHOUT_CLASSIFICATION	7.48032010972694E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999854293741	WITHOUT_CLASSIFICATION	1.457062595166611E-8	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999970645088336	WITHOUT_CLASSIFICATION	2.9354911663626064E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968319371435	WITHOUT_CLASSIFICATION	3.1680628565659003E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968319371435	WITHOUT_CLASSIFICATION	3.1680628565659003E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999952932985143	WITHOUT_CLASSIFICATION	4.706701485598889E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999995491188722	WITHOUT_CLASSIFICATION	4.508811278657137E-7	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999995060868005	WITHOUT_CLASSIFICATION	4.939131994260316E-7	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999999990986481	WITHOUT_CLASSIFICATION	9.013518932519592E-10	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999999707535301	WITHOUT_CLASSIFICATION	2.9246469837480053E-8	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999985438449348	WITHOUT_CLASSIFICATION	1.4561550652024723E-6	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999993208124417	WITHOUT_CLASSIFICATION	6.791875583785212E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999922747829615	WITHOUT_CLASSIFICATION	7.725217038489518E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999999608002527	WITHOUT_CLASSIFICATION	3.919974737870177E-8	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999963053749958	WITHOUT_CLASSIFICATION	3.6946250042046294E-6	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999999124425327	WITHOUT_CLASSIFICATION	8.755746731434018E-8	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999877132865063	WITHOUT_CLASSIFICATION	1.2286713493833005E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999999798129112	WITHOUT_CLASSIFICATION	2.0187088784361948E-8	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999997487590896	WITHOUT_CLASSIFICATION	2.5124091043005804E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999798812055247	WITHOUT_CLASSIFICATION	2.0118794475190774E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999888792977454	WITHOUT_CLASSIFICATION	1.1120702254496621E-5	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999979120460495	WITHOUT_CLASSIFICATION	2.0879539504482937E-6	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999991600284299	WITHOUT_CLASSIFICATION	8.399715700972734E-7	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999996140953212	WITHOUT_CLASSIFICATION	3.859046788245115E-7	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999970519846	WITHOUT_CLASSIFICATION	2.948015325694565E-9	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999995446150803	WITHOUT_CLASSIFICATION	4.5538491968856234E-7	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999984524435792	WITHOUT_CLASSIFICATION	1.5475564207364495E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999989894344404	WITHOUT_CLASSIFICATION	1.0105655595128016E-6	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999973237189378	WITHOUT_CLASSIFICATION	2.676281062287381E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999996677963489	WITHOUT_CLASSIFICATION	3.322036510493637E-7	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999633374129	WITHOUT_CLASSIFICATION	3.666258703111354E-8	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999998101489664	WITHOUT_CLASSIFICATION	1.898510335457071E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999999879625229	WITHOUT_CLASSIFICATION	1.2037477093632738E-8	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999963444600106	WITHOUT_CLASSIFICATION	3.6555399894621104E-6	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999988600072159	WITHOUT_CLASSIFICATION	1.1399927839804411E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999851482529308	WITHOUT_CLASSIFICATION	1.4851747069130571E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.999820258074038	WITHOUT_CLASSIFICATION	1.797419259620703E-4	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999791942353312	WITHOUT_CLASSIFICATION	2.08057646687753E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999995499970402	WITHOUT_CLASSIFICATION	4.5000295980380337E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999972450002729	WITHOUT_CLASSIFICATION	2.754999727214417E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999718093476908	WITHOUT_CLASSIFICATION	2.8190652309243794E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999998035962837	WITHOUT_CLASSIFICATION	1.9640371622076087E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999980264777287	WITHOUT_CLASSIFICATION	1.973522271253294E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.999999995098899	WITHOUT_CLASSIFICATION	4.901100983562006E-9	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999998269256503	WITHOUT_CLASSIFICATION	1.7307434961842995E-7	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999996823820122	WITHOUT_CLASSIFICATION	3.176179877567893E-7	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999930142489114	WITHOUT_CLASSIFICATION	6.9857510885248095E-6	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999999834088699	WITHOUT_CLASSIFICATION	1.6591130127429534E-8	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999897695482252	WITHOUT_CLASSIFICATION	1.0230451774903019E-5	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9996102631413146	WITHOUT_CLASSIFICATION	3.8973685868542545E-4	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999980009562948	WITHOUT_CLASSIFICATION	1.999043705234748E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999972293385863	WITHOUT_CLASSIFICATION	2.770661413773621E-6	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999943367484161	WITHOUT_CLASSIFICATION	5.663251583827187E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999999461884326	WITHOUT_CLASSIFICATION	5.3811567370909815E-8	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999920624281208	WITHOUT_CLASSIFICATION	7.937571879320324E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.999999319514594	WITHOUT_CLASSIFICATION	6.804854060985564E-7	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999977691766917	WITHOUT_CLASSIFICATION	2.230823308303326E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.999996326403464	WITHOUT_CLASSIFICATION	3.6735965359341157E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999999690784975	WITHOUT_CLASSIFICATION	3.0921502439926795E-8	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999988683189097	WITHOUT_CLASSIFICATION	1.1316810901927969E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999987835007657	WITHOUT_CLASSIFICATION	1.2164992342596453E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.999983590698847	WITHOUT_CLASSIFICATION	1.6409301152971787E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998113387867	WITHOUT_CLASSIFICATION	1.8866121328329483E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999998995453804	WITHOUT_CLASSIFICATION	1.0045461964791013E-7	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999998958897511	WITHOUT_CLASSIFICATION	1.0411024892668054E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998799479899	WITHOUT_CLASSIFICATION	1.200520101859077E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998799479899	WITHOUT_CLASSIFICATION	1.200520101859077E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998664033392	WITHOUT_CLASSIFICATION	1.335966607683077E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998664033392	WITHOUT_CLASSIFICATION	1.335966607683077E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.999999772823831	WITHOUT_CLASSIFICATION	2.2717616887742957E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.999999772823831	WITHOUT_CLASSIFICATION	2.2717616887742957E-7	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999980495318121	WITHOUT_CLASSIFICATION	1.950468187791992E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999925344833083	WITHOUT_CLASSIFICATION	7.465516691690833E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999925344833083	WITHOUT_CLASSIFICATION	7.465516691690833E-6	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999981538172567	WITHOUT_CLASSIFICATION	1.8461827433697608E-6	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999993808633008	WITHOUT_CLASSIFICATION	6.191366993154411E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999841195774598	WITHOUT_CLASSIFICATION	1.5880422540122053E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999841195774598	WITHOUT_CLASSIFICATION	1.5880422540122053E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999989491740247	WITHOUT_CLASSIFICATION	1.0508259753277908E-6	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999993598354918	WITHOUT_CLASSIFICATION	6.401645080631713E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999925344833083	WITHOUT_CLASSIFICATION	7.465516691690833E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999841195774598	WITHOUT_CLASSIFICATION	1.5880422540122053E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999995509973906	WITHOUT_CLASSIFICATION	4.4900260936445657E-7	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999990778554658	WITHOUT_CLASSIFICATION	9.221445341849026E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.999984471173925	WITHOUT_CLASSIFICATION	1.552882607498238E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999999698922891	WITHOUT_CLASSIFICATION	3.010771089446163E-8	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999984460610577	WITHOUT_CLASSIFICATION	1.5539389423794116E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999999375294236	WITHOUT_CLASSIFICATION	6.247057637606963E-8	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999998068152055	WITHOUT_CLASSIFICATION	1.9318479444303917E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999998758679345	WITHOUT_CLASSIFICATION	1.24132065455926E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999996148575419	WITHOUT_CLASSIFICATION	3.8514245814587473E-7	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999996892717241	WITHOUT_CLASSIFICATION	3.107282758779364E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.999999735439573	WITHOUT_CLASSIFICATION	2.6456042700494344E-7	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999998470119713	WITHOUT_CLASSIFICATION	1.5298802856880022E-7	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999999584355168	WITHOUT_CLASSIFICATION	4.156448311358333E-8	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999998591212286	WITHOUT_CLASSIFICATION	1.4087877138665478E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999995060344345	WITHOUT_CLASSIFICATION	4.939655654123349E-7	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999993022472489	WITHOUT_CLASSIFICATION	6.977527511563508E-7	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999986160990518	WITHOUT_CLASSIFICATION	1.3839009481993234E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9846913751584905	WITHOUT_CLASSIFICATION	0.015308624841509551	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999996300276546	WITHOUT_CLASSIFICATION	3.6997234543841447E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999977292285331	WITHOUT_CLASSIFICATION	2.2707714668942546E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999997386234101	WITHOUT_CLASSIFICATION	2.613765898903119E-7	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999984082629431	WITHOUT_CLASSIFICATION	1.59173705693361E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999989776859105	WITHOUT_CLASSIFICATION	1.022314089446457E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999974973688006	WITHOUT_CLASSIFICATION	2.5026311993632215E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999997200347963	WITHOUT_CLASSIFICATION	2.7996520375452033E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999997546048012	WITHOUT_CLASSIFICATION	2.453951987986188E-7	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999998430632551	WITHOUT_CLASSIFICATION	1.5693674490279069E-7	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999994139934938	WITHOUT_CLASSIFICATION	5.860065062331917E-7	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.999999215785923	WITHOUT_CLASSIFICATION	7.842140769395233E-7	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999920006521845	WITHOUT_CLASSIFICATION	7.999347815460384E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.999984471173925	WITHOUT_CLASSIFICATION	1.552882607498238E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999991643088384	WITHOUT_CLASSIFICATION	8.356911615948165E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999995060344345	WITHOUT_CLASSIFICATION	4.939655654123349E-7	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999994078961358	WITHOUT_CLASSIFICATION	5.921038640855797E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999974973688006	WITHOUT_CLASSIFICATION	2.5026311993632215E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.999999579870576	WITHOUT_CLASSIFICATION	4.2012942399783484E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999987331880055	WITHOUT_CLASSIFICATION	1.2668119945872727E-6	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999936019260492	WITHOUT_CLASSIFICATION	6.398073950828875E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999821775182293	WITHOUT_CLASSIFICATION	1.7822481770661708E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999821775182293	WITHOUT_CLASSIFICATION	1.7822481770661708E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999992675062203	WITHOUT_CLASSIFICATION	7.324937797168258E-7	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999999495612714	WITHOUT_CLASSIFICATION	5.043872854983022E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999608559973	WITHOUT_CLASSIFICATION	3.91440027723443E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999992454303249	WITHOUT_CLASSIFICATION	7.545696751822612E-7	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999982091013345	WITHOUT_CLASSIFICATION	1.7908986654956686E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999998690692761	WITHOUT_CLASSIFICATION	1.3093072394352297E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999999521579438	WITHOUT_CLASSIFICATION	4.78420563019624E-8	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999989668444	WITHOUT_CLASSIFICATION	1.0331555775395479E-9	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999996114140755	WITHOUT_CLASSIFICATION	3.885859246258725E-7	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999974290502271	WITHOUT_CLASSIFICATION	2.5709497728008713E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999991359908642	WITHOUT_CLASSIFICATION	8.640091358489578E-7	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999650649454705	WITHOUT_CLASSIFICATION	3.493505452937856E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999996623914503	WITHOUT_CLASSIFICATION	3.3760854963013163E-7	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999998032144856	WITHOUT_CLASSIFICATION	1.9678551437789516E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999999895427406	WITHOUT_CLASSIFICATION	1.0457259390774525E-8	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.999998996114546	WITHOUT_CLASSIFICATION	1.0038854539343357E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999999943215142	WITHOUT_CLASSIFICATION	5.6784858132102E-9	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999999349768183	WITHOUT_CLASSIFICATION	6.502318170251933E-7	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999999271842764	WITHOUT_CLASSIFICATION	7.281572353285106E-8	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999995472527569	WITHOUT_CLASSIFICATION	4.527472431350984E-7	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999994085949305	WITHOUT_CLASSIFICATION	5.914050694514146E-7	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999999296101151	WITHOUT_CLASSIFICATION	7.038988487083105E-8	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9997943380301455	WITHOUT_CLASSIFICATION	2.0566196985461843E-4	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.999999878971194	WITHOUT_CLASSIFICATION	1.2102880604227732E-7	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999782755692	WITHOUT_CLASSIFICATION	2.1724430831504446E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999999740731057	WITHOUT_CLASSIFICATION	2.5926894314227664E-8	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999999475606195	WITHOUT_CLASSIFICATION	5.2439380561218374E-8	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999889645488955	WITHOUT_CLASSIFICATION	1.1035451104500998E-5	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999999139152497	WITHOUT_CLASSIFICATION	8.608475023276799E-8	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999995313784109	WITHOUT_CLASSIFICATION	4.6862158909045816E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999128033208	WITHOUT_CLASSIFICATION	8.719667923503123E-8	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999998774676164	WITHOUT_CLASSIFICATION	1.2253238360368206E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999987037801918	WITHOUT_CLASSIFICATION	1.2962198082202068E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999911286700929	WITHOUT_CLASSIFICATION	8.8713299070041E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999316519084106	WITHOUT_CLASSIFICATION	6.834809158940411E-5	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999712644703	WITHOUT_CLASSIFICATION	2.8735529735371865E-8	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999974024577211	WITHOUT_CLASSIFICATION	2.5975422790333204E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9998579198974465	WITHOUT_CLASSIFICATION	1.4208010255348789E-4	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999970257347355	WITHOUT_CLASSIFICATION	2.974265264577919E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999959288517897	WITHOUT_CLASSIFICATION	4.071148210260776E-6	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999993478727309	WITHOUT_CLASSIFICATION	6.521272689844824E-7	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999984487971447	WITHOUT_CLASSIFICATION	1.551202855289211E-6	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.999999997076413	WITHOUT_CLASSIFICATION	2.9235869691567747E-9	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999994299120564	WITHOUT_CLASSIFICATION	5.700879436838077E-7	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.999993917444863	WITHOUT_CLASSIFICATION	6.082555137025624E-6	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999988684153153	WITHOUT_CLASSIFICATION	1.131584684771033E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999982975571837	WITHOUT_CLASSIFICATION	1.7024428163190577E-6	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999980587447858	WITHOUT_CLASSIFICATION	1.9412552141795323E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.999999772823831	WITHOUT_CLASSIFICATION	2.2717616887742957E-7	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999992747479236	WITHOUT_CLASSIFICATION	7.252520763642241E-7	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999994817252454	WITHOUT_CLASSIFICATION	5.182747544641982E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999985543967091	WITHOUT_CLASSIFICATION	1.4456032908863129E-6	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999974139953522	WITHOUT_CLASSIFICATION	2.586004647793236E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999998953242719	WITHOUT_CLASSIFICATION	1.0467572799780151E-7	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.999999878172115	WITHOUT_CLASSIFICATION	1.2182788501782634E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999979639621	WITHOUT_CLASSIFICATION	2.036037916458154E-9	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999999610429314	WITHOUT_CLASSIFICATION	3.89570685039412E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999999530006672	WITHOUT_CLASSIFICATION	4.699933269484012E-8	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999994678012019	WITHOUT_CLASSIFICATION	5.32198798163673E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999781695427	WITHOUT_CLASSIFICATION	2.183045723286383E-8	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999971554648	WITHOUT_CLASSIFICATION	2.8445351266632765E-9	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.999999730761524	WITHOUT_CLASSIFICATION	2.6923847593528777E-7	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999954041053233	WITHOUT_CLASSIFICATION	4.595894676765805E-6	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999998646601983	WITHOUT_CLASSIFICATION	1.3533980168698836E-7	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999990680554819	WITHOUT_CLASSIFICATION	9.319445180217162E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999998588381521	WITHOUT_CLASSIFICATION	1.4116184785585837E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999990973474194	WITHOUT_CLASSIFICATION	9.02652580488269E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999999368560551	WITHOUT_CLASSIFICATION	6.31439447834317E-8	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999954435032292	WITHOUT_CLASSIFICATION	4.556496770870427E-6	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999999124178117	WITHOUT_CLASSIFICATION	8.758218821293354E-8	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999996585425032	WITHOUT_CLASSIFICATION	3.414574968502531E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999994198824583	WITHOUT_CLASSIFICATION	5.801175416636688E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999999918659251	WITHOUT_CLASSIFICATION	8.134074775101762E-9	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999998370740611	WITHOUT_CLASSIFICATION	1.6292593886513314E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999961958161723	WITHOUT_CLASSIFICATION	3.804183827616917E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999944717511826	WITHOUT_CLASSIFICATION	5.528248817401703E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999988410995814	WITHOUT_CLASSIFICATION	1.1589004186569603E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999998840543123	WITHOUT_CLASSIFICATION	1.1594568764208263E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.999999880980628	WITHOUT_CLASSIFICATION	1.190193720684156E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999996677963489	WITHOUT_CLASSIFICATION	3.322036510493637E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.999999772823831	WITHOUT_CLASSIFICATION	2.2717616887742957E-7	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999980495318121	WITHOUT_CLASSIFICATION	1.950468187791992E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999999349768183	WITHOUT_CLASSIFICATION	6.502318170251933E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.999999994152237	WITHOUT_CLASSIFICATION	5.8477630094243005E-9	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999992747479236	WITHOUT_CLASSIFICATION	7.252520763642241E-7	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999989903738609	WITHOUT_CLASSIFICATION	1.00962613913667E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999981670478445	WITHOUT_CLASSIFICATION	1.832952155463146E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999999353702701	WITHOUT_CLASSIFICATION	6.462972984235447E-8	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999984409121571	WITHOUT_CLASSIFICATION	1.5590878429253905E-6	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.999991648595909	WITHOUT_CLASSIFICATION	8.351404091001681E-6	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999995930044934	WITHOUT_CLASSIFICATION	4.0699550669726893E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999987363635132	WITHOUT_CLASSIFICATION	1.2636364868888165E-6	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.999999295201848	WITHOUT_CLASSIFICATION	7.047981518946831E-7	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999939417865	WITHOUT_CLASSIFICATION	6.058213458799979E-9	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999997031113331	WITHOUT_CLASSIFICATION	2.9688866696825394E-7	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.999985011030259	WITHOUT_CLASSIFICATION	1.4988969740850395E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999991211477985	WITHOUT_CLASSIFICATION	8.788522015020354E-7	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9997995798312197	WITHOUT_CLASSIFICATION	2.0042016878024231E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999995475168987	WITHOUT_CLASSIFICATION	4.524831013822901E-7	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999992526860345	WITHOUT_CLASSIFICATION	7.473139655502161E-7	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999995800976513	WITHOUT_CLASSIFICATION	4.199023486461555E-7	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999714887860524	WITHOUT_CLASSIFICATION	2.851121394756931E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999981763116663	WITHOUT_CLASSIFICATION	1.8236883336916883E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999645159686944	WITHOUT_CLASSIFICATION	3.548403130562188E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999938316551484	WITHOUT_CLASSIFICATION	6.1683448514789896E-6	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999496486813834	WITHOUT_CLASSIFICATION	5.0351318616681005E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9998973020589664	WITHOUT_CLASSIFICATION	1.0269794103361644E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999931757451218	WITHOUT_CLASSIFICATION	6.824254878286124E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999993947323458	WITHOUT_CLASSIFICATION	6.052676541526105E-7	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999954094654984	WITHOUT_CLASSIFICATION	4.590534501738429E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999998362371082	WITHOUT_CLASSIFICATION	1.6376289181336925E-7	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999433227827408	WITHOUT_CLASSIFICATION	5.667721725910402E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999990913287682	WITHOUT_CLASSIFICATION	9.086712317985057E-7	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999971172585725	WITHOUT_CLASSIFICATION	2.8827414274963545E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.99999939868159	WITHOUT_CLASSIFICATION	6.013184099741629E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999952820435	WITHOUT_CLASSIFICATION	4.71795640150793E-9	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.999999772823831	WITHOUT_CLASSIFICATION	2.2717616887742957E-7	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999994678012019	WITHOUT_CLASSIFICATION	5.32198798163673E-7	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999999781695427	WITHOUT_CLASSIFICATION	2.183045723286383E-8	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999990680554819	WITHOUT_CLASSIFICATION	9.319445180217162E-7	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999998588381521	WITHOUT_CLASSIFICATION	1.4116184785585837E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999990973474194	WITHOUT_CLASSIFICATION	9.02652580488269E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999999368560551	WITHOUT_CLASSIFICATION	6.31439447834317E-8	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999954435032292	WITHOUT_CLASSIFICATION	4.556496770870427E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999509110516381	WITHOUT_CLASSIFICATION	4.9088948361860174E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999994198824583	WITHOUT_CLASSIFICATION	5.801175416636688E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999976458757	WITHOUT_CLASSIFICATION	2.354124442245084E-9	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9966627815157993	WITHOUT_CLASSIFICATION	0.003337218484200642	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999774133344135	WITHOUT_CLASSIFICATION	2.2586665586571908E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999999101689202	WITHOUT_CLASSIFICATION	8.983107981562503E-8	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.999999968517182	WITHOUT_CLASSIFICATION	3.1482818083902994E-8	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999999559888908	WITHOUT_CLASSIFICATION	4.4011109223279024E-8	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999999925737797	WITHOUT_CLASSIFICATION	7.426220333238486E-9	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999996428692647	WITHOUT_CLASSIFICATION	3.57130735364311E-7	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999992163854445	WITHOUT_CLASSIFICATION	7.83614555506671E-7	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999991340089699	WITHOUT_CLASSIFICATION	8.659910301707247E-7	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999992959046841	WITHOUT_CLASSIFICATION	7.0409531584803E-7	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999999838793966	WITHOUT_CLASSIFICATION	1.612060349758873E-8	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999997712917578	WITHOUT_CLASSIFICATION	2.2870824228875445E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999329950813	WITHOUT_CLASSIFICATION	6.700491876052324E-8	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999968270879516	WITHOUT_CLASSIFICATION	3.1729120483166067E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999968270879516	WITHOUT_CLASSIFICATION	3.1729120483166067E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999955424098562	WITHOUT_CLASSIFICATION	4.457590143751447E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999636881117	WITHOUT_CLASSIFICATION	3.63118882507028E-8	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999999636881117	WITHOUT_CLASSIFICATION	3.63118882507028E-8	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999978202115186	WITHOUT_CLASSIFICATION	2.179788481348775E-6	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.99999855857623	WITHOUT_CLASSIFICATION	1.4414237700447844E-6	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999997159711896	WITHOUT_CLASSIFICATION	2.8402881035554526E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999952820435	WITHOUT_CLASSIFICATION	4.71795640150793E-9	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999940941050518	WITHOUT_CLASSIFICATION	5.905894948165818E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999976538400596	WITHOUT_CLASSIFICATION	2.3461599404282353E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999928630747	WITHOUT_CLASSIFICATION	7.136925297167179E-8	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999547119379	WITHOUT_CLASSIFICATION	4.528806212587003E-8	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9996055586497039	WITHOUT_CLASSIFICATION	3.9444135029609035E-4	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999996864940651	WITHOUT_CLASSIFICATION	3.135059349116154E-7	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999998572549189	WITHOUT_CLASSIFICATION	1.4274508107400495E-7	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999984448976453	WITHOUT_CLASSIFICATION	1.555102354632611E-6	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999999596896302	WITHOUT_CLASSIFICATION	4.031036972341104E-8	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999953836490089	WITHOUT_CLASSIFICATION	4.616350991133407E-6	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9996356084280443	WITHOUT_CLASSIFICATION	3.643915719557281E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.999999917827422	WITHOUT_CLASSIFICATION	8.217257801456883E-8	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9997557375230753	WITHOUT_CLASSIFICATION	2.442624769246713E-4	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999994000668588	WITHOUT_CLASSIFICATION	5.999331412318712E-7	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999998783535727	WITHOUT_CLASSIFICATION	1.2164642718452344E-7	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999998815937107	WITHOUT_CLASSIFICATION	1.1840628931851076E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999989862420947	WITHOUT_CLASSIFICATION	1.0137579053613602E-6	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9997085720619175	WITHOUT_CLASSIFICATION	2.9142793808245327E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9995885174762845	WITHOUT_CLASSIFICATION	4.1148252371537496E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999996013114095	WITHOUT_CLASSIFICATION	3.986885905063529E-7	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999939027298274	WITHOUT_CLASSIFICATION	6.097270172601729E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999999540858384	WITHOUT_CLASSIFICATION	4.591416161740845E-8	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999995523432272	WITHOUT_CLASSIFICATION	4.476567727199357E-7	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999977666063331	WITHOUT_CLASSIFICATION	2.2333936669460204E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999993105293968	WITHOUT_CLASSIFICATION	6.894706031742411E-7	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999919152666	WITHOUT_CLASSIFICATION	8.084733387411622E-9	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999992053541427	WITHOUT_CLASSIFICATION	7.946458572750953E-7	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9997239149817511	WITHOUT_CLASSIFICATION	2.7608501824896443E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999971315664982	WITHOUT_CLASSIFICATION	2.868433501874801E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999999452042891	WITHOUT_CLASSIFICATION	5.479571071449138E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999759182403	WITHOUT_CLASSIFICATION	2.4081759654922843E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999999733956222	WITHOUT_CLASSIFICATION	2.66043778826229E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999999839539221	WITHOUT_CLASSIFICATION	1.604607789798806E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999926190810203	WITHOUT_CLASSIFICATION	7.380918979630547E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999900121604	WITHOUT_CLASSIFICATION	9.987839602718335E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994338619282	WITHOUT_CLASSIFICATION	5.661380718424701E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999990280642161	WITHOUT_CLASSIFICATION	9.71935783793136E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999999839539221	WITHOUT_CLASSIFICATION	1.604607789798806E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999972838300168	WITHOUT_CLASSIFICATION	2.7161699832638453E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999999441716879	WITHOUT_CLASSIFICATION	5.582831209257024E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999999441716879	WITHOUT_CLASSIFICATION	5.582831209257024E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999999441716879	WITHOUT_CLASSIFICATION	5.582831209257024E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999666041404	WITHOUT_CLASSIFICATION	3.33958595191507E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999666041404	WITHOUT_CLASSIFICATION	3.33958595191507E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999666041404	WITHOUT_CLASSIFICATION	3.33958595191507E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999997447375	WITHOUT_CLASSIFICATION	2.5526247308857567E-10	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999997447375	WITHOUT_CLASSIFICATION	2.5526247308857567E-10	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999995410921272	WITHOUT_CLASSIFICATION	4.589078728165674E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999999497176091	WITHOUT_CLASSIFICATION	5.028239101201815E-8	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999998529445667	WITHOUT_CLASSIFICATION	1.4705543338526118E-7	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999986293847194	WITHOUT_CLASSIFICATION	1.3706152806149574E-6	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999947234704322	WITHOUT_CLASSIFICATION	5.2765295677212075E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999999153388607	WITHOUT_CLASSIFICATION	8.466113936068438E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999995664114227	WITHOUT_CLASSIFICATION	4.335885771750117E-7	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999999665626947	WITHOUT_CLASSIFICATION	3.3437305306329E-8	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999996291666453	WITHOUT_CLASSIFICATION	3.708333545985012E-7	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999983859777719	WITHOUT_CLASSIFICATION	1.6140222280431621E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999954248205707	WITHOUT_CLASSIFICATION	4.57517942931074E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999999764673927	WITHOUT_CLASSIFICATION	2.3532607295876414E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997666438608	WITHOUT_CLASSIFICATION	2.3335613926214832E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999913071339412	WITHOUT_CLASSIFICATION	8.692866058852205E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999873513697364	WITHOUT_CLASSIFICATION	1.2648630263736268E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999249661622209	WITHOUT_CLASSIFICATION	7.503383777910294E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999999530655408	WITHOUT_CLASSIFICATION	4.6934459215140684E-8	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999679048610223	WITHOUT_CLASSIFICATION	3.20951389777101E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999991441461579	WITHOUT_CLASSIFICATION	8.558538421068823E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999996610639085	WITHOUT_CLASSIFICATION	3.389360915049651E-7	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999946877057213	WITHOUT_CLASSIFICATION	5.312294278789686E-6	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999999374814864	WITHOUT_CLASSIFICATION	6.251851358877467E-8	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999412063999761	WITHOUT_CLASSIFICATION	5.8793600023929994E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999955167722484	WITHOUT_CLASSIFICATION	4.483227751581002E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999999498415965	WITHOUT_CLASSIFICATION	5.015840355420925E-8	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999656711604941	WITHOUT_CLASSIFICATION	3.432883950596705E-5	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999994600539853	WITHOUT_CLASSIFICATION	5.399460146556261E-7	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.999996549666918	WITHOUT_CLASSIFICATION	3.4503330820534873E-6	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999999499768611	WITHOUT_CLASSIFICATION	5.002313871912824E-8	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999977666016446	WITHOUT_CLASSIFICATION	2.233398355323857E-6	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999837559951059	WITHOUT_CLASSIFICATION	1.6244004894130547E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999997464270397	WITHOUT_CLASSIFICATION	2.5357296039503155E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.999978593845378	WITHOUT_CLASSIFICATION	2.1406154621910176E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999990667978051	WITHOUT_CLASSIFICATION	9.332021949680472E-7	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999978752778248	WITHOUT_CLASSIFICATION	2.1247221752479492E-6	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.7056531390545494	WITHOUT_CLASSIFICATION	0.2943468609454506	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999977666016446	WITHOUT_CLASSIFICATION	2.233398355323857E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999994889477624	WITHOUT_CLASSIFICATION	5.110522376654491E-7	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999999992051762	WITHOUT_CLASSIFICATION	7.948238368197488E-10	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999992568560668	WITHOUT_CLASSIFICATION	7.431439332415113E-7	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999999067637478	WITHOUT_CLASSIFICATION	9.323625217687275E-8	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999998443640244	WITHOUT_CLASSIFICATION	1.5563597546136232E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999999627450908	WITHOUT_CLASSIFICATION	3.725490915278342E-8	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999999110138443	WITHOUT_CLASSIFICATION	8.898615576682194E-8	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999982576534061	WITHOUT_CLASSIFICATION	1.74234659384765E-6	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999959765952057	WITHOUT_CLASSIFICATION	4.023404794388369E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999999177347129	WITHOUT_CLASSIFICATION	8.226528705578519E-8	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999880379949749	WITHOUT_CLASSIFICATION	1.1962005025082692E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999999236581584	WITHOUT_CLASSIFICATION	7.634184163448679E-8	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999998860383911	WITHOUT_CLASSIFICATION	1.139616088695139E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999994889477624	WITHOUT_CLASSIFICATION	5.110522376654491E-7	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999311551448434	WITHOUT_CLASSIFICATION	6.88448551565337E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999998292634217	WITHOUT_CLASSIFICATION	1.7073657831494404E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999998354844886	WITHOUT_CLASSIFICATION	1.6451551153873264E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9981876529157782	WITHOUT_CLASSIFICATION	0.0018123470842219375	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999996245909234	WITHOUT_CLASSIFICATION	3.754090766683713E-7	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999922896896366	WITHOUT_CLASSIFICATION	7.710310363467611E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995101550033	WITHOUT_CLASSIFICATION	4.898449967278605E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997580601974	WITHOUT_CLASSIFICATION	2.4193980255547095E-7	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999835574102	WITHOUT_CLASSIFICATION	1.6442589852187214E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999961962784725	WITHOUT_CLASSIFICATION	3.803721527468625E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999414163397	WITHOUT_CLASSIFICATION	5.858366030673428E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999998644802237	WITHOUT_CLASSIFICATION	1.355197763131926E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999998218639087	WITHOUT_CLASSIFICATION	1.7813609129089916E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.999998455699847	WITHOUT_CLASSIFICATION	1.5443001530085663E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999995857523701	WITHOUT_CLASSIFICATION	4.142476299079122E-7	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.999999936780623	WITHOUT_CLASSIFICATION	6.32193770066808E-8	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999985415210961	WITHOUT_CLASSIFICATION	1.4584789039383153E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999974567589864	WITHOUT_CLASSIFICATION	2.5432410136800502E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.999917319904297	WITHOUT_CLASSIFICATION	8.268009570301279E-5	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999999776706442	WITHOUT_CLASSIFICATION	2.23293557605601E-8	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999999416652894	WITHOUT_CLASSIFICATION	5.833471052798823E-8	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999935717506754	WITHOUT_CLASSIFICATION	6.428249324647629E-6	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999996459792501	WITHOUT_CLASSIFICATION	3.5402074991687717E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999998466027725	WITHOUT_CLASSIFICATION	1.533972275364753E-7	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.999941306709241	WITHOUT_CLASSIFICATION	5.869329075893973E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999999474978474	WITHOUT_CLASSIFICATION	5.250215256914802E-8	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9999550580023939	WITHOUT_CLASSIFICATION	4.494199760612472E-5	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999984518153114	WITHOUT_CLASSIFICATION	1.5481846886264474E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.999999706836147	WITHOUT_CLASSIFICATION	2.931638530332611E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999816976562	WITHOUT_CLASSIFICATION	1.830234371978195E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999941676176364	WITHOUT_CLASSIFICATION	5.8323823636515995E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999999287958872	WITHOUT_CLASSIFICATION	7.120411292244263E-8	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999848345691	WITHOUT_CLASSIFICATION	1.5165430919780668E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999998720531559	WITHOUT_CLASSIFICATION	1.2794684422921266E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999998484881263	WITHOUT_CLASSIFICATION	1.5151187369497254E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999999534401826	WITHOUT_CLASSIFICATION	4.6559817461203497E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999941676176364	WITHOUT_CLASSIFICATION	5.8323823636515995E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999994060874341	WITHOUT_CLASSIFICATION	5.939125658640685E-7	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999834038211488	WITHOUT_CLASSIFICATION	1.6596178851269205E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999818845109981	WITHOUT_CLASSIFICATION	1.8115489001889164E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999967802421941	WITHOUT_CLASSIFICATION	3.219757805830273E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999971848820032	WITHOUT_CLASSIFICATION	2.8151179968292427E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999999544810182	WITHOUT_CLASSIFICATION	4.551898180160757E-8	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.999999316139237	WITHOUT_CLASSIFICATION	6.838607629867419E-7	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999924375773135	WITHOUT_CLASSIFICATION	7.562422686522927E-6	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999995849110297	WITHOUT_CLASSIFICATION	4.150889702458663E-7	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999998271113554	WITHOUT_CLASSIFICATION	1.7288864464154825E-7	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999996419539702	WITHOUT_CLASSIFICATION	3.580460298425664E-7	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999992473869744	WITHOUT_CLASSIFICATION	7.526130254365351E-7	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999999249327067	WITHOUT_CLASSIFICATION	7.506729328263844E-8	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999541972334	WITHOUT_CLASSIFICATION	4.5802766503559586E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999788983388421	WITHOUT_CLASSIFICATION	2.1101661157957087E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999999003634389	WITHOUT_CLASSIFICATION	9.963656111320201E-8	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999996125299525	WITHOUT_CLASSIFICATION	3.8747004754489193E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999982401135921	WITHOUT_CLASSIFICATION	1.759886407961216E-6	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999526381751501	WITHOUT_CLASSIFICATION	4.73618248498247E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999999242666971	WITHOUT_CLASSIFICATION	7.573330291660447E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997666438608	WITHOUT_CLASSIFICATION	2.3335613926214832E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997666438608	WITHOUT_CLASSIFICATION	2.3335613926214832E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999790631482361	WITHOUT_CLASSIFICATION	2.0936851763868425E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999913071339412	WITHOUT_CLASSIFICATION	8.692866058852205E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999994909035845	WITHOUT_CLASSIFICATION	5.090964154012984E-7	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999992642397972	WITHOUT_CLASSIFICATION	7.357602027337741E-7	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999896727225265	WITHOUT_CLASSIFICATION	1.0327277473613997E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999999177701644	WITHOUT_CLASSIFICATION	8.22298355892871E-8	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9397648447438415	WITHOUT_CLASSIFICATION	0.060235155256158496	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999999796856118	WITHOUT_CLASSIFICATION	2.0314388197766656E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999998778039239	WITHOUT_CLASSIFICATION	1.2219607614663551E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999963017631787	WITHOUT_CLASSIFICATION	3.6982368213754584E-6	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.999999522896222	WITHOUT_CLASSIFICATION	4.771037780331318E-7	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999988115100144	WITHOUT_CLASSIFICATION	1.188489985685025E-6	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999991555596733	WITHOUT_CLASSIFICATION	8.444403266697915E-7	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999996048812794	WITHOUT_CLASSIFICATION	3.9511872064871286E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999922426593805	WITHOUT_CLASSIFICATION	7.757340619579741E-6	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999999236281257	WITHOUT_CLASSIFICATION	7.637187424882135E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999987544724728	WITHOUT_CLASSIFICATION	1.2455275272231038E-6	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999883606072	WITHOUT_CLASSIFICATION	1.163939283445996E-8	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999999683659804	WITHOUT_CLASSIFICATION	3.163401969235396E-8	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999994200687232	WITHOUT_CLASSIFICATION	5.79931276689211E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999987394169171	WITHOUT_CLASSIFICATION	1.2605830828536151E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.997822937919347	WITHOUT_CLASSIFICATION	0.002177062080653018	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999223275939826	WITHOUT_CLASSIFICATION	7.767240601742725E-5	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999572002729887	WITHOUT_CLASSIFICATION	4.279972701132798E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999999795686758	WITHOUT_CLASSIFICATION	2.0431324257978783E-8	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999928583787819	WITHOUT_CLASSIFICATION	7.141621218120389E-6	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999972602972993	WITHOUT_CLASSIFICATION	2.7397027007474124E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.999999997625021	WITHOUT_CLASSIFICATION	2.3749788880331157E-9	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999997111876726	WITHOUT_CLASSIFICATION	2.8881232745244606E-7	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.999803605510403	WITHOUT_CLASSIFICATION	1.963944895969723E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999990533468278	WITHOUT_CLASSIFICATION	9.466531721632966E-7	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999892572442352	WITHOUT_CLASSIFICATION	1.0742755764932856E-5	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999763154349359	WITHOUT_CLASSIFICATION	2.368456506408066E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999996257945502	WITHOUT_CLASSIFICATION	3.742054497790285E-7	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.999999152711049	WITHOUT_CLASSIFICATION	8.472889510822643E-7	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999981389756172	WITHOUT_CLASSIFICATION	1.8610243828344829E-6	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999999613801775	WITHOUT_CLASSIFICATION	3.8619822513357196E-8	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999987343673772	WITHOUT_CLASSIFICATION	1.2656326227501707E-6	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999995747032879	WITHOUT_CLASSIFICATION	4.2529671209138005E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999996121961456	WITHOUT_CLASSIFICATION	3.878038544270726E-7	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9996090402178495	WITHOUT_CLASSIFICATION	3.9095978215050866E-4	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999978992578799	WITHOUT_CLASSIFICATION	2.1007421201467776E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999998136864516	WITHOUT_CLASSIFICATION	1.863135484929399E-7	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999639916330786	WITHOUT_CLASSIFICATION	3.600836692147088E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999887437377675	WITHOUT_CLASSIFICATION	1.1256262232504429E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999980249191066	WITHOUT_CLASSIFICATION	1.975080893419788E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999988436338874	WITHOUT_CLASSIFICATION	1.156366112702605E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999948295767995	WITHOUT_CLASSIFICATION	5.170423200451322E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999880031705979	WITHOUT_CLASSIFICATION	1.1996829402237213E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999745709200105	WITHOUT_CLASSIFICATION	2.542907998950314E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999999242666971	WITHOUT_CLASSIFICATION	7.573330291660447E-8	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999995664114227	WITHOUT_CLASSIFICATION	4.335885771750117E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9996924100621561	WITHOUT_CLASSIFICATION	3.0758993784389384E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.999991403943341	WITHOUT_CLASSIFICATION	8.59605665895166E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999985548892	WITHOUT_CLASSIFICATION	1.4451108285558123E-9	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999218703207955	WITHOUT_CLASSIFICATION	7.812967920445133E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.999982344804674	WITHOUT_CLASSIFICATION	1.7655195326083557E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999998568235713	WITHOUT_CLASSIFICATION	1.431764286941662E-7	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999999931813002	WITHOUT_CLASSIFICATION	6.818699804754273E-9	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9971727338964251	WITHOUT_CLASSIFICATION	0.002827266103574918	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999880553096456	WITHOUT_CLASSIFICATION	1.1944690354342995E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999940437102367	WITHOUT_CLASSIFICATION	5.956289763298872E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999992081900353	WITHOUT_CLASSIFICATION	7.918099647472034E-7	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999811567605688	WITHOUT_CLASSIFICATION	1.884323943122257E-5	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.999999999864534	WITHOUT_CLASSIFICATION	1.3546594560503066E-10	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999992800243179	WITHOUT_CLASSIFICATION	7.199756820358066E-7	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999999598605567	WITHOUT_CLASSIFICATION	4.01394433252024E-8	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999999842810022	WITHOUT_CLASSIFICATION	1.5718997696504213E-8	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.999999876786024	WITHOUT_CLASSIFICATION	1.2321397613465145E-7	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999998962462567	WITHOUT_CLASSIFICATION	1.0375374326519914E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9998975862550827	WITHOUT_CLASSIFICATION	1.0241374491720306E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999999206045121	WITHOUT_CLASSIFICATION	7.939548779520011E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999999206045121	WITHOUT_CLASSIFICATION	7.939548779520011E-8	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999995948793904	WITHOUT_CLASSIFICATION	4.0512060968747005E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999999363001887	WITHOUT_CLASSIFICATION	6.369981133755417E-8	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999982196137297	WITHOUT_CLASSIFICATION	1.7803862702744439E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999492510912694	WITHOUT_CLASSIFICATION	5.074890873061693E-5	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999997733811322	WITHOUT_CLASSIFICATION	2.2661886776877824E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999998251602006	WITHOUT_CLASSIFICATION	1.7483979938234695E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999912844018	WITHOUT_CLASSIFICATION	8.71559822355123E-9	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999961664596948	WITHOUT_CLASSIFICATION	3.833540305191553E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999804861347795	WITHOUT_CLASSIFICATION	1.9513865220500485E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999800991377881	WITHOUT_CLASSIFICATION	1.990086221184107E-5	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999978048632463	WITHOUT_CLASSIFICATION	2.1951367537328074E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999269067551	WITHOUT_CLASSIFICATION	7.309324490471089E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.999999993272421	WITHOUT_CLASSIFICATION	6.7275790042555396E-9	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999749666133616	WITHOUT_CLASSIFICATION	2.503338663849708E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999446546942707	WITHOUT_CLASSIFICATION	5.534530572930136E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.999834366150604	WITHOUT_CLASSIFICATION	1.6563384939595788E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9998930746813426	WITHOUT_CLASSIFICATION	1.0692531865746292E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999998945744432	WITHOUT_CLASSIFICATION	1.05425556930715E-7	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.999999829037778	WITHOUT_CLASSIFICATION	1.7096222195587485E-7	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.999980571943942	WITHOUT_CLASSIFICATION	1.942805605804189E-5	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9999484037476233	WITHOUT_CLASSIFICATION	5.159625237670005E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999997883971035	WITHOUT_CLASSIFICATION	2.116028965310186E-7	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.999999773316311	WITHOUT_CLASSIFICATION	2.2668368907450563E-7	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999787087967148	WITHOUT_CLASSIFICATION	2.1291203285245692E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999446546942707	WITHOUT_CLASSIFICATION	5.534530572930136E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999446546942707	WITHOUT_CLASSIFICATION	5.534530572930136E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999777593516815	WITHOUT_CLASSIFICATION	2.224064831846231E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999519233241397	WITHOUT_CLASSIFICATION	4.807667586018266E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999754345962959	WITHOUT_CLASSIFICATION	2.4565403704127873E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.99999999333169	WITHOUT_CLASSIFICATION	6.668309986506821E-9	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999963978318351	WITHOUT_CLASSIFICATION	3.602168164969794E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998620218457	WITHOUT_CLASSIFICATION	1.3797815429635483E-7	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999487132359	WITHOUT_CLASSIFICATION	5.128676420036131E-8	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999943885076266	WITHOUT_CLASSIFICATION	5.6114923734429785E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999997477752769	WITHOUT_CLASSIFICATION	2.522247230939966E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999696309537206	WITHOUT_CLASSIFICATION	3.036904627942189E-5	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999988032267996	WITHOUT_CLASSIFICATION	1.196773200397846E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999993689644788	WITHOUT_CLASSIFICATION	6.310355212312891E-7	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999981514017936	WITHOUT_CLASSIFICATION	1.8485982064751633E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999994706619639	WITHOUT_CLASSIFICATION	5.293380361024132E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.999999441276517	WITHOUT_CLASSIFICATION	5.587234831137058E-7	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999706719645751	WITHOUT_CLASSIFICATION	2.9328035424852214E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9970085171635161	WITHOUT_CLASSIFICATION	0.002991482836483777	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9999742878961543	WITHOUT_CLASSIFICATION	2.571210384569879E-5	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9989147882169613	WITHOUT_CLASSIFICATION	0.0010852117830386302	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999999936468399	WITHOUT_CLASSIFICATION	6.35316011417525E-9	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999999809996631	WITHOUT_CLASSIFICATION	1.900033694949154E-8	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999818378312578	WITHOUT_CLASSIFICATION	1.8162168742172324E-5	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999967413784274	WITHOUT_CLASSIFICATION	3.2586215726751995E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999924344585508	WITHOUT_CLASSIFICATION	7.565541449138094E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999999701330083	WITHOUT_CLASSIFICATION	2.986699172709215E-8	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.999999962759061	WITHOUT_CLASSIFICATION	3.724093887917236E-8	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999999854562649	WITHOUT_CLASSIFICATION	1.4543735122179486E-8	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999311054795554	WITHOUT_CLASSIFICATION	6.889452044448305E-5	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999999117364223	WITHOUT_CLASSIFICATION	8.826357761437571E-8	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999999964415078	WITHOUT_CLASSIFICATION	3.558492245137017E-9	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999919783078809	WITHOUT_CLASSIFICATION	8.021692119229648E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999981246735392	WITHOUT_CLASSIFICATION	1.8753264607568846E-6	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999998215138611	WITHOUT_CLASSIFICATION	1.784861389522849E-7	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999993163868686	WITHOUT_CLASSIFICATION	6.836131313722769E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999999938097756	WITHOUT_CLASSIFICATION	6.190224399229961E-9	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999986641001287	WITHOUT_CLASSIFICATION	1.335899871263561E-6	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9998377308752531	WITHOUT_CLASSIFICATION	1.622691247470473E-4	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999780104634566	WITHOUT_CLASSIFICATION	2.1989536543376066E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999618333736	WITHOUT_CLASSIFICATION	3.8166626361799205E-8	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999975141731258	WITHOUT_CLASSIFICATION	2.4858268741364336E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999997250223313	WITHOUT_CLASSIFICATION	2.749776687211094E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999997184091912	WITHOUT_CLASSIFICATION	2.815908088510698E-7	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9997641729187903	WITHOUT_CLASSIFICATION	2.3582708120973545E-4	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999950459761561	WITHOUT_CLASSIFICATION	4.9540238440019025E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999999053837381	WITHOUT_CLASSIFICATION	9.461626190809653E-8	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999999712439634	WITHOUT_CLASSIFICATION	2.8756036519392783E-8	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.999999765156988	WITHOUT_CLASSIFICATION	2.3484301201129023E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999990680125	WITHOUT_CLASSIFICATION	9.319875078233616E-10	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999998761356471	WITHOUT_CLASSIFICATION	1.238643528697465E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999993274287	WITHOUT_CLASSIFICATION	6.725714104105338E-10	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999981355635176	WITHOUT_CLASSIFICATION	1.864436482479935E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999941607764031	WITHOUT_CLASSIFICATION	5.839223596846354E-6	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999997802879549	WITHOUT_CLASSIFICATION	2.197120449977672E-7	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999996629039293	WITHOUT_CLASSIFICATION	3.3709607074810284E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999921802186383	WITHOUT_CLASSIFICATION	7.81978136160862E-6	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999998902129886	WITHOUT_CLASSIFICATION	1.097870112801868E-7	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999998447068164	WITHOUT_CLASSIFICATION	1.5529318363366004E-7	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999970070653005	WITHOUT_CLASSIFICATION	2.992934699598317E-6	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999998945735581	WITHOUT_CLASSIFICATION	1.054264419447209E-7	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9998833565119336	WITHOUT_CLASSIFICATION	1.166434880663096E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999961212359206	WITHOUT_CLASSIFICATION	3.878764079381246E-6	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.999999305102875	WITHOUT_CLASSIFICATION	6.948971248858663E-7	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999992494906	WITHOUT_CLASSIFICATION	7.505094290700715E-10	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999999555877	WITHOUT_CLASSIFICATION	4.441227199878638E-11	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999935302010129	WITHOUT_CLASSIFICATION	6.4697989870920396E-6	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999756572968105	WITHOUT_CLASSIFICATION	2.434270318943824E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999999768821412	WITHOUT_CLASSIFICATION	2.311785882803015E-8	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999817483387	WITHOUT_CLASSIFICATION	1.825166132265877E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999886245925915	WITHOUT_CLASSIFICATION	1.137540740838311E-5	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999998299083165	WITHOUT_CLASSIFICATION	1.7009168348729265E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999618333736	WITHOUT_CLASSIFICATION	3.8166626361799205E-8	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999997421328135	WITHOUT_CLASSIFICATION	2.5786718645510935E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998113387867	WITHOUT_CLASSIFICATION	1.8866121328329483E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999998113387867	WITHOUT_CLASSIFICATION	1.8866121328329483E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999988767565113	WITHOUT_CLASSIFICATION	1.1232434885581853E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999999928796793	WITHOUT_CLASSIFICATION	7.120320698818776E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999999928796793	WITHOUT_CLASSIFICATION	7.120320698818776E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999954028390334	WITHOUT_CLASSIFICATION	4.59716096664027E-6	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999996121095157	WITHOUT_CLASSIFICATION	3.878904842820893E-7	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999990334320193	WITHOUT_CLASSIFICATION	9.665679806475163E-7	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999999296147655	WITHOUT_CLASSIFICATION	7.038523460089242E-8	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.999998509747717	WITHOUT_CLASSIFICATION	1.490252283042928E-6	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999992283876428	WITHOUT_CLASSIFICATION	7.716123570850563E-7	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998368711486	WITHOUT_CLASSIFICATION	1.6312885153819366E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999997936485445	WITHOUT_CLASSIFICATION	2.0635145560754677E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999996306892018	WITHOUT_CLASSIFICATION	3.6931079823796475E-7	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999758341856403	WITHOUT_CLASSIFICATION	2.4165814359702556E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.999999897351582	WITHOUT_CLASSIFICATION	1.0264841805759607E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999998372470432	WITHOUT_CLASSIFICATION	1.627529566921402E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999795129965651	WITHOUT_CLASSIFICATION	2.0487003434947563E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999652748889372	WITHOUT_CLASSIFICATION	3.472511106284784E-5	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.999853297721574	WITHOUT_CLASSIFICATION	1.467022784260408E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999449453267	WITHOUT_CLASSIFICATION	5.505467331513564E-8	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999996316603058	WITHOUT_CLASSIFICATION	3.6833969414583914E-7	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999997801394602	WITHOUT_CLASSIFICATION	2.1986053965004372E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999908060022	WITHOUT_CLASSIFICATION	9.193997789634385E-8	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.999999928796793	WITHOUT_CLASSIFICATION	7.120320698818776E-8	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999954028390334	WITHOUT_CLASSIFICATION	4.59716096664027E-6	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999999449453267	WITHOUT_CLASSIFICATION	5.505467331513564E-8	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.999998750475541	WITHOUT_CLASSIFICATION	1.249524459056309E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999997200275096	WITHOUT_CLASSIFICATION	2.7997249040496917E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999999480607407	WITHOUT_CLASSIFICATION	5.193925939380665E-8	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999943439093207	WITHOUT_CLASSIFICATION	5.656090679212023E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999998585634149	WITHOUT_CLASSIFICATION	1.4143658505348534E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.999999954081555	WITHOUT_CLASSIFICATION	4.591844497712789E-8	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999999001134409	WITHOUT_CLASSIFICATION	9.988655918585721E-8	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999990103789572	WITHOUT_CLASSIFICATION	9.896210427593366E-7	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999965108874999	WITHOUT_CLASSIFICATION	3.489112500047092E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.999997182566066	WITHOUT_CLASSIFICATION	2.8174339340982105E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999936878989522	WITHOUT_CLASSIFICATION	6.312101047802412E-6	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9997940385337232	WITHOUT_CLASSIFICATION	2.0596146627680268E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999770562287499	WITHOUT_CLASSIFICATION	2.2943771250161768E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999968094982711	WITHOUT_CLASSIFICATION	3.1905017289357085E-6	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9996599685893381	WITHOUT_CLASSIFICATION	3.4003141066186364E-4	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9886118035754105	WITHOUT_CLASSIFICATION	0.011388196424589587	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999999512923924	WITHOUT_CLASSIFICATION	4.87076076222391E-8	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999999151372397	WITHOUT_CLASSIFICATION	8.486276025929298E-8	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999986238622213	WITHOUT_CLASSIFICATION	1.376137778714451E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999586271457357	WITHOUT_CLASSIFICATION	4.13728542642078E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999969772786248	WITHOUT_CLASSIFICATION	3.022721375249631E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999996810373883	WITHOUT_CLASSIFICATION	3.189626115780944E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999999055898945	WITHOUT_CLASSIFICATION	9.44101054278615E-8	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999978112931847	WITHOUT_CLASSIFICATION	2.1887068152654395E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999990572070937	WITHOUT_CLASSIFICATION	9.427929063762629E-7	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999999075324557	WITHOUT_CLASSIFICATION	9.246754430364064E-8	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999984797285697	WITHOUT_CLASSIFICATION	1.5202714303405964E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.999968733877823	WITHOUT_CLASSIFICATION	3.126612217694045E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999999551231354	WITHOUT_CLASSIFICATION	4.4876864671070146E-8	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999981144941938	WITHOUT_CLASSIFICATION	1.8855058061657587E-6	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999996900911158	WITHOUT_CLASSIFICATION	3.0990888426240623E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999870774982	WITHOUT_CLASSIFICATION	1.2922501765534904E-8	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999975593553628	WITHOUT_CLASSIFICATION	2.440644637254507E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.999939896481138	WITHOUT_CLASSIFICATION	6.0103518861996076E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999940614076541	WITHOUT_CLASSIFICATION	5.9385923458674175E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999974125597156	WITHOUT_CLASSIFICATION	2.587440284303099E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999974003882812	WITHOUT_CLASSIFICATION	2.599611718790092E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999953072682	WITHOUT_CLASSIFICATION	4.692731705576222E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999149910379701	WITHOUT_CLASSIFICATION	8.500896202985341E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999149910379701	WITHOUT_CLASSIFICATION	8.500896202985341E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999995791393	WITHOUT_CLASSIFICATION	4.20860725624729E-10	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999838726844	WITHOUT_CLASSIFICATION	1.612731565554832E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999838726844	WITHOUT_CLASSIFICATION	1.612731565554832E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999213264481	WITHOUT_CLASSIFICATION	7.867355188890481E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999999213264481	WITHOUT_CLASSIFICATION	7.867355188890481E-8	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999996767917559	WITHOUT_CLASSIFICATION	3.232082441155166E-7	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999993818468385	WITHOUT_CLASSIFICATION	6.181531616128968E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999999822551685	WITHOUT_CLASSIFICATION	1.774483147909437E-8	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999994399583012	WITHOUT_CLASSIFICATION	5.600416988796149E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999801538703	WITHOUT_CLASSIFICATION	1.9846129651545872E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999996351696098	WITHOUT_CLASSIFICATION	3.648303902186204E-7	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999997235790171	WITHOUT_CLASSIFICATION	2.7642098288484423E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999925196798902	WITHOUT_CLASSIFICATION	7.48032010972694E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999149910379701	WITHOUT_CLASSIFICATION	8.500896202985341E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.999999542479328	WITHOUT_CLASSIFICATION	4.575206720366403E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999984452981	WITHOUT_CLASSIFICATION	1.5547018941067619E-9	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999756150943	WITHOUT_CLASSIFICATION	2.4384905647643432E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9995421222169595	WITHOUT_CLASSIFICATION	4.578777830406011E-4	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999745365929524	WITHOUT_CLASSIFICATION	2.5463407047563306E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999999690302341	WITHOUT_CLASSIFICATION	3.0969765792245255E-8	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.999991346024538	WITHOUT_CLASSIFICATION	8.653975462068257E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999981449613914	WITHOUT_CLASSIFICATION	1.8550386084837154E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999179864985	WITHOUT_CLASSIFICATION	8.201350156560507E-8	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999999179864985	WITHOUT_CLASSIFICATION	8.201350156560507E-8	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999932742627192	WITHOUT_CLASSIFICATION	6.725737280759564E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999999728607094	WITHOUT_CLASSIFICATION	2.713929050788605E-8	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999972617031478	WITHOUT_CLASSIFICATION	2.738296852084781E-6	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999999265439881	WITHOUT_CLASSIFICATION	7.345601193134971E-8	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999977071689987	WITHOUT_CLASSIFICATION	2.2928310012428083E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998909294794	WITHOUT_CLASSIFICATION	1.0907052053423912E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999796206976	WITHOUT_CLASSIFICATION	2.0379302399909535E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999998098963	WITHOUT_CLASSIFICATION	1.901038241212104E-10	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999999426908737	WITHOUT_CLASSIFICATION	5.7309126389818665E-8	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998909294794	WITHOUT_CLASSIFICATION	1.0907052053423912E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999988721765148	WITHOUT_CLASSIFICATION	1.1278234851356887E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999996977007642	WITHOUT_CLASSIFICATION	3.0229923578817906E-7	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999975063056211	WITHOUT_CLASSIFICATION	2.4936943789488574E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.999835391158687	WITHOUT_CLASSIFICATION	1.646088413130141E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999997345693817	WITHOUT_CLASSIFICATION	2.654306181768244E-7	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999999709251584	WITHOUT_CLASSIFICATION	2.907484171069614E-8	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999981988805501	WITHOUT_CLASSIFICATION	1.8011194499994628E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999956144464838	WITHOUT_CLASSIFICATION	4.385553516214499E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999956144464838	WITHOUT_CLASSIFICATION	4.385553516214499E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.99999787459424	WITHOUT_CLASSIFICATION	2.125405759900357E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.99999787459424	WITHOUT_CLASSIFICATION	2.125405759900357E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999969671833809	WITHOUT_CLASSIFICATION	3.0328166191054033E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999994685841343	WITHOUT_CLASSIFICATION	5.314158657122647E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999994685841343	WITHOUT_CLASSIFICATION	5.314158657122647E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999961266146402	WITHOUT_CLASSIFICATION	3.873385359766337E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999957396813027	WITHOUT_CLASSIFICATION	4.260318697281698E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999957396813027	WITHOUT_CLASSIFICATION	4.260318697281698E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999966981067056	WITHOUT_CLASSIFICATION	3.3018932944793018E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999986529018179	WITHOUT_CLASSIFICATION	1.3470981820767666E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999987351361	WITHOUT_CLASSIFICATION	1.2648638605770267E-9	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.999998938023351	WITHOUT_CLASSIFICATION	1.0619766490310809E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999551647399	WITHOUT_CLASSIFICATION	4.4835260097456535E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996303060886	WITHOUT_CLASSIFICATION	3.696939114236566E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996303060886	WITHOUT_CLASSIFICATION	3.696939114236566E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999954818473494	WITHOUT_CLASSIFICATION	4.518152650517257E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999954818473494	WITHOUT_CLASSIFICATION	4.518152650517257E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999989498797708	WITHOUT_CLASSIFICATION	1.0501202291312832E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999985010275978	WITHOUT_CLASSIFICATION	1.4989724022049464E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999956993533199	WITHOUT_CLASSIFICATION	4.30064668015436E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999988436338874	WITHOUT_CLASSIFICATION	1.156366112702605E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999956144464838	WITHOUT_CLASSIFICATION	4.385553516214499E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999999145017884	WITHOUT_CLASSIFICATION	8.549821158410074E-8	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999715076446	WITHOUT_CLASSIFICATION	2.8492355338572743E-8	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.99999787459424	WITHOUT_CLASSIFICATION	2.125405759900357E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.99999787459424	WITHOUT_CLASSIFICATION	2.125405759900357E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999969671833809	WITHOUT_CLASSIFICATION	3.0328166191054033E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999994685841343	WITHOUT_CLASSIFICATION	5.314158657122647E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999994685841343	WITHOUT_CLASSIFICATION	5.314158657122647E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999994685841343	WITHOUT_CLASSIFICATION	5.314158657122647E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999961266146402	WITHOUT_CLASSIFICATION	3.873385359766337E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999957396813027	WITHOUT_CLASSIFICATION	4.260318697281698E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999966981067056	WITHOUT_CLASSIFICATION	3.3018932944793018E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999986529018179	WITHOUT_CLASSIFICATION	1.3470981820767666E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996303060886	WITHOUT_CLASSIFICATION	3.696939114236566E-7	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999481729833	WITHOUT_CLASSIFICATION	5.182701662638287E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999999727243822	WITHOUT_CLASSIFICATION	2.727561772816185E-8	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999999602677558	WITHOUT_CLASSIFICATION	3.9732244139960687E-8	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999950222346	WITHOUT_CLASSIFICATION	4.9777653974781215E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996303060886	WITHOUT_CLASSIFICATION	3.696939114236566E-7	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999954818473494	WITHOUT_CLASSIFICATION	4.518152650517257E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999954818473494	WITHOUT_CLASSIFICATION	4.518152650517257E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999956993533199	WITHOUT_CLASSIFICATION	4.30064668015436E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999956993533199	WITHOUT_CLASSIFICATION	4.30064668015436E-6	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998025493846	WITHOUT_CLASSIFICATION	1.9745061539017807E-7	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999948597503321	WITHOUT_CLASSIFICATION	5.140249667906051E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999942147599804	WITHOUT_CLASSIFICATION	5.785240019568924E-6	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999973978773578	WITHOUT_CLASSIFICATION	2.602122642282226E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999968365971527	WITHOUT_CLASSIFICATION	3.16340284732276E-6	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999969161819514	WITHOUT_CLASSIFICATION	3.0838180485960036E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999957318192578	WITHOUT_CLASSIFICATION	4.2681807420938E-6	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999987311914953	WITHOUT_CLASSIFICATION	1.2688085046237103E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999992829869753	WITHOUT_CLASSIFICATION	7.1701302474587E-7	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999965797467093	WITHOUT_CLASSIFICATION	3.420253290824397E-6	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999999030632409	WITHOUT_CLASSIFICATION	9.693675909049388E-8	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999993678779668	WITHOUT_CLASSIFICATION	6.321220331482218E-7	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999982258099228	WITHOUT_CLASSIFICATION	1.7741900770767996E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999977702916222	WITHOUT_CLASSIFICATION	2.2297083777616777E-6	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999998242823671	WITHOUT_CLASSIFICATION	1.757176328142062E-7	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999994093876988	WITHOUT_CLASSIFICATION	5.906123012082298E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999998025710479	WITHOUT_CLASSIFICATION	1.9742895203605282E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999991717887436	WITHOUT_CLASSIFICATION	8.282112562618483E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998102288776	WITHOUT_CLASSIFICATION	1.89771122362605E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999639658383075	WITHOUT_CLASSIFICATION	3.603416169249343E-5	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999830495119522	WITHOUT_CLASSIFICATION	1.6950488047816243E-5	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9999874828937382	WITHOUT_CLASSIFICATION	1.2517106261802611E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999418094634	WITHOUT_CLASSIFICATION	5.8190536720695865E-8	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999999418094634	WITHOUT_CLASSIFICATION	5.8190536720695865E-8	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999999226233425	WITHOUT_CLASSIFICATION	7.737665755476827E-8	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999934990851768	WITHOUT_CLASSIFICATION	6.500914823297557E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9998062568843692	WITHOUT_CLASSIFICATION	1.9374311563085983E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999999606027614	WITHOUT_CLASSIFICATION	3.9397238497666335E-8	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999998901275157	WITHOUT_CLASSIFICATION	1.0987248431012052E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999999763071221	WITHOUT_CLASSIFICATION	2.369287788863301E-8	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999999582667985	WITHOUT_CLASSIFICATION	4.173320148626399E-8	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.999999987723081	WITHOUT_CLASSIFICATION	1.2276919030329896E-8	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999989532513737	WITHOUT_CLASSIFICATION	1.0467486263547589E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999989532513737	WITHOUT_CLASSIFICATION	1.0467486263547589E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999989532513737	WITHOUT_CLASSIFICATION	1.0467486263547589E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999962345842626	WITHOUT_CLASSIFICATION	3.765415737375576E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999962345842626	WITHOUT_CLASSIFICATION	3.765415737375576E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999962345842626	WITHOUT_CLASSIFICATION	3.765415737375576E-6	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999998734321722	WITHOUT_CLASSIFICATION	1.2656782776435968E-7	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.999986679949223	WITHOUT_CLASSIFICATION	1.3320050776999978E-5	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999917402902117	WITHOUT_CLASSIFICATION	8.259709788390648E-6	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.995855744627943	WITHOUT_CLASSIFICATION	0.00414425537205696	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999998035445381	WITHOUT_CLASSIFICATION	1.9645546187951565E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999945834169188	WITHOUT_CLASSIFICATION	5.416583081184247E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930636310763	WITHOUT_CLASSIFICATION	6.936368923663464E-6	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.999999947391736	WITHOUT_CLASSIFICATION	5.26082639214206E-8	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997677214538	WITHOUT_CLASSIFICATION	2.3227854608259117E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999928284613637	WITHOUT_CLASSIFICATION	7.1715386362539894E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999847071039603	WITHOUT_CLASSIFICATION	1.529289603981806E-5	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999902023108858	WITHOUT_CLASSIFICATION	9.797689114282936E-6	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999940768940903	WITHOUT_CLASSIFICATION	5.9231059098073006E-6	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999991936802	WITHOUT_CLASSIFICATION	8.063197373989059E-10	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999947657564756	WITHOUT_CLASSIFICATION	5.2342435243104525E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999995029587279	WITHOUT_CLASSIFICATION	4.97041272015201E-7	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999999295796682	WITHOUT_CLASSIFICATION	7.042033170153942E-8	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.999999892494458	WITHOUT_CLASSIFICATION	1.0750554190161808E-7	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9888337872358877	WITHOUT_CLASSIFICATION	0.011166212764112381	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999962828855	WITHOUT_CLASSIFICATION	3.71711444520142E-9	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999995206653	WITHOUT_CLASSIFICATION	4.793346966692719E-10	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999985964624	WITHOUT_CLASSIFICATION	1.4035375372034408E-9	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9969807712368011	WITHOUT_CLASSIFICATION	0.0030192287631990162	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999998903395	WITHOUT_CLASSIFICATION	1.0966055332585295E-10	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999998934914646	WITHOUT_CLASSIFICATION	1.0650853538153987E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999699926677736	WITHOUT_CLASSIFICATION	3.0007332226264717E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999972747099	WITHOUT_CLASSIFICATION	2.725290102170883E-8	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999985548892	WITHOUT_CLASSIFICATION	1.4451108285558123E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999993197801	WITHOUT_CLASSIFICATION	6.802198999357979E-7	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999993197801	WITHOUT_CLASSIFICATION	6.802198999357979E-7	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999671470193496	WITHOUT_CLASSIFICATION	3.2852980650443896E-5	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999810509774	WITHOUT_CLASSIFICATION	1.8949022611775502E-8	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999998378516072	WITHOUT_CLASSIFICATION	1.6214839292293422E-7	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999999035014412	WITHOUT_CLASSIFICATION	9.649855888324609E-8	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999983192814706	WITHOUT_CLASSIFICATION	1.6807185293806336E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999999366077464	WITHOUT_CLASSIFICATION	6.339225358140301E-8	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.999875027702992	WITHOUT_CLASSIFICATION	1.2497229700796837E-4	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999999158338955	WITHOUT_CLASSIFICATION	8.416610456953595E-8	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999990391382826	WITHOUT_CLASSIFICATION	9.608617173422012E-7	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999981629094143	WITHOUT_CLASSIFICATION	1.8370905856372252E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999985767937887	WITHOUT_CLASSIFICATION	1.423206211324505E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9997823047245485	WITHOUT_CLASSIFICATION	2.176952754513569E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9996120587354785	WITHOUT_CLASSIFICATION	3.879412645215637E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9999733923021427	WITHOUT_CLASSIFICATION	2.6607697857308807E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999991717887436	WITHOUT_CLASSIFICATION	8.282112562618483E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999997587422498	WITHOUT_CLASSIFICATION	2.412577501724249E-7	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9999935795480565	WITHOUT_CLASSIFICATION	6.4204519435038334E-6	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999983979616313	WITHOUT_CLASSIFICATION	1.6020383687585383E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9037898359295132	WITHOUT_CLASSIFICATION	0.09621016407048674	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999701168658323	WITHOUT_CLASSIFICATION	2.9883134167742693E-5	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999999793948395	WITHOUT_CLASSIFICATION	2.0605160440349195E-8	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9998411951217397	WITHOUT_CLASSIFICATION	1.588048782602833E-4	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999717307596933	WITHOUT_CLASSIFICATION	2.8269240306769265E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.999997728398946	WITHOUT_CLASSIFICATION	2.2716010539806527E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999816155123735	WITHOUT_CLASSIFICATION	1.8384487626448083E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999999697905553	WITHOUT_CLASSIFICATION	3.020944471099165E-8	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999672535612455	WITHOUT_CLASSIFICATION	3.274643875446041E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999983717831061	WITHOUT_CLASSIFICATION	1.6282168938883325E-6	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999997015918626	WITHOUT_CLASSIFICATION	2.9840813740066114E-7	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999995004835706	WITHOUT_CLASSIFICATION	4.995164293907285E-7	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999988213008355	WITHOUT_CLASSIFICATION	1.1786991645358116E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999968224118684	WITHOUT_CLASSIFICATION	3.177588131675871E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999999966226552	WITHOUT_CLASSIFICATION	3.3773447048840835E-9	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999998203128978	WITHOUT_CLASSIFICATION	1.7968710227522966E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.999999586958794	WITHOUT_CLASSIFICATION	4.1304120606847476E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999998613467933	WITHOUT_CLASSIFICATION	1.3865320670712587E-7	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999593458765653	WITHOUT_CLASSIFICATION	4.065412343476495E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999963957957132	WITHOUT_CLASSIFICATION	3.604204286751582E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999958366690435	WITHOUT_CLASSIFICATION	4.163330956575923E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999965380083415	WITHOUT_CLASSIFICATION	3.4619916584902873E-6	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9998875995118975	WITHOUT_CLASSIFICATION	1.1240048810236688E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999976365382507	WITHOUT_CLASSIFICATION	2.363461749356075E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999821085095	WITHOUT_CLASSIFICATION	1.7891490577491286E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999821085095	WITHOUT_CLASSIFICATION	1.7891490577491286E-8	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999976538400596	WITHOUT_CLASSIFICATION	2.3461599404282353E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999998620218457	WITHOUT_CLASSIFICATION	1.3797815429635483E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999928630747	WITHOUT_CLASSIFICATION	7.136925297167179E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999928630747	WITHOUT_CLASSIFICATION	7.136925297167179E-8	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999945834169188	WITHOUT_CLASSIFICATION	5.416583081184247E-6	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930636310763	WITHOUT_CLASSIFICATION	6.936368923663464E-6	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999998276417692	WITHOUT_CLASSIFICATION	1.7235823073053998E-7	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999891759540895	WITHOUT_CLASSIFICATION	1.0824045910366632E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.99999438224309	WITHOUT_CLASSIFICATION	5.6177569100942345E-6	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999983637052093	WITHOUT_CLASSIFICATION	1.63629479071796E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999875857946	WITHOUT_CLASSIFICATION	1.241420540674089E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999995580306026	WITHOUT_CLASSIFICATION	4.4196939750084864E-7	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999988142666731	WITHOUT_CLASSIFICATION	1.1857333268401615E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999994485339627	WITHOUT_CLASSIFICATION	5.514660373784156E-7	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999998211265047	WITHOUT_CLASSIFICATION	1.788734953360279E-7	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.999992702072324	WITHOUT_CLASSIFICATION	7.297927676042579E-6	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.999999997704482	WITHOUT_CLASSIFICATION	2.2955179542942053E-9	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999983857122603	WITHOUT_CLASSIFICATION	1.6142877396336527E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999995746107734	WITHOUT_CLASSIFICATION	4.253892266560545E-7	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999995746107734	WITHOUT_CLASSIFICATION	4.253892266560545E-7	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999980100056409	WITHOUT_CLASSIFICATION	1.9899943591023266E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999997752902645	WITHOUT_CLASSIFICATION	2.24709735478806E-7	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999984407474716	WITHOUT_CLASSIFICATION	1.5592525283726765E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999963124799607	WITHOUT_CLASSIFICATION	3.6875200393331307E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999934716385102	WITHOUT_CLASSIFICATION	6.5283614898367385E-6	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999850677889	WITHOUT_CLASSIFICATION	1.4932211114820983E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999977214244151	WITHOUT_CLASSIFICATION	2.278575584806682E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999991723301402	WITHOUT_CLASSIFICATION	8.276698598589989E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999991299533021	WITHOUT_CLASSIFICATION	8.700466979177825E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999723766384555	WITHOUT_CLASSIFICATION	2.7623361544492166E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999688216548958	WITHOUT_CLASSIFICATION	3.1178345104203446E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9998907731604659	WITHOUT_CLASSIFICATION	1.0922683953398152E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9968710343494358	WITHOUT_CLASSIFICATION	0.003128965650564183	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999906438673253	WITHOUT_CLASSIFICATION	9.356132674658782E-6	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999950477605686	WITHOUT_CLASSIFICATION	4.952239431438597E-6	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999838292269586	WITHOUT_CLASSIFICATION	1.617077304145811E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999998879947093	WITHOUT_CLASSIFICATION	1.1200529066115346E-7	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999999417291036	WITHOUT_CLASSIFICATION	5.82708965072099E-8	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999991434341433	WITHOUT_CLASSIFICATION	8.565658566921264E-7	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999982327863	WITHOUT_CLASSIFICATION	1.76721369677993E-9	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999703286538382	WITHOUT_CLASSIFICATION	2.967134616184425E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999995559639938	WITHOUT_CLASSIFICATION	4.440360061454515E-7	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999955729773298	WITHOUT_CLASSIFICATION	4.427022670191011E-6	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999942753036716	WITHOUT_CLASSIFICATION	5.724696328477976E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999951371827593	WITHOUT_CLASSIFICATION	4.862817240681282E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999999746877851	WITHOUT_CLASSIFICATION	2.5312214846752243E-8	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.999999004599071	WITHOUT_CLASSIFICATION	9.954009289194104E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999956655076575	WITHOUT_CLASSIFICATION	4.334492342457396E-6	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999899796079823	WITHOUT_CLASSIFICATION	1.0020392017675231E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9978602142927029	WITHOUT_CLASSIFICATION	0.002139785707297157	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9978602142927029	WITHOUT_CLASSIFICATION	0.002139785707297157	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9978602142927029	WITHOUT_CLASSIFICATION	0.002139785707297157	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9978602142927029	WITHOUT_CLASSIFICATION	0.002139785707297157	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9978602142927029	WITHOUT_CLASSIFICATION	0.002139785707297157	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9978602142927029	WITHOUT_CLASSIFICATION	0.002139785707297157	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999999477914001	WITHOUT_CLASSIFICATION	5.2208600005504966E-8	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999998263150663	WITHOUT_CLASSIFICATION	1.7368493360248816E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999996544464741	WITHOUT_CLASSIFICATION	3.4555352595174575E-7	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999940768894282	WITHOUT_CLASSIFICATION	5.9231105717912715E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999940768894282	WITHOUT_CLASSIFICATION	5.9231105717912715E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999995111051461	WITHOUT_CLASSIFICATION	4.888948539970905E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999995111051461	WITHOUT_CLASSIFICATION	4.888948539970905E-7	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999937740776677	WITHOUT_CLASSIFICATION	6.225922332409798E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999994838741566	WITHOUT_CLASSIFICATION	5.161258434271991E-7	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999999551898723	WITHOUT_CLASSIFICATION	4.48101276645266E-8	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999687940012196	WITHOUT_CLASSIFICATION	3.120599878039523E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999996918108889	WITHOUT_CLASSIFICATION	3.081891111197766E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.999999746900655	WITHOUT_CLASSIFICATION	2.5309934502486583E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.999999894087723	WITHOUT_CLASSIFICATION	1.0591227703406589E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.999999894087723	WITHOUT_CLASSIFICATION	1.0591227703406589E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999921258357829	WITHOUT_CLASSIFICATION	7.874164217212907E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999921258357829	WITHOUT_CLASSIFICATION	7.874164217212907E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999921258357829	WITHOUT_CLASSIFICATION	7.874164217212907E-6	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997613418242202	WITHOUT_CLASSIFICATION	2.3865817577983615E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997613418242202	WITHOUT_CLASSIFICATION	2.3865817577983615E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.999998897842921	WITHOUT_CLASSIFICATION	1.10215707910551E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999883690736	WITHOUT_CLASSIFICATION	1.1630926457397952E-8	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999992497449522	WITHOUT_CLASSIFICATION	7.502550477865482E-7	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999965808612528	WITHOUT_CLASSIFICATION	3.4191387472869596E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999692157029	WITHOUT_CLASSIFICATION	3.0784297044947716E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999692157029	WITHOUT_CLASSIFICATION	3.0784297044947716E-8	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999988763858662	WITHOUT_CLASSIFICATION	1.1236141337903394E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9978602142927029	WITHOUT_CLASSIFICATION	0.002139785707297157	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999692157029	WITHOUT_CLASSIFICATION	3.0784297044947716E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999999950975754	WITHOUT_CLASSIFICATION	4.9024246059552844E-8	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999999950975754	WITHOUT_CLASSIFICATION	4.9024246059552844E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999692157029	WITHOUT_CLASSIFICATION	3.0784297044947716E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999692157029	WITHOUT_CLASSIFICATION	3.0784297044947716E-8	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999999692157029	WITHOUT_CLASSIFICATION	3.0784297044947716E-8	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9997442609562023	WITHOUT_CLASSIFICATION	2.557390437976978E-4	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999933038758	WITHOUT_CLASSIFICATION	6.696124222362374E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999963916777	WITHOUT_CLASSIFICATION	3.608322298964231E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999963916777	WITHOUT_CLASSIFICATION	3.608322298964231E-9	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.999999968213885	WITHOUT_CLASSIFICATION	3.178611493404182E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999991797843448	WITHOUT_CLASSIFICATION	8.202156552061903E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999999138791985	WITHOUT_CLASSIFICATION	8.612080159746403E-8	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999989385865	WITHOUT_CLASSIFICATION	1.0614135095333302E-9	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9998030068742777	WITHOUT_CLASSIFICATION	1.9699312572229766E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999979243699137	WITHOUT_CLASSIFICATION	2.0756300862632288E-6	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999991435774801	WITHOUT_CLASSIFICATION	8.564225198256463E-7	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999994894377678	WITHOUT_CLASSIFICATION	5.105622321189564E-7	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.999999861442895	WITHOUT_CLASSIFICATION	1.3855710502180604E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999998886033175	WITHOUT_CLASSIFICATION	1.1139668248313808E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999999641100115	WITHOUT_CLASSIFICATION	3.588998861680665E-8	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.999999790141315	WITHOUT_CLASSIFICATION	2.0985868494118205E-7	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999998904962961	WITHOUT_CLASSIFICATION	1.095037037936709E-7	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999981963872953	WITHOUT_CLASSIFICATION	1.8036127047138564E-6	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999999171213817	WITHOUT_CLASSIFICATION	8.287861834267094E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999868043955679	WITHOUT_CLASSIFICATION	1.319560443217699E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999990719373457	WITHOUT_CLASSIFICATION	9.280626542366327E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999998316481904	WITHOUT_CLASSIFICATION	1.6835180965747737E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.999999812225356	WITHOUT_CLASSIFICATION	1.8777464398303258E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999992913136	WITHOUT_CLASSIFICATION	7.086864355354492E-10	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999995331033071	WITHOUT_CLASSIFICATION	4.6689669280798054E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999998316481904	WITHOUT_CLASSIFICATION	1.6835180965747737E-7	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999996250895999	WITHOUT_CLASSIFICATION	3.7491040010510756E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.999999812225356	WITHOUT_CLASSIFICATION	1.8777464398303258E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999992913136	WITHOUT_CLASSIFICATION	7.086864355354492E-10	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999999536052625	WITHOUT_CLASSIFICATION	4.639473749778982E-8	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999999888973079	WITHOUT_CLASSIFICATION	1.1102692195677374E-8	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999999782578486	WITHOUT_CLASSIFICATION	2.1742151445828144E-8	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999999754542485	WITHOUT_CLASSIFICATION	2.4545751523896628E-8	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999999516197916	WITHOUT_CLASSIFICATION	4.838020834914983E-8	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999999265820338	WITHOUT_CLASSIFICATION	7.341796605356712E-8	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.999955805302651	WITHOUT_CLASSIFICATION	4.4194697348982986E-5	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999996035907286	WITHOUT_CLASSIFICATION	3.964092714660805E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999558971833086	WITHOUT_CLASSIFICATION	4.410281669156398E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.999994327107606	WITHOUT_CLASSIFICATION	5.6728923939164915E-6	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999997722847718	WITHOUT_CLASSIFICATION	2.2771522819196705E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.999999800593929	WITHOUT_CLASSIFICATION	1.9940607092859724E-7	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999990318042578	WITHOUT_CLASSIFICATION	9.681957422395154E-7	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.999999714814976	WITHOUT_CLASSIFICATION	2.851850240677317E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999988185720451	WITHOUT_CLASSIFICATION	1.1814279549472177E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999999060926511	WITHOUT_CLASSIFICATION	9.390734888614457E-8	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999946804492645	WITHOUT_CLASSIFICATION	5.319550735423956E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999958648141833	WITHOUT_CLASSIFICATION	4.1351858166945366E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999996289576424	WITHOUT_CLASSIFICATION	3.7104235756552673E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999996289576424	WITHOUT_CLASSIFICATION	3.7104235756552673E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999981982287793	WITHOUT_CLASSIFICATION	1.8017712206477405E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999981982287793	WITHOUT_CLASSIFICATION	1.8017712206477405E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999992829876905	WITHOUT_CLASSIFICATION	7.170123094065753E-7	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999992829876905	WITHOUT_CLASSIFICATION	7.170123094065753E-7	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999954558486116	WITHOUT_CLASSIFICATION	4.544151388358142E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999970732575727	WITHOUT_CLASSIFICATION	2.926742427318681E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999999014335198	WITHOUT_CLASSIFICATION	9.856648025434603E-8	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999999319967546	WITHOUT_CLASSIFICATION	6.80032453343429E-8	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.999999953435401	WITHOUT_CLASSIFICATION	4.656459891841346E-8	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999997305591823	WITHOUT_CLASSIFICATION	2.694408175908499E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.999997741185912	WITHOUT_CLASSIFICATION	2.2588140879274243E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999999246170868	WITHOUT_CLASSIFICATION	7.538291331184975E-8	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999932576509598	WITHOUT_CLASSIFICATION	6.742349040147515E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.999668671615319	WITHOUT_CLASSIFICATION	3.313283846809558E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999905385673443	WITHOUT_CLASSIFICATION	9.46143265578014E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999183030178	WITHOUT_CLASSIFICATION	8.169698223204991E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999975681686366	WITHOUT_CLASSIFICATION	2.431831363339509E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999999889539085	WITHOUT_CLASSIFICATION	1.104609136769388E-8	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999999166791327	WITHOUT_CLASSIFICATION	8.332086741545385E-8	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999991998840178	WITHOUT_CLASSIFICATION	8.001159821749825E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999756285521363	WITHOUT_CLASSIFICATION	2.437144786376673E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999996821490554	WITHOUT_CLASSIFICATION	3.178509446080352E-7	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999973798419434	WITHOUT_CLASSIFICATION	2.620158056618356E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.999989271465407	WITHOUT_CLASSIFICATION	1.0728534593142191E-5	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999923061983931	WITHOUT_CLASSIFICATION	7.693801606932395E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999983777842173	WITHOUT_CLASSIFICATION	1.6222157826488463E-6	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999996546691	WITHOUT_CLASSIFICATION	3.4533091305067323E-10	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999996088905576	WITHOUT_CLASSIFICATION	3.9110944239151536E-7	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999898944654	WITHOUT_CLASSIFICATION	1.0105534747333985E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999992559346086	WITHOUT_CLASSIFICATION	7.44065391436246E-7	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999999755179704	WITHOUT_CLASSIFICATION	2.4482029724894856E-8	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999999366494305	WITHOUT_CLASSIFICATION	6.33505695006608E-8	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999999854488721	WITHOUT_CLASSIFICATION	1.4551127841040907E-8	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.999999907056803	WITHOUT_CLASSIFICATION	9.294319702882448E-8	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999623872588139	WITHOUT_CLASSIFICATION	3.7612741186203536E-5	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999971560182151	WITHOUT_CLASSIFICATION	2.8439817847779377E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999805342113922	WITHOUT_CLASSIFICATION	1.946578860780379E-5	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9754888361268594	WITHOUT_CLASSIFICATION	0.024511163873140538	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9754888361268594	WITHOUT_CLASSIFICATION	0.024511163873140538	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.990905425377432	WITHOUT_CLASSIFICATION	0.00909457462256801	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9993972719703655	WITHOUT_CLASSIFICATION	6.027280296344457E-4	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9985023917382971	WITHOUT_CLASSIFICATION	0.0014976082617028715	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999832015019501	WITHOUT_CLASSIFICATION	1.6798498049901082E-5	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999728286498617	WITHOUT_CLASSIFICATION	2.7171350138307733E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999904011899541	WITHOUT_CLASSIFICATION	9.59881004588838E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999904011899541	WITHOUT_CLASSIFICATION	9.59881004588838E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999904011899541	WITHOUT_CLASSIFICATION	9.59881004588838E-6	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999627786569477	WITHOUT_CLASSIFICATION	3.722134305225754E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.999983938776581	WITHOUT_CLASSIFICATION	1.606122341902597E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.999983938776581	WITHOUT_CLASSIFICATION	1.606122341902597E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999931378591136	WITHOUT_CLASSIFICATION	6.862140886489291E-6	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9992760621631479	WITHOUT_CLASSIFICATION	7.239378368520833E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999976070321768	WITHOUT_CLASSIFICATION	2.39296782311744E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999976070321768	WITHOUT_CLASSIFICATION	2.39296782311744E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999976070321768	WITHOUT_CLASSIFICATION	2.39296782311744E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999939330186565	WITHOUT_CLASSIFICATION	6.066981343489372E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999990505225366	WITHOUT_CLASSIFICATION	9.49477463515575E-7	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999991763168099	WITHOUT_CLASSIFICATION	8.236831900778084E-7	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999999779375447	WITHOUT_CLASSIFICATION	2.2062455366300376E-8	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999997573321094	WITHOUT_CLASSIFICATION	2.4266789048798406E-7	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.999999307752114	WITHOUT_CLASSIFICATION	6.922478860836062E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999976642903101	WITHOUT_CLASSIFICATION	2.3357096899761833E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999995101550033	WITHOUT_CLASSIFICATION	4.898449967278605E-7	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999997580601974	WITHOUT_CLASSIFICATION	2.4193980255547095E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999765433567669	WITHOUT_CLASSIFICATION	2.3456643233111307E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9981381224457202	WITHOUT_CLASSIFICATION	0.0018618775542798111	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999991998840178	WITHOUT_CLASSIFICATION	8.001159821749825E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999996821490554	WITHOUT_CLASSIFICATION	3.178509446080352E-7	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999946562906885	WITHOUT_CLASSIFICATION	5.343709311439111E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999996532345774	WITHOUT_CLASSIFICATION	3.4676542267030507E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999415049282	WITHOUT_CLASSIFICATION	5.849507179338233E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.999839617926384	WITHOUT_CLASSIFICATION	1.603820736161304E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999440249275	WITHOUT_CLASSIFICATION	5.597507257936035E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999440249275	WITHOUT_CLASSIFICATION	5.597507257936035E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999440249275	WITHOUT_CLASSIFICATION	5.597507257936035E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999897987865194	WITHOUT_CLASSIFICATION	1.0201213480509237E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999897987865194	WITHOUT_CLASSIFICATION	1.0201213480509237E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.99999884802696	WITHOUT_CLASSIFICATION	1.1519730400272145E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999970559864872	WITHOUT_CLASSIFICATION	2.9440135126578524E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.999998992931837	WITHOUT_CLASSIFICATION	1.0070681629513073E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998865984122	WITHOUT_CLASSIFICATION	1.1340158781198748E-7	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999358883443924	WITHOUT_CLASSIFICATION	6.411165560765154E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999358883443924	WITHOUT_CLASSIFICATION	6.411165560765154E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999997671421941	WITHOUT_CLASSIFICATION	2.3285780584453832E-7	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999979578728256	WITHOUT_CLASSIFICATION	2.0421271743538654E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999997664072837	WITHOUT_CLASSIFICATION	2.3359271629473334E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999998412348924	WITHOUT_CLASSIFICATION	1.5876510762221497E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999996596060162	WITHOUT_CLASSIFICATION	3.403939838020947E-7	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999996981338724	WITHOUT_CLASSIFICATION	3.0186612764069024E-7	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999953700576117	WITHOUT_CLASSIFICATION	4.629942388305108E-6	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.999999991658472	WITHOUT_CLASSIFICATION	8.341527966217967E-9	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999998597758435	WITHOUT_CLASSIFICATION	1.4022415647043652E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999999642974747	WITHOUT_CLASSIFICATION	3.570252525987606E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999991351112304	WITHOUT_CLASSIFICATION	8.648887694829442E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999997351137697	WITHOUT_CLASSIFICATION	2.648862302411936E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999415049282	WITHOUT_CLASSIFICATION	5.849507179338233E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998870413843	WITHOUT_CLASSIFICATION	1.1295861574937057E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999985767937887	WITHOUT_CLASSIFICATION	1.423206211324505E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999415049282	WITHOUT_CLASSIFICATION	5.849507179338233E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999998865984122	WITHOUT_CLASSIFICATION	1.1340158781198748E-7	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9997033993751663	WITHOUT_CLASSIFICATION	2.9660062483372453E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999971704217	WITHOUT_CLASSIFICATION	2.8295783942089647E-9	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999999452947406	WITHOUT_CLASSIFICATION	5.470525939326066E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999999452947406	WITHOUT_CLASSIFICATION	5.470525939326066E-8	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999995590636145	WITHOUT_CLASSIFICATION	4.409363855372843E-7	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999966968917811	WITHOUT_CLASSIFICATION	3.303108218847151E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999997158165782	WITHOUT_CLASSIFICATION	2.841834218170943E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999994741417144	WITHOUT_CLASSIFICATION	5.258582855073993E-7	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999989336495	WITHOUT_CLASSIFICATION	1.0663505126387202E-9	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999999446652156	WITHOUT_CLASSIFICATION	5.5334784432705255E-8	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.99999994097369	WITHOUT_CLASSIFICATION	5.902630997983316E-8	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.99999988941277	WITHOUT_CLASSIFICATION	1.1058723001321593E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999983622389	WITHOUT_CLASSIFICATION	1.6377611770942657E-9	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999985133001538	WITHOUT_CLASSIFICATION	1.4866998462527396E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999890518906898	WITHOUT_CLASSIFICATION	1.094810931024927E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999996054741611	WITHOUT_CLASSIFICATION	3.9452583893091633E-7	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999996448023947	WITHOUT_CLASSIFICATION	3.551976053562903E-7	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999997317564	WITHOUT_CLASSIFICATION	2.6824364412707506E-10	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999982219977015	WITHOUT_CLASSIFICATION	1.7780022984419998E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999997405025182	WITHOUT_CLASSIFICATION	2.5949748189708236E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999951864099438	WITHOUT_CLASSIFICATION	4.813590056241696E-6	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999993174130187	WITHOUT_CLASSIFICATION	6.825869812535565E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999993859364648	WITHOUT_CLASSIFICATION	6.140635352292923E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999993859364648	WITHOUT_CLASSIFICATION	6.140635352292923E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999415049282	WITHOUT_CLASSIFICATION	5.849507179338233E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999987572949421	WITHOUT_CLASSIFICATION	1.2427050578678266E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999991351112304	WITHOUT_CLASSIFICATION	8.648887694829442E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999915106325813	WITHOUT_CLASSIFICATION	8.489367418695984E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999998851716758	WITHOUT_CLASSIFICATION	1.1482832419598966E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999999217163452	WITHOUT_CLASSIFICATION	7.828365477878675E-8	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.999999860523711	WITHOUT_CLASSIFICATION	1.3947628888725757E-7	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999751048836558	WITHOUT_CLASSIFICATION	2.4895116344167815E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999991351112304	WITHOUT_CLASSIFICATION	8.648887694829442E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999962670377566	WITHOUT_CLASSIFICATION	3.732962243451668E-6	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999913699738693	WITHOUT_CLASSIFICATION	8.630026130625572E-6	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999922521439402	WITHOUT_CLASSIFICATION	7.747856059831918E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999998087340779	WITHOUT_CLASSIFICATION	1.9126592211326246E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999997457294242	WITHOUT_CLASSIFICATION	2.542705758506105E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999998308882658	WITHOUT_CLASSIFICATION	1.6911173418841435E-7	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999969293578049	WITHOUT_CLASSIFICATION	3.0706421950684175E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999998569670758	WITHOUT_CLASSIFICATION	1.4303292428516383E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999973353803755	WITHOUT_CLASSIFICATION	2.6646196245226938E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999999203176543	WITHOUT_CLASSIFICATION	7.968234570536121E-8	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999991681281477	WITHOUT_CLASSIFICATION	8.318718522099189E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999991681281477	WITHOUT_CLASSIFICATION	8.318718522099189E-7	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.99999973609783	WITHOUT_CLASSIFICATION	2.6390216999748385E-7	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999974413473086	WITHOUT_CLASSIFICATION	2.5586526914080032E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999999808576404	WITHOUT_CLASSIFICATION	1.9142359621742944E-8	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.999999820703162	WITHOUT_CLASSIFICATION	1.792968380075307E-7	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999963476357221	WITHOUT_CLASSIFICATION	3.6523642778356627E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999997834807224	WITHOUT_CLASSIFICATION	2.165192775250215E-7	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999999533644854	WITHOUT_CLASSIFICATION	4.663551456454196E-8	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999998757816384	WITHOUT_CLASSIFICATION	1.2421836153798251E-7	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.999996274306419	WITHOUT_CLASSIFICATION	3.725693581015091E-6	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999983765511887	WITHOUT_CLASSIFICATION	1.6234488112281487E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999966344491527	WITHOUT_CLASSIFICATION	3.3655508473142764E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996241963849	WITHOUT_CLASSIFICATION	3.758036150951609E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996241963849	WITHOUT_CLASSIFICATION	3.758036150951609E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996241963849	WITHOUT_CLASSIFICATION	3.758036150951609E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996241963849	WITHOUT_CLASSIFICATION	3.758036150951609E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996241963849	WITHOUT_CLASSIFICATION	3.758036150951609E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996241963849	WITHOUT_CLASSIFICATION	3.758036150951609E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9999473130564797	WITHOUT_CLASSIFICATION	5.268694352026965E-5	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999997592534378	WITHOUT_CLASSIFICATION	2.4074656224074297E-7	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.999999973061983	WITHOUT_CLASSIFICATION	2.693801699402829E-8	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999997480416876	WITHOUT_CLASSIFICATION	2.5195831250542594E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999989455997447	WITHOUT_CLASSIFICATION	1.0544002552476455E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999996138309004	WITHOUT_CLASSIFICATION	3.861690995485698E-7	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999997562866266	WITHOUT_CLASSIFICATION	2.4371337342976176E-7	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999992467414178	WITHOUT_CLASSIFICATION	7.532585821219407E-7	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9999973598171349	WITHOUT_CLASSIFICATION	2.6401828651124815E-6	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999997930141517	WITHOUT_CLASSIFICATION	2.069858483258798E-7	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.999999995433293	WITHOUT_CLASSIFICATION	4.566707111291047E-9	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999992765156626	WITHOUT_CLASSIFICATION	7.234843374075491E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.999999679952807	WITHOUT_CLASSIFICATION	3.2004719302983186E-7	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999999898105283	WITHOUT_CLASSIFICATION	1.0189471743042337E-8	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999999511532546	WITHOUT_CLASSIFICATION	4.8846745396500724E-8	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999992701210605	WITHOUT_CLASSIFICATION	7.298789394058296E-7	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999942227890695	WITHOUT_CLASSIFICATION	5.777210930497736E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999961011818205	WITHOUT_CLASSIFICATION	3.8988181794883245E-6	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999961011818205	WITHOUT_CLASSIFICATION	3.8988181794883245E-6	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999977879678756	WITHOUT_CLASSIFICATION	2.212032124381753E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999968041202064	WITHOUT_CLASSIFICATION	3.1958797936129694E-6	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999944040659955	WITHOUT_CLASSIFICATION	5.595934004543963E-6	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999792942913847	WITHOUT_CLASSIFICATION	2.070570861532556E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999922591360273	WITHOUT_CLASSIFICATION	7.740863972653832E-6	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999858929221397	WITHOUT_CLASSIFICATION	1.4107077860335193E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999964572310508	WITHOUT_CLASSIFICATION	3.5427689491336407E-6	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999998464621198	WITHOUT_CLASSIFICATION	1.53537880176455E-7	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999980712417752	WITHOUT_CLASSIFICATION	1.9287582248887457E-6	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999995341517182	WITHOUT_CLASSIFICATION	4.6584828186408024E-7	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999998760296254	WITHOUT_CLASSIFICATION	1.2397037470148722E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999982676897	WITHOUT_CLASSIFICATION	1.7323102543735778E-9	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999998234324422	WITHOUT_CLASSIFICATION	1.765675578269992E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999962798315	WITHOUT_CLASSIFICATION	3.720168557347635E-9	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999998992112465	WITHOUT_CLASSIFICATION	1.0078875341341158E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999977748156073	WITHOUT_CLASSIFICATION	2.225184392678304E-6	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999963695371159	WITHOUT_CLASSIFICATION	3.6304628841145577E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999950416016005	WITHOUT_CLASSIFICATION	4.9583983994902725E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999947052043	WITHOUT_CLASSIFICATION	5.29479577562602E-9	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999955298494166	WITHOUT_CLASSIFICATION	4.4701505832838085E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999977020430878	WITHOUT_CLASSIFICATION	2.2979569121610123E-6	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999955578383202	WITHOUT_CLASSIFICATION	4.4421616798175045E-6	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.999965350052525	WITHOUT_CLASSIFICATION	3.464994747501997E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.999989323159297	WITHOUT_CLASSIFICATION	1.0676840703004942E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999910532303681	WITHOUT_CLASSIFICATION	8.946769631863366E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999878122866541	WITHOUT_CLASSIFICATION	1.2187713345840043E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999947577950771	WITHOUT_CLASSIFICATION	5.242204923021766E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999565980522201	WITHOUT_CLASSIFICATION	4.340194777974362E-5	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999516599263	WITHOUT_CLASSIFICATION	4.8340073680999675E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999993467496144	WITHOUT_CLASSIFICATION	6.532503855599106E-7	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.998607045107254	WITHOUT_CLASSIFICATION	0.0013929548927460456	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999921360273822	WITHOUT_CLASSIFICATION	7.863972617812918E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999985191998451	WITHOUT_CLASSIFICATION	1.480800155017494E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999995945785226	WITHOUT_CLASSIFICATION	4.054214773607405E-7	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999881642356256	WITHOUT_CLASSIFICATION	1.1835764374455893E-5	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999931526834943	WITHOUT_CLASSIFICATION	6.847316505616614E-6	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999998914617819	WITHOUT_CLASSIFICATION	1.085382181139885E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999949256726818	WITHOUT_CLASSIFICATION	5.0743273182415095E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999971901876615	WITHOUT_CLASSIFICATION	2.80981233846946E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999971901876615	WITHOUT_CLASSIFICATION	2.80981233846946E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999935232826039	WITHOUT_CLASSIFICATION	6.476717396097086E-6	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999969133389544	WITHOUT_CLASSIFICATION	3.086661045624492E-6	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999703697505475	WITHOUT_CLASSIFICATION	2.9630249452532225E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999985167494829	WITHOUT_CLASSIFICATION	1.4832505170529927E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999996573986395	WITHOUT_CLASSIFICATION	3.4260136051285856E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999947890092804	WITHOUT_CLASSIFICATION	5.210990719605637E-6	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999399294435167	WITHOUT_CLASSIFICATION	6.0070556483173804E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9998605805677102	WITHOUT_CLASSIFICATION	1.3941943228976125E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999996723379443	WITHOUT_CLASSIFICATION	3.2766205580317326E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995547721203	WITHOUT_CLASSIFICATION	4.452278797218708E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999843119069259	WITHOUT_CLASSIFICATION	1.5688093074061787E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999860408233446	WITHOUT_CLASSIFICATION	1.3959176655331517E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.999983955827419	WITHOUT_CLASSIFICATION	1.6044172581075994E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999262819468003	WITHOUT_CLASSIFICATION	7.371805319973891E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9997709839567133	WITHOUT_CLASSIFICATION	2.2901604328678116E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999985058917206	WITHOUT_CLASSIFICATION	1.4941082794135146E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999951905893458	WITHOUT_CLASSIFICATION	4.8094106541147196E-6	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999957832696802	WITHOUT_CLASSIFICATION	4.216730319738359E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.999979338671415	WITHOUT_CLASSIFICATION	2.0661328585084097E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999993915549948	WITHOUT_CLASSIFICATION	6.084450051899351E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999986544071642	WITHOUT_CLASSIFICATION	1.3455928357316233E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999879869324704	WITHOUT_CLASSIFICATION	1.2013067529595971E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.999999539399004	WITHOUT_CLASSIFICATION	4.606009959791434E-7	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9998605805677102	WITHOUT_CLASSIFICATION	1.3941943228976125E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999983996792277	WITHOUT_CLASSIFICATION	1.6003207722584758E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999983996792277	WITHOUT_CLASSIFICATION	1.6003207722584758E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.999999539399004	WITHOUT_CLASSIFICATION	4.606009959791434E-7	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999972633393158	WITHOUT_CLASSIFICATION	2.736660684185334E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999975160974	WITHOUT_CLASSIFICATION	2.4839025378574693E-9	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.999999907258176	WITHOUT_CLASSIFICATION	9.274182392749309E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999998631628569	WITHOUT_CLASSIFICATION	1.3683714306035206E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999999816332696	WITHOUT_CLASSIFICATION	1.8366730255564228E-8	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999950603093495	WITHOUT_CLASSIFICATION	4.939690650465774E-6	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999991303246963	WITHOUT_CLASSIFICATION	8.696753037153114E-7	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999990869271459	WITHOUT_CLASSIFICATION	9.130728540486345E-7	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999983002502688	WITHOUT_CLASSIFICATION	1.699749731133875E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989290614248	WITHOUT_CLASSIFICATION	1.0709385751101755E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999674572184328	WITHOUT_CLASSIFICATION	3.2542781567106154E-5	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999980174949902	WITHOUT_CLASSIFICATION	1.9825050098508598E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999999338345665	WITHOUT_CLASSIFICATION	6.616543350999692E-8	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999999338345665	WITHOUT_CLASSIFICATION	6.616543350999692E-8	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999896223749118	WITHOUT_CLASSIFICATION	1.0377625088186208E-5	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999999025453151	WITHOUT_CLASSIFICATION	9.745468496404282E-8	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999994357491615	WITHOUT_CLASSIFICATION	5.642508385861956E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999999390999615	WITHOUT_CLASSIFICATION	6.090003854277822E-8	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999999390999615	WITHOUT_CLASSIFICATION	6.090003854277822E-8	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999907286812448	WITHOUT_CLASSIFICATION	9.271318755212246E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999907286812448	WITHOUT_CLASSIFICATION	9.271318755212246E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999935709006864	WITHOUT_CLASSIFICATION	6.429099313579391E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.999998779972828	WITHOUT_CLASSIFICATION	1.2200271719539988E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999983014782922	WITHOUT_CLASSIFICATION	1.6985217077473344E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999994905573573	WITHOUT_CLASSIFICATION	5.094426427982956E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999991178170174	WITHOUT_CLASSIFICATION	8.821829826189055E-7	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999988303517536	WITHOUT_CLASSIFICATION	1.1696482463790679E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999999631159758	WITHOUT_CLASSIFICATION	3.6884024200949984E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999935709006864	WITHOUT_CLASSIFICATION	6.429099313579391E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999615541248584	WITHOUT_CLASSIFICATION	3.8445875141529484E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.999998779972828	WITHOUT_CLASSIFICATION	1.2200271719539988E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999999281027997	WITHOUT_CLASSIFICATION	7.189720031150438E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999983014782922	WITHOUT_CLASSIFICATION	1.6985217077473344E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999994905573573	WITHOUT_CLASSIFICATION	5.094426427982956E-7	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999991178170174	WITHOUT_CLASSIFICATION	8.821829826189055E-7	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999847159582448	WITHOUT_CLASSIFICATION	1.5284041755259418E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999995525373006	WITHOUT_CLASSIFICATION	4.4746269940305333E-7	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999574758084	WITHOUT_CLASSIFICATION	4.252419170877912E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999998960088453	WITHOUT_CLASSIFICATION	1.0399115472420467E-7	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999999825383111	WITHOUT_CLASSIFICATION	1.7461688889197365E-8	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999992922179726	WITHOUT_CLASSIFICATION	7.077820274875551E-7	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999474885426	WITHOUT_CLASSIFICATION	5.251145745085738E-8	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999956238950135	WITHOUT_CLASSIFICATION	4.37610498657463E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999879445600898	WITHOUT_CLASSIFICATION	1.2055439910177444E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999991608924186	WITHOUT_CLASSIFICATION	8.391075812830756E-7	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999961731735704	WITHOUT_CLASSIFICATION	3.8268264296648425E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999982646647104	WITHOUT_CLASSIFICATION	1.7353352895989183E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999996209250256	WITHOUT_CLASSIFICATION	3.790749744006191E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.999995143774976	WITHOUT_CLASSIFICATION	4.8562250240934365E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999948902785226	WITHOUT_CLASSIFICATION	5.109721477297125E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999940584299308	WITHOUT_CLASSIFICATION	5.9415700691841015E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999924174518989	WITHOUT_CLASSIFICATION	7.582548101132324E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999991938264975	WITHOUT_CLASSIFICATION	8.061735025275592E-7	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999936547750787	WITHOUT_CLASSIFICATION	6.3452249213220884E-6	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999966719961011	WITHOUT_CLASSIFICATION	3.3280038989523574E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999356113018696	WITHOUT_CLASSIFICATION	6.43886981304859E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999998699163796	WITHOUT_CLASSIFICATION	1.300836203592208E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999996530245601	WITHOUT_CLASSIFICATION	3.469754398950126E-7	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.999999933399663	WITHOUT_CLASSIFICATION	6.660033707588107E-8	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999991448890301	WITHOUT_CLASSIFICATION	8.551109699477035E-7	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999994750952588	WITHOUT_CLASSIFICATION	5.249047412684797E-7	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999961941101436	WITHOUT_CLASSIFICATION	3.805889856465285E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999999943109319	WITHOUT_CLASSIFICATION	5.6890681262952915E-9	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999840128636539	WITHOUT_CLASSIFICATION	1.5987136346176928E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999987726349823	WITHOUT_CLASSIFICATION	1.2273650176894327E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999999816332696	WITHOUT_CLASSIFICATION	1.8366730255564228E-8	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999765094462361	WITHOUT_CLASSIFICATION	2.3490553763833044E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999989772934743	WITHOUT_CLASSIFICATION	1.022706525686159E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999998412541572	WITHOUT_CLASSIFICATION	1.5874584273647352E-7	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999899499834	WITHOUT_CLASSIFICATION	1.00500165818836E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999961958161723	WITHOUT_CLASSIFICATION	3.804183827616917E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9998818256954582	WITHOUT_CLASSIFICATION	1.1817430454172507E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.999999818296242	WITHOUT_CLASSIFICATION	1.8170375818299556E-7	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999707381705	WITHOUT_CLASSIFICATION	2.9261829572399653E-8	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999960117169262	WITHOUT_CLASSIFICATION	3.988283073829031E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999999670888793	WITHOUT_CLASSIFICATION	3.291112079283516E-8	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.999999829440032	WITHOUT_CLASSIFICATION	1.7055996813000553E-7	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999950320335	WITHOUT_CLASSIFICATION	4.967966414608848E-9	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999989290383924	WITHOUT_CLASSIFICATION	1.0709616076270834E-6	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999999690039862	WITHOUT_CLASSIFICATION	3.09960137081281E-8	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999815818668544	WITHOUT_CLASSIFICATION	1.8418133145629696E-5	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999922640882	WITHOUT_CLASSIFICATION	7.735911781068578E-9	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999997566996288	WITHOUT_CLASSIFICATION	2.433003712410658E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999982646647104	WITHOUT_CLASSIFICATION	1.7353352895989183E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999996209250256	WITHOUT_CLASSIFICATION	3.790749744006191E-7	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.999995143774976	WITHOUT_CLASSIFICATION	4.8562250240934365E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999948902785226	WITHOUT_CLASSIFICATION	5.109721477297125E-6	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999940584299308	WITHOUT_CLASSIFICATION	5.9415700691841015E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999924174518989	WITHOUT_CLASSIFICATION	7.582548101132324E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999987564955154	WITHOUT_CLASSIFICATION	1.2435044845455157E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999991938264975	WITHOUT_CLASSIFICATION	8.061735025275592E-7	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999999943109319	WITHOUT_CLASSIFICATION	5.6890681262952915E-9	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999840128636539	WITHOUT_CLASSIFICATION	1.5987136346176928E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999987726349823	WITHOUT_CLASSIFICATION	1.2273650176894327E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999969558518462	WITHOUT_CLASSIFICATION	3.0441481537665333E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999969558518462	WITHOUT_CLASSIFICATION	3.0441481537665333E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999765094462361	WITHOUT_CLASSIFICATION	2.3490553763833044E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999989772934743	WITHOUT_CLASSIFICATION	1.022706525686159E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999998412541572	WITHOUT_CLASSIFICATION	1.5874584273647352E-7	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999985114454422	WITHOUT_CLASSIFICATION	1.4885545578195878E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999788434940408	WITHOUT_CLASSIFICATION	2.1156505959291135E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999999753339589	WITHOUT_CLASSIFICATION	2.466604118846041E-8	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999994997314312	WITHOUT_CLASSIFICATION	5.002685687002026E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999928602037752	WITHOUT_CLASSIFICATION	7.139796224909028E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999940183819529	WITHOUT_CLASSIFICATION	5.981618047106179E-6	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999979659637994	WITHOUT_CLASSIFICATION	2.0340362005590137E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999988967705914	WITHOUT_CLASSIFICATION	1.103229408621959E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999745905794455	WITHOUT_CLASSIFICATION	2.540942055452575E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.999994336058764	WITHOUT_CLASSIFICATION	5.663941236071533E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999996521780732	WITHOUT_CLASSIFICATION	3.478219268287431E-7	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999875673781784	WITHOUT_CLASSIFICATION	1.2432621821530413E-5	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999999411811799	WITHOUT_CLASSIFICATION	5.881882019965007E-8	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999241749322056	WITHOUT_CLASSIFICATION	7.582506779433335E-5	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999999756724566	WITHOUT_CLASSIFICATION	2.4327543319296174E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999974797925	WITHOUT_CLASSIFICATION	2.5202074520877186E-9	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999997941095604	WITHOUT_CLASSIFICATION	2.0589043954746675E-7	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995113383804	WITHOUT_CLASSIFICATION	4.886616197336415E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999939872420491	WITHOUT_CLASSIFICATION	6.01275795091382E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999998794432251	WITHOUT_CLASSIFICATION	1.2055677489730467E-6	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999985099818302	WITHOUT_CLASSIFICATION	1.490018169903027E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999996885336652	WITHOUT_CLASSIFICATION	3.114663348860088E-7	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999991643088384	WITHOUT_CLASSIFICATION	8.356911615948165E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999998497091246	WITHOUT_CLASSIFICATION	1.5029087545154424E-7	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999780942098	WITHOUT_CLASSIFICATION	2.1905790194330177E-8	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999225110861124	WITHOUT_CLASSIFICATION	7.748891388761665E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999949485134079	WITHOUT_CLASSIFICATION	5.051486592119832E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999972838300168	WITHOUT_CLASSIFICATION	2.7161699832638453E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9837702869873641	WITHOUT_CLASSIFICATION	0.016229713012635923	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999832297536	WITHOUT_CLASSIFICATION	1.677024640477472E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9998177372874727	WITHOUT_CLASSIFICATION	1.8226271252736947E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999999821085095	WITHOUT_CLASSIFICATION	1.7891490577491286E-8	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999991960845389	WITHOUT_CLASSIFICATION	8.03915461045427E-7	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999666150125444	WITHOUT_CLASSIFICATION	3.33849874555897E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999999281027997	WITHOUT_CLASSIFICATION	7.189720031150438E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999100009772	WITHOUT_CLASSIFICATION	8.99990227830765E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999997950920853	WITHOUT_CLASSIFICATION	2.0490791476829475E-7	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999996157235348	WITHOUT_CLASSIFICATION	3.842764652294194E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.999999784843616	WITHOUT_CLASSIFICATION	2.151563841227324E-7	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999870739576548	WITHOUT_CLASSIFICATION	1.292604234522289E-5	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.999997130435293	WITHOUT_CLASSIFICATION	2.8695647068760134E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999995050318262	WITHOUT_CLASSIFICATION	4.949681738281423E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999995050318262	WITHOUT_CLASSIFICATION	4.949681738281423E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999995050318262	WITHOUT_CLASSIFICATION	4.949681738281423E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999995050318262	WITHOUT_CLASSIFICATION	4.949681738281423E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999995050318262	WITHOUT_CLASSIFICATION	4.949681738281423E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999995050318262	WITHOUT_CLASSIFICATION	4.949681738281423E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999998428909967	WITHOUT_CLASSIFICATION	1.5710900331648332E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999859792637	WITHOUT_CLASSIFICATION	1.4020736298483202E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999977665350462	WITHOUT_CLASSIFICATION	2.2334649537977997E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999977665350462	WITHOUT_CLASSIFICATION	2.2334649537977997E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999977665350462	WITHOUT_CLASSIFICATION	2.2334649537977997E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999998134358	WITHOUT_CLASSIFICATION	1.8656434395500846E-10	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999971551175689	WITHOUT_CLASSIFICATION	2.8448824311344194E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999982886834782	WITHOUT_CLASSIFICATION	1.7113165218429282E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999919404448547	WITHOUT_CLASSIFICATION	8.059555145210384E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999919404448547	WITHOUT_CLASSIFICATION	8.059555145210384E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999998816330967	WITHOUT_CLASSIFICATION	1.1836690329767306E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999993048492615	WITHOUT_CLASSIFICATION	6.9515073844247E-7	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999984743663866	WITHOUT_CLASSIFICATION	1.5256336134547583E-6	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999962686137858	WITHOUT_CLASSIFICATION	3.7313862143248034E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999858687079848	WITHOUT_CLASSIFICATION	1.4131292015273637E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999540414733	WITHOUT_CLASSIFICATION	4.5958526602808886E-8	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999540414733	WITHOUT_CLASSIFICATION	4.5958526602808886E-8	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999999540414733	WITHOUT_CLASSIFICATION	4.5958526602808886E-8	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.999999858895947	WITHOUT_CLASSIFICATION	1.4110405298094385E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999988016957049	WITHOUT_CLASSIFICATION	1.1983042951090507E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999994218708369	WITHOUT_CLASSIFICATION	5.781291631328249E-7	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999995492154	WITHOUT_CLASSIFICATION	4.507847035281644E-10	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.999998202927966	WITHOUT_CLASSIFICATION	1.797072033914806E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999857129237095	WITHOUT_CLASSIFICATION	1.4287076290446495E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999751392208193	WITHOUT_CLASSIFICATION	2.4860779180786918E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999751392208193	WITHOUT_CLASSIFICATION	2.4860779180786918E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999999139312711	WITHOUT_CLASSIFICATION	8.606872881074833E-8	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999976645395396	WITHOUT_CLASSIFICATION	2.335460460425545E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999999933312547	WITHOUT_CLASSIFICATION	6.66874536473913E-9	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999998632246431	WITHOUT_CLASSIFICATION	1.3677535694817842E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999993224013992	WITHOUT_CLASSIFICATION	6.775986007075037E-7	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999972100301386	WITHOUT_CLASSIFICATION	2.7899698612961268E-6	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9998473188916219	WITHOUT_CLASSIFICATION	1.526811083781456E-4	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999943661062191	WITHOUT_CLASSIFICATION	5.63389378093317E-6	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999998402489758	WITHOUT_CLASSIFICATION	1.5975102412850071E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999991395456	WITHOUT_CLASSIFICATION	8.604542890204884E-10	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999997786296431	WITHOUT_CLASSIFICATION	2.2137035682164538E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999997786296431	WITHOUT_CLASSIFICATION	2.2137035682164538E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999997786296431	WITHOUT_CLASSIFICATION	2.2137035682164538E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999997786296431	WITHOUT_CLASSIFICATION	2.2137035682164538E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999997786296431	WITHOUT_CLASSIFICATION	2.2137035682164538E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9997885840916085	WITHOUT_CLASSIFICATION	2.114159083914378E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9997885840916085	WITHOUT_CLASSIFICATION	2.114159083914378E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9997885840916085	WITHOUT_CLASSIFICATION	2.114159083914378E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9997885840916085	WITHOUT_CLASSIFICATION	2.114159083914378E-4	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999988710598939	WITHOUT_CLASSIFICATION	1.1289401061565977E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999998430720944	WITHOUT_CLASSIFICATION	1.5692790555965038E-7	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.8415010847893727	WITHOUT_CLASSIFICATION	0.1584989152106274	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999999506657011	WITHOUT_CLASSIFICATION	4.933429877442475E-8	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999994541126178	WITHOUT_CLASSIFICATION	5.458873821958744E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999794871176027	WITHOUT_CLASSIFICATION	2.0512882397327278E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999471249866064	WITHOUT_CLASSIFICATION	5.287501339352035E-5	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999998284421484	WITHOUT_CLASSIFICATION	1.715578516642753E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999996902681753	WITHOUT_CLASSIFICATION	3.097318246644669E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999981525984533	WITHOUT_CLASSIFICATION	1.8474015467029325E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999961722414701	WITHOUT_CLASSIFICATION	3.827758529897094E-6	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999995324662281	WITHOUT_CLASSIFICATION	4.6753377199497554E-7	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999998479678854	WITHOUT_CLASSIFICATION	1.5203211460757647E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999994389062038	WITHOUT_CLASSIFICATION	5.610937962482437E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999994389062038	WITHOUT_CLASSIFICATION	5.610937962482437E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999994389062038	WITHOUT_CLASSIFICATION	5.610937962482437E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999979697811913	WITHOUT_CLASSIFICATION	2.0302188087692077E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999979697811913	WITHOUT_CLASSIFICATION	2.0302188087692077E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999999706304663	WITHOUT_CLASSIFICATION	2.9369533706496485E-7	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999999962999111	WITHOUT_CLASSIFICATION	3.7000889716570553E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999999999992618	WITHOUT_CLASSIFICATION	7.382973717878232E-13	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999970391580739	WITHOUT_CLASSIFICATION	2.96084192616971E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999970391580739	WITHOUT_CLASSIFICATION	2.96084192616971E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999970391580739	WITHOUT_CLASSIFICATION	2.96084192616971E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999998562598179	WITHOUT_CLASSIFICATION	1.4374018215261407E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999905385673443	WITHOUT_CLASSIFICATION	9.46143265578014E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999999490860957	WITHOUT_CLASSIFICATION	5.0913904240561755E-8	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999989001190184	WITHOUT_CLASSIFICATION	1.0998809815533776E-6	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9998684267647531	WITHOUT_CLASSIFICATION	1.3157323524686426E-4	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.999956012954767	WITHOUT_CLASSIFICATION	4.39870452329301E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999999648500464	WITHOUT_CLASSIFICATION	3.514995358828156E-8	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999993502104	WITHOUT_CLASSIFICATION	6.497895640753865E-10	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999999161667443	WITHOUT_CLASSIFICATION	8.38332557126695E-8	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997280754947881	WITHOUT_CLASSIFICATION	2.7192450521186404E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9997280754947881	WITHOUT_CLASSIFICATION	2.7192450521186404E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9470649667359752	WITHOUT_CLASSIFICATION	0.05293503326402473	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999993952967922	WITHOUT_CLASSIFICATION	6.047032078466255E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999999508824845	WITHOUT_CLASSIFICATION	4.9117515422131156E-8	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999999508824845	WITHOUT_CLASSIFICATION	4.9117515422131156E-8	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999999508824845	WITHOUT_CLASSIFICATION	4.9117515422131156E-8	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999999508824845	WITHOUT_CLASSIFICATION	4.9117515422131156E-8	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999999508824845	WITHOUT_CLASSIFICATION	4.9117515422131156E-8	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999999738691173	WITHOUT_CLASSIFICATION	2.6130882622384854E-8	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9996676046376555	WITHOUT_CLASSIFICATION	3.3239536234452323E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999984805342722	WITHOUT_CLASSIFICATION	1.5194657277015806E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999834599371	WITHOUT_CLASSIFICATION	1.654006291775976E-8	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999995716785781	WITHOUT_CLASSIFICATION	4.2832142187951754E-7	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999999297250173	WITHOUT_CLASSIFICATION	7.027498274342994E-8	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999999602385157	WITHOUT_CLASSIFICATION	3.976148437495695E-8	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999999946068158	WITHOUT_CLASSIFICATION	5.3931842043996346E-9	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999442821686445	WITHOUT_CLASSIFICATION	5.571783135549681E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999442821686445	WITHOUT_CLASSIFICATION	5.571783135549681E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999996916162048	WITHOUT_CLASSIFICATION	3.0838379521271836E-7	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999966870797509	WITHOUT_CLASSIFICATION	3.31292024915133E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999453800878793	WITHOUT_CLASSIFICATION	5.461991212067419E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999453800878793	WITHOUT_CLASSIFICATION	5.461991212067419E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999997416722309	WITHOUT_CLASSIFICATION	2.5832776914643724E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999964997702454	WITHOUT_CLASSIFICATION	3.5002297546515302E-6	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999933782816299	WITHOUT_CLASSIFICATION	6.621718370125042E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999997473806107	WITHOUT_CLASSIFICATION	2.5261938932093565E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999961846801593	WITHOUT_CLASSIFICATION	3.815319840773232E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999889366461	WITHOUT_CLASSIFICATION	1.1063353840969435E-8	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999996367266141	WITHOUT_CLASSIFICATION	3.632733859812207E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999745709200105	WITHOUT_CLASSIFICATION	2.542907998950314E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9989681964179058	WITHOUT_CLASSIFICATION	0.0010318035820942237	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999940379319	WITHOUT_CLASSIFICATION	5.962068039414467E-9	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999985126874146	WITHOUT_CLASSIFICATION	1.4873125854851412E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999985126874146	WITHOUT_CLASSIFICATION	1.4873125854851412E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999985126874146	WITHOUT_CLASSIFICATION	1.4873125854851412E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999985126874146	WITHOUT_CLASSIFICATION	1.4873125854851412E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999951933886453	WITHOUT_CLASSIFICATION	4.806611354614666E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9997530661397336	WITHOUT_CLASSIFICATION	2.4693386026641265E-4	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999997847116451	WITHOUT_CLASSIFICATION	2.1528835492729438E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993431264792	WITHOUT_CLASSIFICATION	6.568735208745735E-7	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999961157547	WITHOUT_CLASSIFICATION	3.884245260770152E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999999242666971	WITHOUT_CLASSIFICATION	7.573330291660447E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999999242666971	WITHOUT_CLASSIFICATION	7.573330291660447E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999999242666971	WITHOUT_CLASSIFICATION	7.573330291660447E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999999242666971	WITHOUT_CLASSIFICATION	7.573330291660447E-8	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9936951005980516	WITHOUT_CLASSIFICATION	0.00630489940194838	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999968374439	WITHOUT_CLASSIFICATION	3.162556124527272E-9	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999999717266094	WITHOUT_CLASSIFICATION	2.8273390643782114E-8	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999999662504637	WITHOUT_CLASSIFICATION	3.374953630454949E-8	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999899938788	WITHOUT_CLASSIFICATION	1.0006121121815922E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999933490005678	WITHOUT_CLASSIFICATION	6.650999432131208E-6	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999748112826	WITHOUT_CLASSIFICATION	2.518871738533071E-8	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999934667034666	WITHOUT_CLASSIFICATION	6.533296533446549E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999934667034666	WITHOUT_CLASSIFICATION	6.533296533446549E-6	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999833214014	WITHOUT_CLASSIFICATION	1.667859859277686E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999972310887919	WITHOUT_CLASSIFICATION	2.768911208040356E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9990497633703322	WITHOUT_CLASSIFICATION	9.502366296678738E-4	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999997774654794	WITHOUT_CLASSIFICATION	2.2253452069446342E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999957565051552	WITHOUT_CLASSIFICATION	4.243494844786492E-6	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999931618229152	WITHOUT_CLASSIFICATION	6.838177084687631E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999994691183688	WITHOUT_CLASSIFICATION	5.30881631208446E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999994964020597	WITHOUT_CLASSIFICATION	5.035979403177827E-7	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999975654997	WITHOUT_CLASSIFICATION	2.434500390644856E-9	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999991261214491	WITHOUT_CLASSIFICATION	8.738785509694099E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999855929446	WITHOUT_CLASSIFICATION	1.4407055433016958E-8	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999995996801927	WITHOUT_CLASSIFICATION	4.003198073252767E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999960926216	WITHOUT_CLASSIFICATION	3.907378461065632E-9	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999938012060272	WITHOUT_CLASSIFICATION	6.198793972873062E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999938012060272	WITHOUT_CLASSIFICATION	6.198793972873062E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999996791336752	WITHOUT_CLASSIFICATION	3.2086632483212876E-7	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999999566804711	WITHOUT_CLASSIFICATION	4.331952878740573E-8	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.999938080756059	WITHOUT_CLASSIFICATION	6.191924394103029E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999999844634236	WITHOUT_CLASSIFICATION	1.5536576369071766E-8	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.999994572744737	WITHOUT_CLASSIFICATION	5.427255262952926E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999924092604812	WITHOUT_CLASSIFICATION	7.5907395188485165E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999999908060022	WITHOUT_CLASSIFICATION	9.193997789634385E-8	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999096762541	WITHOUT_CLASSIFICATION	9.032374581813043E-8	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999936368804664	WITHOUT_CLASSIFICATION	6.363119533584498E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999936324656	WITHOUT_CLASSIFICATION	6.367534399525748E-9	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999917396689663	WITHOUT_CLASSIFICATION	8.260331033862149E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999894397747134	WITHOUT_CLASSIFICATION	1.056022528647292E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999894397747134	WITHOUT_CLASSIFICATION	1.056022528647292E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999996351619452	WITHOUT_CLASSIFICATION	3.6483805473253073E-7	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999998693316	WITHOUT_CLASSIFICATION	1.3066833193329364E-10	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999999484040197	WITHOUT_CLASSIFICATION	5.159598016308395E-8	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999946404616882	WITHOUT_CLASSIFICATION	5.359538311901119E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999926015571873	WITHOUT_CLASSIFICATION	7.398442812652021E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999827966614562	WITHOUT_CLASSIFICATION	1.7203338543844584E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999998413234623	WITHOUT_CLASSIFICATION	1.5867653772957259E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999998541643013	WITHOUT_CLASSIFICATION	1.4583569872642647E-7	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999996287742076	WITHOUT_CLASSIFICATION	3.7122579246030847E-7	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999998838140988	WITHOUT_CLASSIFICATION	1.1618590123759232E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999883914966	WITHOUT_CLASSIFICATION	1.1608503405228151E-8	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999475840494	WITHOUT_CLASSIFICATION	5.24159506731439E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999997413701778	WITHOUT_CLASSIFICATION	2.5862982223295997E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999999953416169	WITHOUT_CLASSIFICATION	4.658383082384441E-9	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.999999968411268	WITHOUT_CLASSIFICATION	3.158873195960943E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999412390822	WITHOUT_CLASSIFICATION	5.876091777235573E-8	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999998519506316	WITHOUT_CLASSIFICATION	1.48049368407353E-7	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999998432015419	WITHOUT_CLASSIFICATION	1.567984581786043E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999997331738458	WITHOUT_CLASSIFICATION	2.668261541777203E-7	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999991734829248	WITHOUT_CLASSIFICATION	8.265170752077489E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999996211976263	WITHOUT_CLASSIFICATION	3.7880237367333117E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999999966673038	WITHOUT_CLASSIFICATION	3.332696229815045E-9	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9987979322098112	WITHOUT_CLASSIFICATION	0.0012020677901888434	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999999614369992	WITHOUT_CLASSIFICATION	3.8563000847358055E-8	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999370344729188	WITHOUT_CLASSIFICATION	6.296552708108186E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999999289988075	WITHOUT_CLASSIFICATION	7.100119241636168E-8	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998660547949727	WITHOUT_CLASSIFICATION	1.3394520502732477E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999977003290788	WITHOUT_CLASSIFICATION	2.2996709211525134E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999999995293245	WITHOUT_CLASSIFICATION	4.706755788482517E-10	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999992232679037	WITHOUT_CLASSIFICATION	7.767320961858079E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999933915039	WITHOUT_CLASSIFICATION	6.608496079579445E-9	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999972747099	WITHOUT_CLASSIFICATION	2.725290102170883E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999972747099	WITHOUT_CLASSIFICATION	2.725290102170883E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.999999972747099	WITHOUT_CLASSIFICATION	2.725290102170883E-8	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.999999999380688	WITHOUT_CLASSIFICATION	6.193120192456249E-10	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999971552028084	WITHOUT_CLASSIFICATION	2.8447971916470446E-6	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999999831080266	WITHOUT_CLASSIFICATION	1.6891973433329014E-8	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999996940557073	WITHOUT_CLASSIFICATION	3.059442926278601E-7	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999990058685256	WITHOUT_CLASSIFICATION	9.94131474326904E-7	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9955115296333507	WITHOUT_CLASSIFICATION	0.0044884703666492635	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999999997914822	WITHOUT_CLASSIFICATION	2.0851771500067384E-10	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999856669164873	WITHOUT_CLASSIFICATION	1.433308351269213E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997677214538	WITHOUT_CLASSIFICATION	2.3227854608259117E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997677214538	WITHOUT_CLASSIFICATION	2.3227854608259117E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999997677214538	WITHOUT_CLASSIFICATION	2.3227854608259117E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.999999764171604	WITHOUT_CLASSIFICATION	2.358283961258706E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999999965737938	WITHOUT_CLASSIFICATION	3.4262061593110737E-9	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999991319875754	WITHOUT_CLASSIFICATION	8.680124245854203E-7	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999999370755913	WITHOUT_CLASSIFICATION	6.292440874197214E-8	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999999916277568	WITHOUT_CLASSIFICATION	8.372243295493666E-9	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999928247710391	WITHOUT_CLASSIFICATION	7.175228960876734E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999414163397	WITHOUT_CLASSIFICATION	5.858366030673428E-7	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999976306139093	WITHOUT_CLASSIFICATION	2.369386090657897E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999534487272	WITHOUT_CLASSIFICATION	4.655127284636433E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999891466259516	WITHOUT_CLASSIFICATION	1.0853374048338087E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999999854293741	WITHOUT_CLASSIFICATION	1.457062595166611E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999997941095604	WITHOUT_CLASSIFICATION	2.0589043954746675E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999997941095604	WITHOUT_CLASSIFICATION	2.0589043954746675E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999999460247	WITHOUT_CLASSIFICATION	5.3975207574425136E-11	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999995728595843	WITHOUT_CLASSIFICATION	4.2714041571036023E-7	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999997674726984	WITHOUT_CLASSIFICATION	2.325273017039375E-7	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999991368785504	WITHOUT_CLASSIFICATION	8.631214496537227E-7	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999867316075645	WITHOUT_CLASSIFICATION	1.3268392435484691E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999992433606327	WITHOUT_CLASSIFICATION	7.566393671905206E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999999931710559	WITHOUT_CLASSIFICATION	6.828944098796125E-8	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.999999931710559	WITHOUT_CLASSIFICATION	6.828944098796125E-8	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999996803939276	WITHOUT_CLASSIFICATION	3.1960607234454154E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999992477254032	WITHOUT_CLASSIFICATION	7.522745967616306E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999940941050518	WITHOUT_CLASSIFICATION	5.905894948165818E-6	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999999788058144	WITHOUT_CLASSIFICATION	2.1194185685454E-8	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999999965428917	WITHOUT_CLASSIFICATION	3.4571082272121536E-9	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999969769507737	WITHOUT_CLASSIFICATION	3.0230492262800564E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999997026777626	WITHOUT_CLASSIFICATION	2.9732223743509974E-7	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999946035135427	WITHOUT_CLASSIFICATION	5.396486457254757E-6	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999998760433634	WITHOUT_CLASSIFICATION	1.2395663664882142E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999997001223998	WITHOUT_CLASSIFICATION	2.998776002557248E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999551151415	WITHOUT_CLASSIFICATION	4.4884858544722834E-8	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9992492108292094	WITHOUT_CLASSIFICATION	7.507891707906871E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999999522540024	WITHOUT_CLASSIFICATION	4.774599752710252E-8	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999991717887436	WITHOUT_CLASSIFICATION	8.282112562618483E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999991717887436	WITHOUT_CLASSIFICATION	8.282112562618483E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999991717887436	WITHOUT_CLASSIFICATION	8.282112562618483E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999991717887436	WITHOUT_CLASSIFICATION	8.282112562618483E-7	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999999782185441	WITHOUT_CLASSIFICATION	2.1781455914251048E-8	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999999961032148	WITHOUT_CLASSIFICATION	3.89678521098206E-9	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9544548836188383	WITHOUT_CLASSIFICATION	0.04554511638116158	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999988940979999	WITHOUT_CLASSIFICATION	1.105902000094557E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.999999987512	WITHOUT_CLASSIFICATION	1.248800007534318E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999999787784638	WITHOUT_CLASSIFICATION	2.1221536201487986E-8	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999992549013578	WITHOUT_CLASSIFICATION	7.450986421649795E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999969410418419	WITHOUT_CLASSIFICATION	3.0589581581433378E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999994463780273	WITHOUT_CLASSIFICATION	5.53621972787056E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999925344833083	WITHOUT_CLASSIFICATION	7.465516691690833E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.99999787459424	WITHOUT_CLASSIFICATION	2.125405759900357E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.99999787459424	WITHOUT_CLASSIFICATION	2.125405759900357E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.99999787459424	WITHOUT_CLASSIFICATION	2.125405759900357E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999979203117961	WITHOUT_CLASSIFICATION	2.079688203864823E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999841195774598	WITHOUT_CLASSIFICATION	1.5880422540122053E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999960814088248	WITHOUT_CLASSIFICATION	3.9185911752058094E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996303060886	WITHOUT_CLASSIFICATION	3.696939114236566E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999996303060886	WITHOUT_CLASSIFICATION	3.696939114236566E-7	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999999121946086	WITHOUT_CLASSIFICATION	8.780539143827375E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999979203117961	WITHOUT_CLASSIFICATION	2.079688203864823E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999991919372553	WITHOUT_CLASSIFICATION	8.080627447104419E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999987572949421	WITHOUT_CLASSIFICATION	1.2427050578678266E-6	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999994773117369	WITHOUT_CLASSIFICATION	5.226882630024883E-7	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999969013040881	WITHOUT_CLASSIFICATION	3.0986959119622563E-6	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999999300420916	WITHOUT_CLASSIFICATION	6.99579083416107E-8	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9994444047495655	WITHOUT_CLASSIFICATION	5.555952504343797E-4	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999999646937974	WITHOUT_CLASSIFICATION	3.530620254759323E-8	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9997651470845568	WITHOUT_CLASSIFICATION	2.3485291544329774E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968319371435	WITHOUT_CLASSIFICATION	3.1680628565659003E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999968319371435	WITHOUT_CLASSIFICATION	3.1680628565659003E-6	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9998890274733352	WITHOUT_CLASSIFICATION	1.1097252666476362E-4	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.999987085834163	WITHOUT_CLASSIFICATION	1.2914165837021001E-5	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999983994548789	WITHOUT_CLASSIFICATION	1.6005451210362785E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.999999998175393	WITHOUT_CLASSIFICATION	1.8246071100969438E-9	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999633374129	WITHOUT_CLASSIFICATION	3.666258703111354E-8	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9892834987696231	WITHOUT_CLASSIFICATION	0.010716501230376988	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999998345556237	WITHOUT_CLASSIFICATION	1.6544437626977652E-7	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999999330850113	WITHOUT_CLASSIFICATION	6.69149886572764E-8	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999998799479899	WITHOUT_CLASSIFICATION	1.200520101859077E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999998664033392	WITHOUT_CLASSIFICATION	1.335966607683077E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.999999772823831	WITHOUT_CLASSIFICATION	2.2717616887742957E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999925344833083	WITHOUT_CLASSIFICATION	7.465516691690833E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999925344833083	WITHOUT_CLASSIFICATION	7.465516691690833E-6	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999999195241648	WITHOUT_CLASSIFICATION	8.047583524440301E-8	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999993167953574	WITHOUT_CLASSIFICATION	6.832046426186383E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.999999579870576	WITHOUT_CLASSIFICATION	4.2012942399783484E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999991359908642	WITHOUT_CLASSIFICATION	8.640091358489578E-7	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.999999938020632	WITHOUT_CLASSIFICATION	6.197936806692935E-8	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999988596345022	WITHOUT_CLASSIFICATION	1.1403654978054053E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999997615097	WITHOUT_CLASSIFICATION	2.384904240513097E-10	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.99999999971561	WITHOUT_CLASSIFICATION	2.843900229693015E-10	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.999999994152237	WITHOUT_CLASSIFICATION	5.8477630094243005E-9	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999996945409038	WITHOUT_CLASSIFICATION	3.054590961812276E-7	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999509110516381	WITHOUT_CLASSIFICATION	4.9088948361860174E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999998370740611	WITHOUT_CLASSIFICATION	1.6292593886513314E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999961958161723	WITHOUT_CLASSIFICATION	3.804183827616917E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999961958161723	WITHOUT_CLASSIFICATION	3.804183827616917E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999995725971716	WITHOUT_CLASSIFICATION	4.274028284077221E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999852110552	WITHOUT_CLASSIFICATION	1.4788944778334287E-8	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999931757451218	WITHOUT_CLASSIFICATION	6.824254878286124E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999791894848	WITHOUT_CLASSIFICATION	2.0810515176704557E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.999999928630747	WITHOUT_CLASSIFICATION	7.136925297167179E-8	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999329950813	WITHOUT_CLASSIFICATION	6.700491876052324E-8	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999955424098562	WITHOUT_CLASSIFICATION	4.457590143751447E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9998865930391476	WITHOUT_CLASSIFICATION	1.1340696085237526E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999984448976453	WITHOUT_CLASSIFICATION	1.555102354632611E-6	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9991234835170817	WITHOUT_CLASSIFICATION	8.76516482918407E-4	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999998483343893	WITHOUT_CLASSIFICATION	1.5166561080023132E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999999839539221	WITHOUT_CLASSIFICATION	1.604607789798806E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999997447375	WITHOUT_CLASSIFICATION	2.5526247308857567E-10	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999790631482361	WITHOUT_CLASSIFICATION	2.0936851763868425E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999992549013578	WITHOUT_CLASSIFICATION	7.450986421649795E-7	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9094592479340864	WITHOUT_CLASSIFICATION	0.0905407520659136	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999249661622209	WITHOUT_CLASSIFICATION	7.503383777910294E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999249661622209	WITHOUT_CLASSIFICATION	7.503383777910294E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.999249661622209	WITHOUT_CLASSIFICATION	7.503383777910294E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999977666016446	WITHOUT_CLASSIFICATION	2.233398355323857E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999977666016446	WITHOUT_CLASSIFICATION	2.233398355323857E-6	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999999645304795	WITHOUT_CLASSIFICATION	3.5469520457478635E-8	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.5047426195246252	WITHOUT_CLASSIFICATION	0.4952573804753749	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999999534401826	WITHOUT_CLASSIFICATION	4.6559817461203497E-8	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999957893693645	WITHOUT_CLASSIFICATION	4.2106306354593225E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999999220294263	WITHOUT_CLASSIFICATION	7.797057369663803E-8	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999999177701644	WITHOUT_CLASSIFICATION	8.22298355892871E-8	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999992549013578	WITHOUT_CLASSIFICATION	7.450986421649795E-7	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999999977117887	WITHOUT_CLASSIFICATION	2.2882112388697806E-9	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999985651133182	WITHOUT_CLASSIFICATION	1.4348866818093267E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9996870400976511	WITHOUT_CLASSIFICATION	3.129599023488512E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9987341906934261	WITHOUT_CLASSIFICATION	0.001265809306573968	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999980249191066	WITHOUT_CLASSIFICATION	1.975080893419788E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999993376879187	WITHOUT_CLASSIFICATION	6.623120813437507E-7	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999982634754729	WITHOUT_CLASSIFICATION	1.7365245270862965E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999999206045121	WITHOUT_CLASSIFICATION	7.939548779520011E-8	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999954452832239	WITHOUT_CLASSIFICATION	4.5547167761103325E-6	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999951592433373	WITHOUT_CLASSIFICATION	4.840756662761551E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999996472183341	WITHOUT_CLASSIFICATION	3.527816658443453E-7	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999996784750884	WITHOUT_CLASSIFICATION	3.2152491151689313E-7	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999683214545	WITHOUT_CLASSIFICATION	3.1678545564310925E-8	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999998466788039	WITHOUT_CLASSIFICATION	1.533211960557064E-7	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999981628668098	WITHOUT_CLASSIFICATION	1.8371331902486237E-6	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999999978598414	WITHOUT_CLASSIFICATION	2.1401586075395293E-9	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999618333736	WITHOUT_CLASSIFICATION	3.8166626361799205E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999715423922	WITHOUT_CLASSIFICATION	2.8457607827356507E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999715423922	WITHOUT_CLASSIFICATION	2.8457607827356507E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999893533669116	WITHOUT_CLASSIFICATION	1.0646633088396315E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999998195949382	WITHOUT_CLASSIFICATION	1.8040506170268645E-7	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999994733054445	WITHOUT_CLASSIFICATION	5.266945555389978E-7	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9989545102885999	WITHOUT_CLASSIFICATION	0.001045489711400012	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.99704535158197	WITHOUT_CLASSIFICATION	0.0029546484180299347	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999770562287499	WITHOUT_CLASSIFICATION	2.2943771250161768E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999770562287499	WITHOUT_CLASSIFICATION	2.2943771250161768E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999870774982	WITHOUT_CLASSIFICATION	1.2922501765534904E-8	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999998448405715	WITHOUT_CLASSIFICATION	1.5515942862603883E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999974003882812	WITHOUT_CLASSIFICATION	2.599611718790092E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999974003882812	WITHOUT_CLASSIFICATION	2.599611718790092E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999953072682	WITHOUT_CLASSIFICATION	4.692731705576222E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999997028990832	WITHOUT_CLASSIFICATION	2.9710091668577245E-7	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999902528776128	WITHOUT_CLASSIFICATION	9.747122387190993E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998739826088	WITHOUT_CLASSIFICATION	1.2601739118373645E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9998783223050646	WITHOUT_CLASSIFICATION	1.2167769493541108E-4	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998836882446	WITHOUT_CLASSIFICATION	1.1631175538895584E-7	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999069858087	WITHOUT_CLASSIFICATION	9.301419138010351E-8	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999998671534676	WITHOUT_CLASSIFICATION	1.3284653236525153E-7	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999995691080827	WITHOUT_CLASSIFICATION	4.3089191731366173E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999996427584	WITHOUT_CLASSIFICATION	3.5724147734382837E-10	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999986608253308	WITHOUT_CLASSIFICATION	1.3391746690827426E-6	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9969807712368011	WITHOUT_CLASSIFICATION	0.0030192287631990162	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999998240103214	WITHOUT_CLASSIFICATION	1.7598967873028306E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999999388843934	WITHOUT_CLASSIFICATION	6.111560656669497E-8	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999994076077419	WITHOUT_CLASSIFICATION	5.92392258183233E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999901442594	WITHOUT_CLASSIFICATION	9.855740526243796E-9	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999869239707307	WITHOUT_CLASSIFICATION	1.3076029269195466E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999992291912	WITHOUT_CLASSIFICATION	7.708087996287524E-8	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999688216548958	WITHOUT_CLASSIFICATION	3.1178345104203446E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999901046447879	WITHOUT_CLASSIFICATION	9.895355212076256E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999999081420796	WITHOUT_CLASSIFICATION	9.185792039214502E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999999081420796	WITHOUT_CLASSIFICATION	9.185792039214502E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999999081420796	WITHOUT_CLASSIFICATION	9.185792039214502E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999999081420796	WITHOUT_CLASSIFICATION	9.185792039214502E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999999081420796	WITHOUT_CLASSIFICATION	9.185792039214502E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999994838741566	WITHOUT_CLASSIFICATION	5.161258434271991E-7	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999998895834726	WITHOUT_CLASSIFICATION	1.1041652735791387E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999992913136	WITHOUT_CLASSIFICATION	7.086864355354492E-10	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999967535447	WITHOUT_CLASSIFICATION	3.2464553682732053E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999988185720451	WITHOUT_CLASSIFICATION	1.1814279549472177E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999988185720451	WITHOUT_CLASSIFICATION	1.1814279549472177E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999988185720451	WITHOUT_CLASSIFICATION	1.1814279549472177E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999988185720451	WITHOUT_CLASSIFICATION	1.1814279549472177E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999999949979088	WITHOUT_CLASSIFICATION	5.0020911387022845E-9	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999658194856	WITHOUT_CLASSIFICATION	3.418051447149345E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999805342113922	WITHOUT_CLASSIFICATION	1.946578860780379E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999904011899541	WITHOUT_CLASSIFICATION	9.59881004588838E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999904011899541	WITHOUT_CLASSIFICATION	9.59881004588838E-6	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999911608379476	WITHOUT_CLASSIFICATION	8.83916205237949E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999415049282	WITHOUT_CLASSIFICATION	5.849507179338233E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999415049282	WITHOUT_CLASSIFICATION	5.849507179338233E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.999998992931837	WITHOUT_CLASSIFICATION	1.0070681629513073E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999998867766516	WITHOUT_CLASSIFICATION	1.1322334834479506E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999939451753793	WITHOUT_CLASSIFICATION	6.05482462072208E-6	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999996821502436	WITHOUT_CLASSIFICATION	3.1784975635730255E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999995757398118	WITHOUT_CLASSIFICATION	4.2426018827708127E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999997457294242	WITHOUT_CLASSIFICATION	2.542705758506105E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999997457294242	WITHOUT_CLASSIFICATION	2.542705758506105E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9993645398665737	WITHOUT_CLASSIFICATION	6.354601334263067E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999996241963849	WITHOUT_CLASSIFICATION	3.758036150951609E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999993225242357	WITHOUT_CLASSIFICATION	6.774757642841635E-7	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999996780577406	WITHOUT_CLASSIFICATION	3.2194225941762263E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.999971430380269	WITHOUT_CLASSIFICATION	2.8569619730933326E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999915741674	WITHOUT_CLASSIFICATION	8.42583255599714E-9	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999994625377671	WITHOUT_CLASSIFICATION	5.374622328426678E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999875656204464	WITHOUT_CLASSIFICATION	1.2434379553533165E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9998963931818027	WITHOUT_CLASSIFICATION	1.0360681819737241E-4	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999970661177001	WITHOUT_CLASSIFICATION	2.93388229997641E-6	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9999689083957015	WITHOUT_CLASSIFICATION	3.109160429840625E-5	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9980111663579659	WITHOUT_CLASSIFICATION	0.001988833642034019	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999879869324704	WITHOUT_CLASSIFICATION	1.2013067529595971E-5	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9993156662066087	WITHOUT_CLASSIFICATION	6.84333793391291E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999999631159758	WITHOUT_CLASSIFICATION	3.6884024200949984E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999615541248584	WITHOUT_CLASSIFICATION	3.8445875141529484E-5	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999944606755317	WITHOUT_CLASSIFICATION	5.53932446834378E-6	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.999998680882912	WITHOUT_CLASSIFICATION	1.3191170879686119E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999987564955154	WITHOUT_CLASSIFICATION	1.2435044845455157E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999995270562791	WITHOUT_CLASSIFICATION	4.7294372081781036E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999969558518462	WITHOUT_CLASSIFICATION	3.0441481537665333E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999969558518462	WITHOUT_CLASSIFICATION	3.0441481537665333E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999917998759807	WITHOUT_CLASSIFICATION	8.200124019325348E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9766276182622616	WITHOUT_CLASSIFICATION	0.023372381737738347	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9999849133816823	WITHOUT_CLASSIFICATION	1.5086618317743785E-5	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9914551822151909	WITHOUT_CLASSIFICATION	0.008544817784809072	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.8474848303957767	WITHOUT_CLASSIFICATION	0.15251516960422332	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999802853962446	WITHOUT_CLASSIFICATION	1.9714603755369502E-5	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9551152821270391	WITHOUT_CLASSIFICATION	0.04488471787296088	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9944426225881605	WITHOUT_CLASSIFICATION	0.005557377411839459	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9889868884725015	DEFECT	0.01101311152749858	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9997466707820252	WITHOUT_CLASSIFICATION	2.533292179747863E-4	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999972872112868	WITHOUT_CLASSIFICATION	2.712788713214429E-6	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9155764946756284	DEFECT	0.08442350532437166	WITHOUT_CLASSIFICATION
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9889868884725015	DEFECT	0.01101311152749858	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.5945926812145524	WITHOUT_CLASSIFICATION	0.4054073187854476	DEFECT
