/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999039956443664	WITHOUT_CLASSIFICATION	9.60043556335555E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998925685280856	WITHOUT_CLASSIFICATION	1.0743147191438129E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999978855940901	WITHOUT_CLASSIFICATION	2.114405909869634E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999978855940901	WITHOUT_CLASSIFICATION	2.114405909869634E-6	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999946612520398	WITHOUT_CLASSIFICATION	5.338747960114148E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999997913346184	WITHOUT_CLASSIFICATION	2.0866538160260167E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999996612100626	WITHOUT_CLASSIFICATION	3.387899375187994E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999986939203024	WITHOUT_CLASSIFICATION	1.3060796976688702E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999979408410429	WITHOUT_CLASSIFICATION	2.0591589570918817E-6	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999992171964932	WITHOUT_CLASSIFICATION	7.828035066869376E-7	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999999511136215	WITHOUT_CLASSIFICATION	4.8886378609843565E-8	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999894441929633	WITHOUT_CLASSIFICATION	1.0555807036665285E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999970963471194	WITHOUT_CLASSIFICATION	2.9036528805594153E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9996494693509714	WITHOUT_CLASSIFICATION	3.5053064902860397E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.999996992309821	WITHOUT_CLASSIFICATION	3.0076901790090405E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.999998673985934	WITHOUT_CLASSIFICATION	1.3260140659953274E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.999998673985934	WITHOUT_CLASSIFICATION	1.3260140659953274E-6	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999999787844557	WITHOUT_CLASSIFICATION	2.1215544285457826E-8	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999930676505582	WITHOUT_CLASSIFICATION	6.932349441788482E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9993959819686017	WITHOUT_CLASSIFICATION	6.040180313982695E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999989501318766	WITHOUT_CLASSIFICATION	1.0498681234399713E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9997735962219861	WITHOUT_CLASSIFICATION	2.2640377801383922E-4	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999996417177666	WITHOUT_CLASSIFICATION	3.5828223345270597E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999997587933207	WITHOUT_CLASSIFICATION	2.412066792641206E-7	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999993757190696	WITHOUT_CLASSIFICATION	6.242809304642221E-7	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999999514197214	WITHOUT_CLASSIFICATION	4.858027859038382E-7	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999996274601256	WITHOUT_CLASSIFICATION	3.7253987437625886E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999783712211636	WITHOUT_CLASSIFICATION	2.1628778836449574E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999994245395661	WITHOUT_CLASSIFICATION	5.754604338269986E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999916282768542	WITHOUT_CLASSIFICATION	8.371723145810784E-6	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999976308038224	WITHOUT_CLASSIFICATION	2.3691961776561135E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999940658428994	WITHOUT_CLASSIFICATION	5.934157100625084E-6	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999989032567779	WITHOUT_CLASSIFICATION	1.0967432220672865E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999856760654757	WITHOUT_CLASSIFICATION	1.4323934524340398E-5	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999983379594551	WITHOUT_CLASSIFICATION	1.6620405449148755E-6	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.999997703197878	WITHOUT_CLASSIFICATION	2.296802122131944E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999766620713033	WITHOUT_CLASSIFICATION	2.3337928696722823E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999989501318766	WITHOUT_CLASSIFICATION	1.0498681234399713E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999973717130825	WITHOUT_CLASSIFICATION	2.6282869176866957E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999967064057109	WITHOUT_CLASSIFICATION	3.293594289168529E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999967064057109	WITHOUT_CLASSIFICATION	3.293594289168529E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999998232301572	WITHOUT_CLASSIFICATION	1.7676984274384988E-7	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999988563580957	WITHOUT_CLASSIFICATION	1.1436419042440545E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999947738370524	WITHOUT_CLASSIFICATION	5.2261629475554965E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999947738370524	WITHOUT_CLASSIFICATION	5.2261629475554965E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999947086627238	WITHOUT_CLASSIFICATION	5.291337276181139E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999751960784443	WITHOUT_CLASSIFICATION	2.480392155567124E-5	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999989993815875	WITHOUT_CLASSIFICATION	1.0006184123898476E-6	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999928428740705	WITHOUT_CLASSIFICATION	7.157125929517417E-6	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999991866349701	WITHOUT_CLASSIFICATION	8.133650299368956E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978529466612	WITHOUT_CLASSIFICATION	2.147053338786915E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999998455568194	WITHOUT_CLASSIFICATION	1.544431806342487E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999993532366018	WITHOUT_CLASSIFICATION	6.467633981764107E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999993532366018	WITHOUT_CLASSIFICATION	6.467633981764107E-7	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999988656013461	WITHOUT_CLASSIFICATION	1.134398653847171E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999988202224993	WITHOUT_CLASSIFICATION	1.179777500736603E-6	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999992527035831	WITHOUT_CLASSIFICATION	7.472964168529527E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999992527035831	WITHOUT_CLASSIFICATION	7.472964168529527E-7	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999989600714754	WITHOUT_CLASSIFICATION	1.0399285246342696E-6	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999800250591382	WITHOUT_CLASSIFICATION	1.9974940861800205E-5	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999840640795942	WITHOUT_CLASSIFICATION	1.5935920405808822E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999471493413586	WITHOUT_CLASSIFICATION	5.28506586413925E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999992922988177	WITHOUT_CLASSIFICATION	7.077011822365307E-7	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999986296568477	WITHOUT_CLASSIFICATION	1.370343152281085E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.999998708458383	WITHOUT_CLASSIFICATION	1.291541616951449E-6	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999985474695468	WITHOUT_CLASSIFICATION	1.4525304532008348E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999963391049416	WITHOUT_CLASSIFICATION	3.6608950584769452E-6	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999830311092841	WITHOUT_CLASSIFICATION	1.6968890715895407E-5	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999968392979502	WITHOUT_CLASSIFICATION	3.1607020497213246E-6	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.999979245478254	WITHOUT_CLASSIFICATION	2.0754521745986938E-5	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.999946028872253	WITHOUT_CLASSIFICATION	5.39711277469575E-5	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.999999265694632	WITHOUT_CLASSIFICATION	7.343053679652616E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999985243996085	WITHOUT_CLASSIFICATION	1.4756003915612647E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999985243996085	WITHOUT_CLASSIFICATION	1.4756003915612647E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999471493413586	WITHOUT_CLASSIFICATION	5.28506586413925E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999418363843238	WITHOUT_CLASSIFICATION	5.8163615676288304E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999471493413586	WITHOUT_CLASSIFICATION	5.28506586413925E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999419297849701	WITHOUT_CLASSIFICATION	5.807021502983848E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999418363843238	WITHOUT_CLASSIFICATION	5.8163615676288304E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999440182301179	WITHOUT_CLASSIFICATION	5.598176988211023E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.999933875370595	WITHOUT_CLASSIFICATION	6.612462940498442E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999544038353405	WITHOUT_CLASSIFICATION	4.5596164659553396E-5	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999768352159	WITHOUT_CLASSIFICATION	2.3164784088595143E-8	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999870411214399	WITHOUT_CLASSIFICATION	1.2958878560131841E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999870411214399	WITHOUT_CLASSIFICATION	1.2958878560131841E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999870411214399	WITHOUT_CLASSIFICATION	1.2958878560131841E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999870411214399	WITHOUT_CLASSIFICATION	1.2958878560131841E-5	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999446236321076	WITHOUT_CLASSIFICATION	5.537636789242771E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999986333949616	WITHOUT_CLASSIFICATION	1.3666050383887625E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999986333949616	WITHOUT_CLASSIFICATION	1.3666050383887625E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999960032794181	WITHOUT_CLASSIFICATION	3.996720582033297E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999986333949616	WITHOUT_CLASSIFICATION	1.3666050383887625E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999907666505776	WITHOUT_CLASSIFICATION	9.23334942244544E-6	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999647189633567	WITHOUT_CLASSIFICATION	3.528103664328867E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999997754466255	WITHOUT_CLASSIFICATION	2.245533745153791E-7	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999999041317763	WITHOUT_CLASSIFICATION	9.586822364774229E-8	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.999994083201071	WITHOUT_CLASSIFICATION	5.916798929016519E-6	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999966921053206	WITHOUT_CLASSIFICATION	3.307894679453468E-6	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999970236422605	WITHOUT_CLASSIFICATION	2.97635773961284E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999972562010233	WITHOUT_CLASSIFICATION	2.743798976770843E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999991340504374	WITHOUT_CLASSIFICATION	8.659495625624947E-7	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999993300772885	WITHOUT_CLASSIFICATION	6.69922711567105E-7	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999926149931008	WITHOUT_CLASSIFICATION	7.385006899260596E-6	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.999997637424405	WITHOUT_CLASSIFICATION	2.3625755950627687E-6	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999955766938988	WITHOUT_CLASSIFICATION	4.423306101089683E-6	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.999978303562654	WITHOUT_CLASSIFICATION	2.1696437345961953E-5	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999905205456217	WITHOUT_CLASSIFICATION	9.479454378243054E-6	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999058713163492	WITHOUT_CLASSIFICATION	9.412868365079848E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9994352832768834	WITHOUT_CLASSIFICATION	5.647167231166876E-4	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999677917508967	WITHOUT_CLASSIFICATION	3.22082491034321E-5	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.99999907013952	WITHOUT_CLASSIFICATION	9.2986047996122E-7	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999997689792964	WITHOUT_CLASSIFICATION	2.3102070355366107E-7	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999894017639197	WITHOUT_CLASSIFICATION	1.0598236080211238E-5	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999991450759355	WITHOUT_CLASSIFICATION	8.549240644790683E-7	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999889190230148	WITHOUT_CLASSIFICATION	1.1080976985335156E-5	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999991340504374	WITHOUT_CLASSIFICATION	8.659495625624947E-7	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999991156523	WITHOUT_CLASSIFICATION	8.843476998943257E-7	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999978303865312	WITHOUT_CLASSIFICATION	2.1696134688291424E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999986869797843	WITHOUT_CLASSIFICATION	1.3130202157616975E-6	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999936163857318	WITHOUT_CLASSIFICATION	6.3836142682055646E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999980836344287	WITHOUT_CLASSIFICATION	1.916365571389051E-6	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999950815646427	WITHOUT_CLASSIFICATION	4.918435357280652E-6	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999948328299293	WITHOUT_CLASSIFICATION	5.167170070812835E-6	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999740019837059	WITHOUT_CLASSIFICATION	2.5998016294076156E-5	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999873043276726	WITHOUT_CLASSIFICATION	1.2695672327348337E-5	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999936441604372	WITHOUT_CLASSIFICATION	6.355839562842734E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999960328297008	WITHOUT_CLASSIFICATION	3.967170299175752E-6	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999984507267835	WITHOUT_CLASSIFICATION	1.5492732165400118E-6	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999987692466041	WITHOUT_CLASSIFICATION	1.2307533959447979E-6	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999915154441857	WITHOUT_CLASSIFICATION	8.484555814271682E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.99999834128035	WITHOUT_CLASSIFICATION	1.6587196499247225E-6	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999968769687341	WITHOUT_CLASSIFICATION	3.123031265922307E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999989641899082	WITHOUT_CLASSIFICATION	1.0358100917578787E-6	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9928280243565151	WITHOUT_CLASSIFICATION	0.007171975643484929	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999472528406099	WITHOUT_CLASSIFICATION	5.27471593901173E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999996482558964	WITHOUT_CLASSIFICATION	3.517441036366475E-7	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999833494268113	WITHOUT_CLASSIFICATION	1.665057318866179E-5	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.999995969672732	WITHOUT_CLASSIFICATION	4.030327268031561E-6	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999987987617376	WITHOUT_CLASSIFICATION	1.2012382623745039E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9999984852194038	WITHOUT_CLASSIFICATION	1.5147805961297388E-6	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999979481520032	WITHOUT_CLASSIFICATION	2.051847996858022E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999992994383777	WITHOUT_CLASSIFICATION	7.005616223341354E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999635249537386	WITHOUT_CLASSIFICATION	3.6475046261336144E-5	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999992022000188	WITHOUT_CLASSIFICATION	7.97799981167181E-7	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999991307334373	WITHOUT_CLASSIFICATION	8.692665626739333E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999987229072063	WITHOUT_CLASSIFICATION	1.2770927937115397E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999970450186384	WITHOUT_CLASSIFICATION	2.954981361611378E-6	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999915324739367	WITHOUT_CLASSIFICATION	8.46752606339946E-6	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999980047613043	WITHOUT_CLASSIFICATION	1.995238695758746E-6	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999654152464185	WITHOUT_CLASSIFICATION	3.458475358158709E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999907666505776	WITHOUT_CLASSIFICATION	9.23334942244544E-6	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999995320628644	WITHOUT_CLASSIFICATION	4.679371356691949E-7	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.999976784873218	WITHOUT_CLASSIFICATION	2.3215126782077655E-5	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999985435711201	WITHOUT_CLASSIFICATION	1.4564288798262336E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999759632636429	WITHOUT_CLASSIFICATION	2.4036736357088746E-5	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9998930455911226	WITHOUT_CLASSIFICATION	1.0695440887738118E-4	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999190865437638	WITHOUT_CLASSIFICATION	8.091345623617657E-5	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999647657321078	WITHOUT_CLASSIFICATION	3.523426789225723E-5	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999968819945413	WITHOUT_CLASSIFICATION	3.1180054588313825E-6	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999794463009639	WITHOUT_CLASSIFICATION	2.0553699036170516E-5	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999992318933695	WITHOUT_CLASSIFICATION	7.681066305010817E-7	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999994050518234	WITHOUT_CLASSIFICATION	5.949481766634766E-7	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999178789275356	WITHOUT_CLASSIFICATION	8.212107246440917E-5	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999817576229821	WITHOUT_CLASSIFICATION	1.8242377017893182E-5	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999891077735122	WITHOUT_CLASSIFICATION	1.0892226487685294E-5	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999831622058002	WITHOUT_CLASSIFICATION	1.6837794199871837E-5	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999992923099393	WITHOUT_CLASSIFICATION	7.076900607310785E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999996048127497	WITHOUT_CLASSIFICATION	3.9518725026027825E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999827929186457	WITHOUT_CLASSIFICATION	1.7207081354312846E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999962805674061	WITHOUT_CLASSIFICATION	3.719432594050448E-6	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999987506773448	WITHOUT_CLASSIFICATION	1.2493226551745633E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999480202399331	WITHOUT_CLASSIFICATION	5.197976006692524E-5	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999996127421155	WITHOUT_CLASSIFICATION	3.872578846183619E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999960555186485	WITHOUT_CLASSIFICATION	3.944481351531079E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999991877296505	WITHOUT_CLASSIFICATION	8.122703494773677E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999991877296505	WITHOUT_CLASSIFICATION	8.122703494773677E-7	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.999996846651819	WITHOUT_CLASSIFICATION	3.153348181021448E-6	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999940542247553	WITHOUT_CLASSIFICATION	5.945775244634039E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999987049463984	WITHOUT_CLASSIFICATION	1.2950536015301372E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999987049463984	WITHOUT_CLASSIFICATION	1.2950536015301372E-6	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999993923907647	WITHOUT_CLASSIFICATION	6.076092351830996E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999987469089171	WITHOUT_CLASSIFICATION	1.2530910829473565E-6	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999369143656869	WITHOUT_CLASSIFICATION	6.308563431306687E-5	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999984256387879	WITHOUT_CLASSIFICATION	1.5743612120851107E-6	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999845495523584	WITHOUT_CLASSIFICATION	1.5450447641574053E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999991314777302	WITHOUT_CLASSIFICATION	8.685222696888209E-7	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999622222218794	WITHOUT_CLASSIFICATION	3.777777812065908E-5	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9998803460468855	WITHOUT_CLASSIFICATION	1.1965395311450885E-4	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999939800855653	WITHOUT_CLASSIFICATION	6.0199144347105635E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999984918401572	WITHOUT_CLASSIFICATION	1.508159842711416E-6	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999928317344432	WITHOUT_CLASSIFICATION	7.168265556712532E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999869948669079	WITHOUT_CLASSIFICATION	1.3005133092069905E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999970709199592	WITHOUT_CLASSIFICATION	2.929080040794611E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999986939203024	WITHOUT_CLASSIFICATION	1.3060796976688702E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999979408410429	WITHOUT_CLASSIFICATION	2.0591589570918817E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999985243996085	WITHOUT_CLASSIFICATION	1.4756003915612647E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999970709199592	WITHOUT_CLASSIFICATION	2.929080040794611E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9984000931153433	WITHOUT_CLASSIFICATION	0.0015999068846567028	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999882825288473	WITHOUT_CLASSIFICATION	1.1717471152601696E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999882825288473	WITHOUT_CLASSIFICATION	1.1717471152601696E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999882825288473	WITHOUT_CLASSIFICATION	1.1717471152601696E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999941102579056	WITHOUT_CLASSIFICATION	5.889742094328146E-6	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999952355340955	WITHOUT_CLASSIFICATION	4.764465904514144E-6	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999903980736744	WITHOUT_CLASSIFICATION	9.601926325596329E-6	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.967418731246305	WITHOUT_CLASSIFICATION	0.03258126875369503	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9998852958643502	WITHOUT_CLASSIFICATION	1.147041356498694E-4	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999860542741429	WITHOUT_CLASSIFICATION	1.3945725857157999E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9984000931153433	WITHOUT_CLASSIFICATION	0.0015999068846567028	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999821465755651	WITHOUT_CLASSIFICATION	1.785342443496169E-5	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999271526891931	WITHOUT_CLASSIFICATION	7.2847310806909E-5	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999998586695013	WITHOUT_CLASSIFICATION	1.413304988214955E-7	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999982487361038	WITHOUT_CLASSIFICATION	1.751263896190358E-6	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999980242657507	WITHOUT_CLASSIFICATION	1.975734249305509E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999985243996085	WITHOUT_CLASSIFICATION	1.4756003915612647E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999985243996085	WITHOUT_CLASSIFICATION	1.4756003915612647E-6	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999939800855653	WITHOUT_CLASSIFICATION	6.0199144347105635E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999821465755651	WITHOUT_CLASSIFICATION	1.785342443496169E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992460786445	WITHOUT_CLASSIFICATION	7.539213554363316E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992460786445	WITHOUT_CLASSIFICATION	7.539213554363316E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999992460786445	WITHOUT_CLASSIFICATION	7.539213554363316E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999916782424766	WITHOUT_CLASSIFICATION	8.321757523426207E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999916782424766	WITHOUT_CLASSIFICATION	8.321757523426207E-6	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999611329903781	WITHOUT_CLASSIFICATION	3.8867009621739555E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999611329903781	WITHOUT_CLASSIFICATION	3.8867009621739555E-5	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999895601187078	WITHOUT_CLASSIFICATION	1.0439881292296296E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999942097880101	WITHOUT_CLASSIFICATION	5.79021198984663E-6	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999942097880101	WITHOUT_CLASSIFICATION	5.79021198984663E-6	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999988127704891	WITHOUT_CLASSIFICATION	1.187229510956979E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999952234041665	WITHOUT_CLASSIFICATION	4.77659583342873E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.999993723243519	WITHOUT_CLASSIFICATION	6.2767564810266474E-6	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999958646474894	WITHOUT_CLASSIFICATION	4.135352510676104E-6	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999958646474894	WITHOUT_CLASSIFICATION	4.135352510676104E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999917544956939	WITHOUT_CLASSIFICATION	8.245504306089503E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999917544956939	WITHOUT_CLASSIFICATION	8.245504306089503E-6	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999914788815197	WITHOUT_CLASSIFICATION	8.521118480289837E-6	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999930246786782	WITHOUT_CLASSIFICATION	6.975321321787857E-6	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999832888890992	WITHOUT_CLASSIFICATION	1.671111090077904E-5	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999885329962918	WITHOUT_CLASSIFICATION	1.1467003708258473E-5	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999950275367379	WITHOUT_CLASSIFICATION	4.972463262171036E-6	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999909091788541	WITHOUT_CLASSIFICATION	9.090821145791977E-6	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999985452179977	WITHOUT_CLASSIFICATION	1.4547820022263621E-6	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999993921294393	WITHOUT_CLASSIFICATION	6.078705605854622E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.999947962809042	WITHOUT_CLASSIFICATION	5.2037190958009296E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999996822561014	WITHOUT_CLASSIFICATION	3.1774389856238736E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999960157296204	WITHOUT_CLASSIFICATION	3.984270379628837E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999993710234993	WITHOUT_CLASSIFICATION	6.289765006794937E-7	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999993474131345	WITHOUT_CLASSIFICATION	6.525868654208187E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999522346341869	WITHOUT_CLASSIFICATION	4.776536581308084E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9960561379944534	WITHOUT_CLASSIFICATION	0.0039438620055466415	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999985299359692	WITHOUT_CLASSIFICATION	1.4700640308725255E-6	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999998160008537	WITHOUT_CLASSIFICATION	1.8399914621885558E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999522346341869	WITHOUT_CLASSIFICATION	4.776536581308084E-5	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.999986945473133	WITHOUT_CLASSIFICATION	1.305452686709215E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999522346341869	WITHOUT_CLASSIFICATION	4.776536581308084E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9960561379944534	WITHOUT_CLASSIFICATION	0.0039438620055466415	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999987967876162	WITHOUT_CLASSIFICATION	1.2032123838084024E-6	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999991609039689	WITHOUT_CLASSIFICATION	8.390960311591032E-7	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999990360253678	WITHOUT_CLASSIFICATION	9.639746322226632E-7	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999986043334699	WITHOUT_CLASSIFICATION	1.3956665300859613E-6	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999985562229117	WITHOUT_CLASSIFICATION	1.4437770883339467E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999975172454334	WITHOUT_CLASSIFICATION	2.482754566595931E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.999998836881917	WITHOUT_CLASSIFICATION	1.1631180829601227E-6	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999450741223905	WITHOUT_CLASSIFICATION	5.4925877609387804E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999975172454334	WITHOUT_CLASSIFICATION	2.482754566595931E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999975172454334	WITHOUT_CLASSIFICATION	2.482754566595931E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999975172454334	WITHOUT_CLASSIFICATION	2.482754566595931E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999975172454334	WITHOUT_CLASSIFICATION	2.482754566595931E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999992886953052	WITHOUT_CLASSIFICATION	7.11304694857017E-7	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999707174836596	WITHOUT_CLASSIFICATION	2.928251634038148E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999997609814132	WITHOUT_CLASSIFICATION	2.3901858680849913E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999997609814132	WITHOUT_CLASSIFICATION	2.3901858680849913E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999998856632138	WITHOUT_CLASSIFICATION	1.1433678613189424E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999996587477246	WITHOUT_CLASSIFICATION	3.4125227544491735E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999998329764539	WITHOUT_CLASSIFICATION	1.670235461855955E-7	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999991599537221	WITHOUT_CLASSIFICATION	8.400462777691015E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999995510759072	WITHOUT_CLASSIFICATION	4.489240927130935E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999991631901243	WITHOUT_CLASSIFICATION	8.368098756636128E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999991631901243	WITHOUT_CLASSIFICATION	8.368098756636128E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999991631901243	WITHOUT_CLASSIFICATION	8.368098756636128E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999154217474	WITHOUT_CLASSIFICATION	8.457825253761371E-8	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999410625137	WITHOUT_CLASSIFICATION	5.893748627253033E-8	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999997260537801	WITHOUT_CLASSIFICATION	2.739462198975846E-7	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999573083939884	WITHOUT_CLASSIFICATION	4.2691606011558225E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999868451296158	WITHOUT_CLASSIFICATION	1.3154870384093596E-5	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999992024189605	WITHOUT_CLASSIFICATION	7.975810394360065E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999148794626997	WITHOUT_CLASSIFICATION	8.51205373001886E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9998274735084395	WITHOUT_CLASSIFICATION	1.725264915604089E-4	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999970884091388	WITHOUT_CLASSIFICATION	2.9115908612217943E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9997615262075503	WITHOUT_CLASSIFICATION	2.3847379244971994E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9998650088280726	WITHOUT_CLASSIFICATION	1.3499117192742506E-4	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999917986948864	WITHOUT_CLASSIFICATION	8.201305113576116E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.999999933669978	WITHOUT_CLASSIFICATION	6.633002205730613E-8	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999948140123243	WITHOUT_CLASSIFICATION	5.185987675734278E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999851060626175	WITHOUT_CLASSIFICATION	1.4893937382473839E-5	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999989189479405	WITHOUT_CLASSIFICATION	1.0810520595207164E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999851060626175	WITHOUT_CLASSIFICATION	1.4893937382473839E-5	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999991387877378	WITHOUT_CLASSIFICATION	8.612122621965403E-7	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999970521096089	WITHOUT_CLASSIFICATION	2.9478903909938926E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999927054329925	WITHOUT_CLASSIFICATION	7.294567007498342E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999995956221999	WITHOUT_CLASSIFICATION	4.0437780012444855E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999456773062	WITHOUT_CLASSIFICATION	5.432269388047356E-8	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999356417891	WITHOUT_CLASSIFICATION	6.43582108009517E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.999997306924765	WITHOUT_CLASSIFICATION	2.6930752350094916E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999782258622639	WITHOUT_CLASSIFICATION	2.1774137736102236E-5	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999759096934212	WITHOUT_CLASSIFICATION	2.4090306578844883E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999944071714707	WITHOUT_CLASSIFICATION	5.592828529252462E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999941538543	WITHOUT_CLASSIFICATION	5.846145685879062E-9	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999988644016315	WITHOUT_CLASSIFICATION	1.1355983684181543E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999991749512199	WITHOUT_CLASSIFICATION	8.250487800855885E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999994846012917	WITHOUT_CLASSIFICATION	5.153987082727381E-7	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999970410732791	WITHOUT_CLASSIFICATION	2.9589267209635907E-6	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999988411519027	WITHOUT_CLASSIFICATION	1.1588480973100023E-6	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999998685682722	WITHOUT_CLASSIFICATION	1.314317278399798E-7	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999998959943355	WITHOUT_CLASSIFICATION	1.0400566453694939E-7	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999985304136477	WITHOUT_CLASSIFICATION	1.4695863523375108E-6	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999998768830836	WITHOUT_CLASSIFICATION	1.2311691639731435E-7	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999998513375695	WITHOUT_CLASSIFICATION	1.486624304347593E-7	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999916451415239	WITHOUT_CLASSIFICATION	8.354858476126605E-6	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999992635123828	WITHOUT_CLASSIFICATION	7.364876172003299E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999992635123828	WITHOUT_CLASSIFICATION	7.364876172003299E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999997417434147	WITHOUT_CLASSIFICATION	2.5825658537797504E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999997417434147	WITHOUT_CLASSIFICATION	2.5825658537797504E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999523882998175	WITHOUT_CLASSIFICATION	4.761170018245079E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999516349155685	WITHOUT_CLASSIFICATION	4.836508443152299E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999516349155685	WITHOUT_CLASSIFICATION	4.836508443152299E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999997492546722	WITHOUT_CLASSIFICATION	2.507453277714468E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999997492546722	WITHOUT_CLASSIFICATION	2.507453277714468E-7	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999927509721874	WITHOUT_CLASSIFICATION	7.2490278124687235E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.999998319639046	WITHOUT_CLASSIFICATION	1.6803609541501485E-6	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.999999540136319	WITHOUT_CLASSIFICATION	4.598636809559498E-7	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999997062523733	WITHOUT_CLASSIFICATION	2.937476267195053E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999040319138676	WITHOUT_CLASSIFICATION	9.596808613245664E-5	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999973101051977	WITHOUT_CLASSIFICATION	2.6898948024145357E-6	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.99998731426575	WITHOUT_CLASSIFICATION	1.2685734250037256E-5	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999905451780349	WITHOUT_CLASSIFICATION	9.454821965257692E-6	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999997606206175	WITHOUT_CLASSIFICATION	2.3937938252109324E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999497950319234	WITHOUT_CLASSIFICATION	5.020496807674949E-5	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999996255432512	WITHOUT_CLASSIFICATION	3.7445674885274967E-7	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999990245021632	WITHOUT_CLASSIFICATION	9.754978369246248E-7	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999563403709	WITHOUT_CLASSIFICATION	4.3659629128187286E-8	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999989803162781	WITHOUT_CLASSIFICATION	1.0196837218739147E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999978144827257	WITHOUT_CLASSIFICATION	2.1855172742095363E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999766620713033	WITHOUT_CLASSIFICATION	2.3337928696722823E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.999997306924765	WITHOUT_CLASSIFICATION	2.6930752350094916E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999944071714707	WITHOUT_CLASSIFICATION	5.592828529252462E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999955483325949	WITHOUT_CLASSIFICATION	4.451667405121367E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999997582078445	WITHOUT_CLASSIFICATION	2.4179215550903306E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999878855342621	WITHOUT_CLASSIFICATION	1.211446573787957E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999986190617653	WITHOUT_CLASSIFICATION	1.3809382346824544E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999994412318609	WITHOUT_CLASSIFICATION	5.587681391882953E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999770571095361	WITHOUT_CLASSIFICATION	2.294289046399031E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999930222539357	WITHOUT_CLASSIFICATION	6.977746064356961E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999997818946826	WITHOUT_CLASSIFICATION	2.1810531732027938E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999971107375258	WITHOUT_CLASSIFICATION	2.8892624740475084E-6	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999961881300248	WITHOUT_CLASSIFICATION	3.811869975308904E-6	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999809250868542	WITHOUT_CLASSIFICATION	1.907491314580379E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999967404603802	WITHOUT_CLASSIFICATION	3.2595396197223503E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999993809244768	WITHOUT_CLASSIFICATION	6.190755231514314E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999993809244768	WITHOUT_CLASSIFICATION	6.190755231514314E-7	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9999978785003197	WITHOUT_CLASSIFICATION	2.1214996802637216E-6	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999992525907664	WITHOUT_CLASSIFICATION	7.474092336471615E-7	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999965066674594	WITHOUT_CLASSIFICATION	3.493332540571478E-6	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999855731453268	WITHOUT_CLASSIFICATION	1.4426854673293413E-5	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999915772408047	WITHOUT_CLASSIFICATION	8.422759195296102E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999954021050244	WITHOUT_CLASSIFICATION	4.5978949756693734E-6	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999962766676148	WITHOUT_CLASSIFICATION	3.7233323852231805E-6	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999728205821568	WITHOUT_CLASSIFICATION	2.7179417843254756E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.99997907874642	WITHOUT_CLASSIFICATION	2.0921253579963565E-5	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999915806786154	WITHOUT_CLASSIFICATION	8.41932138464777E-6	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999942891929687	WITHOUT_CLASSIFICATION	5.710807031252937E-6	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999974146671867	WITHOUT_CLASSIFICATION	2.5853328132811183E-6	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.999999556305557	WITHOUT_CLASSIFICATION	4.4369444302039713E-7	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999954984504733	WITHOUT_CLASSIFICATION	4.501549526658029E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999933173272486	WITHOUT_CLASSIFICATION	6.682672751403336E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.999937815302041	WITHOUT_CLASSIFICATION	6.218469795897989E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999952106061903	WITHOUT_CLASSIFICATION	4.789393809679799E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999987017299979	WITHOUT_CLASSIFICATION	1.2982700020892389E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999783712211636	WITHOUT_CLASSIFICATION	2.1628778836449574E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999994245395661	WITHOUT_CLASSIFICATION	5.754604338269986E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999916282768542	WITHOUT_CLASSIFICATION	8.371723145810784E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999916282768542	WITHOUT_CLASSIFICATION	8.371723145810784E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999940658428994	WITHOUT_CLASSIFICATION	5.934157100625084E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999940658428994	WITHOUT_CLASSIFICATION	5.934157100625084E-6	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999968851869296	WITHOUT_CLASSIFICATION	3.114813070434387E-6	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999917629374834	WITHOUT_CLASSIFICATION	8.237062516685746E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999994578358781	WITHOUT_CLASSIFICATION	5.421641218690424E-7	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.999979227714028	WITHOUT_CLASSIFICATION	2.0772285971987942E-5	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999935469575925	WITHOUT_CLASSIFICATION	6.453042407602867E-6	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9992916984612267	WITHOUT_CLASSIFICATION	7.083015387733429E-4	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9958454792859505	WITHOUT_CLASSIFICATION	0.004154520714049565	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.999986926312388	WITHOUT_CLASSIFICATION	1.3073687612185439E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.999986926312388	WITHOUT_CLASSIFICATION	1.3073687612185439E-5	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999888254527253	WITHOUT_CLASSIFICATION	1.1174547274671641E-5	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999994406546598	WITHOUT_CLASSIFICATION	5.593453401110211E-7	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999552896736118	WITHOUT_CLASSIFICATION	4.471032638816389E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999552896736118	WITHOUT_CLASSIFICATION	4.471032638816389E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999971594326081	WITHOUT_CLASSIFICATION	2.8405673918303963E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.999728266942251	WITHOUT_CLASSIFICATION	2.7173305774899896E-4	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999947265420426	WITHOUT_CLASSIFICATION	5.273457957382856E-6	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999506460677093	WITHOUT_CLASSIFICATION	4.935393229070099E-5	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999006168979433	WITHOUT_CLASSIFICATION	9.93831020567163E-5	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999970145475039	WITHOUT_CLASSIFICATION	2.985452496071059E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999686965634642	WITHOUT_CLASSIFICATION	3.130343653588991E-5	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999686965634642	WITHOUT_CLASSIFICATION	3.130343653588991E-5	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999775870900874	WITHOUT_CLASSIFICATION	2.2412909912574895E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999793985924958	WITHOUT_CLASSIFICATION	2.0601407504209445E-5	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999832823202145	WITHOUT_CLASSIFICATION	1.6717679785523824E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999994834487451	WITHOUT_CLASSIFICATION	5.165512548827954E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999996298935367	WITHOUT_CLASSIFICATION	3.7010646328425076E-7	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999966229959734	WITHOUT_CLASSIFICATION	3.3770040267100377E-6	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999936111635346	WITHOUT_CLASSIFICATION	6.3888364654256656E-6	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999997111991434	WITHOUT_CLASSIFICATION	2.888008565511905E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978181343113	WITHOUT_CLASSIFICATION	2.1818656886878863E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978181343113	WITHOUT_CLASSIFICATION	2.1818656886878863E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978181343113	WITHOUT_CLASSIFICATION	2.1818656886878863E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978181343113	WITHOUT_CLASSIFICATION	2.1818656886878863E-6	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999921464801095	WITHOUT_CLASSIFICATION	7.853519890540812E-6	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999996644395196	WITHOUT_CLASSIFICATION	3.355604803863816E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999977306697512	WITHOUT_CLASSIFICATION	2.269330248913984E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999912832970269	WITHOUT_CLASSIFICATION	8.71670297309222E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999912832970269	WITHOUT_CLASSIFICATION	8.71670297309222E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999956450161701	WITHOUT_CLASSIFICATION	4.354983829929502E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999956450161701	WITHOUT_CLASSIFICATION	4.354983829929502E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999963162707503	WITHOUT_CLASSIFICATION	3.6837292498110502E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999958161618326	WITHOUT_CLASSIFICATION	4.183838167307325E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999885110506384	WITHOUT_CLASSIFICATION	1.1488949361617168E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999862620970165	WITHOUT_CLASSIFICATION	1.3737902983499279E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999849907429256	WITHOUT_CLASSIFICATION	1.5009257074492878E-5	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999972884467769	WITHOUT_CLASSIFICATION	2.7115532231577644E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999977122123757	WITHOUT_CLASSIFICATION	2.2877876242784603E-6	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999333652207342	WITHOUT_CLASSIFICATION	6.663477926583436E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999819072431523	WITHOUT_CLASSIFICATION	1.809275684772895E-5	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999252638486	WITHOUT_CLASSIFICATION	7.473615139928876E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999987927054773	WITHOUT_CLASSIFICATION	1.2072945227288504E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999990272152012	WITHOUT_CLASSIFICATION	9.727847988106916E-7	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999999918967997	WITHOUT_CLASSIFICATION	8.103200330501735E-9	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999906428921469	WITHOUT_CLASSIFICATION	9.357107853064054E-6	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9993261518924124	WITHOUT_CLASSIFICATION	6.738481075875352E-4	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.999999995305323	WITHOUT_CLASSIFICATION	4.694677059639073E-9	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999998412517267	WITHOUT_CLASSIFICATION	1.587482733722985E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998391160925515	WITHOUT_CLASSIFICATION	1.6088390744853156E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998391160925515	WITHOUT_CLASSIFICATION	1.6088390744853156E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998391160925515	WITHOUT_CLASSIFICATION	1.6088390744853156E-4	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.999986026218768	WITHOUT_CLASSIFICATION	1.3973781231991768E-5	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999961995458149	WITHOUT_CLASSIFICATION	3.800454185101587E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999990212620334	WITHOUT_CLASSIFICATION	9.787379665464666E-7	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9995724998319584	WITHOUT_CLASSIFICATION	4.2750016804166585E-4	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999659552292	WITHOUT_CLASSIFICATION	3.4044770776889194E-8	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999994270858795	WITHOUT_CLASSIFICATION	5.729141204637471E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999687997783767	WITHOUT_CLASSIFICATION	3.120022162320834E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999997700792232	WITHOUT_CLASSIFICATION	2.2992077665837266E-7	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999933624071964	WITHOUT_CLASSIFICATION	6.63759280360747E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9999968089169239	WITHOUT_CLASSIFICATION	3.19108307598361E-6	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999988770821097	WITHOUT_CLASSIFICATION	1.1229178902812253E-6	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999893195197681	WITHOUT_CLASSIFICATION	1.06804802318754E-5	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999998159466188	WITHOUT_CLASSIFICATION	1.8405338113103498E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999555799853967	WITHOUT_CLASSIFICATION	4.442001460316559E-5	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999764785640887	WITHOUT_CLASSIFICATION	2.3521435911437643E-5	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999985930751529	WITHOUT_CLASSIFICATION	1.4069248471010733E-6	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999987966044462	WITHOUT_CLASSIFICATION	1.203395553706444E-6	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999989393092027	WITHOUT_CLASSIFICATION	1.0606907973122448E-6	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999900160957	WITHOUT_CLASSIFICATION	9.983904215155828E-9	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999994711561215	WITHOUT_CLASSIFICATION	5.288438785377978E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.999997421922611	WITHOUT_CLASSIFICATION	2.5780773890834056E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999262904259715	WITHOUT_CLASSIFICATION	7.370957402855967E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999829161097	WITHOUT_CLASSIFICATION	1.708389032506994E-8	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.999994232299019	WITHOUT_CLASSIFICATION	5.767700980919527E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.999999024758361	WITHOUT_CLASSIFICATION	9.75241638963378E-7	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999659769207513	WITHOUT_CLASSIFICATION	3.402307924883475E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999962088375677	WITHOUT_CLASSIFICATION	3.7911624323925527E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.999999676885285	WITHOUT_CLASSIFICATION	3.231147150740898E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999991322918363	WITHOUT_CLASSIFICATION	8.677081638022993E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999997886262244	WITHOUT_CLASSIFICATION	2.1137377554630669E-7	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999992041035587	WITHOUT_CLASSIFICATION	7.958964413496535E-7	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999823023669535	WITHOUT_CLASSIFICATION	1.7697633046474186E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999915630065987	WITHOUT_CLASSIFICATION	8.436993401299675E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999883806428873	WITHOUT_CLASSIFICATION	1.1619357112648784E-5	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999946554944733	WITHOUT_CLASSIFICATION	5.344505526630092E-6	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999441804580329	WITHOUT_CLASSIFICATION	5.5819541967123065E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999892300133613	WITHOUT_CLASSIFICATION	1.076998663877132E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9991708407077764	WITHOUT_CLASSIFICATION	8.291592922236334E-4	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999977923026774	WITHOUT_CLASSIFICATION	2.2076973225088206E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999987709881493	WITHOUT_CLASSIFICATION	1.229011850820675E-6	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999996028948791	WITHOUT_CLASSIFICATION	3.971051209633179E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999648909104633	WITHOUT_CLASSIFICATION	3.5109089536781606E-5	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999991465142736	WITHOUT_CLASSIFICATION	8.534857263601608E-7	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999860034848659	WITHOUT_CLASSIFICATION	1.3996515134127857E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.999999339385216	WITHOUT_CLASSIFICATION	6.60614783961601E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999953258459369	WITHOUT_CLASSIFICATION	4.674154063114784E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999928470458309	WITHOUT_CLASSIFICATION	7.152954169115616E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999988555125936	WITHOUT_CLASSIFICATION	1.1444874064624667E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999877768318003	WITHOUT_CLASSIFICATION	1.2223168199688345E-5	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999949579643557	WITHOUT_CLASSIFICATION	5.0420356442695414E-6	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.999998547082826	WITHOUT_CLASSIFICATION	1.4529171740093872E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999969301515245	WITHOUT_CLASSIFICATION	3.0698484754248946E-6	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999995776185329	WITHOUT_CLASSIFICATION	4.223814671767012E-7	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999997955493374	WITHOUT_CLASSIFICATION	2.0445066268490542E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999998251247579	WITHOUT_CLASSIFICATION	1.7487524202359417E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9999582346825315	WITHOUT_CLASSIFICATION	4.176531746844679E-5	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999987524335022	WITHOUT_CLASSIFICATION	1.2475664978584419E-6	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999942936744081	WITHOUT_CLASSIFICATION	5.706325591937046E-6	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999979698446777	WITHOUT_CLASSIFICATION	2.030155322210306E-6	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999947743274042	WITHOUT_CLASSIFICATION	5.225672595768124E-6	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999994868629207	WITHOUT_CLASSIFICATION	5.131370792630034E-7	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999993170095293	WITHOUT_CLASSIFICATION	6.829904707702001E-7	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9999722298170788	WITHOUT_CLASSIFICATION	2.7770182921277287E-5	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999994247718105	WITHOUT_CLASSIFICATION	5.75228189475331E-7	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9997868509419056	WITHOUT_CLASSIFICATION	2.131490580943417E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998974804285196	WITHOUT_CLASSIFICATION	1.0251957148035338E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999980993014544	WITHOUT_CLASSIFICATION	1.9006985456852435E-6	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999335228707293	WITHOUT_CLASSIFICATION	6.647712927064411E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999997124785953	WITHOUT_CLASSIFICATION	2.875214046632645E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.999998662370314	WITHOUT_CLASSIFICATION	1.3376296860523907E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999978513726796	WITHOUT_CLASSIFICATION	2.148627320387057E-6	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.999964751982252	WITHOUT_CLASSIFICATION	3.524801774799495E-5	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999205423851	WITHOUT_CLASSIFICATION	7.945761494043641E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999967979959	WITHOUT_CLASSIFICATION	3.2020040751797525E-9	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999255081029	WITHOUT_CLASSIFICATION	7.449189711677191E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999947762080773	WITHOUT_CLASSIFICATION	5.2237919227027205E-6	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999929655378064	WITHOUT_CLASSIFICATION	7.034462193675003E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999247615965976	WITHOUT_CLASSIFICATION	7.523840340246257E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999247615965976	WITHOUT_CLASSIFICATION	7.523840340246257E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999247615965976	WITHOUT_CLASSIFICATION	7.523840340246257E-5	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999993514291058	WITHOUT_CLASSIFICATION	6.485708941563449E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999910631327172	WITHOUT_CLASSIFICATION	8.936867282758806E-6	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999993851262742	WITHOUT_CLASSIFICATION	6.148737257504706E-7	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999989600070313	WITHOUT_CLASSIFICATION	1.0399929687732226E-6	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999990739796666	WITHOUT_CLASSIFICATION	9.260203333547431E-7	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.999998802905307	WITHOUT_CLASSIFICATION	1.1970946930104067E-6	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999976777697258	WITHOUT_CLASSIFICATION	2.3222302741567675E-6	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999942485423498	WITHOUT_CLASSIFICATION	5.751457650318293E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998079083456	WITHOUT_CLASSIFICATION	1.920916543542595E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998079083456	WITHOUT_CLASSIFICATION	1.920916543542595E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.999994385832484	WITHOUT_CLASSIFICATION	5.614167515960321E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999998615463285	WITHOUT_CLASSIFICATION	1.3845367148945534E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999255081029	WITHOUT_CLASSIFICATION	7.449189711677191E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999976494290845	WITHOUT_CLASSIFICATION	2.3505709154809555E-6	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999998056602396	WITHOUT_CLASSIFICATION	1.9433976046369822E-7	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999869278168312	WITHOUT_CLASSIFICATION	1.3072183168884545E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9998493838953773	WITHOUT_CLASSIFICATION	1.5061610462269254E-4	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999500928516454	WITHOUT_CLASSIFICATION	4.990714835447866E-5	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999997616409718	WITHOUT_CLASSIFICATION	2.3835902810258082E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999762140020582	WITHOUT_CLASSIFICATION	2.3785997941868878E-5	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9999968262056794	WITHOUT_CLASSIFICATION	3.1737943206143277E-6	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9999530533666988	WITHOUT_CLASSIFICATION	4.694663330117681E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999982953000651	WITHOUT_CLASSIFICATION	1.7046999348754828E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9960696118675474	WITHOUT_CLASSIFICATION	0.00393038813245264	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999928836697307	WITHOUT_CLASSIFICATION	7.116330269240278E-6	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999731550274951	WITHOUT_CLASSIFICATION	2.6844972505012547E-5	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999901893174163	WITHOUT_CLASSIFICATION	9.810682583640158E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999969815938795	WITHOUT_CLASSIFICATION	3.0184061204318864E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999846299487776	WITHOUT_CLASSIFICATION	1.537005122239782E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9999862156791317	WITHOUT_CLASSIFICATION	1.3784320868330097E-5	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999864020070062	WITHOUT_CLASSIFICATION	1.3597992993822479E-5	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999802011991532	WITHOUT_CLASSIFICATION	1.9798800846807122E-5	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999819466487853	WITHOUT_CLASSIFICATION	1.805335121471897E-5	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999988169780044	WITHOUT_CLASSIFICATION	1.1830219956182415E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999970122140783	WITHOUT_CLASSIFICATION	2.9877859216015646E-6	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999954917817365	WITHOUT_CLASSIFICATION	4.508218263524414E-6	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999993992085039	WITHOUT_CLASSIFICATION	6.007914960676037E-7	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999977033070763	WITHOUT_CLASSIFICATION	2.296692923710208E-6	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999867191833343	WITHOUT_CLASSIFICATION	1.3280816665801893E-5	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999549740990653	WITHOUT_CLASSIFICATION	4.502590093458979E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999998918159389	WITHOUT_CLASSIFICATION	1.0818406109739618E-6	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999870343051245	WITHOUT_CLASSIFICATION	1.2965694875496202E-5	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999993406180048	WITHOUT_CLASSIFICATION	6.593819952865017E-7	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999988132258	WITHOUT_CLASSIFICATION	1.1867743071157248E-9	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999206227498928	WITHOUT_CLASSIFICATION	7.937725010730684E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999938421957048	WITHOUT_CLASSIFICATION	6.157804295344012E-6	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.999999793572445	WITHOUT_CLASSIFICATION	2.0642755515291044E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999811893993819	WITHOUT_CLASSIFICATION	1.8810600618145555E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999969836625104	WITHOUT_CLASSIFICATION	3.0163374895753604E-6	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9998162279730867	WITHOUT_CLASSIFICATION	1.8377202691336074E-4	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999977769023103	WITHOUT_CLASSIFICATION	2.223097689763182E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999987593182887	WITHOUT_CLASSIFICATION	1.2406817112648728E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999868640433185	WITHOUT_CLASSIFICATION	1.3135956681570779E-5	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999978209117184	WITHOUT_CLASSIFICATION	2.179088281618661E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999968510090002	WITHOUT_CLASSIFICATION	3.148990999763442E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9999801503770402	WITHOUT_CLASSIFICATION	1.9849622959828707E-5	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999883576132339	WITHOUT_CLASSIFICATION	1.1642386766045709E-5	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999975149159368	WITHOUT_CLASSIFICATION	2.4850840631332222E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9998985845452101	WITHOUT_CLASSIFICATION	1.0141545478986884E-4	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999967701241551	WITHOUT_CLASSIFICATION	3.2298758448625902E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999730294613106	WITHOUT_CLASSIFICATION	2.6970538689287304E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999593956401038	WITHOUT_CLASSIFICATION	4.060435989617052E-5	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999917018927352	WITHOUT_CLASSIFICATION	8.298107264732526E-6	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9999590648085623	WITHOUT_CLASSIFICATION	4.093519143770656E-5	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999472676624876	WITHOUT_CLASSIFICATION	5.273233751225881E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999948745823076	WITHOUT_CLASSIFICATION	5.125417692366615E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999545354532084	WITHOUT_CLASSIFICATION	4.546454679152528E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.999995205081976	WITHOUT_CLASSIFICATION	4.794918024066499E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999977432003906	WITHOUT_CLASSIFICATION	2.2567996094612373E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999650896703196	WITHOUT_CLASSIFICATION	3.4910329680409027E-5	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999998553870681	WITHOUT_CLASSIFICATION	1.4461293183533848E-7	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999992855743951	WITHOUT_CLASSIFICATION	7.144256049767621E-7	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.999995189918584	WITHOUT_CLASSIFICATION	4.810081415957332E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999998636316142	WITHOUT_CLASSIFICATION	1.3636838583803983E-7	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999872411502851	WITHOUT_CLASSIFICATION	1.2758849714844226E-5	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9999154833215831	WITHOUT_CLASSIFICATION	8.451667841696334E-5	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9998218969374798	WITHOUT_CLASSIFICATION	1.781030625202702E-4	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9998554566012086	WITHOUT_CLASSIFICATION	1.4454339879141766E-4	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999999640099104	WITHOUT_CLASSIFICATION	3.599008962673746E-8	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999992114828122	WITHOUT_CLASSIFICATION	7.885171877818351E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999846418302755	WITHOUT_CLASSIFICATION	1.5358169724575053E-5	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999982940188751	WITHOUT_CLASSIFICATION	1.7059811248928178E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999703099206753	WITHOUT_CLASSIFICATION	2.969007932479145E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998974804285196	WITHOUT_CLASSIFICATION	1.0251957148035338E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999992114828122	WITHOUT_CLASSIFICATION	7.885171877818351E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999846418302755	WITHOUT_CLASSIFICATION	1.5358169724575053E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999989912158512	WITHOUT_CLASSIFICATION	1.0087841487524717E-6	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999978949317	WITHOUT_CLASSIFICATION	2.1050683765595936E-9	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999939637840255	WITHOUT_CLASSIFICATION	6.036215974454685E-6	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999996627682343	WITHOUT_CLASSIFICATION	3.372317657742896E-7	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999980692912709	WITHOUT_CLASSIFICATION	1.9307087290357115E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999858174352015	WITHOUT_CLASSIFICATION	1.4182564798462259E-5	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999490712377713	WITHOUT_CLASSIFICATION	5.092876222865236E-5	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999912732744035	WITHOUT_CLASSIFICATION	8.726725596472892E-6	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999949257721525	WITHOUT_CLASSIFICATION	5.074227847472943E-6	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.999999490537301	WITHOUT_CLASSIFICATION	5.0946269903953E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999952620702451	WITHOUT_CLASSIFICATION	4.737929754867452E-6	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999981705386474	WITHOUT_CLASSIFICATION	1.8294613526780628E-6	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9997974852460693	WITHOUT_CLASSIFICATION	2.0251475393063544E-4	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999958441533418	WITHOUT_CLASSIFICATION	4.15584665832952E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9997756853715253	WITHOUT_CLASSIFICATION	2.2431462847470387E-4	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999868580639522	WITHOUT_CLASSIFICATION	1.3141936047960571E-5	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999786816393417	WITHOUT_CLASSIFICATION	2.1318360658414634E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998784849155841	WITHOUT_CLASSIFICATION	1.2151508441582764E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999989907822463	WITHOUT_CLASSIFICATION	1.009217753698081E-6	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999890302109731	WITHOUT_CLASSIFICATION	1.0969789027030208E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999944328906154	WITHOUT_CLASSIFICATION	5.567109384628703E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999849161734241	WITHOUT_CLASSIFICATION	1.5083826576044042E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999826685516084	WITHOUT_CLASSIFICATION	1.7331448391630958E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999997124785953	WITHOUT_CLASSIFICATION	2.875214046632645E-7	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999996161775907	WITHOUT_CLASSIFICATION	3.838224093618421E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999938150697586	WITHOUT_CLASSIFICATION	6.184930241452394E-6	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999915828512178	WITHOUT_CLASSIFICATION	8.417148782251958E-6	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9994663574802782	WITHOUT_CLASSIFICATION	5.336425197217621E-4	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999817698411867	WITHOUT_CLASSIFICATION	1.8230158813223707E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999930676936885	WITHOUT_CLASSIFICATION	6.932306311516944E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999982376591734	WITHOUT_CLASSIFICATION	1.7623408265807801E-6	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999745658445005	WITHOUT_CLASSIFICATION	2.5434155499458288E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999782213693635	WITHOUT_CLASSIFICATION	2.177863063642646E-5	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999987978573216	WITHOUT_CLASSIFICATION	1.2021426784162791E-6	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999984970110419	WITHOUT_CLASSIFICATION	1.5029889580066535E-6	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999958652258986	WITHOUT_CLASSIFICATION	4.134774101519868E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999942187310329	WITHOUT_CLASSIFICATION	5.781268967021156E-6	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999991500699292	WITHOUT_CLASSIFICATION	8.499300706469582E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999932252287352	WITHOUT_CLASSIFICATION	6.774771264803713E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999070159216	WITHOUT_CLASSIFICATION	9.298407852812806E-8	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.999987407034684	WITHOUT_CLASSIFICATION	1.2592965315895019E-5	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999837592220645	WITHOUT_CLASSIFICATION	1.6240777935478243E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999926777179223	WITHOUT_CLASSIFICATION	7.322282077740604E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999927639215498	WITHOUT_CLASSIFICATION	7.236078450226872E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999915085672021	WITHOUT_CLASSIFICATION	8.491432797952481E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999949839910077	WITHOUT_CLASSIFICATION	5.016008992343068E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999949839910077	WITHOUT_CLASSIFICATION	5.016008992343068E-6	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999818605238222	WITHOUT_CLASSIFICATION	1.8139476177798506E-5	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999928823677576	WITHOUT_CLASSIFICATION	7.117632242405177E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.99999191600039	WITHOUT_CLASSIFICATION	8.08399960997228E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999999034419625	WITHOUT_CLASSIFICATION	9.655803750042636E-8	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.99999613793355	WITHOUT_CLASSIFICATION	3.862066449962187E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999955119782962	WITHOUT_CLASSIFICATION	4.488021703847268E-6	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9996731822313687	WITHOUT_CLASSIFICATION	3.268177686312567E-4	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.999736667549627	WITHOUT_CLASSIFICATION	2.6333245037300703E-4	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999958905909342	WITHOUT_CLASSIFICATION	4.109409065766408E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999770760593276	WITHOUT_CLASSIFICATION	2.2923940672390415E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999993596304704	WITHOUT_CLASSIFICATION	6.403695295478137E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999979895293732	WITHOUT_CLASSIFICATION	2.0104706266676886E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999997982846534	WITHOUT_CLASSIFICATION	2.0171534667811654E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999997982846534	WITHOUT_CLASSIFICATION	2.0171534667811654E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.999998910509874	WITHOUT_CLASSIFICATION	1.0894901259435627E-6	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999971827608988	WITHOUT_CLASSIFICATION	2.8172391013050845E-6	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.999999078765137	WITHOUT_CLASSIFICATION	9.212348629777895E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999976086773211	WITHOUT_CLASSIFICATION	2.3913226788762753E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999993467105406	WITHOUT_CLASSIFICATION	6.532894594730924E-7	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999976498593546	WITHOUT_CLASSIFICATION	2.3501406454229224E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999981892417211	WITHOUT_CLASSIFICATION	1.8107582788957458E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999874688349659	WITHOUT_CLASSIFICATION	1.2531165033957209E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999945240788454	WITHOUT_CLASSIFICATION	5.4759211546524015E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.99999613793355	WITHOUT_CLASSIFICATION	3.862066449962187E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999963187620602	WITHOUT_CLASSIFICATION	3.681237939786805E-6	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.999998724495471	WITHOUT_CLASSIFICATION	1.2755045289578736E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999994372780288	WITHOUT_CLASSIFICATION	5.62721971262285E-7	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999973212130473	WITHOUT_CLASSIFICATION	2.6787869527789876E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999981888665975	WITHOUT_CLASSIFICATION	1.8111334025632737E-6	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999913793851529	WITHOUT_CLASSIFICATION	8.620614847115335E-6	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999890426108186	WITHOUT_CLASSIFICATION	1.095738918142739E-5	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.999989818222383	WITHOUT_CLASSIFICATION	1.0181777616968607E-5	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999858487176536	WITHOUT_CLASSIFICATION	1.4151282346433762E-5	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999998421816628	WITHOUT_CLASSIFICATION	1.5781833722747713E-7	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999573394056	WITHOUT_CLASSIFICATION	4.2660594478331434E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999087205405	WITHOUT_CLASSIFICATION	9.127945947944416E-8	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999538227245441	WITHOUT_CLASSIFICATION	4.6177275455926455E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.999995424550118	WITHOUT_CLASSIFICATION	4.575449881916141E-6	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9998547686473558	WITHOUT_CLASSIFICATION	1.4523135264431577E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999998295869337	WITHOUT_CLASSIFICATION	1.7041306638559876E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999928343075414	WITHOUT_CLASSIFICATION	7.16569245867743E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999985557426716	WITHOUT_CLASSIFICATION	1.4442573283847796E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999996117171968	WITHOUT_CLASSIFICATION	3.882828033370515E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999998503544569	WITHOUT_CLASSIFICATION	1.4964554306333175E-7	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999995574922788	WITHOUT_CLASSIFICATION	4.4250772126241573E-7	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999701698622	WITHOUT_CLASSIFICATION	2.983013787613291E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998721203891	WITHOUT_CLASSIFICATION	1.2787961084206567E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994818642521	WITHOUT_CLASSIFICATION	5.181357478395533E-7	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999258785794167	WITHOUT_CLASSIFICATION	7.412142058327326E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999756713174561	WITHOUT_CLASSIFICATION	2.4328682543897796E-5	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999975440691278	WITHOUT_CLASSIFICATION	2.455930872251642E-6	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.999999021381568	WITHOUT_CLASSIFICATION	9.78618431980535E-7	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999733720772843	WITHOUT_CLASSIFICATION	2.6627922715662392E-5	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999934820371142	WITHOUT_CLASSIFICATION	6.517962885696949E-6	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.999983492454555	WITHOUT_CLASSIFICATION	1.6507545445009996E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.999997755002053	WITHOUT_CLASSIFICATION	2.24499794696076E-6	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999984274274853	WITHOUT_CLASSIFICATION	1.5725725145951887E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999998167544764	WITHOUT_CLASSIFICATION	1.8324552366525149E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999998167544764	WITHOUT_CLASSIFICATION	1.8324552366525149E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999920118202317	WITHOUT_CLASSIFICATION	7.98817976837163E-6	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999987029252204	WITHOUT_CLASSIFICATION	1.2970747795809023E-6	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999991278712527	WITHOUT_CLASSIFICATION	8.721287473915768E-7	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999923887948219	WITHOUT_CLASSIFICATION	7.611205178177305E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.999998665144128	WITHOUT_CLASSIFICATION	1.3348558719531738E-6	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9998814715336561	WITHOUT_CLASSIFICATION	1.1852846634386084E-4	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999983424049139	WITHOUT_CLASSIFICATION	1.6575950861227846E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.999928332029994	WITHOUT_CLASSIFICATION	7.166797000602482E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999947337226819	WITHOUT_CLASSIFICATION	5.2662773180426405E-6	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999995336128457	WITHOUT_CLASSIFICATION	4.6638715434178953E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999275920645294	WITHOUT_CLASSIFICATION	7.240793547060331E-5	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999466286261762	WITHOUT_CLASSIFICATION	5.3371373823629225E-5	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999944519227163	WITHOUT_CLASSIFICATION	5.548077283731707E-6	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9998137631923872	WITHOUT_CLASSIFICATION	1.8623680761273477E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.999997755002053	WITHOUT_CLASSIFICATION	2.24499794696076E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.999998665144128	WITHOUT_CLASSIFICATION	1.3348558719531738E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999946201900348	WITHOUT_CLASSIFICATION	5.379809965253222E-6	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.999998555309945	WITHOUT_CLASSIFICATION	1.4446900550533251E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999905872864854	WITHOUT_CLASSIFICATION	9.412713514612442E-6	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.99999770803625	WITHOUT_CLASSIFICATION	2.291963749954489E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.99999984366729	WITHOUT_CLASSIFICATION	1.5633270999527327E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.999960126053456	WITHOUT_CLASSIFICATION	3.987394654395853E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999998826577917	WITHOUT_CLASSIFICATION	1.1734220830848706E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999096419051	WITHOUT_CLASSIFICATION	9.035809491848127E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.999972555286273	WITHOUT_CLASSIFICATION	2.7444713726958957E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999988314220618	WITHOUT_CLASSIFICATION	1.1685779381980384E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999526223614	WITHOUT_CLASSIFICATION	4.7377638655266924E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999538967342	WITHOUT_CLASSIFICATION	4.6103265787912246E-8	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.999805460555377	WITHOUT_CLASSIFICATION	1.9453944462292556E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9998666481526313	WITHOUT_CLASSIFICATION	1.333518473686884E-4	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999874380942696	WITHOUT_CLASSIFICATION	1.2561905730419012E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.999754961239679	WITHOUT_CLASSIFICATION	2.4503876032092476E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999733805114939	WITHOUT_CLASSIFICATION	2.66194885061188E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999683832739272	WITHOUT_CLASSIFICATION	3.16167260727421E-5	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999348792852162	WITHOUT_CLASSIFICATION	6.512071478384377E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999950196571871	WITHOUT_CLASSIFICATION	4.9803428129894745E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999993665322556	WITHOUT_CLASSIFICATION	6.334677444610674E-7	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999978996785945	WITHOUT_CLASSIFICATION	2.1003214054177944E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999994797769137	WITHOUT_CLASSIFICATION	5.202230862581409E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999997878141224	WITHOUT_CLASSIFICATION	2.1218587757868544E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999994856192308	WITHOUT_CLASSIFICATION	5.143807692470392E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999995568173425	WITHOUT_CLASSIFICATION	4.4318265757758767E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999974903530481	WITHOUT_CLASSIFICATION	2.5096469518266748E-6	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9988431474130882	WITHOUT_CLASSIFICATION	0.0011568525869117899	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999978893032815	WITHOUT_CLASSIFICATION	2.1106967185475824E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999700684327673	WITHOUT_CLASSIFICATION	2.9931567232798393E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999961158631647	WITHOUT_CLASSIFICATION	3.884136835368533E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999997694775292	WITHOUT_CLASSIFICATION	2.3052247070687124E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999997670407553	WITHOUT_CLASSIFICATION	2.3295924476963973E-7	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999983081714784	WITHOUT_CLASSIFICATION	1.6918285216910085E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.999997931498196	WITHOUT_CLASSIFICATION	2.0685018039624777E-6	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999977019827666	WITHOUT_CLASSIFICATION	2.2980172334282544E-6	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999986806511734	WITHOUT_CLASSIFICATION	1.3193488265797827E-6	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999986306371725	WITHOUT_CLASSIFICATION	1.3693628274638034E-6	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999974829845455	WITHOUT_CLASSIFICATION	2.517015454415305E-6	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999883109462712	WITHOUT_CLASSIFICATION	1.1689053728717502E-5	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999335484158745	WITHOUT_CLASSIFICATION	6.645158412555822E-5	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999640340447898	WITHOUT_CLASSIFICATION	3.5965955210100144E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999995657157205	WITHOUT_CLASSIFICATION	4.342842795655184E-7	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999988334679236	WITHOUT_CLASSIFICATION	1.166532076451579E-6	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999467760938657	WITHOUT_CLASSIFICATION	5.322390613430992E-5	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999921661406348	WITHOUT_CLASSIFICATION	7.83385936516173E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999987365960459	WITHOUT_CLASSIFICATION	1.2634039541461053E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999987764937229	WITHOUT_CLASSIFICATION	1.2235062770888311E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999982667614886	WITHOUT_CLASSIFICATION	1.7332385113926568E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999959456809122	WITHOUT_CLASSIFICATION	4.0543190877649E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999983857547866	WITHOUT_CLASSIFICATION	1.6142452134381445E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999997430343102	WITHOUT_CLASSIFICATION	2.5696568986914155E-7	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999390902274188	WITHOUT_CLASSIFICATION	6.090977258129258E-5	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999987087641278	WITHOUT_CLASSIFICATION	1.291235872110195E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999994640676527	WITHOUT_CLASSIFICATION	5.359323472644588E-7	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999456809431042	WITHOUT_CLASSIFICATION	5.431905689592716E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999993099523149	WITHOUT_CLASSIFICATION	6.900476849998547E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999995414927968	WITHOUT_CLASSIFICATION	4.5850720316646327E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999954476321089	WITHOUT_CLASSIFICATION	4.552367891127092E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999951432866687	WITHOUT_CLASSIFICATION	4.8567133313165114E-6	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999967256385306	WITHOUT_CLASSIFICATION	3.2743614694472087E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999982996237846	WITHOUT_CLASSIFICATION	1.700376215330967E-6	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999954476321089	WITHOUT_CLASSIFICATION	4.552367891127092E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999890362754785	WITHOUT_CLASSIFICATION	1.0963724521466812E-5	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999987201399118	WITHOUT_CLASSIFICATION	1.2798600882048664E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999993460670972	WITHOUT_CLASSIFICATION	6.53932902836462E-7	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999996765927205	WITHOUT_CLASSIFICATION	3.234072795697032E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999758626005714	WITHOUT_CLASSIFICATION	2.4137399428654427E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999987498957396	WITHOUT_CLASSIFICATION	1.2501042604330732E-6	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999954773721416	WITHOUT_CLASSIFICATION	4.522627858408451E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999969952014706	WITHOUT_CLASSIFICATION	3.004798529351244E-6	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999991767079695	WITHOUT_CLASSIFICATION	8.232920306124083E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.999991563283854	WITHOUT_CLASSIFICATION	8.436716146048054E-6	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.999998212375238	WITHOUT_CLASSIFICATION	1.7876247620353264E-6	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999998569476574	WITHOUT_CLASSIFICATION	1.4305234273474444E-7	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999958224496586	WITHOUT_CLASSIFICATION	4.177550341454838E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999965162634099	WITHOUT_CLASSIFICATION	3.483736590168387E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999500505583	WITHOUT_CLASSIFICATION	4.9949441710658265E-8	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999996935293615	WITHOUT_CLASSIFICATION	3.064706385069492E-7	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999978626940952	WITHOUT_CLASSIFICATION	2.137305904830891E-6	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.999989539272161	WITHOUT_CLASSIFICATION	1.0460727838929144E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999603119681078	WITHOUT_CLASSIFICATION	3.9688031892215956E-5	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999780187991343	WITHOUT_CLASSIFICATION	2.1981200865703538E-5	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.999988396021068	WITHOUT_CLASSIFICATION	1.1603978932015134E-5	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999994465829467	WITHOUT_CLASSIFICATION	5.534170532602941E-7	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999994307229505	WITHOUT_CLASSIFICATION	5.692770495227666E-7	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.99999911416891	WITHOUT_CLASSIFICATION	8.858310901475209E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999175879489	WITHOUT_CLASSIFICATION	8.241205103638983E-8	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999997905347514	WITHOUT_CLASSIFICATION	2.0946524853868598E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998034905732	WITHOUT_CLASSIFICATION	1.9650942688461483E-7	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999998155288351	WITHOUT_CLASSIFICATION	1.8447116479938803E-7	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9999772580014108	WITHOUT_CLASSIFICATION	2.2741998589161273E-5	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999974061039091	WITHOUT_CLASSIFICATION	2.593896090945565E-6	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.999995919306639	WITHOUT_CLASSIFICATION	4.080693361027576E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999995379642156	WITHOUT_CLASSIFICATION	4.620357844248582E-7	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999995531703368	WITHOUT_CLASSIFICATION	4.4682966313765157E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998034905732	WITHOUT_CLASSIFICATION	1.9650942688461483E-7	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999978396418989	WITHOUT_CLASSIFICATION	2.1603581010085386E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999978396418989	WITHOUT_CLASSIFICATION	2.1603581010085386E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999958657798643	WITHOUT_CLASSIFICATION	4.134220135665445E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998034905732	WITHOUT_CLASSIFICATION	1.9650942688461483E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998034905732	WITHOUT_CLASSIFICATION	1.9650942688461483E-7	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999965346621265	WITHOUT_CLASSIFICATION	3.4653378734569283E-6	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999995151618166	WITHOUT_CLASSIFICATION	4.848381834336283E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999947435571263	WITHOUT_CLASSIFICATION	5.256442873706903E-6	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999947435571263	WITHOUT_CLASSIFICATION	5.256442873706903E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999998571731129	WITHOUT_CLASSIFICATION	1.4282688713245364E-7	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.999954195584188	WITHOUT_CLASSIFICATION	4.5804415812050804E-5	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999988435918793	WITHOUT_CLASSIFICATION	1.156408120618732E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999603119681078	WITHOUT_CLASSIFICATION	3.9688031892215956E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999603119681078	WITHOUT_CLASSIFICATION	3.9688031892215956E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999998571731129	WITHOUT_CLASSIFICATION	1.4282688713245364E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999998374545317	WITHOUT_CLASSIFICATION	1.625454683585401E-7	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.999997765822743	WITHOUT_CLASSIFICATION	2.234177257011908E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999835894860821	WITHOUT_CLASSIFICATION	1.641051391785322E-5	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999988906928223	WITHOUT_CLASSIFICATION	1.1093071776522656E-6	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999980656124465	WITHOUT_CLASSIFICATION	1.9343875535345063E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.999988781642936	WITHOUT_CLASSIFICATION	1.1218357063929934E-5	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999930637303849	WITHOUT_CLASSIFICATION	6.936269615117148E-6	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999841336510897	WITHOUT_CLASSIFICATION	1.5866348910297227E-5	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999991966751175	WITHOUT_CLASSIFICATION	8.033248825844136E-7	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999998173621438	WITHOUT_CLASSIFICATION	1.8263785605861876E-7	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999983554186506	WITHOUT_CLASSIFICATION	1.644581349453217E-6	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999979041622709	WITHOUT_CLASSIFICATION	2.0958377291718273E-6	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9997689785347469	WITHOUT_CLASSIFICATION	2.310214652530888E-4	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999994886978406	WITHOUT_CLASSIFICATION	5.113021593758994E-7	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999927059820628	WITHOUT_CLASSIFICATION	7.294017937078043E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999961796652004	WITHOUT_CLASSIFICATION	3.820334799611202E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999942946228159	WITHOUT_CLASSIFICATION	5.705377184075735E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999905970460338	WITHOUT_CLASSIFICATION	9.402953966231245E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999968848028894	WITHOUT_CLASSIFICATION	3.1151971105395025E-6	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999845699325461	WITHOUT_CLASSIFICATION	1.5430067453919115E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999915606705466	WITHOUT_CLASSIFICATION	8.43932945335069E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999981233165062	WITHOUT_CLASSIFICATION	1.8766834939034063E-6	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999991118312644	WITHOUT_CLASSIFICATION	8.881687355333177E-7	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999628629378875	WITHOUT_CLASSIFICATION	3.7137062112590035E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999868629095683	WITHOUT_CLASSIFICATION	1.3137090431677434E-5	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999960590772884	WITHOUT_CLASSIFICATION	3.940922711636238E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999943596500721	WITHOUT_CLASSIFICATION	5.640349927881839E-6	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999195872906	WITHOUT_CLASSIFICATION	8.041270939997946E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999802890017297	WITHOUT_CLASSIFICATION	1.9710998270223977E-5	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999989246147154	WITHOUT_CLASSIFICATION	1.0753852846666826E-6	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999770156954177	WITHOUT_CLASSIFICATION	2.2984304582261453E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.999993567917534	WITHOUT_CLASSIFICATION	6.432082466045205E-6	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999996968716562	WITHOUT_CLASSIFICATION	3.031283437829185E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999778943865646	WITHOUT_CLASSIFICATION	2.210561343537834E-5	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999984423453327	WITHOUT_CLASSIFICATION	1.5576546673620987E-6	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999987348370174	WITHOUT_CLASSIFICATION	1.265162982566083E-6	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999911911614464	WITHOUT_CLASSIFICATION	8.808838553678883E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999957807376494	WITHOUT_CLASSIFICATION	4.219262350583868E-6	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999990220633301	WITHOUT_CLASSIFICATION	9.779366698659342E-7	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9997203919901099	WITHOUT_CLASSIFICATION	2.796080098901495E-4	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999978247363255	WITHOUT_CLASSIFICATION	2.1752636746233975E-6	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999983620876005	WITHOUT_CLASSIFICATION	1.6379123993925665E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999981646466471	WITHOUT_CLASSIFICATION	1.8353533527935737E-6	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999938377981372	WITHOUT_CLASSIFICATION	6.162201862786832E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999960533147866	WITHOUT_CLASSIFICATION	3.9466852133210216E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999770446748754	WITHOUT_CLASSIFICATION	2.2955325124662408E-5	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9994039709262624	WITHOUT_CLASSIFICATION	5.960290737375393E-4	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999946715075139	WITHOUT_CLASSIFICATION	5.3284924861769096E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999996268043304	WITHOUT_CLASSIFICATION	3.731956695479533E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999972054394483	WITHOUT_CLASSIFICATION	2.794560551644527E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9997441719219662	WITHOUT_CLASSIFICATION	2.5582807803376005E-4	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999791763679978	WITHOUT_CLASSIFICATION	2.0823632002236732E-5	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999996259948488	WITHOUT_CLASSIFICATION	3.74005151130472E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999999141433495	WITHOUT_CLASSIFICATION	8.585665045991165E-8	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.999985563066652	WITHOUT_CLASSIFICATION	1.4436933347901843E-5	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.999998282091201	WITHOUT_CLASSIFICATION	1.7179087989543643E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999953925332098	WITHOUT_CLASSIFICATION	4.607466790106683E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999916266033837	WITHOUT_CLASSIFICATION	8.373396616306318E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999991824392201	WITHOUT_CLASSIFICATION	8.17560779817786E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999998691766411	WITHOUT_CLASSIFICATION	1.3082335897694602E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999996462732824	WITHOUT_CLASSIFICATION	3.5372671764160436E-7	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999988970957724	WITHOUT_CLASSIFICATION	1.1029042276265114E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999922464740403	WITHOUT_CLASSIFICATION	7.753525959679023E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999998986442745	WITHOUT_CLASSIFICATION	1.0135572542919259E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9330403947729098	WITHOUT_CLASSIFICATION	0.06695960522709021	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999975878203303	WITHOUT_CLASSIFICATION	2.412179669691563E-6	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.999994028322907	WITHOUT_CLASSIFICATION	5.971677093037218E-6	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9990737006668257	WITHOUT_CLASSIFICATION	9.262993331743623E-4	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999881944669253	WITHOUT_CLASSIFICATION	1.1805533074747116E-5	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9996650521257666	WITHOUT_CLASSIFICATION	3.349478742334189E-4	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999734887450552	WITHOUT_CLASSIFICATION	2.6511254944819156E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999959141461665	WITHOUT_CLASSIFICATION	4.085853833495437E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999999261492224	WITHOUT_CLASSIFICATION	7.385077759415404E-7	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999766081371546	WITHOUT_CLASSIFICATION	2.3391862845360218E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999967145583887	WITHOUT_CLASSIFICATION	3.2854416112231265E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999983534081214	WITHOUT_CLASSIFICATION	1.6465918786945018E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999983534081214	WITHOUT_CLASSIFICATION	1.6465918786945018E-6	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999998771687709	WITHOUT_CLASSIFICATION	1.22831229099187E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9999971259438716	WITHOUT_CLASSIFICATION	2.8740561283944266E-6	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.999999932854535	WITHOUT_CLASSIFICATION	6.714546498357233E-8	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9996410096650199	WITHOUT_CLASSIFICATION	3.589903349801254E-4	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999946659962171	WITHOUT_CLASSIFICATION	5.334003782800981E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999993491568123	WITHOUT_CLASSIFICATION	6.508431877494412E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9999689629058476	WITHOUT_CLASSIFICATION	3.1037094152298935E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999956725969872	WITHOUT_CLASSIFICATION	4.327403012897716E-6	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9998623377428175	WITHOUT_CLASSIFICATION	1.3766225718250938E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999005096623	WITHOUT_CLASSIFICATION	9.949033776982303E-8	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999452444975	WITHOUT_CLASSIFICATION	5.4755502535816496E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999999155024454	WITHOUT_CLASSIFICATION	8.449755456652432E-8	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999994784369015	WITHOUT_CLASSIFICATION	5.215630985542893E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999995316404201	WITHOUT_CLASSIFICATION	4.683595798822229E-7	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999997368078551	WITHOUT_CLASSIFICATION	2.631921447761521E-7	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999925288043285	WITHOUT_CLASSIFICATION	7.471195671501006E-6	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999941621317788	WITHOUT_CLASSIFICATION	5.8378682212516944E-6	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999993115372735	WITHOUT_CLASSIFICATION	6.884627264775133E-7	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9998782517435955	WITHOUT_CLASSIFICATION	1.2174825640455572E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.999973083623578	WITHOUT_CLASSIFICATION	2.6916376422049565E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999774584866058	WITHOUT_CLASSIFICATION	2.2541513394190878E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998027632971617	WITHOUT_CLASSIFICATION	1.9723670283831329E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999912723017609	WITHOUT_CLASSIFICATION	8.727698239115498E-6	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999337348071698	WITHOUT_CLASSIFICATION	6.626519283019389E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.999592975612064	WITHOUT_CLASSIFICATION	4.070243879360075E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999107513818656	WITHOUT_CLASSIFICATION	8.924861813449061E-5	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9999960792127052	WITHOUT_CLASSIFICATION	3.920787294780915E-6	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999936674228028	WITHOUT_CLASSIFICATION	6.332577197171804E-6	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999810498279996	WITHOUT_CLASSIFICATION	1.8950172000321886E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.999973083623578	WITHOUT_CLASSIFICATION	2.6916376422049565E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998027632971617	WITHOUT_CLASSIFICATION	1.9723670283831329E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999998028089792	WITHOUT_CLASSIFICATION	1.9719102088885282E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999983715181436	WITHOUT_CLASSIFICATION	1.6284818564408747E-6	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999903401691163	WITHOUT_CLASSIFICATION	9.65983088369808E-6	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9995225712309788	WITHOUT_CLASSIFICATION	4.774287690212618E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999981012779233	WITHOUT_CLASSIFICATION	1.8987220765913719E-6	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.999988922170221	WITHOUT_CLASSIFICATION	1.1077829779106304E-5	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999983496027758	WITHOUT_CLASSIFICATION	1.6503972243151352E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9998810873930662	WITHOUT_CLASSIFICATION	1.1891260693375865E-4	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999945274314945	WITHOUT_CLASSIFICATION	5.472568505529925E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999982567152148	WITHOUT_CLASSIFICATION	1.7432847851213018E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999932026849501	WITHOUT_CLASSIFICATION	6.797315050029997E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999992564046675	WITHOUT_CLASSIFICATION	7.435953325138992E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999992142509047	WITHOUT_CLASSIFICATION	7.857490952995181E-7	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999987371023344	WITHOUT_CLASSIFICATION	1.26289766556257E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999989303804213	WITHOUT_CLASSIFICATION	1.0696195787573624E-6	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999986633227688	WITHOUT_CLASSIFICATION	1.3366772312221619E-6	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9995222890559355	WITHOUT_CLASSIFICATION	4.7771094406450366E-4	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999946046165833	WITHOUT_CLASSIFICATION	5.395383416760037E-6	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.999996917911997	WITHOUT_CLASSIFICATION	3.0820880030614733E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999997905347514	WITHOUT_CLASSIFICATION	2.0946524853868598E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999696213991782	WITHOUT_CLASSIFICATION	3.037860082172463E-5	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.999999628085142	WITHOUT_CLASSIFICATION	3.719148579696924E-7	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999995683997064	WITHOUT_CLASSIFICATION	4.316002937006943E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999980880260102	WITHOUT_CLASSIFICATION	1.911973989748456E-6	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999996665797191	WITHOUT_CLASSIFICATION	3.334202810064457E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999873569739066	WITHOUT_CLASSIFICATION	1.2643026093462053E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999774616200559	WITHOUT_CLASSIFICATION	2.2538379944189212E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999938990880824	WITHOUT_CLASSIFICATION	6.100911917462269E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.999999299746439	WITHOUT_CLASSIFICATION	7.002535609438211E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.999958891492808	WITHOUT_CLASSIFICATION	4.110850719201777E-5	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999966323969969	WITHOUT_CLASSIFICATION	3.3676030030557087E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999983820151405	WITHOUT_CLASSIFICATION	1.6179848596221534E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999921030360958	WITHOUT_CLASSIFICATION	7.896963904254786E-6	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999980586606507	WITHOUT_CLASSIFICATION	1.9413393492692445E-6	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999997480460106	WITHOUT_CLASSIFICATION	2.5195398944975914E-7	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999979356561907	WITHOUT_CLASSIFICATION	2.064343809354642E-6	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999994925908015	WITHOUT_CLASSIFICATION	5.074091986382407E-7	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999996776078095	WITHOUT_CLASSIFICATION	3.223921906004259E-7	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999980487308436	WITHOUT_CLASSIFICATION	1.951269156345636E-6	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999975388913286	WITHOUT_CLASSIFICATION	2.461108671361987E-6	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999950082863152	WITHOUT_CLASSIFICATION	4.991713684791596E-6	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999307729461259	WITHOUT_CLASSIFICATION	6.922705387412283E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.999975857161879	WITHOUT_CLASSIFICATION	2.4142838121031328E-5	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999959032727321	WITHOUT_CLASSIFICATION	4.096727267890357E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999981240350599	WITHOUT_CLASSIFICATION	1.875964940004795E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9999901331985387	WITHOUT_CLASSIFICATION	9.8668014612069E-6	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999981846614948	WITHOUT_CLASSIFICATION	1.8153385051591834E-6	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999634299465568	WITHOUT_CLASSIFICATION	3.65700534432173E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999968875164656	WITHOUT_CLASSIFICATION	3.1124835343503418E-6	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999951207200451	WITHOUT_CLASSIFICATION	4.879279954827112E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999968720190895	WITHOUT_CLASSIFICATION	3.127980910393966E-6	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999998578852558	WITHOUT_CLASSIFICATION	1.4211474414018514E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999546636855	WITHOUT_CLASSIFICATION	4.5336314398572945E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999994072581265	WITHOUT_CLASSIFICATION	5.927418735378313E-7	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999990722607175	WITHOUT_CLASSIFICATION	9.277392825006206E-7	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999981231037225	WITHOUT_CLASSIFICATION	1.8768962774093991E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999969130962242	WITHOUT_CLASSIFICATION	3.086903775686184E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999904774956663	WITHOUT_CLASSIFICATION	9.522504333671989E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999992040548605	WITHOUT_CLASSIFICATION	7.959451394606393E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.999989539272161	WITHOUT_CLASSIFICATION	1.0460727838929144E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999986488517759	WITHOUT_CLASSIFICATION	1.351148224068329E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999990562081154	WITHOUT_CLASSIFICATION	9.437918845721697E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999990142963926	WITHOUT_CLASSIFICATION	9.85703607392352E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999990142963926	WITHOUT_CLASSIFICATION	9.85703607392352E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999948986244855	WITHOUT_CLASSIFICATION	5.101375514477541E-6	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999899632663505	WITHOUT_CLASSIFICATION	1.0036733649520748E-5	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999993419540348	WITHOUT_CLASSIFICATION	6.580459652410585E-7	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999771575088954	WITHOUT_CLASSIFICATION	2.2842491104677964E-5	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999997141344231	WITHOUT_CLASSIFICATION	2.8586557687200226E-7	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999981706617697	WITHOUT_CLASSIFICATION	1.8293382303058886E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999995507502837	WITHOUT_CLASSIFICATION	4.492497162397234E-7	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9999930457495858	WITHOUT_CLASSIFICATION	6.954250414123116E-6	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999963345486841	WITHOUT_CLASSIFICATION	3.6654513159317786E-6	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999999829610883	WITHOUT_CLASSIFICATION	1.7038911811921293E-8	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999993446280231	WITHOUT_CLASSIFICATION	6.553719768921987E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999999874924905	WITHOUT_CLASSIFICATION	1.2507509392835624E-8	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999649194964	WITHOUT_CLASSIFICATION	3.508050369937638E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999993683766046	WITHOUT_CLASSIFICATION	6.316233954101882E-7	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999585139522323	WITHOUT_CLASSIFICATION	4.14860477676142E-5	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999964144168666	WITHOUT_CLASSIFICATION	3.5855831334190904E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9998746775836099	WITHOUT_CLASSIFICATION	1.2532241639012044E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999979865998271	WITHOUT_CLASSIFICATION	2.013400172933828E-6	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999891696937926	WITHOUT_CLASSIFICATION	1.0830306207353996E-5	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.999989980156763	WITHOUT_CLASSIFICATION	1.0019843236986931E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999777388066958	WITHOUT_CLASSIFICATION	2.2261193304223894E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999904553773823	WITHOUT_CLASSIFICATION	9.544622617700327E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999989028860256	WITHOUT_CLASSIFICATION	1.0971139745083004E-6	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.999999867029347	WITHOUT_CLASSIFICATION	1.329706531037593E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999993992085039	WITHOUT_CLASSIFICATION	6.007914960676037E-7	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999977033070763	WITHOUT_CLASSIFICATION	2.296692923710208E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999904553773823	WITHOUT_CLASSIFICATION	9.544622617700327E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999986059964233	WITHOUT_CLASSIFICATION	1.394003576724149E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9998700848970776	WITHOUT_CLASSIFICATION	1.2991510292225972E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999920763630075	WITHOUT_CLASSIFICATION	7.923636992525008E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999949575926189	WITHOUT_CLASSIFICATION	5.042407381104777E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999706291732432	WITHOUT_CLASSIFICATION	2.9370826756820446E-5	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999987433886424	WITHOUT_CLASSIFICATION	1.2566113576686313E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999981842282516	WITHOUT_CLASSIFICATION	1.8157717483917473E-6	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999983672494882	WITHOUT_CLASSIFICATION	1.6327505118365761E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999974859097771	WITHOUT_CLASSIFICATION	2.5140902229438087E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999346646778	WITHOUT_CLASSIFICATION	6.533532216040529E-8	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999988968800259	WITHOUT_CLASSIFICATION	1.1031199741875078E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.999980222406369	WITHOUT_CLASSIFICATION	1.9777593631076967E-5	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999995565876183	WITHOUT_CLASSIFICATION	4.434123816290404E-7	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999984915354507	WITHOUT_CLASSIFICATION	1.5084645492891858E-6	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999919591621851	WITHOUT_CLASSIFICATION	8.040837814882503E-6	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.99999822694473	WITHOUT_CLASSIFICATION	1.7730552700646114E-6	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999837791206136	WITHOUT_CLASSIFICATION	1.6220879386349076E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999995950699396	WITHOUT_CLASSIFICATION	4.049300603525362E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999979095225451	WITHOUT_CLASSIFICATION	2.0904774550313383E-6	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999978744533558	WITHOUT_CLASSIFICATION	2.1255466442877774E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999833712261342	WITHOUT_CLASSIFICATION	1.6628773865725106E-5	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.999999220833667	WITHOUT_CLASSIFICATION	7.791663329440816E-7	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999988836877335	WITHOUT_CLASSIFICATION	1.1163122664362485E-6	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999988047087446	WITHOUT_CLASSIFICATION	1.1952912554454277E-6	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999937861009928	WITHOUT_CLASSIFICATION	6.2138990073326165E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.999998307761757	WITHOUT_CLASSIFICATION	1.6922382429547966E-6	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999988634372562	WITHOUT_CLASSIFICATION	1.1365627438653315E-6	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999726251517245	WITHOUT_CLASSIFICATION	2.7374848275543178E-5	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999955533490534	WITHOUT_CLASSIFICATION	4.44665094660758E-6	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999669398015737	WITHOUT_CLASSIFICATION	3.306019842631807E-5	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999985339015237	WITHOUT_CLASSIFICATION	1.4660984763875684E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999982969891035	WITHOUT_CLASSIFICATION	1.7030108966290462E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999915085672021	WITHOUT_CLASSIFICATION	8.491432797952481E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999706291732432	WITHOUT_CLASSIFICATION	2.9370826756820446E-5	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999987433886424	WITHOUT_CLASSIFICATION	1.2566113576686313E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999981842282516	WITHOUT_CLASSIFICATION	1.8157717483917473E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999974859097771	WITHOUT_CLASSIFICATION	2.5140902229438087E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999346646778	WITHOUT_CLASSIFICATION	6.533532216040529E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9999701627420952	WITHOUT_CLASSIFICATION	2.9837257904797188E-5	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999736810595	WITHOUT_CLASSIFICATION	2.631894044442148E-8	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999816264413011	WITHOUT_CLASSIFICATION	1.8373558698886405E-5	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999971943171596	WITHOUT_CLASSIFICATION	2.8056828403314708E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.999851736444668	WITHOUT_CLASSIFICATION	1.4826355533192876E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999962241553889	WITHOUT_CLASSIFICATION	3.7758446110229813E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999995639044433	WITHOUT_CLASSIFICATION	4.360955567339961E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999976525533846	WITHOUT_CLASSIFICATION	2.347446615378659E-6	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999962214664849	WITHOUT_CLASSIFICATION	3.7785335150077174E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999989702724139	WITHOUT_CLASSIFICATION	1.029727586118201E-6	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999958843234736	WITHOUT_CLASSIFICATION	4.115676526317237E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999926847548826	WITHOUT_CLASSIFICATION	7.315245117521034E-6	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999998647315081	WITHOUT_CLASSIFICATION	1.3526849186786434E-7	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.999995187630381	WITHOUT_CLASSIFICATION	4.812369619033197E-6	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999984993110299	WITHOUT_CLASSIFICATION	1.5006889701077512E-6	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999962041406076	WITHOUT_CLASSIFICATION	3.795859392517161E-6	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999996689494516	WITHOUT_CLASSIFICATION	3.3105054842500695E-7	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.999998794795587	WITHOUT_CLASSIFICATION	1.2052044130696866E-6	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999994170260783	WITHOUT_CLASSIFICATION	5.829739217221304E-7	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999922777216051	WITHOUT_CLASSIFICATION	7.722278394908507E-6	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999921264183514	WITHOUT_CLASSIFICATION	7.873581648569214E-6	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999921415593293	WITHOUT_CLASSIFICATION	7.858440670738608E-6	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999970246300727	WITHOUT_CLASSIFICATION	2.9753699272757514E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999997051758767	WITHOUT_CLASSIFICATION	2.948241233810097E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999988383658623	WITHOUT_CLASSIFICATION	1.1616341377479766E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999983857547866	WITHOUT_CLASSIFICATION	1.6142452134381445E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999873569739066	WITHOUT_CLASSIFICATION	1.2643026093462053E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999968720190895	WITHOUT_CLASSIFICATION	3.127980910393966E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999346646778	WITHOUT_CLASSIFICATION	6.533532216040529E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999997856962609	WITHOUT_CLASSIFICATION	2.1430373920171726E-7	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999982679961685	WITHOUT_CLASSIFICATION	1.7320038315363158E-6	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999889786846	WITHOUT_CLASSIFICATION	1.1021315504749935E-8	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999688714441504	WITHOUT_CLASSIFICATION	3.112855584969311E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999688714441504	WITHOUT_CLASSIFICATION	3.112855584969311E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999833653882	WITHOUT_CLASSIFICATION	1.663461175766153E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999673833818643	WITHOUT_CLASSIFICATION	3.261661813563681E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999974095928226	WITHOUT_CLASSIFICATION	2.590407177506645E-6	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999885129463726	WITHOUT_CLASSIFICATION	1.1487053627380425E-5	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999719721475088	WITHOUT_CLASSIFICATION	2.802785249123497E-5	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9998185459665017	WITHOUT_CLASSIFICATION	1.8145403349835288E-4	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999952404370556	WITHOUT_CLASSIFICATION	4.7595629443573975E-6	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9998884854449204	WITHOUT_CLASSIFICATION	1.115145550797098E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998663587259907	WITHOUT_CLASSIFICATION	1.3364127400938348E-4	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999963733845603	WITHOUT_CLASSIFICATION	3.626615439700411E-6	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999931143094105	WITHOUT_CLASSIFICATION	6.8856905894759745E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999811682792512	WITHOUT_CLASSIFICATION	1.8831720748812886E-5	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999378814558638	WITHOUT_CLASSIFICATION	6.211854413626297E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9997796305543204	WITHOUT_CLASSIFICATION	2.2036944567952238E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9998963635707526	WITHOUT_CLASSIFICATION	1.0363642924738366E-4	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999992256923202	WITHOUT_CLASSIFICATION	7.743076797251109E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999976539277268	WITHOUT_CLASSIFICATION	2.3460722733076445E-6	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.999998816514169	WITHOUT_CLASSIFICATION	1.183485830958834E-6	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999938170153049	WITHOUT_CLASSIFICATION	6.182984695060989E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999990666665163	WITHOUT_CLASSIFICATION	9.333334838429016E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999992256923202	WITHOUT_CLASSIFICATION	7.743076797251109E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999991765106331	WITHOUT_CLASSIFICATION	8.234893669878938E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993723602281	WITHOUT_CLASSIFICATION	6.276397718997047E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993723602281	WITHOUT_CLASSIFICATION	6.276397718997047E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.999998816514169	WITHOUT_CLASSIFICATION	1.183485830958834E-6	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999970102786879	WITHOUT_CLASSIFICATION	2.989721312114203E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999987253734567	WITHOUT_CLASSIFICATION	1.274626543294047E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999987253734567	WITHOUT_CLASSIFICATION	1.274626543294047E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999992136801025	WITHOUT_CLASSIFICATION	7.8631989755248E-7	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999851641266227	WITHOUT_CLASSIFICATION	1.4835873377163694E-5	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9996686982609773	WITHOUT_CLASSIFICATION	3.313017390226407E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999962588120587	WITHOUT_CLASSIFICATION	3.741187941386186E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999891807788327	WITHOUT_CLASSIFICATION	1.0819221167341839E-5	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999517484870288	WITHOUT_CLASSIFICATION	4.825151297104693E-5	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999994788976071	WITHOUT_CLASSIFICATION	5.211023928324493E-7	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.999863814318193	WITHOUT_CLASSIFICATION	1.361856818070242E-4	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999748330242889	WITHOUT_CLASSIFICATION	2.5166975711036122E-5	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999918653570395	WITHOUT_CLASSIFICATION	8.134642960499082E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999923136423663	WITHOUT_CLASSIFICATION	7.686357633617064E-6	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999998348853459	WITHOUT_CLASSIFICATION	1.6511465398936671E-7	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9999552011878057	WITHOUT_CLASSIFICATION	4.4798812194382184E-5	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999203537666469	WITHOUT_CLASSIFICATION	7.964623335310747E-5	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9999777100886825	WITHOUT_CLASSIFICATION	2.2289911317365615E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999979491770081	WITHOUT_CLASSIFICATION	2.0508229918277583E-6	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999964556019492	WITHOUT_CLASSIFICATION	3.544398050719045E-6	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999994309521235	WITHOUT_CLASSIFICATION	5.690478764962793E-7	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9998972516918766	WITHOUT_CLASSIFICATION	1.0274830812328092E-4	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999817896069342	WITHOUT_CLASSIFICATION	1.8210393065812758E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999983998877064	WITHOUT_CLASSIFICATION	1.600112293529011E-6	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999962679494743	WITHOUT_CLASSIFICATION	3.732050525807088E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999969814626439	WITHOUT_CLASSIFICATION	3.0185373559987828E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998663587259907	WITHOUT_CLASSIFICATION	1.3364127400938348E-4	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999998987111681	WITHOUT_CLASSIFICATION	1.0128883189039326E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999997700700037	WITHOUT_CLASSIFICATION	2.2992999622870785E-7	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999998307415132	WITHOUT_CLASSIFICATION	1.6925848675657275E-7	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999995134978839	WITHOUT_CLASSIFICATION	4.865021161471257E-7	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999997339637714	WITHOUT_CLASSIFICATION	2.6603622861148414E-7	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999336707030739	WITHOUT_CLASSIFICATION	6.632929692603154E-5	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999947147509136	WITHOUT_CLASSIFICATION	5.2852490863247255E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999968548376023	WITHOUT_CLASSIFICATION	3.1451623977160336E-6	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999995240650705	WITHOUT_CLASSIFICATION	4.759349294596396E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999994646388212	WITHOUT_CLASSIFICATION	5.353611787583149E-7	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999645146429903	WITHOUT_CLASSIFICATION	3.548535700975846E-5	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999978254234193	WITHOUT_CLASSIFICATION	2.174576580730113E-6	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.999985102436473	WITHOUT_CLASSIFICATION	1.48975635270312E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999918532722053	WITHOUT_CLASSIFICATION	8.146727794728365E-6	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999904115003047	WITHOUT_CLASSIFICATION	9.588499695385686E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999978139064585	WITHOUT_CLASSIFICATION	2.1860935415654626E-6	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999998920504563	WITHOUT_CLASSIFICATION	1.0794954382189934E-7	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999854450596487	WITHOUT_CLASSIFICATION	1.4554940351351362E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9998789242565387	WITHOUT_CLASSIFICATION	1.2107574346132461E-4	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999580175353472	WITHOUT_CLASSIFICATION	4.198246465279173E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999962363035915	WITHOUT_CLASSIFICATION	3.76369640842713E-6	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999933985999113	WITHOUT_CLASSIFICATION	6.60140008857583E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999901208953917	WITHOUT_CLASSIFICATION	9.879104608185668E-6	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999993090683762	WITHOUT_CLASSIFICATION	6.909316238443077E-7	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999924163577224	WITHOUT_CLASSIFICATION	7.583642277667248E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999974394350456	WITHOUT_CLASSIFICATION	2.5605649543270778E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999960348001943	WITHOUT_CLASSIFICATION	3.9651998057250346E-6	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999899673905104	WITHOUT_CLASSIFICATION	1.0032609489647955E-5	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999999580738149	WITHOUT_CLASSIFICATION	4.192618502158803E-8	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999893211706873	WITHOUT_CLASSIFICATION	1.0678829312764842E-5	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999984708117826	WITHOUT_CLASSIFICATION	1.5291882174085416E-6	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999987209770722	WITHOUT_CLASSIFICATION	1.2790229277639278E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9999977839428109	WITHOUT_CLASSIFICATION	2.2160571890309733E-6	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9999893102818607	WITHOUT_CLASSIFICATION	1.0689718139312745E-5	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999785308809344	WITHOUT_CLASSIFICATION	2.1469119065602207E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999949695630166	WITHOUT_CLASSIFICATION	5.03043698335506E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999935149174853	WITHOUT_CLASSIFICATION	6.48508251469793E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999935149174853	WITHOUT_CLASSIFICATION	6.48508251469793E-6	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999838998398473	WITHOUT_CLASSIFICATION	1.6100160152696824E-5	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999984147736616	WITHOUT_CLASSIFICATION	1.5852263385116802E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999997529817913	WITHOUT_CLASSIFICATION	2.4701820864242294E-7	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9999864544928411	WITHOUT_CLASSIFICATION	1.3545507159007092E-5	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.999999706242825	WITHOUT_CLASSIFICATION	2.937571749852657E-7	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999991827142425	WITHOUT_CLASSIFICATION	8.172857574291359E-7	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9998956859092005	WITHOUT_CLASSIFICATION	1.0431409079947564E-4	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9998626570257728	WITHOUT_CLASSIFICATION	1.3734297422713238E-4	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.99992289534991	WITHOUT_CLASSIFICATION	7.71046500901383E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999997350912678	WITHOUT_CLASSIFICATION	2.649087322254671E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999984227490539	WITHOUT_CLASSIFICATION	1.5772509461098613E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999999780445575	WITHOUT_CLASSIFICATION	2.1955442449136268E-8	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999994869695358	WITHOUT_CLASSIFICATION	5.130304642279763E-7	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999944311485409	WITHOUT_CLASSIFICATION	5.5688514590390765E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999972872719003	WITHOUT_CLASSIFICATION	2.712728099601197E-6	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999918399426663	WITHOUT_CLASSIFICATION	8.160057333628008E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999998865044007	WITHOUT_CLASSIFICATION	1.1349559926129626E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999990188115792	WITHOUT_CLASSIFICATION	9.81188420887176E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999517986490216	WITHOUT_CLASSIFICATION	4.820135097829877E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999996485015966	WITHOUT_CLASSIFICATION	3.514984033179571E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999545354532084	WITHOUT_CLASSIFICATION	4.546454679152528E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999545354532084	WITHOUT_CLASSIFICATION	4.546454679152528E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999981487826376	WITHOUT_CLASSIFICATION	1.8512173623533936E-6	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999993166941552	WITHOUT_CLASSIFICATION	6.833058447879529E-7	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999998491166306	WITHOUT_CLASSIFICATION	1.5088336944557697E-7	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.999999841983248	WITHOUT_CLASSIFICATION	1.5801675206822388E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999948560416229	WITHOUT_CLASSIFICATION	5.143958377114826E-6	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999025138697017	WITHOUT_CLASSIFICATION	9.748613029819562E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999943380223719	WITHOUT_CLASSIFICATION	5.6619776281300694E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9990852562449765	WITHOUT_CLASSIFICATION	9.147437550233842E-4	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999511381209485	WITHOUT_CLASSIFICATION	4.88618790513958E-5	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9994582022488937	WITHOUT_CLASSIFICATION	5.417977511063145E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999983468470313	WITHOUT_CLASSIFICATION	1.6531529687637393E-6	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9990025895123481	WITHOUT_CLASSIFICATION	9.974104876519193E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.999951970241468	WITHOUT_CLASSIFICATION	4.8029758532010244E-5	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999997800059527	WITHOUT_CLASSIFICATION	2.1999404719789711E-7	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999997457607773	WITHOUT_CLASSIFICATION	2.542392226851574E-7	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999992193454115	WITHOUT_CLASSIFICATION	7.806545884987707E-7	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999802938958366	WITHOUT_CLASSIFICATION	1.970610416331058E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999303225193648	WITHOUT_CLASSIFICATION	6.967748063522795E-5	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999980290522511	WITHOUT_CLASSIFICATION	1.9709477488315865E-6	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9998911515211762	WITHOUT_CLASSIFICATION	1.0884847882377501E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999845699325461	WITHOUT_CLASSIFICATION	1.5430067453919115E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999983715181436	WITHOUT_CLASSIFICATION	1.6284818564408747E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999513782747005	WITHOUT_CLASSIFICATION	4.862172529943598E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999997531867523	WITHOUT_CLASSIFICATION	2.468132477489398E-7	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999993005522201	WITHOUT_CLASSIFICATION	6.994477799586908E-7	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999999116828625	WITHOUT_CLASSIFICATION	8.831713748886482E-8	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999998573542702	WITHOUT_CLASSIFICATION	1.4264572967728457E-7	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999832887238868	WITHOUT_CLASSIFICATION	1.671127611328535E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999962470508926	WITHOUT_CLASSIFICATION	3.7529491072849695E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999460188659	WITHOUT_CLASSIFICATION	5.398113405871172E-8	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999855384024705	WITHOUT_CLASSIFICATION	1.4461597529433362E-5	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999830465380422	WITHOUT_CLASSIFICATION	1.6953461957863434E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999994119598186	WITHOUT_CLASSIFICATION	5.880401813607535E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999994119598186	WITHOUT_CLASSIFICATION	5.880401813607535E-7	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9994675038220164	WITHOUT_CLASSIFICATION	5.324961779835802E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999675318618226	WITHOUT_CLASSIFICATION	3.246813817739847E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999998788527731	WITHOUT_CLASSIFICATION	1.211472268786772E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997138597686259	WITHOUT_CLASSIFICATION	2.8614023137401776E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999956598608595	WITHOUT_CLASSIFICATION	4.340139140522721E-6	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999987593423549	WITHOUT_CLASSIFICATION	1.2406576451068213E-6	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.999965393784021	WITHOUT_CLASSIFICATION	3.460621597899692E-5	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999963541230756	WITHOUT_CLASSIFICATION	3.6458769244343164E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999989799350194	WITHOUT_CLASSIFICATION	1.0200649805250948E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999983583267964	WITHOUT_CLASSIFICATION	1.6416732035346294E-6	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999956699993467	WITHOUT_CLASSIFICATION	4.330000653238155E-6	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.999986089888716	WITHOUT_CLASSIFICATION	1.3910111284113959E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999990497912032	WITHOUT_CLASSIFICATION	9.502087967260663E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999987125596994	WITHOUT_CLASSIFICATION	1.2874403006032423E-6	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999953517442671	WITHOUT_CLASSIFICATION	4.648255732913001E-6	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999790923453167	WITHOUT_CLASSIFICATION	2.090765468330891E-5	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9999775672266166	WITHOUT_CLASSIFICATION	2.243277338344184E-5	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9997033434867718	WITHOUT_CLASSIFICATION	2.9665651322827104E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999997430343102	WITHOUT_CLASSIFICATION	2.5696568986914155E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999987764937229	WITHOUT_CLASSIFICATION	1.2235062770888311E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998663587259907	WITHOUT_CLASSIFICATION	1.3364127400938348E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.99999935847363	WITHOUT_CLASSIFICATION	6.415263700701005E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.999980689070779	WITHOUT_CLASSIFICATION	1.9310929221075844E-5	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999982431468271	WITHOUT_CLASSIFICATION	1.7568531729837591E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9981198519240994	WITHOUT_CLASSIFICATION	0.0018801480759007337	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999947190812463	WITHOUT_CLASSIFICATION	5.2809187536601574E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999993527815885	WITHOUT_CLASSIFICATION	6.472184115803499E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999987127266002	WITHOUT_CLASSIFICATION	1.2872733997315634E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999994382975662	WITHOUT_CLASSIFICATION	5.61702433879535E-7	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999909134149318	WITHOUT_CLASSIFICATION	9.086585068252737E-6	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999997253592746	WITHOUT_CLASSIFICATION	2.7464072531648323E-7	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999995480914888	WITHOUT_CLASSIFICATION	4.5190851120298697E-7	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999608936246857	WITHOUT_CLASSIFICATION	3.9106375314373365E-5	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999991578438326	WITHOUT_CLASSIFICATION	8.421561673526766E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9998932999878173	WITHOUT_CLASSIFICATION	1.0670001218275213E-4	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999992222917923	WITHOUT_CLASSIFICATION	7.777082077010014E-7	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999991656266513	WITHOUT_CLASSIFICATION	8.343733488218587E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999989172322566	WITHOUT_CLASSIFICATION	1.0827677433679077E-6	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999981904079145	WITHOUT_CLASSIFICATION	1.8095920854721808E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999999346646778	WITHOUT_CLASSIFICATION	6.533532216040529E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999944858085776	WITHOUT_CLASSIFICATION	5.514191422267761E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999962909128357	WITHOUT_CLASSIFICATION	3.7090871642534465E-6	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9970285066284041	WITHOUT_CLASSIFICATION	0.002971493371595787	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999277246454504	WITHOUT_CLASSIFICATION	7.227535454956384E-5	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999881675944261	WITHOUT_CLASSIFICATION	1.1832405573866722E-5	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999998376903187	WITHOUT_CLASSIFICATION	1.6230968115659303E-7	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.999994354796026	WITHOUT_CLASSIFICATION	5.645203973965217E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999975734275149	WITHOUT_CLASSIFICATION	2.4265724850971918E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999967791610788	WITHOUT_CLASSIFICATION	3.220838921163522E-6	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999479751212541	WITHOUT_CLASSIFICATION	5.202487874576905E-5	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.99999738471348	WITHOUT_CLASSIFICATION	2.6152865200269547E-6	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999997359250353	WITHOUT_CLASSIFICATION	2.640749646746209E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999993526659072	WITHOUT_CLASSIFICATION	6.473340927141328E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999997222900985	WITHOUT_CLASSIFICATION	2.77709901502663E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999911070296171	WITHOUT_CLASSIFICATION	8.892970382840141E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999991642150825	WITHOUT_CLASSIFICATION	8.357849174917411E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999874334325721	WITHOUT_CLASSIFICATION	1.2566567427769259E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999998874206422	WITHOUT_CLASSIFICATION	1.1257935783477221E-7	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.999999211484595	WITHOUT_CLASSIFICATION	7.885154051172685E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999174650146	WITHOUT_CLASSIFICATION	8.253498537264696E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999174650146	WITHOUT_CLASSIFICATION	8.253498537264696E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999757415801981	WITHOUT_CLASSIFICATION	2.4258419801893813E-5	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.999908008600316	WITHOUT_CLASSIFICATION	9.199139968396909E-5	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999888876337528	WITHOUT_CLASSIFICATION	1.1112366247134389E-5	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.99999967391936	WITHOUT_CLASSIFICATION	3.26080640051456E-7	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.999999491691269	WITHOUT_CLASSIFICATION	5.083087310141911E-7	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.99999206550646	WITHOUT_CLASSIFICATION	7.934493540014706E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9999336112325125	WITHOUT_CLASSIFICATION	6.638876748746547E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999961890037237	WITHOUT_CLASSIFICATION	3.8109962764514017E-6	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999961890037237	WITHOUT_CLASSIFICATION	3.8109962764514017E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999988155941417	WITHOUT_CLASSIFICATION	1.1844058583320984E-6	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999996777509917	WITHOUT_CLASSIFICATION	3.2224900827543475E-7	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.99999210026077	WITHOUT_CLASSIFICATION	7.899739230103512E-6	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999970512697168	WITHOUT_CLASSIFICATION	2.94873028320832E-6	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999964916802075	WITHOUT_CLASSIFICATION	3.5083197924138202E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999979312831674	WITHOUT_CLASSIFICATION	2.0687168326677888E-6	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999942824872875	WITHOUT_CLASSIFICATION	5.717512712480715E-6	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999517750771675	WITHOUT_CLASSIFICATION	4.822492283242021E-5	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999985225121089	WITHOUT_CLASSIFICATION	1.4774878911105186E-6	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999936548323219	WITHOUT_CLASSIFICATION	6.345167678090626E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999954500320067	WITHOUT_CLASSIFICATION	4.5499679932673286E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999981183260761	WITHOUT_CLASSIFICATION	1.8816739238670893E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999988081751222	WITHOUT_CLASSIFICATION	1.1918248777557102E-6	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999881993911361	WITHOUT_CLASSIFICATION	1.1800608863840592E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999990995444727	WITHOUT_CLASSIFICATION	9.004555272798741E-7	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999893368938028	WITHOUT_CLASSIFICATION	1.0663106197310251E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999471356708142	WITHOUT_CLASSIFICATION	5.2864329185930367E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999975740322161	WITHOUT_CLASSIFICATION	2.4259677839645777E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999600079543784	WITHOUT_CLASSIFICATION	3.999204562152214E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999995541082685	WITHOUT_CLASSIFICATION	4.4589173158868595E-7	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999799273177323	WITHOUT_CLASSIFICATION	2.007268226776875E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999964218551088	WITHOUT_CLASSIFICATION	3.5781448911004606E-6	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999956655216701	WITHOUT_CLASSIFICATION	4.334478329948507E-6	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.999995886332643	WITHOUT_CLASSIFICATION	4.113667357039986E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999984235860898	WITHOUT_CLASSIFICATION	1.5764139102753955E-6	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999655335838367	WITHOUT_CLASSIFICATION	3.446641616337679E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999993723769144	WITHOUT_CLASSIFICATION	6.27623085706629E-7	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999702804782619	WITHOUT_CLASSIFICATION	2.971952173819738E-5	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.999999872304287	WITHOUT_CLASSIFICATION	1.276957129920609E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999963479858882	WITHOUT_CLASSIFICATION	3.6520141118051882E-6	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999947584085334	WITHOUT_CLASSIFICATION	5.241591466672197E-6	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999974788042781	WITHOUT_CLASSIFICATION	2.5211957218747417E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9999809942236628	WITHOUT_CLASSIFICATION	1.900577633716319E-5	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.999999411533841	WITHOUT_CLASSIFICATION	5.884661590214686E-7	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999990183177985	WITHOUT_CLASSIFICATION	9.816822015663175E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999851202635902	WITHOUT_CLASSIFICATION	1.4879736409804053E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999956540758186	WITHOUT_CLASSIFICATION	4.345924181357237E-6	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.999998934978815	WITHOUT_CLASSIFICATION	1.0650211850916153E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9998353047561245	WITHOUT_CLASSIFICATION	1.6469524387564762E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999474409261359	WITHOUT_CLASSIFICATION	5.255907386408273E-5	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999842103472931	WITHOUT_CLASSIFICATION	1.5789652706917354E-5	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999982274852215	WITHOUT_CLASSIFICATION	1.77251477848115E-6	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999895048787284	WITHOUT_CLASSIFICATION	1.0495121271566423E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999713650458162	WITHOUT_CLASSIFICATION	2.8634954183755826E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999991405394693	WITHOUT_CLASSIFICATION	8.594605307422288E-7	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9999153490196615	WITHOUT_CLASSIFICATION	8.465098033849704E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999968315974841	WITHOUT_CLASSIFICATION	3.168402516003731E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999983715181436	WITHOUT_CLASSIFICATION	1.6284818564408747E-6	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999968315974841	WITHOUT_CLASSIFICATION	3.168402516003731E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999940997448346	WITHOUT_CLASSIFICATION	5.900255165460804E-6	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999848603833638	WITHOUT_CLASSIFICATION	1.513961663625324E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999998436324572	WITHOUT_CLASSIFICATION	1.5636754279156303E-7	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999867344694497	WITHOUT_CLASSIFICATION	1.3265530550300556E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9998989678229682	WITHOUT_CLASSIFICATION	1.0103217703175504E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9998486114048954	WITHOUT_CLASSIFICATION	1.5138859510456903E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999833162160303	WITHOUT_CLASSIFICATION	1.668378396970947E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999847935461478	WITHOUT_CLASSIFICATION	1.5206453852154133E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999997710353038	WITHOUT_CLASSIFICATION	2.289646961266048E-7	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999998664660593	WITHOUT_CLASSIFICATION	1.3353394064475727E-7	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999994825517065	WITHOUT_CLASSIFICATION	5.174482935641388E-7	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999934645038118	WITHOUT_CLASSIFICATION	6.535496188267232E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999982290892929	WITHOUT_CLASSIFICATION	1.770910707135947E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999942421234633	WITHOUT_CLASSIFICATION	5.75787653661685E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999984930116497	WITHOUT_CLASSIFICATION	1.5069883502216357E-6	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999980912211982	WITHOUT_CLASSIFICATION	1.908778801740328E-6	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999863843822461	WITHOUT_CLASSIFICATION	1.3615617754009853E-5	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999280118743122	WITHOUT_CLASSIFICATION	7.198812568775108E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999616580343301	WITHOUT_CLASSIFICATION	3.8341965669751646E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.999985808939051	WITHOUT_CLASSIFICATION	1.4191060949082778E-5	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9992513737582677	WITHOUT_CLASSIFICATION	7.486262417323469E-4	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999997056560922	WITHOUT_CLASSIFICATION	2.9434390778593303E-7	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999986342179431	WITHOUT_CLASSIFICATION	1.3657820568954684E-6	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998736964422	WITHOUT_CLASSIFICATION	1.2630355788221684E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999784432735	WITHOUT_CLASSIFICATION	2.1556726539692106E-8	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999860030802855	WITHOUT_CLASSIFICATION	1.3996919714379338E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.999293460565965	WITHOUT_CLASSIFICATION	7.065394340349316E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999797704368802	WITHOUT_CLASSIFICATION	2.0229563119766467E-5	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.999995639321701	WITHOUT_CLASSIFICATION	4.3606782990303735E-6	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9999397130570374	WITHOUT_CLASSIFICATION	6.028694296248411E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999677358203436	WITHOUT_CLASSIFICATION	3.226417965649357E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999922265730301	WITHOUT_CLASSIFICATION	7.773426970000818E-6	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9998289667922569	WITHOUT_CLASSIFICATION	1.7103320774311268E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999848946206018	WITHOUT_CLASSIFICATION	1.5105379398174597E-5	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999988236213931	WITHOUT_CLASSIFICATION	1.176378606936063E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999603951265	WITHOUT_CLASSIFICATION	3.9604873397590534E-8	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999995757340837	WITHOUT_CLASSIFICATION	4.2426591627407306E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999998688861902	WITHOUT_CLASSIFICATION	1.3111380992356638E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999998688861902	WITHOUT_CLASSIFICATION	1.3111380992356638E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999897133221773	WITHOUT_CLASSIFICATION	1.028667782259972E-5	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.999997652606936	WITHOUT_CLASSIFICATION	2.3473930641295376E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999943283967343	WITHOUT_CLASSIFICATION	5.671603265654864E-6	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999997918149551	WITHOUT_CLASSIFICATION	2.0818504495261196E-7	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999990340024694	WITHOUT_CLASSIFICATION	9.659975306574412E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998939161377	WITHOUT_CLASSIFICATION	1.0608386227649268E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999697667314316	WITHOUT_CLASSIFICATION	3.0233268568466877E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999910436396	WITHOUT_CLASSIFICATION	8.956360426645235E-9	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999843896215265	WITHOUT_CLASSIFICATION	1.5610378473445656E-5	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999973626963389	WITHOUT_CLASSIFICATION	2.63730366122498E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9999515950833202	WITHOUT_CLASSIFICATION	4.840491667969277E-5	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9999347139140843	WITHOUT_CLASSIFICATION	6.528608591576888E-5	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999915157653763	WITHOUT_CLASSIFICATION	8.484234623698329E-6	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.999973270847907	WITHOUT_CLASSIFICATION	2.6729152093062338E-5	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999971301020895	WITHOUT_CLASSIFICATION	2.869897910529627E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999777192320484	WITHOUT_CLASSIFICATION	2.228076795170279E-5	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999994564606468	WITHOUT_CLASSIFICATION	5.435393531166389E-7	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999951045181824	WITHOUT_CLASSIFICATION	4.895481817625834E-6	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999995708705898	WITHOUT_CLASSIFICATION	4.2912941015419643E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999835894860821	WITHOUT_CLASSIFICATION	1.641051391785322E-5	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999948409110302	WITHOUT_CLASSIFICATION	5.159088969737489E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999981012779233	WITHOUT_CLASSIFICATION	1.8987220765913719E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9999629789295809	WITHOUT_CLASSIFICATION	3.702107041909639E-5	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9977670504608344	WITHOUT_CLASSIFICATION	0.00223294953916558	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9998823790512252	WITHOUT_CLASSIFICATION	1.1762094877472606E-4	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999920155719375	WITHOUT_CLASSIFICATION	7.98442806261171E-6	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9998398044033987	WITHOUT_CLASSIFICATION	1.60195596601395E-4	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999583955794757	WITHOUT_CLASSIFICATION	4.160442052428924E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999830763518365	WITHOUT_CLASSIFICATION	1.6923648163526368E-5	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999825195391906	WITHOUT_CLASSIFICATION	1.7480460809424448E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999753379227051	WITHOUT_CLASSIFICATION	2.4662077294873554E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999929094110471	WITHOUT_CLASSIFICATION	7.090588952880146E-6	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999970765507863	WITHOUT_CLASSIFICATION	2.9234492137105424E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.99999714825931	WITHOUT_CLASSIFICATION	2.851740690008799E-6	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999929666141161	WITHOUT_CLASSIFICATION	7.033385883941252E-6	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999246161019911	WITHOUT_CLASSIFICATION	7.538389800888258E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999925765544995	WITHOUT_CLASSIFICATION	7.423445500516646E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999925765544995	WITHOUT_CLASSIFICATION	7.423445500516646E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9997602124205947	WITHOUT_CLASSIFICATION	2.3978757940528345E-4	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999530440685404	WITHOUT_CLASSIFICATION	4.695593145961622E-5	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999868601801875	WITHOUT_CLASSIFICATION	1.3139819812558065E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999965061903255	WITHOUT_CLASSIFICATION	3.4938096745907357E-6	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999996176630255	WITHOUT_CLASSIFICATION	3.8233697449185536E-7	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999654256990066	WITHOUT_CLASSIFICATION	3.457430099344386E-5	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999407904481772	WITHOUT_CLASSIFICATION	5.920955182280345E-5	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999991569902144	WITHOUT_CLASSIFICATION	8.430097856846188E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999823939847206	WITHOUT_CLASSIFICATION	1.7606015279434236E-5	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999999203689227	WITHOUT_CLASSIFICATION	7.963107724072808E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999996645481917	WITHOUT_CLASSIFICATION	3.354518083807982E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.999985986782622	WITHOUT_CLASSIFICATION	1.4013217378000362E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999960406359455	WITHOUT_CLASSIFICATION	3.9593640544603565E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999993812779983	WITHOUT_CLASSIFICATION	6.187220017611965E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999987566254014	WITHOUT_CLASSIFICATION	1.243374598584906E-6	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999994341771614	WITHOUT_CLASSIFICATION	5.658228385493127E-7	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999674588719429	WITHOUT_CLASSIFICATION	3.254112805700928E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999783930982677	WITHOUT_CLASSIFICATION	2.1606901732240417E-5	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999815853044203	WITHOUT_CLASSIFICATION	1.8414695579688524E-5	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999873198888352	WITHOUT_CLASSIFICATION	1.2680111164751936E-5	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999995006343609	WITHOUT_CLASSIFICATION	4.993656391392704E-7	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.999946367661161	WITHOUT_CLASSIFICATION	5.3632338839075664E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999941256661704	WITHOUT_CLASSIFICATION	5.874333829554155E-6	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999928278479139	WITHOUT_CLASSIFICATION	7.172152086102226E-6	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.99998875593686	WITHOUT_CLASSIFICATION	1.1244063139966277E-5	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999913557100848	WITHOUT_CLASSIFICATION	8.644289915237781E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999964009038604	WITHOUT_CLASSIFICATION	3.5990961394637493E-6	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999953898654508	WITHOUT_CLASSIFICATION	4.6101345491986385E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999964358032579	WITHOUT_CLASSIFICATION	3.5641967420498893E-6	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999997159356836	WITHOUT_CLASSIFICATION	2.8406431637895947E-7	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999996792976057	WITHOUT_CLASSIFICATION	3.207023944091649E-7	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999999884483645	WITHOUT_CLASSIFICATION	1.1551635592689544E-8	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.999996954666249	WITHOUT_CLASSIFICATION	3.0453337509459907E-6	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999994814167351	WITHOUT_CLASSIFICATION	5.185832648717943E-7	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999989094360822	WITHOUT_CLASSIFICATION	1.0905639178265401E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999993912957169	WITHOUT_CLASSIFICATION	6.087042831611054E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999994765315317	WITHOUT_CLASSIFICATION	5.234684682619239E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999353845554739	WITHOUT_CLASSIFICATION	6.46154445260313E-5	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999972256536332	WITHOUT_CLASSIFICATION	2.7743463668100046E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999999534593906	WITHOUT_CLASSIFICATION	4.6540609358004667E-8	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999992491931691	WITHOUT_CLASSIFICATION	7.508068309535355E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999997269201467	WITHOUT_CLASSIFICATION	2.7307985329464714E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995295366257	WITHOUT_CLASSIFICATION	4.7046337425621413E-7	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999966345084307	WITHOUT_CLASSIFICATION	3.365491569316489E-6	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999817437536	WITHOUT_CLASSIFICATION	1.8256246468612568E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.999999427409465	WITHOUT_CLASSIFICATION	5.725905349717178E-7	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999963656870519	WITHOUT_CLASSIFICATION	3.634312948264969E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999986569807509	WITHOUT_CLASSIFICATION	1.34301924916322E-6	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999939513154862	WITHOUT_CLASSIFICATION	6.048684513801138E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999998232007506	WITHOUT_CLASSIFICATION	1.7679924938637887E-7	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999969975522174	WITHOUT_CLASSIFICATION	3.0024477827468867E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999997579349581	WITHOUT_CLASSIFICATION	2.420650419278439E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999997004098722	WITHOUT_CLASSIFICATION	2.9959012774200556E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999966238661971	WITHOUT_CLASSIFICATION	3.376133802943191E-6	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999995094989929	WITHOUT_CLASSIFICATION	4.905010070374298E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999993727325385	WITHOUT_CLASSIFICATION	6.272674615555345E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999998948482679	WITHOUT_CLASSIFICATION	1.0515173217227372E-7	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999982243637191	WITHOUT_CLASSIFICATION	1.7756362809253603E-6	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.999997131441382	WITHOUT_CLASSIFICATION	2.8685586179178793E-6	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.999999513304469	WITHOUT_CLASSIFICATION	4.866955310322999E-7	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.999990653386397	WITHOUT_CLASSIFICATION	9.34661360309488E-6	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999996601120675	WITHOUT_CLASSIFICATION	3.3988793249771664E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9998565056999204	WITHOUT_CLASSIFICATION	1.4349430007971756E-4	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999567026039791	WITHOUT_CLASSIFICATION	4.329739602099696E-5	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9996405407160808	WITHOUT_CLASSIFICATION	3.594592839192341E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999264648163727	WITHOUT_CLASSIFICATION	7.353518362729405E-5	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9388661413978577	WITHOUT_CLASSIFICATION	0.06113385860214222	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999997536011364	WITHOUT_CLASSIFICATION	2.4639886367327244E-7	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999944339759171	WITHOUT_CLASSIFICATION	5.566024082827009E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999682053777713	WITHOUT_CLASSIFICATION	3.1794622228801376E-5	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999654407179351	WITHOUT_CLASSIFICATION	3.4559282064926035E-5	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999892306979918	WITHOUT_CLASSIFICATION	1.0769302008227093E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999570992834252	WITHOUT_CLASSIFICATION	4.290071657483542E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999977712556387	WITHOUT_CLASSIFICATION	2.228744361246474E-6	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999977712556387	WITHOUT_CLASSIFICATION	2.228744361246474E-6	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999806435687277	WITHOUT_CLASSIFICATION	1.9356431272283147E-5	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999764017712057	WITHOUT_CLASSIFICATION	2.3598228794373238E-5	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999992326506533	WITHOUT_CLASSIFICATION	7.673493466417605E-7	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999801131993813	WITHOUT_CLASSIFICATION	1.9886800618734892E-5	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999722322533259	WITHOUT_CLASSIFICATION	2.7767746674136414E-5	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999930318952871	WITHOUT_CLASSIFICATION	6.968104712897359E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999969952014706	WITHOUT_CLASSIFICATION	3.004798529351244E-6	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999980951785611	WITHOUT_CLASSIFICATION	1.9048214389091397E-6	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999504844261464	WITHOUT_CLASSIFICATION	4.9515573853596E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999299526542401	WITHOUT_CLASSIFICATION	7.004734575988795E-5	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999729052615254	WITHOUT_CLASSIFICATION	2.7094738474651267E-5	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999958773713996	WITHOUT_CLASSIFICATION	4.122628600495479E-6	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.999996469551333	WITHOUT_CLASSIFICATION	3.5304486669104137E-6	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999992799716859	WITHOUT_CLASSIFICATION	7.200283140991439E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9996250365433343	WITHOUT_CLASSIFICATION	3.749634566656401E-4	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.999995957421663	WITHOUT_CLASSIFICATION	4.042578336962117E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999996016634113	WITHOUT_CLASSIFICATION	3.9833658871073133E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999982910266781	WITHOUT_CLASSIFICATION	1.7089733219224982E-6	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999989217824546	WITHOUT_CLASSIFICATION	1.0782175454282496E-6	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9998274545852843	WITHOUT_CLASSIFICATION	1.7254541471568887E-4	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999976689269384	WITHOUT_CLASSIFICATION	2.3310730616212656E-6	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999997315473116	WITHOUT_CLASSIFICATION	2.6845268837304184E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.999997067224259	WITHOUT_CLASSIFICATION	2.9327757410532344E-6	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999978927914789	WITHOUT_CLASSIFICATION	2.1072085211311603E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999978772044266	WITHOUT_CLASSIFICATION	2.1227955733582028E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999995572473134	WITHOUT_CLASSIFICATION	4.4275268662749913E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999984923909772	WITHOUT_CLASSIFICATION	1.5076090227826098E-6	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999987558866362	WITHOUT_CLASSIFICATION	1.2441133638154445E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999999780248763	WITHOUT_CLASSIFICATION	2.1975123706659636E-8	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999972789563432	WITHOUT_CLASSIFICATION	2.721043656810505E-6	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999998823409634	WITHOUT_CLASSIFICATION	1.1765903672694966E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999919983220038	WITHOUT_CLASSIFICATION	8.001677996255306E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999998134172338	WITHOUT_CLASSIFICATION	1.8658276623776752E-7	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.999986003879569	WITHOUT_CLASSIFICATION	1.399612043095307E-5	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999968859636686	WITHOUT_CLASSIFICATION	3.1140363313025012E-6	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999971701652293	WITHOUT_CLASSIFICATION	2.8298347707183167E-6	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.999999750324468	WITHOUT_CLASSIFICATION	2.49675532041224E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999997862748552	WITHOUT_CLASSIFICATION	2.1372514483029373E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999002414182	WITHOUT_CLASSIFICATION	9.975858194307239E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999992749853112	WITHOUT_CLASSIFICATION	7.250146888074065E-7	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999829923986885	WITHOUT_CLASSIFICATION	1.700760131154513E-5	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999997712806553	WITHOUT_CLASSIFICATION	2.2871934457473078E-7	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999967306332559	WITHOUT_CLASSIFICATION	3.2693667440352925E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999175879489	WITHOUT_CLASSIFICATION	8.241205103638983E-8	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999824105734235	WITHOUT_CLASSIFICATION	1.7589426576551213E-5	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998912517574677	WITHOUT_CLASSIFICATION	1.0874824253235951E-4	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999976960442843	WITHOUT_CLASSIFICATION	2.3039557156378826E-6	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999984047507875	WITHOUT_CLASSIFICATION	1.5952492125817606E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999868185926744	WITHOUT_CLASSIFICATION	1.3181407325630117E-5	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999658767534213	WITHOUT_CLASSIFICATION	3.412324657861735E-5	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999391896801113	WITHOUT_CLASSIFICATION	6.0810319888646675E-5	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999902902371184	WITHOUT_CLASSIFICATION	9.709762881558706E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9999158786371312	WITHOUT_CLASSIFICATION	8.41213628689334E-5	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999455384219333	WITHOUT_CLASSIFICATION	5.44615780666589E-5	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9999961586835787	WITHOUT_CLASSIFICATION	3.841316421257345E-6	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999989933609551	WITHOUT_CLASSIFICATION	1.0066390448824605E-6	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999989994824112	WITHOUT_CLASSIFICATION	1.0005175887902737E-6	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999994759195524	WITHOUT_CLASSIFICATION	5.240804475736579E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999970982694708	WITHOUT_CLASSIFICATION	2.9017305293289213E-6	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999885256972904	WITHOUT_CLASSIFICATION	1.1474302709684517E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999947958935528	WITHOUT_CLASSIFICATION	5.204106447192469E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999927419015827	WITHOUT_CLASSIFICATION	7.258098417241884E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999898670381173	WITHOUT_CLASSIFICATION	1.0132961882713113E-5	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9998934173215801	WITHOUT_CLASSIFICATION	1.0658267841981688E-4	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999979509489737	WITHOUT_CLASSIFICATION	2.049051026237654E-6	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.999897752816944	WITHOUT_CLASSIFICATION	1.0224718305595948E-4	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.99999210639931	WITHOUT_CLASSIFICATION	7.893600689930765E-6	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999957507596997	WITHOUT_CLASSIFICATION	4.249240300374028E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999992749803758	WITHOUT_CLASSIFICATION	7.250196243536934E-7	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.999999510959637	WITHOUT_CLASSIFICATION	4.890403630098286E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999999381503898	WITHOUT_CLASSIFICATION	6.184961022299135E-8	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.999996728680882	WITHOUT_CLASSIFICATION	3.27131911804548E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999950949723359	WITHOUT_CLASSIFICATION	4.905027664209178E-6	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.999995786587849	WITHOUT_CLASSIFICATION	4.2134121509851895E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999807520312018	WITHOUT_CLASSIFICATION	1.9247968798176133E-5	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999920647123595	WITHOUT_CLASSIFICATION	7.93528764052273E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999983778266464	WITHOUT_CLASSIFICATION	1.6221733536515715E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999995076613399	WITHOUT_CLASSIFICATION	4.923386600533808E-7	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999918770842066	WITHOUT_CLASSIFICATION	8.122915793520435E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999985243996085	WITHOUT_CLASSIFICATION	1.4756003915612647E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9999809465501288	WITHOUT_CLASSIFICATION	1.905344987118671E-5	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999998349948622	WITHOUT_CLASSIFICATION	1.6500513774948224E-7	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999829205868906	WITHOUT_CLASSIFICATION	1.707941310936047E-5	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999997612739884	WITHOUT_CLASSIFICATION	2.387260116138391E-7	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999982846684673	WITHOUT_CLASSIFICATION	1.715331532659446E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999997544527318	WITHOUT_CLASSIFICATION	2.455472681832389E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999953103899684	WITHOUT_CLASSIFICATION	4.689610031635407E-6	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.999999405249052	WITHOUT_CLASSIFICATION	5.947509479969149E-7	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999419618640624	WITHOUT_CLASSIFICATION	5.8038135937574256E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999997577748834	WITHOUT_CLASSIFICATION	2.4222511667788956E-7	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999974195300645	WITHOUT_CLASSIFICATION	2.58046993542288E-6	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999235305566956	WITHOUT_CLASSIFICATION	7.646944330446177E-5	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999968610813065	WITHOUT_CLASSIFICATION	3.1389186936593026E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999987525646921	WITHOUT_CLASSIFICATION	1.2474353078690441E-6	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999832953840194	WITHOUT_CLASSIFICATION	1.6704615980562318E-5	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999790773499495	WITHOUT_CLASSIFICATION	2.092265005038655E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999421128466	WITHOUT_CLASSIFICATION	5.788715352574409E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999859009062415	WITHOUT_CLASSIFICATION	1.4099093758415662E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999990359596248	WITHOUT_CLASSIFICATION	9.640403751807223E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997868818016	WITHOUT_CLASSIFICATION	2.1311819838680264E-7	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999990188133461	WITHOUT_CLASSIFICATION	9.811866539730742E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999992238980061	WITHOUT_CLASSIFICATION	7.761019939305194E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999975938737391	WITHOUT_CLASSIFICATION	2.4061262608877766E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999985660208202	WITHOUT_CLASSIFICATION	1.4339791798100974E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999952665300315	WITHOUT_CLASSIFICATION	4.733469968514031E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999981856588706	WITHOUT_CLASSIFICATION	1.814341129525266E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999984903268197	WITHOUT_CLASSIFICATION	1.5096731803078169E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999952665300315	WITHOUT_CLASSIFICATION	4.733469968514031E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999981856588706	WITHOUT_CLASSIFICATION	1.814341129525266E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999910183825236	WITHOUT_CLASSIFICATION	8.981617476478618E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999693150263907	WITHOUT_CLASSIFICATION	3.068497360931084E-5	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999973853913307	WITHOUT_CLASSIFICATION	2.6146086694319727E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999991178239022	WITHOUT_CLASSIFICATION	8.821760979501158E-7	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999980117812616	WITHOUT_CLASSIFICATION	1.988218738420595E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999995447669185	WITHOUT_CLASSIFICATION	4.5523308148334944E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997920828462	WITHOUT_CLASSIFICATION	2.0791715368204956E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999990340542584	WITHOUT_CLASSIFICATION	9.65945741598667E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999564136807	WITHOUT_CLASSIFICATION	4.3586319304711486E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999991818667041	WITHOUT_CLASSIFICATION	8.181332959630526E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999852999754063	WITHOUT_CLASSIFICATION	1.4700024593757598E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997868818016	WITHOUT_CLASSIFICATION	2.1311819838680264E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997868818016	WITHOUT_CLASSIFICATION	2.1311819838680264E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999981856588706	WITHOUT_CLASSIFICATION	1.814341129525266E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999973853913307	WITHOUT_CLASSIFICATION	2.6146086694319727E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999980117812616	WITHOUT_CLASSIFICATION	1.988218738420595E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999788422558193	WITHOUT_CLASSIFICATION	2.1157744180627356E-5	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999989300760372	WITHOUT_CLASSIFICATION	1.069923962773992E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999823028485898	WITHOUT_CLASSIFICATION	1.7697151410106868E-5	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999967305572247	WITHOUT_CLASSIFICATION	3.2694427752147464E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999972273068063	WITHOUT_CLASSIFICATION	2.772693193811416E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999972273068063	WITHOUT_CLASSIFICATION	2.772693193811416E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999943829830295	WITHOUT_CLASSIFICATION	5.6170169704861615E-6	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999972985987089	WITHOUT_CLASSIFICATION	2.701401291197069E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999992681640807	WITHOUT_CLASSIFICATION	7.318359194001417E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999882909030642	WITHOUT_CLASSIFICATION	1.1709096935757104E-5	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999995752096239	WITHOUT_CLASSIFICATION	4.2479037612433016E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999977840459647	WITHOUT_CLASSIFICATION	2.215954035266114E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999957084308281	WITHOUT_CLASSIFICATION	4.291569171859596E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999952665300315	WITHOUT_CLASSIFICATION	4.733469968514031E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999984693225814	WITHOUT_CLASSIFICATION	1.5306774186589432E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999693150263907	WITHOUT_CLASSIFICATION	3.068497360931084E-5	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999995447669185	WITHOUT_CLASSIFICATION	4.5523308148334944E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997920828462	WITHOUT_CLASSIFICATION	2.0791715368204956E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997920828462	WITHOUT_CLASSIFICATION	2.0791715368204956E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999564136807	WITHOUT_CLASSIFICATION	4.3586319304711486E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999991818667041	WITHOUT_CLASSIFICATION	8.181332959630526E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999852999754063	WITHOUT_CLASSIFICATION	1.4700024593757598E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999975465590412	WITHOUT_CLASSIFICATION	2.4534409588477858E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999923084043619	WITHOUT_CLASSIFICATION	7.691595638107808E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999514256007311	WITHOUT_CLASSIFICATION	4.857439926875346E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999987632394897	WITHOUT_CLASSIFICATION	1.2367605104231485E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999977723886797	WITHOUT_CLASSIFICATION	2.2276113203939144E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999973475820785	WITHOUT_CLASSIFICATION	2.652417921659561E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999992812172438	WITHOUT_CLASSIFICATION	7.187827561643544E-7	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999992266181638	WITHOUT_CLASSIFICATION	7.733818362752553E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999967922212462	WITHOUT_CLASSIFICATION	3.207778753918678E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999973853913307	WITHOUT_CLASSIFICATION	2.6146086694319727E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999997920828462	WITHOUT_CLASSIFICATION	2.0791715368204956E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999564136807	WITHOUT_CLASSIFICATION	4.3586319304711486E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.999999564136807	WITHOUT_CLASSIFICATION	4.3586319304711486E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999788422558193	WITHOUT_CLASSIFICATION	2.1157744180627356E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999943829830295	WITHOUT_CLASSIFICATION	5.6170169704861615E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999943829830295	WITHOUT_CLASSIFICATION	5.6170169704861615E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999992681640807	WITHOUT_CLASSIFICATION	7.318359194001417E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999971053656144	WITHOUT_CLASSIFICATION	2.894634385566803E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999918340799698	WITHOUT_CLASSIFICATION	8.165920030263395E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.999985783073377	WITHOUT_CLASSIFICATION	1.4216926622885221E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999962760876439	WITHOUT_CLASSIFICATION	3.723912356069732E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999992994924073	WITHOUT_CLASSIFICATION	7.005075926762273E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999988002529019	WITHOUT_CLASSIFICATION	1.1997470981736073E-6	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999987459797077	WITHOUT_CLASSIFICATION	1.2540202922535537E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999982860942576	WITHOUT_CLASSIFICATION	1.713905742546747E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999988706406477	WITHOUT_CLASSIFICATION	1.1293593522522274E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999988350387627	WITHOUT_CLASSIFICATION	1.1649612373461326E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999989036670646	WITHOUT_CLASSIFICATION	1.0963329353989471E-5	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999966497875616	WITHOUT_CLASSIFICATION	3.3502124383597164E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999991306264181	WITHOUT_CLASSIFICATION	8.693735819039967E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999633068308059	WITHOUT_CLASSIFICATION	3.669316919403919E-5	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999996597308496	WITHOUT_CLASSIFICATION	3.4026915034777987E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999943983338722	WITHOUT_CLASSIFICATION	5.60166612783768E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999992508341797	WITHOUT_CLASSIFICATION	7.491658203879657E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999987433886424	WITHOUT_CLASSIFICATION	1.2566113576686313E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999981842282516	WITHOUT_CLASSIFICATION	1.8157717483917473E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999998720165932	WITHOUT_CLASSIFICATION	1.2798340672603281E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999922003502855	WITHOUT_CLASSIFICATION	7.799649714503963E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999999419459961	WITHOUT_CLASSIFICATION	5.8054003835164887E-8	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998935498178	WITHOUT_CLASSIFICATION	1.064501822306867E-7	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999998576464076	WITHOUT_CLASSIFICATION	1.4235359241633565E-7	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999903038357905	WITHOUT_CLASSIFICATION	9.696164209526963E-6	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9998968583014548	WITHOUT_CLASSIFICATION	1.0314169854509522E-4	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.999944455391543	WITHOUT_CLASSIFICATION	5.55446084570181E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999799186396732	WITHOUT_CLASSIFICATION	2.0081360326802094E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999892096527866	WITHOUT_CLASSIFICATION	1.0790347213504059E-5	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999992089775963	WITHOUT_CLASSIFICATION	7.910224037525216E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999998573663946	WITHOUT_CLASSIFICATION	1.4263360538034882E-7	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999996960238302	WITHOUT_CLASSIFICATION	3.0397616980791106E-7	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999997636285691	WITHOUT_CLASSIFICATION	2.3637143085275435E-7	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999830999389	WITHOUT_CLASSIFICATION	1.690006115909693E-8	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999991151586569	WITHOUT_CLASSIFICATION	8.84841343081537E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999998551208319	WITHOUT_CLASSIFICATION	1.4487916809772795E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999999641554763	WITHOUT_CLASSIFICATION	3.58445235986282E-8	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999996082437743	WITHOUT_CLASSIFICATION	3.91756225780381E-7	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999996222673734	WITHOUT_CLASSIFICATION	3.777326265896313E-7	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999995857550846	WITHOUT_CLASSIFICATION	4.142449153080207E-7	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999988222123412	WITHOUT_CLASSIFICATION	1.1777876588810755E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999995482567632	WITHOUT_CLASSIFICATION	4.517432368114568E-7	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999433781332	WITHOUT_CLASSIFICATION	5.662186686280264E-8	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999998471959989	WITHOUT_CLASSIFICATION	1.5280400116964294E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999999010264952	WITHOUT_CLASSIFICATION	9.897350486622209E-8	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.999998867181927	WITHOUT_CLASSIFICATION	1.1328180730503826E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9998179828670265	WITHOUT_CLASSIFICATION	1.8201713297355703E-4	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999621029625078	WITHOUT_CLASSIFICATION	3.789703749212345E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999828023311502	WITHOUT_CLASSIFICATION	1.7197668849780823E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980159513324	WITHOUT_CLASSIFICATION	1.9840486675571766E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999967021918408	WITHOUT_CLASSIFICATION	3.2978081591456885E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999967469684472	WITHOUT_CLASSIFICATION	3.2530315527292667E-6	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999946772821641	WITHOUT_CLASSIFICATION	5.322717835836788E-6	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999951655007046	WITHOUT_CLASSIFICATION	4.8344992955138954E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999186185842543	WITHOUT_CLASSIFICATION	8.138141574559133E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999186185842543	WITHOUT_CLASSIFICATION	8.138141574559133E-5	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999976675403006	WITHOUT_CLASSIFICATION	2.3324596994643533E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9998948291516656	WITHOUT_CLASSIFICATION	1.0517084833447421E-4	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999866056438245	WITHOUT_CLASSIFICATION	1.3394356175540065E-5	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999957198620123	WITHOUT_CLASSIFICATION	4.28013798770449E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.743217371647148	WITHOUT_CLASSIFICATION	0.25678262835285204	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.999985075490549	WITHOUT_CLASSIFICATION	1.4924509450911183E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9999434157336627	WITHOUT_CLASSIFICATION	5.6584266337192995E-5	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999901344256183	WITHOUT_CLASSIFICATION	9.865574381672734E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999861964740374	WITHOUT_CLASSIFICATION	1.3803525962579708E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999861964740374	WITHOUT_CLASSIFICATION	1.3803525962579708E-5	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999945425533241	WITHOUT_CLASSIFICATION	5.457446675908843E-6	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999857765987608	WITHOUT_CLASSIFICATION	1.4223401239240722E-5	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999898804470876	WITHOUT_CLASSIFICATION	1.0119552912413004E-5	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999981809465217	WITHOUT_CLASSIFICATION	1.8190534782818598E-6	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999927028757427	WITHOUT_CLASSIFICATION	7.297124257263084E-6	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999969520261615	WITHOUT_CLASSIFICATION	3.0479738384697133E-6	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999949733411636	WITHOUT_CLASSIFICATION	5.026658836430635E-6	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999937628307837	WITHOUT_CLASSIFICATION	6.2371692163034295E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999918789273071	WITHOUT_CLASSIFICATION	8.121072692931958E-6	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999927643845344	WITHOUT_CLASSIFICATION	7.235615465621831E-6	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999888343852051	WITHOUT_CLASSIFICATION	1.1165614794923645E-5	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999659340313477	WITHOUT_CLASSIFICATION	3.4065968652178704E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999862620970165	WITHOUT_CLASSIFICATION	1.3737902983499279E-5	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997138597686259	WITHOUT_CLASSIFICATION	2.8614023137401776E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999848946206018	WITHOUT_CLASSIFICATION	1.5105379398174597E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.999998867181927	WITHOUT_CLASSIFICATION	1.1328180730503826E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999186185842543	WITHOUT_CLASSIFICATION	8.138141574559133E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999186185842543	WITHOUT_CLASSIFICATION	8.138141574559133E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9998948291516656	WITHOUT_CLASSIFICATION	1.0517084833447421E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999712728283321	WITHOUT_CLASSIFICATION	2.8727171667862127E-5	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999908127209725	WITHOUT_CLASSIFICATION	9.18727902757957E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.999999004376748	WITHOUT_CLASSIFICATION	9.956232519540354E-7	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999964982041236	WITHOUT_CLASSIFICATION	3.5017958764616147E-6	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999822103211659	WITHOUT_CLASSIFICATION	1.7789678834057632E-5	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999633367498526	WITHOUT_CLASSIFICATION	3.666325014737649E-5	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999799877365761	WITHOUT_CLASSIFICATION	2.0012263423844144E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999861030364221	WITHOUT_CLASSIFICATION	1.3896963577926751E-5	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9996873872211998	WITHOUT_CLASSIFICATION	3.1261277880029447E-4	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999998286039563	WITHOUT_CLASSIFICATION	1.7139604378065866E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999927944014299	WITHOUT_CLASSIFICATION	7.2055985700802E-6	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999996346703153	WITHOUT_CLASSIFICATION	3.653296846951918E-7	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999937286446003	WITHOUT_CLASSIFICATION	6.27135539963164E-6	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999919029001906	WITHOUT_CLASSIFICATION	8.097099809371294E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999944257754663	WITHOUT_CLASSIFICATION	5.574224533759952E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999511332097838	WITHOUT_CLASSIFICATION	4.886679021622745E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999968145657747	WITHOUT_CLASSIFICATION	3.1854342253559122E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999983352192903	WITHOUT_CLASSIFICATION	1.6647807096281416E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999839009841	WITHOUT_CLASSIFICATION	1.609901590897861E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999993807343556	WITHOUT_CLASSIFICATION	6.19265644430232E-7	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999402748725419	WITHOUT_CLASSIFICATION	5.9725127458054156E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999982277558828	WITHOUT_CLASSIFICATION	1.7722441171815441E-6	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999995950788422	WITHOUT_CLASSIFICATION	4.049211577762287E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999833284928641	WITHOUT_CLASSIFICATION	1.6671507135861622E-5	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999997989525906	WITHOUT_CLASSIFICATION	2.0104740945313506E-7	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999985700983308	WITHOUT_CLASSIFICATION	1.4299016691624538E-6	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999996677212318	WITHOUT_CLASSIFICATION	3.3227876826616553E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9998527469436337	WITHOUT_CLASSIFICATION	1.4725305636628064E-4	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999850458329776	WITHOUT_CLASSIFICATION	1.4954167022205814E-5	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998727727344038	WITHOUT_CLASSIFICATION	1.272272655962298E-4	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999730195007632	WITHOUT_CLASSIFICATION	2.698049923665441E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998263505992305	WITHOUT_CLASSIFICATION	1.7364940076955074E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999925034429908	WITHOUT_CLASSIFICATION	7.496557009209581E-6	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999985701370238	WITHOUT_CLASSIFICATION	1.4298629761952873E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999983293244787	WITHOUT_CLASSIFICATION	1.6706755213133084E-6	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999996437566127	WITHOUT_CLASSIFICATION	3.562433873055192E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999985633900212	WITHOUT_CLASSIFICATION	1.4366099787984077E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.999999773015049	WITHOUT_CLASSIFICATION	2.269849509693418E-7	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999311483007174	WITHOUT_CLASSIFICATION	6.885169928253529E-5	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999983903106997	WITHOUT_CLASSIFICATION	1.6096893003594087E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999990143591813	WITHOUT_CLASSIFICATION	9.856408188142561E-7	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999817869295045	WITHOUT_CLASSIFICATION	1.8213070495524325E-5	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999903128269997	WITHOUT_CLASSIFICATION	9.687173000339129E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9999997078096478	WITHOUT_CLASSIFICATION	2.9219035234011854E-7	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999961428358817	WITHOUT_CLASSIFICATION	3.857164118324952E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999761698973139	WITHOUT_CLASSIFICATION	2.3830102686190355E-5	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999938230483679	WITHOUT_CLASSIFICATION	6.176951632123591E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999986930673657	WITHOUT_CLASSIFICATION	1.3069326343151976E-6	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999988793710711	WITHOUT_CLASSIFICATION	1.1206289289140833E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999975335012976	WITHOUT_CLASSIFICATION	2.4664987022718283E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999946789444838	WITHOUT_CLASSIFICATION	5.321055516140566E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999970451950378	WITHOUT_CLASSIFICATION	2.954804962104957E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999984231904615	WITHOUT_CLASSIFICATION	1.5768095384479347E-6	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999980249238068	WITHOUT_CLASSIFICATION	1.9750761931726913E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999968180144312	WITHOUT_CLASSIFICATION	3.181985568795928E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.999997765845682	WITHOUT_CLASSIFICATION	2.2341543180612704E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999136968998	WITHOUT_CLASSIFICATION	8.630310020446194E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999958473171804	WITHOUT_CLASSIFICATION	4.1526828195984064E-6	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999985898110448	WITHOUT_CLASSIFICATION	1.410188955091304E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999970688864173	WITHOUT_CLASSIFICATION	2.9311135827729893E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999970688864173	WITHOUT_CLASSIFICATION	2.9311135827729893E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999926753263745	WITHOUT_CLASSIFICATION	7.324673625516678E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999926753263745	WITHOUT_CLASSIFICATION	7.324673625516678E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999981666436502	WITHOUT_CLASSIFICATION	1.8333563497972027E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999981666436502	WITHOUT_CLASSIFICATION	1.8333563497972027E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999860408227479	WITHOUT_CLASSIFICATION	1.395917725205416E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999845685648174	WITHOUT_CLASSIFICATION	1.543143518258204E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999845685648174	WITHOUT_CLASSIFICATION	1.543143518258204E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999893662639631	WITHOUT_CLASSIFICATION	1.0633736037040678E-5	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999967577853451	WITHOUT_CLASSIFICATION	3.2422146549328027E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999512700177485	WITHOUT_CLASSIFICATION	4.872998225144903E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999512700177485	WITHOUT_CLASSIFICATION	4.872998225144903E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999922591847574	WITHOUT_CLASSIFICATION	7.740815242590216E-6	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999902616704714	WITHOUT_CLASSIFICATION	9.738329528476474E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999845685648174	WITHOUT_CLASSIFICATION	1.543143518258204E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999512700177485	WITHOUT_CLASSIFICATION	4.872998225144903E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999965993525441	WITHOUT_CLASSIFICATION	3.4006474557647017E-6	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999819416156274	WITHOUT_CLASSIFICATION	1.805838437258504E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998120587498047	WITHOUT_CLASSIFICATION	1.879412501951895E-4	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999998964684914	WITHOUT_CLASSIFICATION	1.0353150861523719E-7	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999936138596924	WITHOUT_CLASSIFICATION	6.386140307531604E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999998626584801	WITHOUT_CLASSIFICATION	1.3734151995006814E-7	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999991075009915	WITHOUT_CLASSIFICATION	8.924990086237145E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999976808458023	WITHOUT_CLASSIFICATION	2.3191541976845423E-6	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999963229076783	WITHOUT_CLASSIFICATION	3.677092321687454E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999817649995935	WITHOUT_CLASSIFICATION	1.8235000406597415E-5	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999947277520291	WITHOUT_CLASSIFICATION	5.272247970825078E-6	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999984332558336	WITHOUT_CLASSIFICATION	1.5667441663539019E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999979515924914	WITHOUT_CLASSIFICATION	2.0484075086069985E-6	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999982880427774	WITHOUT_CLASSIFICATION	1.7119572227532299E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999983343195759	WITHOUT_CLASSIFICATION	1.6656804241734636E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999982463222986	WITHOUT_CLASSIFICATION	1.753677701366309E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999989035365365	WITHOUT_CLASSIFICATION	1.0964634634779355E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9999589991010851	WITHOUT_CLASSIFICATION	4.1000898914969994E-5	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999996194612117	WITHOUT_CLASSIFICATION	3.805387883217071E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999964217677759	WITHOUT_CLASSIFICATION	3.5782322240527844E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999991677816334	WITHOUT_CLASSIFICATION	8.322183665176598E-7	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999921993480864	WITHOUT_CLASSIFICATION	7.800651913571035E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999924994109585	WITHOUT_CLASSIFICATION	7.500589041529569E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999986850135627	WITHOUT_CLASSIFICATION	1.314986437319698E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.999999122166303	WITHOUT_CLASSIFICATION	8.778336970737618E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999982959986261	WITHOUT_CLASSIFICATION	1.7040013739473258E-6	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999987632746976	WITHOUT_CLASSIFICATION	1.236725302430996E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999980765563299	WITHOUT_CLASSIFICATION	1.9234436700824475E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999954580591717	WITHOUT_CLASSIFICATION	4.541940828430785E-6	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999906662593668	WITHOUT_CLASSIFICATION	9.333740633174343E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998120587498047	WITHOUT_CLASSIFICATION	1.879412501951895E-4	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999979836877226	WITHOUT_CLASSIFICATION	2.016312277369131E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999983343195759	WITHOUT_CLASSIFICATION	1.6656804241734636E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999999584945554	WITHOUT_CLASSIFICATION	4.150544455576437E-8	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999986850135627	WITHOUT_CLASSIFICATION	1.314986437319698E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999996957137812	WITHOUT_CLASSIFICATION	3.0428621876348905E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999997365709159	WITHOUT_CLASSIFICATION	2.634290840652562E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999966505717429	WITHOUT_CLASSIFICATION	3.3494282571442565E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999761710928109	WITHOUT_CLASSIFICATION	2.3828907189065357E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999761710928109	WITHOUT_CLASSIFICATION	2.3828907189065357E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999463353118053	WITHOUT_CLASSIFICATION	5.366468819475593E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999999290149498	WITHOUT_CLASSIFICATION	7.098505019285869E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999997212108509	WITHOUT_CLASSIFICATION	2.7878914903474874E-7	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999977322520557	WITHOUT_CLASSIFICATION	2.2677479443002695E-6	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999989229034784	WITHOUT_CLASSIFICATION	1.0770965215673785E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999993350095754	WITHOUT_CLASSIFICATION	6.649904246013978E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999973623600426	WITHOUT_CLASSIFICATION	2.6376399573417362E-6	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999995300009002	WITHOUT_CLASSIFICATION	4.699990997203842E-7	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999978808789497	WITHOUT_CLASSIFICATION	2.1191210503143006E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999969644057874	WITHOUT_CLASSIFICATION	3.0355942125169048E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999933430101736	WITHOUT_CLASSIFICATION	6.656989826428732E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999854633195105	WITHOUT_CLASSIFICATION	1.4536680489476027E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.999991380190058	WITHOUT_CLASSIFICATION	8.619809942123422E-6	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999991771002652	WITHOUT_CLASSIFICATION	8.228997349104414E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999973578507068	WITHOUT_CLASSIFICATION	2.64214929321225E-6	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999845241487393	WITHOUT_CLASSIFICATION	1.5475851260718582E-5	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999967504350802	WITHOUT_CLASSIFICATION	3.2495649197508774E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999962213253858	WITHOUT_CLASSIFICATION	3.778674614291077E-6	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999999615358035	WITHOUT_CLASSIFICATION	3.846419646125738E-8	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999912318841124	WITHOUT_CLASSIFICATION	8.768115887599633E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999986442080007	WITHOUT_CLASSIFICATION	1.355791999394107E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999999312527222	WITHOUT_CLASSIFICATION	6.87472777603398E-8	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999929334254779	WITHOUT_CLASSIFICATION	7.0665745220797184E-6	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.999999756156744	WITHOUT_CLASSIFICATION	2.4384325612550344E-7	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999700956334	WITHOUT_CLASSIFICATION	2.990436664864046E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999998598222659	WITHOUT_CLASSIFICATION	1.4017773406169572E-7	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999993679670971	WITHOUT_CLASSIFICATION	6.320329029684658E-7	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999995260198209	WITHOUT_CLASSIFICATION	4.739801791404983E-7	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999996004089724	WITHOUT_CLASSIFICATION	3.9959102761971515E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999962946448527	WITHOUT_CLASSIFICATION	3.7053551472719685E-6	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999997472660423	WITHOUT_CLASSIFICATION	2.5273395770052E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.999999497171558	WITHOUT_CLASSIFICATION	5.028284418962153E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999971118821962	WITHOUT_CLASSIFICATION	2.8881178038178914E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999795093977715	WITHOUT_CLASSIFICATION	2.0490602228520028E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999938854958486	WITHOUT_CLASSIFICATION	6.114504151497735E-6	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999995935783605	WITHOUT_CLASSIFICATION	4.064216394286544E-7	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999984591621173	WITHOUT_CLASSIFICATION	1.540837882843478E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999977381964847	WITHOUT_CLASSIFICATION	2.2618035153127722E-6	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999997106311979	WITHOUT_CLASSIFICATION	2.893688020846418E-7	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999931713234065	WITHOUT_CLASSIFICATION	6.828676593514554E-6	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999989885282486	WITHOUT_CLASSIFICATION	1.011471751277587E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999987511640127	WITHOUT_CLASSIFICATION	1.2488359872224027E-6	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.999999946700776	WITHOUT_CLASSIFICATION	5.3299223996892526E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.999994031278863	WITHOUT_CLASSIFICATION	5.968721137032009E-6	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999995140968095	WITHOUT_CLASSIFICATION	4.859031904623735E-7	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999999508264423	WITHOUT_CLASSIFICATION	4.9173557729765956E-8	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999712215091088	WITHOUT_CLASSIFICATION	2.8778490891255197E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999925811149667	WITHOUT_CLASSIFICATION	7.418885033308178E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999981666436502	WITHOUT_CLASSIFICATION	1.8333563497972027E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9998456269922984	WITHOUT_CLASSIFICATION	1.5437300770168187E-4	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999988759093287	WITHOUT_CLASSIFICATION	1.1240906712323118E-6	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999996080623921	WITHOUT_CLASSIFICATION	3.9193760787326805E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999927174771143	WITHOUT_CLASSIFICATION	7.282522885657081E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.999999410676156	WITHOUT_CLASSIFICATION	5.893238439813354E-7	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999957817365532	WITHOUT_CLASSIFICATION	4.218263446716014E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999998212090052	WITHOUT_CLASSIFICATION	1.7879099479814827E-7	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999999077506715	WITHOUT_CLASSIFICATION	9.224932855558782E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999970920762197	WITHOUT_CLASSIFICATION	2.9079237803803877E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999912887431682	WITHOUT_CLASSIFICATION	8.711256831872838E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999978529639401	WITHOUT_CLASSIFICATION	2.147036060015687E-6	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.999998454856902	WITHOUT_CLASSIFICATION	1.5451430981007538E-6	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999339538559033	WITHOUT_CLASSIFICATION	6.604614409667704E-5	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999515679415457	WITHOUT_CLASSIFICATION	4.843205845425492E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999926373347046	WITHOUT_CLASSIFICATION	7.362665295365634E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999917431434279	WITHOUT_CLASSIFICATION	8.256856572040487E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999991945684213	WITHOUT_CLASSIFICATION	8.054315785810789E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999973554989765	WITHOUT_CLASSIFICATION	2.6445010235925206E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999992165226779	WITHOUT_CLASSIFICATION	7.83477322056173E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999989378255177	WITHOUT_CLASSIFICATION	1.0621744823573718E-6	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999929810318767	WITHOUT_CLASSIFICATION	7.018968123289956E-6	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999877756932871	WITHOUT_CLASSIFICATION	1.2224306712975967E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999994716514921	WITHOUT_CLASSIFICATION	5.283485080084923E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999982146171413	WITHOUT_CLASSIFICATION	1.785382858691409E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999991930327607	WITHOUT_CLASSIFICATION	8.069672392182761E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975766677808	WITHOUT_CLASSIFICATION	2.423332219236491E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.999999950179426	WITHOUT_CLASSIFICATION	4.9820574069800554E-8	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999992045574253	WITHOUT_CLASSIFICATION	7.954425745589648E-7	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999998551866939	WITHOUT_CLASSIFICATION	1.4481330607214454E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999892658841225	WITHOUT_CLASSIFICATION	1.073411587751986E-5	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999833284928641	WITHOUT_CLASSIFICATION	1.6671507135861622E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999981666436502	WITHOUT_CLASSIFICATION	1.8333563497972027E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999860408227479	WITHOUT_CLASSIFICATION	1.395917725205416E-5	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999962213253858	WITHOUT_CLASSIFICATION	3.778674614291077E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999996558239228	WITHOUT_CLASSIFICATION	3.4417607726241897E-7	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9998456269922984	WITHOUT_CLASSIFICATION	1.5437300770168187E-4	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.999999590624111	WITHOUT_CLASSIFICATION	4.093758889380984E-7	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999994483016417	WITHOUT_CLASSIFICATION	5.516983583168915E-7	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999867981943336	WITHOUT_CLASSIFICATION	1.3201805666404039E-5	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999460906964933	WITHOUT_CLASSIFICATION	5.390930350662451E-5	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999896862476717	WITHOUT_CLASSIFICATION	1.0313752328425988E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999971622043449	WITHOUT_CLASSIFICATION	2.8377956551831575E-6	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999949050791997	WITHOUT_CLASSIFICATION	5.094920800245564E-6	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999849506004775	WITHOUT_CLASSIFICATION	1.5049399522514924E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999990632234323	WITHOUT_CLASSIFICATION	9.367765676596638E-7	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999928232903854	WITHOUT_CLASSIFICATION	7.176709614686694E-6	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999727361754212	WITHOUT_CLASSIFICATION	2.726382457889586E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999925656648009	WITHOUT_CLASSIFICATION	7.4343351990625165E-6	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9998066553392401	WITHOUT_CLASSIFICATION	1.933446607599959E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999983609603571	WITHOUT_CLASSIFICATION	1.639039642977937E-6	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999262372926742	WITHOUT_CLASSIFICATION	7.37627073258453E-5	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999940490835207	WITHOUT_CLASSIFICATION	5.950916479341578E-6	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999818913142078	WITHOUT_CLASSIFICATION	1.8108685792227965E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999635568118383	WITHOUT_CLASSIFICATION	3.6443188161766594E-5	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999950119423919	WITHOUT_CLASSIFICATION	4.988057608052705E-6	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999503621572551	WITHOUT_CLASSIFICATION	4.9637842744924314E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999561815256636	WITHOUT_CLASSIFICATION	4.38184743365508E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999870978055195	WITHOUT_CLASSIFICATION	1.2902194480499546E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999972910910955	WITHOUT_CLASSIFICATION	2.7089089044723027E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999907995383857	WITHOUT_CLASSIFICATION	9.200461614268718E-6	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999996506405967	WITHOUT_CLASSIFICATION	3.493594032957656E-7	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999978810753926	WITHOUT_CLASSIFICATION	2.118924607510475E-6	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999973000164133	WITHOUT_CLASSIFICATION	2.6999835866712494E-6	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999971878309073	WITHOUT_CLASSIFICATION	2.8121690926904264E-6	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999964452244504	WITHOUT_CLASSIFICATION	3.554775549509754E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999984017253256	WITHOUT_CLASSIFICATION	1.5982746743660087E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999965061903255	WITHOUT_CLASSIFICATION	3.4938096745907357E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999981666436502	WITHOUT_CLASSIFICATION	1.8333563497972027E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999912887431682	WITHOUT_CLASSIFICATION	8.711256831872838E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999978529639401	WITHOUT_CLASSIFICATION	2.147036060015687E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999917431434279	WITHOUT_CLASSIFICATION	8.256856572040487E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999991945684213	WITHOUT_CLASSIFICATION	8.054315785810789E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999973554989765	WITHOUT_CLASSIFICATION	2.6445010235925206E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999992165226779	WITHOUT_CLASSIFICATION	7.83477322056173E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999989378255177	WITHOUT_CLASSIFICATION	1.0621744823573718E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999996303856397	WITHOUT_CLASSIFICATION	3.6961436034926527E-7	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999994716514921	WITHOUT_CLASSIFICATION	5.283485080084923E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999997310495471	WITHOUT_CLASSIFICATION	2.6895045287304515E-7	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9993180638061935	WITHOUT_CLASSIFICATION	6.819361938064417E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999964237880158	WITHOUT_CLASSIFICATION	3.5762119842280683E-6	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999999883760989	WITHOUT_CLASSIFICATION	1.1623900946446132E-8	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999963840855	WITHOUT_CLASSIFICATION	3.615914411039698E-9	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999991796830309	WITHOUT_CLASSIFICATION	8.203169691919152E-7	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999991118041357	WITHOUT_CLASSIFICATION	8.881958643634763E-7	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999720220790111	WITHOUT_CLASSIFICATION	2.7977920988918477E-5	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999863352066645	WITHOUT_CLASSIFICATION	1.3664793335645963E-5	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999889659635387	WITHOUT_CLASSIFICATION	1.1034036461276764E-5	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999927129333515	WITHOUT_CLASSIFICATION	7.287066648502896E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999993510212081	WITHOUT_CLASSIFICATION	6.489787919379942E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999937443818123	WITHOUT_CLASSIFICATION	6.255618187723128E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999994187054492	WITHOUT_CLASSIFICATION	5.812945508377899E-7	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999984443474751	WITHOUT_CLASSIFICATION	1.555652524902374E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999984443474751	WITHOUT_CLASSIFICATION	1.555652524902374E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999993377838284	WITHOUT_CLASSIFICATION	6.622161717057666E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999993549648837	WITHOUT_CLASSIFICATION	6.450351162673117E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999993549648837	WITHOUT_CLASSIFICATION	6.450351162673117E-7	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999628561140691	WITHOUT_CLASSIFICATION	3.714388593087821E-5	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999643733600043	WITHOUT_CLASSIFICATION	3.56266399955763E-5	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999978523857797	WITHOUT_CLASSIFICATION	2.1476142203422097E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999965061903255	WITHOUT_CLASSIFICATION	3.4938096745907357E-6	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999439087022121	WITHOUT_CLASSIFICATION	5.609129778801049E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999353845554739	WITHOUT_CLASSIFICATION	6.46154445260313E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996745426958	WITHOUT_CLASSIFICATION	3.254573041836244E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999994615160245	WITHOUT_CLASSIFICATION	5.384839754202236E-7	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999108310859334	WITHOUT_CLASSIFICATION	8.916891406669284E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.999954632410061	WITHOUT_CLASSIFICATION	4.536758993896271E-5	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999811649033733	WITHOUT_CLASSIFICATION	1.883509662668614E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999762824573779	WITHOUT_CLASSIFICATION	2.3717542622098926E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999826775354327	WITHOUT_CLASSIFICATION	1.7322464567333158E-5	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999974533837361	WITHOUT_CLASSIFICATION	2.5466162638746146E-6	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9998362771612019	WITHOUT_CLASSIFICATION	1.637228387981059E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999941265836878	WITHOUT_CLASSIFICATION	5.873416312137133E-6	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9996819242357605	WITHOUT_CLASSIFICATION	3.1807576423939477E-4	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999876490079176	WITHOUT_CLASSIFICATION	1.2350992082306605E-5	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999962031872673	WITHOUT_CLASSIFICATION	3.7968127327415357E-6	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999997623824015	WITHOUT_CLASSIFICATION	2.3761759834371043E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999859042831455	WITHOUT_CLASSIFICATION	1.4095716854569148E-5	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999939544619834	WITHOUT_CLASSIFICATION	6.04553801672318E-6	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999974447729182	WITHOUT_CLASSIFICATION	2.5552270817550007E-6	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999986512075887	WITHOUT_CLASSIFICATION	1.3487924113416736E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.999999697502164	WITHOUT_CLASSIFICATION	3.024978360140813E-7	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.999998666352384	WITHOUT_CLASSIFICATION	1.3336476160360374E-6	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999980044666891	WITHOUT_CLASSIFICATION	1.995533310848573E-6	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999998190736894	WITHOUT_CLASSIFICATION	1.8092631055785836E-7	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999967134790482	WITHOUT_CLASSIFICATION	3.2865209518365565E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999983497195952	WITHOUT_CLASSIFICATION	1.6502804046841366E-6	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999979953936748	WITHOUT_CLASSIFICATION	2.004606325181146E-6	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9998982145283136	WITHOUT_CLASSIFICATION	1.0178547168631417E-4	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.999994350969961	WITHOUT_CLASSIFICATION	5.649030039054629E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999995608738874	WITHOUT_CLASSIFICATION	4.3912611260799175E-7	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999998407143593	WITHOUT_CLASSIFICATION	1.5928564079421187E-7	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.999999834645328	WITHOUT_CLASSIFICATION	1.6535467194451997E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999998429920984	WITHOUT_CLASSIFICATION	1.5700790159780537E-6	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999993852972051	WITHOUT_CLASSIFICATION	6.147027948191663E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999035917405	WITHOUT_CLASSIFICATION	9.640825952543727E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999706594070049	WITHOUT_CLASSIFICATION	2.9340592995007285E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999780143749427	WITHOUT_CLASSIFICATION	2.198562505722273E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999998429920984	WITHOUT_CLASSIFICATION	1.5700790159780537E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999949519079872	WITHOUT_CLASSIFICATION	5.048092012936911E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999994996003906	WITHOUT_CLASSIFICATION	5.003996094286528E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999994996003906	WITHOUT_CLASSIFICATION	5.003996094286528E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999994996003906	WITHOUT_CLASSIFICATION	5.003996094286528E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999994141087479	WITHOUT_CLASSIFICATION	5.858912521416557E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999994141087479	WITHOUT_CLASSIFICATION	5.858912521416557E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999994141087479	WITHOUT_CLASSIFICATION	5.858912521416557E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999981371388577	WITHOUT_CLASSIFICATION	1.8628611423443577E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999981371388577	WITHOUT_CLASSIFICATION	1.8628611423443577E-6	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999999012855963	WITHOUT_CLASSIFICATION	9.871440364546392E-8	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999814497054386	WITHOUT_CLASSIFICATION	1.8550294561479822E-5	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999998016937945	WITHOUT_CLASSIFICATION	1.9830620551101956E-7	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999840611928665	WITHOUT_CLASSIFICATION	1.5938807133493012E-5	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999998099371876	WITHOUT_CLASSIFICATION	1.9006281241896775E-7	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999941908644013	WITHOUT_CLASSIFICATION	5.809135598637443E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999878101839152	WITHOUT_CLASSIFICATION	1.2189816084692902E-5	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999998728364297	WITHOUT_CLASSIFICATION	1.2716357038441422E-7	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999881860666572	WITHOUT_CLASSIFICATION	1.1813933342899412E-5	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999943911010145	WITHOUT_CLASSIFICATION	5.608898985474822E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.999996544263022	WITHOUT_CLASSIFICATION	3.4557369779195178E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999991940461026	WITHOUT_CLASSIFICATION	8.059538973450856E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999990319945031	WITHOUT_CLASSIFICATION	9.680054968607141E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999414884724651	WITHOUT_CLASSIFICATION	5.8511527534791454E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999799186396732	WITHOUT_CLASSIFICATION	2.0081360326802094E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998613699697667	WITHOUT_CLASSIFICATION	1.3863003023333812E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999975486312255	WITHOUT_CLASSIFICATION	2.451368774546235E-6	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999957135552834	WITHOUT_CLASSIFICATION	4.2864447167055075E-6	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999994903157864	WITHOUT_CLASSIFICATION	5.096842135233601E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999980262266663	WITHOUT_CLASSIFICATION	1.9737733336236587E-6	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999972722254771	WITHOUT_CLASSIFICATION	2.727774522942406E-6	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999984902818009	WITHOUT_CLASSIFICATION	1.5097181991650325E-6	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999531304706998	WITHOUT_CLASSIFICATION	4.6869529300286267E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.999979020310231	WITHOUT_CLASSIFICATION	2.0979689768952683E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999996259430782	WITHOUT_CLASSIFICATION	3.7405692175726016E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999991540044041	WITHOUT_CLASSIFICATION	8.459955958122847E-7	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999716170412712	WITHOUT_CLASSIFICATION	2.838295872869004E-5	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999691667118181	WITHOUT_CLASSIFICATION	3.083328818185275E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999966108036974	WITHOUT_CLASSIFICATION	3.3891963025972027E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999528187734527	WITHOUT_CLASSIFICATION	4.718122654736601E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999927860099	WITHOUT_CLASSIFICATION	7.213990099947989E-6	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999991100967236	WITHOUT_CLASSIFICATION	8.8990327644699E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9998955333797103	WITHOUT_CLASSIFICATION	1.0446662028966043E-4	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999667711656758	WITHOUT_CLASSIFICATION	3.3228834324306245E-5	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999748529170577	WITHOUT_CLASSIFICATION	2.514708294228712E-5	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9974706160204813	WITHOUT_CLASSIFICATION	0.0025293839795187665	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999528187734527	WITHOUT_CLASSIFICATION	4.718122654736601E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999833062267577	WITHOUT_CLASSIFICATION	1.669377324234341E-5	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999875474487941	WITHOUT_CLASSIFICATION	1.2452551205841135E-5	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999903657743626	WITHOUT_CLASSIFICATION	9.63422563740138E-6	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999991025948642	WITHOUT_CLASSIFICATION	8.974051357128793E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999873911285977	WITHOUT_CLASSIFICATION	1.2608871402219508E-5	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999985803143729	WITHOUT_CLASSIFICATION	1.4196856270701807E-6	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999988121383111	WITHOUT_CLASSIFICATION	1.187861688981378E-6	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.999962770793241	WITHOUT_CLASSIFICATION	3.7229206758947534E-5	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.999976209053438	WITHOUT_CLASSIFICATION	2.3790946562015792E-5	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999988475822081	WITHOUT_CLASSIFICATION	1.1524177918378253E-6	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9981111400220107	WITHOUT_CLASSIFICATION	0.0018888599779892292	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999792174053294	WITHOUT_CLASSIFICATION	2.0782594670629903E-5	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999991742334069	WITHOUT_CLASSIFICATION	8.257665931383355E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999833062267577	WITHOUT_CLASSIFICATION	1.669377324234341E-5	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9998723503446177	WITHOUT_CLASSIFICATION	1.276496553822287E-4	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999709243785584	WITHOUT_CLASSIFICATION	2.9075621441671338E-5	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999754406563206	WITHOUT_CLASSIFICATION	2.4559343679396418E-5	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9999963402468092	WITHOUT_CLASSIFICATION	3.6597531909400434E-6	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999661731729154	WITHOUT_CLASSIFICATION	3.3826827084703254E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999997913346184	WITHOUT_CLASSIFICATION	2.0866538160260167E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999862620970165	WITHOUT_CLASSIFICATION	1.3737902983499279E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999849907429256	WITHOUT_CLASSIFICATION	1.5009257074492878E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999997430343102	WITHOUT_CLASSIFICATION	2.5696568986914155E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999987764937229	WITHOUT_CLASSIFICATION	1.2235062770888311E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999979003812507	WITHOUT_CLASSIFICATION	2.0996187493549258E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999984923909772	WITHOUT_CLASSIFICATION	1.5076090227826098E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999985849596797	WITHOUT_CLASSIFICATION	1.4150403203007324E-6	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999937650028851	WITHOUT_CLASSIFICATION	6.234997114944614E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999899506251179	WITHOUT_CLASSIFICATION	1.0049374882197216E-5	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999985755162506	WITHOUT_CLASSIFICATION	1.4244837494706715E-6	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999930635592045	WITHOUT_CLASSIFICATION	6.936440795552807E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999966064052288	WITHOUT_CLASSIFICATION	3.393594771183748E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9985998125630996	WITHOUT_CLASSIFICATION	0.001400187436900437	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.999994475408579	WITHOUT_CLASSIFICATION	5.524591421036171E-6	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999978456098856	WITHOUT_CLASSIFICATION	2.1543901144242885E-6	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999964271599093	WITHOUT_CLASSIFICATION	3.5728400906185537E-6	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999988180386612	WITHOUT_CLASSIFICATION	1.1819613388236515E-6	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.999997942449323	WITHOUT_CLASSIFICATION	2.0575506770337514E-6	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999547525236373	WITHOUT_CLASSIFICATION	4.5247476362713824E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999998337011657	WITHOUT_CLASSIFICATION	1.6629883419788183E-7	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9999897636084125	WITHOUT_CLASSIFICATION	1.0236391587481947E-5	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999908889063108	WITHOUT_CLASSIFICATION	9.111093689216144E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999660090059167	WITHOUT_CLASSIFICATION	3.3990994083297095E-5	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999997242014456	WITHOUT_CLASSIFICATION	2.757985544634214E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999982703049709	WITHOUT_CLASSIFICATION	1.7296950291197154E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999990176072451	WITHOUT_CLASSIFICATION	9.823927549482727E-7	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.999999450937782	WITHOUT_CLASSIFICATION	5.490622180574099E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999970122140783	WITHOUT_CLASSIFICATION	2.9877859216015646E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999981012779233	WITHOUT_CLASSIFICATION	1.8987220765913719E-6	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999960209608492	WITHOUT_CLASSIFICATION	3.97903915079484E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999982703049709	WITHOUT_CLASSIFICATION	1.7296950291197154E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999992326195248	WITHOUT_CLASSIFICATION	7.673804752477985E-7	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999946532515869	WITHOUT_CLASSIFICATION	5.346748413155044E-6	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999943167703199	WITHOUT_CLASSIFICATION	5.683229680170267E-6	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999949187937561	WITHOUT_CLASSIFICATION	5.081206243886656E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999967808242144	WITHOUT_CLASSIFICATION	3.2191757855384243E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999987411821183	WITHOUT_CLASSIFICATION	1.2588178816851305E-6	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999947199368054	WITHOUT_CLASSIFICATION	5.280063194601947E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9997940816391997	WITHOUT_CLASSIFICATION	2.0591836080040429E-4	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999970442069911	WITHOUT_CLASSIFICATION	2.9557930088118978E-6	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.999997987626977	WITHOUT_CLASSIFICATION	2.0123730230256817E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999972634598723	WITHOUT_CLASSIFICATION	2.7365401277525603E-6	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999844146815877	WITHOUT_CLASSIFICATION	1.558531841228062E-5	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999975863675723	WITHOUT_CLASSIFICATION	2.4136324276248614E-6	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999708071495	WITHOUT_CLASSIFICATION	2.9192850554178182E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999839083544697	WITHOUT_CLASSIFICATION	1.6091645530302144E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999989665295412	WITHOUT_CLASSIFICATION	1.0334704587618787E-6	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999989863439315	WITHOUT_CLASSIFICATION	1.0136560685593E-6	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999980988570613	WITHOUT_CLASSIFICATION	1.901142938858292E-6	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999207328494237	WITHOUT_CLASSIFICATION	7.926715057626573E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999988314220618	WITHOUT_CLASSIFICATION	1.1685779381980384E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999990319945031	WITHOUT_CLASSIFICATION	9.680054968607141E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999990319945031	WITHOUT_CLASSIFICATION	9.680054968607141E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999769224766109	WITHOUT_CLASSIFICATION	2.3077523389131527E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999414884724651	WITHOUT_CLASSIFICATION	5.8511527534791454E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999900037817773	WITHOUT_CLASSIFICATION	9.996218222743057E-6	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999999637326618	WITHOUT_CLASSIFICATION	3.626733828268875E-8	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999956104379852	WITHOUT_CLASSIFICATION	4.389562014708284E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999969088583036	WITHOUT_CLASSIFICATION	3.0911416963454865E-6	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9950185254590893	WITHOUT_CLASSIFICATION	0.004981474540910756	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999986374452307	WITHOUT_CLASSIFICATION	1.3625547693460585E-6	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999989703242211	WITHOUT_CLASSIFICATION	1.0296757787800217E-6	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.99997831247771	WITHOUT_CLASSIFICATION	2.1687522290049847E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999984304430779	WITHOUT_CLASSIFICATION	1.569556922108948E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999999249864108	WITHOUT_CLASSIFICATION	7.501358914905463E-8	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999995830240328	WITHOUT_CLASSIFICATION	4.169759671576416E-7	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999991038934855	WITHOUT_CLASSIFICATION	8.961065145850015E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999842295767066	WITHOUT_CLASSIFICATION	1.577042329339557E-4	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999985741275225	WITHOUT_CLASSIFICATION	1.4258724775431145E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9998612667251479	WITHOUT_CLASSIFICATION	1.3873327485216657E-4	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.999999660543579	WITHOUT_CLASSIFICATION	3.394564209269087E-7	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999993541356226	WITHOUT_CLASSIFICATION	6.458643773716455E-7	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999980490292985	WITHOUT_CLASSIFICATION	1.950970701457419E-6	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999880250047757	WITHOUT_CLASSIFICATION	1.1974995224257413E-5	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999980329483327	WITHOUT_CLASSIFICATION	1.967051667303567E-6	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999953963851782	WITHOUT_CLASSIFICATION	4.603614821785599E-6	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999853680321915	WITHOUT_CLASSIFICATION	1.4631967808565029E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999996536501056	WITHOUT_CLASSIFICATION	3.463498943137015E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999846446586591	WITHOUT_CLASSIFICATION	1.535534134083748E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999975684267087	WITHOUT_CLASSIFICATION	2.4315732911862964E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999990940944927	WITHOUT_CLASSIFICATION	9.05905507222321E-7	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999839077485797	WITHOUT_CLASSIFICATION	1.609225142024963E-5	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9998311407211693	WITHOUT_CLASSIFICATION	1.688592788306086E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999209536469714	WITHOUT_CLASSIFICATION	7.904635302855699E-5	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999965453691675	WITHOUT_CLASSIFICATION	3.454630832494958E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999820522626147	WITHOUT_CLASSIFICATION	1.794773738533227E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999982482195473	WITHOUT_CLASSIFICATION	1.7517804527293849E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999975057885218	WITHOUT_CLASSIFICATION	2.4942114782113962E-6	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999998715327211	WITHOUT_CLASSIFICATION	1.284672788653185E-7	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999944987264198	WITHOUT_CLASSIFICATION	5.501273580212623E-6	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999988003084873	WITHOUT_CLASSIFICATION	1.1996915126224354E-6	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999987718573031	WITHOUT_CLASSIFICATION	1.2281426968165785E-6	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.999988526004786	WITHOUT_CLASSIFICATION	1.1473995214051669E-5	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9799370453353148	WITHOUT_CLASSIFICATION	0.020062954664685204	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999956161080984	WITHOUT_CLASSIFICATION	4.383891901654198E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999985206524401	WITHOUT_CLASSIFICATION	1.479347559997983E-6	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.999955425394947	WITHOUT_CLASSIFICATION	4.4574605052950556E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999778719862434	WITHOUT_CLASSIFICATION	2.2128013756507546E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999965604307849	WITHOUT_CLASSIFICATION	3.4395692150236457E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999934155614604	WITHOUT_CLASSIFICATION	6.58443853969498E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999927639215498	WITHOUT_CLASSIFICATION	7.236078450226872E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999770760593276	WITHOUT_CLASSIFICATION	2.2923940672390415E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999276965540161	WITHOUT_CLASSIFICATION	7.230344598378907E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999988314220618	WITHOUT_CLASSIFICATION	1.1685779381980384E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999878101839152	WITHOUT_CLASSIFICATION	1.2189816084692902E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9999653377686052	WITHOUT_CLASSIFICATION	3.4662231394787176E-5	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999953718482786	WITHOUT_CLASSIFICATION	4.628151721400753E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999998149330055	WITHOUT_CLASSIFICATION	1.850669945478522E-7	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999846733089883	WITHOUT_CLASSIFICATION	1.5326691011724565E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999935161950233	WITHOUT_CLASSIFICATION	6.4838049766486425E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.999998182123925	WITHOUT_CLASSIFICATION	1.8178760750803696E-6	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999981524188052	WITHOUT_CLASSIFICATION	1.8475811947479236E-6	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9999689466202188	WITHOUT_CLASSIFICATION	3.1053379781230304E-5	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999961556678423	WITHOUT_CLASSIFICATION	3.844332157742576E-6	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999914915473506	WITHOUT_CLASSIFICATION	8.508452649382336E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999829339113363	WITHOUT_CLASSIFICATION	1.7066088663723992E-5	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999983836754639	WITHOUT_CLASSIFICATION	1.6163245361085891E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999783341001	WITHOUT_CLASSIFICATION	2.1665899943351225E-8	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999957747469332	WITHOUT_CLASSIFICATION	4.225253066719869E-6	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999984676631954	WITHOUT_CLASSIFICATION	1.532336804624281E-6	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999994975080936	WITHOUT_CLASSIFICATION	5.02491906450721E-7	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999995939384881	WITHOUT_CLASSIFICATION	4.060615118687893E-7	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999996158863844	WITHOUT_CLASSIFICATION	3.84113615575792E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999824614090999	WITHOUT_CLASSIFICATION	1.753859090007588E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999970176758954	WITHOUT_CLASSIFICATION	2.982324104515484E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999970176758954	WITHOUT_CLASSIFICATION	2.982324104515484E-6	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.999999949777274	WITHOUT_CLASSIFICATION	5.022272593844904E-8	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.999993595194169	WITHOUT_CLASSIFICATION	6.404805831031864E-6	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999969402511094	WITHOUT_CLASSIFICATION	3.059748890590881E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999994753385043	WITHOUT_CLASSIFICATION	5.246614957457188E-7	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999995107057557	WITHOUT_CLASSIFICATION	4.89294244336821E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.999997630956458	WITHOUT_CLASSIFICATION	2.3690435421067434E-6	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999997742391907	WITHOUT_CLASSIFICATION	2.2576080933496003E-7	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999757538422706	WITHOUT_CLASSIFICATION	2.4246157729436467E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999419678711595	WITHOUT_CLASSIFICATION	5.803212884037245E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9998304201602816	WITHOUT_CLASSIFICATION	1.69579839718463E-4	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999961164979376	WITHOUT_CLASSIFICATION	3.883502062449797E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.999999968180133	WITHOUT_CLASSIFICATION	3.181986700059618E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999998565616633	WITHOUT_CLASSIFICATION	1.4343833666772477E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.999992137507881	WITHOUT_CLASSIFICATION	7.86249211906377E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999979348058838	WITHOUT_CLASSIFICATION	2.0651941161996274E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9999887283617883	WITHOUT_CLASSIFICATION	1.1271638211672466E-5	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999830418555189	WITHOUT_CLASSIFICATION	1.695814448109941E-5	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.99999511227347	WITHOUT_CLASSIFICATION	4.887726529982821E-6	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999998744626668	WITHOUT_CLASSIFICATION	1.2553733318209502E-7	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999944391355723	WITHOUT_CLASSIFICATION	5.5608644276465794E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9999072621513873	WITHOUT_CLASSIFICATION	9.273784861263703E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999939471395984	WITHOUT_CLASSIFICATION	6.052860401448859E-6	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9998793012728278	WITHOUT_CLASSIFICATION	1.2069872717225166E-4	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999904553651408	WITHOUT_CLASSIFICATION	9.544634859337402E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999979348058838	WITHOUT_CLASSIFICATION	2.0651941161996274E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999979348058838	WITHOUT_CLASSIFICATION	2.0651941161996274E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999867960817711	WITHOUT_CLASSIFICATION	1.3203918228884996E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999837936323496	WITHOUT_CLASSIFICATION	1.6206367650432596E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999865679532712	WITHOUT_CLASSIFICATION	1.3432046728740824E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.999998707677513	WITHOUT_CLASSIFICATION	1.292322487006899E-6	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999860757388811	WITHOUT_CLASSIFICATION	1.3924261118841069E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999682053777713	WITHOUT_CLASSIFICATION	3.1794622228801376E-5	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999654407179351	WITHOUT_CLASSIFICATION	3.4559282064926035E-5	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999899778184833	WITHOUT_CLASSIFICATION	1.0022181516711216E-5	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999990967013566	WITHOUT_CLASSIFICATION	9.032986434434E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999548780042695	WITHOUT_CLASSIFICATION	4.512199573044506E-5	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999555222416058	WITHOUT_CLASSIFICATION	4.4477758394138066E-5	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999292094629344	WITHOUT_CLASSIFICATION	7.079053706562483E-5	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999787763457942	WITHOUT_CLASSIFICATION	2.122365420580956E-5	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999960136336479	WITHOUT_CLASSIFICATION	3.986366352212497E-6	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.999989633548201	WITHOUT_CLASSIFICATION	1.036645179886718E-5	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999885522298807	WITHOUT_CLASSIFICATION	1.1447770119178735E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9998279474972	WITHOUT_CLASSIFICATION	1.720525027998898E-4	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9999959000115469	WITHOUT_CLASSIFICATION	4.099988453061929E-6	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9997869119722169	WITHOUT_CLASSIFICATION	2.13088027782978E-4	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999988524934603	WITHOUT_CLASSIFICATION	1.1475065397428641E-6	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999993092402205	WITHOUT_CLASSIFICATION	6.907597794056998E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999989891187309	WITHOUT_CLASSIFICATION	1.0108812691565847E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999864877828154	WITHOUT_CLASSIFICATION	1.3512217184597994E-5	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999834760798246	WITHOUT_CLASSIFICATION	1.6523920175325877E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999998095909908	WITHOUT_CLASSIFICATION	1.9040900929655336E-7	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999822941592926	WITHOUT_CLASSIFICATION	1.770584070733406E-5	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999929284828231	WITHOUT_CLASSIFICATION	7.071517176849216E-6	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.999976112325609	WITHOUT_CLASSIFICATION	2.3887674390970267E-5	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999980444260165	WITHOUT_CLASSIFICATION	1.9555739835009663E-6	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999977775241637	WITHOUT_CLASSIFICATION	2.2224758362356724E-6	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999961671961425	WITHOUT_CLASSIFICATION	3.8328038575355415E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999602375928646	WITHOUT_CLASSIFICATION	3.9762407135494965E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999934455387539	WITHOUT_CLASSIFICATION	6.554461246105971E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999989453712883	WITHOUT_CLASSIFICATION	1.0546287117281912E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.999999278923234	WITHOUT_CLASSIFICATION	7.210767659800834E-7	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999967596739351	WITHOUT_CLASSIFICATION	3.240326064942526E-6	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9999606661255427	WITHOUT_CLASSIFICATION	3.933387445732673E-5	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999850688000894	WITHOUT_CLASSIFICATION	1.4931199910556469E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999086397738	WITHOUT_CLASSIFICATION	9.136022608704049E-8	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999977034804232	WITHOUT_CLASSIFICATION	2.296519576839266E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999998306003445	WITHOUT_CLASSIFICATION	1.6939965551201383E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999953177091065	WITHOUT_CLASSIFICATION	4.682290893410814E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.999943269080929	WITHOUT_CLASSIFICATION	5.6730919071029074E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999671380569612	WITHOUT_CLASSIFICATION	3.286194303869892E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999996824767926	WITHOUT_CLASSIFICATION	3.1752320739042315E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999997368875323	WITHOUT_CLASSIFICATION	2.631124676930947E-7	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999998516570503	WITHOUT_CLASSIFICATION	1.4834294967243759E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999997289063981	WITHOUT_CLASSIFICATION	2.7109360182163743E-7	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999998322508075	WITHOUT_CLASSIFICATION	1.6774919259169453E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9998391927864804	WITHOUT_CLASSIFICATION	1.6080721351963167E-4	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999837730014814	WITHOUT_CLASSIFICATION	1.6226998518529633E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999130173817142	WITHOUT_CLASSIFICATION	8.698261828578484E-5	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999940254089624	WITHOUT_CLASSIFICATION	5.974591037626284E-6	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999964942122086	WITHOUT_CLASSIFICATION	3.5057877913707245E-6	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999624539984943	WITHOUT_CLASSIFICATION	3.754600150578199E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999986539847014	WITHOUT_CLASSIFICATION	1.3460152985550746E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.999989472871839	WITHOUT_CLASSIFICATION	1.0527128160944713E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.999974693133358	WITHOUT_CLASSIFICATION	2.5306866642071164E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999980166370027	WITHOUT_CLASSIFICATION	1.9833629973964066E-6	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.999991941562291	WITHOUT_CLASSIFICATION	8.058437709050589E-6	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999849185116387	WITHOUT_CLASSIFICATION	1.5081488361150268E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999987123850792	WITHOUT_CLASSIFICATION	1.287614920815396E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999998960940084	WITHOUT_CLASSIFICATION	1.0390599163483958E-7	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999996065762127	WITHOUT_CLASSIFICATION	3.9342378740093956E-7	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9996001966691824	WITHOUT_CLASSIFICATION	3.998033308176007E-4	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999921383181601	WITHOUT_CLASSIFICATION	7.861681839956113E-6	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999993386066964	WITHOUT_CLASSIFICATION	6.613933036334726E-7	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.999999851285689	WITHOUT_CLASSIFICATION	1.487143110241458E-7	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.999997827376358	WITHOUT_CLASSIFICATION	2.1726236420726714E-6	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999998110352174	WITHOUT_CLASSIFICATION	1.8896478272344774E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999086397738	WITHOUT_CLASSIFICATION	9.136022608704049E-8	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999980690857325	WITHOUT_CLASSIFICATION	1.9309142675532156E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999136968998	WITHOUT_CLASSIFICATION	8.630310020446194E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999999136968998	WITHOUT_CLASSIFICATION	8.630310020446194E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999979936846006	WITHOUT_CLASSIFICATION	2.0063153993291153E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999984376152953	WITHOUT_CLASSIFICATION	1.562384704755768E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999984376152953	WITHOUT_CLASSIFICATION	1.562384704755768E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.999991177366307	WITHOUT_CLASSIFICATION	8.822633693068097E-6	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999977920892094	WITHOUT_CLASSIFICATION	2.2079107905931768E-6	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999961324131394	WITHOUT_CLASSIFICATION	3.8675868605295025E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999992949171033	WITHOUT_CLASSIFICATION	7.050828967932591E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.999998885096412	WITHOUT_CLASSIFICATION	1.114903587979084E-6	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999956173406315	WITHOUT_CLASSIFICATION	4.382659368492717E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999994288531099	WITHOUT_CLASSIFICATION	5.711468900237186E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999984287145132	WITHOUT_CLASSIFICATION	1.5712854868517035E-6	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999992059199481	WITHOUT_CLASSIFICATION	7.94080052053097E-7	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999435736810416	WITHOUT_CLASSIFICATION	5.642631895835586E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999998772934904	WITHOUT_CLASSIFICATION	1.2270650955582144E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999993853878956	WITHOUT_CLASSIFICATION	6.146121044264775E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999986573398053	WITHOUT_CLASSIFICATION	1.3426601947014135E-6	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999951413510187	WITHOUT_CLASSIFICATION	4.858648981305062E-6	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9999857672485261	WITHOUT_CLASSIFICATION	1.4232751473856341E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999985133270262	WITHOUT_CLASSIFICATION	1.4866729738550262E-6	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999854621812263	WITHOUT_CLASSIFICATION	1.4537818773642376E-5	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999976354496117	WITHOUT_CLASSIFICATION	2.3645503883480545E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999983715181436	WITHOUT_CLASSIFICATION	1.6284818564408747E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999984376152953	WITHOUT_CLASSIFICATION	1.562384704755768E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.999991177366307	WITHOUT_CLASSIFICATION	8.822633693068097E-6	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999985133270262	WITHOUT_CLASSIFICATION	1.4866729738550262E-6	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999998513350099	WITHOUT_CLASSIFICATION	1.4866499011971377E-7	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.99999827913573	WITHOUT_CLASSIFICATION	1.7208642699535312E-6	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999996109207925	WITHOUT_CLASSIFICATION	3.890792075966577E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999977028916752	WITHOUT_CLASSIFICATION	2.297108324747424E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999940638043587	WITHOUT_CLASSIFICATION	5.936195641254482E-6	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999988115233435	WITHOUT_CLASSIFICATION	1.1884766565170452E-6	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999977214841637	WITHOUT_CLASSIFICATION	2.2785158362698598E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.99998765345121	WITHOUT_CLASSIFICATION	1.2346548790134885E-5	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999856160963524	WITHOUT_CLASSIFICATION	1.4383903647568167E-5	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999915378882277	WITHOUT_CLASSIFICATION	8.462111772258271E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999272914409034	WITHOUT_CLASSIFICATION	7.27085590965649E-5	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999018924832898	WITHOUT_CLASSIFICATION	9.810751671028697E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999974010060665	WITHOUT_CLASSIFICATION	2.59899393339754E-6	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999996995532241	WITHOUT_CLASSIFICATION	3.0044677586544106E-7	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.996697096831935	WITHOUT_CLASSIFICATION	0.003302903168065082	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999948135910676	WITHOUT_CLASSIFICATION	5.1864089324190134E-6	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999988141643783	WITHOUT_CLASSIFICATION	1.1858356216923549E-6	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999992907846569	WITHOUT_CLASSIFICATION	7.092153431562086E-7	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999889531191996	WITHOUT_CLASSIFICATION	1.1046880800427868E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999363931685596	WITHOUT_CLASSIFICATION	6.360683144032411E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999980130863723	WITHOUT_CLASSIFICATION	1.986913627736885E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999969318591173	WITHOUT_CLASSIFICATION	3.0681408827708493E-6	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999949428979464	WITHOUT_CLASSIFICATION	5.05710205353529E-6	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.999997744638224	WITHOUT_CLASSIFICATION	2.255361776048689E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999820156933956	WITHOUT_CLASSIFICATION	1.798430660436106E-5	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999998200292654	WITHOUT_CLASSIFICATION	1.799707346952571E-7	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999974405828423	WITHOUT_CLASSIFICATION	2.5594171575562197E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999856427679391	WITHOUT_CLASSIFICATION	1.435723206095566E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999985831052352	WITHOUT_CLASSIFICATION	1.4168947648001423E-6	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999427058742314	WITHOUT_CLASSIFICATION	5.7294125768608483E-5	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999975882828674	WITHOUT_CLASSIFICATION	2.4117171326206655E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999991295932342	WITHOUT_CLASSIFICATION	8.704067657533772E-7	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999972329693714	WITHOUT_CLASSIFICATION	2.767030628597542E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999930491170652	WITHOUT_CLASSIFICATION	6.950882934896363E-6	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999925008123781	WITHOUT_CLASSIFICATION	7.499187621963004E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999516329517865	WITHOUT_CLASSIFICATION	4.836704821362101E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999969731005237	WITHOUT_CLASSIFICATION	3.0268994762016493E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999769448739	WITHOUT_CLASSIFICATION	2.3055126194340967E-8	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999972069959573	WITHOUT_CLASSIFICATION	2.793004042685737E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999972069959573	WITHOUT_CLASSIFICATION	2.793004042685737E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999982687912	WITHOUT_CLASSIFICATION	1.731208870547071E-9	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.999999952973157	WITHOUT_CLASSIFICATION	4.702684288841249E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.999999952973157	WITHOUT_CLASSIFICATION	4.702684288841249E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999997409333208	WITHOUT_CLASSIFICATION	2.590666792766019E-7	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999997409333208	WITHOUT_CLASSIFICATION	2.590666792766019E-7	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999155580402028	WITHOUT_CLASSIFICATION	8.444195979716397E-5	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9996683169758317	WITHOUT_CLASSIFICATION	3.3168302416824525E-4	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999992700607384	WITHOUT_CLASSIFICATION	7.299392615355989E-7	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999992650240899	WITHOUT_CLASSIFICATION	7.349759101222268E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999291583478	WITHOUT_CLASSIFICATION	7.084165225231025E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999949178553823	WITHOUT_CLASSIFICATION	5.082144617705493E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999401508103	WITHOUT_CLASSIFICATION	5.98491897011457E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997138597686259	WITHOUT_CLASSIFICATION	2.8614023137401776E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999972069959573	WITHOUT_CLASSIFICATION	2.793004042685737E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999818952426451	WITHOUT_CLASSIFICATION	1.810475735480299E-5	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999771946493	WITHOUT_CLASSIFICATION	2.2805350748887627E-8	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999994937410958	WITHOUT_CLASSIFICATION	5.062589042494931E-7	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9999224640653717	WITHOUT_CLASSIFICATION	7.753593462831727E-5	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9998952744212513	WITHOUT_CLASSIFICATION	1.0472557874877595E-4	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999973926305304	WITHOUT_CLASSIFICATION	2.607369469675252E-6	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999907267806406	WITHOUT_CLASSIFICATION	9.273219359485218E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999825437774111	WITHOUT_CLASSIFICATION	1.7456222588846054E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999945758088676	WITHOUT_CLASSIFICATION	5.42419113231262E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999945758088676	WITHOUT_CLASSIFICATION	5.42419113231262E-6	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999876746999314	WITHOUT_CLASSIFICATION	1.2325300068567643E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999999349151623	WITHOUT_CLASSIFICATION	6.508483778496544E-8	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999926179541849	WITHOUT_CLASSIFICATION	7.382045815160426E-6	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999970821360037	WITHOUT_CLASSIFICATION	2.917863996400827E-6	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999955609693305	WITHOUT_CLASSIFICATION	4.4390306694285135E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987303265014	WITHOUT_CLASSIFICATION	1.2696734985543516E-6	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973319711551	WITHOUT_CLASSIFICATION	2.668028844809599E-6	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.999999875112447	WITHOUT_CLASSIFICATION	1.248875530042595E-7	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.99999947143192	WITHOUT_CLASSIFICATION	5.285680799025006E-7	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987303265014	WITHOUT_CLASSIFICATION	1.2696734985543516E-6	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999965930066609	WITHOUT_CLASSIFICATION	3.406993339174616E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999980976686439	WITHOUT_CLASSIFICATION	1.902331356057222E-6	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.999996471048772	WITHOUT_CLASSIFICATION	3.528951228046282E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.999998792273836	WITHOUT_CLASSIFICATION	1.2077261639533661E-6	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999987354240938	WITHOUT_CLASSIFICATION	1.2645759062442203E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999993090233598	WITHOUT_CLASSIFICATION	6.909766402712779E-7	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999879556638054	WITHOUT_CLASSIFICATION	1.2044336194597862E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999980325675841	WITHOUT_CLASSIFICATION	1.9674324158810036E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999980325675841	WITHOUT_CLASSIFICATION	1.9674324158810036E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999943144631733	WITHOUT_CLASSIFICATION	5.685536826671316E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999943144631733	WITHOUT_CLASSIFICATION	5.685536826671316E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999957987280954	WITHOUT_CLASSIFICATION	4.2012719046686474E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999974443924382	WITHOUT_CLASSIFICATION	2.5556075618645042E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999974443924382	WITHOUT_CLASSIFICATION	2.5556075618645042E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999969395756582	WITHOUT_CLASSIFICATION	3.0604243417988152E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999969965323132	WITHOUT_CLASSIFICATION	3.0034676867406198E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999969965323132	WITHOUT_CLASSIFICATION	3.0034676867406198E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999976059830431	WITHOUT_CLASSIFICATION	2.394016956873744E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999985801948938	WITHOUT_CLASSIFICATION	1.4198051062119986E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999957817129486	WITHOUT_CLASSIFICATION	4.218287051439752E-6	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999948366327935	WITHOUT_CLASSIFICATION	5.1633672063676574E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999479578748	WITHOUT_CLASSIFICATION	5.2042125205621384E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980159513324	WITHOUT_CLASSIFICATION	1.9840486675571766E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980159513324	WITHOUT_CLASSIFICATION	1.9840486675571766E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999966392383816	WITHOUT_CLASSIFICATION	3.3607616184569103E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999966392383816	WITHOUT_CLASSIFICATION	3.3607616184569103E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.999998608252792	WITHOUT_CLASSIFICATION	1.3917472079733827E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999780231156294	WITHOUT_CLASSIFICATION	2.197688437055478E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999789025906917	WITHOUT_CLASSIFICATION	2.109740930840375E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999934155614604	WITHOUT_CLASSIFICATION	6.58443853969498E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999980325675841	WITHOUT_CLASSIFICATION	1.9674324158810036E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999587213193551	WITHOUT_CLASSIFICATION	4.127868064475655E-5	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999979388618047	WITHOUT_CLASSIFICATION	2.0611381952157827E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999943144631733	WITHOUT_CLASSIFICATION	5.685536826671316E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999943144631733	WITHOUT_CLASSIFICATION	5.685536826671316E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999957987280954	WITHOUT_CLASSIFICATION	4.2012719046686474E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999974443924382	WITHOUT_CLASSIFICATION	2.5556075618645042E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999974443924382	WITHOUT_CLASSIFICATION	2.5556075618645042E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999974443924382	WITHOUT_CLASSIFICATION	2.5556075618645042E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999969395756582	WITHOUT_CLASSIFICATION	3.0604243417988152E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999969965323132	WITHOUT_CLASSIFICATION	3.0034676867406198E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999976059830431	WITHOUT_CLASSIFICATION	2.394016956873744E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999985801948938	WITHOUT_CLASSIFICATION	1.4198051062119986E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980159513324	WITHOUT_CLASSIFICATION	1.9840486675571766E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999013100259	WITHOUT_CLASSIFICATION	9.868997409594883E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999997080837978	WITHOUT_CLASSIFICATION	2.9191620224571173E-7	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999994090556744	WITHOUT_CLASSIFICATION	5.909443255957522E-7	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999982098039386	WITHOUT_CLASSIFICATION	1.790196061451026E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980159513324	WITHOUT_CLASSIFICATION	1.9840486675571766E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999966392383816	WITHOUT_CLASSIFICATION	3.3607616184569103E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999966392383816	WITHOUT_CLASSIFICATION	3.3607616184569103E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999789025906917	WITHOUT_CLASSIFICATION	2.109740930840375E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999789025906917	WITHOUT_CLASSIFICATION	2.109740930840375E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999905468977938	WITHOUT_CLASSIFICATION	9.453102206242477E-6	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999974900481102	WITHOUT_CLASSIFICATION	2.509951889742544E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999926976792342	WITHOUT_CLASSIFICATION	7.302320765922614E-6	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999967737797327	WITHOUT_CLASSIFICATION	3.2262202672098546E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999694264618216	WITHOUT_CLASSIFICATION	3.057353817826346E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999976620294327	WITHOUT_CLASSIFICATION	2.337970567206554E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999814878843916	WITHOUT_CLASSIFICATION	1.851211560841205E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999959244728948	WITHOUT_CLASSIFICATION	4.075527105249308E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999947045936362	WITHOUT_CLASSIFICATION	5.295406363788265E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999998119572038	WITHOUT_CLASSIFICATION	1.8804279609516229E-7	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999986708574268	WITHOUT_CLASSIFICATION	1.3291425731654294E-6	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9998670292485035	WITHOUT_CLASSIFICATION	1.329707514966425E-4	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999811196052086	WITHOUT_CLASSIFICATION	1.8880394791359894E-5	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.999934047129009	WITHOUT_CLASSIFICATION	6.595287099095652E-5	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999111075961044	WITHOUT_CLASSIFICATION	8.88924038956294E-5	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.99999977361937	WITHOUT_CLASSIFICATION	2.2638063007842504E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999988236213931	WITHOUT_CLASSIFICATION	1.176378606936063E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999992749803758	WITHOUT_CLASSIFICATION	7.250196243536934E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999977721177992	WITHOUT_CLASSIFICATION	2.2278822007125107E-6	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999995664506376	WITHOUT_CLASSIFICATION	4.335493623115053E-7	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.999989248536488	WITHOUT_CLASSIFICATION	1.075146351199579E-5	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9999253790524899	WITHOUT_CLASSIFICATION	7.462094751012368E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999990007043034	WITHOUT_CLASSIFICATION	9.99295696631781E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999990007043034	WITHOUT_CLASSIFICATION	9.99295696631781E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999988363201981	WITHOUT_CLASSIFICATION	1.1636798018528138E-6	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999984456637178	WITHOUT_CLASSIFICATION	1.5543362821952025E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9998687814604568	WITHOUT_CLASSIFICATION	1.3121853954322773E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999991017782383	WITHOUT_CLASSIFICATION	8.982217618565236E-7	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999980326560705	WITHOUT_CLASSIFICATION	1.967343929517725E-6	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999920995932917	WITHOUT_CLASSIFICATION	7.900406708282059E-6	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999853202970274	WITHOUT_CLASSIFICATION	1.4679702972658641E-5	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999960677422085	WITHOUT_CLASSIFICATION	3.9322577914626065E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999839130992643	WITHOUT_CLASSIFICATION	1.6086900735770948E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999839130992643	WITHOUT_CLASSIFICATION	1.6086900735770948E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999839130992643	WITHOUT_CLASSIFICATION	1.6086900735770948E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999724082747344	WITHOUT_CLASSIFICATION	2.759172526554129E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999724082747344	WITHOUT_CLASSIFICATION	2.759172526554129E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999724082747344	WITHOUT_CLASSIFICATION	2.759172526554129E-5	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999945084001695	WITHOUT_CLASSIFICATION	5.491599830557805E-6	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999987005008724	WITHOUT_CLASSIFICATION	1.299499127656558E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9998959089025713	WITHOUT_CLASSIFICATION	1.0409109742869137E-4	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.999882085599293	WITHOUT_CLASSIFICATION	1.1791440070705948E-4	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999981889516673	WITHOUT_CLASSIFICATION	1.8110483326816964E-6	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999833576621384	WITHOUT_CLASSIFICATION	1.664233786163673E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998929741231349	WITHOUT_CLASSIFICATION	1.0702587686502383E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999998123951881	WITHOUT_CLASSIFICATION	1.876048118410172E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999979312831674	WITHOUT_CLASSIFICATION	2.0687168326677888E-6	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999989630414049	WITHOUT_CLASSIFICATION	1.0369585950337092E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999997350381248	WITHOUT_CLASSIFICATION	2.649618752554761E-7	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999986605036979	WITHOUT_CLASSIFICATION	1.3394963021142707E-6	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999969517082645	WITHOUT_CLASSIFICATION	3.048291735538452E-6	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.999999716527379	WITHOUT_CLASSIFICATION	2.834726210007757E-7	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999954224544982	WITHOUT_CLASSIFICATION	4.57754550180895E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999877987182741	WITHOUT_CLASSIFICATION	1.2201281725934238E-5	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999999320981169	WITHOUT_CLASSIFICATION	6.790188316313718E-8	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.999998679693768	WITHOUT_CLASSIFICATION	1.3203062320083376E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9999925057818535	WITHOUT_CLASSIFICATION	7.494218146472404E-6	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999997641700624	WITHOUT_CLASSIFICATION	2.358299376063005E-7	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999464847137	WITHOUT_CLASSIFICATION	5.3515286272317306E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999998954059048	WITHOUT_CLASSIFICATION	1.0459409508197899E-7	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999984485199737	WITHOUT_CLASSIFICATION	1.5514800264124462E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999528481686	WITHOUT_CLASSIFICATION	4.7151831534150246E-8	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999997000960625	WITHOUT_CLASSIFICATION	2.999039374779137E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999288708348726	WITHOUT_CLASSIFICATION	7.112916512737745E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999956598608595	WITHOUT_CLASSIFICATION	4.340139140522721E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999998149330055	WITHOUT_CLASSIFICATION	1.850669945478522E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999975365112137	WITHOUT_CLASSIFICATION	2.4634887862790046E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999975365112137	WITHOUT_CLASSIFICATION	2.4634887862790046E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9991845259264134	WITHOUT_CLASSIFICATION	8.154740735865802E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.999997987063388	WITHOUT_CLASSIFICATION	2.0129366119988384E-6	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999930258820985	WITHOUT_CLASSIFICATION	6.974117901599712E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999961826699454	WITHOUT_CLASSIFICATION	3.817330054690309E-6	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999921730477599	WITHOUT_CLASSIFICATION	7.826952240102353E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999914490491157	WITHOUT_CLASSIFICATION	8.550950884232393E-6	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999965696263294	WITHOUT_CLASSIFICATION	3.430373670538518E-6	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999923031560367	WITHOUT_CLASSIFICATION	7.69684396329604E-6	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.999892153345795	WITHOUT_CLASSIFICATION	1.078466542050066E-4	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999997518566521	WITHOUT_CLASSIFICATION	2.4814334787493227E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.999952923241137	WITHOUT_CLASSIFICATION	4.707675886298821E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9993430037486831	WITHOUT_CLASSIFICATION	6.569962513168952E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999977305750405	WITHOUT_CLASSIFICATION	2.2694249594590133E-6	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.999990059889129	WITHOUT_CLASSIFICATION	9.940110871071699E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999992749803758	WITHOUT_CLASSIFICATION	7.250196243536934E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999995676290241	WITHOUT_CLASSIFICATION	4.323709759595337E-7	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9992667818293588	WITHOUT_CLASSIFICATION	7.332181706411269E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999855282876513	WITHOUT_CLASSIFICATION	1.4471712348671784E-5	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9993200655789404	WITHOUT_CLASSIFICATION	6.799344210595897E-4	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999182864042672	WITHOUT_CLASSIFICATION	8.17135957327518E-5	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999983284144871	WITHOUT_CLASSIFICATION	1.6715855128146142E-6	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999143515419108	WITHOUT_CLASSIFICATION	8.564845808920085E-5	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.999975578524104	WITHOUT_CLASSIFICATION	2.4421475896002234E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999981818293459	WITHOUT_CLASSIFICATION	1.818170654097019E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9998657389141575	WITHOUT_CLASSIFICATION	1.3426108584236934E-4	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.999998124063979	WITHOUT_CLASSIFICATION	1.8759360210045988E-6	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999552129713608	WITHOUT_CLASSIFICATION	4.478702863913667E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9998272097696516	WITHOUT_CLASSIFICATION	1.72790230348476E-4	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999922351258306	WITHOUT_CLASSIFICATION	7.764874169503747E-6	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999925478514025	WITHOUT_CLASSIFICATION	7.452148597594689E-6	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999949137283869	WITHOUT_CLASSIFICATION	5.08627161305234E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999912631934366	WITHOUT_CLASSIFICATION	8.736806563445031E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999994751189044	WITHOUT_CLASSIFICATION	5.248810955451065E-7	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.999998310843546	WITHOUT_CLASSIFICATION	1.6891564540619758E-6	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.999999855004311	WITHOUT_CLASSIFICATION	1.449956889801649E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999984338129171	WITHOUT_CLASSIFICATION	1.5661870829401186E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999993966910828	WITHOUT_CLASSIFICATION	6.033089171588701E-7	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999888634457502	WITHOUT_CLASSIFICATION	1.1136554249818483E-5	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999989368542033	WITHOUT_CLASSIFICATION	1.063145796798996E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9998453954376333	WITHOUT_CLASSIFICATION	1.5460456236662953E-4	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9999134482895353	WITHOUT_CLASSIFICATION	8.655171046470878E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.999997273345783	WITHOUT_CLASSIFICATION	2.7266542170135452E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999973486811029	WITHOUT_CLASSIFICATION	2.651318897125343E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999973486811029	WITHOUT_CLASSIFICATION	2.651318897125343E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999353845554739	WITHOUT_CLASSIFICATION	6.46154445260313E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999682053777713	WITHOUT_CLASSIFICATION	3.1794622228801376E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996745426958	WITHOUT_CLASSIFICATION	3.254573041836244E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996745426958	WITHOUT_CLASSIFICATION	3.254573041836244E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999833576621384	WITHOUT_CLASSIFICATION	1.664233786163673E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998929741231349	WITHOUT_CLASSIFICATION	1.0702587686502383E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999790058454346	WITHOUT_CLASSIFICATION	2.0994154565443482E-5	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9998350617562771	WITHOUT_CLASSIFICATION	1.6493824372284816E-4	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9997453209243453	WITHOUT_CLASSIFICATION	2.5467907565465946E-4	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999913491492154	WITHOUT_CLASSIFICATION	8.650850784626408E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999975242707898	WITHOUT_CLASSIFICATION	2.4757292102168397E-6	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999985315782847	WITHOUT_CLASSIFICATION	1.4684217152463376E-6	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999747051362359	WITHOUT_CLASSIFICATION	2.5294863764139697E-5	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999720267508907	WITHOUT_CLASSIFICATION	2.797324910931012E-5	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999976364261961	WITHOUT_CLASSIFICATION	2.3635738038901876E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9999924377443913	WITHOUT_CLASSIFICATION	7.562255608669149E-6	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999998558920004	WITHOUT_CLASSIFICATION	1.4410799970143455E-7	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999466561073591	WITHOUT_CLASSIFICATION	5.3343892640885166E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999630308224842	WITHOUT_CLASSIFICATION	3.696917751594494E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999630308224842	WITHOUT_CLASSIFICATION	3.696917751594494E-5	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999887933818564	WITHOUT_CLASSIFICATION	1.1206618143517513E-5	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999980758178183	WITHOUT_CLASSIFICATION	1.9241821816697513E-6	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999663817406129	WITHOUT_CLASSIFICATION	3.36182593871398E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999954400581529	WITHOUT_CLASSIFICATION	4.559941847082041E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999777556707679	WITHOUT_CLASSIFICATION	2.224432923207218E-5	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999996090760312	WITHOUT_CLASSIFICATION	3.9092396875215234E-7	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999871654578021	WITHOUT_CLASSIFICATION	1.2834542197881647E-5	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999996630625568	WITHOUT_CLASSIFICATION	3.369374431378007E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999965675938136	WITHOUT_CLASSIFICATION	3.4324061863629063E-6	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999512611821764	WITHOUT_CLASSIFICATION	4.8738817823642025E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998056661063869	WITHOUT_CLASSIFICATION	1.9433389361313687E-4	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9998122440337672	WITHOUT_CLASSIFICATION	1.8775596623283344E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9999738974509988	WITHOUT_CLASSIFICATION	2.6102549001055437E-5	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999905936764766	WITHOUT_CLASSIFICATION	9.40632352343733E-6	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999986336006597	WITHOUT_CLASSIFICATION	1.3663993403539248E-6	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9998979848432074	WITHOUT_CLASSIFICATION	1.0201515679261113E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999934671969238	WITHOUT_CLASSIFICATION	6.532803076140173E-6	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999929245703929	WITHOUT_CLASSIFICATION	7.0754296070351015E-6	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999618585842824	WITHOUT_CLASSIFICATION	3.8141415717566226E-5	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999951401303576	WITHOUT_CLASSIFICATION	4.85986964241608E-6	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999491106040165	WITHOUT_CLASSIFICATION	5.0889395983523715E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.999993107444423	WITHOUT_CLASSIFICATION	6.892555576910295E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999409529608414	WITHOUT_CLASSIFICATION	5.9047039158600345E-5	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999969164336929	WITHOUT_CLASSIFICATION	3.0835663070341857E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999961487886387	WITHOUT_CLASSIFICATION	3.851211361283125E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999980109197267	WITHOUT_CLASSIFICATION	1.989080273163759E-6	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999985910018143	WITHOUT_CLASSIFICATION	1.4089981856652451E-6	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.999950149305931	WITHOUT_CLASSIFICATION	4.9850694069016174E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999835901209245	WITHOUT_CLASSIFICATION	1.6409879075496954E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999473507044029	WITHOUT_CLASSIFICATION	5.2649295597027016E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999473507044029	WITHOUT_CLASSIFICATION	5.2649295597027016E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999473507044029	WITHOUT_CLASSIFICATION	5.2649295597027016E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999473507044029	WITHOUT_CLASSIFICATION	5.2649295597027016E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999473507044029	WITHOUT_CLASSIFICATION	5.2649295597027016E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999473507044029	WITHOUT_CLASSIFICATION	5.2649295597027016E-5	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.999999759937196	WITHOUT_CLASSIFICATION	2.4006280388360873E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999992574388221	WITHOUT_CLASSIFICATION	7.4256117795087E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999969342032626	WITHOUT_CLASSIFICATION	3.0657967372880787E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.99999844240108	WITHOUT_CLASSIFICATION	1.5575989199690954E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.99999844240108	WITHOUT_CLASSIFICATION	1.5575989199690954E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999959559032928	WITHOUT_CLASSIFICATION	4.044096707147389E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999959559032928	WITHOUT_CLASSIFICATION	4.044096707147389E-6	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999908967975866	WITHOUT_CLASSIFICATION	9.103202413482355E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9992773182664547	WITHOUT_CLASSIFICATION	7.226817335452374E-4	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999982093803873	WITHOUT_CLASSIFICATION	1.7906196126064579E-6	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999652087000118	WITHOUT_CLASSIFICATION	3.479129998824595E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999938243749481	WITHOUT_CLASSIFICATION	6.175625051901143E-6	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999987433402329	WITHOUT_CLASSIFICATION	1.2566597672085059E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999995272580238	WITHOUT_CLASSIFICATION	4.727419761987503E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999995272580238	WITHOUT_CLASSIFICATION	4.727419761987503E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.999975210668037	WITHOUT_CLASSIFICATION	2.4789331963016608E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.999975210668037	WITHOUT_CLASSIFICATION	2.4789331963016608E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.999975210668037	WITHOUT_CLASSIFICATION	2.4789331963016608E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999886796587534	WITHOUT_CLASSIFICATION	1.1320341246521322E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999886796587534	WITHOUT_CLASSIFICATION	1.1320341246521322E-5	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999997781541613	WITHOUT_CLASSIFICATION	2.2184583864411075E-7	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999997734848627	WITHOUT_CLASSIFICATION	2.2651513728312442E-7	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999967027789781	WITHOUT_CLASSIFICATION	3.2972210219189468E-6	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999451348159706	WITHOUT_CLASSIFICATION	5.48651840294767E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999993053553274	WITHOUT_CLASSIFICATION	6.946446725821792E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999993053553274	WITHOUT_CLASSIFICATION	6.946446725821792E-7	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999975786020416	WITHOUT_CLASSIFICATION	2.4213979582939118E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999473507044029	WITHOUT_CLASSIFICATION	5.2649295597027016E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999993053553274	WITHOUT_CLASSIFICATION	6.946446725821792E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999951446398613	WITHOUT_CLASSIFICATION	4.85536013867028E-6	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999951446398613	WITHOUT_CLASSIFICATION	4.85536013867028E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999993053553274	WITHOUT_CLASSIFICATION	6.946446725821792E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999993053553274	WITHOUT_CLASSIFICATION	6.946446725821792E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999993053553274	WITHOUT_CLASSIFICATION	6.946446725821792E-7	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999997179038332	WITHOUT_CLASSIFICATION	2.8209616677608037E-7	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999137755073	WITHOUT_CLASSIFICATION	8.622449263917739E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999482419042	WITHOUT_CLASSIFICATION	5.175809589066602E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999482419042	WITHOUT_CLASSIFICATION	5.175809589066602E-8	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999485008902	WITHOUT_CLASSIFICATION	5.149910979709713E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999998977330636	WITHOUT_CLASSIFICATION	1.0226693637318679E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999997959779942	WITHOUT_CLASSIFICATION	2.040220058649675E-7	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999437544466	WITHOUT_CLASSIFICATION	5.624555349863441E-8	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.999908965412178	WITHOUT_CLASSIFICATION	9.103458782196645E-5	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999996602153031	WITHOUT_CLASSIFICATION	3.3978469692185796E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999912007773605	WITHOUT_CLASSIFICATION	8.799222639539873E-6	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999989879864256	WITHOUT_CLASSIFICATION	1.0120135744241955E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999983940695001	WITHOUT_CLASSIFICATION	1.6059304999483753E-6	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999996908274436	WITHOUT_CLASSIFICATION	3.0917255643787465E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999970992231451	WITHOUT_CLASSIFICATION	2.9007768548226553E-6	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999980432565461	WITHOUT_CLASSIFICATION	1.956743453923858E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999961487318825	WITHOUT_CLASSIFICATION	3.85126811756628E-6	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999981838625895	WITHOUT_CLASSIFICATION	1.8161374104043331E-6	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999996986478591	WITHOUT_CLASSIFICATION	3.013521408740647E-7	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999854276635883	WITHOUT_CLASSIFICATION	1.457233641181278E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.999999770934691	WITHOUT_CLASSIFICATION	2.2906530897984382E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999991488601734	WITHOUT_CLASSIFICATION	8.511398267134627E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999998897072764	WITHOUT_CLASSIFICATION	1.1029272354778617E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999993332895142	WITHOUT_CLASSIFICATION	6.6671048590275E-7	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999816388298001	WITHOUT_CLASSIFICATION	1.83611701999833E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999991488601734	WITHOUT_CLASSIFICATION	8.511398267134627E-7	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999995745738219	WITHOUT_CLASSIFICATION	4.254261780465703E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999998897072764	WITHOUT_CLASSIFICATION	1.1029272354778617E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999993332895142	WITHOUT_CLASSIFICATION	6.6671048590275E-7	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999994941636202	WITHOUT_CLASSIFICATION	5.058363797814788E-7	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999984188343949	WITHOUT_CLASSIFICATION	1.581165605144041E-6	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999998814234146	WITHOUT_CLASSIFICATION	1.1857658543360218E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999996352411921	WITHOUT_CLASSIFICATION	3.647588078593346E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999997181858141	WITHOUT_CLASSIFICATION	2.8181418590046415E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999996524501471	WITHOUT_CLASSIFICATION	3.475498528655806E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9999964526074897	WITHOUT_CLASSIFICATION	3.5473925102858307E-6	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999998944565456	WITHOUT_CLASSIFICATION	1.0554345442434119E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999688903806919	WITHOUT_CLASSIFICATION	3.110961930818281E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999837521120011	WITHOUT_CLASSIFICATION	1.624788799897139E-5	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999992282792045	WITHOUT_CLASSIFICATION	7.717207954213835E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999999488925799	WITHOUT_CLASSIFICATION	5.110742006373752E-8	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999997008647907	WITHOUT_CLASSIFICATION	2.991352093299634E-7	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999999748261968	WITHOUT_CLASSIFICATION	2.5173803092461767E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999978923539656	WITHOUT_CLASSIFICATION	2.1076460342851086E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999995085915433	WITHOUT_CLASSIFICATION	4.914084567540443E-7	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999826701837595	WITHOUT_CLASSIFICATION	1.7329816240493516E-5	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.999999199726172	WITHOUT_CLASSIFICATION	8.002738280193181E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999992970567738	WITHOUT_CLASSIFICATION	7.029432262511543E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999992970567738	WITHOUT_CLASSIFICATION	7.029432262511543E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999987655464606	WITHOUT_CLASSIFICATION	1.2344535394125526E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999987655464606	WITHOUT_CLASSIFICATION	1.2344535394125526E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999951214466744	WITHOUT_CLASSIFICATION	4.87855332574206E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999951214466744	WITHOUT_CLASSIFICATION	4.87855332574206E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999972102456353	WITHOUT_CLASSIFICATION	2.7897543647248535E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999981585554282	WITHOUT_CLASSIFICATION	1.8414445717827726E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999997664546457	WITHOUT_CLASSIFICATION	2.3354535431769186E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999998118160655	WITHOUT_CLASSIFICATION	1.881839344727962E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999969215444662	WITHOUT_CLASSIFICATION	3.07845553391636E-6	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.999999460469483	WITHOUT_CLASSIFICATION	5.395305171354184E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999978722551911	WITHOUT_CLASSIFICATION	2.127744808809704E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999990893760559	WITHOUT_CLASSIFICATION	9.106239442558576E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999982604523989	WITHOUT_CLASSIFICATION	1.7395476010520627E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9999357443770328	WITHOUT_CLASSIFICATION	6.425562296719998E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999988623040259	WITHOUT_CLASSIFICATION	1.1376959740477504E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999997886262244	WITHOUT_CLASSIFICATION	2.1137377554630669E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999961006328985	WITHOUT_CLASSIFICATION	3.899367101570629E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999923430752118	WITHOUT_CLASSIFICATION	7.656924788318783E-6	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999705220865913	WITHOUT_CLASSIFICATION	2.9477913408716287E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999914032118753	WITHOUT_CLASSIFICATION	8.596788124744339E-6	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999949164755502	WITHOUT_CLASSIFICATION	5.083524449766972E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999900966938248	WITHOUT_CLASSIFICATION	9.903306175156526E-6	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999967067365068	WITHOUT_CLASSIFICATION	3.293263493324347E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.999976409006233	WITHOUT_CLASSIFICATION	2.3590993767063228E-5	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999965446457179	WITHOUT_CLASSIFICATION	3.4553542821596606E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999862919196513	WITHOUT_CLASSIFICATION	1.3708080348701662E-5	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999980546903526	WITHOUT_CLASSIFICATION	1.9453096472844063E-6	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999992844789144	WITHOUT_CLASSIFICATION	7.155210856972949E-7	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999998031380561	WITHOUT_CLASSIFICATION	1.9686194382903232E-7	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999995201805401	WITHOUT_CLASSIFICATION	4.798194599685731E-7	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999984843392775	WITHOUT_CLASSIFICATION	1.5156607225333667E-6	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999996667131148	WITHOUT_CLASSIFICATION	3.332868850987407E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999993677174545	WITHOUT_CLASSIFICATION	6.322825455396647E-7	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999980419859774	WITHOUT_CLASSIFICATION	1.958014022516839E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999992295383631	WITHOUT_CLASSIFICATION	7.704616368861333E-7	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.999997405121642	WITHOUT_CLASSIFICATION	2.5948783579895904E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999400923787983	WITHOUT_CLASSIFICATION	5.9907621201689E-5	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9999454502581555	WITHOUT_CLASSIFICATION	5.4549741844502077E-5	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9999454502581555	WITHOUT_CLASSIFICATION	5.4549741844502077E-5	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9997735791660802	WITHOUT_CLASSIFICATION	2.2642083391985457E-4	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999748666513668	WITHOUT_CLASSIFICATION	2.513334863322039E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.999952714580494	WITHOUT_CLASSIFICATION	4.728541950610781E-5	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.999992723109726	WITHOUT_CLASSIFICATION	7.276890273962083E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999305546044407	WITHOUT_CLASSIFICATION	6.944539555930905E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999869836960812	WITHOUT_CLASSIFICATION	1.3016303918810659E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999869836960812	WITHOUT_CLASSIFICATION	1.3016303918810659E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999869836960812	WITHOUT_CLASSIFICATION	1.3016303918810659E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999888837035497	WITHOUT_CLASSIFICATION	1.1116296450350425E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999920334050456	WITHOUT_CLASSIFICATION	7.966594954507213E-6	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999920334050456	WITHOUT_CLASSIFICATION	7.966594954507213E-6	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999828597015992	WITHOUT_CLASSIFICATION	1.714029840083026E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9998493452117733	WITHOUT_CLASSIFICATION	1.5065478822672167E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999937517020676	WITHOUT_CLASSIFICATION	6.248297932394957E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999937517020676	WITHOUT_CLASSIFICATION	6.248297932394957E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999937517020676	WITHOUT_CLASSIFICATION	6.248297932394957E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999909184448744	WITHOUT_CLASSIFICATION	9.081555125604613E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999732356636168	WITHOUT_CLASSIFICATION	2.676433638325652E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.999994749497277	WITHOUT_CLASSIFICATION	5.25050272313309E-6	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999992386979397	WITHOUT_CLASSIFICATION	7.613020603444577E-7	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999968721326259	WITHOUT_CLASSIFICATION	3.1278673740577534E-6	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999987387988134	WITHOUT_CLASSIFICATION	1.2612011865186736E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999947265420426	WITHOUT_CLASSIFICATION	5.273457957382856E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999862620970165	WITHOUT_CLASSIFICATION	1.3737902983499279E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999849907429256	WITHOUT_CLASSIFICATION	1.5009257074492878E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9998666481526313	WITHOUT_CLASSIFICATION	1.333518473686884E-4	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999683832739272	WITHOUT_CLASSIFICATION	3.16167260727421E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999914032118753	WITHOUT_CLASSIFICATION	8.596788124744339E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999900966938248	WITHOUT_CLASSIFICATION	9.903306175156526E-6	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999936781324126	WITHOUT_CLASSIFICATION	6.32186758741225E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999979346306217	WITHOUT_CLASSIFICATION	2.0653693783118647E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999993093305227	WITHOUT_CLASSIFICATION	6.906694771550837E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999961476126602	WITHOUT_CLASSIFICATION	3.852387339745395E-6	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999994861295926	WITHOUT_CLASSIFICATION	5.138704074510701E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999994861295926	WITHOUT_CLASSIFICATION	5.138704074510701E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999994861295926	WITHOUT_CLASSIFICATION	5.138704074510701E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999957369698887	WITHOUT_CLASSIFICATION	4.2630301113178815E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999957369698887	WITHOUT_CLASSIFICATION	4.2630301113178815E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999913718044785	WITHOUT_CLASSIFICATION	8.628195521514604E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9997173020921083	WITHOUT_CLASSIFICATION	2.8269790789170734E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999406651050683	WITHOUT_CLASSIFICATION	5.933489493160919E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999956599293577	WITHOUT_CLASSIFICATION	4.340070642304049E-6	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999371042879609	WITHOUT_CLASSIFICATION	6.28957120391675E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999371042879609	WITHOUT_CLASSIFICATION	6.28957120391675E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999935994741517	WITHOUT_CLASSIFICATION	6.400525848322133E-6	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.999997540097568	WITHOUT_CLASSIFICATION	2.459902432036455E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999978599013383	WITHOUT_CLASSIFICATION	2.1400986616228332E-6	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999832802722255	WITHOUT_CLASSIFICATION	1.6719727774535678E-5	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999931408268012	WITHOUT_CLASSIFICATION	6.859173198729118E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999963804069516	WITHOUT_CLASSIFICATION	3.619593048275635E-6	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999680907467242	WITHOUT_CLASSIFICATION	3.1909253275776636E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999983946978087	WITHOUT_CLASSIFICATION	1.6053021913329673E-6	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999997759968078	WITHOUT_CLASSIFICATION	2.240031920868208E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999941924974727	WITHOUT_CLASSIFICATION	5.807502527349181E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999991295057171	WITHOUT_CLASSIFICATION	8.704942829364206E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999540962053961	WITHOUT_CLASSIFICATION	4.5903794603946136E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999993093305227	WITHOUT_CLASSIFICATION	6.906694771550837E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998935498178	WITHOUT_CLASSIFICATION	1.064501822306867E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.999952923241137	WITHOUT_CLASSIFICATION	4.707675886298821E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999993093305227	WITHOUT_CLASSIFICATION	6.906694771550837E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999956599293577	WITHOUT_CLASSIFICATION	4.340070642304049E-6	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999958044468883	WITHOUT_CLASSIFICATION	4.195553111647839E-6	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999763890509	WITHOUT_CLASSIFICATION	2.3610949023950994E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999990035629056	WITHOUT_CLASSIFICATION	9.964370944300395E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999990035629056	WITHOUT_CLASSIFICATION	9.964370944300395E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999953977402277	WITHOUT_CLASSIFICATION	4.6022597723118845E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999960343977676	WITHOUT_CLASSIFICATION	3.965602232315996E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999958436229653	WITHOUT_CLASSIFICATION	4.156377034690476E-6	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999988268985934	WITHOUT_CLASSIFICATION	1.1731014065943243E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999606422346	WITHOUT_CLASSIFICATION	3.935776547328702E-8	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999986124387373	WITHOUT_CLASSIFICATION	1.387561262621577E-6	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999998561578295	WITHOUT_CLASSIFICATION	1.4384217046709442E-7	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999969445364008	WITHOUT_CLASSIFICATION	3.0554635992624523E-6	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999995670727202	WITHOUT_CLASSIFICATION	4.3292727976836956E-7	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999973841488826	WITHOUT_CLASSIFICATION	2.6158511174726446E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999909663929614	WITHOUT_CLASSIFICATION	9.033607038651955E-6	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999161823701044	WITHOUT_CLASSIFICATION	8.381762989568615E-5	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999964598740341	WITHOUT_CLASSIFICATION	3.540125965949108E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999998754624466	WITHOUT_CLASSIFICATION	1.2453755331658896E-7	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999994941421104	WITHOUT_CLASSIFICATION	5.058578895670565E-7	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999998304235012	WITHOUT_CLASSIFICATION	1.6957649880310258E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999964653586436	WITHOUT_CLASSIFICATION	3.534641356371136E-6	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999997301749737	WITHOUT_CLASSIFICATION	2.698250262643763E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.999999759934433	WITHOUT_CLASSIFICATION	2.4006556690199873E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.999999759934433	WITHOUT_CLASSIFICATION	2.4006556690199873E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999993093305227	WITHOUT_CLASSIFICATION	6.906694771550837E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999999419459961	WITHOUT_CLASSIFICATION	5.8054003835164887E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999991295057171	WITHOUT_CLASSIFICATION	8.704942829364206E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999954037157938	WITHOUT_CLASSIFICATION	4.596284206225065E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999999455013711	WITHOUT_CLASSIFICATION	5.44986290746443E-8	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.999999201863391	WITHOUT_CLASSIFICATION	7.981366089139778E-7	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999932664146843	WITHOUT_CLASSIFICATION	6.7335853156269835E-6	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999997505195326	WITHOUT_CLASSIFICATION	2.4948046743568636E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999991295057171	WITHOUT_CLASSIFICATION	8.704942829364206E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.999997457641894	WITHOUT_CLASSIFICATION	2.5423581059724874E-6	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9998679387989508	WITHOUT_CLASSIFICATION	1.3206120104922265E-4	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999946585758687	WITHOUT_CLASSIFICATION	5.341424131306229E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999994203856822	WITHOUT_CLASSIFICATION	5.796143177749226E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999994820061686	WITHOUT_CLASSIFICATION	5.179938314611723E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999835347465442	WITHOUT_CLASSIFICATION	1.6465253455811483E-5	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999978930893296	WITHOUT_CLASSIFICATION	2.1069106704489292E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999924816918736	WITHOUT_CLASSIFICATION	7.51830812634526E-6	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999984955613541	WITHOUT_CLASSIFICATION	1.5044386458838927E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999922430582521	WITHOUT_CLASSIFICATION	7.7569417479143E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999959960244823	WITHOUT_CLASSIFICATION	4.00397551777153E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999959960244823	WITHOUT_CLASSIFICATION	4.00397551777153E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999961375262586	WITHOUT_CLASSIFICATION	3.86247374134915E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999996136642061	WITHOUT_CLASSIFICATION	3.8633579393547715E-7	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999996488232054	WITHOUT_CLASSIFICATION	3.511767946408492E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999986870978843	WITHOUT_CLASSIFICATION	1.312902115686526E-6	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999791688973106	WITHOUT_CLASSIFICATION	2.0831102689354705E-5	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999737383384587	WITHOUT_CLASSIFICATION	2.626166154134263E-5	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999868450072299	WITHOUT_CLASSIFICATION	1.3154992770184972E-5	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999968411572887	WITHOUT_CLASSIFICATION	3.1588427112588433E-6	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999959668457761	WITHOUT_CLASSIFICATION	4.033154223901281E-6	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999699988365895	WITHOUT_CLASSIFICATION	3.0001163410337134E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999999883004265	WITHOUT_CLASSIFICATION	1.1699573542700357E-8	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999998771780948	WITHOUT_CLASSIFICATION	1.2282190520181846E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999998771780948	WITHOUT_CLASSIFICATION	1.2282190520181846E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999998771780948	WITHOUT_CLASSIFICATION	1.2282190520181846E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999998771780948	WITHOUT_CLASSIFICATION	1.2282190520181846E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999998771780948	WITHOUT_CLASSIFICATION	1.2282190520181846E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999998771780948	WITHOUT_CLASSIFICATION	1.2282190520181846E-6	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9999483098943818	WITHOUT_CLASSIFICATION	5.169010561824865E-5	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999824741175399	WITHOUT_CLASSIFICATION	1.752588246010918E-5	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999991245362668	WITHOUT_CLASSIFICATION	8.754637332508557E-7	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999991133542359	WITHOUT_CLASSIFICATION	8.866457641688165E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999950081451334	WITHOUT_CLASSIFICATION	4.991854866573257E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999798113494223	WITHOUT_CLASSIFICATION	2.0188650577709754E-5	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999961912877703	WITHOUT_CLASSIFICATION	3.8087122297564083E-6	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999806748916291	WITHOUT_CLASSIFICATION	1.932510837091965E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9999770104177486	WITHOUT_CLASSIFICATION	2.298958225138962E-5	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999958686111432	WITHOUT_CLASSIFICATION	4.131388856877747E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999942053573085	WITHOUT_CLASSIFICATION	5.794642691452407E-6	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.999999511796464	WITHOUT_CLASSIFICATION	4.882035360539916E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.999971158921382	WITHOUT_CLASSIFICATION	2.8841078617926185E-5	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999999375275483	WITHOUT_CLASSIFICATION	6.247245166321506E-8	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999999140894915	WITHOUT_CLASSIFICATION	8.591050842977636E-8	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999858875525253	WITHOUT_CLASSIFICATION	1.4112447474824447E-5	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999474980947385	WITHOUT_CLASSIFICATION	5.250190526163237E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999640519341467	WITHOUT_CLASSIFICATION	3.594806585317395E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999640519341467	WITHOUT_CLASSIFICATION	3.594806585317395E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.999995227502852	WITHOUT_CLASSIFICATION	4.7724971480078925E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.999963990139807	WITHOUT_CLASSIFICATION	3.600986019305125E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.999959197291136	WITHOUT_CLASSIFICATION	4.080270886395528E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999797741384264	WITHOUT_CLASSIFICATION	2.022586157360315E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999567918002075	WITHOUT_CLASSIFICATION	4.320819979254473E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999790642410106	WITHOUT_CLASSIFICATION	2.0935758989474035E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999973558429622	WITHOUT_CLASSIFICATION	2.6441570377266348E-6	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999949543814874	WITHOUT_CLASSIFICATION	5.045618512522994E-6	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999853796377022	WITHOUT_CLASSIFICATION	1.4620362297819763E-5	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999971077627677	WITHOUT_CLASSIFICATION	2.8922372323323274E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.999999913834942	WITHOUT_CLASSIFICATION	8.616505799361226E-8	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999970489396968	WITHOUT_CLASSIFICATION	2.951060303281389E-6	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999966339651699	WITHOUT_CLASSIFICATION	3.366034830005543E-6	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999980575546012	WITHOUT_CLASSIFICATION	1.9424453986584126E-6	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999942750954985	WITHOUT_CLASSIFICATION	5.72490450144877E-6	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999970070788502	WITHOUT_CLASSIFICATION	2.992921149865728E-6	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999959986447852	WITHOUT_CLASSIFICATION	4.001355214909696E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999962567754772	WITHOUT_CLASSIFICATION	3.7432245228580658E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999989257468574	WITHOUT_CLASSIFICATION	1.0742531425277194E-6	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999933051217279	WITHOUT_CLASSIFICATION	6.69487827217945E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999749569405023	WITHOUT_CLASSIFICATION	2.504305949779238E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999966151697814	WITHOUT_CLASSIFICATION	3.3848302185502003E-6	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999958684883704	WITHOUT_CLASSIFICATION	4.131511629570642E-6	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999961862910447	WITHOUT_CLASSIFICATION	3.813708955297511E-6	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999957921205355	WITHOUT_CLASSIFICATION	4.207879464511963E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999965019337894	WITHOUT_CLASSIFICATION	3.49806621057322E-6	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999987930039399	WITHOUT_CLASSIFICATION	1.2069960601609534E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999949058221912	WITHOUT_CLASSIFICATION	5.094177808794117E-6	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999996722385044	WITHOUT_CLASSIFICATION	3.277614956530403E-7	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999972628661198	WITHOUT_CLASSIFICATION	2.7371338802732415E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.999988404687376	WITHOUT_CLASSIFICATION	1.1595312624080403E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999793036075848	WITHOUT_CLASSIFICATION	2.0696392415168278E-5	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.999994690526155	WITHOUT_CLASSIFICATION	5.3094738450109196E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999972936113168	WITHOUT_CLASSIFICATION	2.7063886831300265E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999967559041498	WITHOUT_CLASSIFICATION	3.244095850123276E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999713382978267	WITHOUT_CLASSIFICATION	2.866170217323451E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.999999551443114	WITHOUT_CLASSIFICATION	4.4855688588744655E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999914365075258	WITHOUT_CLASSIFICATION	8.563492474247013E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999931085751166	WITHOUT_CLASSIFICATION	6.89142488348717E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999931085751166	WITHOUT_CLASSIFICATION	6.89142488348717E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9997755158735152	WITHOUT_CLASSIFICATION	2.2448412648477619E-4	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999680021580053	WITHOUT_CLASSIFICATION	3.1997841994737495E-5	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999933085001748	WITHOUT_CLASSIFICATION	6.691499825287922E-6	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999972499430153	WITHOUT_CLASSIFICATION	2.7500569846479188E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999997897000282	WITHOUT_CLASSIFICATION	2.102999718265003E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999613754071669	WITHOUT_CLASSIFICATION	3.862459283306601E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999956658233853	WITHOUT_CLASSIFICATION	4.334176614712788E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999923884738138	WITHOUT_CLASSIFICATION	7.611526186237186E-6	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999997269201467	WITHOUT_CLASSIFICATION	2.7307985329464714E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995295366257	WITHOUT_CLASSIFICATION	4.7046337425621413E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999976737645745	WITHOUT_CLASSIFICATION	2.3262354254685447E-6	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999958998653885	WITHOUT_CLASSIFICATION	4.100134611503262E-6	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999982241436536	WITHOUT_CLASSIFICATION	1.7758563464593335E-6	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.999997931911809	WITHOUT_CLASSIFICATION	2.0680881911015192E-6	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9999044363816124	WITHOUT_CLASSIFICATION	9.556361838756446E-5	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999963061521862	WITHOUT_CLASSIFICATION	3.6938478138653566E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999996747956266	WITHOUT_CLASSIFICATION	3.2520437347666245E-7	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999990896738495	WITHOUT_CLASSIFICATION	9.10326150490899E-7	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999778935574849	WITHOUT_CLASSIFICATION	2.210644251510463E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999988768253012	WITHOUT_CLASSIFICATION	1.1231746988542395E-6	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999922801880653	WITHOUT_CLASSIFICATION	7.719811934596737E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999974940118601	WITHOUT_CLASSIFICATION	2.505988139844745E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999965997181711	WITHOUT_CLASSIFICATION	3.400281828844386E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999923884738138	WITHOUT_CLASSIFICATION	7.611526186237186E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999978688953136	WITHOUT_CLASSIFICATION	2.1311046864508456E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999978688953136	WITHOUT_CLASSIFICATION	2.1311046864508456E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999965997181711	WITHOUT_CLASSIFICATION	3.400281828844386E-6	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999849746632483	WITHOUT_CLASSIFICATION	1.502533675164958E-5	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.999999959800042	WITHOUT_CLASSIFICATION	4.0199958057584234E-8	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999986470236722	WITHOUT_CLASSIFICATION	1.352976327794733E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999985739608569	WITHOUT_CLASSIFICATION	1.4260391431323015E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999958308498671	WITHOUT_CLASSIFICATION	4.169150132935831E-6	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999608196696133	WITHOUT_CLASSIFICATION	3.918033038675634E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999934046118231	WITHOUT_CLASSIFICATION	6.5953881768983274E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999876939106521	WITHOUT_CLASSIFICATION	1.2306089347928843E-5	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999948823525885	WITHOUT_CLASSIFICATION	5.117647411485273E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999957398940204	WITHOUT_CLASSIFICATION	4.260105979646736E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9986051017255673	WITHOUT_CLASSIFICATION	0.0013948982744327603	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999993300792501	WITHOUT_CLASSIFICATION	6.699207499213927E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999975979258513	WITHOUT_CLASSIFICATION	2.402074148774014E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999975979258513	WITHOUT_CLASSIFICATION	2.402074148774014E-6	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999994375549549	WITHOUT_CLASSIFICATION	5.624450450673274E-7	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999931412893535	WITHOUT_CLASSIFICATION	6.858710646469127E-6	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999484885278872	WITHOUT_CLASSIFICATION	5.151147211277529E-5	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999997899980576	WITHOUT_CLASSIFICATION	2.1000194244242323E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999997899980576	WITHOUT_CLASSIFICATION	2.1000194244242323E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.999769723087566	WITHOUT_CLASSIFICATION	2.3027691243396865E-4	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.999769723087566	WITHOUT_CLASSIFICATION	2.3027691243396865E-4	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999948998973205	WITHOUT_CLASSIFICATION	5.10010267954542E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999827202380116	WITHOUT_CLASSIFICATION	1.7279761988403936E-5	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999925930744124	WITHOUT_CLASSIFICATION	7.406925587657738E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999844120659561	WITHOUT_CLASSIFICATION	1.5587934043889453E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999980065512885	WITHOUT_CLASSIFICATION	1.993448711541814E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999976035371255	WITHOUT_CLASSIFICATION	2.396462874546384E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999996301474608	WITHOUT_CLASSIFICATION	3.6985253906649314E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999948998973205	WITHOUT_CLASSIFICATION	5.10010267954542E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999997692662219	WITHOUT_CLASSIFICATION	2.3073377797383324E-7	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999827202380116	WITHOUT_CLASSIFICATION	1.7279761988403936E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999993131051611	WITHOUT_CLASSIFICATION	6.868948389048776E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999925930744124	WITHOUT_CLASSIFICATION	7.406925587657738E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999844120659561	WITHOUT_CLASSIFICATION	1.5587934043889453E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999980065512885	WITHOUT_CLASSIFICATION	1.993448711541814E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.999904488725524	WITHOUT_CLASSIFICATION	9.551127447606774E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999966840377948	WITHOUT_CLASSIFICATION	3.3159622050154208E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999969770736699	WITHOUT_CLASSIFICATION	3.0229263302243844E-6	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999978407368977	WITHOUT_CLASSIFICATION	2.159263102281793E-6	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999981968963321	WITHOUT_CLASSIFICATION	1.8031036678986558E-6	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999956034273529	WITHOUT_CLASSIFICATION	4.396572647083609E-6	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999996583889308	WITHOUT_CLASSIFICATION	3.4161106920859024E-7	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999739216133009	WITHOUT_CLASSIFICATION	2.6078386699036192E-5	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999849112023498	WITHOUT_CLASSIFICATION	1.5088797650214287E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999884054333676	WITHOUT_CLASSIFICATION	1.1594566632328885E-5	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999864952136005	WITHOUT_CLASSIFICATION	1.3504786399423777E-5	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999943602653422	WITHOUT_CLASSIFICATION	5.6397346578225785E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999897261044485	WITHOUT_CLASSIFICATION	1.0273895551423888E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9995622802502074	WITHOUT_CLASSIFICATION	4.377197497924994E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999820736610715	WITHOUT_CLASSIFICATION	1.792633892842495E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999856178857086	WITHOUT_CLASSIFICATION	1.438211429139248E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999894452605943	WITHOUT_CLASSIFICATION	1.0554739405674178E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999911810474489	WITHOUT_CLASSIFICATION	8.818952551079166E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999315671907988	WITHOUT_CLASSIFICATION	6.843280920118577E-5	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999834496534149	WITHOUT_CLASSIFICATION	1.6550346585063474E-5	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9997904020674974	WITHOUT_CLASSIFICATION	2.095979325027216E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999944046857538	WITHOUT_CLASSIFICATION	5.595314246172437E-6	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999939407293051	WITHOUT_CLASSIFICATION	6.059270694827237E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999974343035004	WITHOUT_CLASSIFICATION	2.5656964995478257E-6	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999952893780142	WITHOUT_CLASSIFICATION	4.710621985718903E-6	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999980990493134	WITHOUT_CLASSIFICATION	1.90095068664203E-6	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999973345794917	WITHOUT_CLASSIFICATION	2.66542050827726E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999992989981169	WITHOUT_CLASSIFICATION	7.010018830703101E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9998396788534241	WITHOUT_CLASSIFICATION	1.6032114657597615E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999987496280327	WITHOUT_CLASSIFICATION	1.2503719672986454E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999958308498671	WITHOUT_CLASSIFICATION	4.169150132935831E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999791851154146	WITHOUT_CLASSIFICATION	2.0814884585339817E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999975033297884	WITHOUT_CLASSIFICATION	2.49667021162171E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999916236124535	WITHOUT_CLASSIFICATION	8.376387546343516E-6	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.999998532498071	WITHOUT_CLASSIFICATION	1.467501928933101E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975766677808	WITHOUT_CLASSIFICATION	2.423332219236491E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999998744825691	WITHOUT_CLASSIFICATION	1.2551743083726554E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999999837113003	WITHOUT_CLASSIFICATION	1.6288699693414702E-8	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999998083164061	WITHOUT_CLASSIFICATION	1.916835938607875E-7	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999983495558532	WITHOUT_CLASSIFICATION	1.6504441467981743E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999999070250076	WITHOUT_CLASSIFICATION	9.297499240605492E-8	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.999990468126781	WITHOUT_CLASSIFICATION	9.531873218896558E-6	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999996433736167	WITHOUT_CLASSIFICATION	3.566263832760039E-7	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999998321238713	WITHOUT_CLASSIFICATION	1.678761286836714E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999984072890747	WITHOUT_CLASSIFICATION	1.5927109251990254E-6	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999841536031757	WITHOUT_CLASSIFICATION	1.584639682434568E-5	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999996762691378	WITHOUT_CLASSIFICATION	3.2373086222152744E-7	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999996279659152	WITHOUT_CLASSIFICATION	3.720340847904602E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999943602653422	WITHOUT_CLASSIFICATION	5.6397346578225785E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999897261044485	WITHOUT_CLASSIFICATION	1.0273895551423888E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9995622802502074	WITHOUT_CLASSIFICATION	4.377197497924994E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999820736610715	WITHOUT_CLASSIFICATION	1.792633892842495E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999856178857086	WITHOUT_CLASSIFICATION	1.438211429139248E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999894452605943	WITHOUT_CLASSIFICATION	1.0554739405674178E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999790947531434	WITHOUT_CLASSIFICATION	2.0905246856557135E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999911810474489	WITHOUT_CLASSIFICATION	8.818952551079166E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999992989981169	WITHOUT_CLASSIFICATION	7.010018830703101E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9998396788534241	WITHOUT_CLASSIFICATION	1.6032114657597615E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999987496280327	WITHOUT_CLASSIFICATION	1.2503719672986454E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999901367674665	WITHOUT_CLASSIFICATION	9.863232533437604E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999901367674665	WITHOUT_CLASSIFICATION	9.863232533437604E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999791851154146	WITHOUT_CLASSIFICATION	2.0814884585339817E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999975033297884	WITHOUT_CLASSIFICATION	2.49667021162171E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999916236124535	WITHOUT_CLASSIFICATION	8.376387546343516E-6	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999855710261315	WITHOUT_CLASSIFICATION	1.4428973868470263E-5	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9999081414158861	WITHOUT_CLASSIFICATION	9.185858411395965E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999981118687881	WITHOUT_CLASSIFICATION	1.8881312118376364E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999992472619247	WITHOUT_CLASSIFICATION	7.527380752919764E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999963853410516	WITHOUT_CLASSIFICATION	3.614658948421562E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999829662284225	WITHOUT_CLASSIFICATION	1.7033771577484244E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999934528537702	WITHOUT_CLASSIFICATION	6.547146229873179E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999951073616843	WITHOUT_CLASSIFICATION	4.892638315704032E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.999944838877037	WITHOUT_CLASSIFICATION	5.516112296310482E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.999997738333625	WITHOUT_CLASSIFICATION	2.2616663749158947E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999515201150322	WITHOUT_CLASSIFICATION	4.84798849676675E-5	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999821797144409	WITHOUT_CLASSIFICATION	1.782028555904722E-5	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999984214364631	WITHOUT_CLASSIFICATION	1.5785635368867394E-6	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999880679172489	WITHOUT_CLASSIFICATION	1.1932082751019631E-5	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999971700606924	WITHOUT_CLASSIFICATION	2.8299393075786393E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.999993839161929	WITHOUT_CLASSIFICATION	6.160838071131139E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999996597098297	WITHOUT_CLASSIFICATION	3.402901702575006E-7	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999818338178482	WITHOUT_CLASSIFICATION	1.8166182151734765E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999823028485898	WITHOUT_CLASSIFICATION	1.7697151410106868E-5	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999915935954556	WITHOUT_CLASSIFICATION	8.406404544395352E-6	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999933163691795	WITHOUT_CLASSIFICATION	6.683630820382957E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999982336351871	WITHOUT_CLASSIFICATION	1.7663648128509873E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999979836877226	WITHOUT_CLASSIFICATION	2.016312277369131E-6	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.999998651187804	WITHOUT_CLASSIFICATION	1.3488121959963862E-6	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999998129127612	WITHOUT_CLASSIFICATION	1.8708723878647907E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999921859950388	WITHOUT_CLASSIFICATION	7.81400496127357E-6	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999998039084634	WITHOUT_CLASSIFICATION	1.9609153664515555E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999949519079872	WITHOUT_CLASSIFICATION	5.048092012936911E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9999128780616474	WITHOUT_CLASSIFICATION	8.712193835258633E-5	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999969738235329	WITHOUT_CLASSIFICATION	3.0261764671582548E-6	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.999933873956533	WITHOUT_CLASSIFICATION	6.612604346698354E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999973486811029	WITHOUT_CLASSIFICATION	2.651318897125343E-6	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999999813024737	WITHOUT_CLASSIFICATION	1.869752636825187E-8	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.999992974663132	WITHOUT_CLASSIFICATION	7.025336868075757E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999993131051611	WITHOUT_CLASSIFICATION	6.868948389048776E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999807733306583	WITHOUT_CLASSIFICATION	1.922666934179898E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.999999512913624	WITHOUT_CLASSIFICATION	4.870863759720323E-7	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999994204310845	WITHOUT_CLASSIFICATION	5.795689155499834E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.999972452463036	WITHOUT_CLASSIFICATION	2.7547536963979244E-5	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999907795404277	WITHOUT_CLASSIFICATION	9.220459572334105E-6	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999867577648541	WITHOUT_CLASSIFICATION	1.3242235145893948E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999991017426803	WITHOUT_CLASSIFICATION	8.982573197024331E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999991017426803	WITHOUT_CLASSIFICATION	8.982573197024331E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999991017426803	WITHOUT_CLASSIFICATION	8.982573197024331E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999991017426803	WITHOUT_CLASSIFICATION	8.982573197024331E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999991017426803	WITHOUT_CLASSIFICATION	8.982573197024331E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999991017426803	WITHOUT_CLASSIFICATION	8.982573197024331E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999974063193221	WITHOUT_CLASSIFICATION	2.5936806779184716E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999957263836031	WITHOUT_CLASSIFICATION	4.273616396941789E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999856646688235	WITHOUT_CLASSIFICATION	1.4335331176302618E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999856646688235	WITHOUT_CLASSIFICATION	1.4335331176302618E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999856646688235	WITHOUT_CLASSIFICATION	1.4335331176302618E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999995077992814	WITHOUT_CLASSIFICATION	4.92200718553354E-7	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999996881151161	WITHOUT_CLASSIFICATION	3.1188488387258257E-7	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999367319192064	WITHOUT_CLASSIFICATION	6.326808079357076E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998925685280856	WITHOUT_CLASSIFICATION	1.0743147191438129E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998925685280856	WITHOUT_CLASSIFICATION	1.0743147191438129E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999978855940901	WITHOUT_CLASSIFICATION	2.114405909869634E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999996612100626	WITHOUT_CLASSIFICATION	3.387899375187994E-7	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999797085739188	WITHOUT_CLASSIFICATION	2.0291426081230424E-5	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999987324914777	WITHOUT_CLASSIFICATION	1.2675085222041404E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999783712211636	WITHOUT_CLASSIFICATION	2.1628778836449574E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999994245395661	WITHOUT_CLASSIFICATION	5.754604338269986E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999994245395661	WITHOUT_CLASSIFICATION	5.754604338269986E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999994245395661	WITHOUT_CLASSIFICATION	5.754604338269986E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999997370591885	WITHOUT_CLASSIFICATION	2.6294081151438794E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978529466612	WITHOUT_CLASSIFICATION	2.147053338786915E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999995273911136	WITHOUT_CLASSIFICATION	4.7260888640869343E-7	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999998434227451	WITHOUT_CLASSIFICATION	1.565772549068591E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999967072455969	WITHOUT_CLASSIFICATION	3.2927544031513346E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999981014063639	WITHOUT_CLASSIFICATION	1.898593636089415E-6	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998865066040776	WITHOUT_CLASSIFICATION	1.1349339592227541E-4	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998865066040776	WITHOUT_CLASSIFICATION	1.1349339592227541E-4	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999978765413801	WITHOUT_CLASSIFICATION	2.1234586199913813E-6	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999989062613052	WITHOUT_CLASSIFICATION	1.0937386948505032E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999996548835931	WITHOUT_CLASSIFICATION	3.4511640694242124E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999635249537386	WITHOUT_CLASSIFICATION	3.6475046261336144E-5	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999759632636429	WITHOUT_CLASSIFICATION	2.4036736357088746E-5	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999994120440137	WITHOUT_CLASSIFICATION	5.8795598634433E-7	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999998337292064	WITHOUT_CLASSIFICATION	1.66270793526593E-7	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999512362691304	WITHOUT_CLASSIFICATION	4.8763730869551634E-5	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999992223981309	WITHOUT_CLASSIFICATION	7.776018692225394E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999997759489572	WITHOUT_CLASSIFICATION	2.2405104271835074E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999970709199592	WITHOUT_CLASSIFICATION	2.929080040794611E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999970709199592	WITHOUT_CLASSIFICATION	2.929080040794611E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999970709199592	WITHOUT_CLASSIFICATION	2.929080040794611E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999970709199592	WITHOUT_CLASSIFICATION	2.929080040794611E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999970709199592	WITHOUT_CLASSIFICATION	2.929080040794611E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999882825288473	WITHOUT_CLASSIFICATION	1.1717471152601696E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999882825288473	WITHOUT_CLASSIFICATION	1.1717471152601696E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999882825288473	WITHOUT_CLASSIFICATION	1.1717471152601696E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999882825288473	WITHOUT_CLASSIFICATION	1.1717471152601696E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999988127704891	WITHOUT_CLASSIFICATION	1.187229510956979E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999917544956939	WITHOUT_CLASSIFICATION	8.245504306089503E-6	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9996567215211489	WITHOUT_CLASSIFICATION	3.432784788510567E-4	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999522346341869	WITHOUT_CLASSIFICATION	4.776536581308084E-5	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999999236179048	WITHOUT_CLASSIFICATION	7.638209525148541E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999523882998175	WITHOUT_CLASSIFICATION	4.761170018245079E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999998925285827	WITHOUT_CLASSIFICATION	1.0747141732411515E-7	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999994049899694	WITHOUT_CLASSIFICATION	5.950100306037877E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999967404603802	WITHOUT_CLASSIFICATION	3.2595396197223503E-6	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999978295638356	WITHOUT_CLASSIFICATION	2.1704361643701855E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999528848453857	WITHOUT_CLASSIFICATION	4.711515461418715E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999952106061903	WITHOUT_CLASSIFICATION	4.789393809679799E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999793985924958	WITHOUT_CLASSIFICATION	2.0601407504209445E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978181343113	WITHOUT_CLASSIFICATION	2.1818656886878863E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978181343113	WITHOUT_CLASSIFICATION	2.1818656886878863E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978181343113	WITHOUT_CLASSIFICATION	2.1818656886878863E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999996298935367	WITHOUT_CLASSIFICATION	3.7010646328425076E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999996298935367	WITHOUT_CLASSIFICATION	3.7010646328425076E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999845030809904	WITHOUT_CLASSIFICATION	1.5496919009568734E-5	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9995831586237172	WITHOUT_CLASSIFICATION	4.1684137628286217E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9997971564082017	WITHOUT_CLASSIFICATION	2.0284359179845903E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998391160925515	WITHOUT_CLASSIFICATION	1.6088390744853156E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998391160925515	WITHOUT_CLASSIFICATION	1.6088390744853156E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998391160925515	WITHOUT_CLASSIFICATION	1.6088390744853156E-4	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.999969053549235	WITHOUT_CLASSIFICATION	3.09464507650305E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999988623040259	WITHOUT_CLASSIFICATION	1.1376959740477504E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999947711792228	WITHOUT_CLASSIFICATION	5.228820777270999E-6	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.999962314662752	WITHOUT_CLASSIFICATION	3.768533724804017E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999675251899964	WITHOUT_CLASSIFICATION	3.247481000362689E-5	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999850714272005	WITHOUT_CLASSIFICATION	1.49285727995156E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999993847939919	WITHOUT_CLASSIFICATION	6.152060081423835E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999995952822613	WITHOUT_CLASSIFICATION	4.0471773855606844E-7	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9996108393101257	WITHOUT_CLASSIFICATION	3.8916068987434585E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999247615965976	WITHOUT_CLASSIFICATION	7.523840340246257E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9999247615965976	WITHOUT_CLASSIFICATION	7.523840340246257E-5	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.999980707287246	WITHOUT_CLASSIFICATION	1.9292712754085734E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999603951385336	WITHOUT_CLASSIFICATION	3.9604861466296934E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998079083456	WITHOUT_CLASSIFICATION	1.920916543542595E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998079083456	WITHOUT_CLASSIFICATION	1.920916543542595E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998079083456	WITHOUT_CLASSIFICATION	1.920916543542595E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998079083456	WITHOUT_CLASSIFICATION	1.920916543542595E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998079083456	WITHOUT_CLASSIFICATION	1.920916543542595E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999976494290845	WITHOUT_CLASSIFICATION	2.3505709154809555E-6	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.999874901695341	WITHOUT_CLASSIFICATION	1.2509830465895578E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999976628496744	WITHOUT_CLASSIFICATION	2.3371503256584613E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999998918159389	WITHOUT_CLASSIFICATION	1.0818406109739618E-6	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999796216717042	WITHOUT_CLASSIFICATION	2.0378328295789425E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999979566658063	WITHOUT_CLASSIFICATION	2.0433341938482584E-6	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999989563286079	WITHOUT_CLASSIFICATION	1.0436713920280542E-6	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999987855287519	WITHOUT_CLASSIFICATION	1.214471248077705E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999545354532084	WITHOUT_CLASSIFICATION	4.546454679152528E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999545354532084	WITHOUT_CLASSIFICATION	4.546454679152528E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999999901338764	WITHOUT_CLASSIFICATION	9.866123660469108E-9	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.999997279578673	WITHOUT_CLASSIFICATION	2.7204213270223682E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9997756853715253	WITHOUT_CLASSIFICATION	2.2431462847470387E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9997756853715253	WITHOUT_CLASSIFICATION	2.2431462847470387E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999989912158512	WITHOUT_CLASSIFICATION	1.0087841487524717E-6	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999855851316128	WITHOUT_CLASSIFICATION	1.4414868387096175E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999984569413344	WITHOUT_CLASSIFICATION	1.5430586656197257E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999108220310597	WITHOUT_CLASSIFICATION	8.917796894019502E-5	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999969814626439	WITHOUT_CLASSIFICATION	3.0185373559987828E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999070159216	WITHOUT_CLASSIFICATION	9.298407852812806E-8	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999993596304704	WITHOUT_CLASSIFICATION	6.403695295478137E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999276965540161	WITHOUT_CLASSIFICATION	7.230344598378907E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999944424496126	WITHOUT_CLASSIFICATION	5.557550387401449E-6	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.999998454568887	WITHOUT_CLASSIFICATION	1.5454311129065142E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999981892417211	WITHOUT_CLASSIFICATION	1.8107582788957458E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999981892417211	WITHOUT_CLASSIFICATION	1.8107582788957458E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999981892417211	WITHOUT_CLASSIFICATION	1.8107582788957458E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999981892417211	WITHOUT_CLASSIFICATION	1.8107582788957458E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999733662673017	WITHOUT_CLASSIFICATION	2.6633732698194703E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999538227245441	WITHOUT_CLASSIFICATION	4.6177275455926455E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999994753948215	WITHOUT_CLASSIFICATION	5.246051785493822E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998460952606	WITHOUT_CLASSIFICATION	1.5390473940023713E-7	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999995251308985	WITHOUT_CLASSIFICATION	4.748691015615298E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999988314220618	WITHOUT_CLASSIFICATION	1.1685779381980384E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999988314220618	WITHOUT_CLASSIFICATION	1.1685779381980384E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999988314220618	WITHOUT_CLASSIFICATION	1.1685779381980384E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999988314220618	WITHOUT_CLASSIFICATION	1.1685779381980384E-6	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9573726349544521	WITHOUT_CLASSIFICATION	0.042627365045547885	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999434676715314	WITHOUT_CLASSIFICATION	5.653232846853548E-5	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999998116420116	WITHOUT_CLASSIFICATION	1.883579883333077E-7	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999962738792296	WITHOUT_CLASSIFICATION	3.7261207705041624E-6	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999733584413	WITHOUT_CLASSIFICATION	2.6641558765031392E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999758626005714	WITHOUT_CLASSIFICATION	2.4137399428654427E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999987498957396	WITHOUT_CLASSIFICATION	1.2501042604330732E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999603119681078	WITHOUT_CLASSIFICATION	3.9688031892215956E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999603119681078	WITHOUT_CLASSIFICATION	3.9688031892215956E-5	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999973233166966	WITHOUT_CLASSIFICATION	2.676683303411911E-6	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999994006348892	WITHOUT_CLASSIFICATION	5.993651108412493E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9999976133158336	WITHOUT_CLASSIFICATION	2.38668416629596E-6	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999981951039004	WITHOUT_CLASSIFICATION	1.8048960996311844E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999998571731129	WITHOUT_CLASSIFICATION	1.4282688713245364E-7	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999997352490335	WITHOUT_CLASSIFICATION	2.647509664959526E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999835894860821	WITHOUT_CLASSIFICATION	1.641051391785322E-5	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999996740086019	WITHOUT_CLASSIFICATION	3.2599139809857845E-7	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999993205185588	WITHOUT_CLASSIFICATION	6.794814412527006E-7	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999948409110302	WITHOUT_CLASSIFICATION	5.159088969737489E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999504223895	WITHOUT_CLASSIFICATION	4.9577610472391675E-8	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999950028018808	WITHOUT_CLASSIFICATION	4.9971981191791016E-6	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999934233038	WITHOUT_CLASSIFICATION	6.5766961345628476E-9	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999734887450552	WITHOUT_CLASSIFICATION	2.6511254944819156E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999734887450552	WITHOUT_CLASSIFICATION	2.6511254944819156E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999999261492224	WITHOUT_CLASSIFICATION	7.385077759415404E-7	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.999998577998454	WITHOUT_CLASSIFICATION	1.422001546010632E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999973501510887	WITHOUT_CLASSIFICATION	2.6498489113666455E-6	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999994423140343	WITHOUT_CLASSIFICATION	5.576859657033878E-7	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999774584866058	WITHOUT_CLASSIFICATION	2.2541513394190878E-5	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999373098820271	WITHOUT_CLASSIFICATION	6.2690117972834E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999983715181436	WITHOUT_CLASSIFICATION	1.6284818564408747E-6	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999713238363264	WITHOUT_CLASSIFICATION	2.8676163673651165E-5	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999982300797867	WITHOUT_CLASSIFICATION	1.7699202132891166E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999998536901287	WITHOUT_CLASSIFICATION	1.463098713522179E-7	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999874016237355	WITHOUT_CLASSIFICATION	1.2598376264598806E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999873569739066	WITHOUT_CLASSIFICATION	1.2643026093462053E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999873569739066	WITHOUT_CLASSIFICATION	1.2643026093462053E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999665540186791	WITHOUT_CLASSIFICATION	3.34459813209412E-5	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999652724251	WITHOUT_CLASSIFICATION	3.472757489182751E-8	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.999999111478597	WITHOUT_CLASSIFICATION	8.885214029621353E-7	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999604178697292	WITHOUT_CLASSIFICATION	3.958213027077609E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999986488517759	WITHOUT_CLASSIFICATION	1.351148224068329E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999428837151441	WITHOUT_CLASSIFICATION	5.7116284855875724E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999994308749157	WITHOUT_CLASSIFICATION	5.691250842573215E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.999994873211258	WITHOUT_CLASSIFICATION	5.1267887420115355E-6	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.99999730743957	WITHOUT_CLASSIFICATION	2.69256042998947E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999996735881869	WITHOUT_CLASSIFICATION	3.2641181319075334E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999174679676449	WITHOUT_CLASSIFICATION	8.253203235508212E-5	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999551614154	WITHOUT_CLASSIFICATION	4.48385846235065E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.999999087021952	WITHOUT_CLASSIFICATION	9.129780479612412E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999999880854561	WITHOUT_CLASSIFICATION	1.1914543914852206E-8	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999998246654357	WITHOUT_CLASSIFICATION	1.7533456431092902E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993723602281	WITHOUT_CLASSIFICATION	6.276397718997047E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999896935443667	WITHOUT_CLASSIFICATION	1.0306455633382912E-5	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999978254234193	WITHOUT_CLASSIFICATION	2.174576580730113E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999962363035915	WITHOUT_CLASSIFICATION	3.76369640842713E-6	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999987842710906	WITHOUT_CLASSIFICATION	1.2157289094290288E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999999580738149	WITHOUT_CLASSIFICATION	4.192618502158803E-8	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999838998398473	WITHOUT_CLASSIFICATION	1.6100160152696824E-5	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999828001948984	WITHOUT_CLASSIFICATION	1.7199805101662132E-5	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999990188115792	WITHOUT_CLASSIFICATION	9.81188420887176E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999517986490216	WITHOUT_CLASSIFICATION	4.820135097829877E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999935338379592	WITHOUT_CLASSIFICATION	6.466162040738738E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999948560416229	WITHOUT_CLASSIFICATION	5.143958377114826E-6	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999991566139931	WITHOUT_CLASSIFICATION	8.433860069671738E-7	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999999331118663	WITHOUT_CLASSIFICATION	6.688813367532161E-8	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999998390308715	WITHOUT_CLASSIFICATION	1.6096912847758286E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999973983350194	WITHOUT_CLASSIFICATION	2.6016649805743883E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999956598608595	WITHOUT_CLASSIFICATION	4.340139140522721E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999956598608595	WITHOUT_CLASSIFICATION	4.340139140522721E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999956598608595	WITHOUT_CLASSIFICATION	4.340139140522721E-6	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999836925744136	WITHOUT_CLASSIFICATION	1.630742558647886E-5	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.999971321430587	WITHOUT_CLASSIFICATION	2.8678569413011726E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.99999817995023	WITHOUT_CLASSIFICATION	1.8200497699742886E-6	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999908183486318	WITHOUT_CLASSIFICATION	9.181651368193912E-6	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999993407382595	WITHOUT_CLASSIFICATION	6.592617404841167E-7	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9995030858098316	WITHOUT_CLASSIFICATION	4.969141901684258E-4	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999977495681793	WITHOUT_CLASSIFICATION	2.2504318206312618E-6	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999953682829047	WITHOUT_CLASSIFICATION	4.631717095343083E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999979312831674	WITHOUT_CLASSIFICATION	2.0687168326677888E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999979312831674	WITHOUT_CLASSIFICATION	2.0687168326677888E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999979312831674	WITHOUT_CLASSIFICATION	2.0687168326677888E-6	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999999296054033	WITHOUT_CLASSIFICATION	7.039459672477571E-8	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999918774651358	WITHOUT_CLASSIFICATION	8.122534864042574E-6	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999213711929238	WITHOUT_CLASSIFICATION	7.862880707616601E-5	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999998142694528	WITHOUT_CLASSIFICATION	1.8573054728712501E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999998230432343	WITHOUT_CLASSIFICATION	1.769567656373811E-7	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999980304285996	WITHOUT_CLASSIFICATION	1.96957140043643E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999979003812507	WITHOUT_CLASSIFICATION	2.0996187493549258E-6	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.999998388619271	WITHOUT_CLASSIFICATION	1.611380728874964E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999649504163	WITHOUT_CLASSIFICATION	3.50495836483711E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999747194798033	WITHOUT_CLASSIFICATION	2.528052019660063E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999848946206018	WITHOUT_CLASSIFICATION	1.5105379398174597E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999996597098297	WITHOUT_CLASSIFICATION	3.402901702575006E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999996597098297	WITHOUT_CLASSIFICATION	3.402901702575006E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999603951265	WITHOUT_CLASSIFICATION	3.9604873397590534E-8	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.999998610959878	WITHOUT_CLASSIFICATION	1.3890401220216146E-6	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999999926727063	WITHOUT_CLASSIFICATION	7.327293660563347E-9	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.99999638075375	WITHOUT_CLASSIFICATION	3.6192462501659162E-6	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999743751787811	WITHOUT_CLASSIFICATION	2.5624821218881956E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999968202509795	WITHOUT_CLASSIFICATION	3.1797490205584134E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997868818016	WITHOUT_CLASSIFICATION	2.1311819838680264E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997868818016	WITHOUT_CLASSIFICATION	2.1311819838680264E-7	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999990671480612	WITHOUT_CLASSIFICATION	9.328519387313991E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999900511532651	WITHOUT_CLASSIFICATION	9.948846734888488E-6	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999439087022121	WITHOUT_CLASSIFICATION	5.609129778801049E-5	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999999784895646	WITHOUT_CLASSIFICATION	2.1510435429038508E-8	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999998677716774	WITHOUT_CLASSIFICATION	1.3222832263300862E-7	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999339322412588	WITHOUT_CLASSIFICATION	6.606775874117849E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999696269362643	WITHOUT_CLASSIFICATION	3.037306373567622E-5	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999982677526141	WITHOUT_CLASSIFICATION	1.7322473858194268E-6	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999960942555728	WITHOUT_CLASSIFICATION	3.905744427225274E-6	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999981426153705	WITHOUT_CLASSIFICATION	1.8573846296160719E-6	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999471146664	WITHOUT_CLASSIFICATION	5.288533356613388E-8	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999958657142138	WITHOUT_CLASSIFICATION	4.134285786206177E-6	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999986252089605	WITHOUT_CLASSIFICATION	1.3747910394655525E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999992749803758	WITHOUT_CLASSIFICATION	7.250196243536934E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999992749803758	WITHOUT_CLASSIFICATION	7.250196243536934E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999992749803758	WITHOUT_CLASSIFICATION	7.250196243536934E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999992749803758	WITHOUT_CLASSIFICATION	7.250196243536934E-7	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999992701987946	WITHOUT_CLASSIFICATION	7.298012053087233E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999995810355057	WITHOUT_CLASSIFICATION	4.189644943272398E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9999809465501288	WITHOUT_CLASSIFICATION	1.905344987118671E-5	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999832953840194	WITHOUT_CLASSIFICATION	1.6704615980562318E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999421128466	WITHOUT_CLASSIFICATION	5.788715352574409E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999996297726872	WITHOUT_CLASSIFICATION	3.70227312811049E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.999776345994517	WITHOUT_CLASSIFICATION	2.2365400548284632E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999976009787995	WITHOUT_CLASSIFICATION	2.3990212004504607E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999981235622237	WITHOUT_CLASSIFICATION	1.8764377763811646E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999845685648174	WITHOUT_CLASSIFICATION	1.543143518258204E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999943144631733	WITHOUT_CLASSIFICATION	5.685536826671316E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999943144631733	WITHOUT_CLASSIFICATION	5.685536826671316E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999943144631733	WITHOUT_CLASSIFICATION	5.685536826671316E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999921094051135	WITHOUT_CLASSIFICATION	7.890594886572614E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999512700177485	WITHOUT_CLASSIFICATION	4.872998225144903E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.999997075138812	WITHOUT_CLASSIFICATION	2.9248611880404725E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980159513324	WITHOUT_CLASSIFICATION	1.9840486675571766E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980159513324	WITHOUT_CLASSIFICATION	1.9840486675571766E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999992914943875	WITHOUT_CLASSIFICATION	7.085056124898364E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999921094051135	WITHOUT_CLASSIFICATION	7.890594886572614E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999996343929974	WITHOUT_CLASSIFICATION	3.6560700253629196E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999999419459961	WITHOUT_CLASSIFICATION	5.8054003835164887E-8	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999985578463144	WITHOUT_CLASSIFICATION	1.4421536855930895E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999934086614265	WITHOUT_CLASSIFICATION	6.591338573412941E-6	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999392579621167	WITHOUT_CLASSIFICATION	6.074203788336254E-5	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999934789443085	WITHOUT_CLASSIFICATION	6.521055691488333E-6	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.999994083669076	WITHOUT_CLASSIFICATION	5.916330923973013E-6	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9997852454452062	WITHOUT_CLASSIFICATION	2.1475455479374862E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999186185842543	WITHOUT_CLASSIFICATION	8.138141574559133E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999186185842543	WITHOUT_CLASSIFICATION	8.138141574559133E-5	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.999713035020874	WITHOUT_CLASSIFICATION	2.869649791260171E-4	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.999997411901413	WITHOUT_CLASSIFICATION	2.58809858687748E-6	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999788558119362	WITHOUT_CLASSIFICATION	2.1144188063778474E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999997587031884	WITHOUT_CLASSIFICATION	2.4129681163963105E-7	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999997989525906	WITHOUT_CLASSIFICATION	2.0104740945313506E-7	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9999651059713008	WITHOUT_CLASSIFICATION	3.4894028699186726E-5	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9993961747727271	WITHOUT_CLASSIFICATION	6.038252272728148E-4	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999965710007522	WITHOUT_CLASSIFICATION	3.4289992478117837E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999970688864173	WITHOUT_CLASSIFICATION	2.9311135827729893E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999926753263745	WITHOUT_CLASSIFICATION	7.324673625516678E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999981666436502	WITHOUT_CLASSIFICATION	1.8333563497972027E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999845685648174	WITHOUT_CLASSIFICATION	1.543143518258204E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999845685648174	WITHOUT_CLASSIFICATION	1.543143518258204E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999999559538651	WITHOUT_CLASSIFICATION	4.404613486700987E-8	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999999756931923	WITHOUT_CLASSIFICATION	2.4306807711522514E-8	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999996957137812	WITHOUT_CLASSIFICATION	3.0428621876348905E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999933430101736	WITHOUT_CLASSIFICATION	6.656989826428732E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999994638743034	WITHOUT_CLASSIFICATION	5.361256966470937E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999970670989619	WITHOUT_CLASSIFICATION	2.932901038101744E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999883471389	WITHOUT_CLASSIFICATION	1.165286115170664E-8	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999975878496838	WITHOUT_CLASSIFICATION	2.412150316112656E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999996558239228	WITHOUT_CLASSIFICATION	3.4417607726241897E-7	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999981955684879	WITHOUT_CLASSIFICATION	1.8044315121234282E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999996303856397	WITHOUT_CLASSIFICATION	3.6961436034926527E-7	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999991930327607	WITHOUT_CLASSIFICATION	8.069672392182761E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975766677808	WITHOUT_CLASSIFICATION	2.423332219236491E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999975766677808	WITHOUT_CLASSIFICATION	2.423332219236491E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999979892809967	WITHOUT_CLASSIFICATION	2.01071900332239E-6	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999955374347157	WITHOUT_CLASSIFICATION	4.462565284240831E-6	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999972910910955	WITHOUT_CLASSIFICATION	2.7089089044723027E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999906956961	WITHOUT_CLASSIFICATION	9.304304004213775E-9	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999996745426958	WITHOUT_CLASSIFICATION	3.254573041836244E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999994187054492	WITHOUT_CLASSIFICATION	5.812945508377899E-7	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999993377838284	WITHOUT_CLASSIFICATION	6.622161717057666E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.999985749845275	WITHOUT_CLASSIFICATION	1.4250154725021031E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999762824573779	WITHOUT_CLASSIFICATION	2.3717542622098926E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999999518587611	WITHOUT_CLASSIFICATION	4.814123883716838E-8	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999954261483295	WITHOUT_CLASSIFICATION	4.573851670611877E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999998429920984	WITHOUT_CLASSIFICATION	1.5700790159780537E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999981371388577	WITHOUT_CLASSIFICATION	1.8628611423443577E-6	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999769224766109	WITHOUT_CLASSIFICATION	2.3077523389131527E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.999776345994517	WITHOUT_CLASSIFICATION	2.2365400548284632E-4	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9988619552400418	WITHOUT_CLASSIFICATION	0.0011380447599580836	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998613699697667	WITHOUT_CLASSIFICATION	1.3863003023333812E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998613699697667	WITHOUT_CLASSIFICATION	1.3863003023333812E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9998613699697667	WITHOUT_CLASSIFICATION	1.3863003023333812E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999528187734527	WITHOUT_CLASSIFICATION	4.718122654736601E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999528187734527	WITHOUT_CLASSIFICATION	4.718122654736601E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999982789698761	WITHOUT_CLASSIFICATION	1.7210301238162497E-6	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9972013516242771	WITHOUT_CLASSIFICATION	0.002798648375722897	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999960209608492	WITHOUT_CLASSIFICATION	3.97903915079484E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999991992312552	WITHOUT_CLASSIFICATION	8.007687446813533E-7	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999850271260151	WITHOUT_CLASSIFICATION	1.497287398495915E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999969088583036	WITHOUT_CLASSIFICATION	3.0911416963454865E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.999776345994517	WITHOUT_CLASSIFICATION	2.2365400548284632E-4	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999996784884249	WITHOUT_CLASSIFICATION	3.215115751362464E-7	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999998332059366	WITHOUT_CLASSIFICATION	1.667940634036211E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9999930651007302	WITHOUT_CLASSIFICATION	6.9348992698410055E-6	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9994153691936429	WITHOUT_CLASSIFICATION	5.846308063570976E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999965604307849	WITHOUT_CLASSIFICATION	3.4395692150236457E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999533583722092	WITHOUT_CLASSIFICATION	4.664162779078126E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999977113144567	WITHOUT_CLASSIFICATION	2.2886855432892355E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999970176758954	WITHOUT_CLASSIFICATION	2.982324104515484E-6	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999975637496142	WITHOUT_CLASSIFICATION	2.4362503856907996E-6	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999709129520786	WITHOUT_CLASSIFICATION	2.9087047921384395E-5	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999875564660723	WITHOUT_CLASSIFICATION	1.2443533927582236E-5	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999981843949759	WITHOUT_CLASSIFICATION	1.8156050241722567E-6	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999985555485404	WITHOUT_CLASSIFICATION	1.4444514595542138E-6	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999698859737323	WITHOUT_CLASSIFICATION	3.011402626782733E-5	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.999984501840849	WITHOUT_CLASSIFICATION	1.5498159151083557E-5	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999988810702835	WITHOUT_CLASSIFICATION	1.1189297164966861E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999086397738	WITHOUT_CLASSIFICATION	9.136022608704049E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999545434909	WITHOUT_CLASSIFICATION	4.545650917140348E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999545434909	WITHOUT_CLASSIFICATION	4.545650917140348E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999931371295299	WITHOUT_CLASSIFICATION	6.862870470077428E-6	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.999996903609963	WITHOUT_CLASSIFICATION	3.096390037040989E-6	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999863196390897	WITHOUT_CLASSIFICATION	1.3680360910262157E-5	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9963766194378896	WITHOUT_CLASSIFICATION	0.003623380562110544	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999339897767443	WITHOUT_CLASSIFICATION	6.601022325564546E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999974010060665	WITHOUT_CLASSIFICATION	2.59899393339754E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999974010060665	WITHOUT_CLASSIFICATION	2.59899393339754E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999991295932342	WITHOUT_CLASSIFICATION	8.704067657533772E-7	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999902369646471	WITHOUT_CLASSIFICATION	9.7630353529467E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999969731005237	WITHOUT_CLASSIFICATION	3.0268994762016493E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999969731005237	WITHOUT_CLASSIFICATION	3.0268994762016493E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999769448739	WITHOUT_CLASSIFICATION	2.3055126194340967E-8	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999910594937491	WITHOUT_CLASSIFICATION	8.94050625089974E-6	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999969862692922	WITHOUT_CLASSIFICATION	3.013730707823025E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999104281767	WITHOUT_CLASSIFICATION	8.957182330353007E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9994100447762638	WITHOUT_CLASSIFICATION	5.899552237362419E-4	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999960357971499	WITHOUT_CLASSIFICATION	3.96420285018936E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999961291368596	WITHOUT_CLASSIFICATION	3.87086314033521E-6	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.999999389483613	WITHOUT_CLASSIFICATION	6.105163870232095E-7	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999966016271444	WITHOUT_CLASSIFICATION	3.3983728554862704E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.999999711886217	WITHOUT_CLASSIFICATION	2.8811378304578347E-7	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.999999942428677	WITHOUT_CLASSIFICATION	5.757132313231715E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999984485199737	WITHOUT_CLASSIFICATION	1.5514800264124462E-6	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999972539197175	WITHOUT_CLASSIFICATION	2.7460802823894163E-6	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999996458456321	WITHOUT_CLASSIFICATION	3.5415436799511764E-7	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999989458053564	WITHOUT_CLASSIFICATION	1.0541946436722354E-6	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999987208669695	WITHOUT_CLASSIFICATION	1.2791330305738118E-6	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9891763842937042	WITHOUT_CLASSIFICATION	0.010823615706295763	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999836832001484	WITHOUT_CLASSIFICATION	1.6316799851630344E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9998056661063869	WITHOUT_CLASSIFICATION	1.9433389361313687E-4	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999385889824494	WITHOUT_CLASSIFICATION	6.141101755062568E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999400740418332	WITHOUT_CLASSIFICATION	5.992595816678571E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999400740418332	WITHOUT_CLASSIFICATION	5.992595816678571E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999400740418332	WITHOUT_CLASSIFICATION	5.992595816678571E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999400740418332	WITHOUT_CLASSIFICATION	5.992595816678571E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.999400740418332	WITHOUT_CLASSIFICATION	5.992595816678571E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9992773182664547	WITHOUT_CLASSIFICATION	7.226817335452374E-4	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999984783445	WITHOUT_CLASSIFICATION	1.5216554999372456E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999993332895142	WITHOUT_CLASSIFICATION	6.6671048590275E-7	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999841034377	WITHOUT_CLASSIFICATION	1.5896562325464657E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999978923539656	WITHOUT_CLASSIFICATION	2.1076460342851086E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999978923539656	WITHOUT_CLASSIFICATION	2.1076460342851086E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999978923539656	WITHOUT_CLASSIFICATION	2.1076460342851086E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999978923539656	WITHOUT_CLASSIFICATION	2.1076460342851086E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999969485962215	WITHOUT_CLASSIFICATION	3.051403778608305E-6	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999998393547903	WITHOUT_CLASSIFICATION	1.6064520980652292E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999400923787983	WITHOUT_CLASSIFICATION	5.9907621201689E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999869836960812	WITHOUT_CLASSIFICATION	1.3016303918810659E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999869836960812	WITHOUT_CLASSIFICATION	1.3016303918810659E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999904927565678	WITHOUT_CLASSIFICATION	9.507243432130564E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999993093305227	WITHOUT_CLASSIFICATION	6.906694771550837E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999993093305227	WITHOUT_CLASSIFICATION	6.906694771550837E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999406651050683	WITHOUT_CLASSIFICATION	5.933489493160919E-5	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999987382538877	WITHOUT_CLASSIFICATION	1.2617461123212907E-6	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999799521546694	WITHOUT_CLASSIFICATION	2.004784533065204E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999989515914967	WITHOUT_CLASSIFICATION	1.04840850335494E-6	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999970304452983	WITHOUT_CLASSIFICATION	2.9695547017913564E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999994820061686	WITHOUT_CLASSIFICATION	5.179938314611723E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999994820061686	WITHOUT_CLASSIFICATION	5.179938314611723E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9872427776158885	WITHOUT_CLASSIFICATION	0.012757222384111406	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.999998771780948	WITHOUT_CLASSIFICATION	1.2282190520181846E-6	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999990955581407	WITHOUT_CLASSIFICATION	9.044418593391547E-7	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999965244771715	WITHOUT_CLASSIFICATION	3.475522828536385E-6	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999941640016049	WITHOUT_CLASSIFICATION	5.835998395060148E-6	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999984599760919	WITHOUT_CLASSIFICATION	1.5400239081045778E-6	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999796375039142	WITHOUT_CLASSIFICATION	2.0362496085742997E-5	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999988967023213	WITHOUT_CLASSIFICATION	1.1032976786403757E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999596288468857	WITHOUT_CLASSIFICATION	4.0371153114324696E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999421146671775	WITHOUT_CLASSIFICATION	5.788533282251803E-5	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9999850487098338	WITHOUT_CLASSIFICATION	1.495129016611638E-5	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9999278188163232	WITHOUT_CLASSIFICATION	7.218118367686975E-5	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999974940118601	WITHOUT_CLASSIFICATION	2.505988139844745E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9999847636687389	WITHOUT_CLASSIFICATION	1.5236331261115531E-5	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999996301474608	WITHOUT_CLASSIFICATION	3.6985253906649314E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999997692662219	WITHOUT_CLASSIFICATION	2.3073377797383324E-7	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999835554822025	WITHOUT_CLASSIFICATION	1.644451779747068E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999997829890893	WITHOUT_CLASSIFICATION	2.1701091071097185E-7	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999790947531434	WITHOUT_CLASSIFICATION	2.0905246856557135E-5	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999855019510265	WITHOUT_CLASSIFICATION	1.4498048973328472E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999901367674665	WITHOUT_CLASSIFICATION	9.863232533437604E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999901367674665	WITHOUT_CLASSIFICATION	9.863232533437604E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999958755186864	WITHOUT_CLASSIFICATION	4.124481313586908E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9999982781726044	WITHOUT_CLASSIFICATION	1.7218273955941342E-6	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9995218989376495	WITHOUT_CLASSIFICATION	4.781010623505545E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9902199265077861	WITHOUT_CLASSIFICATION	0.009780073492213872	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9998322105648054	WITHOUT_CLASSIFICATION	1.6778943519455403E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999997108281875	WITHOUT_CLASSIFICATION	2.8917181249571645E-7	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9928597342266662	WITHOUT_CLASSIFICATION	0.007140265773333779	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9993352156094913	WITHOUT_CLASSIFICATION	6.647843905086928E-4	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8119236547494592	DEFECT	0.1880763452505408	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9864539015360267	WITHOUT_CLASSIFICATION	0.013546098463973326	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999972774261693	WITHOUT_CLASSIFICATION	2.722573830801655E-6	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.8524171468753018	DEFECT	0.14758285312469818	WITHOUT_CLASSIFICATION
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8119236547494592	DEFECT	0.1880763452505408	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9970554744179828	WITHOUT_CLASSIFICATION	0.0029445255820171176	DEFECT
