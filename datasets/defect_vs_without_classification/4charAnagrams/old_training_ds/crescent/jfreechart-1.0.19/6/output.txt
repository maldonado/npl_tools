// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999949101950422	WITHOUT_CLASSIFICATION	5.089804957842346E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999560610734934	WITHOUT_CLASSIFICATION	4.393892650665606E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999968794518712	WITHOUT_CLASSIFICATION	3.1205481289183715E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999931501742949	WITHOUT_CLASSIFICATION	6.849825705092963E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999618420544832	WITHOUT_CLASSIFICATION	3.8157945516803755E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999749464490283	WITHOUT_CLASSIFICATION	2.5053550971674655E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999974083788687	WITHOUT_CLASSIFICATION	2.591621131246341E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.999985851480368	WITHOUT_CLASSIFICATION	1.4148519632034076E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999889318041492	WITHOUT_CLASSIFICATION	1.1068195850819872E-5	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999942855823115	WITHOUT_CLASSIFICATION	5.7144176885382315E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999923688684548	WITHOUT_CLASSIFICATION	7.631131545202086E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999856198083319	WITHOUT_CLASSIFICATION	1.438019166812215E-5	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999973964368748	WITHOUT_CLASSIFICATION	2.6035631251497973E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999956485241277	WITHOUT_CLASSIFICATION	4.351475872277813E-6	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999956044615089	WITHOUT_CLASSIFICATION	4.3955384910979505E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999939528818729	WITHOUT_CLASSIFICATION	6.047118127106132E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999997427708734	WITHOUT_CLASSIFICATION	2.5722912654350344E-7	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999995151974158	WITHOUT_CLASSIFICATION	4.848025841412627E-7	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999993066481488	WITHOUT_CLASSIFICATION	6.933518512794296E-7	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997426716752	WITHOUT_CLASSIFICATION	2.5732832473865095E-7	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.999999515010456	WITHOUT_CLASSIFICATION	4.849895440359198E-7	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999993063807636	WITHOUT_CLASSIFICATION	6.936192363270167E-7	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999759212776871	WITHOUT_CLASSIFICATION	2.4078722312852927E-5	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999685457287698	WITHOUT_CLASSIFICATION	3.145427123014983E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999960563717274	WITHOUT_CLASSIFICATION	3.9436282725371365E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999959946265867	WITHOUT_CLASSIFICATION	4.005373413298401E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999452075166113	WITHOUT_CLASSIFICATION	5.479248338875348E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999750870715316	WITHOUT_CLASSIFICATION	2.491292846842138E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999975078026457	WITHOUT_CLASSIFICATION	2.492197354226489E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999740914303847	WITHOUT_CLASSIFICATION	2.5908569615259542E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.999992387068398	WITHOUT_CLASSIFICATION	7.612931601917748E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999967152747499	WITHOUT_CLASSIFICATION	3.2847252500688104E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999967085831789	WITHOUT_CLASSIFICATION	3.2914168210739293E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999023829975736	WITHOUT_CLASSIFICATION	9.761700242639577E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970349199477	WITHOUT_CLASSIFICATION	2.965080052288951E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999981587925018	WITHOUT_CLASSIFICATION	1.8412074981636564E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999925004811002	WITHOUT_CLASSIFICATION	7.499518899819203E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999999791854358	WITHOUT_CLASSIFICATION	2.0814564256362424E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999996940825737	WITHOUT_CLASSIFICATION	3.0591742629889946E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999996940825737	WITHOUT_CLASSIFICATION	3.0591742629889946E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999996940825737	WITHOUT_CLASSIFICATION	3.0591742629889946E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999924927528734	WITHOUT_CLASSIFICATION	7.507247126629781E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999830092	WITHOUT_CLASSIFICATION	1.699079454089021E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999984483556917	WITHOUT_CLASSIFICATION	1.5516443082468198E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999838264810543	WITHOUT_CLASSIFICATION	1.617351894566122E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999454570844455	WITHOUT_CLASSIFICATION	5.454291555454896E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999454570844455	WITHOUT_CLASSIFICATION	5.454291555454896E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999454570844455	WITHOUT_CLASSIFICATION	5.454291555454896E-5	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999997119353852	WITHOUT_CLASSIFICATION	2.880646148395379E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999067089531	WITHOUT_CLASSIFICATION	9.329104692743812E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999876763181448	WITHOUT_CLASSIFICATION	1.2323681855181323E-5	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9999856471079758	WITHOUT_CLASSIFICATION	1.4352892024246554E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999996717847338	WITHOUT_CLASSIFICATION	3.2821526614578124E-7	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.999996827023601	WITHOUT_CLASSIFICATION	3.1729763989166613E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999866840910482	WITHOUT_CLASSIFICATION	1.331590895171476E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999998979154421	WITHOUT_CLASSIFICATION	1.0208455789141916E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999998979154421	WITHOUT_CLASSIFICATION	1.0208455789141916E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998567834709462	WITHOUT_CLASSIFICATION	1.4321652905384142E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9594488950892653	WITHOUT_CLASSIFICATION	0.04055110491073461	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9594488950892653	WITHOUT_CLASSIFICATION	0.04055110491073461	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9594488950892653	WITHOUT_CLASSIFICATION	0.04055110491073461	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9594488950892653	WITHOUT_CLASSIFICATION	0.04055110491073461	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999977883018142	WITHOUT_CLASSIFICATION	2.211698185894544E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999991204013483	WITHOUT_CLASSIFICATION	8.795986515858659E-7	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.99995321672052	WITHOUT_CLASSIFICATION	4.6783279480140246E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.817715794693776	WITHOUT_CLASSIFICATION	0.18228420530622402	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999883168706323	WITHOUT_CLASSIFICATION	1.168312936772219E-5	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999986953596125	WITHOUT_CLASSIFICATION	1.304640387533142E-6	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9997508939569979	WITHOUT_CLASSIFICATION	2.491060430020233E-4	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999890286414693	WITHOUT_CLASSIFICATION	1.097135853058165E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999803993693849	WITHOUT_CLASSIFICATION	1.9600630615102623E-5	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999969107700902	WITHOUT_CLASSIFICATION	3.0892299098118315E-6	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999953097679392	WITHOUT_CLASSIFICATION	4.6902320608287695E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999998723252178	WITHOUT_CLASSIFICATION	1.2767478216823103E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.999998751469498	WITHOUT_CLASSIFICATION	1.2485305019602048E-6	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999991013507585	WITHOUT_CLASSIFICATION	8.986492415507855E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.999999903906196	WITHOUT_CLASSIFICATION	9.609380405853972E-8	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996777862246	WITHOUT_CLASSIFICATION	3.222137753317643E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999999944528589	WITHOUT_CLASSIFICATION	5.547141058104893E-9	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999998737922042	WITHOUT_CLASSIFICATION	1.2620779581934594E-7	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999107280152029	WITHOUT_CLASSIFICATION	8.927198479709884E-4	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999107280152029	WITHOUT_CLASSIFICATION	8.927198479709884E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999685697518803	WITHOUT_CLASSIFICATION	3.1430248119787387E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999932075088654	WITHOUT_CLASSIFICATION	6.7924911344488995E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9998071980130975	WITHOUT_CLASSIFICATION	1.92801986902443E-4	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999999336495916	WITHOUT_CLASSIFICATION	6.635040833581114E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999893850979776	WITHOUT_CLASSIFICATION	1.0614902022347273E-5	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999997506597521	WITHOUT_CLASSIFICATION	2.4934024797299027E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999992165498376	WITHOUT_CLASSIFICATION	7.834501624558873E-7	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999999232638861	WITHOUT_CLASSIFICATION	7.67361139559875E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999652859448394	WITHOUT_CLASSIFICATION	3.4714055160603204E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999579150034	WITHOUT_CLASSIFICATION	4.208499672637181E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9996849185978572	WITHOUT_CLASSIFICATION	3.1508140214272373E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999962921205129	WITHOUT_CLASSIFICATION	3.707879487106047E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999993417587068	WITHOUT_CLASSIFICATION	6.582412932328933E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999813625499535	WITHOUT_CLASSIFICATION	1.863745004643729E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9998641673193934	WITHOUT_CLASSIFICATION	1.3583268060650682E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9998641673193934	WITHOUT_CLASSIFICATION	1.3583268060650682E-4	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999916930845	WITHOUT_CLASSIFICATION	8.306915481226023E-9	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999995362847951	WITHOUT_CLASSIFICATION	4.63715204899633E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9996771380540087	WITHOUT_CLASSIFICATION	3.228619459912699E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9985530283067251	WITHOUT_CLASSIFICATION	0.0014469716932749162	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999938013844503	WITHOUT_CLASSIFICATION	6.198615549688158E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999590631954	WITHOUT_CLASSIFICATION	4.0936804682017133E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999590631954	WITHOUT_CLASSIFICATION	4.0936804682017133E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999938704894885	WITHOUT_CLASSIFICATION	6.129510511481799E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999938704894885	WITHOUT_CLASSIFICATION	6.129510511481799E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999999238332358	WITHOUT_CLASSIFICATION	7.616676426474601E-8	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999848276460324	WITHOUT_CLASSIFICATION	1.5172353967575855E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999923413220256	WITHOUT_CLASSIFICATION	7.658677974387717E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.99999920680323	WITHOUT_CLASSIFICATION	7.931967699917647E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.99999920680323	WITHOUT_CLASSIFICATION	7.931967699917647E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997523302638195	WITHOUT_CLASSIFICATION	2.4766973618051765E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999849420001613	WITHOUT_CLASSIFICATION	1.505799983861335E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999994162717808	WITHOUT_CLASSIFICATION	5.837282191635045E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999946094534445	WITHOUT_CLASSIFICATION	5.390546555428658E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999946094534445	WITHOUT_CLASSIFICATION	5.390546555428658E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999952681264102	WITHOUT_CLASSIFICATION	4.731873589817872E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999952681264102	WITHOUT_CLASSIFICATION	4.731873589817872E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999489273294	WITHOUT_CLASSIFICATION	5.107267078178694E-8	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999992991975414	WITHOUT_CLASSIFICATION	7.00802458599209E-7	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999818275013	WITHOUT_CLASSIFICATION	1.8172498654084356E-8	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999853673787	WITHOUT_CLASSIFICATION	1.4632621339745204E-8	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999979320305862	WITHOUT_CLASSIFICATION	2.0679694138493257E-6	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999992648892119	WITHOUT_CLASSIFICATION	7.351107881386E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999995137568237	WITHOUT_CLASSIFICATION	4.862431763075234E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999843767371587	WITHOUT_CLASSIFICATION	1.5623262841320363E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999990194514283	WITHOUT_CLASSIFICATION	9.805485716636402E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999997059656807	WITHOUT_CLASSIFICATION	2.940343194250906E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999940827134535	WITHOUT_CLASSIFICATION	5.9172865465546086E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999940827134535	WITHOUT_CLASSIFICATION	5.9172865465546086E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9990789051624394	WITHOUT_CLASSIFICATION	9.21094837560703E-4	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9990789051624394	WITHOUT_CLASSIFICATION	9.21094837560703E-4	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999340841917	WITHOUT_CLASSIFICATION	6.591580829239347E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999982511295811	WITHOUT_CLASSIFICATION	1.7488704188206948E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999982511295811	WITHOUT_CLASSIFICATION	1.7488704188206948E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999982511295811	WITHOUT_CLASSIFICATION	1.7488704188206948E-6	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999964624247829	WITHOUT_CLASSIFICATION	3.537575217075188E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999606850075402	WITHOUT_CLASSIFICATION	3.9314992459663934E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999944966857176	WITHOUT_CLASSIFICATION	5.503314282391191E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999532886268874	WITHOUT_CLASSIFICATION	4.6711373112559065E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999532886268874	WITHOUT_CLASSIFICATION	4.6711373112559065E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.999732563462208	WITHOUT_CLASSIFICATION	2.6743653779203233E-4	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999848750017548	WITHOUT_CLASSIFICATION	1.512499824531389E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999848750017548	WITHOUT_CLASSIFICATION	1.512499824531389E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989306725744	WITHOUT_CLASSIFICATION	1.0693274255793124E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989306725744	WITHOUT_CLASSIFICATION	1.0693274255793124E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989306725744	WITHOUT_CLASSIFICATION	1.0693274255793124E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999972011192667	WITHOUT_CLASSIFICATION	2.798880733294712E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999972011192667	WITHOUT_CLASSIFICATION	2.798880733294712E-6	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999997308304778	WITHOUT_CLASSIFICATION	2.691695222687486E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996752327451	WITHOUT_CLASSIFICATION	3.2476725475787204E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996752327451	WITHOUT_CLASSIFICATION	3.2476725475787204E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999963794595541	WITHOUT_CLASSIFICATION	3.6205404459445908E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.999977397634184	WITHOUT_CLASSIFICATION	2.2602365815978453E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999992110602606	WITHOUT_CLASSIFICATION	7.889397393451326E-7	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999891016923713	WITHOUT_CLASSIFICATION	1.089830762864092E-5	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999742200135296	WITHOUT_CLASSIFICATION	2.577998647041144E-5	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999845827727	WITHOUT_CLASSIFICATION	1.5417227228528878E-8	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999600191451986	WITHOUT_CLASSIFICATION	3.9980854801303735E-5	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999996750975857	WITHOUT_CLASSIFICATION	3.249024143078717E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9987763629941377	WITHOUT_CLASSIFICATION	0.0012236370058622747	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999944525164466	WITHOUT_CLASSIFICATION	5.547483553374765E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999527558474	WITHOUT_CLASSIFICATION	4.724415267000746E-8	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.8955224722823126	DEFECT	0.10447752771768748	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999927114346955	WITHOUT_CLASSIFICATION	7.288565304469573E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999859944485096	WITHOUT_CLASSIFICATION	1.4005551490360392E-5	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999773591042269	WITHOUT_CLASSIFICATION	2.2640895773106512E-5	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999976768212562	WITHOUT_CLASSIFICATION	2.3231787439000624E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999151990454718	WITHOUT_CLASSIFICATION	8.480095452819122E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999995710280553	WITHOUT_CLASSIFICATION	4.289719447129416E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999995710280553	WITHOUT_CLASSIFICATION	4.289719447129416E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993436357705	WITHOUT_CLASSIFICATION	6.563642294650584E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9995777514610187	WITHOUT_CLASSIFICATION	4.2224853898138075E-4	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.7252573721051493	WITHOUT_CLASSIFICATION	0.27474262789485066	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999850003503017	WITHOUT_CLASSIFICATION	1.4999649698371992E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999998501098185	WITHOUT_CLASSIFICATION	1.4989018140152887E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9998129383789918	WITHOUT_CLASSIFICATION	1.8706162100820678E-4	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.999999920597121	WITHOUT_CLASSIFICATION	7.940287901972778E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999808651294291	WITHOUT_CLASSIFICATION	1.9134870570955524E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999808651294291	WITHOUT_CLASSIFICATION	1.9134870570955524E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995076295894	WITHOUT_CLASSIFICATION	4.923704104961194E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995076295894	WITHOUT_CLASSIFICATION	4.923704104961194E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999994393337106	WITHOUT_CLASSIFICATION	5.606662893685686E-7	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999962378547	WITHOUT_CLASSIFICATION	3.7621452708649535E-9	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999967110274985	WITHOUT_CLASSIFICATION	3.2889725014869155E-6	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999991198051341	WITHOUT_CLASSIFICATION	8.801948658859651E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999656862990383	WITHOUT_CLASSIFICATION	3.43137009617579E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999988405210325	WITHOUT_CLASSIFICATION	1.1594789674366223E-6	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999518231582417	WITHOUT_CLASSIFICATION	4.817684175815977E-5	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999999611085812	WITHOUT_CLASSIFICATION	3.889141864484132E-8	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999834993264043	WITHOUT_CLASSIFICATION	1.6500673595754354E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999921808026913	WITHOUT_CLASSIFICATION	7.819197308744537E-6	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999999876248226	WITHOUT_CLASSIFICATION	1.2375177471694838E-8	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9995464801743814	WITHOUT_CLASSIFICATION	4.535198256185893E-4	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9977978187265131	WITHOUT_CLASSIFICATION	0.0022021812734869385	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9912463335472268	WITHOUT_CLASSIFICATION	0.008753666452773246	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9912463335472268	WITHOUT_CLASSIFICATION	0.008753666452773246	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999997714185993	WITHOUT_CLASSIFICATION	2.2858140065282015E-7	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999996726868853	WITHOUT_CLASSIFICATION	3.273131146837538E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999996279294939	WITHOUT_CLASSIFICATION	3.7207050613960644E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999996279294939	WITHOUT_CLASSIFICATION	3.7207050613960644E-7	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999971919523383	WITHOUT_CLASSIFICATION	2.80804766185103E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998605149847866	WITHOUT_CLASSIFICATION	1.3948501521345345E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999874688668	WITHOUT_CLASSIFICATION	1.253113323427556E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.993411818537011	WITHOUT_CLASSIFICATION	0.0065881814629890015	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999940812934	WITHOUT_CLASSIFICATION	5.918706600024463E-6	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999981573402003	WITHOUT_CLASSIFICATION	1.8426597997232742E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.99999960140667	WITHOUT_CLASSIFICATION	3.985933300143463E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9998617557297232	WITHOUT_CLASSIFICATION	1.3824427027673989E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9998617557297232	WITHOUT_CLASSIFICATION	1.3824427027673989E-4	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999977777310245	WITHOUT_CLASSIFICATION	2.222268975397912E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9681392202729576	WITHOUT_CLASSIFICATION	0.03186077972704241	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999915046860002	WITHOUT_CLASSIFICATION	8.4953139998016E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999915046860002	WITHOUT_CLASSIFICATION	8.4953139998016E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999988181853067	WITHOUT_CLASSIFICATION	1.1818146933369176E-6	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.99999912605388	WITHOUT_CLASSIFICATION	8.73946119892241E-7	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999995454704969	WITHOUT_CLASSIFICATION	4.545295031619824E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991397626552	WITHOUT_CLASSIFICATION	8.602373447997146E-7	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999136583951086	WITHOUT_CLASSIFICATION	8.634160489136782E-5	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999992813815245	WITHOUT_CLASSIFICATION	7.186184755798691E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998154409575211	WITHOUT_CLASSIFICATION	1.8455904247902455E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998154409575211	WITHOUT_CLASSIFICATION	1.8455904247902455E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998154409575211	WITHOUT_CLASSIFICATION	1.8455904247902455E-4	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999954075782026	WITHOUT_CLASSIFICATION	4.592421797363233E-6	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999939127197414	WITHOUT_CLASSIFICATION	6.0872802585480976E-6	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998306975303	WITHOUT_CLASSIFICATION	1.6930246968896423E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999079408025	WITHOUT_CLASSIFICATION	9.205919744809504E-8	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999944979249	WITHOUT_CLASSIFICATION	5.50207520767376E-9	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.999966851490026	WITHOUT_CLASSIFICATION	3.314850997404238E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999775261890307	WITHOUT_CLASSIFICATION	2.247381096933569E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999997440220889	WITHOUT_CLASSIFICATION	2.5597791108923804E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999997440220889	WITHOUT_CLASSIFICATION	2.5597791108923804E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999997440220889	WITHOUT_CLASSIFICATION	2.5597791108923804E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999956921994997	WITHOUT_CLASSIFICATION	4.307800500328239E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970349199477	WITHOUT_CLASSIFICATION	2.965080052288951E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999973610388407	WITHOUT_CLASSIFICATION	2.6389611592305826E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999973610388407	WITHOUT_CLASSIFICATION	2.6389611592305826E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999973610388407	WITHOUT_CLASSIFICATION	2.6389611592305826E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999982446898824	WITHOUT_CLASSIFICATION	1.7553101175673167E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999978106738643	WITHOUT_CLASSIFICATION	2.189326135702198E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999978106738643	WITHOUT_CLASSIFICATION	2.189326135702198E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999936029207683	WITHOUT_CLASSIFICATION	6.3970792317153615E-6	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999718453035651	WITHOUT_CLASSIFICATION	2.8154696434892366E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999922522572755	WITHOUT_CLASSIFICATION	7.747742724394376E-6	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999845979994297	WITHOUT_CLASSIFICATION	1.5402000570256715E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.999997587191728	WITHOUT_CLASSIFICATION	2.4128082720532165E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999927622426249	WITHOUT_CLASSIFICATION	7.237757375149922E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999878994732253	WITHOUT_CLASSIFICATION	1.2100526774675354E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999023829975736	WITHOUT_CLASSIFICATION	9.761700242639577E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999915521597337	WITHOUT_CLASSIFICATION	8.44784026627852E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999923688684548	WITHOUT_CLASSIFICATION	7.631131545202086E-6	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9998168983506898	WITHOUT_CLASSIFICATION	1.8310164931024782E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999789295083639	WITHOUT_CLASSIFICATION	2.1070491636148936E-5	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999977818675411	WITHOUT_CLASSIFICATION	2.2181324589500845E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999977818675411	WITHOUT_CLASSIFICATION	2.2181324589500845E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999994529490563	WITHOUT_CLASSIFICATION	5.470509435924917E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999996596434307	WITHOUT_CLASSIFICATION	3.403565693039511E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999996596434307	WITHOUT_CLASSIFICATION	3.403565693039511E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999979691199066	WITHOUT_CLASSIFICATION	2.030880093535221E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999949710028655	WITHOUT_CLASSIFICATION	5.028997134528078E-6	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999997254985205	WITHOUT_CLASSIFICATION	2.74501479587244E-7	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999985970072037	WITHOUT_CLASSIFICATION	1.4029927962688951E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.999833195628654	WITHOUT_CLASSIFICATION	1.6680437134591634E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.999833195628654	WITHOUT_CLASSIFICATION	1.6680437134591634E-4	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999999460722124	WITHOUT_CLASSIFICATION	5.392778747512823E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999257870824808	WITHOUT_CLASSIFICATION	7.421291751923865E-5	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999989897289093	WITHOUT_CLASSIFICATION	1.0102710907252595E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999982241554393	WITHOUT_CLASSIFICATION	1.7758445607036602E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995251152523	WITHOUT_CLASSIFICATION	4.748847477122232E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999996283619235	WITHOUT_CLASSIFICATION	3.7163807645507784E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999106876029	WITHOUT_CLASSIFICATION	8.93123971495267E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994213483011	WITHOUT_CLASSIFICATION	5.786516989055426E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999997519115256	WITHOUT_CLASSIFICATION	2.480884743858211E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999634364795483	WITHOUT_CLASSIFICATION	3.656352045161307E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9998649688561669	WITHOUT_CLASSIFICATION	1.3503114383311857E-4	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9991767578258918	WITHOUT_CLASSIFICATION	8.232421741082429E-4	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999923189117942	WITHOUT_CLASSIFICATION	7.681088205793125E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999989765651526	WITHOUT_CLASSIFICATION	1.0234348473590339E-6	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.999998184275275	WITHOUT_CLASSIFICATION	1.8157247250128078E-6	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999974821932001	WITHOUT_CLASSIFICATION	2.5178067998925127E-6	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999649993807176	WITHOUT_CLASSIFICATION	3.500061928249871E-5	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999945951635152	WITHOUT_CLASSIFICATION	5.404836484867201E-6	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999977017499198	WITHOUT_CLASSIFICATION	2.298250080256192E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999848475806911	WITHOUT_CLASSIFICATION	1.5152419308926807E-5	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999848475806911	WITHOUT_CLASSIFICATION	1.5152419308926807E-5	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999700036927879	WITHOUT_CLASSIFICATION	2.999630721208429E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999941823657288	WITHOUT_CLASSIFICATION	5.817634271187718E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999853935349032	WITHOUT_CLASSIFICATION	1.4606465096847822E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999923133712004	WITHOUT_CLASSIFICATION	7.68662879955511E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999937729719137	WITHOUT_CLASSIFICATION	6.227028086302206E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999371161593695	WITHOUT_CLASSIFICATION	6.288384063053132E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998661210596	WITHOUT_CLASSIFICATION	1.3387894039435098E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999948239858875	WITHOUT_CLASSIFICATION	5.17601411257197E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999125592812792	WITHOUT_CLASSIFICATION	8.7440718720735E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999125592812792	WITHOUT_CLASSIFICATION	8.7440718720735E-5	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9992636466152953	WITHOUT_CLASSIFICATION	7.363533847046782E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999880390036953	WITHOUT_CLASSIFICATION	1.1960996304699844E-5	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.999704834337006	WITHOUT_CLASSIFICATION	2.9516566299403306E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996547641372189	WITHOUT_CLASSIFICATION	3.452358627810761E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996283458977825	WITHOUT_CLASSIFICATION	3.716541022174537E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999960299969085	WITHOUT_CLASSIFICATION	3.970003091439804E-6	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999986624489408	WITHOUT_CLASSIFICATION	1.337551059249352E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999992712844994	WITHOUT_CLASSIFICATION	7.287155005523279E-7	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999977985566797	WITHOUT_CLASSIFICATION	2.2014433202572026E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999989436339587	WITHOUT_CLASSIFICATION	1.0563660412847262E-6	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999989436339587	WITHOUT_CLASSIFICATION	1.0563660412847262E-6	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9972623454716887	WITHOUT_CLASSIFICATION	0.0027376545283113647	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999854497454499	WITHOUT_CLASSIFICATION	1.4550254550119459E-5	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999983400386268	WITHOUT_CLASSIFICATION	1.6599613732793756E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999963101853905	WITHOUT_CLASSIFICATION	3.6898146096361397E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999963101853905	WITHOUT_CLASSIFICATION	3.6898146096361397E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.99999305569979	WITHOUT_CLASSIFICATION	6.944300210062583E-6	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.99999305569979	WITHOUT_CLASSIFICATION	6.944300210062583E-6	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999992823320254	WITHOUT_CLASSIFICATION	7.176679746928652E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999990455851969	WITHOUT_CLASSIFICATION	9.544148030454782E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9997420863414874	WITHOUT_CLASSIFICATION	2.5791365851251315E-4	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9997420863414874	WITHOUT_CLASSIFICATION	2.5791365851251315E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999984827810668	WITHOUT_CLASSIFICATION	1.5172189332313825E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999856198083319	WITHOUT_CLASSIFICATION	1.438019166812215E-5	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999723492375266	WITHOUT_CLASSIFICATION	2.7650762473370677E-5	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999966977062089	WITHOUT_CLASSIFICATION	3.3022937911211665E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999999884154857	WITHOUT_CLASSIFICATION	1.158451434781552E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9996643209961618	WITHOUT_CLASSIFICATION	3.3567900383824355E-4	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9998414205584035	WITHOUT_CLASSIFICATION	1.5857944159647683E-4	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999978901439746	WITHOUT_CLASSIFICATION	2.109856025367525E-6	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999968332689827	WITHOUT_CLASSIFICATION	3.16673101725494E-6	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999694975472188	WITHOUT_CLASSIFICATION	3.050245278126282E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999960523520511	WITHOUT_CLASSIFICATION	3.947647948864451E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999985823695502	WITHOUT_CLASSIFICATION	1.4176304498257248E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999849459060267	WITHOUT_CLASSIFICATION	1.50540939734152E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999663687248674	WITHOUT_CLASSIFICATION	3.363127513262912E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9998389832451395	WITHOUT_CLASSIFICATION	1.6101675486054662E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999979700612804	WITHOUT_CLASSIFICATION	2.0299387196343593E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.999997681669662	WITHOUT_CLASSIFICATION	2.3183303379623918E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999995374222014	WITHOUT_CLASSIFICATION	4.6257779866792593E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999960153097694	WITHOUT_CLASSIFICATION	3.984690230496998E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999992016954238	WITHOUT_CLASSIFICATION	7.983045762452252E-7	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999975106616724	WITHOUT_CLASSIFICATION	2.4893383276348324E-6	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999977050823012	WITHOUT_CLASSIFICATION	2.2949176987757724E-6	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999363831232896	WITHOUT_CLASSIFICATION	6.36168767103639E-5	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999998657109878	WITHOUT_CLASSIFICATION	1.3428901224963039E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999987115074	WITHOUT_CLASSIFICATION	1.288492689347991E-9	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999968608011197	WITHOUT_CLASSIFICATION	3.1391988802842373E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999996940825737	WITHOUT_CLASSIFICATION	3.0591742629889946E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999996940825737	WITHOUT_CLASSIFICATION	3.0591742629889946E-7	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999801526418	WITHOUT_CLASSIFICATION	1.9847358162544187E-8	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999873835665821	WITHOUT_CLASSIFICATION	1.2616433417877545E-5	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.999995351770321	WITHOUT_CLASSIFICATION	4.648229678981057E-6	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999996899435417	WITHOUT_CLASSIFICATION	3.100564582907692E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999716300210049	WITHOUT_CLASSIFICATION	2.8369978995172763E-5	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999993143293113	WITHOUT_CLASSIFICATION	6.856706887937479E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9956252331599417	WITHOUT_CLASSIFICATION	0.004374766840058351	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999996465393219	WITHOUT_CLASSIFICATION	3.5346067803060284E-7	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999958649690608	WITHOUT_CLASSIFICATION	4.135030939230655E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999997703488616	WITHOUT_CLASSIFICATION	2.2965113844946815E-7	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999939992074404	WITHOUT_CLASSIFICATION	6.0007925596177166E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999924927528734	WITHOUT_CLASSIFICATION	7.507247126629781E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999999147275254	WITHOUT_CLASSIFICATION	8.527247469956096E-8	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999824755086618	WITHOUT_CLASSIFICATION	1.752449133815058E-5	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999948545000154	WITHOUT_CLASSIFICATION	5.145499984617185E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999996997961817	WITHOUT_CLASSIFICATION	3.0020381829377527E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9999549575700611	WITHOUT_CLASSIFICATION	4.5042429938859694E-5	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999981361785875	WITHOUT_CLASSIFICATION	1.8638214126098083E-6	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.999999955109432	WITHOUT_CLASSIFICATION	4.489056811400444E-8	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9996181873149261	WITHOUT_CLASSIFICATION	3.81812685073884E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999975882799554	WITHOUT_CLASSIFICATION	2.4117200444569556E-6	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999996645371239	WITHOUT_CLASSIFICATION	3.35462876078833E-7	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999995854831942	WITHOUT_CLASSIFICATION	4.145168057903901E-7	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999410349635	WITHOUT_CLASSIFICATION	5.896503654209588E-8	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999999960643086	WITHOUT_CLASSIFICATION	3.935691496426878E-9	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999877344509761	WITHOUT_CLASSIFICATION	1.2265549023780284E-5	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.999917366086259	WITHOUT_CLASSIFICATION	8.26339137409498E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999983603558508	WITHOUT_CLASSIFICATION	1.6396441491983799E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.999996174354901	WITHOUT_CLASSIFICATION	3.825645098974176E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999942335133	WITHOUT_CLASSIFICATION	5.7664867710894054E-9	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999996545993042	WITHOUT_CLASSIFICATION	3.4540069577508373E-7	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999584016541493	WITHOUT_CLASSIFICATION	4.1598345850634986E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999990918281231	WITHOUT_CLASSIFICATION	9.081718770243234E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999990918281231	WITHOUT_CLASSIFICATION	9.081718770243234E-7	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999969132690978	WITHOUT_CLASSIFICATION	3.086730902085497E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999768209181413	WITHOUT_CLASSIFICATION	2.3179081858717117E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999830092	WITHOUT_CLASSIFICATION	1.699079454089021E-10	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999830092	WITHOUT_CLASSIFICATION	1.699079454089021E-10	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999999342246411	WITHOUT_CLASSIFICATION	6.577535890062395E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999351677944	WITHOUT_CLASSIFICATION	6.483220556209956E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999351677944	WITHOUT_CLASSIFICATION	6.483220556209956E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999351677944	WITHOUT_CLASSIFICATION	6.483220556209956E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999768209181413	WITHOUT_CLASSIFICATION	2.3179081858717117E-5	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999946980504529	WITHOUT_CLASSIFICATION	5.301949546962864E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999829767256123	WITHOUT_CLASSIFICATION	1.702327438769683E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999768209181413	WITHOUT_CLASSIFICATION	2.3179081858717117E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999768209181413	WITHOUT_CLASSIFICATION	2.3179081858717117E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999768209181413	WITHOUT_CLASSIFICATION	2.3179081858717117E-5	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999304582322	WITHOUT_CLASSIFICATION	6.95417677669735E-8	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999892437162475	WITHOUT_CLASSIFICATION	1.0756283752403711E-5	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999919639287447	WITHOUT_CLASSIFICATION	8.036071255378902E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998358267987	WITHOUT_CLASSIFICATION	1.6417320124767178E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999974826254463	WITHOUT_CLASSIFICATION	2.5173745537634856E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999984483556917	WITHOUT_CLASSIFICATION	1.5516443082468198E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.999999800843639	WITHOUT_CLASSIFICATION	1.9915636086818457E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999984483556917	WITHOUT_CLASSIFICATION	1.5516443082468198E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9973543530235256	WITHOUT_CLASSIFICATION	0.0026456469764743877	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999995456472085	WITHOUT_CLASSIFICATION	4.543527914446378E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999984483556917	WITHOUT_CLASSIFICATION	1.5516443082468198E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999984483556917	WITHOUT_CLASSIFICATION	1.5516443082468198E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999349673381633	WITHOUT_CLASSIFICATION	6.503266183672983E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999126430616014	WITHOUT_CLASSIFICATION	8.735693839852259E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999838264810543	WITHOUT_CLASSIFICATION	1.617351894566122E-5	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999991654347208	WITHOUT_CLASSIFICATION	8.34565279297679E-7	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999986423518424	WITHOUT_CLASSIFICATION	1.357648157610787E-6	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999986136476412	WITHOUT_CLASSIFICATION	1.386352358865748E-6	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999946257399623	WITHOUT_CLASSIFICATION	5.374260037649175E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999806507149832	WITHOUT_CLASSIFICATION	1.9349285016808195E-4	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999806507149832	WITHOUT_CLASSIFICATION	1.9349285016808195E-4	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999988447682312	WITHOUT_CLASSIFICATION	1.1552317688095153E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9997379019697313	WITHOUT_CLASSIFICATION	2.6209803026864317E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9999992675718908	WITHOUT_CLASSIFICATION	7.32428109189265E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999938316707753	WITHOUT_CLASSIFICATION	6.168329224726619E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999454570844455	WITHOUT_CLASSIFICATION	5.454291555454896E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999454570844455	WITHOUT_CLASSIFICATION	5.454291555454896E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999454570844455	WITHOUT_CLASSIFICATION	5.454291555454896E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999938316707753	WITHOUT_CLASSIFICATION	6.168329224726619E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999938316707753	WITHOUT_CLASSIFICATION	6.168329224726619E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999938316707753	WITHOUT_CLASSIFICATION	6.168329224726619E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999938316707753	WITHOUT_CLASSIFICATION	6.168329224726619E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999938316707753	WITHOUT_CLASSIFICATION	6.168329224726619E-6	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.999998274580244	WITHOUT_CLASSIFICATION	1.7254197559191286E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976150905313	WITHOUT_CLASSIFICATION	2.384909468572909E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999294773520514	WITHOUT_CLASSIFICATION	7.052264794856104E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999294773520514	WITHOUT_CLASSIFICATION	7.052264794856104E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976150905313	WITHOUT_CLASSIFICATION	2.384909468572909E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976150905313	WITHOUT_CLASSIFICATION	2.384909468572909E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976150905313	WITHOUT_CLASSIFICATION	2.384909468572909E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999393740680208	WITHOUT_CLASSIFICATION	6.0625931979191456E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999393740680208	WITHOUT_CLASSIFICATION	6.0625931979191456E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999393740680208	WITHOUT_CLASSIFICATION	6.0625931979191456E-5	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999993341060059	WITHOUT_CLASSIFICATION	6.658939939503633E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9956252331599417	WITHOUT_CLASSIFICATION	0.004374766840058351	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999976150905313	WITHOUT_CLASSIFICATION	2.384909468572909E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999393740680208	WITHOUT_CLASSIFICATION	6.0625931979191456E-5	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999996489690038	WITHOUT_CLASSIFICATION	3.510309961188622E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999989724078009	WITHOUT_CLASSIFICATION	1.0275921990641993E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999996288094053	WITHOUT_CLASSIFICATION	3.711905947050032E-7	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999996627114516	WITHOUT_CLASSIFICATION	3.372885483575628E-7	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999994734239961	WITHOUT_CLASSIFICATION	5.26576003960283E-7	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999957301314213	WITHOUT_CLASSIFICATION	4.269868578704112E-6	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999907789155815	WITHOUT_CLASSIFICATION	9.221084418423365E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999677251317063	WITHOUT_CLASSIFICATION	3.227486829372794E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999998341371381	WITHOUT_CLASSIFICATION	1.6586286200230296E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999979157846646	WITHOUT_CLASSIFICATION	2.0842153354319607E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999979157846646	WITHOUT_CLASSIFICATION	2.0842153354319607E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999972224478892	WITHOUT_CLASSIFICATION	2.7775521108705674E-6	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999972224478892	WITHOUT_CLASSIFICATION	2.7775521108705674E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999946822927247	WITHOUT_CLASSIFICATION	5.317707275179494E-6	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999946822927247	WITHOUT_CLASSIFICATION	5.317707275179494E-6	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999969441525847	WITHOUT_CLASSIFICATION	3.055847415331787E-6	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999263537698573	WITHOUT_CLASSIFICATION	7.364623014272414E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9998572157199627	WITHOUT_CLASSIFICATION	1.4278428003739298E-4	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999844932547444	WITHOUT_CLASSIFICATION	1.550674525559207E-5	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999956714118731	WITHOUT_CLASSIFICATION	4.328588126955679E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.999992358108113	WITHOUT_CLASSIFICATION	7.641891886981344E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999998606155999	WITHOUT_CLASSIFICATION	1.3938440000925597E-7	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999945538613952	WITHOUT_CLASSIFICATION	5.44613860481269E-6	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999845452985879	WITHOUT_CLASSIFICATION	1.545470141206573E-5	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999785582695156	WITHOUT_CLASSIFICATION	2.1441730484287547E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999819173630452	WITHOUT_CLASSIFICATION	1.8082636954893188E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999998358267987	WITHOUT_CLASSIFICATION	1.6417320124767178E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9998113415215604	WITHOUT_CLASSIFICATION	1.886584784396806E-4	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.999996827023601	WITHOUT_CLASSIFICATION	3.1729763989166613E-6	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999997606241258	WITHOUT_CLASSIFICATION	2.3937587422982156E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999067089531	WITHOUT_CLASSIFICATION	9.329104692743812E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999067089531	WITHOUT_CLASSIFICATION	9.329104692743812E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999996905867921	WITHOUT_CLASSIFICATION	3.0941320794712106E-7	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999998160492278	WITHOUT_CLASSIFICATION	1.839507720860545E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.999996400479921	WITHOUT_CLASSIFICATION	3.599520078876206E-6	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999994874982775	WITHOUT_CLASSIFICATION	5.125017225452321E-7	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999590987252175	WITHOUT_CLASSIFICATION	4.0901274782501684E-5	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999751211310276	WITHOUT_CLASSIFICATION	2.487886897241198E-5	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999960483276144	WITHOUT_CLASSIFICATION	3.951672385662593E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9996829428514766	WITHOUT_CLASSIFICATION	3.1705714852328973E-4	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999965698531718	WITHOUT_CLASSIFICATION	3.4301468281093994E-6	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999820959573104	WITHOUT_CLASSIFICATION	1.7904042689581708E-5	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999973808986427	WITHOUT_CLASSIFICATION	2.619101357380142E-6	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999996717847338	WITHOUT_CLASSIFICATION	3.2821526614578124E-7	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999972753811045	WITHOUT_CLASSIFICATION	2.7246188954623053E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999994125186927	WITHOUT_CLASSIFICATION	5.874813072181144E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999974027841932	WITHOUT_CLASSIFICATION	2.597215806715481E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999997698899837	WITHOUT_CLASSIFICATION	2.3011001629293766E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999997698899837	WITHOUT_CLASSIFICATION	2.3011001629293766E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999957569038114	WITHOUT_CLASSIFICATION	4.243096188644254E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999957569038114	WITHOUT_CLASSIFICATION	4.243096188644254E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999866840910482	WITHOUT_CLASSIFICATION	1.331590895171476E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999866840910482	WITHOUT_CLASSIFICATION	1.331590895171476E-5	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999776294979071	WITHOUT_CLASSIFICATION	2.2370502092856543E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9997379019697313	WITHOUT_CLASSIFICATION	2.6209803026864317E-4	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9834502269708271	WITHOUT_CLASSIFICATION	0.016549773029172918	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9620558555394079	WITHOUT_CLASSIFICATION	0.03794414446059205	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999991407529635	WITHOUT_CLASSIFICATION	8.592470364631388E-7	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999301954325279	WITHOUT_CLASSIFICATION	6.980456747202424E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999997698899837	WITHOUT_CLASSIFICATION	2.3011001629293766E-7	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999794047266718	WITHOUT_CLASSIFICATION	2.0595273328223246E-5	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9998365842015291	WITHOUT_CLASSIFICATION	1.6341579847083267E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.999992293230215	WITHOUT_CLASSIFICATION	7.706769784983156E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999952065500924	WITHOUT_CLASSIFICATION	4.79344990752809E-6	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999957569038114	WITHOUT_CLASSIFICATION	4.243096188644254E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999866840910482	WITHOUT_CLASSIFICATION	1.331590895171476E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9997379019697313	WITHOUT_CLASSIFICATION	2.6209803026864317E-4	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999995045029715	WITHOUT_CLASSIFICATION	4.954970285348266E-7	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999989058552	WITHOUT_CLASSIFICATION	1.0941447868551347E-9	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999975561203446	WITHOUT_CLASSIFICATION	2.4438796554637247E-6	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999991162828615	WITHOUT_CLASSIFICATION	8.837171383231623E-7	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999995055880242	WITHOUT_CLASSIFICATION	4.94411975825986E-7	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999988526843716	WITHOUT_CLASSIFICATION	1.1473156284743202E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9594488950892653	WITHOUT_CLASSIFICATION	0.04055110491073461	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999652401767833	WITHOUT_CLASSIFICATION	3.475982321660057E-5	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999985852296214	WITHOUT_CLASSIFICATION	1.414770378620781E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9990423518090454	WITHOUT_CLASSIFICATION	9.576481909545928E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999977883018142	WITHOUT_CLASSIFICATION	2.211698185894544E-6	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999991204013483	WITHOUT_CLASSIFICATION	8.795986515858659E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999994293099543	WITHOUT_CLASSIFICATION	5.706900456778179E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999994293099543	WITHOUT_CLASSIFICATION	5.706900456778179E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999871873535154	WITHOUT_CLASSIFICATION	1.2812646484499928E-5	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999871873535154	WITHOUT_CLASSIFICATION	1.2812646484499928E-5	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999967316172397	WITHOUT_CLASSIFICATION	3.2683827604304618E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999967316172397	WITHOUT_CLASSIFICATION	3.2683827604304618E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999976203858357	WITHOUT_CLASSIFICATION	2.3796141642036023E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.99995321672052	WITHOUT_CLASSIFICATION	4.6783279480140246E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999537945653073	WITHOUT_CLASSIFICATION	4.620543469264736E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.817715794693776	WITHOUT_CLASSIFICATION	0.18228420530622402	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999997931934692	WITHOUT_CLASSIFICATION	2.0680653080889671E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999919164472941	WITHOUT_CLASSIFICATION	8.083552705873857E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999993337851089	WITHOUT_CLASSIFICATION	6.662148911615158E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999993337851089	WITHOUT_CLASSIFICATION	6.662148911615158E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999998843864509	WITHOUT_CLASSIFICATION	1.1561354917768386E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999998843864509	WITHOUT_CLASSIFICATION	1.1561354917768386E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999883168706323	WITHOUT_CLASSIFICATION	1.168312936772219E-5	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9967488452222473	WITHOUT_CLASSIFICATION	0.003251154777752792	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9989505812244016	WITHOUT_CLASSIFICATION	0.0010494187755983985	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999934925215251	WITHOUT_CLASSIFICATION	6.507478474807667E-6	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.999975453614549	WITHOUT_CLASSIFICATION	2.4546385451111193E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999986186954006	WITHOUT_CLASSIFICATION	1.3813045992883885E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999998979154421	WITHOUT_CLASSIFICATION	1.0208455789141916E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9967488452222473	WITHOUT_CLASSIFICATION	0.003251154777752792	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9989505812244016	WITHOUT_CLASSIFICATION	0.0010494187755983985	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999934925215251	WITHOUT_CLASSIFICATION	6.507478474807667E-6	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999995595906326	WITHOUT_CLASSIFICATION	4.40409367420298E-7	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999294071255728	WITHOUT_CLASSIFICATION	7.05928744272166E-5	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.999994239944375	WITHOUT_CLASSIFICATION	5.760055625042366E-6	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.999986569049549	WITHOUT_CLASSIFICATION	1.3430950451076993E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9100277075104638	WITHOUT_CLASSIFICATION	0.08997229248953627	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9779397400852807	WITHOUT_CLASSIFICATION	0.02206025991471929	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999349666605258	WITHOUT_CLASSIFICATION	6.503333947418144E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9997508939569979	WITHOUT_CLASSIFICATION	2.491060430020233E-4	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999960235966396	WITHOUT_CLASSIFICATION	3.976403360297905E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9998257955085375	WITHOUT_CLASSIFICATION	1.7420449146251786E-4	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999957453034634	WITHOUT_CLASSIFICATION	4.254696536548476E-6	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999984492060285	WITHOUT_CLASSIFICATION	1.5507939714874286E-6	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999984492060285	WITHOUT_CLASSIFICATION	1.5507939714874286E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999977150765229	WITHOUT_CLASSIFICATION	2.28492347715083E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999977150765229	WITHOUT_CLASSIFICATION	2.28492347715083E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999995153425767	WITHOUT_CLASSIFICATION	4.846574232559469E-7	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999977900650145	WITHOUT_CLASSIFICATION	2.2099349854246286E-6	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999938073042792	WITHOUT_CLASSIFICATION	6.192695720748372E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999969107700902	WITHOUT_CLASSIFICATION	3.0892299098118315E-6	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999952498409554	WITHOUT_CLASSIFICATION	4.750159044637191E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999835660233561	WITHOUT_CLASSIFICATION	1.6433976643817736E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999652401767833	WITHOUT_CLASSIFICATION	3.475982321660057E-5	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999975061427091	WITHOUT_CLASSIFICATION	2.4938572909685236E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999994778809472	WITHOUT_CLASSIFICATION	5.221190527554203E-7	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999995311040096	WITHOUT_CLASSIFICATION	4.688959903295441E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999869134225697	WITHOUT_CLASSIFICATION	1.3086577430263707E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999803993693849	WITHOUT_CLASSIFICATION	1.9600630615102623E-5	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999960187087219	WITHOUT_CLASSIFICATION	3.981291278007268E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999960187087219	WITHOUT_CLASSIFICATION	3.981291278007268E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999758718130258	WITHOUT_CLASSIFICATION	2.4128186974204772E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999953097679392	WITHOUT_CLASSIFICATION	4.6902320608287695E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999937340462641	WITHOUT_CLASSIFICATION	6.265953735823855E-6	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999994861266309	WITHOUT_CLASSIFICATION	5.138733690982667E-6	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999997497954212	WITHOUT_CLASSIFICATION	2.502045787835855E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999980902525543	WITHOUT_CLASSIFICATION	1.9097474457317045E-6	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999995154268913	WITHOUT_CLASSIFICATION	4.845731087716081E-7	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999968266101527	WITHOUT_CLASSIFICATION	3.1733898473441627E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999993686215628	WITHOUT_CLASSIFICATION	6.313784372269878E-7	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999996078606255	WITHOUT_CLASSIFICATION	3.9213937443748227E-7	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999995456472085	WITHOUT_CLASSIFICATION	4.543527914446378E-7	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999994500681552	WITHOUT_CLASSIFICATION	5.49931844760397E-7	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999974021550505	WITHOUT_CLASSIFICATION	2.5978449495104227E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999959017681034	WITHOUT_CLASSIFICATION	4.098231896596617E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.999998067748408	WITHOUT_CLASSIFICATION	1.932251591867253E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999995347163906	WITHOUT_CLASSIFICATION	4.6528360932966227E-7	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999997658755083	WITHOUT_CLASSIFICATION	2.3412449176396087E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999997341798398	WITHOUT_CLASSIFICATION	2.658201602384313E-7	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999943881782074	WITHOUT_CLASSIFICATION	5.611821792489101E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999998530274119	WITHOUT_CLASSIFICATION	1.4697258802211382E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999946532624202	WITHOUT_CLASSIFICATION	5.346737579831186E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999949746324135	WITHOUT_CLASSIFICATION	5.025367586518171E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999959017681034	WITHOUT_CLASSIFICATION	4.098231896596617E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999966679213832	WITHOUT_CLASSIFICATION	3.332078616768016E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.999998067748408	WITHOUT_CLASSIFICATION	1.932251591867253E-6	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999984488916204	WITHOUT_CLASSIFICATION	1.5511083796662057E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996777862246	WITHOUT_CLASSIFICATION	3.222137753317643E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999995347163906	WITHOUT_CLASSIFICATION	4.6528360932966227E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999997341798398	WITHOUT_CLASSIFICATION	2.658201602384313E-7	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999996499130337	WITHOUT_CLASSIFICATION	3.5008696637156856E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999997189856944	WITHOUT_CLASSIFICATION	2.810143055743706E-7	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999994646738648	WITHOUT_CLASSIFICATION	5.353261350957747E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999997601362661	WITHOUT_CLASSIFICATION	2.3986373385401395E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999973070906419	WITHOUT_CLASSIFICATION	2.6929093580557385E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999990723282605	WITHOUT_CLASSIFICATION	9.276717394755065E-7	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999951710539172	WITHOUT_CLASSIFICATION	4.828946082761132E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999988427865087	WITHOUT_CLASSIFICATION	1.157213491274885E-6	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999998307651281	WITHOUT_CLASSIFICATION	1.6923487201601107E-7	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999738740231832	WITHOUT_CLASSIFICATION	2.612597681682622E-5	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.999999930716137	WITHOUT_CLASSIFICATION	6.928386305848742E-8	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999862603134058	WITHOUT_CLASSIFICATION	1.373968659420331E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999984488916204	WITHOUT_CLASSIFICATION	1.5511083796662057E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999996499130337	WITHOUT_CLASSIFICATION	3.5008696637156856E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999988427865087	WITHOUT_CLASSIFICATION	1.157213491274885E-6	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.999989732309748	WITHOUT_CLASSIFICATION	1.026769025212893E-5	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.999996973563488	WITHOUT_CLASSIFICATION	3.0264365118621156E-6	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999959699429168	WITHOUT_CLASSIFICATION	4.030057083222666E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999996117978527	WITHOUT_CLASSIFICATION	3.8820214739960076E-7	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999999953021231	WITHOUT_CLASSIFICATION	4.697876760771097E-9	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999994670478597	WITHOUT_CLASSIFICATION	5.329521403169661E-7	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999964273577058	WITHOUT_CLASSIFICATION	3.572642294206578E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999999244676026	WITHOUT_CLASSIFICATION	7.553239745472687E-8	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999997829758418	WITHOUT_CLASSIFICATION	2.1702415828400474E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999968541070247	WITHOUT_CLASSIFICATION	3.145892975263609E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999982193277819	WITHOUT_CLASSIFICATION	1.780672218124934E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999976293047924	WITHOUT_CLASSIFICATION	2.3706952075794558E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999980827947355	WITHOUT_CLASSIFICATION	1.9172052645791788E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999999708824824	WITHOUT_CLASSIFICATION	2.9117517545617174E-8	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999883772233443	WITHOUT_CLASSIFICATION	1.1622776655612842E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999755432630335	WITHOUT_CLASSIFICATION	2.445673696641387E-5	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999998748057417	WITHOUT_CLASSIFICATION	1.2519425834289613E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999998604914264	WITHOUT_CLASSIFICATION	1.3950857361956036E-7	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9952970958719228	WITHOUT_CLASSIFICATION	0.004702904128077226	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999998262256489	WITHOUT_CLASSIFICATION	1.7377435111842395E-7	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999998487708665	WITHOUT_CLASSIFICATION	1.512291335536101E-7	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9660277292431233	WITHOUT_CLASSIFICATION	0.03397227075687678	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999810456635716	WITHOUT_CLASSIFICATION	1.895433642841579E-5	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999937231489372	WITHOUT_CLASSIFICATION	6.2768510628019E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.99995321672052	WITHOUT_CLASSIFICATION	4.6783279480140246E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999883168706323	WITHOUT_CLASSIFICATION	1.168312936772219E-5	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9967488452222473	WITHOUT_CLASSIFICATION	0.003251154777752792	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999963287871632	WITHOUT_CLASSIFICATION	3.671212836884232E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999981988228521	WITHOUT_CLASSIFICATION	1.8011771478598168E-6	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.999992671429481	WITHOUT_CLASSIFICATION	7.328570518980461E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999821279373017	WITHOUT_CLASSIFICATION	1.7872062698414797E-5	DEFECT
// months	WITHOUT_CLASSIFICATION	0.999996438331713	WITHOUT_CLASSIFICATION	3.5616682868626925E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999950154216689	WITHOUT_CLASSIFICATION	4.984578331094357E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.999992155727875	WITHOUT_CLASSIFICATION	7.844272124924082E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999685697518803	WITHOUT_CLASSIFICATION	3.1430248119787387E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9996917225799516	WITHOUT_CLASSIFICATION	3.0827742004839996E-4	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999993905377638	WITHOUT_CLASSIFICATION	6.094622362361685E-7	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999052034423335	WITHOUT_CLASSIFICATION	9.47965576665336E-5	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999835997788632	WITHOUT_CLASSIFICATION	1.6400221136721136E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999932075088654	WITHOUT_CLASSIFICATION	6.7924911344488995E-6	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9995404238089606	WITHOUT_CLASSIFICATION	4.5957619103938755E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9995404238089606	WITHOUT_CLASSIFICATION	4.5957619103938755E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999843143875854	WITHOUT_CLASSIFICATION	1.5685612414598657E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999843143875854	WITHOUT_CLASSIFICATION	1.5685612414598657E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9996353237053185	WITHOUT_CLASSIFICATION	3.646762946815202E-4	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9998071980130975	WITHOUT_CLASSIFICATION	1.92801986902443E-4	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999958768788217	WITHOUT_CLASSIFICATION	4.123121178253343E-6	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9997578966697904	WITHOUT_CLASSIFICATION	2.4210333020956626E-4	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999998098328134	WITHOUT_CLASSIFICATION	1.9016718655115364E-7	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999980157601572	WITHOUT_CLASSIFICATION	1.9842398428674806E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999981104374075	WITHOUT_CLASSIFICATION	1.8895625925469418E-6	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999990427338967	WITHOUT_CLASSIFICATION	9.572661032709774E-7	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999999909683971	WITHOUT_CLASSIFICATION	9.03160292197941E-9	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999919164472941	WITHOUT_CLASSIFICATION	8.083552705873857E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999934925215251	WITHOUT_CLASSIFICATION	6.507478474807667E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9998257955085375	WITHOUT_CLASSIFICATION	1.7420449146251786E-4	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999980217119563	WITHOUT_CLASSIFICATION	1.978288043826975E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999950423453736	WITHOUT_CLASSIFICATION	4.957654626419675E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999994098011368	WITHOUT_CLASSIFICATION	5.901988631905466E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999943720497	WITHOUT_CLASSIFICATION	5.6279503027030656E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998033180315	WITHOUT_CLASSIFICATION	1.966819685530244E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998338963307	WITHOUT_CLASSIFICATION	1.6610366930014303E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996996280308	WITHOUT_CLASSIFICATION	3.0037196916801675E-7	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.999985721194355	WITHOUT_CLASSIFICATION	1.427880564504795E-5	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999893850979776	WITHOUT_CLASSIFICATION	1.0614902022347273E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968041280269	WITHOUT_CLASSIFICATION	3.1958719730856868E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979721067209	WITHOUT_CLASSIFICATION	2.027893279032383E-6	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999992829589868	WITHOUT_CLASSIFICATION	7.170410132294983E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.999992018798264	WITHOUT_CLASSIFICATION	7.981201736044342E-6	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.999992018798264	WITHOUT_CLASSIFICATION	7.981201736044342E-6	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999994516489474	WITHOUT_CLASSIFICATION	5.483510525947889E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999832158617091	WITHOUT_CLASSIFICATION	1.6784138290783265E-5	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.999996181544907	WITHOUT_CLASSIFICATION	3.8184550929923805E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.99999908250428	WITHOUT_CLASSIFICATION	9.174957200050775E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999984855741479	WITHOUT_CLASSIFICATION	1.5144258519959754E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999806191729897	WITHOUT_CLASSIFICATION	1.9380827010235996E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.999999374246226	WITHOUT_CLASSIFICATION	6.257537740370916E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999945440382825	WITHOUT_CLASSIFICATION	5.455961717479635E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.999999374246226	WITHOUT_CLASSIFICATION	6.257537740370916E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999990446552129	WITHOUT_CLASSIFICATION	9.553447870926456E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999947903601635	WITHOUT_CLASSIFICATION	5.209639836554024E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999945440382825	WITHOUT_CLASSIFICATION	5.455961717479635E-6	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999992165498376	WITHOUT_CLASSIFICATION	7.834501624558873E-7	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999973317067588	WITHOUT_CLASSIFICATION	2.668293241194832E-6	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999998120839071	WITHOUT_CLASSIFICATION	1.8791609292530333E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999998777724377	WITHOUT_CLASSIFICATION	1.2222756234330746E-7	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999999068683832	WITHOUT_CLASSIFICATION	9.313161669421011E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999652859448394	WITHOUT_CLASSIFICATION	3.4714055160603204E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999995933270683	WITHOUT_CLASSIFICATION	4.0667293161611866E-7	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999996867793561	WITHOUT_CLASSIFICATION	3.132206439081407E-7	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999579150034	WITHOUT_CLASSIFICATION	4.208499672637181E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999991807645584	WITHOUT_CLASSIFICATION	8.192354416210311E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999991807645584	WITHOUT_CLASSIFICATION	8.192354416210311E-7	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999976698242794	WITHOUT_CLASSIFICATION	2.330175720649147E-6	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.999999861982363	WITHOUT_CLASSIFICATION	1.3801763702951253E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9996849185978572	WITHOUT_CLASSIFICATION	3.1508140214272373E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9996849185978572	WITHOUT_CLASSIFICATION	3.1508140214272373E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9996849185978572	WITHOUT_CLASSIFICATION	3.1508140214272373E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9993048616063606	WITHOUT_CLASSIFICATION	6.951383936394753E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9993048616063606	WITHOUT_CLASSIFICATION	6.951383936394753E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9993048616063606	WITHOUT_CLASSIFICATION	6.951383936394753E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999693383208921	WITHOUT_CLASSIFICATION	3.066167910788591E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999693383208921	WITHOUT_CLASSIFICATION	3.066167910788591E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999693383208921	WITHOUT_CLASSIFICATION	3.066167910788591E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999962921205129	WITHOUT_CLASSIFICATION	3.707879487106047E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999962921205129	WITHOUT_CLASSIFICATION	3.707879487106047E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999998979154421	WITHOUT_CLASSIFICATION	1.0208455789141916E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999998979154421	WITHOUT_CLASSIFICATION	1.0208455789141916E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998567834709462	WITHOUT_CLASSIFICATION	1.4321652905384142E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999652401767833	WITHOUT_CLASSIFICATION	3.475982321660057E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999652401767833	WITHOUT_CLASSIFICATION	3.475982321660057E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9594488950892653	WITHOUT_CLASSIFICATION	0.04055110491073461	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9990423518090454	WITHOUT_CLASSIFICATION	9.576481909545928E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.99995321672052	WITHOUT_CLASSIFICATION	4.6783279480140246E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9998071980130975	WITHOUT_CLASSIFICATION	1.92801986902443E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9996849185978572	WITHOUT_CLASSIFICATION	3.1508140214272373E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9993048616063606	WITHOUT_CLASSIFICATION	6.951383936394753E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9993048616063606	WITHOUT_CLASSIFICATION	6.951383936394753E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999693383208921	WITHOUT_CLASSIFICATION	3.066167910788591E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999693383208921	WITHOUT_CLASSIFICATION	3.066167910788591E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999962921205129	WITHOUT_CLASSIFICATION	3.707879487106047E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.999962921205129	WITHOUT_CLASSIFICATION	3.707879487106047E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999973317067588	WITHOUT_CLASSIFICATION	2.668293241194832E-6	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999807477643742	WITHOUT_CLASSIFICATION	1.9252235625818588E-5	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.999989019079787	WITHOUT_CLASSIFICATION	1.0980920212983038E-5	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999997936217102	WITHOUT_CLASSIFICATION	2.0637828982522252E-7	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999989954198707	WITHOUT_CLASSIFICATION	1.004580129251865E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999998934789919	WITHOUT_CLASSIFICATION	1.0652100812884932E-7	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9996808887252095	WITHOUT_CLASSIFICATION	3.1911127479044703E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999993417587068	WITHOUT_CLASSIFICATION	6.582412932328933E-7	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999967942032573	WITHOUT_CLASSIFICATION	3.2057967427252166E-6	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999813625499535	WITHOUT_CLASSIFICATION	1.863745004643729E-5	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999995320768745	WITHOUT_CLASSIFICATION	4.679231254541582E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9994524425741865	WITHOUT_CLASSIFICATION	5.47557425813458E-4	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999614663866	WITHOUT_CLASSIFICATION	3.8533613395645265E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999614663866	WITHOUT_CLASSIFICATION	3.8533613395645265E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9997738705025435	WITHOUT_CLASSIFICATION	2.2612949745649127E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9997738705025435	WITHOUT_CLASSIFICATION	2.2612949745649127E-4	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999989699643803	WITHOUT_CLASSIFICATION	1.0300356197299436E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999989699643803	WITHOUT_CLASSIFICATION	1.0300356197299436E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999973317067588	WITHOUT_CLASSIFICATION	2.668293241194832E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9594488950892653	WITHOUT_CLASSIFICATION	0.04055110491073461	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9990423518090454	WITHOUT_CLASSIFICATION	9.576481909545928E-4	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999976203858357	WITHOUT_CLASSIFICATION	2.3796141642036023E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999919164472941	WITHOUT_CLASSIFICATION	8.083552705873857E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999883168706323	WITHOUT_CLASSIFICATION	1.168312936772219E-5	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9967488452222473	WITHOUT_CLASSIFICATION	0.003251154777752792	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999685697518803	WITHOUT_CLASSIFICATION	3.1430248119787387E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999685697518803	WITHOUT_CLASSIFICATION	3.1430248119787387E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9996917225799516	WITHOUT_CLASSIFICATION	3.0827742004839996E-4	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9996917225799516	WITHOUT_CLASSIFICATION	3.0827742004839996E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999990509218355	WITHOUT_CLASSIFICATION	9.49078164594366E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999989055158469	WITHOUT_CLASSIFICATION	1.0944841531364937E-6	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999902188192081	WITHOUT_CLASSIFICATION	9.781180791848862E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.999992715703414	WITHOUT_CLASSIFICATION	7.2842965861170404E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.999992715703414	WITHOUT_CLASSIFICATION	7.2842965861170404E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999203765391	WITHOUT_CLASSIFICATION	7.962346093788975E-8	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999508045797552	WITHOUT_CLASSIFICATION	4.919542024494914E-5	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999996764743241	WITHOUT_CLASSIFICATION	3.23525675913551E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999933959341172	WITHOUT_CLASSIFICATION	6.604065882736001E-6	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999978327735013	WITHOUT_CLASSIFICATION	2.1672264987036764E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999998859780643	WITHOUT_CLASSIFICATION	1.1402193564618462E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999990191115943	WITHOUT_CLASSIFICATION	9.808884056533175E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999990191115943	WITHOUT_CLASSIFICATION	9.808884056533175E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.999999635343511	WITHOUT_CLASSIFICATION	3.646564890502987E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999999686751746	WITHOUT_CLASSIFICATION	3.132482543401199E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999990509218355	WITHOUT_CLASSIFICATION	9.49078164594366E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999990509218355	WITHOUT_CLASSIFICATION	9.49078164594366E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999999667907121	WITHOUT_CLASSIFICATION	3.320928780310578E-8	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.999992715703414	WITHOUT_CLASSIFICATION	7.2842965861170404E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9998641673193934	WITHOUT_CLASSIFICATION	1.3583268060650682E-4	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999954714637304	WITHOUT_CLASSIFICATION	4.528536269694064E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999954714637304	WITHOUT_CLASSIFICATION	4.528536269694064E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999203765391	WITHOUT_CLASSIFICATION	7.962346093788975E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999933959341172	WITHOUT_CLASSIFICATION	6.604065882736001E-6	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999871828240049	WITHOUT_CLASSIFICATION	1.281717599520254E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999976469016698	WITHOUT_CLASSIFICATION	2.353098330244129E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999952795902255	WITHOUT_CLASSIFICATION	4.720409774539277E-6	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999041138499173	WITHOUT_CLASSIFICATION	9.588615008271669E-5	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9998884850731438	WITHOUT_CLASSIFICATION	1.115149268562138E-4	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.999999347523551	WITHOUT_CLASSIFICATION	6.524764489714836E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9996226710340494	WITHOUT_CLASSIFICATION	3.773289659505295E-4	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999999366834607	WITHOUT_CLASSIFICATION	6.331653935844149E-8	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999914317496663	WITHOUT_CLASSIFICATION	8.568250333638516E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999739547294	WITHOUT_CLASSIFICATION	2.6045270538904294E-8	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999916930845	WITHOUT_CLASSIFICATION	8.306915481226023E-9	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999862289269228	WITHOUT_CLASSIFICATION	1.3771073077132826E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.99999394948721	WITHOUT_CLASSIFICATION	6.050512790011769E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999992525975642	WITHOUT_CLASSIFICATION	7.474024358103395E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995097153032	WITHOUT_CLASSIFICATION	4.902846968915924E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999995362847951	WITHOUT_CLASSIFICATION	4.63715204899633E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999906357694504	WITHOUT_CLASSIFICATION	9.364230549632312E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999837205941	WITHOUT_CLASSIFICATION	1.6279405936440987E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999986964899281	WITHOUT_CLASSIFICATION	1.303510071869857E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999786021139	WITHOUT_CLASSIFICATION	2.139788609382451E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999985430643661	WITHOUT_CLASSIFICATION	1.456935633870828E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999998112216779	WITHOUT_CLASSIFICATION	1.8877832207131155E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999994915312976	WITHOUT_CLASSIFICATION	5.084687023986629E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999994915312976	WITHOUT_CLASSIFICATION	5.084687023986629E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999994915312976	WITHOUT_CLASSIFICATION	5.084687023986629E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999044024052545	WITHOUT_CLASSIFICATION	9.559759474553362E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999044024052545	WITHOUT_CLASSIFICATION	9.559759474553362E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999910051644343	WITHOUT_CLASSIFICATION	8.994835565656181E-6	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.999999755742599	WITHOUT_CLASSIFICATION	2.442574009998632E-7	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999973658589425	WITHOUT_CLASSIFICATION	2.6341410575457176E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999806932352625	WITHOUT_CLASSIFICATION	1.9306764737431178E-5	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999981953839954	WITHOUT_CLASSIFICATION	1.80461600471534E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9996771380540087	WITHOUT_CLASSIFICATION	3.228619459912699E-4	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9997713320647288	WITHOUT_CLASSIFICATION	2.2866793527132544E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9985530283067251	WITHOUT_CLASSIFICATION	0.0014469716932749162	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999875752160824	WITHOUT_CLASSIFICATION	1.2424783917577682E-5	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.999803044968801	WITHOUT_CLASSIFICATION	1.9695503119893776E-4	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999995932524167	WITHOUT_CLASSIFICATION	4.0674758320985896E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999938013844503	WITHOUT_CLASSIFICATION	6.198615549688158E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999938013844503	WITHOUT_CLASSIFICATION	6.198615549688158E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999988793919572	WITHOUT_CLASSIFICATION	1.1206080428637786E-6	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9997932968834059	WITHOUT_CLASSIFICATION	2.0670311659409942E-4	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999480144235	WITHOUT_CLASSIFICATION	5.198557645922488E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999926821121972	WITHOUT_CLASSIFICATION	7.317887802783157E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999926821121972	WITHOUT_CLASSIFICATION	7.317887802783157E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999926821121972	WITHOUT_CLASSIFICATION	7.317887802783157E-6	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999527719395	WITHOUT_CLASSIFICATION	4.722806056524333E-8	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999671048272	WITHOUT_CLASSIFICATION	3.289517291980611E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999998540108549	WITHOUT_CLASSIFICATION	1.4598914508194662E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999849168667998	WITHOUT_CLASSIFICATION	1.508313320017469E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999972753811045	WITHOUT_CLASSIFICATION	2.7246188954623053E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999994125186927	WITHOUT_CLASSIFICATION	5.874813072181144E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999862289269228	WITHOUT_CLASSIFICATION	1.3771073077132826E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.99999394948721	WITHOUT_CLASSIFICATION	6.050512790011769E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999837205941	WITHOUT_CLASSIFICATION	1.6279405936440987E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999986964899281	WITHOUT_CLASSIFICATION	1.303510071869857E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999786021139	WITHOUT_CLASSIFICATION	2.139788609382451E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999985430643661	WITHOUT_CLASSIFICATION	1.456935633870828E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999998112216779	WITHOUT_CLASSIFICATION	1.8877832207131155E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999926821121972	WITHOUT_CLASSIFICATION	7.317887802783157E-6	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.999967521234956	WITHOUT_CLASSIFICATION	3.2478765044054017E-5	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999997491766444	WITHOUT_CLASSIFICATION	2.5082335570318824E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999969505110536	WITHOUT_CLASSIFICATION	3.0494889464476634E-6	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.7457059811638374	WITHOUT_CLASSIFICATION	0.2542940188361626	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9998616930673849	WITHOUT_CLASSIFICATION	1.3830693261515086E-4	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9982722432767032	WITHOUT_CLASSIFICATION	0.0017277567232968864	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998319209051663	WITHOUT_CLASSIFICATION	1.6807909483375222E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999981170409838	WITHOUT_CLASSIFICATION	1.8829590161351771E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999590631954	WITHOUT_CLASSIFICATION	4.0936804682017133E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999999590631954	WITHOUT_CLASSIFICATION	4.0936804682017133E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999973575521	WITHOUT_CLASSIFICATION	2.6424480148527354E-9	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999973575521	WITHOUT_CLASSIFICATION	2.6424480148527354E-9	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999970018918128	WITHOUT_CLASSIFICATION	2.9981081872576046E-6	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999997784465348	WITHOUT_CLASSIFICATION	2.2155346523008596E-7	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999994146065629	WITHOUT_CLASSIFICATION	5.853934370372742E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999938704894885	WITHOUT_CLASSIFICATION	6.129510511481799E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999938704894885	WITHOUT_CLASSIFICATION	6.129510511481799E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999842342970184	WITHOUT_CLASSIFICATION	1.576570298157009E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999877344509761	WITHOUT_CLASSIFICATION	1.2265549023780284E-5	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999942335133	WITHOUT_CLASSIFICATION	5.7664867710894054E-9	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999992525975642	WITHOUT_CLASSIFICATION	7.474024358103395E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999938704894885	WITHOUT_CLASSIFICATION	6.129510511481799E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.999999992220699	WITHOUT_CLASSIFICATION	7.779301030240413E-9	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999924252966066	WITHOUT_CLASSIFICATION	7.574703393428486E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995720006452	WITHOUT_CLASSIFICATION	4.2799935483369044E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999989392216562	WITHOUT_CLASSIFICATION	1.0607783437495094E-6	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999998634768675	WITHOUT_CLASSIFICATION	1.3652313250684799E-7	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999978783596221	WITHOUT_CLASSIFICATION	2.1216403779153715E-6	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999950724049822	WITHOUT_CLASSIFICATION	4.927595017718653E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999991855050252	WITHOUT_CLASSIFICATION	8.144949748377914E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999982677722111	WITHOUT_CLASSIFICATION	1.7322277888922496E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999982677722111	WITHOUT_CLASSIFICATION	1.7322277888922496E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999923413220256	WITHOUT_CLASSIFICATION	7.658677974387717E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999923413220256	WITHOUT_CLASSIFICATION	7.658677974387717E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999923413220256	WITHOUT_CLASSIFICATION	7.658677974387717E-6	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999534135739168	WITHOUT_CLASSIFICATION	4.658642608335298E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999947392970763	WITHOUT_CLASSIFICATION	5.260702923729474E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999947392970763	WITHOUT_CLASSIFICATION	5.260702923729474E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999932423730286	WITHOUT_CLASSIFICATION	6.7576269714472105E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999932423730286	WITHOUT_CLASSIFICATION	6.7576269714472105E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999968346698787	WITHOUT_CLASSIFICATION	3.1653301213872295E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999955112342361	WITHOUT_CLASSIFICATION	4.488765763907127E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.99999920680323	WITHOUT_CLASSIFICATION	7.931967699917647E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999912837711608	WITHOUT_CLASSIFICATION	8.716228839266466E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997523302638195	WITHOUT_CLASSIFICATION	2.4766973618051765E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999849420001613	WITHOUT_CLASSIFICATION	1.505799983861335E-5	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.999999435599144	WITHOUT_CLASSIFICATION	5.644008560883054E-7	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999994162717808	WITHOUT_CLASSIFICATION	5.837282191635045E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999992833520114	WITHOUT_CLASSIFICATION	7.166479886004445E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999952681264102	WITHOUT_CLASSIFICATION	4.731873589817872E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.99994088108743	WITHOUT_CLASSIFICATION	5.9118912570128146E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999962898434	WITHOUT_CLASSIFICATION	3.710156601250371E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999970832321929	WITHOUT_CLASSIFICATION	2.9167678070372986E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999996784689623	WITHOUT_CLASSIFICATION	3.2153103758389575E-7	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9999312454077615	WITHOUT_CLASSIFICATION	6.875459223851376E-5	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999997651938224	WITHOUT_CLASSIFICATION	2.3480617765551461E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999569520508851	WITHOUT_CLASSIFICATION	4.304794911485787E-5	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999896686699377	WITHOUT_CLASSIFICATION	1.0331330062275537E-5	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999994229735837	WITHOUT_CLASSIFICATION	5.770264163377676E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999985227038073	WITHOUT_CLASSIFICATION	1.477296192698684E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999992179503818	WITHOUT_CLASSIFICATION	7.82049618154966E-7	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999012947116	WITHOUT_CLASSIFICATION	9.870528839042615E-8	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999997463773079	WITHOUT_CLASSIFICATION	2.536226920780268E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999978855779477	WITHOUT_CLASSIFICATION	2.1144220523748434E-6	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999886099935262	WITHOUT_CLASSIFICATION	1.1390006473719494E-5	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999882023562913	WITHOUT_CLASSIFICATION	1.1797643708811586E-5	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999914200329333	WITHOUT_CLASSIFICATION	8.579967066717701E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999749597561941	WITHOUT_CLASSIFICATION	2.504024380585249E-5	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999991208253496	WITHOUT_CLASSIFICATION	8.791746504310392E-7	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.999984253201582	WITHOUT_CLASSIFICATION	1.5746798417997957E-5	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999864447076732	WITHOUT_CLASSIFICATION	1.3555292326741154E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999570939815668	WITHOUT_CLASSIFICATION	4.2906018433133646E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.999996337114914	WITHOUT_CLASSIFICATION	3.662885086069981E-6	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999886921824379	WITHOUT_CLASSIFICATION	1.1307817561981475E-5	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999750414317298	WITHOUT_CLASSIFICATION	2.4958568270168305E-5	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.999998665246415	WITHOUT_CLASSIFICATION	1.3347535850257492E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999965985998838	WITHOUT_CLASSIFICATION	3.4014001161536464E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999998315056098	WITHOUT_CLASSIFICATION	1.684943901796559E-7	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999951579242456	WITHOUT_CLASSIFICATION	4.842075754287243E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999896663195083	WITHOUT_CLASSIFICATION	1.033368049164155E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999997146745176	WITHOUT_CLASSIFICATION	2.8532548234030184E-7	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999989344357322	WITHOUT_CLASSIFICATION	1.0655642677610992E-6	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999978841875249	WITHOUT_CLASSIFICATION	2.11581247506297E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999980303105184	WITHOUT_CLASSIFICATION	1.969689481625604E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999998645022851	WITHOUT_CLASSIFICATION	1.354977148307356E-7	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999742526043203	WITHOUT_CLASSIFICATION	2.574739567974326E-5	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999868628997852	WITHOUT_CLASSIFICATION	1.3137100214752973E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999977390249277	WITHOUT_CLASSIFICATION	2.260975072238938E-6	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.999995545950298	WITHOUT_CLASSIFICATION	4.454049701928795E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999433844596679	WITHOUT_CLASSIFICATION	5.661554033214036E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999954804121274	WITHOUT_CLASSIFICATION	4.519587872567827E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995411084172	WITHOUT_CLASSIFICATION	4.588915828706633E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999799166593958	WITHOUT_CLASSIFICATION	2.008334060420992E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999799166593958	WITHOUT_CLASSIFICATION	2.008334060420992E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999843767371587	WITHOUT_CLASSIFICATION	1.5623262841320363E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999649187557336	WITHOUT_CLASSIFICATION	3.508124426647573E-5	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999985505589999	WITHOUT_CLASSIFICATION	1.4494410001902795E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.999999165489317	WITHOUT_CLASSIFICATION	8.345106829728968E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999993440808453	WITHOUT_CLASSIFICATION	6.559191547006126E-7	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9996622051433207	WITHOUT_CLASSIFICATION	3.377948566793273E-4	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999625785927717	WITHOUT_CLASSIFICATION	3.7421407228328525E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999609609220419	WITHOUT_CLASSIFICATION	3.9039077958137894E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999997059656807	WITHOUT_CLASSIFICATION	2.940343194250906E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997523302638195	WITHOUT_CLASSIFICATION	2.4766973618051765E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999997059656807	WITHOUT_CLASSIFICATION	2.940343194250906E-7	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999895438793375	WITHOUT_CLASSIFICATION	1.0456120662646398E-5	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998695020132	WITHOUT_CLASSIFICATION	1.3049798676202518E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999520446075221	WITHOUT_CLASSIFICATION	4.7955392477980174E-5	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999995647669853	WITHOUT_CLASSIFICATION	4.3523301477751805E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999947041322611	WITHOUT_CLASSIFICATION	5.295867738863938E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999983685197094	WITHOUT_CLASSIFICATION	1.6314802906512498E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999923595932881	WITHOUT_CLASSIFICATION	7.64040671193378E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999957180438389	WITHOUT_CLASSIFICATION	4.281956161085951E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999975957415026	WITHOUT_CLASSIFICATION	2.404258497403094E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999569520508851	WITHOUT_CLASSIFICATION	4.304794911485787E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999992991975414	WITHOUT_CLASSIFICATION	7.00802458599209E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995411084172	WITHOUT_CLASSIFICATION	4.588915828706633E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999990194514283	WITHOUT_CLASSIFICATION	9.805485716636402E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999983685197094	WITHOUT_CLASSIFICATION	1.6314802906512498E-6	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999923595932881	WITHOUT_CLASSIFICATION	7.64040671193378E-6	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999957180438389	WITHOUT_CLASSIFICATION	4.281956161085951E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999906685553492	WITHOUT_CLASSIFICATION	9.331444650728222E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999975622428176	WITHOUT_CLASSIFICATION	2.4377571823409283E-6	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.999996458921795	WITHOUT_CLASSIFICATION	3.5410782050943975E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999908308765861	WITHOUT_CLASSIFICATION	9.169123413799526E-6	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999988114403187	WITHOUT_CLASSIFICATION	1.188559681279431E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999776725171935	WITHOUT_CLASSIFICATION	2.232748280647788E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9999038806495484	WITHOUT_CLASSIFICATION	9.61193504516776E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999958098996723	WITHOUT_CLASSIFICATION	4.190100327610171E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999849420001613	WITHOUT_CLASSIFICATION	1.505799983861335E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999992833520114	WITHOUT_CLASSIFICATION	7.166479886004445E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999992833520114	WITHOUT_CLASSIFICATION	7.166479886004445E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999946094534445	WITHOUT_CLASSIFICATION	5.390546555428658E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999952681264102	WITHOUT_CLASSIFICATION	4.731873589817872E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.99994088108743	WITHOUT_CLASSIFICATION	5.9118912570128146E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999962898434	WITHOUT_CLASSIFICATION	3.710156601250371E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999970832321929	WITHOUT_CLASSIFICATION	2.9167678070372986E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999954804121274	WITHOUT_CLASSIFICATION	4.519587872567827E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995411084172	WITHOUT_CLASSIFICATION	4.588915828706633E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999649187557336	WITHOUT_CLASSIFICATION	3.508124426647573E-5	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999823175015043	WITHOUT_CLASSIFICATION	1.7682498495659808E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999940827134535	WITHOUT_CLASSIFICATION	5.9172865465546086E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999992268661765	WITHOUT_CLASSIFICATION	7.731338234877069E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999987161395799	WITHOUT_CLASSIFICATION	1.2838604200946427E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999989502473	WITHOUT_CLASSIFICATION	1.0497527625173622E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999948819608365	WITHOUT_CLASSIFICATION	5.11803916341592E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999763603339844	WITHOUT_CLASSIFICATION	2.363966601566468E-5	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999763603339844	WITHOUT_CLASSIFICATION	2.363966601566468E-5	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999848820502151	WITHOUT_CLASSIFICATION	1.5117949784870114E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999549160942147	WITHOUT_CLASSIFICATION	4.508390578537408E-5	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999946234467207	WITHOUT_CLASSIFICATION	5.376553279238337E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999977351362731	WITHOUT_CLASSIFICATION	2.264863726892196E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999946094534445	WITHOUT_CLASSIFICATION	5.390546555428658E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999962898434	WITHOUT_CLASSIFICATION	3.710156601250371E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999970832321929	WITHOUT_CLASSIFICATION	2.9167678070372986E-6	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999996784689623	WITHOUT_CLASSIFICATION	3.2153103758389575E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999569520508851	WITHOUT_CLASSIFICATION	4.304794911485787E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999954804121274	WITHOUT_CLASSIFICATION	4.519587872567827E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995411084172	WITHOUT_CLASSIFICATION	4.588915828706633E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999997059656807	WITHOUT_CLASSIFICATION	2.940343194250906E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999940827134535	WITHOUT_CLASSIFICATION	5.9172865465546086E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.999998181224178	WITHOUT_CLASSIFICATION	1.8187758218749845E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.999998181224178	WITHOUT_CLASSIFICATION	1.8187758218749845E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999621118397368	WITHOUT_CLASSIFICATION	3.788816026330105E-5	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999981105079403	WITHOUT_CLASSIFICATION	1.8894920597605816E-6	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979837695215	WITHOUT_CLASSIFICATION	2.0162304784509575E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9990789051624394	WITHOUT_CLASSIFICATION	9.21094837560703E-4	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999102619098	WITHOUT_CLASSIFICATION	8.973809021115328E-8	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999102619098	WITHOUT_CLASSIFICATION	8.973809021115328E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999340841917	WITHOUT_CLASSIFICATION	6.591580829239347E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999340841917	WITHOUT_CLASSIFICATION	6.591580829239347E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999982511295811	WITHOUT_CLASSIFICATION	1.7488704188206948E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999982511295811	WITHOUT_CLASSIFICATION	1.7488704188206948E-6	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999982511295811	WITHOUT_CLASSIFICATION	1.7488704188206948E-6	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999977063313089	WITHOUT_CLASSIFICATION	2.2936686910883313E-6	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979102788545	WITHOUT_CLASSIFICATION	2.089721145450519E-6	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999972631521773	WITHOUT_CLASSIFICATION	2.7368478225931084E-6	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999987938968018	WITHOUT_CLASSIFICATION	1.206103198204832E-6	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999993131111584	WITHOUT_CLASSIFICATION	6.868888415139822E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997523302638195	WITHOUT_CLASSIFICATION	2.4766973618051765E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999849420001613	WITHOUT_CLASSIFICATION	1.505799983861335E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999992833520114	WITHOUT_CLASSIFICATION	7.166479886004445E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999952681264102	WITHOUT_CLASSIFICATION	4.731873589817872E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999992179503818	WITHOUT_CLASSIFICATION	7.82049618154966E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999954804121274	WITHOUT_CLASSIFICATION	4.519587872567827E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999908308765861	WITHOUT_CLASSIFICATION	9.169123413799526E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999977351362731	WITHOUT_CLASSIFICATION	2.264863726892196E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999971553281782	WITHOUT_CLASSIFICATION	2.8446718217166324E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999606850075402	WITHOUT_CLASSIFICATION	3.9314992459663934E-5	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9996246988996027	WITHOUT_CLASSIFICATION	3.7530110039723E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999878884780438	WITHOUT_CLASSIFICATION	1.211152195622197E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999460975793242	WITHOUT_CLASSIFICATION	5.3902420675949425E-5	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.999941214149915	WITHOUT_CLASSIFICATION	5.8785850084884776E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999982587450501	WITHOUT_CLASSIFICATION	1.7412549498457363E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999064073947654	WITHOUT_CLASSIFICATION	9.359260523457599E-5	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999824192627235	WITHOUT_CLASSIFICATION	1.758073727648142E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9954033771786979	WITHOUT_CLASSIFICATION	0.004596622821302159	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9989091827785324	WITHOUT_CLASSIFICATION	0.0010908172214676535	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999920689445052	WITHOUT_CLASSIFICATION	7.931055494828372E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999976469016698	WITHOUT_CLASSIFICATION	2.353098330244129E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.999999962898434	WITHOUT_CLASSIFICATION	3.710156601250371E-8	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999970832321929	WITHOUT_CLASSIFICATION	2.9167678070372986E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999954804121274	WITHOUT_CLASSIFICATION	4.519587872567827E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995411084172	WITHOUT_CLASSIFICATION	4.588915828706633E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999997059656807	WITHOUT_CLASSIFICATION	2.940343194250906E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999940827134535	WITHOUT_CLASSIFICATION	5.9172865465546086E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999992268661765	WITHOUT_CLASSIFICATION	7.731338234877069E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999989502473	WITHOUT_CLASSIFICATION	1.0497527625173622E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999948819608365	WITHOUT_CLASSIFICATION	5.11803916341592E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999996597741176	WITHOUT_CLASSIFICATION	3.4022588231591106E-7	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999998796062285	WITHOUT_CLASSIFICATION	1.2039377157386395E-7	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999507942281514	WITHOUT_CLASSIFICATION	4.9205771848785373E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999996651055993	WITHOUT_CLASSIFICATION	3.3489440075159073E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999826157241177	WITHOUT_CLASSIFICATION	1.7384275882325013E-5	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999940064162409	WITHOUT_CLASSIFICATION	5.993583759001703E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9999487538344926	WITHOUT_CLASSIFICATION	5.1246165507502536E-5	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999977695050783	WITHOUT_CLASSIFICATION	2.2304949216949517E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999998996371939	WITHOUT_CLASSIFICATION	1.0036280599228759E-7	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999995561864011	WITHOUT_CLASSIFICATION	4.438135989279763E-7	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.996189399885858	WITHOUT_CLASSIFICATION	0.003810600114141938	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.999990915680528	WITHOUT_CLASSIFICATION	9.08431947205757E-6	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999830153475339	WITHOUT_CLASSIFICATION	1.6984652466137053E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9999819567658862	WITHOUT_CLASSIFICATION	1.8043234113879124E-5	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999999059949206	WITHOUT_CLASSIFICATION	9.400507938528687E-8	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.99994088108743	WITHOUT_CLASSIFICATION	5.9118912570128146E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999843767371587	WITHOUT_CLASSIFICATION	1.5623262841320363E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999649187557336	WITHOUT_CLASSIFICATION	3.508124426647573E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999948819608365	WITHOUT_CLASSIFICATION	5.11803916341592E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999964648933243	WITHOUT_CLASSIFICATION	3.5351066758420033E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999763661367893	WITHOUT_CLASSIFICATION	2.3633863210756166E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999994565381956	WITHOUT_CLASSIFICATION	5.434618044912494E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999994565381956	WITHOUT_CLASSIFICATION	5.434618044912494E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999853738618	WITHOUT_CLASSIFICATION	1.4626138273125963E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999853738618	WITHOUT_CLASSIFICATION	1.4626138273125963E-8	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.999980922334322	WITHOUT_CLASSIFICATION	1.9077665677974176E-5	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9761514351108274	WITHOUT_CLASSIFICATION	0.023848564889172683	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9998883068583221	WITHOUT_CLASSIFICATION	1.1169314167787747E-4	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999356710111064	WITHOUT_CLASSIFICATION	6.432898889362539E-5	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999521737697982	WITHOUT_CLASSIFICATION	4.782623020194095E-5	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999177724054712	WITHOUT_CLASSIFICATION	8.222759452880588E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9998529208377808	WITHOUT_CLASSIFICATION	1.4707916221924595E-4	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999279110383947	WITHOUT_CLASSIFICATION	7.208896160518782E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999991438468109	WITHOUT_CLASSIFICATION	8.561531890781005E-7	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999827869490311	WITHOUT_CLASSIFICATION	1.7213050968861157E-5	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9992428555657608	WITHOUT_CLASSIFICATION	7.571444342391628E-4	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999974430220099	WITHOUT_CLASSIFICATION	2.5569779901523616E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999982602248734	WITHOUT_CLASSIFICATION	1.739775126602708E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999048045318681	WITHOUT_CLASSIFICATION	9.51954681318996E-5	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999526922427334	WITHOUT_CLASSIFICATION	4.7307757266570996E-5	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999914271926815	WITHOUT_CLASSIFICATION	8.572807318498963E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999819173630452	WITHOUT_CLASSIFICATION	1.8082636954893188E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999657347909605	WITHOUT_CLASSIFICATION	3.426520903942625E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9998215399087544	WITHOUT_CLASSIFICATION	1.784600912454325E-4	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999464935684976	WITHOUT_CLASSIFICATION	5.350643150245414E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9998797579538876	WITHOUT_CLASSIFICATION	1.2024204611229153E-4	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999202597873031	WITHOUT_CLASSIFICATION	7.974021269689913E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9998785436809159	WITHOUT_CLASSIFICATION	1.2145631908407463E-4	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999109047802173	WITHOUT_CLASSIFICATION	8.909521978270155E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999991253654243	WITHOUT_CLASSIFICATION	8.746345756249591E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999987669820741	WITHOUT_CLASSIFICATION	1.2330179259104401E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999938929524553	WITHOUT_CLASSIFICATION	6.1070475446412215E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999917232095307	WITHOUT_CLASSIFICATION	8.276790469332258E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999040016144138	WITHOUT_CLASSIFICATION	9.599838558613757E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999828672263709	WITHOUT_CLASSIFICATION	1.7132773629145125E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999996132744612	WITHOUT_CLASSIFICATION	3.8672553882857153E-7	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999963551421143	WITHOUT_CLASSIFICATION	3.6448578858325055E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999994943848479	WITHOUT_CLASSIFICATION	5.056151520488522E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999532886268874	WITHOUT_CLASSIFICATION	4.6711373112559065E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999993867647632	WITHOUT_CLASSIFICATION	6.132352367336004E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999988353433658	WITHOUT_CLASSIFICATION	1.1646566342494216E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999243434537	WITHOUT_CLASSIFICATION	7.56565462397988E-8	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999998102466946	WITHOUT_CLASSIFICATION	1.897533053636861E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999883363993185	WITHOUT_CLASSIFICATION	1.166360068143894E-5	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999640483249953	WITHOUT_CLASSIFICATION	3.595167500471E-5	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999895620375516	WITHOUT_CLASSIFICATION	1.043796244837478E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999843767371587	WITHOUT_CLASSIFICATION	1.5623262841320363E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999649187557336	WITHOUT_CLASSIFICATION	3.508124426647573E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999763661367893	WITHOUT_CLASSIFICATION	2.3633863210756166E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999948819608365	WITHOUT_CLASSIFICATION	5.11803916341592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999849168667998	WITHOUT_CLASSIFICATION	1.508313320017469E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999994565381956	WITHOUT_CLASSIFICATION	5.434618044912494E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999564582336041	WITHOUT_CLASSIFICATION	4.354176639586585E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999853738618	WITHOUT_CLASSIFICATION	1.4626138273125963E-8	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999828672263709	WITHOUT_CLASSIFICATION	1.7132773629145125E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999996132744612	WITHOUT_CLASSIFICATION	3.8672553882857153E-7	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999932913799686	WITHOUT_CLASSIFICATION	6.708620031326831E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.999732563462208	WITHOUT_CLASSIFICATION	2.6743653779203233E-4	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999976078744748	WITHOUT_CLASSIFICATION	2.3921255250990365E-6	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999944293126752	WITHOUT_CLASSIFICATION	5.570687324719157E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999100731424102	WITHOUT_CLASSIFICATION	8.992685758978923E-5	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999915647555111	WITHOUT_CLASSIFICATION	8.43524448898232E-6	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999899234630233	WITHOUT_CLASSIFICATION	1.0076536976625262E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999567376754495	WITHOUT_CLASSIFICATION	4.326232455061855E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999053618594936	WITHOUT_CLASSIFICATION	9.463814050640493E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999420606993418	WITHOUT_CLASSIFICATION	5.7939300658135767E-5	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999986271588579	WITHOUT_CLASSIFICATION	1.37284114212454E-6	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999941910303012	WITHOUT_CLASSIFICATION	5.808969698909963E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999995532549655	WITHOUT_CLASSIFICATION	4.467450346341552E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999491774341518	WITHOUT_CLASSIFICATION	5.0822565848237694E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999965447237902	WITHOUT_CLASSIFICATION	3.455276209878645E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999987775496172	WITHOUT_CLASSIFICATION	1.2224503827696442E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999989990534447	WITHOUT_CLASSIFICATION	1.0009465553049776E-6	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999993806606258	WITHOUT_CLASSIFICATION	6.193393741289301E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999969324888877	WITHOUT_CLASSIFICATION	3.0675111124184054E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.999999010982122	WITHOUT_CLASSIFICATION	9.890178781134762E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999569520508851	WITHOUT_CLASSIFICATION	4.304794911485787E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999992991975414	WITHOUT_CLASSIFICATION	7.00802458599209E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995411084172	WITHOUT_CLASSIFICATION	4.588915828706633E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999989502473	WITHOUT_CLASSIFICATION	1.0497527625173622E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999954694583376	WITHOUT_CLASSIFICATION	4.530541662374987E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999998963391649	WITHOUT_CLASSIFICATION	1.0366083510342734E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999938618935772	WITHOUT_CLASSIFICATION	6.138106422857838E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999998963391649	WITHOUT_CLASSIFICATION	1.0366083510342734E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999998963391649	WITHOUT_CLASSIFICATION	1.0366083510342734E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.999999959131525	WITHOUT_CLASSIFICATION	4.0868475056673024E-8	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999943445590626	WITHOUT_CLASSIFICATION	5.655440937443911E-6	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999995365572755	WITHOUT_CLASSIFICATION	4.634427245795215E-7	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.999999794369558	WITHOUT_CLASSIFICATION	2.056304419354113E-7	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999897147829062	WITHOUT_CLASSIFICATION	1.0285217093712443E-5	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999958022676305	WITHOUT_CLASSIFICATION	4.197732369433276E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999996088266692	WITHOUT_CLASSIFICATION	3.911733308219711E-7	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999862269667247	WITHOUT_CLASSIFICATION	1.3773033275370984E-5	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999790411951965	WITHOUT_CLASSIFICATION	2.0958804803440364E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999986014840555	WITHOUT_CLASSIFICATION	1.3985159444704123E-6	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9999083775659715	WITHOUT_CLASSIFICATION	9.1622434028537E-5	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.99999896177298	WITHOUT_CLASSIFICATION	1.0382270199766753E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999891323239937	WITHOUT_CLASSIFICATION	1.0867676006325503E-5	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999972658987879	WITHOUT_CLASSIFICATION	2.734101212139498E-6	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999975553058511	WITHOUT_CLASSIFICATION	2.4446941489351117E-6	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999822635957586	WITHOUT_CLASSIFICATION	1.773640424140197E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999569520508851	WITHOUT_CLASSIFICATION	4.304794911485787E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999799166593958	WITHOUT_CLASSIFICATION	2.008334060420992E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999843767371587	WITHOUT_CLASSIFICATION	1.5623262841320363E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999649187557336	WITHOUT_CLASSIFICATION	3.508124426647573E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999763661367893	WITHOUT_CLASSIFICATION	2.3633863210756166E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999906685553492	WITHOUT_CLASSIFICATION	9.331444650728222E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999908308765861	WITHOUT_CLASSIFICATION	9.169123413799526E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999948819608365	WITHOUT_CLASSIFICATION	5.11803916341592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999375070188878	WITHOUT_CLASSIFICATION	6.24929811121181E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999994565381956	WITHOUT_CLASSIFICATION	5.434618044912494E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999994565381956	WITHOUT_CLASSIFICATION	5.434618044912494E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999564582336041	WITHOUT_CLASSIFICATION	4.354176639586585E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999356710111064	WITHOUT_CLASSIFICATION	6.432898889362539E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9998529208377808	WITHOUT_CLASSIFICATION	1.4707916221924595E-4	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999100731424102	WITHOUT_CLASSIFICATION	8.992685758978923E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999937344228144	WITHOUT_CLASSIFICATION	6.2655771856157645E-6	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999777949199083	WITHOUT_CLASSIFICATION	2.2205080091716386E-5	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999997915940182	WITHOUT_CLASSIFICATION	2.0840598171026124E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999998315860806	WITHOUT_CLASSIFICATION	1.6841391941641224E-7	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999979455129157	WITHOUT_CLASSIFICATION	2.054487084326149E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999973813476524	WITHOUT_CLASSIFICATION	2.6186523476761843E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999997761165734	WITHOUT_CLASSIFICATION	2.2388342647072152E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.999999895464846	WITHOUT_CLASSIFICATION	1.0453515400781838E-7	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.999998716338062	WITHOUT_CLASSIFICATION	1.2836619379699302E-6	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999958932902974	WITHOUT_CLASSIFICATION	4.106709702627781E-6	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999985701450699	WITHOUT_CLASSIFICATION	1.4298549300850792E-6	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999871196568	WITHOUT_CLASSIFICATION	1.2880343207656778E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999591756415612	WITHOUT_CLASSIFICATION	4.082435843880744E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999999100622743	WITHOUT_CLASSIFICATION	8.993772566750289E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999853016218747	WITHOUT_CLASSIFICATION	1.4698378125364376E-5	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999592000011546	WITHOUT_CLASSIFICATION	4.079999884546104E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999853738618	WITHOUT_CLASSIFICATION	1.4626138273125963E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999853738618	WITHOUT_CLASSIFICATION	1.4626138273125963E-8	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999464935684976	WITHOUT_CLASSIFICATION	5.350643150245414E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9998797579538876	WITHOUT_CLASSIFICATION	1.2024204611229153E-4	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9998785436809159	WITHOUT_CLASSIFICATION	1.2145631908407463E-4	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999109047802173	WITHOUT_CLASSIFICATION	8.909521978270155E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999991253654243	WITHOUT_CLASSIFICATION	8.746345756249591E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999987669820741	WITHOUT_CLASSIFICATION	1.2330179259104401E-6	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999938929524553	WITHOUT_CLASSIFICATION	6.1070475446412215E-6	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999917232095307	WITHOUT_CLASSIFICATION	8.276790469332258E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999040016144138	WITHOUT_CLASSIFICATION	9.599838558613757E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999828672263709	WITHOUT_CLASSIFICATION	1.7132773629145125E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999828672263709	WITHOUT_CLASSIFICATION	1.7132773629145125E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999567376754495	WITHOUT_CLASSIFICATION	4.326232455061855E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999873336528445	WITHOUT_CLASSIFICATION	1.2666347155526221E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999244279507353	WITHOUT_CLASSIFICATION	7.557204926470225E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999869931824225	WITHOUT_CLASSIFICATION	1.3006817577531508E-5	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999247242447091	WITHOUT_CLASSIFICATION	7.527575529098573E-5	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999946154088565	WITHOUT_CLASSIFICATION	5.384591143540728E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.999980566432246	WITHOUT_CLASSIFICATION	1.9433567754031277E-5	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999972457612006	WITHOUT_CLASSIFICATION	2.754238799293818E-6	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999973668874855	WITHOUT_CLASSIFICATION	2.6331125144396966E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989306725744	WITHOUT_CLASSIFICATION	1.0693274255793124E-6	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.999796388455917	WITHOUT_CLASSIFICATION	2.0361154408294864E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999985485399087	WITHOUT_CLASSIFICATION	1.4514600912848182E-6	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999922122236777	WITHOUT_CLASSIFICATION	7.787776322281243E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999905482667096	WITHOUT_CLASSIFICATION	9.451733290348629E-6	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999950433761752	WITHOUT_CLASSIFICATION	4.956623824876506E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999946094534445	WITHOUT_CLASSIFICATION	5.390546555428658E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999952681264102	WITHOUT_CLASSIFICATION	4.731873589817872E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999849168667998	WITHOUT_CLASSIFICATION	1.508313320017469E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999849168667998	WITHOUT_CLASSIFICATION	1.508313320017469E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999996132744612	WITHOUT_CLASSIFICATION	3.8672553882857153E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999993867647632	WITHOUT_CLASSIFICATION	6.132352367336004E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999993867647632	WITHOUT_CLASSIFICATION	6.132352367336004E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999988353433658	WITHOUT_CLASSIFICATION	1.1646566342494216E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999243434537	WITHOUT_CLASSIFICATION	7.56565462397988E-8	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999243434537	WITHOUT_CLASSIFICATION	7.56565462397988E-8	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999100731424102	WITHOUT_CLASSIFICATION	8.992685758978923E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999420606993418	WITHOUT_CLASSIFICATION	5.7939300658135767E-5	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.999998159947702	WITHOUT_CLASSIFICATION	1.8400522979062592E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9995095901641387	WITHOUT_CLASSIFICATION	4.904098358613675E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9995095901641387	WITHOUT_CLASSIFICATION	4.904098358613675E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999973054347329	WITHOUT_CLASSIFICATION	2.694565267094551E-6	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999979696768173	WITHOUT_CLASSIFICATION	2.030323182596354E-6	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.999218735760687	WITHOUT_CLASSIFICATION	7.81264239312957E-4	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.999665775633684	WITHOUT_CLASSIFICATION	3.342243663160496E-4	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9997319291402221	WITHOUT_CLASSIFICATION	2.6807085977796825E-4	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999785555463219	WITHOUT_CLASSIFICATION	2.1444453678114516E-5	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.99999938651558	WITHOUT_CLASSIFICATION	6.134844200290181E-7	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999867095842347	WITHOUT_CLASSIFICATION	1.3290415765205414E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999569520508851	WITHOUT_CLASSIFICATION	4.304794911485787E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999995411084172	WITHOUT_CLASSIFICATION	4.588915828706633E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999906685553492	WITHOUT_CLASSIFICATION	9.331444650728222E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999776725171935	WITHOUT_CLASSIFICATION	2.232748280647788E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999848750017548	WITHOUT_CLASSIFICATION	1.512499824531389E-5	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.6858021941490988	WITHOUT_CLASSIFICATION	0.3141978058509013	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999730732152949	WITHOUT_CLASSIFICATION	2.692678470509061E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999948975687252	WITHOUT_CLASSIFICATION	5.102431274807488E-6	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999941737985679	WITHOUT_CLASSIFICATION	5.826201432048009E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999460074805674	WITHOUT_CLASSIFICATION	5.399251943270018E-5	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999973272113166	WITHOUT_CLASSIFICATION	2.6727886833033773E-6	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999720300301449	WITHOUT_CLASSIFICATION	2.7969969855015813E-5	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999998189952394	WITHOUT_CLASSIFICATION	1.8100476067378692E-7	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999986743041116	WITHOUT_CLASSIFICATION	1.3256958885028354E-6	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999998848123213	WITHOUT_CLASSIFICATION	1.1518767875035569E-7	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999567792723985	WITHOUT_CLASSIFICATION	4.322072760150841E-5	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999985774450678	WITHOUT_CLASSIFICATION	1.4225549322217822E-6	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999974018162829	WITHOUT_CLASSIFICATION	2.5981837171297545E-6	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.999998054667133	WITHOUT_CLASSIFICATION	1.9453328670215144E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999992164853903	WITHOUT_CLASSIFICATION	7.835146097494729E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999972011192667	WITHOUT_CLASSIFICATION	2.798880733294712E-6	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999938672191374	WITHOUT_CLASSIFICATION	6.132780862662468E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999981978825179	WITHOUT_CLASSIFICATION	1.802117482095778E-6	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999993412200623	WITHOUT_CLASSIFICATION	6.58779937683744E-7	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999949468017156	WITHOUT_CLASSIFICATION	5.053198284280185E-6	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.999997759958666	WITHOUT_CLASSIFICATION	2.2400413339196017E-6	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999998340991872	WITHOUT_CLASSIFICATION	1.659008126816816E-7	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999471425346609	WITHOUT_CLASSIFICATION	5.285746533920931E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998792956117	WITHOUT_CLASSIFICATION	1.2070438833825787E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999998963391649	WITHOUT_CLASSIFICATION	1.0366083510342734E-6	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999938672191374	WITHOUT_CLASSIFICATION	6.132780862662468E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999962675699527	WITHOUT_CLASSIFICATION	3.732430047235213E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999998251777222	WITHOUT_CLASSIFICATION	1.7482227774715395E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999580768045649	WITHOUT_CLASSIFICATION	4.1923195435139546E-5	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999995313392886	WITHOUT_CLASSIFICATION	4.6866071135660564E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999162500825632	WITHOUT_CLASSIFICATION	8.374991743684465E-5	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.999998705685815	WITHOUT_CLASSIFICATION	1.294314184964428E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999943740068903	WITHOUT_CLASSIFICATION	5.62599310975992E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999925004811002	WITHOUT_CLASSIFICATION	7.499518899819203E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996752327451	WITHOUT_CLASSIFICATION	3.2476725475787204E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999963794595541	WITHOUT_CLASSIFICATION	3.6205404459445908E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999947317483069	WITHOUT_CLASSIFICATION	5.268251693096711E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999991065439122	WITHOUT_CLASSIFICATION	8.934560878112717E-7	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999990997756656	WITHOUT_CLASSIFICATION	9.002243343565562E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999997800876238	WITHOUT_CLASSIFICATION	2.1991237629486787E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.999997946906987	WITHOUT_CLASSIFICATION	2.0530930129915448E-6	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999963012341934	WITHOUT_CLASSIFICATION	3.698765806575287E-6	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999978841328665	WITHOUT_CLASSIFICATION	2.1158671334902182E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999992110602606	WITHOUT_CLASSIFICATION	7.889397393451326E-7	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999891016923713	WITHOUT_CLASSIFICATION	1.089830762864092E-5	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999441797454568	WITHOUT_CLASSIFICATION	5.5820254543231874E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997587866868	WITHOUT_CLASSIFICATION	2.412133132774392E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999731088860737	WITHOUT_CLASSIFICATION	2.6891113926260912E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999986452301167	WITHOUT_CLASSIFICATION	1.3547698832767598E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997587866868	WITHOUT_CLASSIFICATION	2.412133132774392E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997587866868	WITHOUT_CLASSIFICATION	2.412133132774392E-7	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999953294337631	WITHOUT_CLASSIFICATION	4.670566236834108E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999742200135296	WITHOUT_CLASSIFICATION	2.577998647041144E-5	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999934882627514	WITHOUT_CLASSIFICATION	6.511737248733456E-6	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999924460693066	WITHOUT_CLASSIFICATION	7.553930693446336E-6	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999731932278454	WITHOUT_CLASSIFICATION	2.680677215454209E-5	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999987806202489	WITHOUT_CLASSIFICATION	1.2193797510366738E-6	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9983715051808302	WITHOUT_CLASSIFICATION	0.0016284948191697848	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999992436199886	WITHOUT_CLASSIFICATION	7.563800115021191E-7	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999993738088649	WITHOUT_CLASSIFICATION	6.261911350055038E-7	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999667022259562	WITHOUT_CLASSIFICATION	3.32977740439005E-5	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999850003503017	WITHOUT_CLASSIFICATION	1.4999649698371992E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9992289166404436	WITHOUT_CLASSIFICATION	7.710833595565501E-4	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999992952477732	WITHOUT_CLASSIFICATION	7.047522268730249E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9994753833536432	WITHOUT_CLASSIFICATION	5.24616646356848E-4	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999980826450876	WITHOUT_CLASSIFICATION	1.917354912384154E-6	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9601098638111452	WITHOUT_CLASSIFICATION	0.039890136188854876	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998127884238	WITHOUT_CLASSIFICATION	1.8721157613552384E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999097458168	WITHOUT_CLASSIFICATION	9.025418322664614E-8	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997396194169	WITHOUT_CLASSIFICATION	2.6038058306850183E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999835016836	WITHOUT_CLASSIFICATION	1.6498316399343142E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999941660749649	WITHOUT_CLASSIFICATION	5.833925035149419E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999929056414106	WITHOUT_CLASSIFICATION	7.094358589429374E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999986452301167	WITHOUT_CLASSIFICATION	1.3547698832767598E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999097458168	WITHOUT_CLASSIFICATION	9.025418322664614E-8	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.999999034844904	WITHOUT_CLASSIFICATION	9.6515509597783E-7	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999842642266328	WITHOUT_CLASSIFICATION	1.5735773367193196E-5	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999900293932552	WITHOUT_CLASSIFICATION	9.970606744726494E-6	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999994870881193	WITHOUT_CLASSIFICATION	5.129118808411876E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998186057768	WITHOUT_CLASSIFICATION	1.8139422329988265E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999309532409	WITHOUT_CLASSIFICATION	6.90467591037159E-8	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998901095435	WITHOUT_CLASSIFICATION	1.0989045648233574E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999581707764	WITHOUT_CLASSIFICATION	4.182922367910243E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999958658619	WITHOUT_CLASSIFICATION	4.134138097196799E-8	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999311564617	WITHOUT_CLASSIFICATION	6.884353833412143E-8	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998824824852	WITHOUT_CLASSIFICATION	1.1751751479308743E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999716192168	WITHOUT_CLASSIFICATION	2.8380783244975946E-8	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9969627053854435	WITHOUT_CLASSIFICATION	0.0030372946145565253	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999855452011658	WITHOUT_CLASSIFICATION	1.445479883428551E-5	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9999433149620494	WITHOUT_CLASSIFICATION	5.6685037950572816E-5	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999999702130095	WITHOUT_CLASSIFICATION	2.978699047068399E-8	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999785418127453	WITHOUT_CLASSIFICATION	2.1458187254719397E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999869373073654	WITHOUT_CLASSIFICATION	1.3062692634641881E-5	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999974257251892	WITHOUT_CLASSIFICATION	2.5742748108246424E-6	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999993182763118	WITHOUT_CLASSIFICATION	6.817236881770671E-7	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999998877899876	WITHOUT_CLASSIFICATION	1.122100123122566E-7	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999995022371184	WITHOUT_CLASSIFICATION	4.977628815868722E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9998154401250378	WITHOUT_CLASSIFICATION	1.8455987496223807E-4	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9998154401250378	WITHOUT_CLASSIFICATION	1.8455987496223807E-4	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998565520478	WITHOUT_CLASSIFICATION	1.4344795214556284E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998565520478	WITHOUT_CLASSIFICATION	1.4344795214556284E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999011254221581	WITHOUT_CLASSIFICATION	9.887457784190166E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.999968005705061	WITHOUT_CLASSIFICATION	3.199429493905198E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.999974946521585	WITHOUT_CLASSIFICATION	2.505347841502028E-5	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999970990086198	WITHOUT_CLASSIFICATION	2.9009913801347963E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9993635450018523	WITHOUT_CLASSIFICATION	6.364549981477374E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999973290750506	WITHOUT_CLASSIFICATION	2.670924949476021E-6	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999993023349475	WITHOUT_CLASSIFICATION	6.976650526320286E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999998581696522	WITHOUT_CLASSIFICATION	1.418303478705198E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999527558474	WITHOUT_CLASSIFICATION	4.724415267000746E-8	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.8725851244881835	DEFECT	0.12741487551181646	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999981021857913	WITHOUT_CLASSIFICATION	1.8978142086179215E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999927114346955	WITHOUT_CLASSIFICATION	7.288565304469573E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999927114346955	WITHOUT_CLASSIFICATION	7.288565304469573E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999890490349446	WITHOUT_CLASSIFICATION	1.0950965055488837E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999890490349446	WITHOUT_CLASSIFICATION	1.0950965055488837E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999968236646568	WITHOUT_CLASSIFICATION	3.1763353432054656E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999859944485096	WITHOUT_CLASSIFICATION	1.4005551490360392E-5	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999985486889501	WITHOUT_CLASSIFICATION	1.4513110499370858E-6	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9998934368688818	WITHOUT_CLASSIFICATION	1.0656313111827097E-4	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999988010265398	WITHOUT_CLASSIFICATION	1.1989734602739037E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999767802432289	WITHOUT_CLASSIFICATION	2.321975677108099E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999215788365367	WITHOUT_CLASSIFICATION	7.842116346329324E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997587866868	WITHOUT_CLASSIFICATION	2.412133132774392E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999976768212562	WITHOUT_CLASSIFICATION	2.3231787439000624E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999988010265398	WITHOUT_CLASSIFICATION	1.1989734602739037E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999871718199298	WITHOUT_CLASSIFICATION	1.2828180070191088E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999997788880798	WITHOUT_CLASSIFICATION	2.2111192018914728E-7	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999993540579649	WITHOUT_CLASSIFICATION	6.459420352201622E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999215788365367	WITHOUT_CLASSIFICATION	7.842116346329324E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999934989765797	WITHOUT_CLASSIFICATION	6.501023420258581E-6	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999987458034629	WITHOUT_CLASSIFICATION	1.2541965371129976E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999053243923244	WITHOUT_CLASSIFICATION	9.467560767563556E-5	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9992082372935054	WITHOUT_CLASSIFICATION	7.917627064946428E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999151990454718	WITHOUT_CLASSIFICATION	8.480095452819122E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999151990454718	WITHOUT_CLASSIFICATION	8.480095452819122E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999901986329446	WITHOUT_CLASSIFICATION	9.80136705541992E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999620224429593	WITHOUT_CLASSIFICATION	3.797755704073682E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999999165130221	WITHOUT_CLASSIFICATION	8.348697785611668E-8	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999997848596931	WITHOUT_CLASSIFICATION	2.1514030702164673E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9995727137447088	WITHOUT_CLASSIFICATION	4.272862552911294E-4	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9997571874529595	WITHOUT_CLASSIFICATION	2.4281254704042665E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999780230802471	WITHOUT_CLASSIFICATION	2.197691975290174E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999983685197094	WITHOUT_CLASSIFICATION	1.6314802906512498E-6	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999855452011658	WITHOUT_CLASSIFICATION	1.445479883428551E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999812031541445	WITHOUT_CLASSIFICATION	1.8796845855472644E-5	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999716575642575	WITHOUT_CLASSIFICATION	2.834243574246871E-5	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999665722136759	WITHOUT_CLASSIFICATION	3.3427786324122016E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9993454381313643	WITHOUT_CLASSIFICATION	6.545618686357223E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9998825062610225	WITHOUT_CLASSIFICATION	1.1749373897747984E-4	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999234616085736	WITHOUT_CLASSIFICATION	7.653839142636532E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999961409224336	WITHOUT_CLASSIFICATION	3.859077566387256E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999961409224336	WITHOUT_CLASSIFICATION	3.859077566387256E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997721234245	WITHOUT_CLASSIFICATION	2.2787657548576656E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997721234245	WITHOUT_CLASSIFICATION	2.2787657548576656E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9998764816430795	WITHOUT_CLASSIFICATION	1.2351835692043494E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999781349165603	WITHOUT_CLASSIFICATION	2.186508343964139E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999995710280553	WITHOUT_CLASSIFICATION	4.289719447129416E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999311871919	WITHOUT_CLASSIFICATION	6.88128080496533E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999582750072137	WITHOUT_CLASSIFICATION	4.172499278619096E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993436357705	WITHOUT_CLASSIFICATION	6.563642294650584E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999430981103037	WITHOUT_CLASSIFICATION	5.690188969629848E-5	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999964230493293	WITHOUT_CLASSIFICATION	3.5769506705511616E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997297117380535	WITHOUT_CLASSIFICATION	2.7028826194652413E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992232341619396	WITHOUT_CLASSIFICATION	7.767658380603177E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999856316793191	WITHOUT_CLASSIFICATION	1.4368320680965122E-5	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9998797803842646	WITHOUT_CLASSIFICATION	1.2021961573536415E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997297117380535	WITHOUT_CLASSIFICATION	2.7028826194652413E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992232341619396	WITHOUT_CLASSIFICATION	7.767658380603177E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999856316793191	WITHOUT_CLASSIFICATION	1.4368320680965122E-5	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9998653795034315	WITHOUT_CLASSIFICATION	1.3462049656847596E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999812031541445	WITHOUT_CLASSIFICATION	1.8796845855472644E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999812031541445	WITHOUT_CLASSIFICATION	1.8796845855472644E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999855083934281	WITHOUT_CLASSIFICATION	1.4491606571920652E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999855083934281	WITHOUT_CLASSIFICATION	1.4491606571920652E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998400496797	WITHOUT_CLASSIFICATION	1.599503202685475E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998400496797	WITHOUT_CLASSIFICATION	1.599503202685475E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.99999920353779	WITHOUT_CLASSIFICATION	7.964622099023765E-7	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999906088906596	WITHOUT_CLASSIFICATION	9.391109340418444E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999866814119717	WITHOUT_CLASSIFICATION	1.3318588028392606E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999999165130221	WITHOUT_CLASSIFICATION	8.348697785611668E-8	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999999165130221	WITHOUT_CLASSIFICATION	8.348697785611668E-8	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9998825062610225	WITHOUT_CLASSIFICATION	1.1749373897747984E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999856316793191	WITHOUT_CLASSIFICATION	1.4368320680965122E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999812031541445	WITHOUT_CLASSIFICATION	1.8796845855472644E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999855083934281	WITHOUT_CLASSIFICATION	1.4491606571920652E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999468920779	WITHOUT_CLASSIFICATION	5.310792195711335E-8	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999889685352029	WITHOUT_CLASSIFICATION	1.1031464797055216E-5	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9982640121982365	WITHOUT_CLASSIFICATION	0.0017359878017635846	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999707604566809	WITHOUT_CLASSIFICATION	2.9239543319118573E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999770759950356	WITHOUT_CLASSIFICATION	2.292400496444169E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9993978972237859	WITHOUT_CLASSIFICATION	6.021027762140611E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9998716568072022	WITHOUT_CLASSIFICATION	1.2834319279780685E-4	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999748271923237	WITHOUT_CLASSIFICATION	2.5172807676274832E-5	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999620836712437	WITHOUT_CLASSIFICATION	3.791632875624502E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999859944485096	WITHOUT_CLASSIFICATION	1.4005551490360392E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9998825062610225	WITHOUT_CLASSIFICATION	1.1749373897747984E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997297117380535	WITHOUT_CLASSIFICATION	2.7028826194652413E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992232341619396	WITHOUT_CLASSIFICATION	7.767658380603177E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999856316793191	WITHOUT_CLASSIFICATION	1.4368320680965122E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999855083934281	WITHOUT_CLASSIFICATION	1.4491606571920652E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9993978972237859	WITHOUT_CLASSIFICATION	6.021027762140611E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9993978972237859	WITHOUT_CLASSIFICATION	6.021027762140611E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999999779392333	WITHOUT_CLASSIFICATION	2.2060766728768946E-8	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998287594980738	WITHOUT_CLASSIFICATION	1.7124050192619084E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9995777514610187	WITHOUT_CLASSIFICATION	4.2224853898138075E-4	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999993891239765	WITHOUT_CLASSIFICATION	6.108760235927906E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.99998563502922	WITHOUT_CLASSIFICATION	1.4364970779948885E-5	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999836774342634	WITHOUT_CLASSIFICATION	1.6322565736576042E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999989306725744	WITHOUT_CLASSIFICATION	1.0693274255793124E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999859944485096	WITHOUT_CLASSIFICATION	1.4005551490360392E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999999165130221	WITHOUT_CLASSIFICATION	8.348697785611668E-8	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999999165130221	WITHOUT_CLASSIFICATION	8.348697785611668E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9993454381313643	WITHOUT_CLASSIFICATION	6.545618686357223E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9998825062610225	WITHOUT_CLASSIFICATION	1.1749373897747984E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999430981103037	WITHOUT_CLASSIFICATION	5.690188969629848E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999430981103037	WITHOUT_CLASSIFICATION	5.690188969629848E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999430981103037	WITHOUT_CLASSIFICATION	5.690188969629848E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999336200366861	WITHOUT_CLASSIFICATION	6.637996331390062E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9993978972237859	WITHOUT_CLASSIFICATION	6.021027762140611E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998287594980738	WITHOUT_CLASSIFICATION	1.7124050192619084E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9995777514610187	WITHOUT_CLASSIFICATION	4.2224853898138075E-4	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999897120121	WITHOUT_CLASSIFICATION	1.0287987916035487E-8	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9986372625925724	WITHOUT_CLASSIFICATION	0.0013627374074276668	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999990161888194	WITHOUT_CLASSIFICATION	9.838111806043634E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9996461808205959	WITHOUT_CLASSIFICATION	3.538191794040484E-4	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.6247348585616312	DEFECT	0.3752651414383686	WITHOUT_CLASSIFICATION
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999840861718367	WITHOUT_CLASSIFICATION	1.5913828163243246E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999151990454718	WITHOUT_CLASSIFICATION	8.480095452819122E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999151990454718	WITHOUT_CLASSIFICATION	8.480095452819122E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999901986329446	WITHOUT_CLASSIFICATION	9.80136705541992E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998287594980738	WITHOUT_CLASSIFICATION	1.7124050192619084E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999960895551172	WITHOUT_CLASSIFICATION	3.910444882747565E-6	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999546172522793	WITHOUT_CLASSIFICATION	4.538274772064093E-5	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999988452573869	WITHOUT_CLASSIFICATION	1.1547426131416938E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9998410362398137	WITHOUT_CLASSIFICATION	1.5896376018630448E-4	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9997972324354084	WITHOUT_CLASSIFICATION	2.0276756459151112E-4	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.999990881327287	WITHOUT_CLASSIFICATION	9.118672713049433E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999953988807191	WITHOUT_CLASSIFICATION	4.601119280958071E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999862976872544	WITHOUT_CLASSIFICATION	1.3702312745506838E-5	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999994472761448	WITHOUT_CLASSIFICATION	5.52723855192262E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999948998723214	WITHOUT_CLASSIFICATION	5.100127678609265E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999946258431067	WITHOUT_CLASSIFICATION	5.374156893312192E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999960895551172	WITHOUT_CLASSIFICATION	3.910444882747565E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999960895551172	WITHOUT_CLASSIFICATION	3.910444882747565E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999901986329446	WITHOUT_CLASSIFICATION	9.80136705541992E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999620224429593	WITHOUT_CLASSIFICATION	3.797755704073682E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997297117380535	WITHOUT_CLASSIFICATION	2.7028826194652413E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9992232341619396	WITHOUT_CLASSIFICATION	7.767658380603177E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999707604566809	WITHOUT_CLASSIFICATION	2.9239543319118573E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999770759950356	WITHOUT_CLASSIFICATION	2.292400496444169E-5	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999992803475753	WITHOUT_CLASSIFICATION	7.196524246582405E-7	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9997988430867115	WITHOUT_CLASSIFICATION	2.011569132884209E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9998643888293532	WITHOUT_CLASSIFICATION	1.3561117064669307E-4	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999965519507618	WITHOUT_CLASSIFICATION	3.4480492381793774E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999999048683187	WITHOUT_CLASSIFICATION	9.513168128131456E-8	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996512646484	WITHOUT_CLASSIFICATION	3.487353515870364E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7277537035839533	DEFECT	0.2722462964160467	WITHOUT_CLASSIFICATION
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8253864901075685	DEFECT	0.1746135098924315	WITHOUT_CLASSIFICATION
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999441797454568	WITHOUT_CLASSIFICATION	5.5820254543231874E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9992289166404436	WITHOUT_CLASSIFICATION	7.710833595565501E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9994753833536432	WITHOUT_CLASSIFICATION	5.24616646356848E-4	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999234616085736	WITHOUT_CLASSIFICATION	7.653839142636532E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9998764816430795	WITHOUT_CLASSIFICATION	1.2351835692043494E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7277537035839533	DEFECT	0.2722462964160467	WITHOUT_CLASSIFICATION
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999083105305908	WITHOUT_CLASSIFICATION	9.16894694091801E-5	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.73935647636917	DEFECT	0.26064352363083004	WITHOUT_CLASSIFICATION
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999879556764855	WITHOUT_CLASSIFICATION	1.204432351450952E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9923053242410296	DEFECT	0.007694675758970383	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9962039719896555	DEFECT	0.0037960280103444544	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952762632781	WITHOUT_CLASSIFICATION	4.723736721949362E-6	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9873467486484063	DEFECT	0.012653251351593607	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9933199960990085	DEFECT	0.006680003900991511	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999877976085378	WITHOUT_CLASSIFICATION	1.2202391462162181E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6786516020592873	DEFECT	0.3213483979407127	WITHOUT_CLASSIFICATION
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8727784099725411	DEFECT	0.12722159002745886	WITHOUT_CLASSIFICATION
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999989561458861	WITHOUT_CLASSIFICATION	1.043854113942681E-6	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.972295286825307	WITHOUT_CLASSIFICATION	0.027704713174693026	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.5057013197446156	DEFECT	0.4942986802553842	WITHOUT_CLASSIFICATION
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999960521467218	WITHOUT_CLASSIFICATION	3.9478532782018966E-5	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.6755684913385018	WITHOUT_CLASSIFICATION	0.3244315086614982	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.5622592352624737	DEFECT	0.4377407647375263	WITHOUT_CLASSIFICATION
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999850003503017	WITHOUT_CLASSIFICATION	1.4999649698371992E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.5891441001413609	WITHOUT_CLASSIFICATION	0.4108558998586392	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.5672342817960457	DEFECT	0.4327657182039542	WITHOUT_CLASSIFICATION
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999340679600159	WITHOUT_CLASSIFICATION	6.593203998409399E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999416635702	WITHOUT_CLASSIFICATION	5.833642983728862E-8	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999886217787305	WITHOUT_CLASSIFICATION	1.1378221269588506E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999666725939	WITHOUT_CLASSIFICATION	3.332740597552781E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999989561458861	WITHOUT_CLASSIFICATION	1.043854113942681E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9992082372935054	WITHOUT_CLASSIFICATION	7.917627064946428E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999151990454718	WITHOUT_CLASSIFICATION	8.480095452819122E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999901986329446	WITHOUT_CLASSIFICATION	9.80136705541992E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999901986329446	WITHOUT_CLASSIFICATION	9.80136705541992E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999620224429593	WITHOUT_CLASSIFICATION	3.797755704073682E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999999165130221	WITHOUT_CLASSIFICATION	8.348697785611668E-8	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9995727137447088	WITHOUT_CLASSIFICATION	4.272862552911294E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999780230802471	WITHOUT_CLASSIFICATION	2.197691975290174E-5	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999716575642575	WITHOUT_CLASSIFICATION	2.834243574246871E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9998825062610225	WITHOUT_CLASSIFICATION	1.1749373897747984E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9993978972237859	WITHOUT_CLASSIFICATION	6.021027762140611E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.99999781493513	WITHOUT_CLASSIFICATION	2.1850648700110443E-6	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999988856407673	WITHOUT_CLASSIFICATION	1.1143592325997842E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999010357116	WITHOUT_CLASSIFICATION	9.89642883871669E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999992521219632	WITHOUT_CLASSIFICATION	7.478780369080749E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999977406677807	WITHOUT_CLASSIFICATION	2.2593322192804367E-6	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999998150650711	WITHOUT_CLASSIFICATION	1.849349289235559E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999960942063048	WITHOUT_CLASSIFICATION	3.905793695182514E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9998124395469397	WITHOUT_CLASSIFICATION	1.8756045306029273E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999430981103037	WITHOUT_CLASSIFICATION	5.690188969629848E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999707604566809	WITHOUT_CLASSIFICATION	2.9239543319118573E-5	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999770759950356	WITHOUT_CLASSIFICATION	2.292400496444169E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9993978972237859	WITHOUT_CLASSIFICATION	6.021027762140611E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9997988430867115	WITHOUT_CLASSIFICATION	2.011569132884209E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9998643888293532	WITHOUT_CLASSIFICATION	1.3561117064669307E-4	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999611406421157	WITHOUT_CLASSIFICATION	3.885935788426836E-5	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999993979067173	WITHOUT_CLASSIFICATION	6.020932825747145E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999989564416226	WITHOUT_CLASSIFICATION	1.0435583773877551E-6	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999992515148447	WITHOUT_CLASSIFICATION	7.484851552657668E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999884650010004	WITHOUT_CLASSIFICATION	1.153499899968224E-5	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999999942432679	WITHOUT_CLASSIFICATION	5.756732014852932E-9	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999991794348181	WITHOUT_CLASSIFICATION	8.205651818378211E-7	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.999933948031287	WITHOUT_CLASSIFICATION	6.605196871307583E-5	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999700242846672	WITHOUT_CLASSIFICATION	2.9975715332835386E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999669337097677	WITHOUT_CLASSIFICATION	3.306629023224854E-5	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8253864901075685	DEFECT	0.1746135098924315	WITHOUT_CLASSIFICATION
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999999942432679	WITHOUT_CLASSIFICATION	5.756732014852932E-9	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999700242846672	WITHOUT_CLASSIFICATION	2.9975715332835386E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999669337097677	WITHOUT_CLASSIFICATION	3.306629023224854E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9811639771682564	WITHOUT_CLASSIFICATION	0.01883602283174361	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9998129383789918	WITHOUT_CLASSIFICATION	1.8706162100820678E-4	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999992400009324	WITHOUT_CLASSIFICATION	7.599990675333213E-7	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999992400009324	WITHOUT_CLASSIFICATION	7.599990675333213E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999980026131642	WITHOUT_CLASSIFICATION	1.997386835873574E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9998809845765644	WITHOUT_CLASSIFICATION	1.190154234355313E-4	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9998809845765644	WITHOUT_CLASSIFICATION	1.190154234355313E-4	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999991972774785	WITHOUT_CLASSIFICATION	8.027225214322347E-7	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9997579166178796	WITHOUT_CLASSIFICATION	2.4208338212033988E-4	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999907790576696	WITHOUT_CLASSIFICATION	9.22094233031748E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999975209514159	WITHOUT_CLASSIFICATION	2.47904858411011E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999997285393429	WITHOUT_CLASSIFICATION	2.714606570235162E-7	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999973065491	WITHOUT_CLASSIFICATION	2.6934510078586955E-9	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.6876391809936238	WITHOUT_CLASSIFICATION	0.3123608190063762	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999998525753697	WITHOUT_CLASSIFICATION	1.4742463027392486E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999808651294291	WITHOUT_CLASSIFICATION	1.9134870570955524E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999997865840292	WITHOUT_CLASSIFICATION	2.134159708686528E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999981541481133	WITHOUT_CLASSIFICATION	1.8458518865779326E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999949418878565	WITHOUT_CLASSIFICATION	5.0581121435499535E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999998163851708	WITHOUT_CLASSIFICATION	1.8361482927925706E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999808651294291	WITHOUT_CLASSIFICATION	1.9134870570955524E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999945703548011	WITHOUT_CLASSIFICATION	5.429645198926545E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999504617105	WITHOUT_CLASSIFICATION	4.953828951124135E-8	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999716532522	WITHOUT_CLASSIFICATION	2.8346747871732886E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995076295894	WITHOUT_CLASSIFICATION	4.923704104961194E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999951404575051	WITHOUT_CLASSIFICATION	4.859542494917127E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999943917066181	WITHOUT_CLASSIFICATION	5.60829338192496E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999987570056759	WITHOUT_CLASSIFICATION	1.2429943240706705E-6	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9998956177835333	WITHOUT_CLASSIFICATION	1.0438221646665683E-4	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9977429360598213	WITHOUT_CLASSIFICATION	0.0022570639401786777	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9953434496514947	WITHOUT_CLASSIFICATION	0.004656550348505317	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9998804787395779	WITHOUT_CLASSIFICATION	1.195212604221218E-4	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999997976162935	WITHOUT_CLASSIFICATION	2.0238370655061407E-7	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9953810958437832	WITHOUT_CLASSIFICATION	0.0046189041562167575	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999920926910169	WITHOUT_CLASSIFICATION	7.907308983100193E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999891050991061	WITHOUT_CLASSIFICATION	1.089490089395409E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999996490395493	WITHOUT_CLASSIFICATION	3.509604507789605E-7	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999976638866223	WITHOUT_CLASSIFICATION	2.336113377859627E-6	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999998899129557	WITHOUT_CLASSIFICATION	1.1008704419304409E-7	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999985313239768	WITHOUT_CLASSIFICATION	1.4686760231702572E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.999999018173633	WITHOUT_CLASSIFICATION	9.818263670000024E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999992372394085	WITHOUT_CLASSIFICATION	7.627605914493998E-7	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999997392370368	WITHOUT_CLASSIFICATION	2.607629631926602E-7	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999950159136551	WITHOUT_CLASSIFICATION	4.984086344924528E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999994973359497	WITHOUT_CLASSIFICATION	5.026640502950804E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999990846531265	WITHOUT_CLASSIFICATION	9.153468735435951E-7	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999997574630143	WITHOUT_CLASSIFICATION	2.425369857310097E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999998381263715	WITHOUT_CLASSIFICATION	1.6187362839549716E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999977097362611	WITHOUT_CLASSIFICATION	2.2902637387874292E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999998677164038	WITHOUT_CLASSIFICATION	1.3228359612465309E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9485733080469541	WITHOUT_CLASSIFICATION	0.051426691953046	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999955885660895	WITHOUT_CLASSIFICATION	4.411433910514501E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.99999923922107	WITHOUT_CLASSIFICATION	7.60778930036731E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999967110274985	WITHOUT_CLASSIFICATION	3.2889725014869155E-6	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999995952929911	WITHOUT_CLASSIFICATION	4.04707008934801E-7	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999991178807172	WITHOUT_CLASSIFICATION	8.821192828203482E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.999999618935409	WITHOUT_CLASSIFICATION	3.810645910316724E-7	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999993719941622	WITHOUT_CLASSIFICATION	6.280058377297908E-7	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999982023458077	WITHOUT_CLASSIFICATION	1.79765419239116E-6	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999999621343979	WITHOUT_CLASSIFICATION	3.786560213970058E-8	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999996948045351	WITHOUT_CLASSIFICATION	3.051954649844452E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999992175620177	WITHOUT_CLASSIFICATION	7.824379823469707E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999990012229867	WITHOUT_CLASSIFICATION	9.987770132864797E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999999150297305	WITHOUT_CLASSIFICATION	8.497026940347638E-8	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999996504925991	WITHOUT_CLASSIFICATION	3.4950740091400393E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.999999797294667	WITHOUT_CLASSIFICATION	2.027053329099171E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999999182884152	WITHOUT_CLASSIFICATION	8.171158484731261E-8	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999886270264329	WITHOUT_CLASSIFICATION	1.1372973567018475E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999992110602606	WITHOUT_CLASSIFICATION	7.889397393451326E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999620224429593	WITHOUT_CLASSIFICATION	3.797755704073682E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999943917066181	WITHOUT_CLASSIFICATION	5.60829338192496E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999998381263715	WITHOUT_CLASSIFICATION	1.6187362839549716E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999977097362611	WITHOUT_CLASSIFICATION	2.2902637387874292E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999999182884152	WITHOUT_CLASSIFICATION	8.171158484731261E-8	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999886270264329	WITHOUT_CLASSIFICATION	1.1372973567018475E-5	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999998476122834	WITHOUT_CLASSIFICATION	1.5238771668682744E-7	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999991631005144	WITHOUT_CLASSIFICATION	8.368994857143738E-7	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999991235769456	WITHOUT_CLASSIFICATION	8.764230544416022E-7	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999998992014619	WITHOUT_CLASSIFICATION	1.0079853801229211E-7	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999997528318679	WITHOUT_CLASSIFICATION	2.4716813200081925E-7	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.999999963447583	WITHOUT_CLASSIFICATION	3.655241692127762E-8	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999323126338	WITHOUT_CLASSIFICATION	6.768736622772614E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999949780039598	WITHOUT_CLASSIFICATION	5.02199604020512E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999985484428573	WITHOUT_CLASSIFICATION	1.4515571426994695E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996512646484	WITHOUT_CLASSIFICATION	3.487353515870364E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999527558474	WITHOUT_CLASSIFICATION	4.724415267000746E-8	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.6247348585616312	DEFECT	0.3752651414383686	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.73935647636917	DEFECT	0.26064352363083004	WITHOUT_CLASSIFICATION
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999995056318212	WITHOUT_CLASSIFICATION	4.943681787960532E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999851145173	WITHOUT_CLASSIFICATION	1.4885482809712461E-8	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999948998723214	WITHOUT_CLASSIFICATION	5.100127678609265E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999995102109849	WITHOUT_CLASSIFICATION	4.897890151254754E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999968737518105	WITHOUT_CLASSIFICATION	3.1262481896576123E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9992289166404436	WITHOUT_CLASSIFICATION	7.710833595565501E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9994753833536432	WITHOUT_CLASSIFICATION	5.24616646356848E-4	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999785418127453	WITHOUT_CLASSIFICATION	2.1458187254719397E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999869373073654	WITHOUT_CLASSIFICATION	1.3062692634641881E-5	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9923053242410296	DEFECT	0.007694675758970383	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9962039719896555	DEFECT	0.0037960280103444544	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9873467486484063	DEFECT	0.012653251351593607	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9933199960990085	DEFECT	0.006680003900991511	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6786516020592873	DEFECT	0.3213483979407127	WITHOUT_CLASSIFICATION
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.8727784099725411	DEFECT	0.12722159002745886	WITHOUT_CLASSIFICATION
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999995478332672	WITHOUT_CLASSIFICATION	4.521667329082882E-7	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999879556764855	WITHOUT_CLASSIFICATION	1.204432351450952E-5	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952762632781	WITHOUT_CLASSIFICATION	4.723736721949362E-6	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999877976085378	WITHOUT_CLASSIFICATION	1.2202391462162181E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974306081972	WITHOUT_CLASSIFICATION	2.5693918028072123E-6	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999900624371224	WITHOUT_CLASSIFICATION	9.937562877604725E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999824037139621	WITHOUT_CLASSIFICATION	1.7596286037906142E-5	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.5439449108308138	DEFECT	0.4560550891691862	WITHOUT_CLASSIFICATION
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999667022259562	WITHOUT_CLASSIFICATION	3.32977740439005E-5	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979945915568	WITHOUT_CLASSIFICATION	2.0054084432701448E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999963173882903	WITHOUT_CLASSIFICATION	3.682611709604744E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999662920500954	WITHOUT_CLASSIFICATION	3.370794990456454E-5	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.999999941949844	WITHOUT_CLASSIFICATION	5.805015597922397E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999936678616813	WITHOUT_CLASSIFICATION	6.332138318673617E-6	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999898208722833	WITHOUT_CLASSIFICATION	1.017912771669258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999997865840292	WITHOUT_CLASSIFICATION	2.134159708686528E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999918943417357	WITHOUT_CLASSIFICATION	8.105658264246828E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999877369531397	WITHOUT_CLASSIFICATION	1.2263046860359495E-5	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999991172925108	WITHOUT_CLASSIFICATION	8.827074892872331E-7	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999111384267078	WITHOUT_CLASSIFICATION	8.886157329218384E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999814908293205	WITHOUT_CLASSIFICATION	1.8509170679444182E-5	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999258479206943	WITHOUT_CLASSIFICATION	7.41520793056923E-5	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999318872829696	WITHOUT_CLASSIFICATION	6.81127170304269E-5	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999993363203235	WITHOUT_CLASSIFICATION	6.636796764945213E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999603680876771	WITHOUT_CLASSIFICATION	3.963191232290144E-5	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999970572861573	WITHOUT_CLASSIFICATION	2.9427138427674E-6	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999996937301283	WITHOUT_CLASSIFICATION	3.0626987166422583E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999901350280331	WITHOUT_CLASSIFICATION	9.864971966903338E-6	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999990997756656	WITHOUT_CLASSIFICATION	9.002243343565562E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999855452011658	WITHOUT_CLASSIFICATION	1.445479883428551E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999871718199298	WITHOUT_CLASSIFICATION	1.2828180070191088E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999767802432289	WITHOUT_CLASSIFICATION	2.321975677108099E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999215788365367	WITHOUT_CLASSIFICATION	7.842116346329324E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999998525753697	WITHOUT_CLASSIFICATION	1.4742463027392486E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999949418878565	WITHOUT_CLASSIFICATION	5.0581121435499535E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999504617105	WITHOUT_CLASSIFICATION	4.953828951124135E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995076295894	WITHOUT_CLASSIFICATION	4.923704104961194E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995076295894	WITHOUT_CLASSIFICATION	4.923704104961194E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999976621433435	WITHOUT_CLASSIFICATION	2.3378566565409364E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999999156079115	WITHOUT_CLASSIFICATION	8.439208856886224E-8	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999984474660905	WITHOUT_CLASSIFICATION	1.5525339095804815E-6	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.999990978146317	WITHOUT_CLASSIFICATION	9.021853682976762E-6	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999963072378821	WITHOUT_CLASSIFICATION	3.692762117937954E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999998114713381	WITHOUT_CLASSIFICATION	1.8852866197120477E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999918851738335	WITHOUT_CLASSIFICATION	8.11482616651796E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999968608011197	WITHOUT_CLASSIFICATION	3.1391988802842373E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998695020132	WITHOUT_CLASSIFICATION	1.3049798676202518E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999620224429593	WITHOUT_CLASSIFICATION	3.797755704073682E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999814908293205	WITHOUT_CLASSIFICATION	1.8509170679444182E-5	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999999975527689	WITHOUT_CLASSIFICATION	2.4472310535168874E-9	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999938761336722	WITHOUT_CLASSIFICATION	6.123866327730952E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999999960979228	WITHOUT_CLASSIFICATION	3.9020771977000676E-8	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9992920245736899	WITHOUT_CLASSIFICATION	7.079754263099859E-4	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999954021524237	WITHOUT_CLASSIFICATION	4.597847576360998E-6	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999991137160595	WITHOUT_CLASSIFICATION	8.862839405422106E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999973109102493	WITHOUT_CLASSIFICATION	2.6890897505757813E-6	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999977649035637	WITHOUT_CLASSIFICATION	2.235096436201921E-6	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999995906284423	WITHOUT_CLASSIFICATION	4.0937155770441653E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999995160525	WITHOUT_CLASSIFICATION	4.839475219450225E-10	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999958873170107	WITHOUT_CLASSIFICATION	4.112682989268069E-6	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999984387743658	WITHOUT_CLASSIFICATION	1.561225634309428E-6	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.999431148233823	WITHOUT_CLASSIFICATION	5.688517661770194E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999983685197094	WITHOUT_CLASSIFICATION	1.6314802906512498E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999234616085736	WITHOUT_CLASSIFICATION	7.653839142636532E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999961409224336	WITHOUT_CLASSIFICATION	3.859077566387256E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999961409224336	WITHOUT_CLASSIFICATION	3.859077566387256E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997721234245	WITHOUT_CLASSIFICATION	2.2787657548576656E-7	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999997721234245	WITHOUT_CLASSIFICATION	2.2787657548576656E-7	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9998764816430795	WITHOUT_CLASSIFICATION	1.2351835692043494E-4	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999781349165603	WITHOUT_CLASSIFICATION	2.186508343964139E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999311871919	WITHOUT_CLASSIFICATION	6.88128080496533E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999311871919	WITHOUT_CLASSIFICATION	6.88128080496533E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999582750072137	WITHOUT_CLASSIFICATION	4.172499278619096E-5	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999582750072137	WITHOUT_CLASSIFICATION	4.172499278619096E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993436357705	WITHOUT_CLASSIFICATION	6.563642294650584E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993436357705	WITHOUT_CLASSIFICATION	6.563642294650584E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9996461808205959	WITHOUT_CLASSIFICATION	3.538191794040484E-4	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999994369631975	WITHOUT_CLASSIFICATION	5.63036802534004E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999997852799225	WITHOUT_CLASSIFICATION	2.1472007742433674E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9996676177344348	WITHOUT_CLASSIFICATION	3.3238226556522404E-4	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9993093456918513	WITHOUT_CLASSIFICATION	6.906543081486966E-4	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999996995089565	WITHOUT_CLASSIFICATION	3.00491043472664E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999990790756932	WITHOUT_CLASSIFICATION	9.209243068890279E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999994369336718	WITHOUT_CLASSIFICATION	5.630663282140412E-7	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999993668146924	WITHOUT_CLASSIFICATION	6.331853076431443E-7	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999994828193015	WITHOUT_CLASSIFICATION	5.171806985697707E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999938853034964	WITHOUT_CLASSIFICATION	6.114696503594486E-6	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.999990193261076	WITHOUT_CLASSIFICATION	9.806738924000369E-6	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999958879472227	WITHOUT_CLASSIFICATION	4.1120527772367196E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999620224429593	WITHOUT_CLASSIFICATION	3.797755704073682E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999837303710207	WITHOUT_CLASSIFICATION	1.6269628979230735E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999949418878565	WITHOUT_CLASSIFICATION	5.0581121435499535E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999999504617105	WITHOUT_CLASSIFICATION	4.953828951124135E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999949780039598	WITHOUT_CLASSIFICATION	5.02199604020512E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999999156079115	WITHOUT_CLASSIFICATION	8.439208856886224E-8	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999834993264043	WITHOUT_CLASSIFICATION	1.6500673595754354E-5	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999996471494252	WITHOUT_CLASSIFICATION	3.5285057477303303E-7	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999988420504405	WITHOUT_CLASSIFICATION	1.1579495593867623E-6	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999998968524764	WITHOUT_CLASSIFICATION	1.0314752354773266E-7	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999997203375772	WITHOUT_CLASSIFICATION	2.7966242283857697E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999997400702544	WITHOUT_CLASSIFICATION	2.5992974567261843E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999983609624525	WITHOUT_CLASSIFICATION	1.6390375474041652E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999997587866868	WITHOUT_CLASSIFICATION	2.412133132774392E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999215788365367	WITHOUT_CLASSIFICATION	7.842116346329324E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999934989765797	WITHOUT_CLASSIFICATION	6.501023420258581E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999993891239765	WITHOUT_CLASSIFICATION	6.108760235927906E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.99998563502922	WITHOUT_CLASSIFICATION	1.4364970779948885E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995076295894	WITHOUT_CLASSIFICATION	4.923704104961194E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999943917066181	WITHOUT_CLASSIFICATION	5.60829338192496E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999851145173	WITHOUT_CLASSIFICATION	1.4885482809712461E-8	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999995495130881	WITHOUT_CLASSIFICATION	4.504869117936967E-7	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9999718928529406	WITHOUT_CLASSIFICATION	2.8107147059450884E-5	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999995064763212	WITHOUT_CLASSIFICATION	4.935236787869814E-7	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999976616049611	WITHOUT_CLASSIFICATION	2.338395038972204E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999999932230803	WITHOUT_CLASSIFICATION	6.776919698976466E-8	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999980967909132	WITHOUT_CLASSIFICATION	1.9032090867348296E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999968608011197	WITHOUT_CLASSIFICATION	3.1391988802842373E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999620224429593	WITHOUT_CLASSIFICATION	3.797755704073682E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.99999781493513	WITHOUT_CLASSIFICATION	2.1850648700110443E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999949418878565	WITHOUT_CLASSIFICATION	5.0581121435499535E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999999960979228	WITHOUT_CLASSIFICATION	3.9020771977000676E-8	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999954021524237	WITHOUT_CLASSIFICATION	4.597847576360998E-6	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999996314740963	WITHOUT_CLASSIFICATION	3.685259036653024E-7	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.999999937872959	WITHOUT_CLASSIFICATION	6.212704100329745E-8	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9995933088297599	WITHOUT_CLASSIFICATION	4.0669117024002725E-4	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.99999863425667	WITHOUT_CLASSIFICATION	1.3657433299816723E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999998503316256	WITHOUT_CLASSIFICATION	1.4966837440730141E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999998348999387	WITHOUT_CLASSIFICATION	1.6510006129187951E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.999995061302963	WITHOUT_CLASSIFICATION	4.938697036907262E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999998503316256	WITHOUT_CLASSIFICATION	1.4966837440730141E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999678943572	WITHOUT_CLASSIFICATION	3.2105642728531186E-8	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999998348999387	WITHOUT_CLASSIFICATION	1.6510006129187951E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.999995061302963	WITHOUT_CLASSIFICATION	4.938697036907262E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999921808026913	WITHOUT_CLASSIFICATION	7.819197308744537E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999947150404628	WITHOUT_CLASSIFICATION	5.284959537231093E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999947150404628	WITHOUT_CLASSIFICATION	5.284959537231093E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9777955563393784	WITHOUT_CLASSIFICATION	0.02220444366062158	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9995310462713706	WITHOUT_CLASSIFICATION	4.6895372862946854E-4	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999999099444778	WITHOUT_CLASSIFICATION	9.005552206767102E-8	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999994357276925	WITHOUT_CLASSIFICATION	5.642723075691371E-7	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999997260716433	WITHOUT_CLASSIFICATION	2.7392835667693183E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999921212410824	WITHOUT_CLASSIFICATION	7.878758917539272E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999787778603726	WITHOUT_CLASSIFICATION	2.122213962736258E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999949418878565	WITHOUT_CLASSIFICATION	5.0581121435499535E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9777955563393784	WITHOUT_CLASSIFICATION	0.02220444366062158	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.999999995877107	WITHOUT_CLASSIFICATION	4.122892989555337E-9	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999894443412	WITHOUT_CLASSIFICATION	1.0555658780760155E-8	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999968858973438	WITHOUT_CLASSIFICATION	3.114102656301004E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999036383132199	WITHOUT_CLASSIFICATION	9.636168678005537E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999998849767637	WITHOUT_CLASSIFICATION	1.1502323624106984E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999998621048268	WITHOUT_CLASSIFICATION	1.378951731086117E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999834923472113	WITHOUT_CLASSIFICATION	1.6507652788677354E-5	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999258436846404	WITHOUT_CLASSIFICATION	7.415631535956194E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993436357705	WITHOUT_CLASSIFICATION	6.563642294650584E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9998592468594474	WITHOUT_CLASSIFICATION	1.4075314055261417E-4	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999416635702	WITHOUT_CLASSIFICATION	5.833642983728862E-8	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999999960979228	WITHOUT_CLASSIFICATION	3.9020771977000676E-8	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9992920245736899	WITHOUT_CLASSIFICATION	7.079754263099859E-4	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999954021524237	WITHOUT_CLASSIFICATION	4.597847576360998E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995774012452	WITHOUT_CLASSIFICATION	4.2259875476915337E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999975827277879	WITHOUT_CLASSIFICATION	2.4172722120073642E-6	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9999786998332094	WITHOUT_CLASSIFICATION	2.1300166790600448E-5	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999963831872266	WITHOUT_CLASSIFICATION	3.61681277347845E-6	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999198427043	WITHOUT_CLASSIFICATION	8.015729573696953E-8	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999198427043	WITHOUT_CLASSIFICATION	8.015729573696953E-8	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999864497393827	WITHOUT_CLASSIFICATION	1.3550260617374646E-5	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999882291122296	WITHOUT_CLASSIFICATION	1.1770887770308405E-5	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999971752372921	WITHOUT_CLASSIFICATION	2.8247627078510898E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999527558474	WITHOUT_CLASSIFICATION	4.724415267000746E-8	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9993316994219872	WITHOUT_CLASSIFICATION	6.683005780128711E-4	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.99999920353779	WITHOUT_CLASSIFICATION	7.964622099023765E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999993979067173	WITHOUT_CLASSIFICATION	6.020932825747145E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9998812085145729	WITHOUT_CLASSIFICATION	1.1879148542720122E-4	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999695965281765	WITHOUT_CLASSIFICATION	3.0403471823506873E-5	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999862370816381	WITHOUT_CLASSIFICATION	1.3762918361839213E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999988143651607	WITHOUT_CLASSIFICATION	1.1856348393728804E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999981021857913	WITHOUT_CLASSIFICATION	1.8978142086179215E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999927114346955	WITHOUT_CLASSIFICATION	7.288565304469573E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999890490349446	WITHOUT_CLASSIFICATION	1.0950965055488837E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999890490349446	WITHOUT_CLASSIFICATION	1.0950965055488837E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999968236646568	WITHOUT_CLASSIFICATION	3.1763353432054656E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999995710280553	WITHOUT_CLASSIFICATION	4.289719447129416E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999311871919	WITHOUT_CLASSIFICATION	6.88128080496533E-8	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9996461808205959	WITHOUT_CLASSIFICATION	3.538191794040484E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999603680876771	WITHOUT_CLASSIFICATION	3.963191232290144E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999448218626505	WITHOUT_CLASSIFICATION	5.5178137349527936E-5	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999379414567	WITHOUT_CLASSIFICATION	6.20585433455409E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999981935029274	WITHOUT_CLASSIFICATION	1.8064970725837196E-6	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999784293668	WITHOUT_CLASSIFICATION	2.1570633111071818E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999829767256123	WITHOUT_CLASSIFICATION	1.702327438769683E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99975675505236	WITHOUT_CLASSIFICATION	2.432449476401071E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.999998503316256	WITHOUT_CLASSIFICATION	1.4966837440730141E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999998348999387	WITHOUT_CLASSIFICATION	1.6510006129187951E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.999995061302963	WITHOUT_CLASSIFICATION	4.938697036907262E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9485733080469541	WITHOUT_CLASSIFICATION	0.051426691953046	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895151995223	WITHOUT_CLASSIFICATION	1.0484800477717981E-5	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999982924403044	WITHOUT_CLASSIFICATION	1.7075596956891125E-6	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999999941579166	WITHOUT_CLASSIFICATION	5.842083370219027E-9	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999958265035973	WITHOUT_CLASSIFICATION	4.173496402636503E-6	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999998823014572	WITHOUT_CLASSIFICATION	1.1769854285946844E-7	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.999997958608088	WITHOUT_CLASSIFICATION	2.0413919119386667E-6	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999967351011464	WITHOUT_CLASSIFICATION	3.2648988536457113E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999994208352411	WITHOUT_CLASSIFICATION	5.791647589296958E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999974227650456	WITHOUT_CLASSIFICATION	2.5772349544422084E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999990495031994	WITHOUT_CLASSIFICATION	9.504968007087049E-7	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999990495031994	WITHOUT_CLASSIFICATION	9.504968007087049E-7	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999996343572	WITHOUT_CLASSIFICATION	3.6564280004781933E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995774012452	WITHOUT_CLASSIFICATION	4.2259875476915337E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999893572841051	WITHOUT_CLASSIFICATION	1.0642715894794924E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999893572841051	WITHOUT_CLASSIFICATION	1.0642715894794924E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999949252015771	WITHOUT_CLASSIFICATION	5.0747984229439315E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999986170748574	WITHOUT_CLASSIFICATION	1.382925142700059E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999887960359929	WITHOUT_CLASSIFICATION	1.1203964007073736E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999993417587068	WITHOUT_CLASSIFICATION	6.582412932328933E-7	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999893572841051	WITHOUT_CLASSIFICATION	1.0642715894794924E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999666725939	WITHOUT_CLASSIFICATION	3.332740597552781E-8	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999932284398915	WITHOUT_CLASSIFICATION	6.771560108596587E-6	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999966464127	WITHOUT_CLASSIFICATION	3.3535873061922093E-9	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999980915821	WITHOUT_CLASSIFICATION	1.9084177593705956E-9	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999575321284933	WITHOUT_CLASSIFICATION	4.2467871506798875E-5	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999970079473	WITHOUT_CLASSIFICATION	2.9920526371025447E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999590444572048	WITHOUT_CLASSIFICATION	4.0955542795058165E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9912463335472268	WITHOUT_CLASSIFICATION	0.008753666452773246	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9912463335472268	WITHOUT_CLASSIFICATION	0.008753666452773246	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9912463335472268	WITHOUT_CLASSIFICATION	0.008753666452773246	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999955432397106	WITHOUT_CLASSIFICATION	4.456760289376188E-6	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999987628032168	WITHOUT_CLASSIFICATION	1.2371967832583714E-6	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9999940796143245	WITHOUT_CLASSIFICATION	5.920385675406091E-6	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9998795836970333	WITHOUT_CLASSIFICATION	1.2041630296671508E-4	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999996096962996	WITHOUT_CLASSIFICATION	3.9030370037534674E-7	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9991601842529098	WITHOUT_CLASSIFICATION	8.398157470902856E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999919294873968	WITHOUT_CLASSIFICATION	8.070512603253371E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999836780495718	WITHOUT_CLASSIFICATION	1.6321950428157696E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999058926551	WITHOUT_CLASSIFICATION	9.410734493070405E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999131872863	WITHOUT_CLASSIFICATION	8.681271372415797E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999997714185993	WITHOUT_CLASSIFICATION	2.2858140065282015E-7	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.999994060340513	WITHOUT_CLASSIFICATION	5.9396594869479144E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999349210473	WITHOUT_CLASSIFICATION	6.507895265840335E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999349210473	WITHOUT_CLASSIFICATION	6.507895265840335E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999985308441232	WITHOUT_CLASSIFICATION	1.4691558768446529E-6	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999985308441232	WITHOUT_CLASSIFICATION	1.4691558768446529E-6	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999966715386309	WITHOUT_CLASSIFICATION	3.3284613690144397E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999782456402	WITHOUT_CLASSIFICATION	2.175435970825815E-8	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999997675888604	WITHOUT_CLASSIFICATION	2.3241113961611996E-7	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999993101977	WITHOUT_CLASSIFICATION	6.898022927333159E-10	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999985776803019	WITHOUT_CLASSIFICATION	1.4223196980477642E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999999453399943	WITHOUT_CLASSIFICATION	5.4660005688588896E-8	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999999756957147	WITHOUT_CLASSIFICATION	2.4304285308951282E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999963638773455	WITHOUT_CLASSIFICATION	3.636122654400895E-6	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999999521908959	WITHOUT_CLASSIFICATION	4.780910424687387E-8	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999999654132113	WITHOUT_CLASSIFICATION	3.4586788525800343E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999962346296999	WITHOUT_CLASSIFICATION	3.7653703001469583E-6	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984745160478	WITHOUT_CLASSIFICATION	1.525483952089773E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999956991437157	WITHOUT_CLASSIFICATION	4.30085628427514E-6	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999995778142198	WITHOUT_CLASSIFICATION	4.2218578019866474E-7	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9988447703150399	WITHOUT_CLASSIFICATION	0.0011552296849600924	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999998753839198	WITHOUT_CLASSIFICATION	1.246160803051302E-7	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999644740977418	WITHOUT_CLASSIFICATION	3.552590225820083E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999644740977418	WITHOUT_CLASSIFICATION	3.552590225820083E-5	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999966851508764	WITHOUT_CLASSIFICATION	3.3148491237690847E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999966851508764	WITHOUT_CLASSIFICATION	3.3148491237690847E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999968112793045	WITHOUT_CLASSIFICATION	3.1887206955359587E-6	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999890213442755	WITHOUT_CLASSIFICATION	1.0978655724582238E-5	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999983776586053	WITHOUT_CLASSIFICATION	1.6223413945949326E-6	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999081570857885	WITHOUT_CLASSIFICATION	9.184291421150895E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999996279294939	WITHOUT_CLASSIFICATION	3.7207050613960644E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999996279294939	WITHOUT_CLASSIFICATION	3.7207050613960644E-7	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9995868479377296	WITHOUT_CLASSIFICATION	4.1315206227046663E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9997923327815715	WITHOUT_CLASSIFICATION	2.0766721842847222E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999875034399045	WITHOUT_CLASSIFICATION	1.2496560095467026E-5	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999976149588492	WITHOUT_CLASSIFICATION	2.385041150710063E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999938036816731	WITHOUT_CLASSIFICATION	6.196318326853822E-6	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999253429604881	WITHOUT_CLASSIFICATION	7.465703951198114E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999304940791199	WITHOUT_CLASSIFICATION	6.950592088004573E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999304940791199	WITHOUT_CLASSIFICATION	6.950592088004573E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998605149847866	WITHOUT_CLASSIFICATION	1.3948501521345345E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999919843984194	WITHOUT_CLASSIFICATION	8.015601580650573E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999919843984194	WITHOUT_CLASSIFICATION	8.015601580650573E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999968263865482	WITHOUT_CLASSIFICATION	3.1736134516779526E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999926166966423	WITHOUT_CLASSIFICATION	7.383303357687397E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999998262862405	WITHOUT_CLASSIFICATION	1.7371375945672187E-7	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999993954968549	WITHOUT_CLASSIFICATION	6.045031450639561E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999998752845675	WITHOUT_CLASSIFICATION	1.2471543248490272E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999816969015	WITHOUT_CLASSIFICATION	1.8303098406354134E-8	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999998100009687	WITHOUT_CLASSIFICATION	1.8999903114199492E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999996279294939	WITHOUT_CLASSIFICATION	3.7207050613960644E-7	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999875034399045	WITHOUT_CLASSIFICATION	1.2496560095467026E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983392093	WITHOUT_CLASSIFICATION	1.6607907335923384E-9	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999961294970972	WITHOUT_CLASSIFICATION	3.870502902801865E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999970656116077	WITHOUT_CLASSIFICATION	2.934388392369265E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999971066527	WITHOUT_CLASSIFICATION	2.893347325013331E-9	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999995852738137	WITHOUT_CLASSIFICATION	4.1472618623175477E-7	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999432845599	WITHOUT_CLASSIFICATION	5.671544020983995E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999999455315385	WITHOUT_CLASSIFICATION	5.446846153063706E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999997438311414	WITHOUT_CLASSIFICATION	2.5616885859003403E-7	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999996236400907	WITHOUT_CLASSIFICATION	3.763599093527029E-7	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999991920619604	WITHOUT_CLASSIFICATION	8.079380396785722E-7	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999998452595903	WITHOUT_CLASSIFICATION	1.5474040965333374E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999768360853017	WITHOUT_CLASSIFICATION	2.3163914698238978E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.993411818537011	WITHOUT_CLASSIFICATION	0.0065881814629890015	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.999998465609676	WITHOUT_CLASSIFICATION	1.5343903240793927E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999971445187112	WITHOUT_CLASSIFICATION	2.8554812887436554E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999905849142157	WITHOUT_CLASSIFICATION	9.415085784422592E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999991479795367	WITHOUT_CLASSIFICATION	8.520204633379581E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999486638125462	WITHOUT_CLASSIFICATION	5.1336187453792836E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999967999093763	WITHOUT_CLASSIFICATION	3.2000906237316336E-6	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.999992498980064	WITHOUT_CLASSIFICATION	7.501019935952469E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999874112234737	WITHOUT_CLASSIFICATION	1.2588776526229776E-5	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999991206511079	WITHOUT_CLASSIFICATION	8.793488921954498E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999996513044923	WITHOUT_CLASSIFICATION	3.4869550773170285E-7	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9973549810210094	WITHOUT_CLASSIFICATION	0.0026450189789905742	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999999515923648	WITHOUT_CLASSIFICATION	4.840763518362469E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999405619908	WITHOUT_CLASSIFICATION	5.9438009257143565E-8	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999970852868469	WITHOUT_CLASSIFICATION	2.9147131530569515E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999405619908	WITHOUT_CLASSIFICATION	5.9438009257143565E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994712010645	WITHOUT_CLASSIFICATION	5.28798935591897E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999981701304756	WITHOUT_CLASSIFICATION	1.8298695243465625E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994287181663	WITHOUT_CLASSIFICATION	5.71281833738465E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999547254687	WITHOUT_CLASSIFICATION	4.52745312996799E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999476443651	WITHOUT_CLASSIFICATION	5.235563487475108E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999977875114222	WITHOUT_CLASSIFICATION	2.212488577744296E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999970389606737	WITHOUT_CLASSIFICATION	2.9610393263107157E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983392093	WITHOUT_CLASSIFICATION	1.6607907335923384E-9	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999982825793365	WITHOUT_CLASSIFICATION	1.7174206633748173E-6	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999982825793365	WITHOUT_CLASSIFICATION	1.7174206633748173E-6	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999037966187	WITHOUT_CLASSIFICATION	9.620338134120432E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999037966187	WITHOUT_CLASSIFICATION	9.620338134120432E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999037966187	WITHOUT_CLASSIFICATION	9.620338134120432E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999997514371903	WITHOUT_CLASSIFICATION	2.485628097120807E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999997514371903	WITHOUT_CLASSIFICATION	2.485628097120807E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.99999960140667	WITHOUT_CLASSIFICATION	3.985933300143463E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.99999960140667	WITHOUT_CLASSIFICATION	3.985933300143463E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999969892835796	WITHOUT_CLASSIFICATION	3.0107164204718042E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998775411564	WITHOUT_CLASSIFICATION	1.2245884365922953E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998775411564	WITHOUT_CLASSIFICATION	1.2245884365922953E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999249948675962	WITHOUT_CLASSIFICATION	7.50051324037136E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9998617557297232	WITHOUT_CLASSIFICATION	1.3824427027673989E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9998617557297232	WITHOUT_CLASSIFICATION	1.3824427027673989E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9980098060073885	WITHOUT_CLASSIFICATION	0.0019901939926114183	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9980098060073885	WITHOUT_CLASSIFICATION	0.0019901939926114183	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9980098060073885	WITHOUT_CLASSIFICATION	0.0019901939926114183	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999980249894509	WITHOUT_CLASSIFICATION	1.975010549165658E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999523880013512	WITHOUT_CLASSIFICATION	4.761199864881519E-5	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999960488418846	WITHOUT_CLASSIFICATION	3.951158115352898E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.99999920353779	WITHOUT_CLASSIFICATION	7.964622099023765E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.99999920353779	WITHOUT_CLASSIFICATION	7.964622099023765E-7	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999611406421157	WITHOUT_CLASSIFICATION	3.885935788426836E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999968263865482	WITHOUT_CLASSIFICATION	3.1736134516779526E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999991479795367	WITHOUT_CLASSIFICATION	8.520204633379581E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999991479795367	WITHOUT_CLASSIFICATION	8.520204633379581E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999981701304756	WITHOUT_CLASSIFICATION	1.8298695243465625E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983392093	WITHOUT_CLASSIFICATION	1.6607907335923384E-9	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999980249894509	WITHOUT_CLASSIFICATION	1.975010549165658E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999980249894509	WITHOUT_CLASSIFICATION	1.975010549165658E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999970120872624	WITHOUT_CLASSIFICATION	2.987912737530338E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999982662966262	WITHOUT_CLASSIFICATION	1.7337033737717424E-6	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999983360120974	WITHOUT_CLASSIFICATION	1.663987902525765E-6	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.999999617779003	WITHOUT_CLASSIFICATION	3.822209970533472E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999992752797495	WITHOUT_CLASSIFICATION	7.247202504446348E-7	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999969201870633	WITHOUT_CLASSIFICATION	3.0798129367371186E-6	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999992629717863	WITHOUT_CLASSIFICATION	7.37028213662334E-7	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999985639462196	WITHOUT_CLASSIFICATION	1.4360537804522893E-6	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999924693477233	WITHOUT_CLASSIFICATION	7.530652276598219E-6	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.999996367822436	WITHOUT_CLASSIFICATION	3.6321775640166773E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999819434981231	WITHOUT_CLASSIFICATION	1.805650187702909E-5	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999980632914861	WITHOUT_CLASSIFICATION	1.9367085138490843E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999980967909132	WITHOUT_CLASSIFICATION	1.9032090867348296E-6	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.99999719446714	WITHOUT_CLASSIFICATION	2.805532860036071E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999902936291577	WITHOUT_CLASSIFICATION	9.706370842379144E-6	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999530876861424	WITHOUT_CLASSIFICATION	4.6912313857518406E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.999999805206238	WITHOUT_CLASSIFICATION	1.9479376212858844E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9999631660584332	WITHOUT_CLASSIFICATION	3.6833941566737695E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999969900354154	WITHOUT_CLASSIFICATION	3.009964584442347E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999993750971693	WITHOUT_CLASSIFICATION	6.249028307179045E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999355903244299	WITHOUT_CLASSIFICATION	6.440967557009642E-5	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999871025779641	WITHOUT_CLASSIFICATION	1.2897422035832497E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999996279294939	WITHOUT_CLASSIFICATION	3.7207050613960644E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999996279294939	WITHOUT_CLASSIFICATION	3.7207050613960644E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999938036816731	WITHOUT_CLASSIFICATION	6.196318326853822E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994712010645	WITHOUT_CLASSIFICATION	5.28798935591897E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999547254687	WITHOUT_CLASSIFICATION	4.52745312996799E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999476443651	WITHOUT_CLASSIFICATION	5.235563487475108E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999476443651	WITHOUT_CLASSIFICATION	5.235563487475108E-8	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999446379793209	WITHOUT_CLASSIFICATION	5.5362020679087135E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999953968433826	WITHOUT_CLASSIFICATION	4.603156617414652E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999998733141152	WITHOUT_CLASSIFICATION	1.2668588487042533E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999982222995938	WITHOUT_CLASSIFICATION	1.777700406266456E-6	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999963874034342	WITHOUT_CLASSIFICATION	3.6125965657875806E-6	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999958876228973	WITHOUT_CLASSIFICATION	4.112377102763719E-6	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999936076568904	WITHOUT_CLASSIFICATION	6.3923431097327125E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999997139075298	WITHOUT_CLASSIFICATION	2.8609247015912176E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999463066941972	WITHOUT_CLASSIFICATION	5.369330580283842E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999969619164033	WITHOUT_CLASSIFICATION	3.038083596801511E-6	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999891948546752	WITHOUT_CLASSIFICATION	1.0805145324777046E-5	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999982046750269	WITHOUT_CLASSIFICATION	1.7953249731410833E-6	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999753259441245	WITHOUT_CLASSIFICATION	2.467405587549713E-5	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999998767832724	WITHOUT_CLASSIFICATION	1.2321672755333843E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999982322342261	WITHOUT_CLASSIFICATION	1.7677657739102376E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999998030662463	WITHOUT_CLASSIFICATION	1.9693375372844718E-7	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999992416415592	WITHOUT_CLASSIFICATION	7.583584408440811E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999754181886636	WITHOUT_CLASSIFICATION	2.458181133634974E-5	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999992689008274	WITHOUT_CLASSIFICATION	7.310991726844522E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999972572891555	WITHOUT_CLASSIFICATION	2.7427108445888784E-6	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999992795504502	WITHOUT_CLASSIFICATION	7.20449549860561E-7	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999936404385755	WITHOUT_CLASSIFICATION	6.359561424430293E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999998030662463	WITHOUT_CLASSIFICATION	1.9693375372844718E-7	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999999738994143	WITHOUT_CLASSIFICATION	2.6100585687273186E-8	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999952793866916	WITHOUT_CLASSIFICATION	4.720613308372743E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999941784113073	WITHOUT_CLASSIFICATION	5.82158869273221E-6	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.999998444205756	WITHOUT_CLASSIFICATION	1.55579424396662E-6	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999996267077641	WITHOUT_CLASSIFICATION	3.7329223592567555E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999970852868469	WITHOUT_CLASSIFICATION	2.9147131530569515E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999952793866916	WITHOUT_CLASSIFICATION	4.720613308372743E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999204873468484	WITHOUT_CLASSIFICATION	7.951265315166271E-5	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.999998877117524	WITHOUT_CLASSIFICATION	1.1228824760083056E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9797334560418877	WITHOUT_CLASSIFICATION	0.02026654395811237	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999984056112886	WITHOUT_CLASSIFICATION	1.5943887114429861E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999849511028169	WITHOUT_CLASSIFICATION	1.504889718306012E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9959793330282871	WITHOUT_CLASSIFICATION	0.0040206669717127875	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9959793330282871	WITHOUT_CLASSIFICATION	0.0040206669717127875	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999999767610541	WITHOUT_CLASSIFICATION	2.323894588552961E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999962346296999	WITHOUT_CLASSIFICATION	3.7653703001469583E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999998160022697	WITHOUT_CLASSIFICATION	1.8399773025211063E-7	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9681392202729576	WITHOUT_CLASSIFICATION	0.03186077972704241	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999946629994	WITHOUT_CLASSIFICATION	5.337000618289427E-9	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999274309297079	WITHOUT_CLASSIFICATION	7.256907029209187E-5	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999274309297079	WITHOUT_CLASSIFICATION	7.256907029209187E-5	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999985994415442	WITHOUT_CLASSIFICATION	1.4005584557046788E-6	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999989089649536	WITHOUT_CLASSIFICATION	1.0910350464110417E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.999933181951841	WITHOUT_CLASSIFICATION	6.681804815896092E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.999726098640644	WITHOUT_CLASSIFICATION	2.7390135935603506E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999987083240542	WITHOUT_CLASSIFICATION	1.2916759457508824E-6	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999781180897097	WITHOUT_CLASSIFICATION	2.1881910290306572E-5	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9998440305955886	WITHOUT_CLASSIFICATION	1.5596940441146072E-4	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999696228658334	WITHOUT_CLASSIFICATION	3.037713416667305E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999915046860002	WITHOUT_CLASSIFICATION	8.4953139998016E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999374955833868	WITHOUT_CLASSIFICATION	6.25044166131968E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999374955833868	WITHOUT_CLASSIFICATION	6.25044166131968E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999998466147907	WITHOUT_CLASSIFICATION	1.5338520929086107E-7	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999935661744467	WITHOUT_CLASSIFICATION	6.433825553312951E-6	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999958058263869	WITHOUT_CLASSIFICATION	4.194173613039064E-6	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.999998339043594	WITHOUT_CLASSIFICATION	1.660956405956942E-6	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999995079182686	WITHOUT_CLASSIFICATION	4.920817313341961E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999966955556163	WITHOUT_CLASSIFICATION	3.304444383710983E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999991348535243	WITHOUT_CLASSIFICATION	8.651464755971175E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999964110487393	WITHOUT_CLASSIFICATION	3.5889512607859725E-6	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999899227515875	WITHOUT_CLASSIFICATION	1.0077248412620484E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999615440303269	WITHOUT_CLASSIFICATION	3.8455969673132165E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999615440303269	WITHOUT_CLASSIFICATION	3.8455969673132165E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999915420039195	WITHOUT_CLASSIFICATION	8.457996080420728E-6	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999995969724726	WITHOUT_CLASSIFICATION	4.030275273181199E-7	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9998658827904386	WITHOUT_CLASSIFICATION	1.341172095612901E-4	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999996268684617	WITHOUT_CLASSIFICATION	3.7313153825000905E-7	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999697663114075	WITHOUT_CLASSIFICATION	3.023368859241665E-5	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999971050749046	WITHOUT_CLASSIFICATION	2.8949250954448457E-6	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9999897362984844	WITHOUT_CLASSIFICATION	1.0263701515713387E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999959376068626	WITHOUT_CLASSIFICATION	4.062393137386087E-6	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999964900638707	WITHOUT_CLASSIFICATION	3.5099361292765306E-6	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999299204787	WITHOUT_CLASSIFICATION	7.007952129286811E-8	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999150656964056	WITHOUT_CLASSIFICATION	8.493430359439523E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999996319105937	WITHOUT_CLASSIFICATION	3.6808940631985925E-7	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999979690969778	WITHOUT_CLASSIFICATION	2.0309030221811516E-6	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999937693105931	WITHOUT_CLASSIFICATION	6.230689406878247E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999968186045	WITHOUT_CLASSIFICATION	3.1813954923108702E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.99999912605388	WITHOUT_CLASSIFICATION	8.73946119892241E-7	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.99999999824084	WITHOUT_CLASSIFICATION	1.7591601078845046E-9	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999982715158622	WITHOUT_CLASSIFICATION	1.7284841378436846E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999995323223325	WITHOUT_CLASSIFICATION	4.676776675209213E-7	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999920273701238	WITHOUT_CLASSIFICATION	7.972629876093513E-6	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.999999476527875	WITHOUT_CLASSIFICATION	5.234721249322744E-7	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999989567601789	WITHOUT_CLASSIFICATION	1.0432398211185844E-6	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999313474771	WITHOUT_CLASSIFICATION	6.865252292536385E-8	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999989185514473	WITHOUT_CLASSIFICATION	1.0814485526195816E-6	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999989185514473	WITHOUT_CLASSIFICATION	1.0814485526195816E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999941396441562	WITHOUT_CLASSIFICATION	5.8603558437573405E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999971445187112	WITHOUT_CLASSIFICATION	2.8554812887436554E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999918943417357	WITHOUT_CLASSIFICATION	8.105658264246828E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9998440305955886	WITHOUT_CLASSIFICATION	1.5596940441146072E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9999197525526956	WITHOUT_CLASSIFICATION	8.024744730436643E-5	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999991786303118	WITHOUT_CLASSIFICATION	8.213696881523042E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9998692128157646	WITHOUT_CLASSIFICATION	1.3078718423551104E-4	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9971532118340494	WITHOUT_CLASSIFICATION	0.0028467881659505197	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9999479219818835	WITHOUT_CLASSIFICATION	5.20780181164661E-5	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991555540031	WITHOUT_CLASSIFICATION	8.444459968420522E-7	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999832288230541	WITHOUT_CLASSIFICATION	1.6771176945863343E-5	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.999998566456064	WITHOUT_CLASSIFICATION	1.4335439359999607E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.999993897724481	WITHOUT_CLASSIFICATION	6.102275519034828E-6	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999662430893396	WITHOUT_CLASSIFICATION	3.3756910660439276E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999956390827907	WITHOUT_CLASSIFICATION	4.360917209379306E-6	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999995280788928	WITHOUT_CLASSIFICATION	4.719211071594887E-7	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.99999912605388	WITHOUT_CLASSIFICATION	8.73946119892241E-7	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999949383266621	WITHOUT_CLASSIFICATION	5.0616733378463506E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999891487503426	WITHOUT_CLASSIFICATION	1.0851249657377111E-5	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.999999587191072	WITHOUT_CLASSIFICATION	4.128089279690414E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9999160518570027	WITHOUT_CLASSIFICATION	8.394814299723763E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999956991437157	WITHOUT_CLASSIFICATION	4.30085628427514E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999971445187112	WITHOUT_CLASSIFICATION	2.8554812887436554E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999977777310245	WITHOUT_CLASSIFICATION	2.222268975397912E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999980539456623	WITHOUT_CLASSIFICATION	1.9460543377412704E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999511352338113	WITHOUT_CLASSIFICATION	4.886476618876733E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9797334560418877	WITHOUT_CLASSIFICATION	0.02026654395811237	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999983898227732	WITHOUT_CLASSIFICATION	1.6101772268286852E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999955143077524	WITHOUT_CLASSIFICATION	4.485692247611533E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994667724497	WITHOUT_CLASSIFICATION	5.332275502775889E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994667724497	WITHOUT_CLASSIFICATION	5.332275502775889E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999994294630297	WITHOUT_CLASSIFICATION	5.705369703520325E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999994294630297	WITHOUT_CLASSIFICATION	5.705369703520325E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999994294630297	WITHOUT_CLASSIFICATION	5.705369703520325E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999988209811544	WITHOUT_CLASSIFICATION	1.1790188454792776E-6	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.999999997587416	WITHOUT_CLASSIFICATION	2.4125839955021525E-9	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999996622012206	WITHOUT_CLASSIFICATION	3.377987793109488E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999784050388535	WITHOUT_CLASSIFICATION	2.1594961146495723E-5	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993234578249	WITHOUT_CLASSIFICATION	6.765421749988468E-7	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999808948586185	WITHOUT_CLASSIFICATION	1.910514138142001E-5	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999707002924979	WITHOUT_CLASSIFICATION	2.9299707502024667E-5	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999998471408714	WITHOUT_CLASSIFICATION	1.5285912863204026E-7	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999959163696216	WITHOUT_CLASSIFICATION	4.083630378382264E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999938036816731	WITHOUT_CLASSIFICATION	6.196318326853822E-6	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.999998465609676	WITHOUT_CLASSIFICATION	1.5343903240793927E-6	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999971445187112	WITHOUT_CLASSIFICATION	2.8554812887436554E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999949383266621	WITHOUT_CLASSIFICATION	5.0616733378463506E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.999999587191072	WITHOUT_CLASSIFICATION	4.128089279690414E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999994742833071	WITHOUT_CLASSIFICATION	5.257166929044611E-6	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9919315099130511	WITHOUT_CLASSIFICATION	0.008068490086948906	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999998746069688	WITHOUT_CLASSIFICATION	1.2539303108730657E-7	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999998746069688	WITHOUT_CLASSIFICATION	1.2539303108730657E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999994742833071	WITHOUT_CLASSIFICATION	5.257166929044611E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991397626552	WITHOUT_CLASSIFICATION	8.602373447997146E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999985135976718	WITHOUT_CLASSIFICATION	1.4864023282637771E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999972802988	WITHOUT_CLASSIFICATION	2.719701303401288E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999997508544909	WITHOUT_CLASSIFICATION	2.491455091176486E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999983982122469	WITHOUT_CLASSIFICATION	1.6017877530537557E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999997984264536	WITHOUT_CLASSIFICATION	2.0157354641831024E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999993417587068	WITHOUT_CLASSIFICATION	6.582412932328933E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999993417587068	WITHOUT_CLASSIFICATION	6.582412932328933E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999963638773455	WITHOUT_CLASSIFICATION	3.636122654400895E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999999932230803	WITHOUT_CLASSIFICATION	6.776919698976466E-8	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999999654132113	WITHOUT_CLASSIFICATION	3.4586788525800343E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999956991437157	WITHOUT_CLASSIFICATION	4.30085628427514E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999938036816731	WITHOUT_CLASSIFICATION	6.196318326853822E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999984270715607	WITHOUT_CLASSIFICATION	1.5729284392735274E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9797334560418877	WITHOUT_CLASSIFICATION	0.02026654395811237	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9959793330282871	WITHOUT_CLASSIFICATION	0.0040206669717127875	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999891487503426	WITHOUT_CLASSIFICATION	1.0851249657377111E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991397626552	WITHOUT_CLASSIFICATION	8.602373447997146E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991397626552	WITHOUT_CLASSIFICATION	8.602373447997146E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999994742833071	WITHOUT_CLASSIFICATION	5.257166929044611E-6	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999972802988	WITHOUT_CLASSIFICATION	2.719701303401288E-9	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999985135976718	WITHOUT_CLASSIFICATION	1.4864023282637771E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999985135976718	WITHOUT_CLASSIFICATION	1.4864023282637771E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999983982122469	WITHOUT_CLASSIFICATION	1.6017877530537557E-6	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999983982122469	WITHOUT_CLASSIFICATION	1.6017877530537557E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.999998434198287	WITHOUT_CLASSIFICATION	1.5658017129970164E-6	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999149483591834	WITHOUT_CLASSIFICATION	8.505164081669147E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999724305935	WITHOUT_CLASSIFICATION	2.756940655271909E-8	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999990156209344	WITHOUT_CLASSIFICATION	9.843790656717965E-7	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9924887891883716	WITHOUT_CLASSIFICATION	0.007511210811628481	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994460357103	WITHOUT_CLASSIFICATION	5.539642896517836E-7	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999540258085348	WITHOUT_CLASSIFICATION	4.597419146520517E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999800547397	WITHOUT_CLASSIFICATION	1.994526033945309E-8	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999800547397	WITHOUT_CLASSIFICATION	1.994526033945309E-8	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999753514105532	WITHOUT_CLASSIFICATION	2.4648589446772474E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999992537561314	WITHOUT_CLASSIFICATION	7.462438686151645E-7	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999880686695686	WITHOUT_CLASSIFICATION	1.1931330431420317E-5	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9997879435313153	WITHOUT_CLASSIFICATION	2.1205646868478653E-4	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999873835665821	WITHOUT_CLASSIFICATION	1.2616433417877545E-5	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999801526418	WITHOUT_CLASSIFICATION	1.9847358162544187E-8	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999993143293113	WITHOUT_CLASSIFICATION	6.856706887937479E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9956252331599417	WITHOUT_CLASSIFICATION	0.004374766840058351	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999997703488616	WITHOUT_CLASSIFICATION	2.2965113844946815E-7	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999996997961817	WITHOUT_CLASSIFICATION	3.0020381829377527E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999877344509761	WITHOUT_CLASSIFICATION	1.2265549023780284E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999990918281231	WITHOUT_CLASSIFICATION	9.081718770243234E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999990918281231	WITHOUT_CLASSIFICATION	9.081718770243234E-7	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999981170409838	WITHOUT_CLASSIFICATION	1.8829590161351771E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999962346296999	WITHOUT_CLASSIFICATION	3.7653703001469583E-6	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.999998465609676	WITHOUT_CLASSIFICATION	1.5343903240793927E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991397626552	WITHOUT_CLASSIFICATION	8.602373447997146E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999991397626552	WITHOUT_CLASSIFICATION	8.602373447997146E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999984200497429	WITHOUT_CLASSIFICATION	1.5799502570634326E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999993474446095	WITHOUT_CLASSIFICATION	6.525553905777051E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999993474446095	WITHOUT_CLASSIFICATION	6.525553905777051E-7	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9987197338366333	WITHOUT_CLASSIFICATION	0.001280266163366757	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999994446727188	WITHOUT_CLASSIFICATION	5.553272812460161E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999962133850433	WITHOUT_CLASSIFICATION	3.7866149567424497E-6	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999998334985026	WITHOUT_CLASSIFICATION	1.6650149732776487E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999995017744591	WITHOUT_CLASSIFICATION	4.982255408946475E-7	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999983393443138	WITHOUT_CLASSIFICATION	1.6606556861369009E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999983393443138	WITHOUT_CLASSIFICATION	1.6606556861369009E-6	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999998740218318	WITHOUT_CLASSIFICATION	1.259781681991301E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999996112163728	WITHOUT_CLASSIFICATION	3.8878362716270385E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999979342946608	WITHOUT_CLASSIFICATION	2.0657053392704995E-6	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999979650825989	WITHOUT_CLASSIFICATION	2.034917401099814E-6	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999985587104341	WITHOUT_CLASSIFICATION	1.4412895659550174E-6	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999993681205777	WITHOUT_CLASSIFICATION	6.318794222590724E-7	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999983362945578	WITHOUT_CLASSIFICATION	1.663705442243329E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999830092	WITHOUT_CLASSIFICATION	1.699079454089021E-10	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999974826254463	WITHOUT_CLASSIFICATION	2.5173745537634856E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999838264810543	WITHOUT_CLASSIFICATION	1.617351894566122E-5	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999906357694504	WITHOUT_CLASSIFICATION	9.364230549632312E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999984200497429	WITHOUT_CLASSIFICATION	1.5799502570634326E-6	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999995248505573	WITHOUT_CLASSIFICATION	4.751494426896972E-7	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999760343899032	WITHOUT_CLASSIFICATION	2.3965610096744455E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9998600399399249	WITHOUT_CLASSIFICATION	1.3996006007499176E-4	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999996134694155	WITHOUT_CLASSIFICATION	3.865305844946032E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999983328419173	WITHOUT_CLASSIFICATION	1.6671580827520688E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999570549969931	WITHOUT_CLASSIFICATION	4.2945003007046966E-5	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999051291505	WITHOUT_CLASSIFICATION	9.487084958781048E-8	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999596122711641	WITHOUT_CLASSIFICATION	4.038772883581139E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999620802610008	WITHOUT_CLASSIFICATION	3.7919738999372656E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999405181364023	WITHOUT_CLASSIFICATION	5.948186359786303E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999611174157638	WITHOUT_CLASSIFICATION	3.8882584236246924E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999522188387742	WITHOUT_CLASSIFICATION	4.7781161225940105E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999932913799686	WITHOUT_CLASSIFICATION	6.708620031326831E-6	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9966836757128449	WITHOUT_CLASSIFICATION	0.003316324287155075	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999991940789622	WITHOUT_CLASSIFICATION	8.059210379081681E-7	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999616041990643	WITHOUT_CLASSIFICATION	3.83958009355693E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999666564141024	WITHOUT_CLASSIFICATION	3.334358589754851E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999912952441243	WITHOUT_CLASSIFICATION	8.704755875745264E-6	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999974846916224	WITHOUT_CLASSIFICATION	2.515308377600933E-6	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999960712089937	WITHOUT_CLASSIFICATION	3.928791006282937E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999807414722149	WITHOUT_CLASSIFICATION	1.925852778503054E-5	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999982678522892	WITHOUT_CLASSIFICATION	1.732147710834546E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999969332342452	WITHOUT_CLASSIFICATION	3.066765754792476E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999808515607106	WITHOUT_CLASSIFICATION	1.9148439289432904E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999996720544998	WITHOUT_CLASSIFICATION	3.279455002605646E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998306975303	WITHOUT_CLASSIFICATION	1.6930246968896423E-7	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999996900963146	WITHOUT_CLASSIFICATION	3.099036853956347E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999044024052545	WITHOUT_CLASSIFICATION	9.559759474553362E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999875752160824	WITHOUT_CLASSIFICATION	1.2424783917577682E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999969332342452	WITHOUT_CLASSIFICATION	3.066765754792476E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999996720544998	WITHOUT_CLASSIFICATION	3.279455002605646E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999996720544998	WITHOUT_CLASSIFICATION	3.279455002605646E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999998306975303	WITHOUT_CLASSIFICATION	1.6930246968896423E-7	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999956548223676	WITHOUT_CLASSIFICATION	4.34517763243242E-6	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999079408025	WITHOUT_CLASSIFICATION	9.205919744809504E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999079408025	WITHOUT_CLASSIFICATION	9.205919744809504E-8	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999973066549278	WITHOUT_CLASSIFICATION	2.6933450723259384E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999705134425191	WITHOUT_CLASSIFICATION	2.9486557480805194E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999705134425191	WITHOUT_CLASSIFICATION	2.9486557480805194E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999994485003494	WITHOUT_CLASSIFICATION	5.514996506044625E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999998110859569	WITHOUT_CLASSIFICATION	1.8891404299819372E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999998328209063	WITHOUT_CLASSIFICATION	1.6717909368564534E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999998328209063	WITHOUT_CLASSIFICATION	1.6717909368564534E-7	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.999998390020594	WITHOUT_CLASSIFICATION	1.6099794060663878E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999961715438163	WITHOUT_CLASSIFICATION	3.82845618376594E-6	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999949437279628	WITHOUT_CLASSIFICATION	5.056272037200854E-6	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999936483937512	WITHOUT_CLASSIFICATION	6.351606248916405E-6	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999958703645017	WITHOUT_CLASSIFICATION	4.129635498350755E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999972822281318	WITHOUT_CLASSIFICATION	2.717771868265347E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.99999373435031	WITHOUT_CLASSIFICATION	6.265649689946626E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999938128213073	WITHOUT_CLASSIFICATION	6.187178692774679E-6	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999620351905658	WITHOUT_CLASSIFICATION	3.7964809434129773E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999982035824498	WITHOUT_CLASSIFICATION	1.7964175501887098E-6	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9995546402671689	WITHOUT_CLASSIFICATION	4.453597328311419E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999844004661688	WITHOUT_CLASSIFICATION	1.5599533831283114E-5	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999260132152272	WITHOUT_CLASSIFICATION	7.398678477272179E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999686017578587	WITHOUT_CLASSIFICATION	3.139824214135695E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999909847249826	WITHOUT_CLASSIFICATION	9.015275017399325E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999696556794035	WITHOUT_CLASSIFICATION	3.034432059640843E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999997387182761	WITHOUT_CLASSIFICATION	2.6128172390612585E-7	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9998319209051663	WITHOUT_CLASSIFICATION	1.6807909483375222E-4	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999976469016698	WITHOUT_CLASSIFICATION	2.353098330244129E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998154409575211	WITHOUT_CLASSIFICATION	1.8455904247902455E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999522188387742	WITHOUT_CLASSIFICATION	4.7781161225940105E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999998021178891	WITHOUT_CLASSIFICATION	1.9788211092090656E-7	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999976447094535	WITHOUT_CLASSIFICATION	2.355290546519538E-6	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999928724203706	WITHOUT_CLASSIFICATION	7.127579629336965E-6	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.999998561038606	WITHOUT_CLASSIFICATION	1.4389613939980667E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999544017365897	WITHOUT_CLASSIFICATION	4.5598263410236656E-5	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999979125868991	WITHOUT_CLASSIFICATION	2.0874131008982024E-6	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999993817318276	WITHOUT_CLASSIFICATION	6.18268172385073E-7	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.99993958237419	WITHOUT_CLASSIFICATION	6.041762581010634E-5	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999646075813	WITHOUT_CLASSIFICATION	3.5392418677089343E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.999999394347098	WITHOUT_CLASSIFICATION	6.056529021057924E-7	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999998550622161	WITHOUT_CLASSIFICATION	1.449377838513614E-7	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999999882309967	WITHOUT_CLASSIFICATION	1.1769003432363328E-8	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999991029099252	WITHOUT_CLASSIFICATION	8.970900748685837E-7	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999997989769976	WITHOUT_CLASSIFICATION	2.0102300232535112E-7	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999896111537863	WITHOUT_CLASSIFICATION	1.0388846213805255E-5	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999925716733086	WITHOUT_CLASSIFICATION	7.428326691373944E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999923684126695	WITHOUT_CLASSIFICATION	7.6315873304428E-6	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999993293929812	WITHOUT_CLASSIFICATION	6.706070188138507E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.999988973293286	WITHOUT_CLASSIFICATION	1.1026706713989388E-5	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9998097976020676	WITHOUT_CLASSIFICATION	1.9020239793252712E-4	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999929014605609	WITHOUT_CLASSIFICATION	7.09853943909661E-6	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999985179541546	WITHOUT_CLASSIFICATION	1.482045845332019E-6	DEFECT
// title	WITHOUT_CLASSIFICATION	0.999970428000611	WITHOUT_CLASSIFICATION	2.9571999389071426E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999991989774623	WITHOUT_CLASSIFICATION	8.01022537810415E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999909373884415	WITHOUT_CLASSIFICATION	9.062611558512123E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999997440220889	WITHOUT_CLASSIFICATION	2.5597791108923804E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999982458072361	WITHOUT_CLASSIFICATION	1.7541927639062318E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.999996624533006	WITHOUT_CLASSIFICATION	3.3754669939531418E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999980028539	WITHOUT_CLASSIFICATION	1.9971460369613194E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999838264810543	WITHOUT_CLASSIFICATION	1.617351894566122E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999838264810543	WITHOUT_CLASSIFICATION	1.617351894566122E-5	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999900167420295	WITHOUT_CLASSIFICATION	9.983257970551326E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999423787088	WITHOUT_CLASSIFICATION	5.762129123528945E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.999998749764848	WITHOUT_CLASSIFICATION	1.25023515199192E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999982446898824	WITHOUT_CLASSIFICATION	1.7553101175673167E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970349199477	WITHOUT_CLASSIFICATION	2.965080052288951E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999993750533835	WITHOUT_CLASSIFICATION	6.249466164796513E-7	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999981587925018	WITHOUT_CLASSIFICATION	1.8412074981636564E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999965542486577	WITHOUT_CLASSIFICATION	3.4457513422434267E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999973610388407	WITHOUT_CLASSIFICATION	2.6389611592305826E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999993750533835	WITHOUT_CLASSIFICATION	6.249466164796513E-7	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999999072159601	WITHOUT_CLASSIFICATION	9.278403994130646E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999993750533835	WITHOUT_CLASSIFICATION	6.249466164796513E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999993750533835	WITHOUT_CLASSIFICATION	6.249466164796513E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999993750533835	WITHOUT_CLASSIFICATION	6.249466164796513E-7	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999981167724482	WITHOUT_CLASSIFICATION	1.883227551906652E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999983522790166	WITHOUT_CLASSIFICATION	1.6477209834009545E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999978106738643	WITHOUT_CLASSIFICATION	2.189326135702198E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999978106738643	WITHOUT_CLASSIFICATION	2.189326135702198E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999983522790166	WITHOUT_CLASSIFICATION	1.6477209834009545E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999983522790166	WITHOUT_CLASSIFICATION	1.6477209834009545E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999983522790166	WITHOUT_CLASSIFICATION	1.6477209834009545E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999983522790166	WITHOUT_CLASSIFICATION	1.6477209834009545E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999983522790166	WITHOUT_CLASSIFICATION	1.6477209834009545E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999891294560346	WITHOUT_CLASSIFICATION	1.08705439653504E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999891294560346	WITHOUT_CLASSIFICATION	1.08705439653504E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999891294560346	WITHOUT_CLASSIFICATION	1.08705439653504E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999891294560346	WITHOUT_CLASSIFICATION	1.08705439653504E-5	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9998808168694767	WITHOUT_CLASSIFICATION	1.1918313052331344E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999784597267366	WITHOUT_CLASSIFICATION	2.1540273263343862E-5	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999943831379917	WITHOUT_CLASSIFICATION	5.616862008295153E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999945614864506	WITHOUT_CLASSIFICATION	5.4385135493841595E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999946374728372	WITHOUT_CLASSIFICATION	5.362527162778238E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999947300075576	WITHOUT_CLASSIFICATION	5.2699924423618845E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999876566303453	WITHOUT_CLASSIFICATION	1.2343369654742571E-5	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999957189140335	WITHOUT_CLASSIFICATION	4.281085966528154E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999933064132888	WITHOUT_CLASSIFICATION	6.693586711224259E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999839976344147	WITHOUT_CLASSIFICATION	1.60023655852934E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999951845503183	WITHOUT_CLASSIFICATION	4.815449681667853E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999958557784409	WITHOUT_CLASSIFICATION	4.144221559237199E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999889685352029	WITHOUT_CLASSIFICATION	1.1031464797055216E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999441084913223	WITHOUT_CLASSIFICATION	5.5891508677680426E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993311114134	WITHOUT_CLASSIFICATION	6.688885865682647E-7	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999975446175992	WITHOUT_CLASSIFICATION	2.4553824007801812E-6	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999967000632891	WITHOUT_CLASSIFICATION	3.2999367109237054E-6	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999825370558316	WITHOUT_CLASSIFICATION	1.746294416845951E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999967932360958	WITHOUT_CLASSIFICATION	3.2067639040736625E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999925331115789	WITHOUT_CLASSIFICATION	7.466888421121115E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999892341940179	WITHOUT_CLASSIFICATION	1.076580598207852E-5	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999983032974028	WITHOUT_CLASSIFICATION	1.6967025971785643E-6	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.999983115599219	WITHOUT_CLASSIFICATION	1.6884400780893786E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999741993956153	WITHOUT_CLASSIFICATION	2.580060438470989E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.999990687044918	WITHOUT_CLASSIFICATION	9.31295508205841E-6	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999718453035651	WITHOUT_CLASSIFICATION	2.8154696434892366E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999921797019816	WITHOUT_CLASSIFICATION	7.820298018345344E-6	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999921797019816	WITHOUT_CLASSIFICATION	7.820298018345344E-6	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999922522572755	WITHOUT_CLASSIFICATION	7.747742724394376E-6	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999705780163278	WITHOUT_CLASSIFICATION	2.942198367216662E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999705780163278	WITHOUT_CLASSIFICATION	2.942198367216662E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999845979994297	WITHOUT_CLASSIFICATION	1.5402000570256715E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9958634872161579	WITHOUT_CLASSIFICATION	0.004136512783842052	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9958634872161579	WITHOUT_CLASSIFICATION	0.004136512783842052	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999350563229822	WITHOUT_CLASSIFICATION	6.494367701775463E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999350563229822	WITHOUT_CLASSIFICATION	6.494367701775463E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.999997587191728	WITHOUT_CLASSIFICATION	2.4128082720532165E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999986826237999	WITHOUT_CLASSIFICATION	1.317376200107124E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999986826237999	WITHOUT_CLASSIFICATION	1.317376200107124E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999708856562219	WITHOUT_CLASSIFICATION	2.911434377799943E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999757480936239	WITHOUT_CLASSIFICATION	2.4251906376090842E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999927622426249	WITHOUT_CLASSIFICATION	7.237757375149922E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999934153565362	WITHOUT_CLASSIFICATION	6.584643463852764E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999889299787416	WITHOUT_CLASSIFICATION	1.107002125836592E-5	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999950001716668	WITHOUT_CLASSIFICATION	4.999828333259976E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999969960255303	WITHOUT_CLASSIFICATION	3.0039744697731687E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999971828710928	WITHOUT_CLASSIFICATION	2.8171289072218346E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999961538017996	WITHOUT_CLASSIFICATION	3.84619820036869E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999923454417688	WITHOUT_CLASSIFICATION	7.654558231096292E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999920764230975	WITHOUT_CLASSIFICATION	7.92357690256131E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999891665789747	WITHOUT_CLASSIFICATION	1.0833421025277988E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999023829975736	WITHOUT_CLASSIFICATION	9.761700242639577E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999982446898824	WITHOUT_CLASSIFICATION	1.7553101175673167E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999023829975736	WITHOUT_CLASSIFICATION	9.761700242639577E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999970483527765	WITHOUT_CLASSIFICATION	2.9516472235702574E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999981180974562	WITHOUT_CLASSIFICATION	1.8819025437238457E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.999991118054487	WITHOUT_CLASSIFICATION	8.881945512894994E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999655714562306	WITHOUT_CLASSIFICATION	3.442854376941608E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999911256328036	WITHOUT_CLASSIFICATION	8.874367196386165E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999873431186549	WITHOUT_CLASSIFICATION	1.265688134509912E-5	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999955814482449	WITHOUT_CLASSIFICATION	4.418551755228091E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999923688684548	WITHOUT_CLASSIFICATION	7.631131545202086E-6	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9979762959383813	WITHOUT_CLASSIFICATION	0.002023704061618636	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999951426148851	WITHOUT_CLASSIFICATION	4.857385114808373E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999419863199381	WITHOUT_CLASSIFICATION	5.8013680061785655E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999190349959551	WITHOUT_CLASSIFICATION	8.096500404489981E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999410672511466	WITHOUT_CLASSIFICATION	5.893274885344298E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999722219189453	WITHOUT_CLASSIFICATION	2.777808105463344E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999722219189453	WITHOUT_CLASSIFICATION	2.777808105463344E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.999967582593144	WITHOUT_CLASSIFICATION	3.2417406855924125E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999625175599112	WITHOUT_CLASSIFICATION	3.748244008889352E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999625175599112	WITHOUT_CLASSIFICATION	3.748244008889352E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.999967582593144	WITHOUT_CLASSIFICATION	3.2417406855924125E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993311114134	WITHOUT_CLASSIFICATION	6.688885865682647E-7	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999990874446453	WITHOUT_CLASSIFICATION	9.125553547940292E-7	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999990891623423	WITHOUT_CLASSIFICATION	9.108376576631506E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9998143579859567	WITHOUT_CLASSIFICATION	1.856420140433339E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999941949139498	WITHOUT_CLASSIFICATION	5.80508605018367E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999977978688658	WITHOUT_CLASSIFICATION	2.20213113430409E-6	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999924066814483	WITHOUT_CLASSIFICATION	7.593318551756287E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999977818675411	WITHOUT_CLASSIFICATION	2.2181324589500845E-6	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999864624814586	WITHOUT_CLASSIFICATION	1.3537518541254441E-5	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999891277329517	WITHOUT_CLASSIFICATION	1.0872267048361994E-5	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999844802269546	WITHOUT_CLASSIFICATION	1.5519773045426163E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999802065306569	WITHOUT_CLASSIFICATION	1.979346934312268E-5	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999994529490563	WITHOUT_CLASSIFICATION	5.470509435924917E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999996596434307	WITHOUT_CLASSIFICATION	3.403565693039511E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999996596434307	WITHOUT_CLASSIFICATION	3.403565693039511E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999992665733535	WITHOUT_CLASSIFICATION	7.334266465827057E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999992665733535	WITHOUT_CLASSIFICATION	7.334266465827057E-7	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999954384346221	WITHOUT_CLASSIFICATION	4.561565377867252E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999967086962636	WITHOUT_CLASSIFICATION	3.2913037364512777E-6	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999969352574619	WITHOUT_CLASSIFICATION	3.064742538022637E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.999999281199467	WITHOUT_CLASSIFICATION	7.188005330397587E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999996025733537	WITHOUT_CLASSIFICATION	3.974266462941578E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.999998584863673	WITHOUT_CLASSIFICATION	1.4151363269998223E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999891277329517	WITHOUT_CLASSIFICATION	1.0872267048361994E-5	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999844802269546	WITHOUT_CLASSIFICATION	1.5519773045426163E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999802065306569	WITHOUT_CLASSIFICATION	1.979346934312268E-5	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999999436666467	WITHOUT_CLASSIFICATION	5.6333353299000694E-8	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999995500452012	WITHOUT_CLASSIFICATION	4.4995479883602524E-7	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999994166172956	WITHOUT_CLASSIFICATION	5.833827042751208E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999987272712619	WITHOUT_CLASSIFICATION	1.272728738008272E-6	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999981152034653	WITHOUT_CLASSIFICATION	1.884796534775911E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999815576411619	WITHOUT_CLASSIFICATION	1.8442358838049004E-5	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999966287316128	WITHOUT_CLASSIFICATION	3.371268387225474E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9995847504833657	WITHOUT_CLASSIFICATION	4.152495166342653E-4	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999831851659586	WITHOUT_CLASSIFICATION	1.681483404129711E-5	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.999994149185006	WITHOUT_CLASSIFICATION	5.850814994106697E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999970062800418	WITHOUT_CLASSIFICATION	2.9937199580589175E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999986015386225	WITHOUT_CLASSIFICATION	1.3984613775863397E-6	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999810972725823	WITHOUT_CLASSIFICATION	1.890272741767846E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.999833195628654	WITHOUT_CLASSIFICATION	1.6680437134591634E-4	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999992641384623	WITHOUT_CLASSIFICATION	7.358615376925783E-7	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999710126726877	WITHOUT_CLASSIFICATION	2.8987327312287373E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999996283619235	WITHOUT_CLASSIFICATION	3.7163807645507784E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999996283619235	WITHOUT_CLASSIFICATION	3.7163807645507784E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994200097418	WITHOUT_CLASSIFICATION	5.799902581345548E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999988740519462	WITHOUT_CLASSIFICATION	1.125948053817162E-6	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9999457368055559	WITHOUT_CLASSIFICATION	5.426319444408285E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999988120072979	WITHOUT_CLASSIFICATION	1.1879927021238965E-6	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999983420912825	WITHOUT_CLASSIFICATION	1.6579087174998102E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988361292622	WITHOUT_CLASSIFICATION	1.163870737763193E-6	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999988759922188	WITHOUT_CLASSIFICATION	1.124007781104473E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999987880733034	WITHOUT_CLASSIFICATION	1.2119266966102348E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999933471483787	WITHOUT_CLASSIFICATION	6.65285162124727E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999971430596752	WITHOUT_CLASSIFICATION	2.8569403246395254E-6	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999999863275894	WITHOUT_CLASSIFICATION	1.3672410655746168E-8	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9997582865298182	WITHOUT_CLASSIFICATION	2.4171347018169727E-4	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999992587753476	WITHOUT_CLASSIFICATION	7.412246524646403E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999968266047858	WITHOUT_CLASSIFICATION	3.173395214045924E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999967044079544	WITHOUT_CLASSIFICATION	3.295592045618369E-6	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999900882030551	WITHOUT_CLASSIFICATION	9.911796944787112E-6	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999991710321018	WITHOUT_CLASSIFICATION	8.289678980840671E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.999997052774651	WITHOUT_CLASSIFICATION	2.9472253490092787E-6	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999987458938702	WITHOUT_CLASSIFICATION	1.2541061298535478E-6	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999982676241063	WITHOUT_CLASSIFICATION	1.7323758937618835E-6	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999989751426923	WITHOUT_CLASSIFICATION	1.0248573077263057E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9998854489706702	WITHOUT_CLASSIFICATION	1.1455102932985801E-4	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999892373530248	WITHOUT_CLASSIFICATION	1.076264697516195E-5	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999984144300035	WITHOUT_CLASSIFICATION	1.5855699964582932E-6	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999986654201383	WITHOUT_CLASSIFICATION	1.3345798617071232E-6	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999847157746127	WITHOUT_CLASSIFICATION	1.528422538735565E-5	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999634364795483	WITHOUT_CLASSIFICATION	3.656352045161307E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999972763253955	WITHOUT_CLASSIFICATION	2.7236746045508845E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9994475757026265	WITHOUT_CLASSIFICATION	5.524242973735475E-4	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999954384346221	WITHOUT_CLASSIFICATION	4.561565377867252E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999967086962636	WITHOUT_CLASSIFICATION	3.2913037364512777E-6	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999999935437804	WITHOUT_CLASSIFICATION	6.456219561700816E-9	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993603029158	WITHOUT_CLASSIFICATION	6.396970842592067E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999997519115256	WITHOUT_CLASSIFICATION	2.480884743858211E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987276052927	WITHOUT_CLASSIFICATION	1.272394707295699E-6	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.999999922723059	WITHOUT_CLASSIFICATION	7.727694094997285E-8	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999998268358365	WITHOUT_CLASSIFICATION	1.7316416351830394E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999998924714296	WITHOUT_CLASSIFICATION	1.0752857031209608E-7	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999716476067	WITHOUT_CLASSIFICATION	2.8352393266243417E-8	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.999846462979753	WITHOUT_CLASSIFICATION	1.5353702024694196E-4	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999162242869121	WITHOUT_CLASSIFICATION	8.377571308801805E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.999760349678824	WITHOUT_CLASSIFICATION	2.3965032117596915E-4	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9998070556843212	WITHOUT_CLASSIFICATION	1.9294431567872154E-4	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.999994324820943	WITHOUT_CLASSIFICATION	5.675179057018186E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999385028423028	WITHOUT_CLASSIFICATION	6.149715769724408E-5	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.999604789661709	WITHOUT_CLASSIFICATION	3.9521033829108856E-4	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999771323946048	WITHOUT_CLASSIFICATION	2.286760539515046E-5	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9990398422522392	WITHOUT_CLASSIFICATION	9.601577477607526E-4	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9940065467463962	WITHOUT_CLASSIFICATION	0.0059934532536038004	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9997183982010762	WITHOUT_CLASSIFICATION	2.816017989237978E-4	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9994787079764126	WITHOUT_CLASSIFICATION	5.21292023587351E-4	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9995764129913591	WITHOUT_CLASSIFICATION	4.2358700864094805E-4	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9989381939165616	WITHOUT_CLASSIFICATION	0.0010618060834385204	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9996937078731095	WITHOUT_CLASSIFICATION	3.062921268904205E-4	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999540582680106	WITHOUT_CLASSIFICATION	4.594173198938555E-5	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9951421286966253	WITHOUT_CLASSIFICATION	0.004857871303374681	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9994671867368355	WITHOUT_CLASSIFICATION	5.328132631644482E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9997473095356706	WITHOUT_CLASSIFICATION	2.5269046432947403E-4	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999816643869189	WITHOUT_CLASSIFICATION	1.8335613081043957E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.999968319160087	WITHOUT_CLASSIFICATION	3.168083991294208E-5	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999442178683313	WITHOUT_CLASSIFICATION	5.5782131668585224E-5	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999276398744182	WITHOUT_CLASSIFICATION	7.236012558168994E-5	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999067059483138	WITHOUT_CLASSIFICATION	9.329405168622632E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999472881598547	WITHOUT_CLASSIFICATION	5.2711840145368E-5	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999983456332746	WITHOUT_CLASSIFICATION	1.6543667253641357E-6	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999948420247192	WITHOUT_CLASSIFICATION	5.157975280789595E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999980433057489	WITHOUT_CLASSIFICATION	1.956694251028408E-6	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999919298945618	WITHOUT_CLASSIFICATION	8.070105438223166E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999904077846673	WITHOUT_CLASSIFICATION	9.592215332694859E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999993417569838	WITHOUT_CLASSIFICATION	6.582430161361181E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999981494915754	WITHOUT_CLASSIFICATION	1.8505084245711225E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999607028982764	WITHOUT_CLASSIFICATION	3.929710172357474E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999909481102446	WITHOUT_CLASSIFICATION	9.051889755423155E-6	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999900716164642	WITHOUT_CLASSIFICATION	9.928383535672707E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.998913100040299	WITHOUT_CLASSIFICATION	0.0010868999597010386	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999798721440398	WITHOUT_CLASSIFICATION	2.0127855960236205E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999757205156481	WITHOUT_CLASSIFICATION	2.4279484351930104E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9970895885936534	WITHOUT_CLASSIFICATION	0.0029104114063465943	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9983492487815848	WITHOUT_CLASSIFICATION	0.001650751218415212	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9978168433448846	WITHOUT_CLASSIFICATION	0.0021831566551153815	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9969626781721745	WITHOUT_CLASSIFICATION	0.0030373218278253534	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999658219652459	WITHOUT_CLASSIFICATION	3.41780347542251E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999658219652459	WITHOUT_CLASSIFICATION	3.41780347542251E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999817398455618	WITHOUT_CLASSIFICATION	1.8260154438267765E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999817398455618	WITHOUT_CLASSIFICATION	1.8260154438267765E-5	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9998952364763142	WITHOUT_CLASSIFICATION	1.0476352368580624E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999700036927879	WITHOUT_CLASSIFICATION	2.999630721208429E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999912768963424	WITHOUT_CLASSIFICATION	8.723103657570203E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999912768963424	WITHOUT_CLASSIFICATION	8.723103657570203E-6	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999325315362632	WITHOUT_CLASSIFICATION	6.746846373678161E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999847773752214	WITHOUT_CLASSIFICATION	1.5222624778488801E-5	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999881017626802	WITHOUT_CLASSIFICATION	1.1898237319804315E-5	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999811201077166	WITHOUT_CLASSIFICATION	1.887989228352254E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999987167193125	WITHOUT_CLASSIFICATION	1.2832806874590095E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.999996813717529	WITHOUT_CLASSIFICATION	3.1862824708836434E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999853935349032	WITHOUT_CLASSIFICATION	1.4606465096847822E-5	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999410690137734	WITHOUT_CLASSIFICATION	5.893098622649195E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999923133712004	WITHOUT_CLASSIFICATION	7.68662879955511E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999195527172908	WITHOUT_CLASSIFICATION	8.044728270921139E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999914432017284	WITHOUT_CLASSIFICATION	8.556798271622653E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.999923194873475	WITHOUT_CLASSIFICATION	7.680512652490838E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999387831461364	WITHOUT_CLASSIFICATION	6.121685386364379E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999389300361241	WITHOUT_CLASSIFICATION	6.106996387593109E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999371161593695	WITHOUT_CLASSIFICATION	6.288384063053132E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999952065500924	WITHOUT_CLASSIFICATION	4.79344990752809E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999847773752214	WITHOUT_CLASSIFICATION	1.5222624778488801E-5	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999881017626802	WITHOUT_CLASSIFICATION	1.1898237319804315E-5	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999811201077166	WITHOUT_CLASSIFICATION	1.887989228352254E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999987167193125	WITHOUT_CLASSIFICATION	1.2832806874590095E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.999996813717529	WITHOUT_CLASSIFICATION	3.1862824708836434E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999949101950422	WITHOUT_CLASSIFICATION	5.089804957842346E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999560610734934	WITHOUT_CLASSIFICATION	4.393892650665606E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999968794518712	WITHOUT_CLASSIFICATION	3.1205481289183715E-6	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999931501742949	WITHOUT_CLASSIFICATION	6.849825705092963E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999618420544832	WITHOUT_CLASSIFICATION	3.8157945516803755E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999749464490283	WITHOUT_CLASSIFICATION	2.5053550971674655E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999974083788687	WITHOUT_CLASSIFICATION	2.591621131246341E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.999985851480368	WITHOUT_CLASSIFICATION	1.4148519632034076E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999889318041492	WITHOUT_CLASSIFICATION	1.1068195850819872E-5	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999942855823115	WITHOUT_CLASSIFICATION	5.7144176885382315E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999941823657288	WITHOUT_CLASSIFICATION	5.817634271187718E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999410690137734	WITHOUT_CLASSIFICATION	5.893098622649195E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998661210596	WITHOUT_CLASSIFICATION	1.3387894039435098E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999984786277716	WITHOUT_CLASSIFICATION	1.5213722285248885E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999984786277716	WITHOUT_CLASSIFICATION	1.5213722285248885E-6	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999928842991382	WITHOUT_CLASSIFICATION	7.115700861821822E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999948239858875	WITHOUT_CLASSIFICATION	5.17601411257197E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999125592812792	WITHOUT_CLASSIFICATION	8.7440718720735E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999125592812792	WITHOUT_CLASSIFICATION	8.7440718720735E-5	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999129082529967	WITHOUT_CLASSIFICATION	8.709174700322228E-5	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999760268848222	WITHOUT_CLASSIFICATION	2.397311517776807E-5	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9998840168580173	WITHOUT_CLASSIFICATION	1.1598314198272498E-4	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999991051028225	WITHOUT_CLASSIFICATION	8.948971775529939E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999994274690847	WITHOUT_CLASSIFICATION	5.725309153268154E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.999999609888774	WITHOUT_CLASSIFICATION	3.9011122599864516E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999892022980156	WITHOUT_CLASSIFICATION	1.0797701984480414E-5	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999946514902063	WITHOUT_CLASSIFICATION	5.3485097937542E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999964493612511	WITHOUT_CLASSIFICATION	3.5506387489171574E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999168248249093	WITHOUT_CLASSIFICATION	8.317517509071312E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999908816496408	WITHOUT_CLASSIFICATION	9.118350359250905E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999903672188187	WITHOUT_CLASSIFICATION	9.632781181273443E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999713783844968	WITHOUT_CLASSIFICATION	2.862161550315801E-5	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999991273741946	WITHOUT_CLASSIFICATION	8.72625805270288E-7	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999792050114588	WITHOUT_CLASSIFICATION	2.0794988541248196E-5	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999997549043775	WITHOUT_CLASSIFICATION	2.450956225181874E-7	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999950148128468	WITHOUT_CLASSIFICATION	4.9851871532904735E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999993799702065	WITHOUT_CLASSIFICATION	6.200297936324631E-7	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999246889240447	WITHOUT_CLASSIFICATION	7.531107595525554E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999078518534913	WITHOUT_CLASSIFICATION	9.214814650873636E-5	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999424507972345	WITHOUT_CLASSIFICATION	5.75492027654776E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999542034175487	WITHOUT_CLASSIFICATION	4.5796582451232725E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999195527172908	WITHOUT_CLASSIFICATION	8.044728270921139E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999914432017284	WITHOUT_CLASSIFICATION	8.556798271622653E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999937729719137	WITHOUT_CLASSIFICATION	6.227028086302206E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.999923194873475	WITHOUT_CLASSIFICATION	7.680512652490838E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999387831461364	WITHOUT_CLASSIFICATION	6.121685386364379E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999389300361241	WITHOUT_CLASSIFICATION	6.106996387593109E-5	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9986537781524785	WITHOUT_CLASSIFICATION	0.0013462218475215337	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998612390488414	WITHOUT_CLASSIFICATION	1.3876095115870758E-4	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9998808591970023	WITHOUT_CLASSIFICATION	1.1914080299766787E-4	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999657669404379	WITHOUT_CLASSIFICATION	3.4233059562115706E-5	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999633212416703	WITHOUT_CLASSIFICATION	3.6678758329745146E-5	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998376961343692	WITHOUT_CLASSIFICATION	1.6230386563066877E-4	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999311814773462	WITHOUT_CLASSIFICATION	6.881852265387086E-5	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999424465849401	WITHOUT_CLASSIFICATION	5.75534150598108E-5	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9997866333021767	WITHOUT_CLASSIFICATION	2.1336669782331713E-4	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9998962031375106	WITHOUT_CLASSIFICATION	1.0379686248950513E-4	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.999131873375226	WITHOUT_CLASSIFICATION	8.681266247740006E-4	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9998532230793475	WITHOUT_CLASSIFICATION	1.4677692065238857E-4	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9987335596726622	WITHOUT_CLASSIFICATION	0.0012664403273377521	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999960299969085	WITHOUT_CLASSIFICATION	3.970003091439804E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999298448305352	WITHOUT_CLASSIFICATION	7.015516946479702E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999985117369976	WITHOUT_CLASSIFICATION	1.4882630023847101E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999976890064959	WITHOUT_CLASSIFICATION	2.3109935041068042E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999498242683691	WITHOUT_CLASSIFICATION	5.0175731630868946E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999992712844994	WITHOUT_CLASSIFICATION	7.287155005523279E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999924978634401	WITHOUT_CLASSIFICATION	7.502136559875832E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999974447714248	WITHOUT_CLASSIFICATION	2.5552285751357863E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999439245593233	WITHOUT_CLASSIFICATION	5.607544067662685E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999982304965374	WITHOUT_CLASSIFICATION	1.7695034627667234E-6	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999985765228443	WITHOUT_CLASSIFICATION	1.4234771557234579E-6	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999970854083018	WITHOUT_CLASSIFICATION	2.914591698228589E-6	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999710124299546	WITHOUT_CLASSIFICATION	2.8987570045427513E-5	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999406492114936	WITHOUT_CLASSIFICATION	5.935078850633987E-5	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999936284336339	WITHOUT_CLASSIFICATION	6.371566366140535E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999933550396143	WITHOUT_CLASSIFICATION	6.6449603857295026E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9993385290758846	WITHOUT_CLASSIFICATION	6.614709241154118E-4	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9995915872006181	WITHOUT_CLASSIFICATION	4.0841279938192245E-4	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999984961716468	WITHOUT_CLASSIFICATION	1.5038283531908634E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999994684667233	WITHOUT_CLASSIFICATION	5.315332767296522E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999979991114503	WITHOUT_CLASSIFICATION	2.000888549676336E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999942757171736	WITHOUT_CLASSIFICATION	5.724282826462093E-6	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999572128053845	WITHOUT_CLASSIFICATION	4.278719461557825E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999997528871912	WITHOUT_CLASSIFICATION	2.4711280876050976E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999963101853905	WITHOUT_CLASSIFICATION	3.6898146096361397E-6	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999853401703156	WITHOUT_CLASSIFICATION	1.4659829684360438E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999990455851969	WITHOUT_CLASSIFICATION	9.544148030454782E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999990455851969	WITHOUT_CLASSIFICATION	9.544148030454782E-7	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999873888071915	WITHOUT_CLASSIFICATION	1.2611192808506992E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970349199477	WITHOUT_CLASSIFICATION	2.965080052288951E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999981587925018	WITHOUT_CLASSIFICATION	1.8412074981636564E-6	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999956485241277	WITHOUT_CLASSIFICATION	4.351475872277813E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9997420863414874	WITHOUT_CLASSIFICATION	2.5791365851251315E-4	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999596811829325	WITHOUT_CLASSIFICATION	4.031881706741164E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999984827810668	WITHOUT_CLASSIFICATION	1.5172189332313825E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999984827810668	WITHOUT_CLASSIFICATION	1.5172189332313825E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999984827810668	WITHOUT_CLASSIFICATION	1.5172189332313825E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999974270680542	WITHOUT_CLASSIFICATION	2.572931945860013E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999963028104725	WITHOUT_CLASSIFICATION	3.697189527627471E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999710527456	WITHOUT_CLASSIFICATION	2.8947254309697486E-8	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999710527456	WITHOUT_CLASSIFICATION	2.8947254309697486E-8	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999986287944493	WITHOUT_CLASSIFICATION	1.3712055507575504E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.999999013406242	WITHOUT_CLASSIFICATION	9.86593757992497E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999994161268763	WITHOUT_CLASSIFICATION	5.838731237368431E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999977136506021	WITHOUT_CLASSIFICATION	2.2863493978294536E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.999998296830782	WITHOUT_CLASSIFICATION	1.7031692179612622E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999974320390851	WITHOUT_CLASSIFICATION	2.5679609147846376E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999979077369406	WITHOUT_CLASSIFICATION	2.0922630592834462E-6	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999973961259719	WITHOUT_CLASSIFICATION	2.6038740279921844E-6	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999944916017968	WITHOUT_CLASSIFICATION	5.5083982032367135E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999967522912498	WITHOUT_CLASSIFICATION	3.247708750239094E-6	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999975356497751	WITHOUT_CLASSIFICATION	2.464350224968977E-6	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9997413962878822	WITHOUT_CLASSIFICATION	2.586037121177789E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999727306498101	WITHOUT_CLASSIFICATION	2.7269350189906952E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9993350253670178	WITHOUT_CLASSIFICATION	6.649746329821719E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999943254734974	WITHOUT_CLASSIFICATION	5.6745265025809615E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9996768211343979	WITHOUT_CLASSIFICATION	3.231788656020785E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999630719935392	WITHOUT_CLASSIFICATION	3.692800646088044E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9998682828355591	WITHOUT_CLASSIFICATION	1.3171716444099115E-4	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.999995454369809	WITHOUT_CLASSIFICATION	4.545630191090263E-6	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999990320994332	WITHOUT_CLASSIFICATION	9.679005667553954E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999989313822314	WITHOUT_CLASSIFICATION	1.0686177686228743E-6	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999985064586638	WITHOUT_CLASSIFICATION	1.4935413361597864E-6	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9998717758164253	WITHOUT_CLASSIFICATION	1.2822418357472462E-4	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999974726007161	WITHOUT_CLASSIFICATION	2.5273992838898638E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.999990808938794	WITHOUT_CLASSIFICATION	9.191061205891537E-6	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999984270930149	WITHOUT_CLASSIFICATION	1.5729069851581487E-6	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999997114668269	WITHOUT_CLASSIFICATION	2.885331732139253E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999995118304131	WITHOUT_CLASSIFICATION	4.881695868648567E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999992777331118	WITHOUT_CLASSIFICATION	7.222668882368184E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999994645775935	WITHOUT_CLASSIFICATION	5.354224064578678E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.999998990883708	WITHOUT_CLASSIFICATION	1.0091162919975074E-6	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999986597113685	WITHOUT_CLASSIFICATION	1.3402886315401813E-6	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999601544250301	WITHOUT_CLASSIFICATION	3.9845574969897217E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999390656014744	WITHOUT_CLASSIFICATION	6.0934398525563586E-5	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999995305576856	WITHOUT_CLASSIFICATION	4.6944231433679965E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999999377330434	WITHOUT_CLASSIFICATION	6.226695661005137E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997001169126	WITHOUT_CLASSIFICATION	2.9988308738799523E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999985586487827	WITHOUT_CLASSIFICATION	1.4413512172766956E-6	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9998595234330824	WITHOUT_CLASSIFICATION	1.4047656691749936E-4	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999990154937725	WITHOUT_CLASSIFICATION	9.845062275075806E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999997412610863	WITHOUT_CLASSIFICATION	2.587389137491759E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999976469016698	WITHOUT_CLASSIFICATION	2.353098330244129E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996752327451	WITHOUT_CLASSIFICATION	3.2476725475787204E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999982458072361	WITHOUT_CLASSIFICATION	1.7541927639062318E-6	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.999996624533006	WITHOUT_CLASSIFICATION	3.3754669939531418E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999982446898824	WITHOUT_CLASSIFICATION	1.7553101175673167E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999997528871912	WITHOUT_CLASSIFICATION	2.4711280876050976E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.999990808938794	WITHOUT_CLASSIFICATION	9.191061205891537E-6	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999957456197749	WITHOUT_CLASSIFICATION	4.254380225119034E-6	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999998322423325	WITHOUT_CLASSIFICATION	1.677576675381602E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999104828640569	WITHOUT_CLASSIFICATION	8.951713594302766E-5	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999957128405138	WITHOUT_CLASSIFICATION	4.287159486175368E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999989885101777	WITHOUT_CLASSIFICATION	1.0114898222875388E-6	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999812642999582	WITHOUT_CLASSIFICATION	1.873570004187468E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999934438996578	WITHOUT_CLASSIFICATION	6.556100342236581E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9998670550443121	WITHOUT_CLASSIFICATION	1.329449556879506E-4	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999986218134109	WITHOUT_CLASSIFICATION	1.3781865890382115E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999991675867049	WITHOUT_CLASSIFICATION	8.324132950667906E-7	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999982901032153	WITHOUT_CLASSIFICATION	1.7098967847078753E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999934438996578	WITHOUT_CLASSIFICATION	6.556100342236581E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999992353600792	WITHOUT_CLASSIFICATION	7.646399207991375E-7	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.999998195100112	WITHOUT_CLASSIFICATION	1.8048998879355805E-6	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999997113769762	WITHOUT_CLASSIFICATION	2.8862302380122965E-7	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999993455612053	WITHOUT_CLASSIFICATION	6.544387947214515E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999746005233963	WITHOUT_CLASSIFICATION	2.5399476603720183E-5	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999986322822984	WITHOUT_CLASSIFICATION	1.3677177015995957E-5	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999986322822984	WITHOUT_CLASSIFICATION	1.3677177015995957E-5	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999996991276027	WITHOUT_CLASSIFICATION	3.0087239729467845E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999999230022466	WITHOUT_CLASSIFICATION	7.699775340764759E-8	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999999230022466	WITHOUT_CLASSIFICATION	7.699775340764759E-8	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999998594773036	WITHOUT_CLASSIFICATION	1.4052269643677328E-7	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999377874289	WITHOUT_CLASSIFICATION	6.221257119824047E-8	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999982384606046	WITHOUT_CLASSIFICATION	1.7615393954172131E-6	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999988845302538	WITHOUT_CLASSIFICATION	1.1154697461678814E-6	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999993094418981	WITHOUT_CLASSIFICATION	6.905581018326454E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999987824194703	WITHOUT_CLASSIFICATION	1.2175805296601237E-6	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.99999534957279	WITHOUT_CLASSIFICATION	4.650427210004588E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999000086511044	WITHOUT_CLASSIFICATION	9.999134889561234E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999988701276078	WITHOUT_CLASSIFICATION	1.129872392208035E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999943421027528	WITHOUT_CLASSIFICATION	5.657897247186993E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999986258188935	WITHOUT_CLASSIFICATION	1.374181106555708E-6	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.999941067300821	WITHOUT_CLASSIFICATION	5.893269917891779E-5	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.99999868177904	WITHOUT_CLASSIFICATION	1.3182209599661961E-6	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999966750899977	WITHOUT_CLASSIFICATION	3.324910002240768E-6	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999961794113337	WITHOUT_CLASSIFICATION	3.820588666293605E-6	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.999997499494727	WITHOUT_CLASSIFICATION	2.500505272987843E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999920811028258	WITHOUT_CLASSIFICATION	7.918897174201212E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998154409575211	WITHOUT_CLASSIFICATION	1.8455904247902455E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998154409575211	WITHOUT_CLASSIFICATION	1.8455904247902455E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999522188387742	WITHOUT_CLASSIFICATION	4.7781161225940105E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999544017365897	WITHOUT_CLASSIFICATION	4.5598263410236656E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999522188387742	WITHOUT_CLASSIFICATION	4.7781161225940105E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999522188387742	WITHOUT_CLASSIFICATION	4.7781161225940105E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999522188387742	WITHOUT_CLASSIFICATION	4.7781161225940105E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970349199477	WITHOUT_CLASSIFICATION	2.965080052288951E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999981587925018	WITHOUT_CLASSIFICATION	1.8412074981636564E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999989765651526	WITHOUT_CLASSIFICATION	1.0234348473590339E-6	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999472881598547	WITHOUT_CLASSIFICATION	5.2711840145368E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999168248249093	WITHOUT_CLASSIFICATION	8.317517509071312E-5	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999246889240447	WITHOUT_CLASSIFICATION	7.531107595525554E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999078518534913	WITHOUT_CLASSIFICATION	9.214814650873636E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999985823695502	WITHOUT_CLASSIFICATION	1.4176304498257248E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999989885101777	WITHOUT_CLASSIFICATION	1.0114898222875388E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999991675867049	WITHOUT_CLASSIFICATION	8.324132950667906E-7	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999995231699005	WITHOUT_CLASSIFICATION	4.7683009946181587E-7	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999482042689969	WITHOUT_CLASSIFICATION	5.179573100300814E-5	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999974981713261	WITHOUT_CLASSIFICATION	2.5018286739207283E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999976479185001	WITHOUT_CLASSIFICATION	2.352081499885824E-6	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999998477548174	WITHOUT_CLASSIFICATION	1.5224518256454253E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999991721647947	WITHOUT_CLASSIFICATION	8.278352052192664E-7	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999987209006177	WITHOUT_CLASSIFICATION	1.2790993822944317E-6	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999951910552948	WITHOUT_CLASSIFICATION	4.808944705195864E-6	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999755280602459	WITHOUT_CLASSIFICATION	2.447193975410095E-5	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.999991328320578	WITHOUT_CLASSIFICATION	8.671679421920978E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999957006802538	WITHOUT_CLASSIFICATION	4.299319746237472E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9998288391610377	WITHOUT_CLASSIFICATION	1.7116083896224997E-4	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999983158599131	WITHOUT_CLASSIFICATION	1.6841400869781753E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999961458364607	WITHOUT_CLASSIFICATION	3.854163539347132E-6	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999984752444175	WITHOUT_CLASSIFICATION	1.5247555825146852E-6	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999227394262841	WITHOUT_CLASSIFICATION	7.726057371594602E-5	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999965950398569	WITHOUT_CLASSIFICATION	3.4049601429865893E-6	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.960987973362195	WITHOUT_CLASSIFICATION	0.03901202663780497	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999991571290404	WITHOUT_CLASSIFICATION	8.428709595690213E-7	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999553732697252	WITHOUT_CLASSIFICATION	4.462673027476326E-5	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999012648475171	WITHOUT_CLASSIFICATION	9.873515248293772E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999817623318643	WITHOUT_CLASSIFICATION	1.8237668135674436E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9998644606149547	WITHOUT_CLASSIFICATION	1.3553938504521084E-4	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.999953580624869	WITHOUT_CLASSIFICATION	4.641937513099638E-5	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999844069366742	WITHOUT_CLASSIFICATION	1.5593063325763248E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.999898055517893	WITHOUT_CLASSIFICATION	1.0194448210695936E-4	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999054644674287	WITHOUT_CLASSIFICATION	9.453553257129731E-5	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999732115695329	WITHOUT_CLASSIFICATION	2.678843046711648E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999979896583906	WITHOUT_CLASSIFICATION	2.010341609330409E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999952065500924	WITHOUT_CLASSIFICATION	4.79344990752809E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999952065500924	WITHOUT_CLASSIFICATION	4.79344990752809E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999943740068903	WITHOUT_CLASSIFICATION	5.62599310975992E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999168248249093	WITHOUT_CLASSIFICATION	8.317517509071312E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999908816496408	WITHOUT_CLASSIFICATION	9.118350359250905E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999903672188187	WITHOUT_CLASSIFICATION	9.632781181273443E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9992636466152953	WITHOUT_CLASSIFICATION	7.363533847046782E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999713783844968	WITHOUT_CLASSIFICATION	2.862161550315801E-5	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999298448305352	WITHOUT_CLASSIFICATION	7.015516946479702E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999985117369976	WITHOUT_CLASSIFICATION	1.4882630023847101E-6	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999976890064959	WITHOUT_CLASSIFICATION	2.3109935041068042E-6	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999498242683691	WITHOUT_CLASSIFICATION	5.0175731630868946E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999924978634401	WITHOUT_CLASSIFICATION	7.502136559875832E-6	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999974447714248	WITHOUT_CLASSIFICATION	2.5552285751357863E-6	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999439245593233	WITHOUT_CLASSIFICATION	5.607544067662685E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999982304965374	WITHOUT_CLASSIFICATION	1.7695034627667234E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999933550396143	WITHOUT_CLASSIFICATION	6.6449603857295026E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999854497454499	WITHOUT_CLASSIFICATION	1.4550254550119459E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999997528871912	WITHOUT_CLASSIFICATION	2.4711280876050976E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999990455851969	WITHOUT_CLASSIFICATION	9.544148030454782E-7	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999873888071915	WITHOUT_CLASSIFICATION	1.2611192808506992E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999596811829325	WITHOUT_CLASSIFICATION	4.031881706741164E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999984827810668	WITHOUT_CLASSIFICATION	1.5172189332313825E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999984827810668	WITHOUT_CLASSIFICATION	1.5172189332313825E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999974270680542	WITHOUT_CLASSIFICATION	2.572931945860013E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999710527456	WITHOUT_CLASSIFICATION	2.8947254309697486E-8	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999999710527456	WITHOUT_CLASSIFICATION	2.8947254309697486E-8	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999986287944493	WITHOUT_CLASSIFICATION	1.3712055507575504E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.999999013406242	WITHOUT_CLASSIFICATION	9.86593757992497E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999890374330317	WITHOUT_CLASSIFICATION	1.0962566968369622E-5	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999412619783621	WITHOUT_CLASSIFICATION	5.873802163794123E-5	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999980668646493	WITHOUT_CLASSIFICATION	1.9331353506910818E-6	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999956800980443	WITHOUT_CLASSIFICATION	4.319901955669516E-6	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999945710069882	WITHOUT_CLASSIFICATION	5.428993011841433E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999995528366737	WITHOUT_CLASSIFICATION	4.4716332634666966E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999992343177069	WITHOUT_CLASSIFICATION	7.656822932078822E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999996781190177	WITHOUT_CLASSIFICATION	3.21880982332212E-7	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999930122527654	WITHOUT_CLASSIFICATION	6.987747234649166E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.999980706876365	WITHOUT_CLASSIFICATION	1.9293123634939878E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999889143927461	WITHOUT_CLASSIFICATION	1.1085607253905014E-5	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.999999509638509	WITHOUT_CLASSIFICATION	4.903614909160926E-7	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999987131138823	WITHOUT_CLASSIFICATION	1.2868861176676376E-6	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999441875580152	WITHOUT_CLASSIFICATION	5.58124419847525E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999993690196298	WITHOUT_CLASSIFICATION	6.30980370142411E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999955601335588	WITHOUT_CLASSIFICATION	4.439866441119375E-6	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999922512926529	WITHOUT_CLASSIFICATION	7.74870734709995E-6	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9996911936080045	WITHOUT_CLASSIFICATION	3.088063919955777E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999966183507512	WITHOUT_CLASSIFICATION	3.3816492488168916E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999950066461987	WITHOUT_CLASSIFICATION	4.993353801320681E-6	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999943740068903	WITHOUT_CLASSIFICATION	5.62599310975992E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999925004811002	WITHOUT_CLASSIFICATION	7.499518899819203E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999996752327451	WITHOUT_CLASSIFICATION	3.2476725475787204E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999963794595541	WITHOUT_CLASSIFICATION	3.6205404459445908E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999947317483069	WITHOUT_CLASSIFICATION	5.268251693096711E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999997440220889	WITHOUT_CLASSIFICATION	2.5597791108923804E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999982446898824	WITHOUT_CLASSIFICATION	1.7553101175673167E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999927622426249	WITHOUT_CLASSIFICATION	7.237757375149922E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999969960255303	WITHOUT_CLASSIFICATION	3.0039744697731687E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999023829975736	WITHOUT_CLASSIFICATION	9.761700242639577E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999992823320254	WITHOUT_CLASSIFICATION	7.176679746928652E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9997420863414874	WITHOUT_CLASSIFICATION	2.5791365851251315E-4	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999963028104725	WITHOUT_CLASSIFICATION	3.697189527627471E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999000086511044	WITHOUT_CLASSIFICATION	9.999134889561234E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9998427921246502	WITHOUT_CLASSIFICATION	1.5720787534982754E-4	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9395968384028112	WITHOUT_CLASSIFICATION	0.06040316159718882	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999805590359595	WITHOUT_CLASSIFICATION	1.9440964040518885E-5	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999965303580295	WITHOUT_CLASSIFICATION	3.469641970462422E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999965303580295	WITHOUT_CLASSIFICATION	3.469641970462422E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999965303580295	WITHOUT_CLASSIFICATION	3.469641970462422E-6	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999994888177621	WITHOUT_CLASSIFICATION	5.11182237870993E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999986772038005	WITHOUT_CLASSIFICATION	1.3227961994211807E-6	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999997358407805	WITHOUT_CLASSIFICATION	2.641592195154308E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.999998093105426	WITHOUT_CLASSIFICATION	1.9068945740259236E-6	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999992764619171	WITHOUT_CLASSIFICATION	7.235380830217599E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999984982250522	WITHOUT_CLASSIFICATION	1.501774947728598E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999984982250522	WITHOUT_CLASSIFICATION	1.501774947728598E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999881538934408	WITHOUT_CLASSIFICATION	1.1846106559156259E-5	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999989490042014	WITHOUT_CLASSIFICATION	1.050995798652308E-6	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999943353287821	WITHOUT_CLASSIFICATION	5.664671217908345E-6	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999981323305029	WITHOUT_CLASSIFICATION	1.867669497005028E-6	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999966567710922	WITHOUT_CLASSIFICATION	3.3432289078471447E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999975309496035	WITHOUT_CLASSIFICATION	2.4690503964085865E-6	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999419333595367	WITHOUT_CLASSIFICATION	5.806664046313769E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999999706581458	WITHOUT_CLASSIFICATION	2.9341854192642714E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999990183415688	WITHOUT_CLASSIFICATION	9.816584312245274E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999910829513069	WITHOUT_CLASSIFICATION	8.917048693113831E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999711137869339	WITHOUT_CLASSIFICATION	2.8886213066118162E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999961065039514	WITHOUT_CLASSIFICATION	3.89349604858661E-6	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999806993521133	WITHOUT_CLASSIFICATION	1.9300647886742978E-5	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999845741225261	WITHOUT_CLASSIFICATION	1.5425877473909138E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999982446898824	WITHOUT_CLASSIFICATION	1.7553101175673167E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999927622426249	WITHOUT_CLASSIFICATION	7.237757375149922E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999023829975736	WITHOUT_CLASSIFICATION	9.761700242639577E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999967085831789	WITHOUT_CLASSIFICATION	3.2914168210739293E-6	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999979691199066	WITHOUT_CLASSIFICATION	2.030880093535221E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999987272712619	WITHOUT_CLASSIFICATION	1.272728738008272E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999000086511044	WITHOUT_CLASSIFICATION	9.999134889561234E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999992813635041	WITHOUT_CLASSIFICATION	7.186364958420181E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999978461704663	WITHOUT_CLASSIFICATION	2.1538295336186452E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999985021685859	WITHOUT_CLASSIFICATION	1.497831414146286E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999965303580295	WITHOUT_CLASSIFICATION	3.469641970462422E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999881538934408	WITHOUT_CLASSIFICATION	1.1846106559156259E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999999706581458	WITHOUT_CLASSIFICATION	2.9341854192642714E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999999706581458	WITHOUT_CLASSIFICATION	2.9341854192642714E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999990183415688	WITHOUT_CLASSIFICATION	9.816584312245274E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999947544732468	WITHOUT_CLASSIFICATION	5.245526753178076E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.999996105545709	WITHOUT_CLASSIFICATION	3.894454291054182E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999980851545942	WITHOUT_CLASSIFICATION	1.9148454056726476E-6	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999446544963105	WITHOUT_CLASSIFICATION	5.5345503689424736E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999933546904706	WITHOUT_CLASSIFICATION	6.645309529382104E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999994720169028	WITHOUT_CLASSIFICATION	5.279830971878629E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.999997681669662	WITHOUT_CLASSIFICATION	2.3183303379623918E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999995374222014	WITHOUT_CLASSIFICATION	4.6257779866792593E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.999990005457922	WITHOUT_CLASSIFICATION	9.994542077905864E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999994821208987	WITHOUT_CLASSIFICATION	5.178791012748722E-7	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999995851151867	WITHOUT_CLASSIFICATION	4.148848132963794E-7	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999922582392338	WITHOUT_CLASSIFICATION	7.741760766259059E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.999998136280494	WITHOUT_CLASSIFICATION	1.863719505835276E-6	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999983648312436	WITHOUT_CLASSIFICATION	1.6351687563792567E-6	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999956764654406	WITHOUT_CLASSIFICATION	4.3235345593260025E-6	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999973207427179	WITHOUT_CLASSIFICATION	2.6792572821210878E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999907561746074	WITHOUT_CLASSIFICATION	9.243825392654879E-6	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999966075010601	WITHOUT_CLASSIFICATION	3.392498939923645E-6	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999988868949435	WITHOUT_CLASSIFICATION	1.1131050565547466E-6	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999985465264661	WITHOUT_CLASSIFICATION	1.4534735339100543E-6	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999983442118812	WITHOUT_CLASSIFICATION	1.6557881188747597E-6	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999999297273514	WITHOUT_CLASSIFICATION	7.027264860381345E-7	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999278663976069	WITHOUT_CLASSIFICATION	7.213360239317028E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999346218189026	WITHOUT_CLASSIFICATION	6.537818109743526E-5	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.999963805603957	WITHOUT_CLASSIFICATION	3.619439604307058E-5	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999988531178994	WITHOUT_CLASSIFICATION	1.1468821006055755E-6	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999972970646779	WITHOUT_CLASSIFICATION	2.7029353220644834E-6	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999885395288061	WITHOUT_CLASSIFICATION	1.1460471194016394E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.999994695867299	WITHOUT_CLASSIFICATION	5.304132700943767E-6	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999980538841696	WITHOUT_CLASSIFICATION	1.946115830348429E-6	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999994072606924	WITHOUT_CLASSIFICATION	5.927393077054672E-7	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999987803920702	WITHOUT_CLASSIFICATION	1.2196079297269012E-6	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999977793100177	WITHOUT_CLASSIFICATION	2.220689982443583E-6	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999993034480156	WITHOUT_CLASSIFICATION	6.965519843222778E-7	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999993089277759	WITHOUT_CLASSIFICATION	6.910722241142608E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999988485748116	WITHOUT_CLASSIFICATION	1.1514251884197196E-6	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999996617583214	WITHOUT_CLASSIFICATION	3.382416785881579E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999934882627514	WITHOUT_CLASSIFICATION	6.511737248733456E-6	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999731932278454	WITHOUT_CLASSIFICATION	2.680677215454209E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999999297273514	WITHOUT_CLASSIFICATION	7.027264860381345E-7	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999994955737732	WITHOUT_CLASSIFICATION	5.044262267961371E-7	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999998453039638	WITHOUT_CLASSIFICATION	1.5469603615874424E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999996431126766	WITHOUT_CLASSIFICATION	3.5688732338415786E-7	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999888720858614	WITHOUT_CLASSIFICATION	1.1127914138523854E-5	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999972024416175	WITHOUT_CLASSIFICATION	2.797558382596328E-6	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999897855769455	WITHOUT_CLASSIFICATION	1.021442305450088E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999964239505488	WITHOUT_CLASSIFICATION	3.5760494512387948E-6	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.99999182035047	WITHOUT_CLASSIFICATION	8.179649530082703E-6	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999693617182714	WITHOUT_CLASSIFICATION	3.0638281728603405E-5	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999794238103361	WITHOUT_CLASSIFICATION	2.0576189663864188E-5	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999543378374383	WITHOUT_CLASSIFICATION	4.566216256162607E-5	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.999972028401345	WITHOUT_CLASSIFICATION	2.7971598654919982E-5	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999893520044805	WITHOUT_CLASSIFICATION	1.0647995519570044E-5	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999996108123699	WITHOUT_CLASSIFICATION	3.891876301746458E-7	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999996108123699	WITHOUT_CLASSIFICATION	3.891876301746458E-7	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999996108123699	WITHOUT_CLASSIFICATION	3.891876301746458E-7	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999662600335251	WITHOUT_CLASSIFICATION	3.3739966474968175E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999662600335251	WITHOUT_CLASSIFICATION	3.3739966474968175E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999662600335251	WITHOUT_CLASSIFICATION	3.3739966474968175E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999990509218355	WITHOUT_CLASSIFICATION	9.49078164594366E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999990509218355	WITHOUT_CLASSIFICATION	9.49078164594366E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995097153032	WITHOUT_CLASSIFICATION	4.902846968915924E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995097153032	WITHOUT_CLASSIFICATION	4.902846968915924E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995097153032	WITHOUT_CLASSIFICATION	4.902846968915924E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995097153032	WITHOUT_CLASSIFICATION	4.902846968915924E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999969505110536	WITHOUT_CLASSIFICATION	3.0494889464476634E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999969505110536	WITHOUT_CLASSIFICATION	3.0494889464476634E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999969505110536	WITHOUT_CLASSIFICATION	3.0494889464476634E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999969505110536	WITHOUT_CLASSIFICATION	3.0494889464476634E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999984804011999	WITHOUT_CLASSIFICATION	1.5195988001626944E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999984804011999	WITHOUT_CLASSIFICATION	1.5195988001626944E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999984804011999	WITHOUT_CLASSIFICATION	1.5195988001626944E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999984804011999	WITHOUT_CLASSIFICATION	1.5195988001626944E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999984804011999	WITHOUT_CLASSIFICATION	1.5195988001626944E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995720006452	WITHOUT_CLASSIFICATION	4.2799935483369044E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995720006452	WITHOUT_CLASSIFICATION	4.2799935483369044E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995720006452	WITHOUT_CLASSIFICATION	4.2799935483369044E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995720006452	WITHOUT_CLASSIFICATION	4.2799935483369044E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999975957415026	WITHOUT_CLASSIFICATION	2.404258497403094E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999975957415026	WITHOUT_CLASSIFICATION	2.404258497403094E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999990509218355	WITHOUT_CLASSIFICATION	9.49078164594366E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995097153032	WITHOUT_CLASSIFICATION	4.902846968915924E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999969505110536	WITHOUT_CLASSIFICATION	3.0494889464476634E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999984804011999	WITHOUT_CLASSIFICATION	1.5195988001626944E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995720006452	WITHOUT_CLASSIFICATION	4.2799935483369044E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999975957415026	WITHOUT_CLASSIFICATION	2.404258497403094E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999927762201142	WITHOUT_CLASSIFICATION	7.223779885812283E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999958098996723	WITHOUT_CLASSIFICATION	4.190100327610171E-6	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999982239684024	WITHOUT_CLASSIFICATION	1.7760315976314635E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9998883068583221	WITHOUT_CLASSIFICATION	1.1169314167787747E-4	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9998883068583221	WITHOUT_CLASSIFICATION	1.1169314167787747E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9997647372899954	WITHOUT_CLASSIFICATION	2.3526271000468848E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9997647372899954	WITHOUT_CLASSIFICATION	2.3526271000468848E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9997647372899954	WITHOUT_CLASSIFICATION	2.3526271000468848E-4	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999821092625273	WITHOUT_CLASSIFICATION	1.7890737472654267E-5	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999994770141138	WITHOUT_CLASSIFICATION	5.229858861737895E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999967268895799	WITHOUT_CLASSIFICATION	3.273110420117756E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.999999327420033	WITHOUT_CLASSIFICATION	6.725799670761504E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999915971396189	WITHOUT_CLASSIFICATION	8.402860381070481E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999983367394956	WITHOUT_CLASSIFICATION	1.6632605044963208E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999999377330434	WITHOUT_CLASSIFICATION	6.226695661005137E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997001169126	WITHOUT_CLASSIFICATION	2.9988308738799523E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999989885101777	WITHOUT_CLASSIFICATION	1.0114898222875388E-6	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999991675867049	WITHOUT_CLASSIFICATION	8.324132950667906E-7	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9998883068583221	WITHOUT_CLASSIFICATION	1.1169314167787747E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9997647372899954	WITHOUT_CLASSIFICATION	2.3526271000468848E-4	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999929616977979	WITHOUT_CLASSIFICATION	7.0383022019849865E-6	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999873770994523	WITHOUT_CLASSIFICATION	1.262290054777308E-5	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999986060353073	WITHOUT_CLASSIFICATION	1.393964692680238E-6	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999994793805284	WITHOUT_CLASSIFICATION	5.206194715935506E-7	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999982391647234	WITHOUT_CLASSIFICATION	1.7608352766728883E-6	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.999998692087885	WITHOUT_CLASSIFICATION	1.3079121150184143E-6	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999994636926887	WITHOUT_CLASSIFICATION	5.363073112713594E-7	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999993993519245	WITHOUT_CLASSIFICATION	6.006480754185629E-7	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999985035194638	WITHOUT_CLASSIFICATION	1.4964805360968007E-6	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999984729871741	WITHOUT_CLASSIFICATION	1.527012825947611E-6	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999981800505295	WITHOUT_CLASSIFICATION	1.81994947045839E-6	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999957700778763	WITHOUT_CLASSIFICATION	4.229922123647122E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999940318975858	WITHOUT_CLASSIFICATION	5.9681024142139285E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999940318975858	WITHOUT_CLASSIFICATION	5.9681024142139285E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999940318975858	WITHOUT_CLASSIFICATION	5.9681024142139285E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999974914116544	WITHOUT_CLASSIFICATION	2.5085883455692874E-6	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999950681113418	WITHOUT_CLASSIFICATION	4.931888658221996E-6	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999972201989114	WITHOUT_CLASSIFICATION	2.779801088575831E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999992369285138	WITHOUT_CLASSIFICATION	7.630714861401849E-7	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999978496781666	WITHOUT_CLASSIFICATION	2.150321833325208E-6	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999995588120346	WITHOUT_CLASSIFICATION	4.4118796540372256E-7	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.999997292946984	WITHOUT_CLASSIFICATION	2.7070530160280894E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999986249476882	WITHOUT_CLASSIFICATION	1.375052311793695E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999979564248399	WITHOUT_CLASSIFICATION	2.043575160038206E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999978617476151	WITHOUT_CLASSIFICATION	2.1382523850336313E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999999377330434	WITHOUT_CLASSIFICATION	6.226695661005137E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997001169126	WITHOUT_CLASSIFICATION	2.9988308738799523E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999929616977979	WITHOUT_CLASSIFICATION	7.0383022019849865E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999979564248399	WITHOUT_CLASSIFICATION	2.043575160038206E-6	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999978617476151	WITHOUT_CLASSIFICATION	2.1382523850336313E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999971668659732	WITHOUT_CLASSIFICATION	2.8331340268043145E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9967180737503021	WITHOUT_CLASSIFICATION	0.003281926249697795	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999997676093136	WITHOUT_CLASSIFICATION	2.3239068627438751E-7	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999987247901311	WITHOUT_CLASSIFICATION	1.2752098688421014E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999996135997116	WITHOUT_CLASSIFICATION	3.864002883352337E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999996273223384	WITHOUT_CLASSIFICATION	3.7267766163746605E-7	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999992867459079	WITHOUT_CLASSIFICATION	7.132540921338043E-7	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999990485626579	WITHOUT_CLASSIFICATION	9.514373422130609E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999891829636384	WITHOUT_CLASSIFICATION	1.081703636154526E-5	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999957515516157	WITHOUT_CLASSIFICATION	4.248448384228341E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999978419915797	WITHOUT_CLASSIFICATION	2.158008420369084E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999922712306	WITHOUT_CLASSIFICATION	7.728769374596577E-9	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999657359524853	WITHOUT_CLASSIFICATION	3.4264047514692365E-5	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999977556952132	WITHOUT_CLASSIFICATION	2.2443047867679125E-6	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.999998002645281	WITHOUT_CLASSIFICATION	1.997354719002052E-6	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999966161970243	WITHOUT_CLASSIFICATION	3.383802975780923E-6	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999904256287171	WITHOUT_CLASSIFICATION	9.574371282965762E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999994127481812	WITHOUT_CLASSIFICATION	5.872518188405694E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.999994881097395	WITHOUT_CLASSIFICATION	5.118902605035172E-6	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999993225314368	WITHOUT_CLASSIFICATION	6.774685632418586E-7	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999966116878641	WITHOUT_CLASSIFICATION	3.388312135915608E-6	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999995275392337	WITHOUT_CLASSIFICATION	4.7246076624706914E-7	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999863571099393	WITHOUT_CLASSIFICATION	1.3642890060703808E-5	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999923950380734	WITHOUT_CLASSIFICATION	7.604961926616155E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999910603385413	WITHOUT_CLASSIFICATION	8.939661458713429E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999443898715485	WITHOUT_CLASSIFICATION	5.561012845145978E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999731762014686	WITHOUT_CLASSIFICATION	2.6823798531321606E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999909671629129	WITHOUT_CLASSIFICATION	9.032837087086497E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999923800992515	WITHOUT_CLASSIFICATION	7.619900748467493E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.999524516785688	WITHOUT_CLASSIFICATION	4.7548321431191225E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.999997710565657	WITHOUT_CLASSIFICATION	2.2894343429850315E-6	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999973680020913	WITHOUT_CLASSIFICATION	2.6319979086888178E-6	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.99999474290188	WITHOUT_CLASSIFICATION	5.257098120027142E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999983681767598	WITHOUT_CLASSIFICATION	1.6318232402276414E-6	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999990464316838	WITHOUT_CLASSIFICATION	9.53568316202098E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999991476367439	WITHOUT_CLASSIFICATION	8.523632560077894E-7	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999978014222529	WITHOUT_CLASSIFICATION	2.1985777469689108E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999994854727006	WITHOUT_CLASSIFICATION	5.145272994370941E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999997440220889	WITHOUT_CLASSIFICATION	2.5597791108923804E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999544017365897	WITHOUT_CLASSIFICATION	4.5598263410236656E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.999998749764848	WITHOUT_CLASSIFICATION	1.25023515199192E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999973610388407	WITHOUT_CLASSIFICATION	2.6389611592305826E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999982446898824	WITHOUT_CLASSIFICATION	1.7553101175673167E-6	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999965542486577	WITHOUT_CLASSIFICATION	3.4457513422434267E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999929513729477	WITHOUT_CLASSIFICATION	7.04862705220292E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999615421424425	WITHOUT_CLASSIFICATION	3.84578575574152E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999967085831789	WITHOUT_CLASSIFICATION	3.2914168210739293E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999000086511044	WITHOUT_CLASSIFICATION	9.999134889561234E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999961458364607	WITHOUT_CLASSIFICATION	3.854163539347132E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999939971056114	WITHOUT_CLASSIFICATION	6.0028943886053305E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999940318975858	WITHOUT_CLASSIFICATION	5.9681024142139285E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999940318975858	WITHOUT_CLASSIFICATION	5.9681024142139285E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999940318975858	WITHOUT_CLASSIFICATION	5.9681024142139285E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999923950380734	WITHOUT_CLASSIFICATION	7.604961926616155E-6	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999910603385413	WITHOUT_CLASSIFICATION	8.939661458713429E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9970494655331629	WITHOUT_CLASSIFICATION	0.002950534466837181	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999993644801709	WITHOUT_CLASSIFICATION	6.355198291410787E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999937344228144	WITHOUT_CLASSIFICATION	6.2655771856157645E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999937344228144	WITHOUT_CLASSIFICATION	6.2655771856157645E-6	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999641833446	WITHOUT_CLASSIFICATION	3.5816655368919617E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999953331201171	WITHOUT_CLASSIFICATION	4.666879882965657E-6	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999956582173547	WITHOUT_CLASSIFICATION	4.341782645274084E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999970843680243	WITHOUT_CLASSIFICATION	2.9156319756489294E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999980615065172	WITHOUT_CLASSIFICATION	1.9384934828330044E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999980615065172	WITHOUT_CLASSIFICATION	1.9384934828330044E-6	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.999998328866663	WITHOUT_CLASSIFICATION	1.6711333370555231E-6	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.999990025273074	WITHOUT_CLASSIFICATION	9.974726925997242E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999990620706126	WITHOUT_CLASSIFICATION	9.379293872825927E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999994801644841	WITHOUT_CLASSIFICATION	5.198355158211761E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999980916400795	WITHOUT_CLASSIFICATION	1.908359920441904E-6	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998094965985	WITHOUT_CLASSIFICATION	1.9050340161875436E-7	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999650346961102	WITHOUT_CLASSIFICATION	3.4965303889828376E-5	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999970904463998	WITHOUT_CLASSIFICATION	2.909553600130636E-6	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999990853040795	WITHOUT_CLASSIFICATION	9.146959205277283E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999974207529146	WITHOUT_CLASSIFICATION	2.5792470853192673E-6	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999991871185765	WITHOUT_CLASSIFICATION	8.128814235327811E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999986231697657	WITHOUT_CLASSIFICATION	1.3768302342916458E-6	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999800048889793	WITHOUT_CLASSIFICATION	1.9995111020680416E-5	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9997588706184662	WITHOUT_CLASSIFICATION	2.4112938153380068E-4	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999989653039112	WITHOUT_CLASSIFICATION	1.034696088722211E-6	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999976581837936	WITHOUT_CLASSIFICATION	2.341816206406061E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.999997590329371	WITHOUT_CLASSIFICATION	2.409670629049136E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999950612489436	WITHOUT_CLASSIFICATION	4.9387510564788535E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999921398344229	WITHOUT_CLASSIFICATION	7.860165577070602E-6	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999947816427082	WITHOUT_CLASSIFICATION	5.218357291898776E-6	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999977799789196	WITHOUT_CLASSIFICATION	2.220021080456438E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999991407529635	WITHOUT_CLASSIFICATION	8.592470364631388E-7	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999760268848222	WITHOUT_CLASSIFICATION	2.397311517776807E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999971668659732	WITHOUT_CLASSIFICATION	2.8331340268043145E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9998797803842646	WITHOUT_CLASSIFICATION	1.2021961573536415E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999977799789196	WITHOUT_CLASSIFICATION	2.220021080456438E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999468920779	WITHOUT_CLASSIFICATION	5.310792195711335E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999998616843069	WITHOUT_CLASSIFICATION	1.3831569309861682E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999998616843069	WITHOUT_CLASSIFICATION	1.3831569309861682E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999998206226249	WITHOUT_CLASSIFICATION	1.7937737509877245E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999998206226249	WITHOUT_CLASSIFICATION	1.7937737509877245E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999999779392333	WITHOUT_CLASSIFICATION	2.2060766728768946E-8	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999897120121	WITHOUT_CLASSIFICATION	1.0287987916035487E-8	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999998737619845	WITHOUT_CLASSIFICATION	1.2623801549214536E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999982698416502	WITHOUT_CLASSIFICATION	1.7301583497668403E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999636451070159	WITHOUT_CLASSIFICATION	3.635489298422026E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999636451070159	WITHOUT_CLASSIFICATION	3.635489298422026E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9998248469481805	WITHOUT_CLASSIFICATION	1.7515305181942952E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999783327777	WITHOUT_CLASSIFICATION	2.166722229743348E-8	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999987904441124	WITHOUT_CLASSIFICATION	1.2095558875637741E-6	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999943705137616	WITHOUT_CLASSIFICATION	5.629486238346956E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999960895551172	WITHOUT_CLASSIFICATION	3.910444882747565E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999980026131642	WITHOUT_CLASSIFICATION	1.997386835873574E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999945703548011	WITHOUT_CLASSIFICATION	5.429645198926545E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999982058518233	WITHOUT_CLASSIFICATION	1.7941481766047777E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999982058518233	WITHOUT_CLASSIFICATION	1.7941481766047777E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999996490395493	WITHOUT_CLASSIFICATION	3.509604507789605E-7	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999987849024895	WITHOUT_CLASSIFICATION	1.215097510389329E-6	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.999993451743495	WITHOUT_CLASSIFICATION	6.548256505101795E-6	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9998224022185643	WITHOUT_CLASSIFICATION	1.7759778143561366E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999525656067011	WITHOUT_CLASSIFICATION	4.7434393298781035E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9998828142685074	WITHOUT_CLASSIFICATION	1.171857314926012E-4	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.999970306913524	WITHOUT_CLASSIFICATION	2.969308647599646E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999095715354098	WITHOUT_CLASSIFICATION	9.042846459017544E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.999995213748295	WITHOUT_CLASSIFICATION	4.786251704897681E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999995465768194	WITHOUT_CLASSIFICATION	4.534231805879948E-7	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999992977593182	WITHOUT_CLASSIFICATION	7.022406818249111E-7	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999988599629563	WITHOUT_CLASSIFICATION	1.1400370436275772E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.999965797341109	WITHOUT_CLASSIFICATION	3.4202658890936503E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999571504749637	WITHOUT_CLASSIFICATION	4.2849525036385187E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999990773617136	WITHOUT_CLASSIFICATION	9.226382865656985E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999877369531397	WITHOUT_CLASSIFICATION	1.2263046860359495E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999976621433435	WITHOUT_CLASSIFICATION	2.3378566565409364E-6	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999630559096974	WITHOUT_CLASSIFICATION	3.694409030263194E-5	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999974988992316	WITHOUT_CLASSIFICATION	2.5011007682794716E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999819829561643	WITHOUT_CLASSIFICATION	1.801704383578103E-5	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999960820110099	WITHOUT_CLASSIFICATION	3.917988990199049E-6	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999995495130881	WITHOUT_CLASSIFICATION	4.504869117936967E-7	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999948693208308	WITHOUT_CLASSIFICATION	5.1306791692441945E-6	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999998749826409	WITHOUT_CLASSIFICATION	1.2501735908151953E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999783327777	WITHOUT_CLASSIFICATION	2.166722229743348E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999960895551172	WITHOUT_CLASSIFICATION	3.910444882747565E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999960895551172	WITHOUT_CLASSIFICATION	3.910444882747565E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999989561458861	WITHOUT_CLASSIFICATION	1.043854113942681E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999989561458861	WITHOUT_CLASSIFICATION	1.043854113942681E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999989561458861	WITHOUT_CLASSIFICATION	1.043854113942681E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999989561458861	WITHOUT_CLASSIFICATION	1.043854113942681E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999980026131642	WITHOUT_CLASSIFICATION	1.997386835873574E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999980026131642	WITHOUT_CLASSIFICATION	1.997386835873574E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999980026131642	WITHOUT_CLASSIFICATION	1.997386835873574E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999980026131642	WITHOUT_CLASSIFICATION	1.997386835873574E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999948693208308	WITHOUT_CLASSIFICATION	5.1306791692441945E-6	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9995245061909238	WITHOUT_CLASSIFICATION	4.7549380907630656E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9996848250976201	WITHOUT_CLASSIFICATION	3.1517490237983594E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999610028661707	WITHOUT_CLASSIFICATION	3.899713382917609E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999996200119191	WITHOUT_CLASSIFICATION	3.799880809300855E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999995829197685	WITHOUT_CLASSIFICATION	4.170802313844341E-7	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999296358414334	WITHOUT_CLASSIFICATION	7.03641585666654E-5	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999959777274128	WITHOUT_CLASSIFICATION	4.022272587158208E-6	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999994883560008	WITHOUT_CLASSIFICATION	5.116439992133402E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999985051118181	WITHOUT_CLASSIFICATION	1.4948881818918512E-6	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999985051118181	WITHOUT_CLASSIFICATION	1.4948881818918512E-6	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.99999767845831	WITHOUT_CLASSIFICATION	2.321541690057274E-6	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999778616272094	WITHOUT_CLASSIFICATION	2.213837279063878E-5	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999509559151494	WITHOUT_CLASSIFICATION	4.9044084850607904E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9998876585669361	WITHOUT_CLASSIFICATION	1.1234143306395087E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.999993328087932	WITHOUT_CLASSIFICATION	6.67191206794885E-6	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999936193457836	WITHOUT_CLASSIFICATION	6.380654216455503E-6	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9998816324781077	WITHOUT_CLASSIFICATION	1.1836752189228793E-4	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999517991230534	WITHOUT_CLASSIFICATION	4.820087694665667E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999838521257987	WITHOUT_CLASSIFICATION	1.614787420128425E-5	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999774183867217	WITHOUT_CLASSIFICATION	2.258161327835767E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999893211470005	WITHOUT_CLASSIFICATION	1.0678852999456717E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999893211470005	WITHOUT_CLASSIFICATION	1.0678852999456717E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999719338850696	WITHOUT_CLASSIFICATION	2.8066114930467424E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.999999854829923	WITHOUT_CLASSIFICATION	1.451700769889873E-7	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999961603205596	WITHOUT_CLASSIFICATION	3.839679440382864E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999970348661372	WITHOUT_CLASSIFICATION	2.9651338626828805E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999896095446071	WITHOUT_CLASSIFICATION	1.0390455392958806E-5	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999896095446071	WITHOUT_CLASSIFICATION	1.0390455392958806E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999895540801224	WITHOUT_CLASSIFICATION	1.0445919877563555E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999895540801224	WITHOUT_CLASSIFICATION	1.0445919877563555E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999895540801224	WITHOUT_CLASSIFICATION	1.0445919877563555E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999983206744145	WITHOUT_CLASSIFICATION	1.679325585534235E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999992754150238	WITHOUT_CLASSIFICATION	7.24584976294976E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999953215488993	WITHOUT_CLASSIFICATION	4.678451100827517E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999965731186214	WITHOUT_CLASSIFICATION	3.4268813785458655E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999719338850696	WITHOUT_CLASSIFICATION	2.8066114930467424E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999989312711632	WITHOUT_CLASSIFICATION	1.0687288367533696E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999895540801224	WITHOUT_CLASSIFICATION	1.0445919877563555E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999895540801224	WITHOUT_CLASSIFICATION	1.0445919877563555E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999895540801224	WITHOUT_CLASSIFICATION	1.0445919877563555E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999983206744145	WITHOUT_CLASSIFICATION	1.679325585534235E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999992754150238	WITHOUT_CLASSIFICATION	7.24584976294976E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999984075739237	WITHOUT_CLASSIFICATION	1.5924260762937357E-6	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999933793094397	WITHOUT_CLASSIFICATION	6.620690560297374E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999678977441017	WITHOUT_CLASSIFICATION	3.210225589833696E-5	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.999875575690328	WITHOUT_CLASSIFICATION	1.2442430967186924E-4	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999715787233603	WITHOUT_CLASSIFICATION	2.8421276639742263E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9998154607875182	WITHOUT_CLASSIFICATION	1.845392124818314E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999547802642367	WITHOUT_CLASSIFICATION	4.521973576335707E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999967628758839	WITHOUT_CLASSIFICATION	3.237124116088844E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999967628758839	WITHOUT_CLASSIFICATION	3.237124116088844E-5	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999993354714425	WITHOUT_CLASSIFICATION	6.645285574381247E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999987509321236	WITHOUT_CLASSIFICATION	1.2490678763380078E-6	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999964907620089	WITHOUT_CLASSIFICATION	3.5092379909495012E-6	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999991614967995	WITHOUT_CLASSIFICATION	8.385032006179588E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.999999429182439	WITHOUT_CLASSIFICATION	5.708175609905867E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999998275854309	WITHOUT_CLASSIFICATION	1.7241456909964702E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999980355466449	WITHOUT_CLASSIFICATION	1.964453355206343E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999980355466449	WITHOUT_CLASSIFICATION	1.964453355206343E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999980355466449	WITHOUT_CLASSIFICATION	1.964453355206343E-6	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999692884661008	WITHOUT_CLASSIFICATION	3.071153389916507E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999975325662946	WITHOUT_CLASSIFICATION	2.467433705399792E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999989159072508	WITHOUT_CLASSIFICATION	1.084092749211762E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999993776769183	WITHOUT_CLASSIFICATION	6.223230816463166E-7	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999900620084079	WITHOUT_CLASSIFICATION	9.937991592152147E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999970733275673	WITHOUT_CLASSIFICATION	2.926672432843746E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999997181003479	WITHOUT_CLASSIFICATION	2.8189965205195055E-7	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998610536145	WITHOUT_CLASSIFICATION	1.3894638545260433E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998610536145	WITHOUT_CLASSIFICATION	1.3894638545260433E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.999998434198287	WITHOUT_CLASSIFICATION	1.5658017129970164E-6	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999979364316353	WITHOUT_CLASSIFICATION	2.063568364811622E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999971668659732	WITHOUT_CLASSIFICATION	2.8331340268043145E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999971668659732	WITHOUT_CLASSIFICATION	2.8331340268043145E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999897120121	WITHOUT_CLASSIFICATION	1.0287987916035487E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999933793094397	WITHOUT_CLASSIFICATION	6.620690560297374E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999967628758839	WITHOUT_CLASSIFICATION	3.237124116088844E-5	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999993776769183	WITHOUT_CLASSIFICATION	6.223230816463166E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999993776769183	WITHOUT_CLASSIFICATION	6.223230816463166E-7	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999989159072508	WITHOUT_CLASSIFICATION	1.084092749211762E-6	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999984075739237	WITHOUT_CLASSIFICATION	1.5924260762937357E-6	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999997181003479	WITHOUT_CLASSIFICATION	2.8189965205195055E-7	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999970733275673	WITHOUT_CLASSIFICATION	2.926672432843746E-6	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999834988424943	WITHOUT_CLASSIFICATION	1.650115750569635E-5	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9999732858971974	WITHOUT_CLASSIFICATION	2.6714102802545236E-5	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999997791340512	WITHOUT_CLASSIFICATION	2.2086594871325363E-7	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999653581942081	WITHOUT_CLASSIFICATION	3.464180579189408E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999948827371348	WITHOUT_CLASSIFICATION	5.117262865211426E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999948827371348	WITHOUT_CLASSIFICATION	5.117262865211426E-6	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999995899980128	WITHOUT_CLASSIFICATION	4.100019872473435E-7	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999989049397148	WITHOUT_CLASSIFICATION	1.095060285206433E-6	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999989665549867	WITHOUT_CLASSIFICATION	1.033445013348514E-6	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999980312518352	WITHOUT_CLASSIFICATION	1.9687481648328258E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999960563717274	WITHOUT_CLASSIFICATION	3.9436282725371365E-6	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999797015941913	WITHOUT_CLASSIFICATION	2.029840580873391E-5	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.999997241790629	WITHOUT_CLASSIFICATION	2.7582093709857177E-6	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999981852146687	WITHOUT_CLASSIFICATION	1.8147853313114189E-6	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999984648884718	WITHOUT_CLASSIFICATION	1.5351115281508153E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999996766909125	WITHOUT_CLASSIFICATION	3.2330908741379907E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999640886410236	WITHOUT_CLASSIFICATION	3.591135897639141E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999246614920327	WITHOUT_CLASSIFICATION	7.533850796728022E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999979148854232	WITHOUT_CLASSIFICATION	2.0851145767344408E-6	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999996991154475	WITHOUT_CLASSIFICATION	3.0088455251414617E-7	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999978854203591	WITHOUT_CLASSIFICATION	2.114579641025804E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999945641229903	WITHOUT_CLASSIFICATION	5.43587700984736E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999883556860507	WITHOUT_CLASSIFICATION	1.164431394932125E-5	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999983166125268	WITHOUT_CLASSIFICATION	1.6833874731266296E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993311114134	WITHOUT_CLASSIFICATION	6.688885865682647E-7	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999968453677659	WITHOUT_CLASSIFICATION	3.154632234139996E-6	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999897053218625	WITHOUT_CLASSIFICATION	1.0294678137556887E-5	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999997288233933	WITHOUT_CLASSIFICATION	2.7117660671966915E-7	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999837177752479	WITHOUT_CLASSIFICATION	1.6282224752217292E-5	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999910359852835	WITHOUT_CLASSIFICATION	8.964014716484137E-6	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999998764339758	WITHOUT_CLASSIFICATION	1.2356602415472933E-7	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.999999760924152	WITHOUT_CLASSIFICATION	2.3907584803083525E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999999366486239	WITHOUT_CLASSIFICATION	6.335137613461623E-8	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999941396441562	WITHOUT_CLASSIFICATION	5.8603558437573405E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999763661367893	WITHOUT_CLASSIFICATION	2.3633863210756166E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999971668659732	WITHOUT_CLASSIFICATION	2.8331340268043145E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993311114134	WITHOUT_CLASSIFICATION	6.688885865682647E-7	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999548143675591	WITHOUT_CLASSIFICATION	4.51856324408349E-5	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999997035694288	WITHOUT_CLASSIFICATION	2.964305712652453E-7	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999994694235268	WITHOUT_CLASSIFICATION	5.305764731127337E-7	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999998875990949	WITHOUT_CLASSIFICATION	1.1240090501285395E-7	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999988475507628	WITHOUT_CLASSIFICATION	1.1524492371342375E-6	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999976780855991	WITHOUT_CLASSIFICATION	2.321914400740456E-6	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999994068743443	WITHOUT_CLASSIFICATION	5.931256556407814E-7	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999986070326121	WITHOUT_CLASSIFICATION	1.3929673878075464E-6	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999847971879263	WITHOUT_CLASSIFICATION	1.5202812073614535E-5	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999992714145182	WITHOUT_CLASSIFICATION	7.285854817296035E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9970494655331629	WITHOUT_CLASSIFICATION	0.002950534466837181	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9986197551145722	WITHOUT_CLASSIFICATION	0.0013802448854276787	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999937719344321	WITHOUT_CLASSIFICATION	6.228065567923819E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999998612908475	WITHOUT_CLASSIFICATION	1.3870915243673312E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999983714292888	WITHOUT_CLASSIFICATION	1.6285707111055665E-6	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999958698868406	WITHOUT_CLASSIFICATION	4.1301131593563184E-6	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999957943765173	WITHOUT_CLASSIFICATION	4.205623482723945E-6	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999719557022351	WITHOUT_CLASSIFICATION	2.8044297764921116E-5	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999786301093191	WITHOUT_CLASSIFICATION	2.1369890680968302E-5	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9998868939791233	WITHOUT_CLASSIFICATION	1.1310602087676502E-4	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999388988610188	WITHOUT_CLASSIFICATION	6.110113898126834E-5	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999998602633475	WITHOUT_CLASSIFICATION	1.397366524809711E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999772488063207	WITHOUT_CLASSIFICATION	2.2751193679316674E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999772488063207	WITHOUT_CLASSIFICATION	2.2751193679316674E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999998855323003	WITHOUT_CLASSIFICATION	1.1446769962045553E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999747295711217	WITHOUT_CLASSIFICATION	2.5270428878355146E-5	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999991231548339	WITHOUT_CLASSIFICATION	8.768451662284437E-7	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9981605384625416	WITHOUT_CLASSIFICATION	0.001839461537458339	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999886216880233	WITHOUT_CLASSIFICATION	1.1378311976683143E-5	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.999978629305393	WITHOUT_CLASSIFICATION	2.137069460695405E-5	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.999992766120109	WITHOUT_CLASSIFICATION	7.233879891069279E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999997265186473	WITHOUT_CLASSIFICATION	2.734813526527189E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.999998744382265	WITHOUT_CLASSIFICATION	1.2556177349799687E-6	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999935222601812	WITHOUT_CLASSIFICATION	6.477739818788074E-6	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.999841281115996	WITHOUT_CLASSIFICATION	1.5871888400387712E-4	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999981351093875	WITHOUT_CLASSIFICATION	1.8648906124475514E-6	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999951065559864	WITHOUT_CLASSIFICATION	4.893444013475671E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999981351736554	WITHOUT_CLASSIFICATION	1.8648263445695085E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9991883835043182	WITHOUT_CLASSIFICATION	8.116164956817819E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999990058637213	WITHOUT_CLASSIFICATION	9.941362786984725E-7	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999986121066934	WITHOUT_CLASSIFICATION	1.3878933065379762E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998671378109465	WITHOUT_CLASSIFICATION	1.3286218905354726E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998671378109465	WITHOUT_CLASSIFICATION	1.3286218905354726E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998671378109465	WITHOUT_CLASSIFICATION	1.3286218905354726E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999644531551868	WITHOUT_CLASSIFICATION	3.554684481326723E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999540868425275	WITHOUT_CLASSIFICATION	4.5913157472350954E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999540868425275	WITHOUT_CLASSIFICATION	4.5913157472350954E-5	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999986980131973	WITHOUT_CLASSIFICATION	1.3019868026958013E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999522968736612	WITHOUT_CLASSIFICATION	4.770312633885383E-5	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999943712857656	WITHOUT_CLASSIFICATION	5.628714234378658E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999897435950994	WITHOUT_CLASSIFICATION	1.0256404900601882E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999897435950994	WITHOUT_CLASSIFICATION	1.0256404900601882E-5	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999995100768537	WITHOUT_CLASSIFICATION	4.899231463648215E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999981999931011	WITHOUT_CLASSIFICATION	1.8000068988629607E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999995945444206	WITHOUT_CLASSIFICATION	4.0545557949182956E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999997245994358	WITHOUT_CLASSIFICATION	2.754005642199148E-7	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999990458967514	WITHOUT_CLASSIFICATION	9.541032486150133E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999995945444206	WITHOUT_CLASSIFICATION	4.0545557949182956E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999997245994358	WITHOUT_CLASSIFICATION	2.754005642199148E-7	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.999993746069154	WITHOUT_CLASSIFICATION	6.253930845981206E-6	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.999963240839028	WITHOUT_CLASSIFICATION	3.6759160972044706E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999985602516468	WITHOUT_CLASSIFICATION	1.4397483531866197E-6	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999985602516468	WITHOUT_CLASSIFICATION	1.4397483531866197E-6	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999977004968079	WITHOUT_CLASSIFICATION	2.2995031919540352E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999963399921612	WITHOUT_CLASSIFICATION	3.660007838773112E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999923707662668	WITHOUT_CLASSIFICATION	7.62923373320273E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999943011218737	WITHOUT_CLASSIFICATION	5.698878126271815E-6	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999989060138016	WITHOUT_CLASSIFICATION	1.0939861984103146E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999937883504837	WITHOUT_CLASSIFICATION	6.211649516348744E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999949005485763	WITHOUT_CLASSIFICATION	5.09945142368646E-6	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999995579839686	WITHOUT_CLASSIFICATION	4.4201603136850543E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999993894860237	WITHOUT_CLASSIFICATION	6.105139763440657E-7	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999990939715323	WITHOUT_CLASSIFICATION	9.060284676741852E-7	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999977368123419	WITHOUT_CLASSIFICATION	2.2631876581052977E-6	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999950113406864	WITHOUT_CLASSIFICATION	4.988659313626076E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999906048922755	WITHOUT_CLASSIFICATION	9.395107724489104E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999959946265867	WITHOUT_CLASSIFICATION	4.005373413298401E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999967689083857	WITHOUT_CLASSIFICATION	3.231091614202876E-6	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999401049943	WITHOUT_CLASSIFICATION	5.989500574176621E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999649342499	WITHOUT_CLASSIFICATION	3.5065750094867615E-8	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999997550443975	WITHOUT_CLASSIFICATION	2.4495560251654915E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999971368779553	WITHOUT_CLASSIFICATION	2.863122044666058E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.999998943009583	WITHOUT_CLASSIFICATION	1.0569904169124414E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999708856562219	WITHOUT_CLASSIFICATION	2.911434377799943E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999757480936239	WITHOUT_CLASSIFICATION	2.4251906376090842E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999815576411619	WITHOUT_CLASSIFICATION	1.8442358838049004E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999990773617136	WITHOUT_CLASSIFICATION	9.226382865656985E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999990773617136	WITHOUT_CLASSIFICATION	9.226382865656985E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999877369531397	WITHOUT_CLASSIFICATION	1.2263046860359495E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999877369531397	WITHOUT_CLASSIFICATION	1.2263046860359495E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999976621433435	WITHOUT_CLASSIFICATION	2.3378566565409364E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999976621433435	WITHOUT_CLASSIFICATION	2.3378566565409364E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999960563717274	WITHOUT_CLASSIFICATION	3.9436282725371365E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9970494655331629	WITHOUT_CLASSIFICATION	0.002950534466837181	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998671378109465	WITHOUT_CLASSIFICATION	1.3286218905354726E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998671378109465	WITHOUT_CLASSIFICATION	1.3286218905354726E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999540868425275	WITHOUT_CLASSIFICATION	4.5913157472350954E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999540868425275	WITHOUT_CLASSIFICATION	4.5913157472350954E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999540868425275	WITHOUT_CLASSIFICATION	4.5913157472350954E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999522968736612	WITHOUT_CLASSIFICATION	4.770312633885383E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999522968736612	WITHOUT_CLASSIFICATION	4.770312633885383E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999522968736612	WITHOUT_CLASSIFICATION	4.770312633885383E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999644531551868	WITHOUT_CLASSIFICATION	3.554684481326723E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999644531551868	WITHOUT_CLASSIFICATION	3.554684481326723E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999959946265867	WITHOUT_CLASSIFICATION	4.005373413298401E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999967689083857	WITHOUT_CLASSIFICATION	3.231091614202876E-6	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999959268311	WITHOUT_CLASSIFICATION	4.073168940545933E-9	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999974016473673	WITHOUT_CLASSIFICATION	2.5983526328070205E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999993173231467	WITHOUT_CLASSIFICATION	6.826768531475965E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999993173231467	WITHOUT_CLASSIFICATION	6.826768531475965E-7	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999968102668306	WITHOUT_CLASSIFICATION	3.189733169314865E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988561636496	WITHOUT_CLASSIFICATION	1.1438363503812268E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999993173231467	WITHOUT_CLASSIFICATION	6.826768531475965E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999740914303847	WITHOUT_CLASSIFICATION	2.5908569615259542E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999633287400218	WITHOUT_CLASSIFICATION	3.667125997829728E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999633287400218	WITHOUT_CLASSIFICATION	3.667125997829728E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999633287400218	WITHOUT_CLASSIFICATION	3.667125997829728E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.99999902310944	WITHOUT_CLASSIFICATION	9.768905600747671E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999994822425562	WITHOUT_CLASSIFICATION	5.177574438611198E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999761435835958	WITHOUT_CLASSIFICATION	2.38564164042368E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997585227921	WITHOUT_CLASSIFICATION	2.4147720786848045E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997585227921	WITHOUT_CLASSIFICATION	2.4147720786848045E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998344503009	WITHOUT_CLASSIFICATION	1.655496990182244E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999765121476774	WITHOUT_CLASSIFICATION	2.3487852322608366E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999708856562219	WITHOUT_CLASSIFICATION	2.911434377799943E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999757480936239	WITHOUT_CLASSIFICATION	2.4251906376090842E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999990773617136	WITHOUT_CLASSIFICATION	9.226382865656985E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999877369531397	WITHOUT_CLASSIFICATION	1.2263046860359495E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999976621433435	WITHOUT_CLASSIFICATION	2.3378566565409364E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9990693361869594	WITHOUT_CLASSIFICATION	9.306638130406015E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999967628758839	WITHOUT_CLASSIFICATION	3.237124116088844E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999967628758839	WITHOUT_CLASSIFICATION	3.237124116088844E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999960563717274	WITHOUT_CLASSIFICATION	3.9436282725371365E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999967689083857	WITHOUT_CLASSIFICATION	3.231091614202876E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999967689083857	WITHOUT_CLASSIFICATION	3.231091614202876E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999971368779553	WITHOUT_CLASSIFICATION	2.863122044666058E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999993173231467	WITHOUT_CLASSIFICATION	6.826768531475965E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999633287400218	WITHOUT_CLASSIFICATION	3.667125997829728E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988561636496	WITHOUT_CLASSIFICATION	1.1438363503812268E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999740914303847	WITHOUT_CLASSIFICATION	2.5908569615259542E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999740914303847	WITHOUT_CLASSIFICATION	2.5908569615259542E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.99999902310944	WITHOUT_CLASSIFICATION	9.768905600747671E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997585227921	WITHOUT_CLASSIFICATION	2.4147720786848045E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998344503009	WITHOUT_CLASSIFICATION	1.655496990182244E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999987545534469	WITHOUT_CLASSIFICATION	1.2454465530546438E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999987545534469	WITHOUT_CLASSIFICATION	1.2454465530546438E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999987545534469	WITHOUT_CLASSIFICATION	1.2454465530546438E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999909260117854	WITHOUT_CLASSIFICATION	9.073988214556856E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999909260117854	WITHOUT_CLASSIFICATION	9.073988214556856E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999909260117854	WITHOUT_CLASSIFICATION	9.073988214556856E-6	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999959325351472	WITHOUT_CLASSIFICATION	4.067464852755062E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999971106824569	WITHOUT_CLASSIFICATION	2.8893175429746113E-6	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999758961866965	WITHOUT_CLASSIFICATION	2.4103813303484316E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.999976219504653	WITHOUT_CLASSIFICATION	2.378049534711118E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999855803133411	WITHOUT_CLASSIFICATION	1.4419686658878548E-5	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999954424352361	WITHOUT_CLASSIFICATION	4.557564763872071E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.999998774796581	WITHOUT_CLASSIFICATION	1.225203419067288E-6	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999970622421513	WITHOUT_CLASSIFICATION	2.9377578485846912E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999916930845	WITHOUT_CLASSIFICATION	8.306915481226023E-9	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999933499135544	WITHOUT_CLASSIFICATION	6.65008644570787E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999973786405745	WITHOUT_CLASSIFICATION	2.6213594254596934E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999986998987753	WITHOUT_CLASSIFICATION	1.3001012246408124E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9999998632341556	WITHOUT_CLASSIFICATION	1.3676584434414913E-7	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.999999016977951	WITHOUT_CLASSIFICATION	9.830220489691136E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999902100328237	WITHOUT_CLASSIFICATION	9.78996717637548E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999708856562219	WITHOUT_CLASSIFICATION	2.911434377799943E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999757480936239	WITHOUT_CLASSIFICATION	2.4251906376090842E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999990668482879	WITHOUT_CLASSIFICATION	9.331517121252737E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999542034175487	WITHOUT_CLASSIFICATION	4.5796582451232725E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999999975742607	WITHOUT_CLASSIFICATION	2.4257393715839936E-9	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999990773617136	WITHOUT_CLASSIFICATION	9.226382865656985E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999877369531397	WITHOUT_CLASSIFICATION	1.2263046860359495E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999976621433435	WITHOUT_CLASSIFICATION	2.3378566565409364E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999960563717274	WITHOUT_CLASSIFICATION	3.9436282725371365E-6	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999852327424177	WITHOUT_CLASSIFICATION	1.4767257582264826E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9989781524789579	WITHOUT_CLASSIFICATION	0.001021847521042029	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9991883835043182	WITHOUT_CLASSIFICATION	8.116164956817819E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999959946265867	WITHOUT_CLASSIFICATION	4.005373413298401E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999967689083857	WITHOUT_CLASSIFICATION	3.231091614202876E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999633287400218	WITHOUT_CLASSIFICATION	3.667125997829728E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988561636496	WITHOUT_CLASSIFICATION	1.1438363503812268E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999740914303847	WITHOUT_CLASSIFICATION	2.5908569615259542E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999761435835958	WITHOUT_CLASSIFICATION	2.38564164042368E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999765121476774	WITHOUT_CLASSIFICATION	2.3487852322608366E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999758961866965	WITHOUT_CLASSIFICATION	2.4103813303484316E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.999976219504653	WITHOUT_CLASSIFICATION	2.378049534711118E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.999999643675109	WITHOUT_CLASSIFICATION	3.5632489103455536E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999992483023379	WITHOUT_CLASSIFICATION	7.516976620539073E-7	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.999997503655006	WITHOUT_CLASSIFICATION	2.49634499403914E-6	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999983786291123	WITHOUT_CLASSIFICATION	1.621370887717348E-6	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999997343508837	WITHOUT_CLASSIFICATION	2.6564911624433536E-7	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.999990401666001	WITHOUT_CLASSIFICATION	9.59833399907353E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999957802525452	WITHOUT_CLASSIFICATION	4.219747454809411E-6	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999687145847169	WITHOUT_CLASSIFICATION	3.128541528305974E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999949546019942	WITHOUT_CLASSIFICATION	5.045398005854464E-6	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999988761856045	WITHOUT_CLASSIFICATION	1.1238143955000592E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999935599225074	WITHOUT_CLASSIFICATION	6.4400774926570134E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999935599225074	WITHOUT_CLASSIFICATION	6.4400774926570134E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999905060537756	WITHOUT_CLASSIFICATION	9.493946224428608E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999905060537756	WITHOUT_CLASSIFICATION	9.493946224428608E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999913654929853	WITHOUT_CLASSIFICATION	8.634507014780778E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999981368702071	WITHOUT_CLASSIFICATION	1.8631297928948478E-5	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999916658060312	WITHOUT_CLASSIFICATION	8.334193968947365E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999995362847951	WITHOUT_CLASSIFICATION	4.63715204899633E-7	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999924003256572	WITHOUT_CLASSIFICATION	7.599674342868788E-6	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999999667907121	WITHOUT_CLASSIFICATION	3.320928780310578E-8	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999678785991958	WITHOUT_CLASSIFICATION	3.212140080420032E-5	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9999975928797842	WITHOUT_CLASSIFICATION	2.4071202159233315E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999994229735837	WITHOUT_CLASSIFICATION	5.770264163377676E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999812022790009	WITHOUT_CLASSIFICATION	1.8797720999187193E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999489273294	WITHOUT_CLASSIFICATION	5.107267078178694E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999954804121274	WITHOUT_CLASSIFICATION	4.519587872567827E-6	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999998893281044	WITHOUT_CLASSIFICATION	1.1067189570596979E-7	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.999999375608032	WITHOUT_CLASSIFICATION	6.243919679639535E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999940827134535	WITHOUT_CLASSIFICATION	5.9172865465546086E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999827752144035	WITHOUT_CLASSIFICATION	1.722478559649985E-5	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9992428555657608	WITHOUT_CLASSIFICATION	7.571444342391628E-4	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999564582336041	WITHOUT_CLASSIFICATION	4.354176639586585E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999941784113073	WITHOUT_CLASSIFICATION	5.82158869273221E-6	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999982198630146	WITHOUT_CLASSIFICATION	1.7801369853371705E-6	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9997700741701951	WITHOUT_CLASSIFICATION	2.299258298048298E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999988291923553	WITHOUT_CLASSIFICATION	1.1708076447868388E-6	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9992189354997031	WITHOUT_CLASSIFICATION	7.810645002970148E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999986452301167	WITHOUT_CLASSIFICATION	1.3547698832767598E-6	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999986657359168	WITHOUT_CLASSIFICATION	1.3342640831573814E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999678785991958	WITHOUT_CLASSIFICATION	3.212140080420032E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999678785991958	WITHOUT_CLASSIFICATION	3.212140080420032E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994287181663	WITHOUT_CLASSIFICATION	5.71281833738465E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.99999781493513	WITHOUT_CLASSIFICATION	2.1850648700110443E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.99999781493513	WITHOUT_CLASSIFICATION	2.1850648700110443E-6	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999995371347108	WITHOUT_CLASSIFICATION	4.628652892036006E-7	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.8777202211339336	WITHOUT_CLASSIFICATION	0.12227977886606642	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999994163897998	WITHOUT_CLASSIFICATION	5.836102001373783E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999946757628617	WITHOUT_CLASSIFICATION	5.324237138285548E-6	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999826882136	WITHOUT_CLASSIFICATION	1.731178648716839E-8	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9997696264059893	WITHOUT_CLASSIFICATION	2.303735940108071E-4	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9997696264059893	WITHOUT_CLASSIFICATION	2.303735940108071E-4	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999985634609826	WITHOUT_CLASSIFICATION	1.4365390174664374E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999983392093	WITHOUT_CLASSIFICATION	1.6607907335923384E-9	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981071198766	WITHOUT_CLASSIFICATION	1.8928801234385559E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999977777310245	WITHOUT_CLASSIFICATION	2.222268975397912E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999585369960697	WITHOUT_CLASSIFICATION	4.146300393032305E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999997631827771	WITHOUT_CLASSIFICATION	2.36817222937944E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9811639771682564	WITHOUT_CLASSIFICATION	0.01883602283174361	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.999998849329966	WITHOUT_CLASSIFICATION	1.150670034099754E-6	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999998757510039	WITHOUT_CLASSIFICATION	1.242489961803414E-7	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999998017979137	WITHOUT_CLASSIFICATION	1.9820208622111156E-7	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999995244309205	WITHOUT_CLASSIFICATION	4.7556907948482145E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999995056318212	WITHOUT_CLASSIFICATION	4.943681787960532E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999971877215318	WITHOUT_CLASSIFICATION	2.8122784682408585E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999845948119	WITHOUT_CLASSIFICATION	1.5405188058510705E-8	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999996167351254	WITHOUT_CLASSIFICATION	3.832648745952097E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9997987704413751	WITHOUT_CLASSIFICATION	2.012295586249082E-4	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999993733111564	WITHOUT_CLASSIFICATION	6.26688843654056E-7	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999994260726639	WITHOUT_CLASSIFICATION	5.73927336173838E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999944979249	WITHOUT_CLASSIFICATION	5.50207520767376E-9	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999927762201142	WITHOUT_CLASSIFICATION	7.223779885812283E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999793951541892	WITHOUT_CLASSIFICATION	2.060484581079857E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.999999892744928	WITHOUT_CLASSIFICATION	1.0725507201347493E-7	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999957277148852	WITHOUT_CLASSIFICATION	4.2722851147182845E-6	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999885225982	WITHOUT_CLASSIFICATION	1.1477401659261012E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995103591606	WITHOUT_CLASSIFICATION	4.896408394287549E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999943832494718	WITHOUT_CLASSIFICATION	5.616750528270557E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9998492923729102	WITHOUT_CLASSIFICATION	1.507076270897954E-4	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9998492923729102	WITHOUT_CLASSIFICATION	1.507076270897954E-4	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999995201750673	WITHOUT_CLASSIFICATION	4.798249327044166E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999918823457259	WITHOUT_CLASSIFICATION	8.117654274063827E-6	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.999589935094718	WITHOUT_CLASSIFICATION	4.100649052819245E-4	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9993209995179629	WITHOUT_CLASSIFICATION	6.790004820370791E-4	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999988455322942	WITHOUT_CLASSIFICATION	1.1544677057907779E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.999978629305393	WITHOUT_CLASSIFICATION	2.137069460695405E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999997265186473	WITHOUT_CLASSIFICATION	2.734813526527189E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999852327424177	WITHOUT_CLASSIFICATION	1.4767257582264826E-5	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9989781524789579	WITHOUT_CLASSIFICATION	0.001021847521042029	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998671378109465	WITHOUT_CLASSIFICATION	1.3286218905354726E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999959946265867	WITHOUT_CLASSIFICATION	4.005373413298401E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.999959946265867	WITHOUT_CLASSIFICATION	4.005373413298401E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999967689083857	WITHOUT_CLASSIFICATION	3.231091614202876E-6	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999987228116927	WITHOUT_CLASSIFICATION	1.2771883073440168E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999971368779553	WITHOUT_CLASSIFICATION	2.863122044666058E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999971368779553	WITHOUT_CLASSIFICATION	2.863122044666058E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999993173231467	WITHOUT_CLASSIFICATION	6.826768531475965E-7	DEFECT
// open	WITHOUT_CLASSIFICATION	0.999978047051335	WITHOUT_CLASSIFICATION	2.195294866497348E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988561636496	WITHOUT_CLASSIFICATION	1.1438363503812268E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999997585227921	WITHOUT_CLASSIFICATION	2.4147720786848045E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998344503009	WITHOUT_CLASSIFICATION	1.655496990182244E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998344503009	WITHOUT_CLASSIFICATION	1.655496990182244E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999972461846259	WITHOUT_CLASSIFICATION	2.753815374107669E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.999999643675109	WITHOUT_CLASSIFICATION	3.5632489103455536E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.999999643675109	WITHOUT_CLASSIFICATION	3.5632489103455536E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999992483023379	WITHOUT_CLASSIFICATION	7.516976620539073E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999992483023379	WITHOUT_CLASSIFICATION	7.516976620539073E-7	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9988675246073726	WITHOUT_CLASSIFICATION	0.0011324753926273848	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9998113415215604	WITHOUT_CLASSIFICATION	1.886584784396806E-4	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999940731610926	WITHOUT_CLASSIFICATION	5.926838907463849E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999940731610926	WITHOUT_CLASSIFICATION	5.926838907463849E-6	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9998113415215604	WITHOUT_CLASSIFICATION	1.886584784396806E-4	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999971524617475	WITHOUT_CLASSIFICATION	2.8475382525087315E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9988675246073726	WITHOUT_CLASSIFICATION	0.0011324753926273848	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999975196142	WITHOUT_CLASSIFICATION	2.480385813707164E-9	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.99999999276703	WITHOUT_CLASSIFICATION	7.232970100760404E-9	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999953994522	WITHOUT_CLASSIFICATION	4.600547837956042E-9	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999994416807003	WITHOUT_CLASSIFICATION	5.583192996403054E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999918943417357	WITHOUT_CLASSIFICATION	8.105658264246828E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999918943417357	WITHOUT_CLASSIFICATION	8.105658264246828E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999835451060413	WITHOUT_CLASSIFICATION	1.645489395876271E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999835451060413	WITHOUT_CLASSIFICATION	1.645489395876271E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999835451060413	WITHOUT_CLASSIFICATION	1.645489395876271E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999835451060413	WITHOUT_CLASSIFICATION	1.645489395876271E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999615440303269	WITHOUT_CLASSIFICATION	3.8455969673132165E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999968295935795	WITHOUT_CLASSIFICATION	3.1704064204593635E-6	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999968295935795	WITHOUT_CLASSIFICATION	3.1704064204593635E-6	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999857846817205	WITHOUT_CLASSIFICATION	1.4215318279413808E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999794015226897	WITHOUT_CLASSIFICATION	2.0598477310316114E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999794015226897	WITHOUT_CLASSIFICATION	2.0598477310316114E-5	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9996107030782128	WITHOUT_CLASSIFICATION	3.892969217872279E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999794015226897	WITHOUT_CLASSIFICATION	2.0598477310316114E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999995027286954	WITHOUT_CLASSIFICATION	4.972713046286093E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999835451060413	WITHOUT_CLASSIFICATION	1.645489395876271E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999835451060413	WITHOUT_CLASSIFICATION	1.645489395876271E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999962497258541	WITHOUT_CLASSIFICATION	3.750274145928157E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999763661367893	WITHOUT_CLASSIFICATION	2.3633863210756166E-5	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.6908622083364853	WITHOUT_CLASSIFICATION	0.3091377916635148	DEFECT
// todo: not serialized yet	DEFECT	0.9999886767417904	WITHOUT_CLASSIFICATION	1.1323258209677003E-5	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.6203198117908063	DEFECT	0.3796801882091938	WITHOUT_CLASSIFICATION
// TODO: we didn't check the height yet	DEFECT	0.6968717830027938	DEFECT	0.3031282169972063	WITHOUT_CLASSIFICATION
// TODO: we didn't check the height yet	DEFECT	0.6968717830027938	DEFECT	0.3031282169972063	WITHOUT_CLASSIFICATION
// TODO: Check this result...	DEFECT	0.9877878626712682	DEFECT	0.01221213732873181	WITHOUT_CLASSIFICATION
// TODO: Check this result...	DEFECT	0.9877878626712682	DEFECT	0.01221213732873181	WITHOUT_CLASSIFICATION
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9672935716185573	WITHOUT_CLASSIFICATION	0.03270642838144264	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9628069414361453	WITHOUT_CLASSIFICATION	0.03719305856385458	DEFECT
