/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9997410125657458	WITHOUT_CLASSIFICATION	2.5898743425420006E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998354147870832	WITHOUT_CLASSIFICATION	1.6458521291692665E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999821315311209	WITHOUT_CLASSIFICATION	1.786846887908425E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999821315311209	WITHOUT_CLASSIFICATION	1.786846887908425E-5	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9998599781484167	WITHOUT_CLASSIFICATION	1.400218515834249E-4	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999272507034657	WITHOUT_CLASSIFICATION	7.274929653424997E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999977654530061	WITHOUT_CLASSIFICATION	2.2345469938976436E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999863356498024	WITHOUT_CLASSIFICATION	1.3664350197561821E-5	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999777240728365	WITHOUT_CLASSIFICATION	2.2275927163496907E-5	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999389987138182	WITHOUT_CLASSIFICATION	6.100128618176075E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999998106087603	WITHOUT_CLASSIFICATION	1.8939123976501538E-7	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999880492109293	WITHOUT_CLASSIFICATION	1.1950789070663484E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.999994114788286	WITHOUT_CLASSIFICATION	5.88521171396279E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9991395269063533	WITHOUT_CLASSIFICATION	8.604730936467166E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999978469987194	WITHOUT_CLASSIFICATION	2.153001280521359E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999972182411189	WITHOUT_CLASSIFICATION	2.7817588811493345E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999972182411189	WITHOUT_CLASSIFICATION	2.7817588811493345E-6	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999988708275268	WITHOUT_CLASSIFICATION	1.129172473236475E-6	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999860953703282	WITHOUT_CLASSIFICATION	1.3904629671740975E-5	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9999172478167951	WITHOUT_CLASSIFICATION	8.275218320483009E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.999965794573601	WITHOUT_CLASSIFICATION	3.42054263990293E-5	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9998908593039673	WITHOUT_CLASSIFICATION	1.0914069603275723E-4	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999673672293936	WITHOUT_CLASSIFICATION	3.263277060639927E-5	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999777466177064	WITHOUT_CLASSIFICATION	2.2253382293605015E-5	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999786711218732	WITHOUT_CLASSIFICATION	2.1328878126743012E-5	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999965531676234	WITHOUT_CLASSIFICATION	3.446832376600346E-5	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999838881446874	WITHOUT_CLASSIFICATION	1.611185531250176E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999003453591141	WITHOUT_CLASSIFICATION	9.965464088593825E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999956130139929	WITHOUT_CLASSIFICATION	4.386986007093929E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.999958252642281	WITHOUT_CLASSIFICATION	4.17473577189818E-5	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999324666664063	WITHOUT_CLASSIFICATION	6.753333359369584E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999895991249244	WITHOUT_CLASSIFICATION	1.0400875075592577E-5	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999928194113978	WITHOUT_CLASSIFICATION	7.180588602066932E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999065460488364	WITHOUT_CLASSIFICATION	9.345395116345841E-5	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999426012405319	WITHOUT_CLASSIFICATION	5.739875946799264E-5	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999704280320789	WITHOUT_CLASSIFICATION	2.957196792110137E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9997408719392197	WITHOUT_CLASSIFICATION	2.591280607803656E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.999965794573601	WITHOUT_CLASSIFICATION	3.42054263990293E-5	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999495789919625	WITHOUT_CLASSIFICATION	5.0421008037563207E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999924407462938	WITHOUT_CLASSIFICATION	7.559253706215245E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999924407462938	WITHOUT_CLASSIFICATION	7.559253706215245E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999991899837882	WITHOUT_CLASSIFICATION	8.100162117870877E-7	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999956108969533	WITHOUT_CLASSIFICATION	4.389103046715572E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999628627261388	WITHOUT_CLASSIFICATION	3.7137273861144666E-5	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999628627261388	WITHOUT_CLASSIFICATION	3.7137273861144666E-5	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999759406430407	WITHOUT_CLASSIFICATION	2.4059356959313942E-5	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999918822365117	WITHOUT_CLASSIFICATION	8.117763488323833E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999918749271541	WITHOUT_CLASSIFICATION	8.125072845943464E-6	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999709477775603	WITHOUT_CLASSIFICATION	2.9052222439626854E-5	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999767046506259	WITHOUT_CLASSIFICATION	2.3295349373991607E-5	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999890974745062	WITHOUT_CLASSIFICATION	1.0902525493798114E-5	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.999971844526381	WITHOUT_CLASSIFICATION	2.815547361907402E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999890364588667	WITHOUT_CLASSIFICATION	1.0963541133312935E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999890364588667	WITHOUT_CLASSIFICATION	1.0963541133312935E-5	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.999992233208523	WITHOUT_CLASSIFICATION	7.766791476919142E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999974816355501	WITHOUT_CLASSIFICATION	2.5183644497499007E-6	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999893707081917	WITHOUT_CLASSIFICATION	1.0629291808313628E-5	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999893707081917	WITHOUT_CLASSIFICATION	1.0629291808313628E-5	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999993830157672	WITHOUT_CLASSIFICATION	6.169842328656043E-7	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999815495667108	WITHOUT_CLASSIFICATION	1.845043328917571E-5	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9994694358669781	WITHOUT_CLASSIFICATION	5.305641330220038E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9994510309954897	WITHOUT_CLASSIFICATION	5.489690045102404E-4	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999979496722613	WITHOUT_CLASSIFICATION	2.050327738690016E-6	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999460355950957	WITHOUT_CLASSIFICATION	5.396440490443991E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999652993286372	WITHOUT_CLASSIFICATION	3.4700671362812115E-5	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999931063155697	WITHOUT_CLASSIFICATION	6.8936844303556185E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999787641811556	WITHOUT_CLASSIFICATION	2.1235818844297888E-5	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9997691892792333	WITHOUT_CLASSIFICATION	2.3081072076672237E-4	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999846028691046	WITHOUT_CLASSIFICATION	1.5397130895394318E-5	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999224055812312	WITHOUT_CLASSIFICATION	7.75944187686827E-5	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9997749205907408	WITHOUT_CLASSIFICATION	2.2507940925910755E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999742419787704	WITHOUT_CLASSIFICATION	2.5758021229539316E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999805373626266	WITHOUT_CLASSIFICATION	1.9462637373455912E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999805373626266	WITHOUT_CLASSIFICATION	1.9462637373455912E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9994510309954897	WITHOUT_CLASSIFICATION	5.489690045102404E-4	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9994574137155048	WITHOUT_CLASSIFICATION	5.425862844952017E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9994510309954897	WITHOUT_CLASSIFICATION	5.489690045102404E-4	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999295671167305	WITHOUT_CLASSIFICATION	7.043288326950224E-4	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9994574137155048	WITHOUT_CLASSIFICATION	5.425862844952017E-4	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9994104305081536	WITHOUT_CLASSIFICATION	5.89569491846435E-4	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9992460114867512	WITHOUT_CLASSIFICATION	7.539885132489097E-4	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9994822746225519	WITHOUT_CLASSIFICATION	5.177253774481181E-4	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.999999554218036	WITHOUT_CLASSIFICATION	4.457819640582628E-7	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999660655785884	WITHOUT_CLASSIFICATION	3.393442141169802E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999660655785884	WITHOUT_CLASSIFICATION	3.393442141169802E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999660655785884	WITHOUT_CLASSIFICATION	3.393442141169802E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999660655785884	WITHOUT_CLASSIFICATION	3.393442141169802E-5	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999302235313928	WITHOUT_CLASSIFICATION	6.97764686071561E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999859513636629	WITHOUT_CLASSIFICATION	1.4048636337212602E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999859513636629	WITHOUT_CLASSIFICATION	1.4048636337212602E-5	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999577150469503	WITHOUT_CLASSIFICATION	4.228495304968196E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999859513636629	WITHOUT_CLASSIFICATION	1.4048636337212602E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999140562139432	WITHOUT_CLASSIFICATION	8.594378605669582E-5	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.999978171449199	WITHOUT_CLASSIFICATION	2.1828550800997692E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999959090510049	WITHOUT_CLASSIFICATION	4.090948995084121E-6	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999989261899972	WITHOUT_CLASSIFICATION	1.073810002809803E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9998727244524472	WITHOUT_CLASSIFICATION	1.2727554755271548E-4	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999087457238827	WITHOUT_CLASSIFICATION	9.125427611733163E-5	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999574843479365	WITHOUT_CLASSIFICATION	4.2515652063581775E-5	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.999990170582113	WITHOUT_CLASSIFICATION	9.829417886943135E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999867789391831	WITHOUT_CLASSIFICATION	1.322106081704156E-5	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999945908817588	WITHOUT_CLASSIFICATION	5.409118241168588E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999723705159835	WITHOUT_CLASSIFICATION	2.7629484016441943E-5	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999878323458673	WITHOUT_CLASSIFICATION	1.216765413272086E-5	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999728884481899	WITHOUT_CLASSIFICATION	2.711155181011486E-5	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999960786223877	WITHOUT_CLASSIFICATION	3.921377612353654E-6	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999432172545458	WITHOUT_CLASSIFICATION	5.6782745454123464E-5	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999786008777365	WITHOUT_CLASSIFICATION	2.1399122263529155E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9998843014492957	WITHOUT_CLASSIFICATION	1.1569855070426106E-4	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999826743698224	WITHOUT_CLASSIFICATION	1.7325630177657223E-5	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999919743371716	WITHOUT_CLASSIFICATION	8.025662828387253E-6	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999939418305993	WITHOUT_CLASSIFICATION	6.058169400770984E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999872688504717	WITHOUT_CLASSIFICATION	1.2731149528197027E-5	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999976294969147	WITHOUT_CLASSIFICATION	2.3705030852729556E-6	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999578563700746	WITHOUT_CLASSIFICATION	4.214362992540378E-5	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999867789391831	WITHOUT_CLASSIFICATION	1.322106081704156E-5	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999953987512036	WITHOUT_CLASSIFICATION	4.601248796442105E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999684643048811	WITHOUT_CLASSIFICATION	3.1535695119052666E-5	DEFECT
// security	WITHOUT_CLASSIFICATION	0.999981870262042	WITHOUT_CLASSIFICATION	1.8129737957955196E-5	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999643309501531	WITHOUT_CLASSIFICATION	3.56690498468408E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999958483097542	WITHOUT_CLASSIFICATION	4.151690245864963E-6	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.99999824096667	WITHOUT_CLASSIFICATION	1.7590333299919047E-6	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999904822475668	WITHOUT_CLASSIFICATION	9.517752433263547E-6	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999899914655411	WITHOUT_CLASSIFICATION	1.0008534458795735E-5	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999984276924091	WITHOUT_CLASSIFICATION	1.572307591001302E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.99999751453764	WITHOUT_CLASSIFICATION	2.48546235998867E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999984554215321	WITHOUT_CLASSIFICATION	1.5445784678907048E-6	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999981988166214	WITHOUT_CLASSIFICATION	1.801183378590779E-6	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.999996832925844	WITHOUT_CLASSIFICATION	3.1670741559164033E-6	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999952708431109	WITHOUT_CLASSIFICATION	4.729156889071734E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999939501283067	WITHOUT_CLASSIFICATION	6.049871693244616E-6	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999895265379068	WITHOUT_CLASSIFICATION	1.0473462093183934E-5	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999627482552484	WITHOUT_CLASSIFICATION	3.725174475154779E-5	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.999453700828898	WITHOUT_CLASSIFICATION	5.462991711020877E-4	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999727083022364	WITHOUT_CLASSIFICATION	2.729169776357584E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999938689248081	WITHOUT_CLASSIFICATION	6.131075191883898E-6	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999894920861779	WITHOUT_CLASSIFICATION	1.050791382198359E-5	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999966776278076	WITHOUT_CLASSIFICATION	3.3223721922926826E-6	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999889799151207	WITHOUT_CLASSIFICATION	1.1020084879300082E-5	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9999912712234253	WITHOUT_CLASSIFICATION	8.72877657472297E-6	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999951736886339	WITHOUT_CLASSIFICATION	4.826311366078757E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999911248922329	WITHOUT_CLASSIFICATION	8.875107767181576E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999822687279639	WITHOUT_CLASSIFICATION	1.7731272036048768E-5	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999840833715072	WITHOUT_CLASSIFICATION	1.591662849277781E-5	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.999989863656381	WITHOUT_CLASSIFICATION	1.0136343618978922E-5	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999945239931776	WITHOUT_CLASSIFICATION	5.4760068223327325E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999634746047231	WITHOUT_CLASSIFICATION	3.652539527689309E-5	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.999982212185962	WITHOUT_CLASSIFICATION	1.7787814038065282E-5	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999960211555909	WITHOUT_CLASSIFICATION	3.978844409106474E-6	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9996527704150258	WITHOUT_CLASSIFICATION	3.4722958497428505E-4	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999140562139432	WITHOUT_CLASSIFICATION	8.594378605669582E-5	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999990278827366	WITHOUT_CLASSIFICATION	9.721172634060687E-7	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999900195700768	WITHOUT_CLASSIFICATION	9.980429923158571E-6	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999807820280452	WITHOUT_CLASSIFICATION	1.921797195478226E-5	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9998348278914866	WITHOUT_CLASSIFICATION	1.6517210851331432E-4	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.999993344248554	WITHOUT_CLASSIFICATION	6.655751445937268E-6	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9998672266783238	WITHOUT_CLASSIFICATION	1.3277332167621907E-4	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999582049910488	WITHOUT_CLASSIFICATION	4.1795008951185444E-5	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999852636983432	WITHOUT_CLASSIFICATION	1.4736301656783116E-5	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999959018240512	WITHOUT_CLASSIFICATION	4.098175948892042E-6	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999807217093261	WITHOUT_CLASSIFICATION	1.9278290673881067E-5	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999962486831052	WITHOUT_CLASSIFICATION	3.7513168948009807E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9994712681696523	WITHOUT_CLASSIFICATION	5.287318303476633E-4	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9998668789747782	WITHOUT_CLASSIFICATION	1.3312102522170606E-4	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999484078029373	WITHOUT_CLASSIFICATION	5.159219706283272E-5	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999907960332877	WITHOUT_CLASSIFICATION	9.203966712348326E-6	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999823575160849	WITHOUT_CLASSIFICATION	1.764248391508009E-5	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999306064913489	WITHOUT_CLASSIFICATION	6.939350865104808E-5	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999863630643562	WITHOUT_CLASSIFICATION	1.3636935643848966E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999985528690112	WITHOUT_CLASSIFICATION	1.4471309887714379E-6	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999320575421823	WITHOUT_CLASSIFICATION	6.79424578176875E-5	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999962695912902	WITHOUT_CLASSIFICATION	3.73040870984616E-6	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.999996070463533	WITHOUT_CLASSIFICATION	3.929536466958008E-6	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999653695318587	WITHOUT_CLASSIFICATION	3.46304681413868E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.999943587802381	WITHOUT_CLASSIFICATION	5.6412197619017506E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.999943587802381	WITHOUT_CLASSIFICATION	5.6412197619017506E-5	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999666917963633	WITHOUT_CLASSIFICATION	3.330820363666544E-5	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999960354259777	WITHOUT_CLASSIFICATION	3.964574022296049E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999132439292859	WITHOUT_CLASSIFICATION	8.675607071404189E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999132439292859	WITHOUT_CLASSIFICATION	8.675607071404189E-5	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999869669197795	WITHOUT_CLASSIFICATION	1.3033080220455682E-5	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.999985109336709	WITHOUT_CLASSIFICATION	1.4890663291004556E-5	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999477654933572	WITHOUT_CLASSIFICATION	5.223450664285384E-5	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999816909272737	WITHOUT_CLASSIFICATION	1.8309072726216014E-5	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9997244409600179	WITHOUT_CLASSIFICATION	2.7555903998216665E-4	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999653273382381	WITHOUT_CLASSIFICATION	3.467266176188396E-5	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9997527723563571	WITHOUT_CLASSIFICATION	2.472276436428543E-4	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999255420345758	WITHOUT_CLASSIFICATION	7.445796542414328E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999604104307118	WITHOUT_CLASSIFICATION	3.958956928824083E-5	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999689850594089	WITHOUT_CLASSIFICATION	3.101494059111257E-5	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999942475553205	WITHOUT_CLASSIFICATION	5.7524446795051875E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999961566777111	WITHOUT_CLASSIFICATION	3.843322288847526E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999312551697551	WITHOUT_CLASSIFICATION	6.874483024484987E-5	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999863356498024	WITHOUT_CLASSIFICATION	1.3664350197561821E-5	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999777240728365	WITHOUT_CLASSIFICATION	2.2275927163496907E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999805373626266	WITHOUT_CLASSIFICATION	1.9462637373455912E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999312551697551	WITHOUT_CLASSIFICATION	6.874483024484987E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9884418673767372	WITHOUT_CLASSIFICATION	0.0115581326232628	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978992512152	WITHOUT_CLASSIFICATION	2.100748784814114E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978992512152	WITHOUT_CLASSIFICATION	2.100748784814114E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978992512152	WITHOUT_CLASSIFICATION	2.100748784814114E-6	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999619605682273	WITHOUT_CLASSIFICATION	3.803943177276832E-5	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999191664302939	WITHOUT_CLASSIFICATION	8.083356970616273E-5	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999635156884245	WITHOUT_CLASSIFICATION	3.6484311575555787E-5	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.999653328891062	WITHOUT_CLASSIFICATION	3.466711089380534E-4	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9991168053615386	WITHOUT_CLASSIFICATION	8.831946384615381E-4	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999940992318089	WITHOUT_CLASSIFICATION	5.900768191139457E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9884418673767372	WITHOUT_CLASSIFICATION	0.0115581326232628	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999681337465136	WITHOUT_CLASSIFICATION	3.1866253486327756E-5	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9998396286786497	WITHOUT_CLASSIFICATION	1.6037132135025614E-4	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.999994026312553	WITHOUT_CLASSIFICATION	5.9736874470178935E-6	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999301925833641	WITHOUT_CLASSIFICATION	6.9807416635821E-5	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9998856362121114	WITHOUT_CLASSIFICATION	1.1436378788855708E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999805373626266	WITHOUT_CLASSIFICATION	1.9462637373455912E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999805373626266	WITHOUT_CLASSIFICATION	1.9462637373455912E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999604104307118	WITHOUT_CLASSIFICATION	3.958956928824083E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999681337465136	WITHOUT_CLASSIFICATION	3.1866253486327756E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999490601180496	WITHOUT_CLASSIFICATION	5.0939881950405205E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999490601180496	WITHOUT_CLASSIFICATION	5.0939881950405205E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999490601180496	WITHOUT_CLASSIFICATION	5.0939881950405205E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9998068478956776	WITHOUT_CLASSIFICATION	1.93152104322444E-4	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9998068478956776	WITHOUT_CLASSIFICATION	1.93152104322444E-4	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999196604538003	WITHOUT_CLASSIFICATION	8.033954619966521E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999196604538003	WITHOUT_CLASSIFICATION	8.033954619966521E-5	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999391407458021	WITHOUT_CLASSIFICATION	6.0859254197740576E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999579531601871	WITHOUT_CLASSIFICATION	4.2046839812809535E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999579531601871	WITHOUT_CLASSIFICATION	4.2046839812809535E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999692222554696	WITHOUT_CLASSIFICATION	3.077774453046697E-5	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.999994410779751	WITHOUT_CLASSIFICATION	5.589220248921342E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9997990279066021	WITHOUT_CLASSIFICATION	2.0097209339790302E-4	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9998531341093629	WITHOUT_CLASSIFICATION	1.4686589063715104E-4	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9998531341093629	WITHOUT_CLASSIFICATION	1.4686589063715104E-4	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9998885938779398	WITHOUT_CLASSIFICATION	1.114061220601795E-4	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9998885938779398	WITHOUT_CLASSIFICATION	1.114061220601795E-4	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.999879264709606	WITHOUT_CLASSIFICATION	1.2073529039399371E-4	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999828428145533	WITHOUT_CLASSIFICATION	1.7157185446618228E-5	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999174598444369	WITHOUT_CLASSIFICATION	8.254015556311765E-5	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.99989295394246	WITHOUT_CLASSIFICATION	1.0704605753985923E-4	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9998440009184968	WITHOUT_CLASSIFICATION	1.559990815031415E-4	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9997987357623533	WITHOUT_CLASSIFICATION	2.0126423764675827E-4	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999408836988382	WITHOUT_CLASSIFICATION	5.911630116184654E-5	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999940318804041	WITHOUT_CLASSIFICATION	5.968119595851865E-6	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9998910731398928	WITHOUT_CLASSIFICATION	1.089268601072399E-4	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999978867227931	WITHOUT_CLASSIFICATION	2.1132772068049755E-6	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.999973698895582	WITHOUT_CLASSIFICATION	2.6301104417972737E-5	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999874615455531	WITHOUT_CLASSIFICATION	1.2538454446856164E-5	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999870914607489	WITHOUT_CLASSIFICATION	1.2908539251048565E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999917073804351	WITHOUT_CLASSIFICATION	8.292619564895256E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9996482355561069	WITHOUT_CLASSIFICATION	3.5176444389298955E-4	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999971521372929	WITHOUT_CLASSIFICATION	2.8478627071713592E-6	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999975696700188	WITHOUT_CLASSIFICATION	2.4303299811286453E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999917073804351	WITHOUT_CLASSIFICATION	8.292619564895256E-5	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999968801008875	WITHOUT_CLASSIFICATION	3.119899112480405E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999917073804351	WITHOUT_CLASSIFICATION	8.292619564895256E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9996482355561069	WITHOUT_CLASSIFICATION	3.5176444389298955E-4	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999961124343459	WITHOUT_CLASSIFICATION	3.887565654036108E-6	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999934539359201	WITHOUT_CLASSIFICATION	6.546064079902768E-6	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999971131376826	WITHOUT_CLASSIFICATION	2.8868623173461475E-6	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999957105867633	WITHOUT_CLASSIFICATION	4.289413236673228E-6	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999931890589524	WITHOUT_CLASSIFICATION	6.810941047571125E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999385294536854	WITHOUT_CLASSIFICATION	6.147054631457067E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999975516808307	WITHOUT_CLASSIFICATION	2.4483191692299477E-6	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999929031068705	WITHOUT_CLASSIFICATION	7.096893129475948E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999385294536854	WITHOUT_CLASSIFICATION	6.147054631457067E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999385294536854	WITHOUT_CLASSIFICATION	6.147054631457067E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999385294536854	WITHOUT_CLASSIFICATION	6.147054631457067E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999385294536854	WITHOUT_CLASSIFICATION	6.147054631457067E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999796636860375	WITHOUT_CLASSIFICATION	2.033631396245644E-5	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999878167035455	WITHOUT_CLASSIFICATION	1.218329645446271E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999971377419731	WITHOUT_CLASSIFICATION	2.862258026859587E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999971377419731	WITHOUT_CLASSIFICATION	2.862258026859587E-6	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999964221611648	WITHOUT_CLASSIFICATION	3.5778388352416244E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999948860883242	WITHOUT_CLASSIFICATION	5.113911675718452E-6	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.999996502050784	WITHOUT_CLASSIFICATION	3.497949216093791E-6	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999813982789144	WITHOUT_CLASSIFICATION	1.8601721085606695E-5	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999997343085695	WITHOUT_CLASSIFICATION	2.65691430477913E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999773734382638	WITHOUT_CLASSIFICATION	2.2626561736239274E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999773734382638	WITHOUT_CLASSIFICATION	2.2626561736239274E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999773734382638	WITHOUT_CLASSIFICATION	2.2626561736239274E-5	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999994924795427	WITHOUT_CLASSIFICATION	5.075204573969908E-7	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999957285233111	WITHOUT_CLASSIFICATION	4.2714766889321435E-6	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999971560091329	WITHOUT_CLASSIFICATION	2.8439908671901125E-6	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999356066050293	WITHOUT_CLASSIFICATION	6.439339497065596E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999180149811371	WITHOUT_CLASSIFICATION	8.198501886300897E-5	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999617118969112	WITHOUT_CLASSIFICATION	3.828810308885685E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999640365432021	WITHOUT_CLASSIFICATION	3.596345679801312E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999457308026252	WITHOUT_CLASSIFICATION	5.4269197374955415E-5	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999814047179224	WITHOUT_CLASSIFICATION	1.859528207751905E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999913759200469	WITHOUT_CLASSIFICATION	8.624079953049724E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999902619820596	WITHOUT_CLASSIFICATION	9.738017940378999E-6	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999849435414234	WITHOUT_CLASSIFICATION	1.5056458576562785E-5	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999983763058471	WITHOUT_CLASSIFICATION	1.623694153007913E-6	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999953971534905	WITHOUT_CLASSIFICATION	4.602846509549559E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999910559878842	WITHOUT_CLASSIFICATION	8.944012115793062E-5	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999657644722859	WITHOUT_CLASSIFICATION	3.4235527714020146E-5	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999910559878842	WITHOUT_CLASSIFICATION	8.944012115793062E-5	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999882561786945	WITHOUT_CLASSIFICATION	1.1743821305483742E-5	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999205536549505	WITHOUT_CLASSIFICATION	7.944634504953033E-5	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999787971697515	WITHOUT_CLASSIFICATION	2.1202830248542972E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999874567460346	WITHOUT_CLASSIFICATION	1.2543253965437149E-5	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999998328880254	WITHOUT_CLASSIFICATION	1.67111974566212E-7	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999987252090866	WITHOUT_CLASSIFICATION	1.2747909134604454E-6	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999852734072661	WITHOUT_CLASSIFICATION	1.4726592733984834E-5	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999962931920882	WITHOUT_CLASSIFICATION	3.7068079118630917E-6	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.999981047627816	WITHOUT_CLASSIFICATION	1.89523721839466E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999854326101844	WITHOUT_CLASSIFICATION	1.4567389815604207E-5	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999994170355065	WITHOUT_CLASSIFICATION	5.829644935317288E-7	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999946426514627	WITHOUT_CLASSIFICATION	5.357348537325302E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999857561703853	WITHOUT_CLASSIFICATION	1.4243829614627583E-5	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999864600652757	WITHOUT_CLASSIFICATION	1.3539934724185797E-5	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999878421895735	WITHOUT_CLASSIFICATION	1.2157810426586954E-5	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999547885688742	WITHOUT_CLASSIFICATION	4.521143112583386E-5	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999988364165614	WITHOUT_CLASSIFICATION	1.1635834385783207E-6	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999933087580453	WITHOUT_CLASSIFICATION	6.6912419547989544E-6	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.999985824248675	WITHOUT_CLASSIFICATION	1.417575132498753E-5	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999978273699704	WITHOUT_CLASSIFICATION	2.1726300296560085E-6	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999961132103671	WITHOUT_CLASSIFICATION	3.886789632888618E-6	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999754034994229	WITHOUT_CLASSIFICATION	2.4596500576982192E-5	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999909769364494	WITHOUT_CLASSIFICATION	9.023063550601601E-6	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999909769364494	WITHOUT_CLASSIFICATION	9.023063550601601E-6	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999866119860887	WITHOUT_CLASSIFICATION	1.338801391120377E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999866119860887	WITHOUT_CLASSIFICATION	1.338801391120377E-5	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999859176105235	WITHOUT_CLASSIFICATION	1.4082389476641547E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999835605539816	WITHOUT_CLASSIFICATION	1.6439446018346974E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999835605539816	WITHOUT_CLASSIFICATION	1.6439446018346974E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999985292532954	WITHOUT_CLASSIFICATION	1.470746704609043E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999985292532954	WITHOUT_CLASSIFICATION	1.470746704609043E-6	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999385872316203	WITHOUT_CLASSIFICATION	6.141276837965732E-5	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999911041546021	WITHOUT_CLASSIFICATION	8.89584539783161E-6	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999797007801704	WITHOUT_CLASSIFICATION	2.0299219829550915E-5	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999840139410501	WITHOUT_CLASSIFICATION	1.5986058949920025E-5	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999043028260791	WITHOUT_CLASSIFICATION	9.569717392083371E-5	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999603837076725	WITHOUT_CLASSIFICATION	3.9616292327414304E-5	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999562255928257	WITHOUT_CLASSIFICATION	4.377440717430576E-5	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.999875696541053	WITHOUT_CLASSIFICATION	1.2430345894705146E-4	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999980694070069	WITHOUT_CLASSIFICATION	1.9305929930892613E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999821879047115	WITHOUT_CLASSIFICATION	1.781209528850501E-5	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999993440221095	WITHOUT_CLASSIFICATION	6.55977890375585E-7	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999711688779226	WITHOUT_CLASSIFICATION	2.8831122077468684E-5	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999928965244774	WITHOUT_CLASSIFICATION	7.1034755225902445E-6	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999853277553897	WITHOUT_CLASSIFICATION	1.4672244610183086E-5	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999776529749961	WITHOUT_CLASSIFICATION	2.2347025003898215E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9997408719392197	WITHOUT_CLASSIFICATION	2.591280607803656E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999852734072661	WITHOUT_CLASSIFICATION	1.4726592733984834E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999854326101844	WITHOUT_CLASSIFICATION	1.4567389815604207E-5	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999944417039118	WITHOUT_CLASSIFICATION	5.558296088102963E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999995019468391	WITHOUT_CLASSIFICATION	4.980531609071211E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999973660397908	WITHOUT_CLASSIFICATION	2.633960209069789E-6	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999826102890625	WITHOUT_CLASSIFICATION	1.7389710937448017E-5	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.999986294072735	WITHOUT_CLASSIFICATION	1.3705927264963022E-5	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.999995284552145	WITHOUT_CLASSIFICATION	4.7154478549574945E-6	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999958497591291	WITHOUT_CLASSIFICATION	4.150240870832829E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999994973638726	WITHOUT_CLASSIFICATION	5.026361273413427E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999962141422235	WITHOUT_CLASSIFICATION	3.7858577765729426E-6	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999949096907906	WITHOUT_CLASSIFICATION	5.090309209381978E-6	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999968270943925	WITHOUT_CLASSIFICATION	3.1729056075248697E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999709917906624	WITHOUT_CLASSIFICATION	2.9008209337544912E-5	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999836822821088	WITHOUT_CLASSIFICATION	1.6317717891241112E-5	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999836822821088	WITHOUT_CLASSIFICATION	1.6317717891241112E-5	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9999993766565859	WITHOUT_CLASSIFICATION	6.233434142168184E-7	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999954825337894	WITHOUT_CLASSIFICATION	4.517466210561421E-6	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.999938876887492	WITHOUT_CLASSIFICATION	6.112311250810955E-5	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999770623847158	WITHOUT_CLASSIFICATION	2.29376152841464E-5	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9998822258639736	WITHOUT_CLASSIFICATION	1.1777413602637263E-4	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999858895966885	WITHOUT_CLASSIFICATION	1.4110403311499317E-5	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999869495944114	WITHOUT_CLASSIFICATION	1.3050405588607352E-5	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999141096349474	WITHOUT_CLASSIFICATION	8.589036505254911E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9998900432673777	WITHOUT_CLASSIFICATION	1.099567326222882E-4	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.999980385233876	WITHOUT_CLASSIFICATION	1.961476612399525E-5	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999753247265633	WITHOUT_CLASSIFICATION	2.4675273436845134E-5	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9998966144795605	WITHOUT_CLASSIFICATION	1.0338552043954064E-4	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999929913809381	WITHOUT_CLASSIFICATION	7.008619061900269E-6	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999909456737677	WITHOUT_CLASSIFICATION	9.054326232268232E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999860029421798	WITHOUT_CLASSIFICATION	1.3997057820328205E-5	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999387231034608	WITHOUT_CLASSIFICATION	6.127689653922211E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999815841173652	WITHOUT_CLASSIFICATION	1.841588263485847E-5	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999611395983666	WITHOUT_CLASSIFICATION	3.886040163331885E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999003453591141	WITHOUT_CLASSIFICATION	9.965464088593825E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999956130139929	WITHOUT_CLASSIFICATION	4.386986007093929E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.999958252642281	WITHOUT_CLASSIFICATION	4.17473577189818E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.999958252642281	WITHOUT_CLASSIFICATION	4.17473577189818E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999895991249244	WITHOUT_CLASSIFICATION	1.0400875075592577E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999895991249244	WITHOUT_CLASSIFICATION	1.0400875075592577E-5	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999725426020707	WITHOUT_CLASSIFICATION	2.7457397929352892E-5	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999819439256074	WITHOUT_CLASSIFICATION	1.8056074392557833E-5	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999936304039636	WITHOUT_CLASSIFICATION	6.369596036385416E-6	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.999995083805032	WITHOUT_CLASSIFICATION	4.916194967966307E-6	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999722464667974	WITHOUT_CLASSIFICATION	2.775353320259249E-5	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9999293188212949	WITHOUT_CLASSIFICATION	7.068117870520834E-5	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9998479102343709	WITHOUT_CLASSIFICATION	1.520897656290775E-4	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9998777230248134	WITHOUT_CLASSIFICATION	1.2227697518664448E-4	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9998777230248134	WITHOUT_CLASSIFICATION	1.2227697518664448E-4	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.999956465381634	WITHOUT_CLASSIFICATION	4.3534618365909266E-5	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999843381207159	WITHOUT_CLASSIFICATION	1.56618792841496E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999705169244089	WITHOUT_CLASSIFICATION	2.9483075591142638E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999705169244089	WITHOUT_CLASSIFICATION	2.9483075591142638E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999895513330986	WITHOUT_CLASSIFICATION	1.0448666901367347E-5	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999606016706272	WITHOUT_CLASSIFICATION	3.939832937276569E-5	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9998430224734318	WITHOUT_CLASSIFICATION	1.569775265682747E-4	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9996455339238974	WITHOUT_CLASSIFICATION	3.544660761026017E-4	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999103332528085	WITHOUT_CLASSIFICATION	8.966674719136456E-5	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.999982177033653	WITHOUT_CLASSIFICATION	1.7822966346943762E-5	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999315222854178	WITHOUT_CLASSIFICATION	6.84777145821425E-5	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999315222854178	WITHOUT_CLASSIFICATION	6.84777145821425E-5	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999651920645005	WITHOUT_CLASSIFICATION	3.4807935499471285E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9998314691379958	WITHOUT_CLASSIFICATION	1.6853086200414072E-4	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999071273996444	WITHOUT_CLASSIFICATION	9.287260035569483E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999813061397851	WITHOUT_CLASSIFICATION	1.8693860214883248E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999906934223607	WITHOUT_CLASSIFICATION	9.306577639295854E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999981279509814	WITHOUT_CLASSIFICATION	1.872049018574639E-6	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999685315680275	WITHOUT_CLASSIFICATION	3.14684319725237E-5	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999926529158207	WITHOUT_CLASSIFICATION	7.347084179235895E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9998854988407576	WITHOUT_CLASSIFICATION	1.1450115924240734E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9998854988407576	WITHOUT_CLASSIFICATION	1.1450115924240734E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9998854988407576	WITHOUT_CLASSIFICATION	1.1450115924240734E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9998854988407576	WITHOUT_CLASSIFICATION	1.1450115924240734E-4	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999711344848051	WITHOUT_CLASSIFICATION	2.886551519478269E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999990226109602	WITHOUT_CLASSIFICATION	9.77389039846374E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9998819360440492	WITHOUT_CLASSIFICATION	1.180639559508205E-4	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999980189961903	WITHOUT_CLASSIFICATION	1.981003809662955E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999980189961903	WITHOUT_CLASSIFICATION	1.981003809662955E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999845100448	WITHOUT_CLASSIFICATION	1.5489955199951793E-5	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999845100448	WITHOUT_CLASSIFICATION	1.5489955199951793E-5	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999832033478927	WITHOUT_CLASSIFICATION	1.6796652107242452E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999833310349622	WITHOUT_CLASSIFICATION	1.6668965037788894E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9998745600243097	WITHOUT_CLASSIFICATION	1.2543997569027597E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944976586397	WITHOUT_CLASSIFICATION	5.502341360415352E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999927207982432	WITHOUT_CLASSIFICATION	7.279201756780845E-6	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999980367063634	WITHOUT_CLASSIFICATION	1.963293636579328E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999871817458886	WITHOUT_CLASSIFICATION	1.281825411143524E-5	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999570364725197	WITHOUT_CLASSIFICATION	4.296352748033326E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9997310768245476	WITHOUT_CLASSIFICATION	2.689231754523873E-4	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999986037194286	WITHOUT_CLASSIFICATION	1.3962805712884514E-6	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999950549346378	WITHOUT_CLASSIFICATION	4.945065362148855E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999909264642565	WITHOUT_CLASSIFICATION	9.073535743507662E-6	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999998582226489	WITHOUT_CLASSIFICATION	1.4177735111270336E-7	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999974987299556	WITHOUT_CLASSIFICATION	2.5012700443975073E-6	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9997819875086162	WITHOUT_CLASSIFICATION	2.1801249138383581E-4	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999976071627548	WITHOUT_CLASSIFICATION	2.392837245331397E-6	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999933827600745	WITHOUT_CLASSIFICATION	6.617239925502263E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999912452526097	WITHOUT_CLASSIFICATION	8.754747390325118E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999912452526097	WITHOUT_CLASSIFICATION	8.754747390325118E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999912452526097	WITHOUT_CLASSIFICATION	8.754747390325118E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999866119026034	WITHOUT_CLASSIFICATION	1.3388097396655797E-5	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999900722266908	WITHOUT_CLASSIFICATION	9.927773309276738E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999957070756244	WITHOUT_CLASSIFICATION	4.2929243757393785E-6	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999944574642537	WITHOUT_CLASSIFICATION	5.5425357462954796E-6	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999992445923259	WITHOUT_CLASSIFICATION	7.554076741535577E-7	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999963158929457	WITHOUT_CLASSIFICATION	3.6841070543463674E-6	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999362568390798	WITHOUT_CLASSIFICATION	6.374316092016435E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999977644517516	WITHOUT_CLASSIFICATION	2.2355482484169542E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999877138636792	WITHOUT_CLASSIFICATION	1.2286136320715803E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9999512130956313	WITHOUT_CLASSIFICATION	4.878690436865949E-5	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999927983287409	WITHOUT_CLASSIFICATION	7.201671259151116E-6	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9998852100438231	WITHOUT_CLASSIFICATION	1.1478995617674325E-4	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.99999934930068	WITHOUT_CLASSIFICATION	6.506993200808475E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9997993420835953	WITHOUT_CLASSIFICATION	2.006579164046826E-4	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9998832556076328	WITHOUT_CLASSIFICATION	1.1674439236719981E-4	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999981002896478	WITHOUT_CLASSIFICATION	1.8997103522374518E-6	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.999996258565145	WITHOUT_CLASSIFICATION	3.7414348549985632E-6	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999854023425604	WITHOUT_CLASSIFICATION	1.4597657439601868E-5	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999997740352469	WITHOUT_CLASSIFICATION	2.2596475302888224E-7	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999959288064493	WITHOUT_CLASSIFICATION	4.071193550720704E-6	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999707145900923	WITHOUT_CLASSIFICATION	2.9285409907667754E-5	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.999994759409628	WITHOUT_CLASSIFICATION	5.240590371966264E-6	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999979589141165	WITHOUT_CLASSIFICATION	2.041085883556052E-6	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999971671400394	WITHOUT_CLASSIFICATION	2.8328599606112694E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999920074511396	WITHOUT_CLASSIFICATION	7.99254886029161E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999804175748792	WITHOUT_CLASSIFICATION	1.9582425120733368E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999523145390797	WITHOUT_CLASSIFICATION	4.7685460920284485E-5	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999792530745402	WITHOUT_CLASSIFICATION	2.0746925459818413E-5	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9998868881628228	WITHOUT_CLASSIFICATION	1.131118371770989E-4	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999736720214313	WITHOUT_CLASSIFICATION	2.632797856868289E-5	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999710376509565	WITHOUT_CLASSIFICATION	2.8962349043477886E-5	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999223881361011	WITHOUT_CLASSIFICATION	7.761186389888475E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999219931945424	WITHOUT_CLASSIFICATION	7.800680545759529E-5	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999116436127872	WITHOUT_CLASSIFICATION	8.835638721277368E-5	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999949128603459	WITHOUT_CLASSIFICATION	5.087139654082229E-6	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9995877543547821	WITHOUT_CLASSIFICATION	4.1224564521788215E-4	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999636167584113	WITHOUT_CLASSIFICATION	3.63832415888157E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9964844255679353	WITHOUT_CLASSIFICATION	0.0035155744320647373	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.999961281869256	WITHOUT_CLASSIFICATION	3.871813074398417E-5	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999906823044536	WITHOUT_CLASSIFICATION	9.317695546323104E-6	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999968585221992	WITHOUT_CLASSIFICATION	3.141477800698147E-6	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999639308806375	WITHOUT_CLASSIFICATION	3.606911936247391E-5	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999652794537546	WITHOUT_CLASSIFICATION	3.472054624542602E-5	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999101944701222	WITHOUT_CLASSIFICATION	8.980552987772167E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999866653878144	WITHOUT_CLASSIFICATION	1.3334612185499386E-5	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9998368989577857	WITHOUT_CLASSIFICATION	1.6310104221429306E-4	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.999995688783686	WITHOUT_CLASSIFICATION	4.311216313876597E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999979146375275	WITHOUT_CLASSIFICATION	2.0853624725136867E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999883979424607	WITHOUT_CLASSIFICATION	1.1602057539232097E-5	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999894721374892	WITHOUT_CLASSIFICATION	1.0527862510724767E-5	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999930279218905	WITHOUT_CLASSIFICATION	6.97207810952795E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999685941272985	WITHOUT_CLASSIFICATION	3.140587270135436E-5	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999961281149278	WITHOUT_CLASSIFICATION	3.87188507223216E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.999999518037195	WITHOUT_CLASSIFICATION	4.819628049281943E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999924287504481	WITHOUT_CLASSIFICATION	7.571249551807253E-6	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9999802365392932	WITHOUT_CLASSIFICATION	1.976346070683702E-5	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999913299158738	WITHOUT_CLASSIFICATION	8.670084126076143E-6	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999576530586792	WITHOUT_CLASSIFICATION	4.2346941320643345E-5	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999691236386096	WITHOUT_CLASSIFICATION	3.087636139045126E-5	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999864371100707	WITHOUT_CLASSIFICATION	1.3562889929349459E-5	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999828716752398	WITHOUT_CLASSIFICATION	1.71283247601912E-5	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999970460241948	WITHOUT_CLASSIFICATION	2.9539758052254143E-6	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9999903480683159	WITHOUT_CLASSIFICATION	9.651931684079708E-6	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999945789361337	WITHOUT_CLASSIFICATION	5.421063866279865E-6	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9997369690188419	WITHOUT_CLASSIFICATION	2.630309811581704E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999072535672565	WITHOUT_CLASSIFICATION	9.274643274350141E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999460316944252	WITHOUT_CLASSIFICATION	5.396830557480558E-5	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9995116903201358	WITHOUT_CLASSIFICATION	4.883096798641819E-4	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999936892063932	WITHOUT_CLASSIFICATION	6.310793606853082E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999960245564861	WITHOUT_CLASSIFICATION	3.975443513885673E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999889001359702	WITHOUT_CLASSIFICATION	1.1099864029924353E-5	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9998995581603191	WITHOUT_CLASSIFICATION	1.0044183968098309E-4	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999940983862361	WITHOUT_CLASSIFICATION	5.901613763826353E-6	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999993034641297	WITHOUT_CLASSIFICATION	6.965358702943629E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999956814859802	WITHOUT_CLASSIFICATION	4.318514019827788E-6	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999503393647666	WITHOUT_CLASSIFICATION	4.966063523329573E-5	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999706076723153	WITHOUT_CLASSIFICATION	2.9392327684791667E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.998408324577608	WITHOUT_CLASSIFICATION	0.0015916754223921214	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.998408324577608	WITHOUT_CLASSIFICATION	0.0015916754223921214	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.998408324577608	WITHOUT_CLASSIFICATION	0.0015916754223921214	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999923346246574	WITHOUT_CLASSIFICATION	7.665375342613261E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999983142479469	WITHOUT_CLASSIFICATION	1.6857520530164098E-6	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999988967608255	WITHOUT_CLASSIFICATION	1.1032391744833675E-6	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999823162003039	WITHOUT_CLASSIFICATION	1.768379969604763E-5	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999872695155156	WITHOUT_CLASSIFICATION	1.2730484484296836E-5	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999862931635839	WITHOUT_CLASSIFICATION	1.3706836416051183E-5	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999896964326981	WITHOUT_CLASSIFICATION	1.0303567301850201E-5	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999776561476865	WITHOUT_CLASSIFICATION	2.2343852313482676E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999979183001423	WITHOUT_CLASSIFICATION	2.0816998577683937E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999979183001423	WITHOUT_CLASSIFICATION	2.0816998577683937E-6	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.99998257844491	WITHOUT_CLASSIFICATION	1.742155508994382E-5	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999979447986993	WITHOUT_CLASSIFICATION	2.0552013007158837E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999956814859802	WITHOUT_CLASSIFICATION	4.318514019827788E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999990625991436	WITHOUT_CLASSIFICATION	9.374008564506663E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999954247544794	WITHOUT_CLASSIFICATION	4.575245520634745E-6	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9997375743145707	WITHOUT_CLASSIFICATION	2.624256854293133E-4	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9998007936807507	WITHOUT_CLASSIFICATION	1.9920631924921737E-4	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999880734234667	WITHOUT_CLASSIFICATION	1.1926576533185332E-5	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999966963569508	WITHOUT_CLASSIFICATION	3.3036430492493167E-6	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9998239256654343	WITHOUT_CLASSIFICATION	1.76074334565669E-4	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9999657643243894	WITHOUT_CLASSIFICATION	3.423567561052562E-5	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9998956384288048	WITHOUT_CLASSIFICATION	1.0436157119520255E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999584486870768	WITHOUT_CLASSIFICATION	4.155131292310377E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9994936503416039	WITHOUT_CLASSIFICATION	5.063496583961705E-4	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999703332265907	WITHOUT_CLASSIFICATION	2.966677340937818E-5	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9990162642118358	WITHOUT_CLASSIFICATION	9.837357881642163E-4	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999165166282546	WITHOUT_CLASSIFICATION	8.348337174534153E-5	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.999980879274056	WITHOUT_CLASSIFICATION	1.9120725944029417E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999683859795623	WITHOUT_CLASSIFICATION	3.161402043773296E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9994396262832859	WITHOUT_CLASSIFICATION	5.603737167141107E-4	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9996377793755278	WITHOUT_CLASSIFICATION	3.62220624472154E-4	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9996552275908565	WITHOUT_CLASSIFICATION	3.447724091434459E-4	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999963259369422	WITHOUT_CLASSIFICATION	3.6740630578194953E-6	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999966304791319	WITHOUT_CLASSIFICATION	3.3695208681903173E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999986671358719	WITHOUT_CLASSIFICATION	1.3328641280921252E-5	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999773273269822	WITHOUT_CLASSIFICATION	2.2672673017768048E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999209000624879	WITHOUT_CLASSIFICATION	7.909993751214552E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999428096709799	WITHOUT_CLASSIFICATION	5.7190329019965576E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9998273242139218	WITHOUT_CLASSIFICATION	1.7267578607819866E-4	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.99999089634434	WITHOUT_CLASSIFICATION	9.103655659933944E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999958211883629	WITHOUT_CLASSIFICATION	4.178811637022653E-6	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999983440340999	WITHOUT_CLASSIFICATION	1.6559659000260235E-6	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999936360282726	WITHOUT_CLASSIFICATION	6.363971727395168E-6	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.999999164517883	WITHOUT_CLASSIFICATION	8.354821171247092E-7	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9998157548534083	WITHOUT_CLASSIFICATION	1.8424514659171035E-4	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999870521986538	WITHOUT_CLASSIFICATION	1.2947801346235528E-5	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.999995623850778	WITHOUT_CLASSIFICATION	4.376149222057007E-6	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999257155893297	WITHOUT_CLASSIFICATION	7.428441067026792E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999436739343023	WITHOUT_CLASSIFICATION	5.6326065697690576E-5	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.999986052282299	WITHOUT_CLASSIFICATION	1.394771770097114E-5	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999950148909227	WITHOUT_CLASSIFICATION	4.985109077263106E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.999988141594641	WITHOUT_CLASSIFICATION	1.1858405359083033E-5	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999654889380554	WITHOUT_CLASSIFICATION	3.4511061944644356E-5	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999987599287474	WITHOUT_CLASSIFICATION	1.240071252505403E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999902384230525	WITHOUT_CLASSIFICATION	9.761576947528576E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9999987220255184	WITHOUT_CLASSIFICATION	1.2779744816725683E-6	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.999998588877681	WITHOUT_CLASSIFICATION	1.4111223190173605E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999919225627301	WITHOUT_CLASSIFICATION	8.077437269909066E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999983939265916	WITHOUT_CLASSIFICATION	1.6060734083707174E-6	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999924729818142	WITHOUT_CLASSIFICATION	7.527018185869092E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9997943810989085	WITHOUT_CLASSIFICATION	2.056189010915121E-4	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999839116124691	WITHOUT_CLASSIFICATION	1.6088387530822352E-5	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999806177339696	WITHOUT_CLASSIFICATION	1.9382266030439497E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9999459476199177	WITHOUT_CLASSIFICATION	5.405238008235159E-5	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.99990054872893	WITHOUT_CLASSIFICATION	9.94512710700606E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9998950142902935	WITHOUT_CLASSIFICATION	1.0498570970658691E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996637031983736	WITHOUT_CLASSIFICATION	3.3629680162639334E-4	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999735540964327	WITHOUT_CLASSIFICATION	2.64459035672855E-5	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999876488037772	WITHOUT_CLASSIFICATION	1.2351196222770423E-5	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999525883854999	WITHOUT_CLASSIFICATION	4.741161450005107E-5	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999977374350781	WITHOUT_CLASSIFICATION	2.262564921883582E-6	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999996374795663	WITHOUT_CLASSIFICATION	3.6252043363292883E-7	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999910117285764	WITHOUT_CLASSIFICATION	8.98827142350758E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999889691020218	WITHOUT_CLASSIFICATION	1.1030897978251453E-5	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999957923929306	WITHOUT_CLASSIFICATION	4.207607069523065E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9999956968642089	WITHOUT_CLASSIFICATION	4.30313579110602E-6	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9999677105976215	WITHOUT_CLASSIFICATION	3.228940237857849E-5	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999773442022123	WITHOUT_CLASSIFICATION	2.265579778766059E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999979802896067	WITHOUT_CLASSIFICATION	2.019710393308503E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999926081112228	WITHOUT_CLASSIFICATION	7.391888777136833E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9998752667337122	WITHOUT_CLASSIFICATION	1.2473326628788814E-4	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999914272507782	WITHOUT_CLASSIFICATION	8.572749221918708E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9997940402194518	WITHOUT_CLASSIFICATION	2.0595978054813085E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999072535672565	WITHOUT_CLASSIFICATION	9.274643274350141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999926081112228	WITHOUT_CLASSIFICATION	7.391888777136833E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9998752667337122	WITHOUT_CLASSIFICATION	1.2473326628788814E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.999960157609122	WITHOUT_CLASSIFICATION	3.984239087791055E-5	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999980635353839	WITHOUT_CLASSIFICATION	1.9364646160676284E-6	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999819670824207	WITHOUT_CLASSIFICATION	1.8032917579277472E-5	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999963477748635	WITHOUT_CLASSIFICATION	3.6522251365801643E-6	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999838006613706	WITHOUT_CLASSIFICATION	1.61993386293257E-5	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999926401685012	WITHOUT_CLASSIFICATION	7.359831498743111E-6	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999057870123238	WITHOUT_CLASSIFICATION	9.421298767622942E-5	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999029554101021	WITHOUT_CLASSIFICATION	9.704458989784612E-5	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9998945502217687	WITHOUT_CLASSIFICATION	1.0544977823138535E-4	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999334812494902	WITHOUT_CLASSIFICATION	6.651875050975822E-5	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999548879604906	WITHOUT_CLASSIFICATION	4.5112039509358083E-5	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999426888004547	WITHOUT_CLASSIFICATION	5.7311199545481674E-5	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9998696606376265	WITHOUT_CLASSIFICATION	1.3033936237345973E-4	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9998944455231711	WITHOUT_CLASSIFICATION	1.0555447682891262E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9996962515425148	WITHOUT_CLASSIFICATION	3.0374845748517475E-4	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9998854139488239	WITHOUT_CLASSIFICATION	1.1458605117603585E-4	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9997562615839872	WITHOUT_CLASSIFICATION	2.4373841601279782E-4	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9989726038978175	WITHOUT_CLASSIFICATION	0.00102739610218259	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999539763108679	WITHOUT_CLASSIFICATION	4.6023689132059166E-5	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999428516467785	WITHOUT_CLASSIFICATION	5.7148353221404276E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999632636109239	WITHOUT_CLASSIFICATION	3.6736389076156115E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999802464489441	WITHOUT_CLASSIFICATION	1.9753551055876964E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9998571501671314	WITHOUT_CLASSIFICATION	1.4284983286854753E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999936892063932	WITHOUT_CLASSIFICATION	6.310793606853082E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999959244470699	WITHOUT_CLASSIFICATION	4.0755529300611E-6	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999814194138693	WITHOUT_CLASSIFICATION	1.8580586130736467E-5	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999850390723876	WITHOUT_CLASSIFICATION	1.4960927612349133E-5	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9999539415391955	WITHOUT_CLASSIFICATION	4.6058460804497965E-5	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999837126090768	WITHOUT_CLASSIFICATION	1.6287390923199344E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.999889218566798	WITHOUT_CLASSIFICATION	1.1078143320197082E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999680448968352	WITHOUT_CLASSIFICATION	3.195510316474326E-5	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999895315118822	WITHOUT_CLASSIFICATION	1.046848811776559E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9997572136884403	WITHOUT_CLASSIFICATION	2.427863115595837E-4	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999956978897272	WITHOUT_CLASSIFICATION	4.302110272789191E-6	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999914868472857	WITHOUT_CLASSIFICATION	8.513152714302783E-6	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9998174989453403	WITHOUT_CLASSIFICATION	1.8250105465973364E-4	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9998173011457695	WITHOUT_CLASSIFICATION	1.826988542306061E-4	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999735979003123	WITHOUT_CLASSIFICATION	2.6402099687734042E-5	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999654963870582	WITHOUT_CLASSIFICATION	3.450361294181537E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999964789895261	WITHOUT_CLASSIFICATION	3.5210104738481045E-6	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999753648042065	WITHOUT_CLASSIFICATION	2.4635195793588123E-5	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999740088882765	WITHOUT_CLASSIFICATION	2.599111172358362E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999870109594035	WITHOUT_CLASSIFICATION	1.298904059651688E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9998966205851489	WITHOUT_CLASSIFICATION	1.0337941485103501E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998790724537852	WITHOUT_CLASSIFICATION	1.2092754621476838E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999865709684966	WITHOUT_CLASSIFICATION	1.3429031503357565E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999865709684966	WITHOUT_CLASSIFICATION	1.3429031503357565E-5	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999892788138987	WITHOUT_CLASSIFICATION	1.0721186101275411E-5	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999594140330386	WITHOUT_CLASSIFICATION	4.0585966961406804E-5	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999915230456137	WITHOUT_CLASSIFICATION	8.476954386418668E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999966745467924	WITHOUT_CLASSIFICATION	3.325453207599675E-6	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9998695560563294	WITHOUT_CLASSIFICATION	1.304439436705574E-4	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999979885998658	WITHOUT_CLASSIFICATION	2.011400134232043E-6	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999940535521624	WITHOUT_CLASSIFICATION	5.946447837594906E-6	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999951418020238	WITHOUT_CLASSIFICATION	4.858197976189705E-6	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999838345254226	WITHOUT_CLASSIFICATION	1.616547457734114E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999376452277865	WITHOUT_CLASSIFICATION	6.235477221343139E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999987416205275	WITHOUT_CLASSIFICATION	1.2583794725548768E-6	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999981876739765	WITHOUT_CLASSIFICATION	1.8123260234446326E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999972950604155	WITHOUT_CLASSIFICATION	2.704939584597242E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999972950604155	WITHOUT_CLASSIFICATION	2.704939584597242E-6	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999832767191246	WITHOUT_CLASSIFICATION	1.6723280875465985E-5	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999969333766396	WITHOUT_CLASSIFICATION	3.0666233603724463E-6	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999926084758701	WITHOUT_CLASSIFICATION	7.391524129917727E-6	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999784421413972	WITHOUT_CLASSIFICATION	2.155785860274901E-5	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999859926231078	WITHOUT_CLASSIFICATION	1.4007376892291917E-5	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999834028166166	WITHOUT_CLASSIFICATION	1.659718338345969E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999876079436835	WITHOUT_CLASSIFICATION	1.2392056316426309E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9995551534058374	WITHOUT_CLASSIFICATION	4.4484659416244043E-4	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.999837074462619	WITHOUT_CLASSIFICATION	1.6292553738094778E-4	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9998695560563294	WITHOUT_CLASSIFICATION	1.304439436705574E-4	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9998347078493952	WITHOUT_CLASSIFICATION	1.6529215060479907E-4	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999956770846679	WITHOUT_CLASSIFICATION	4.3229153322391274E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.999989599073458	WITHOUT_CLASSIFICATION	1.0400926541949979E-5	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999940868491981	WITHOUT_CLASSIFICATION	5.913150801811954E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.999987602105822	WITHOUT_CLASSIFICATION	1.2397894177975631E-5	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999928792325365	WITHOUT_CLASSIFICATION	7.120767463486302E-6	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999931477306645	WITHOUT_CLASSIFICATION	6.852269335387948E-6	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999936531636503	WITHOUT_CLASSIFICATION	6.346836349680047E-6	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999940727914092	WITHOUT_CLASSIFICATION	5.927208590851483E-6	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999961019668128	WITHOUT_CLASSIFICATION	3.898033187158233E-6	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999980645300638	WITHOUT_CLASSIFICATION	1.9354699361454395E-6	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999986661067788	WITHOUT_CLASSIFICATION	1.3338932212429993E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.999991684178488	WITHOUT_CLASSIFICATION	8.315821511932819E-6	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999867110457107	WITHOUT_CLASSIFICATION	1.3288954289392667E-5	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.999882306977694	WITHOUT_CLASSIFICATION	1.1769302230600256E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999950943327233	WITHOUT_CLASSIFICATION	4.905667276720976E-6	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999598835204753	WITHOUT_CLASSIFICATION	4.0116479524730836E-5	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999920010490968	WITHOUT_CLASSIFICATION	7.998950903255554E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999880698860772	WITHOUT_CLASSIFICATION	1.1930113922713986E-5	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999946711320336	WITHOUT_CLASSIFICATION	5.328867966404999E-6	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999845691836831	WITHOUT_CLASSIFICATION	1.543081631696177E-5	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999929788126671	WITHOUT_CLASSIFICATION	7.02118733284312E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997112240124	WITHOUT_CLASSIFICATION	2.887759874695184E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999998761130406	WITHOUT_CLASSIFICATION	1.2388695940228262E-6	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9994382417358042	WITHOUT_CLASSIFICATION	5.617582641957301E-4	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9998958348988368	WITHOUT_CLASSIFICATION	1.0416510116326092E-4	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.999859485136878	WITHOUT_CLASSIFICATION	1.4051486312204658E-4	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999757322583653	WITHOUT_CLASSIFICATION	2.4267741634701534E-5	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.999846377208205	WITHOUT_CLASSIFICATION	1.536227917950344E-4	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.999961345462369	WITHOUT_CLASSIFICATION	3.8654537631052294E-5	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9991489130391189	WITHOUT_CLASSIFICATION	8.510869608810505E-4	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999751961759569	WITHOUT_CLASSIFICATION	2.4803824043164115E-5	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999918413022258	WITHOUT_CLASSIFICATION	8.158697774145485E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999932273277824	WITHOUT_CLASSIFICATION	6.772672217680983E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999932273277824	WITHOUT_CLASSIFICATION	6.772672217680983E-6	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999128743929314	WITHOUT_CLASSIFICATION	8.712560706855121E-5	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999895769394243	WITHOUT_CLASSIFICATION	1.0423060575794989E-5	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999917817406183	WITHOUT_CLASSIFICATION	8.218259381708139E-6	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999632754556842	WITHOUT_CLASSIFICATION	3.672454431577981E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999977545603497	WITHOUT_CLASSIFICATION	2.2454396503349136E-6	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999147265028385	WITHOUT_CLASSIFICATION	8.527349716143731E-5	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999966012751984	WITHOUT_CLASSIFICATION	3.398724801642792E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999690813462412	WITHOUT_CLASSIFICATION	3.0918653758795E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999811531775297	WITHOUT_CLASSIFICATION	1.8846822470323888E-5	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999905441158194	WITHOUT_CLASSIFICATION	9.455884180593435E-6	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999716527816987	WITHOUT_CLASSIFICATION	2.8347218301374724E-5	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999197300286513	WITHOUT_CLASSIFICATION	8.026997134879044E-5	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999960306466397	WITHOUT_CLASSIFICATION	3.969353360332126E-6	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999858456275333	WITHOUT_CLASSIFICATION	1.4154372466694765E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999751961759569	WITHOUT_CLASSIFICATION	2.4803824043164115E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999977545603497	WITHOUT_CLASSIFICATION	2.2454396503349136E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999398347012106	WITHOUT_CLASSIFICATION	6.0165298789443556E-5	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999894541859647	WITHOUT_CLASSIFICATION	1.0545814035233248E-5	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9998588895459066	WITHOUT_CLASSIFICATION	1.4111045409349212E-4	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999811579202691	WITHOUT_CLASSIFICATION	1.8842079730879017E-5	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999784935906275	WITHOUT_CLASSIFICATION	2.15064093725029E-5	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9998899944162408	WITHOUT_CLASSIFICATION	1.1000558375911605E-4	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.999999024699784	WITHOUT_CLASSIFICATION	9.753002160306896E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999990529085632	WITHOUT_CLASSIFICATION	9.47091436833456E-7	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999878937880388	WITHOUT_CLASSIFICATION	1.210621196119237E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999819891628094	WITHOUT_CLASSIFICATION	1.801083719058427E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999945231499762	WITHOUT_CLASSIFICATION	5.476850023850408E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999971010072461	WITHOUT_CLASSIFICATION	2.898992753825195E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999468605951595	WITHOUT_CLASSIFICATION	5.3139404840527984E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.999843784960179	WITHOUT_CLASSIFICATION	1.562150398209795E-4	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999839248337757	WITHOUT_CLASSIFICATION	1.607516622431937E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9996846808047036	WITHOUT_CLASSIFICATION	3.153191952963295E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999967995099875	WITHOUT_CLASSIFICATION	3.200490012440609E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999949847720185	WITHOUT_CLASSIFICATION	5.01522798140001E-6	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999911948268034	WITHOUT_CLASSIFICATION	8.805173196588134E-6	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999978806437274	WITHOUT_CLASSIFICATION	2.1193562725487293E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999892270340343	WITHOUT_CLASSIFICATION	1.0772965965714363E-5	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999934427398776	WITHOUT_CLASSIFICATION	6.5572601224847255E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999939752155332	WITHOUT_CLASSIFICATION	6.0247844667467736E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999964966275395	WITHOUT_CLASSIFICATION	3.5033724604321095E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999827096209801	WITHOUT_CLASSIFICATION	1.729037901988128E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999997938707145	WITHOUT_CLASSIFICATION	2.0612928549030754E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999929817790038	WITHOUT_CLASSIFICATION	7.0182209962723104E-6	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9985446383213302	WITHOUT_CLASSIFICATION	0.0014553616786697112	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.999988955458655	WITHOUT_CLASSIFICATION	1.1044541344980673E-5	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999749699156006	WITHOUT_CLASSIFICATION	2.503008439936088E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999796478382417	WITHOUT_CLASSIFICATION	2.035216175830687E-5	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999987934948583	WITHOUT_CLASSIFICATION	1.2065051416514538E-6	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999982098339192	WITHOUT_CLASSIFICATION	1.7901660807415767E-6	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999825693782558	WITHOUT_CLASSIFICATION	1.743062174421314E-5	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999900769699499	WITHOUT_CLASSIFICATION	9.923030050062417E-6	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999906895437041	WITHOUT_CLASSIFICATION	9.31045629586414E-6	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.999992685167185	WITHOUT_CLASSIFICATION	7.314832814983038E-6	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999938330493378	WITHOUT_CLASSIFICATION	6.16695066228204E-6	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999944994489355	WITHOUT_CLASSIFICATION	5.5005510645001796E-6	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999348602565524	WITHOUT_CLASSIFICATION	6.513974344764903E-5	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999479094853945	WITHOUT_CLASSIFICATION	5.2090514605459066E-5	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999468117819025	WITHOUT_CLASSIFICATION	5.318821809751473E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999801565453188	WITHOUT_CLASSIFICATION	1.98434546812158E-5	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999821691437963	WITHOUT_CLASSIFICATION	1.783085620374776E-5	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999899836279986	WITHOUT_CLASSIFICATION	1.0016372001255975E-5	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999931647898722	WITHOUT_CLASSIFICATION	6.835210127761098E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999915891775115	WITHOUT_CLASSIFICATION	8.410822488439732E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999649418729228	WITHOUT_CLASSIFICATION	3.5058127077101184E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999978048214841	WITHOUT_CLASSIFICATION	2.1951785158490902E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999928192376011	WITHOUT_CLASSIFICATION	7.1807623988736816E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999635627477528	WITHOUT_CLASSIFICATION	3.643725224712737E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999852867487155	WITHOUT_CLASSIFICATION	1.4713251284701473E-5	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.998070702275383	WITHOUT_CLASSIFICATION	0.0019292977246171106	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999789233606323	WITHOUT_CLASSIFICATION	2.1076639367739775E-5	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.999990737032267	WITHOUT_CLASSIFICATION	9.262967732982857E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999983941761557	WITHOUT_CLASSIFICATION	1.6058238442392826E-6	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999984874039283	WITHOUT_CLASSIFICATION	1.51259607162279E-6	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999986491506184	WITHOUT_CLASSIFICATION	1.3508493816214036E-6	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999935892321665	WITHOUT_CLASSIFICATION	6.410767833593369E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999965312423066	WITHOUT_CLASSIFICATION	3.468757693328046E-6	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999138180354654	WITHOUT_CLASSIFICATION	8.618196453450358E-5	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999986050254233	WITHOUT_CLASSIFICATION	1.3949745768016969E-6	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999935892321665	WITHOUT_CLASSIFICATION	6.410767833593369E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999900587010483	WITHOUT_CLASSIFICATION	9.941298951735105E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.99999691415607	WITHOUT_CLASSIFICATION	3.085843930163638E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999863688334895	WITHOUT_CLASSIFICATION	1.3631166510459758E-5	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999992634437694	WITHOUT_CLASSIFICATION	7.365562304708436E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999922213145777	WITHOUT_CLASSIFICATION	7.778685422302446E-6	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999997255843888	WITHOUT_CLASSIFICATION	2.744156112956203E-7	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.999786125106048	WITHOUT_CLASSIFICATION	2.138748939519754E-4	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999671957005876	WITHOUT_CLASSIFICATION	3.280429941235216E-5	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999832453039628	WITHOUT_CLASSIFICATION	1.6754696037233796E-5	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999254262665217	WITHOUT_CLASSIFICATION	7.457373347832436E-5	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999671171590367	WITHOUT_CLASSIFICATION	3.2882840963283204E-5	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999860760092752	WITHOUT_CLASSIFICATION	1.3923990724698188E-5	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.999956864338507	WITHOUT_CLASSIFICATION	4.3135661493190356E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999927726549143	WITHOUT_CLASSIFICATION	7.227345085705421E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999879826145547	WITHOUT_CLASSIFICATION	1.201738544521861E-5	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999960610818454	WITHOUT_CLASSIFICATION	3.9389181545747806E-6	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.99997237586024	WITHOUT_CLASSIFICATION	2.7624139759968804E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999933834563459	WITHOUT_CLASSIFICATION	6.616543654036977E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997106561854515	WITHOUT_CLASSIFICATION	2.893438145485045E-4	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999676808871764	WITHOUT_CLASSIFICATION	3.2319112823646937E-5	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999912996284593	WITHOUT_CLASSIFICATION	8.700371540675362E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999861348181969	WITHOUT_CLASSIFICATION	1.3865181803134506E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999871642470795	WITHOUT_CLASSIFICATION	1.2835752920587934E-5	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999953867476066	WITHOUT_CLASSIFICATION	4.613252393390219E-6	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999910289583686	WITHOUT_CLASSIFICATION	8.971041631460296E-6	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999936160813664	WITHOUT_CLASSIFICATION	6.383918633570153E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999966274999338	WITHOUT_CLASSIFICATION	3.3725000661840843E-6	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.999991857838967	WITHOUT_CLASSIFICATION	8.142161032898277E-6	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.999998331653508	WITHOUT_CLASSIFICATION	1.668346491976735E-6	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999919070809568	WITHOUT_CLASSIFICATION	8.09291904321797E-6	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9997876374008066	WITHOUT_CLASSIFICATION	2.1236259919347732E-4	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999755593797784	WITHOUT_CLASSIFICATION	2.444062022158801E-5	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.999982226260829	WITHOUT_CLASSIFICATION	1.7773739170947887E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999966274999338	WITHOUT_CLASSIFICATION	3.3725000661840843E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.999983709772612	WITHOUT_CLASSIFICATION	1.6290227388101727E-5	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.999983709772612	WITHOUT_CLASSIFICATION	1.6290227388101727E-5	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999758603786711	WITHOUT_CLASSIFICATION	2.413962132886579E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999966274999338	WITHOUT_CLASSIFICATION	3.3725000661840843E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999966274999338	WITHOUT_CLASSIFICATION	3.3725000661840843E-6	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999762886021777	WITHOUT_CLASSIFICATION	2.371139782225344E-5	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999980420453347	WITHOUT_CLASSIFICATION	1.9579546653744533E-6	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999525102166391	WITHOUT_CLASSIFICATION	4.7489783360956986E-5	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999525102166391	WITHOUT_CLASSIFICATION	4.7489783360956986E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999963304451646	WITHOUT_CLASSIFICATION	3.6695548355615694E-6	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999946480213558	WITHOUT_CLASSIFICATION	5.351978644222377E-6	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999871982735316	WITHOUT_CLASSIFICATION	1.2801726468460207E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997106561854515	WITHOUT_CLASSIFICATION	2.893438145485045E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997106561854515	WITHOUT_CLASSIFICATION	2.893438145485045E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999963304451646	WITHOUT_CLASSIFICATION	3.6695548355615694E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999960364886877	WITHOUT_CLASSIFICATION	3.963511312219048E-6	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999488009603281	WITHOUT_CLASSIFICATION	5.1199039671874945E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999963998584147	WITHOUT_CLASSIFICATION	3.600141585306448E-5	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999935642649808	WITHOUT_CLASSIFICATION	6.435735019310472E-6	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999914858347926	WITHOUT_CLASSIFICATION	8.514165207457567E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999930473138304	WITHOUT_CLASSIFICATION	6.952686169516215E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999727599485166	WITHOUT_CLASSIFICATION	2.7240051483309078E-5	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9998920367387145	WITHOUT_CLASSIFICATION	1.0796326128553308E-4	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999756436627201	WITHOUT_CLASSIFICATION	2.4356337279988852E-5	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999997084464913	WITHOUT_CLASSIFICATION	2.915535087101571E-7	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999753865351608	WITHOUT_CLASSIFICATION	2.461346483925714E-5	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999771915772467	WITHOUT_CLASSIFICATION	2.280842275330213E-5	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999961999983706	WITHOUT_CLASSIFICATION	3.8000016292600246E-6	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999963803110162	WITHOUT_CLASSIFICATION	3.6196889838713824E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999976804398601	WITHOUT_CLASSIFICATION	2.3195601398781196E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999921068772863	WITHOUT_CLASSIFICATION	7.893122713589602E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999277141663794	WITHOUT_CLASSIFICATION	7.22858336206206E-5	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999901230925157	WITHOUT_CLASSIFICATION	9.876907484442633E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999838504342793	WITHOUT_CLASSIFICATION	1.6149565720762273E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999466981237758	WITHOUT_CLASSIFICATION	5.3301876224214805E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999900777795065	WITHOUT_CLASSIFICATION	9.922220493439707E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999910539789573	WITHOUT_CLASSIFICATION	8.946021042680712E-6	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999930415353084	WITHOUT_CLASSIFICATION	6.958464691483809E-6	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9998869432139004	WITHOUT_CLASSIFICATION	1.130567860996281E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999402016040292	WITHOUT_CLASSIFICATION	5.979839597078371E-5	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999838584205957	WITHOUT_CLASSIFICATION	1.6141579404379554E-5	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999739823054167	WITHOUT_CLASSIFICATION	2.6017694583356856E-5	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999241296382341	WITHOUT_CLASSIFICATION	7.587036176591585E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999918789830401	WITHOUT_CLASSIFICATION	8.121016959902247E-6	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999874690325095	WITHOUT_CLASSIFICATION	1.2530967490588151E-5	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9997206778284005	WITHOUT_CLASSIFICATION	2.793221715995377E-4	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9999641260141456	WITHOUT_CLASSIFICATION	3.587398585445813E-5	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999944806686244	WITHOUT_CLASSIFICATION	5.519331375590355E-6	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999082398366871	WITHOUT_CLASSIFICATION	9.176016331292281E-5	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999606917784428	WITHOUT_CLASSIFICATION	3.930822155726685E-5	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999841228469725	WITHOUT_CLASSIFICATION	1.58771530276212E-5	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999961786330839	WITHOUT_CLASSIFICATION	3.821366916141483E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999653699932213	WITHOUT_CLASSIFICATION	3.463000677875202E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999601422189117	WITHOUT_CLASSIFICATION	3.9857781088268725E-5	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9989615778031046	WITHOUT_CLASSIFICATION	0.0010384221968955218	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999086668208128	WITHOUT_CLASSIFICATION	9.13331791871133E-5	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999524098833553	WITHOUT_CLASSIFICATION	4.759011664469495E-5	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999912565242919	WITHOUT_CLASSIFICATION	8.743475708101883E-6	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999749576938896	WITHOUT_CLASSIFICATION	2.5042306110377716E-5	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999869953590506	WITHOUT_CLASSIFICATION	1.3004640949546882E-5	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9991478879207767	WITHOUT_CLASSIFICATION	8.521120792234358E-4	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999262470662409	WITHOUT_CLASSIFICATION	7.375293375901399E-5	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999919768752802	WITHOUT_CLASSIFICATION	8.023124719798441E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999929734758836	WITHOUT_CLASSIFICATION	7.026524116394664E-6	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999980883047295	WITHOUT_CLASSIFICATION	1.9116952704856623E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.999718126283658	WITHOUT_CLASSIFICATION	2.8187371634206247E-4	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.999372721945067	WITHOUT_CLASSIFICATION	6.272780549330094E-4	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999858380088487	WITHOUT_CLASSIFICATION	1.4161991151388953E-5	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.999999305995094	WITHOUT_CLASSIFICATION	6.940049060378738E-7	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.999994063116949	WITHOUT_CLASSIFICATION	5.936883050978606E-6	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999896644726167	WITHOUT_CLASSIFICATION	1.033552738330284E-5	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999916641796645	WITHOUT_CLASSIFICATION	8.335820335416147E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999956121783405	WITHOUT_CLASSIFICATION	4.387821659482842E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.999966241692457	WITHOUT_CLASSIFICATION	3.375830754307737E-5	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999987096126108	WITHOUT_CLASSIFICATION	1.2903873891090604E-6	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.999988859685214	WITHOUT_CLASSIFICATION	1.114031478604389E-5	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999942271874591	WITHOUT_CLASSIFICATION	5.772812540845785E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999751221699406	WITHOUT_CLASSIFICATION	2.4877830059528906E-5	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999956890146169	WITHOUT_CLASSIFICATION	4.310985383205352E-6	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9982376721129262	WITHOUT_CLASSIFICATION	0.0017623278870737879	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999713634705988	WITHOUT_CLASSIFICATION	2.8636529401214457E-5	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999493128028758	WITHOUT_CLASSIFICATION	5.068719712413152E-5	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9996175263958826	WITHOUT_CLASSIFICATION	3.8247360411735096E-4	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999361426002508	WITHOUT_CLASSIFICATION	6.385739974929598E-5	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9636131489798049	WITHOUT_CLASSIFICATION	0.03638685102019502	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999555558682268	WITHOUT_CLASSIFICATION	4.444413177318766E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9998952248182368	WITHOUT_CLASSIFICATION	1.0477518176324009E-4	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999895502440329	WITHOUT_CLASSIFICATION	1.044975596708368E-5	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999911427248567	WITHOUT_CLASSIFICATION	8.857275143409399E-6	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999892376646493	WITHOUT_CLASSIFICATION	1.0762335350679761E-5	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999074684130087	WITHOUT_CLASSIFICATION	9.253158699125255E-5	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999074684130087	WITHOUT_CLASSIFICATION	9.253158699125255E-5	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999918665978335	WITHOUT_CLASSIFICATION	8.13340216658241E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9999683883356967	WITHOUT_CLASSIFICATION	3.1611664303349694E-5	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999985921324588	WITHOUT_CLASSIFICATION	1.4078675411675944E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9998968300708703	WITHOUT_CLASSIFICATION	1.0316992912968888E-4	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.999978767262032	WITHOUT_CLASSIFICATION	2.1232737967964904E-5	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999927162402381	WITHOUT_CLASSIFICATION	7.283759761846321E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9999480073514398	WITHOUT_CLASSIFICATION	5.199264856017337E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999756868773323	WITHOUT_CLASSIFICATION	2.431312266769993E-5	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9999303123392681	WITHOUT_CLASSIFICATION	6.968766073189853E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.999998643696685	WITHOUT_CLASSIFICATION	1.3563033150732579E-6	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999996246508926	WITHOUT_CLASSIFICATION	3.753491073609806E-7	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999984668072731	WITHOUT_CLASSIFICATION	1.5331927268597171E-6	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999986775154401	WITHOUT_CLASSIFICATION	1.322484559856849E-6	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.999990157215174	WITHOUT_CLASSIFICATION	9.842784826050248E-6	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999980136644264	WITHOUT_CLASSIFICATION	1.9863355736210044E-6	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999356292065782	WITHOUT_CLASSIFICATION	6.437079342190215E-5	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999243265906806	WITHOUT_CLASSIFICATION	7.567340931936115E-5	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999927240705003	WITHOUT_CLASSIFICATION	7.275929499648416E-6	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9975191171709928	WITHOUT_CLASSIFICATION	0.002480882829007178	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9995591306632751	WITHOUT_CLASSIFICATION	4.4086933672491307E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9998392102373529	WITHOUT_CLASSIFICATION	1.6078976264703458E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9995402761139783	WITHOUT_CLASSIFICATION	4.597238860215797E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999597539108667	WITHOUT_CLASSIFICATION	4.024608913330419E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999288959804558	WITHOUT_CLASSIFICATION	7.110401954428618E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9998784462591609	WITHOUT_CLASSIFICATION	1.2155374083917619E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.999816076061172	WITHOUT_CLASSIFICATION	1.8392393882805605E-4	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.999958396058501	WITHOUT_CLASSIFICATION	4.1603941498962236E-5	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999434226998205	WITHOUT_CLASSIFICATION	5.65773001795808E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999649114539225	WITHOUT_CLASSIFICATION	3.5088546077414766E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9995591306632751	WITHOUT_CLASSIFICATION	4.4086933672491307E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9995402761139783	WITHOUT_CLASSIFICATION	4.597238860215797E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999048823008041	WITHOUT_CLASSIFICATION	9.511769919583956E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999950723819968	WITHOUT_CLASSIFICATION	4.927618003264441E-6	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9996603774141808	WITHOUT_CLASSIFICATION	3.396225858191032E-4	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9997176199436788	WITHOUT_CLASSIFICATION	2.823800563211251E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999791694456074	WITHOUT_CLASSIFICATION	2.0830554392619823E-5	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999969100550734	WITHOUT_CLASSIFICATION	3.089944926640512E-6	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999963808384379	WITHOUT_CLASSIFICATION	3.619161562154733E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9997042025945271	WITHOUT_CLASSIFICATION	2.95797405472831E-4	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999760855427297	WITHOUT_CLASSIFICATION	2.3914457270429524E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999859918059933	WITHOUT_CLASSIFICATION	1.4008194006765462E-5	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9998586177937437	WITHOUT_CLASSIFICATION	1.413822062563369E-4	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999891493990063	WITHOUT_CLASSIFICATION	1.0850600993663387E-5	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999977601549406	WITHOUT_CLASSIFICATION	2.2398450594193256E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999935164175239	WITHOUT_CLASSIFICATION	6.4835824760576664E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999977154795954	WITHOUT_CLASSIFICATION	2.2845204046808364E-6	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999862021268756	WITHOUT_CLASSIFICATION	1.379787312434514E-5	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9998421275275424	WITHOUT_CLASSIFICATION	1.578724724575119E-4	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9998117173340231	WITHOUT_CLASSIFICATION	1.8828266597694572E-4	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999980042516664	WITHOUT_CLASSIFICATION	1.995748333564068E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999936160813664	WITHOUT_CLASSIFICATION	6.383918633570153E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999817267860067	WITHOUT_CLASSIFICATION	1.8273213993229488E-5	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.999998563642056	WITHOUT_CLASSIFICATION	1.4363579440461928E-6	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999939150063061	WITHOUT_CLASSIFICATION	6.084993693920087E-6	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999750342260798	WITHOUT_CLASSIFICATION	2.4965773920219786E-5	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999964140596861	WITHOUT_CLASSIFICATION	3.585940313973865E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999565300911811	WITHOUT_CLASSIFICATION	4.34699088188574E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.999996813918968	WITHOUT_CLASSIFICATION	3.1860810319882005E-6	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999925569039533	WITHOUT_CLASSIFICATION	7.443096046748257E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999837542836135	WITHOUT_CLASSIFICATION	1.6245716386450586E-5	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.999929455415628	WITHOUT_CLASSIFICATION	7.054458437192481E-5	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999699712821319	WITHOUT_CLASSIFICATION	3.002871786798035E-5	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999803669703972	WITHOUT_CLASSIFICATION	1.9633029602755204E-5	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999662899273576	WITHOUT_CLASSIFICATION	3.371007264247848E-5	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999021005844129	WITHOUT_CLASSIFICATION	9.789941558709015E-5	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999990837367715	WITHOUT_CLASSIFICATION	9.162632284056831E-7	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999953697391321	WITHOUT_CLASSIFICATION	4.6302608678560775E-6	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999978813138497	WITHOUT_CLASSIFICATION	2.118686150343026E-6	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999939414021796	WITHOUT_CLASSIFICATION	6.058597820437648E-6	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999640929980894	WITHOUT_CLASSIFICATION	3.5907001910613154E-5	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999954924879688	WITHOUT_CLASSIFICATION	4.507512031196154E-6	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999153065968244	WITHOUT_CLASSIFICATION	8.469340317558122E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9996333091085701	WITHOUT_CLASSIFICATION	3.6669089142985124E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999959000120249	WITHOUT_CLASSIFICATION	4.099987975105085E-6	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999721432460054	WITHOUT_CLASSIFICATION	2.7856753994618347E-5	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999694205047255	WITHOUT_CLASSIFICATION	3.057949527451054E-5	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.999993629282008	WITHOUT_CLASSIFICATION	6.370717992038142E-6	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999588418184269	WITHOUT_CLASSIFICATION	4.11581815730444E-5	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9998266961508289	WITHOUT_CLASSIFICATION	1.7330384917113773E-4	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999165452480332	WITHOUT_CLASSIFICATION	8.345475196679146E-5	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.999721815628817	WITHOUT_CLASSIFICATION	2.7818437118287903E-4	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999907145891787	WITHOUT_CLASSIFICATION	9.285410821344E-6	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999990078506815	WITHOUT_CLASSIFICATION	9.921493184827283E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999981611183223	WITHOUT_CLASSIFICATION	1.8388816777027392E-6	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999888845887401	WITHOUT_CLASSIFICATION	1.1115411259952858E-5	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999820730764016	WITHOUT_CLASSIFICATION	1.7926923598321972E-5	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999281679264724	WITHOUT_CLASSIFICATION	7.183207352760006E-5	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999674496401226	WITHOUT_CLASSIFICATION	3.255035987731596E-5	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.999969166665401	WITHOUT_CLASSIFICATION	3.0833334598999116E-5	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999866463261556	WITHOUT_CLASSIFICATION	1.3353673844287727E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999933834563459	WITHOUT_CLASSIFICATION	6.616543654036977E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999920328492717	WITHOUT_CLASSIFICATION	7.967150728255796E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999910711573908	WITHOUT_CLASSIFICATION	8.928842609155575E-6	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.999978594374278	WITHOUT_CLASSIFICATION	2.1405625721939197E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.999978594374278	WITHOUT_CLASSIFICATION	2.1405625721939197E-5	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999672809914748	WITHOUT_CLASSIFICATION	3.271900852525427E-5	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999894808867512	WITHOUT_CLASSIFICATION	1.0519113248771069E-5	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.999998907602651	WITHOUT_CLASSIFICATION	1.0923973490301126E-6	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999018455090022	WITHOUT_CLASSIFICATION	9.815449099787873E-5	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999935291762369	WITHOUT_CLASSIFICATION	6.470823763185822E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999963180183868	WITHOUT_CLASSIFICATION	3.681981613110279E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999639319708479	WITHOUT_CLASSIFICATION	3.6068029152109154E-5	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9999973083067321	WITHOUT_CLASSIFICATION	2.6916932679474943E-6	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999066178283804	WITHOUT_CLASSIFICATION	9.338217161963199E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999980604640378	WITHOUT_CLASSIFICATION	1.9395359620681913E-6	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999851036256769	WITHOUT_CLASSIFICATION	1.4896374323163672E-5	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999948324008046	WITHOUT_CLASSIFICATION	5.167599195540475E-6	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999941111520207	WITHOUT_CLASSIFICATION	5.888847979246606E-6	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999806553559849	WITHOUT_CLASSIFICATION	1.934464401511752E-5	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999710817662465	WITHOUT_CLASSIFICATION	2.8918233753533494E-5	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9998511454698782	WITHOUT_CLASSIFICATION	1.4885453012181257E-4	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9998477785170079	WITHOUT_CLASSIFICATION	1.522214829920135E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999614421165012	WITHOUT_CLASSIFICATION	3.855788349882109E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999446946688887	WITHOUT_CLASSIFICATION	5.530533111128282E-5	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999773056921635	WITHOUT_CLASSIFICATION	2.269430783661573E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.999959002773379	WITHOUT_CLASSIFICATION	4.0997226620947445E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999921059029006	WITHOUT_CLASSIFICATION	7.894097099405493E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999854972109062	WITHOUT_CLASSIFICATION	1.450278909385098E-5	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.999997757783356	WITHOUT_CLASSIFICATION	2.24221664398222E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999209000624879	WITHOUT_CLASSIFICATION	7.909993751214552E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999428096709799	WITHOUT_CLASSIFICATION	5.7190329019965576E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999921059029006	WITHOUT_CLASSIFICATION	7.894097099405493E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999768100650847	WITHOUT_CLASSIFICATION	2.3189934915358737E-5	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9998989076860101	WITHOUT_CLASSIFICATION	1.0109231398993502E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999917925915269	WITHOUT_CLASSIFICATION	8.20740847310759E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999754373776566	WITHOUT_CLASSIFICATION	2.456262234344114E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9997786578465764	WITHOUT_CLASSIFICATION	2.213421534237332E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999975416369219	WITHOUT_CLASSIFICATION	2.4583630780996582E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999701951855835	WITHOUT_CLASSIFICATION	2.9804814416411112E-5	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999903892713421	WITHOUT_CLASSIFICATION	9.610728657905824E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999653214595754	WITHOUT_CLASSIFICATION	3.467854042457654E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999872386019635	WITHOUT_CLASSIFICATION	1.2761398036519843E-5	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.999997802494958	WITHOUT_CLASSIFICATION	2.197505042094978E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.999950782395776	WITHOUT_CLASSIFICATION	4.9217604224076466E-5	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999837244891437	WITHOUT_CLASSIFICATION	1.6275510856309457E-5	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999971802939882	WITHOUT_CLASSIFICATION	2.8197060117882626E-6	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.999964303130033	WITHOUT_CLASSIFICATION	3.569686996703044E-5	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999932207021685	WITHOUT_CLASSIFICATION	6.779297831476346E-6	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999733661086255	WITHOUT_CLASSIFICATION	2.6633891374551045E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999973948765896	WITHOUT_CLASSIFICATION	2.605123410512067E-6	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999950738513895	WITHOUT_CLASSIFICATION	4.92614861041836E-6	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999825213085172	WITHOUT_CLASSIFICATION	1.7478691482856476E-5	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999780510747895	WITHOUT_CLASSIFICATION	2.1948925210472347E-5	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999972790237651	WITHOUT_CLASSIFICATION	2.7209762349446195E-6	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999726677670256	WITHOUT_CLASSIFICATION	2.7332232974360122E-5	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999984704473139	WITHOUT_CLASSIFICATION	1.5295526861753998E-6	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999975799386015	WITHOUT_CLASSIFICATION	2.4200613985884303E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999846193057852	WITHOUT_CLASSIFICATION	1.5380694214768758E-5	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999867185293243	WITHOUT_CLASSIFICATION	1.3281470675760584E-5	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9998095473336716	WITHOUT_CLASSIFICATION	1.9045266632852743E-4	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999919568197867	WITHOUT_CLASSIFICATION	8.04318021332085E-6	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999954801551688	WITHOUT_CLASSIFICATION	4.51984483113918E-6	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999487509452772	WITHOUT_CLASSIFICATION	5.124905472271458E-5	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.999963557895816	WITHOUT_CLASSIFICATION	3.644210418387102E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998790724537852	WITHOUT_CLASSIFICATION	1.2092754621476838E-4	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9997786578465764	WITHOUT_CLASSIFICATION	2.213421534237332E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999975416369219	WITHOUT_CLASSIFICATION	2.4583630780996582E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999701951855835	WITHOUT_CLASSIFICATION	2.9804814416411112E-5	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999653214595754	WITHOUT_CLASSIFICATION	3.467854042457654E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999872386019635	WITHOUT_CLASSIFICATION	1.2761398036519843E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9999974342862429	WITHOUT_CLASSIFICATION	2.5657137570750747E-6	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999993041479494	WITHOUT_CLASSIFICATION	6.958520507310375E-7	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999106847466875	WITHOUT_CLASSIFICATION	8.931525331248505E-5	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999068753656493	WITHOUT_CLASSIFICATION	9.31246343507774E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9999972813715623	WITHOUT_CLASSIFICATION	2.718628437716568E-6	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999983592529817	WITHOUT_CLASSIFICATION	1.6407470182299223E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999779886352324	WITHOUT_CLASSIFICATION	2.2011364767730764E-5	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999677801492455	WITHOUT_CLASSIFICATION	3.221985075443607E-5	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999034682345262	WITHOUT_CLASSIFICATION	9.653176547380639E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999842005449378	WITHOUT_CLASSIFICATION	1.5799455062231745E-5	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999604223502242	WITHOUT_CLASSIFICATION	3.957764977576254E-5	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999381588149372	WITHOUT_CLASSIFICATION	6.184118506281763E-5	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.999999827911646	WITHOUT_CLASSIFICATION	1.7208835394907097E-7	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999507607076442	WITHOUT_CLASSIFICATION	4.923929235567394E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999537908487265	WITHOUT_CLASSIFICATION	4.620915127361029E-5	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999516122655447	WITHOUT_CLASSIFICATION	4.8387734455256794E-5	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999968735689266	WITHOUT_CLASSIFICATION	3.1264310733911753E-6	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999967242310122	WITHOUT_CLASSIFICATION	3.2757689879894957E-6	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999826640478658	WITHOUT_CLASSIFICATION	1.7335952134188125E-5	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999742725235888	WITHOUT_CLASSIFICATION	2.572747641105634E-5	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999747924669724	WITHOUT_CLASSIFICATION	2.5207533027615028E-5	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999695560067791	WITHOUT_CLASSIFICATION	3.0443993220945115E-5	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999951290518223	WITHOUT_CLASSIFICATION	4.870948177595549E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.999950934391535	WITHOUT_CLASSIFICATION	4.9065608464975804E-5	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999341183140351	WITHOUT_CLASSIFICATION	6.58816859649553E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999635627477528	WITHOUT_CLASSIFICATION	3.643725224712737E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999565300911811	WITHOUT_CLASSIFICATION	4.34699088188574E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999907145891787	WITHOUT_CLASSIFICATION	9.285410821344E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999872386019635	WITHOUT_CLASSIFICATION	1.2761398036519843E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999982091109696	WITHOUT_CLASSIFICATION	1.790889030453616E-6	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999979663481657	WITHOUT_CLASSIFICATION	2.0336518343755296E-6	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999972424058313	WITHOUT_CLASSIFICATION	2.7575941687415126E-6	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9997093592487141	WITHOUT_CLASSIFICATION	2.9064075128594036E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9997093592487141	WITHOUT_CLASSIFICATION	2.9064075128594036E-4	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999989831536669	WITHOUT_CLASSIFICATION	1.016846333144607E-6	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9998366793571571	WITHOUT_CLASSIFICATION	1.633206428428594E-4	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9998614873622786	WITHOUT_CLASSIFICATION	1.3851263772125022E-4	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999503364460769	WITHOUT_CLASSIFICATION	4.966355392314804E-5	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999636976168368	WITHOUT_CLASSIFICATION	3.630238316324293E-5	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9999182565264	WITHOUT_CLASSIFICATION	8.174347360009E-5	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9997611217435732	WITHOUT_CLASSIFICATION	2.3887825642684448E-4	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9997882416243534	WITHOUT_CLASSIFICATION	2.117583756466189E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998831793711531	WITHOUT_CLASSIFICATION	1.1682062884682106E-4	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999678093858592	WITHOUT_CLASSIFICATION	3.2190614140861594E-5	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999422961337008	WITHOUT_CLASSIFICATION	5.77038662993693E-5	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999784027057401	WITHOUT_CLASSIFICATION	2.1597294259867016E-5	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998740259712053	WITHOUT_CLASSIFICATION	1.2597402879468373E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9999545927908516	WITHOUT_CLASSIFICATION	4.540720914824447E-5	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999919877901067	WITHOUT_CLASSIFICATION	8.012209893218878E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999769294206501	WITHOUT_CLASSIFICATION	2.3070579349906544E-5	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999733883138533	WITHOUT_CLASSIFICATION	2.6611686146763935E-5	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999785246371794	WITHOUT_CLASSIFICATION	2.1475362820673896E-5	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999286286086723	WITHOUT_CLASSIFICATION	7.137139132772205E-5	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999796020865546	WITHOUT_CLASSIFICATION	2.0397913445451133E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999769294206501	WITHOUT_CLASSIFICATION	2.3070579349906544E-5	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999805088792151	WITHOUT_CLASSIFICATION	1.9491120784956916E-5	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993215762739	WITHOUT_CLASSIFICATION	6.78423726153966E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993215762739	WITHOUT_CLASSIFICATION	6.78423726153966E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999785246371794	WITHOUT_CLASSIFICATION	2.1475362820673896E-5	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999741842546747	WITHOUT_CLASSIFICATION	2.581574532533362E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999583308498258	WITHOUT_CLASSIFICATION	4.1669150174239604E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999583308498258	WITHOUT_CLASSIFICATION	4.1669150174239604E-5	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999921003664712	WITHOUT_CLASSIFICATION	7.899633528765278E-6	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999454118660878	WITHOUT_CLASSIFICATION	5.458813391214982E-5	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9995364345404293	WITHOUT_CLASSIFICATION	4.635654595707288E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999336153041622	WITHOUT_CLASSIFICATION	6.638469583778673E-5	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999824062324578	WITHOUT_CLASSIFICATION	1.7593767542207206E-5	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9997671669991213	WITHOUT_CLASSIFICATION	2.3283300087874618E-4	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999908460366326	WITHOUT_CLASSIFICATION	9.153963367469203E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.99997306823778	WITHOUT_CLASSIFICATION	2.693176222004325E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9998857689474219	WITHOUT_CLASSIFICATION	1.1423105257820482E-4	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9998982281941781	WITHOUT_CLASSIFICATION	1.0177180582200291E-4	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9996554727582685	WITHOUT_CLASSIFICATION	3.445272417314605E-4	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999916944905781	WITHOUT_CLASSIFICATION	8.305509421868317E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9999971769956546	WITHOUT_CLASSIFICATION	2.8230043453950874E-6	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9998092945709218	WITHOUT_CLASSIFICATION	1.9070542907808353E-4	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9999662558814056	WITHOUT_CLASSIFICATION	3.374411859429614E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.999996061234493	WITHOUT_CLASSIFICATION	3.93876550695251E-6	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999983771284822	WITHOUT_CLASSIFICATION	1.6228715177648098E-6	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999910347045035	WITHOUT_CLASSIFICATION	8.96529549655229E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9996544151257464	WITHOUT_CLASSIFICATION	3.455848742536581E-4	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999247563657488	WITHOUT_CLASSIFICATION	7.524363425119538E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999219717540647	WITHOUT_CLASSIFICATION	7.802824593530716E-5	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999917262530814	WITHOUT_CLASSIFICATION	8.273746918525466E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9998958159280019	WITHOUT_CLASSIFICATION	1.0418407199804734E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998831793711531	WITHOUT_CLASSIFICATION	1.1682062884682106E-4	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999987301841763	WITHOUT_CLASSIFICATION	1.2698158237017056E-6	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999977540902404	WITHOUT_CLASSIFICATION	2.245909759641539E-6	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.999998287934564	WITHOUT_CLASSIFICATION	1.7120654359393186E-6	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.999987440759432	WITHOUT_CLASSIFICATION	1.2559240567852307E-5	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999923023108861	WITHOUT_CLASSIFICATION	7.697689113892136E-6	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999959922530923	WITHOUT_CLASSIFICATION	4.007746907663866E-6	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999674927253767	WITHOUT_CLASSIFICATION	3.2507274623338026E-5	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999829864996664	WITHOUT_CLASSIFICATION	1.701350033346713E-5	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999833408532764	WITHOUT_CLASSIFICATION	1.665914672358022E-5	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.99999233324041	WITHOUT_CLASSIFICATION	7.666759589901155E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9998079084378984	WITHOUT_CLASSIFICATION	1.9209156210163244E-4	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999778097485978	WITHOUT_CLASSIFICATION	2.2190251402132987E-5	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999529808464119	WITHOUT_CLASSIFICATION	4.7019153588136605E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999263445603489	WITHOUT_CLASSIFICATION	7.36554396512037E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9998856830234715	WITHOUT_CLASSIFICATION	1.1431697652846353E-4	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999914648706434	WITHOUT_CLASSIFICATION	8.535129356598569E-6	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999727100459259	WITHOUT_CLASSIFICATION	2.728995407399515E-5	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9998942296553991	WITHOUT_CLASSIFICATION	1.0577034460086179E-4	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9994188055735296	WITHOUT_CLASSIFICATION	5.811944264704417E-4	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999017620094376	WITHOUT_CLASSIFICATION	9.823799056232051E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999899123804463	WITHOUT_CLASSIFICATION	1.0087619553595017E-5	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9997527910608794	WITHOUT_CLASSIFICATION	2.472089391206148E-4	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999191719519435	WITHOUT_CLASSIFICATION	8.082804805662538E-5	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999947036729191	WITHOUT_CLASSIFICATION	5.2963270810121175E-6	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.999890070381045	WITHOUT_CLASSIFICATION	1.0992961895501574E-4	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999585741165432	WITHOUT_CLASSIFICATION	4.14258834567476E-5	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999933664215049	WITHOUT_CLASSIFICATION	6.6335784951099295E-6	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999619030582457	WITHOUT_CLASSIFICATION	3.809694175430846E-5	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.99999191155317	WITHOUT_CLASSIFICATION	8.088446830021483E-6	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999740334886061	WITHOUT_CLASSIFICATION	2.5966511393892438E-5	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999925829057061	WITHOUT_CLASSIFICATION	7.4170942939062965E-6	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999859015031718	WITHOUT_CLASSIFICATION	1.40984968281696E-5	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9999409803772035	WITHOUT_CLASSIFICATION	5.9019622796511505E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9999237539908665	WITHOUT_CLASSIFICATION	7.624600913353951E-5	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999837958348016	WITHOUT_CLASSIFICATION	1.620416519841878E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999866083609311	WITHOUT_CLASSIFICATION	1.3391639068903053E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998196467549442	WITHOUT_CLASSIFICATION	1.8035324505572816E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998196467549442	WITHOUT_CLASSIFICATION	1.8035324505572816E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999678707948981	WITHOUT_CLASSIFICATION	3.2129205101849414E-5	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999925215953616	WITHOUT_CLASSIFICATION	7.478404638443466E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.999996345694349	WITHOUT_CLASSIFICATION	3.6543056509291404E-6	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9999907946732685	WITHOUT_CLASSIFICATION	9.205326731603354E-6	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999977483116913	WITHOUT_CLASSIFICATION	2.2516883086336386E-6	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999941364743054	WITHOUT_CLASSIFICATION	5.863525694685143E-6	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9997786303381465	WITHOUT_CLASSIFICATION	2.2136966185351087E-4	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.999980918628916	WITHOUT_CLASSIFICATION	1.9081371083950466E-5	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999914802853894	WITHOUT_CLASSIFICATION	8.51971461059224E-6	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999974084537389	WITHOUT_CLASSIFICATION	2.5915462612233576E-6	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999922425621655	WITHOUT_CLASSIFICATION	7.757437834487104E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999980198267845	WITHOUT_CLASSIFICATION	1.980173215438971E-6	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999974697753853	WITHOUT_CLASSIFICATION	2.5302246146881377E-6	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999740671224224	WITHOUT_CLASSIFICATION	2.5932877577623555E-5	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999713754669808	WITHOUT_CLASSIFICATION	2.8624533019199042E-5	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9998503116375621	WITHOUT_CLASSIFICATION	1.4968836243791156E-4	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999971352460868	WITHOUT_CLASSIFICATION	2.864753913152783E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999906675718805	WITHOUT_CLASSIFICATION	9.332428119472136E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999435993078403	WITHOUT_CLASSIFICATION	5.640069215968406E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999969867572764	WITHOUT_CLASSIFICATION	3.0132427235490047E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996637031983736	WITHOUT_CLASSIFICATION	3.3629680162639334E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996637031983736	WITHOUT_CLASSIFICATION	3.3629680162639334E-4	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999990047233952	WITHOUT_CLASSIFICATION	9.952766048392962E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999975628026686	WITHOUT_CLASSIFICATION	2.43719733140818E-6	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999981487543433	WITHOUT_CLASSIFICATION	1.8512456566600656E-6	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999953563506521	WITHOUT_CLASSIFICATION	4.643649347891685E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999963797029348	WITHOUT_CLASSIFICATION	3.6202970653258643E-6	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999682322170286	WITHOUT_CLASSIFICATION	3.176778297139101E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999494133330975	WITHOUT_CLASSIFICATION	5.0586666902585645E-5	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9986453749286873	WITHOUT_CLASSIFICATION	0.0013546250713126035	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9998360319804339	WITHOUT_CLASSIFICATION	1.6396801956611922E-4	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9959883450505856	WITHOUT_CLASSIFICATION	0.0040116549494143595	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999563991965882	WITHOUT_CLASSIFICATION	4.360080341177483E-5	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9990328544401397	WITHOUT_CLASSIFICATION	9.671455598604529E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999273036358295	WITHOUT_CLASSIFICATION	7.2696364170474E-5	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999957258585105	WITHOUT_CLASSIFICATION	4.274141489484918E-6	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.999997361827263	WITHOUT_CLASSIFICATION	2.6381727370602445E-6	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999566878293421	WITHOUT_CLASSIFICATION	4.3312170657923924E-5	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999545636578101	WITHOUT_CLASSIFICATION	4.543634219001505E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9995209099491201	WITHOUT_CLASSIFICATION	4.7909005087978064E-4	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999582023855597	WITHOUT_CLASSIFICATION	4.1797614440437345E-5	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9997002544269153	WITHOUT_CLASSIFICATION	2.9974557308466704E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999466981237758	WITHOUT_CLASSIFICATION	5.3301876224214805E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999950723819968	WITHOUT_CLASSIFICATION	4.927618003264441E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.999843263878407	WITHOUT_CLASSIFICATION	1.5673612159293612E-4	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999917182104867	WITHOUT_CLASSIFICATION	8.281789513168202E-6	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999816638129257	WITHOUT_CLASSIFICATION	1.8336187074218196E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999991878143115	WITHOUT_CLASSIFICATION	8.121856884677018E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999803652969793	WITHOUT_CLASSIFICATION	1.9634703020766058E-5	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999756352122866	WITHOUT_CLASSIFICATION	2.436478771344318E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999948732271661	WITHOUT_CLASSIFICATION	5.126772833857272E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999863501813859	WITHOUT_CLASSIFICATION	1.3649818614110959E-5	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9998395707269486	WITHOUT_CLASSIFICATION	1.604292730514772E-4	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999895793358426	WITHOUT_CLASSIFICATION	1.0420664157274318E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999122549905862	WITHOUT_CLASSIFICATION	8.7745009413824E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999122549905862	WITHOUT_CLASSIFICATION	8.7745009413824E-5	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9999454654891179	WITHOUT_CLASSIFICATION	5.453451088200442E-5	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9996341801009674	WITHOUT_CLASSIFICATION	3.6581989903260745E-4	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999977628787025	WITHOUT_CLASSIFICATION	2.2371212975704714E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999925238609215	WITHOUT_CLASSIFICATION	7.476139078368837E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999573102444584	WITHOUT_CLASSIFICATION	4.268975554158052E-5	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999769444994009	WITHOUT_CLASSIFICATION	2.305550059917314E-5	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999400271192282	WITHOUT_CLASSIFICATION	5.997288077174915E-5	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999228712636106	WITHOUT_CLASSIFICATION	7.712873638942639E-5	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999988402939246	WITHOUT_CLASSIFICATION	1.1597060754249255E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999700923153368	WITHOUT_CLASSIFICATION	2.9907684663126964E-5	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.999987358216854	WITHOUT_CLASSIFICATION	1.2641783146032383E-5	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999517127704027	WITHOUT_CLASSIFICATION	4.8287229597226506E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.99996821453225	WITHOUT_CLASSIFICATION	3.178546775000101E-5	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999991698091031	WITHOUT_CLASSIFICATION	8.301908968449883E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999706703139661	WITHOUT_CLASSIFICATION	2.9329686033785742E-5	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999787992081768	WITHOUT_CLASSIFICATION	2.12007918232118E-5	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9993470350416365	WITHOUT_CLASSIFICATION	6.529649583635106E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9992463911821221	WITHOUT_CLASSIFICATION	7.536088178779471E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999852867487155	WITHOUT_CLASSIFICATION	1.4713251284701473E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999649418729228	WITHOUT_CLASSIFICATION	3.5058127077101184E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998831793711531	WITHOUT_CLASSIFICATION	1.1682062884682106E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999986818733805	WITHOUT_CLASSIFICATION	1.3181266194780826E-6	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9995904895822199	WITHOUT_CLASSIFICATION	4.0951041778019583E-4	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999943611635882	WITHOUT_CLASSIFICATION	5.6388364118609516E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9993840556238959	WITHOUT_CLASSIFICATION	6.159443761041562E-4	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999973717089055	WITHOUT_CLASSIFICATION	2.628291094544786E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999859204256919	WITHOUT_CLASSIFICATION	1.4079574308104596E-5	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999882662464312	WITHOUT_CLASSIFICATION	1.1733753568754957E-5	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999854997584567	WITHOUT_CLASSIFICATION	1.4500241543239244E-5	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999575393696545	WITHOUT_CLASSIFICATION	4.246063034548305E-5	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999946214422489	WITHOUT_CLASSIFICATION	5.37855775106505E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999978231903154	WITHOUT_CLASSIFICATION	2.176809684586963E-6	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9996155023843026	WITHOUT_CLASSIFICATION	3.8449761569740807E-4	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999943016568664	WITHOUT_CLASSIFICATION	5.6983431335803995E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9977275632665413	WITHOUT_CLASSIFICATION	0.0022724367334586017	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999978847151287	WITHOUT_CLASSIFICATION	2.115284871263769E-6	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999979249049412	WITHOUT_CLASSIFICATION	2.0750950588101242E-6	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.999997975371736	WITHOUT_CLASSIFICATION	2.0246282640737818E-6	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999978138559723	WITHOUT_CLASSIFICATION	2.1861440276389096E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999872386019635	WITHOUT_CLASSIFICATION	1.2761398036519843E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9998512754966825	WITHOUT_CLASSIFICATION	1.4872450331740008E-4	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999635554306199	WITHOUT_CLASSIFICATION	3.6444569380128826E-5	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9983826228056675	WITHOUT_CLASSIFICATION	0.0016173771943325831	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9996304851723395	WITHOUT_CLASSIFICATION	3.6951482766049194E-4	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999938529696792	WITHOUT_CLASSIFICATION	6.147030320685532E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999992569881826	WITHOUT_CLASSIFICATION	7.430118173310467E-7	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999811201238548	WITHOUT_CLASSIFICATION	1.8879876145283247E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999858733486107	WITHOUT_CLASSIFICATION	1.4126651389331493E-5	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.999980238428974	WITHOUT_CLASSIFICATION	1.9761571025952403E-5	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9998687626004146	WITHOUT_CLASSIFICATION	1.3123739958549382E-4	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.999957885316595	WITHOUT_CLASSIFICATION	4.211468340506204E-5	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999956755941478	WITHOUT_CLASSIFICATION	4.324405852170075E-6	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999792330957152	WITHOUT_CLASSIFICATION	2.0766904284697613E-5	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999843687952021	WITHOUT_CLASSIFICATION	1.5631204797815367E-5	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999823617003585	WITHOUT_CLASSIFICATION	1.7638299641512638E-5	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999989464747765	WITHOUT_CLASSIFICATION	1.053525223454174E-6	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999950918679262	WITHOUT_CLASSIFICATION	4.908132073803047E-6	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999954702178286	WITHOUT_CLASSIFICATION	4.529782171448529E-6	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999892070232229	WITHOUT_CLASSIFICATION	1.07929767770415E-5	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999940330010864	WITHOUT_CLASSIFICATION	5.9669989136952815E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999940330010864	WITHOUT_CLASSIFICATION	5.9669989136952815E-6	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999751730458527	WITHOUT_CLASSIFICATION	2.4826954147267583E-5	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9990351723241092	WITHOUT_CLASSIFICATION	9.648276758907403E-4	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9996718743199394	WITHOUT_CLASSIFICATION	3.2812568006056534E-4	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999970556245504	WITHOUT_CLASSIFICATION	2.944375449592431E-6	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999907218431735	WITHOUT_CLASSIFICATION	9.278156826584383E-6	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999606187577254	WITHOUT_CLASSIFICATION	3.938124227459314E-5	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9992763513462883	WITHOUT_CLASSIFICATION	7.2364865371166E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999697687400528	WITHOUT_CLASSIFICATION	3.0231259947147252E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999697687400528	WITHOUT_CLASSIFICATION	3.0231259947147252E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999987346168095	WITHOUT_CLASSIFICATION	1.2653831904445553E-6	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999901869668436	WITHOUT_CLASSIFICATION	9.813033156431787E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999725745020845	WITHOUT_CLASSIFICATION	2.7425497915459923E-5	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.999988260061814	WITHOUT_CLASSIFICATION	1.1739938185948535E-5	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.999946513130025	WITHOUT_CLASSIFICATION	5.348686997491935E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999951086028797	WITHOUT_CLASSIFICATION	4.891397120368617E-6	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999950751292681	WITHOUT_CLASSIFICATION	4.9248707319794656E-6	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999238059184149	WITHOUT_CLASSIFICATION	7.61940815850365E-5	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999674615765227	WITHOUT_CLASSIFICATION	3.253842347732635E-5	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999979714458165	WITHOUT_CLASSIFICATION	2.0285541835261674E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999929738721567	WITHOUT_CLASSIFICATION	7.026127843319457E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999815699305216	WITHOUT_CLASSIFICATION	1.8430069478383782E-5	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.999994920668716	WITHOUT_CLASSIFICATION	5.079331283937306E-6	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999379415760965	WITHOUT_CLASSIFICATION	6.205842390356188E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999973324766313	WITHOUT_CLASSIFICATION	2.66752336881167E-6	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999060395865699	WITHOUT_CLASSIFICATION	9.396041343004325E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999763265035113	WITHOUT_CLASSIFICATION	2.367349648878564E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999026713226037	WITHOUT_CLASSIFICATION	9.732867739632641E-5	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999843632065893	WITHOUT_CLASSIFICATION	1.563679341062337E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.999996506651987	WITHOUT_CLASSIFICATION	3.4933480129630334E-6	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999180863980123	WITHOUT_CLASSIFICATION	8.191360198773818E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999492282558747	WITHOUT_CLASSIFICATION	5.0771744125327585E-5	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9998950906564602	WITHOUT_CLASSIFICATION	1.0490934353978822E-4	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999777042496828	WITHOUT_CLASSIFICATION	2.2295750317210597E-5	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999819173927879	WITHOUT_CLASSIFICATION	1.8082607212202317E-5	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999433281186861	WITHOUT_CLASSIFICATION	5.66718813137846E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999963348193186	WITHOUT_CLASSIFICATION	3.6651806813288535E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999922253646767	WITHOUT_CLASSIFICATION	7.774635323259358E-6	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999996936522425	WITHOUT_CLASSIFICATION	3.063477575049654E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999983636912914	WITHOUT_CLASSIFICATION	1.6363087086257028E-6	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9998971693017212	WITHOUT_CLASSIFICATION	1.0283069827878304E-4	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999232283232942	WITHOUT_CLASSIFICATION	7.67716767058143E-5	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9999905798279666	WITHOUT_CLASSIFICATION	9.420172033391025E-6	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999974549473712	WITHOUT_CLASSIFICATION	2.5450526287483757E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.999998168899697	WITHOUT_CLASSIFICATION	1.8311003031518252E-6	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999789574684632	WITHOUT_CLASSIFICATION	2.1042531536769748E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999372146061699	WITHOUT_CLASSIFICATION	6.278539383010788E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999858437931131	WITHOUT_CLASSIFICATION	1.4156206886914113E-5	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999771951242019	WITHOUT_CLASSIFICATION	2.2804875798000823E-5	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999694045563821	WITHOUT_CLASSIFICATION	3.0595443617933804E-5	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999173153429143	WITHOUT_CLASSIFICATION	8.268465708563954E-5	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999936643550865	WITHOUT_CLASSIFICATION	6.335644913399785E-6	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.999978682050491	WITHOUT_CLASSIFICATION	2.1317949508929814E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999930882516298	WITHOUT_CLASSIFICATION	6.911748370238504E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999842460876971	WITHOUT_CLASSIFICATION	1.575391230288087E-5	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9998944866773478	WITHOUT_CLASSIFICATION	1.0551332265219559E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999853522720435	WITHOUT_CLASSIFICATION	1.4647727956520171E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999950723819968	WITHOUT_CLASSIFICATION	4.927618003264441E-6	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999853522720435	WITHOUT_CLASSIFICATION	1.4647727956520171E-5	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999976401980926	WITHOUT_CLASSIFICATION	2.3598019074330173E-6	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999741592108496	WITHOUT_CLASSIFICATION	2.5840789150342373E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999976428650519	WITHOUT_CLASSIFICATION	2.357134948135598E-6	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.999984953688424	WITHOUT_CLASSIFICATION	1.5046311575958057E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9999675231258712	WITHOUT_CLASSIFICATION	3.247687412884544E-5	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9999220245892929	WITHOUT_CLASSIFICATION	7.797541070708538E-5	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.99999607738557	WITHOUT_CLASSIFICATION	3.9226144300287385E-6	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999551239736245	WITHOUT_CLASSIFICATION	4.487602637541752E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999935420827515	WITHOUT_CLASSIFICATION	6.4579172485140485E-6	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999993189228741	WITHOUT_CLASSIFICATION	6.810771259263172E-7	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999922074860529	WITHOUT_CLASSIFICATION	7.792513947157745E-6	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999949440542446	WITHOUT_CLASSIFICATION	5.055945755315E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.999983019245691	WITHOUT_CLASSIFICATION	1.6980754308974908E-5	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999797982969552	WITHOUT_CLASSIFICATION	2.0201703044760028E-5	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999863832987664	WITHOUT_CLASSIFICATION	1.3616701233552256E-5	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999408554858946	WITHOUT_CLASSIFICATION	5.914451410545131E-5	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9998247903882493	WITHOUT_CLASSIFICATION	1.7520961175070802E-4	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999085504395882	WITHOUT_CLASSIFICATION	9.14495604118925E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9998864719281378	WITHOUT_CLASSIFICATION	1.1352807186220278E-4	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999784493483487	WITHOUT_CLASSIFICATION	2.1550651651345493E-5	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999587068367437	WITHOUT_CLASSIFICATION	4.12931632562386E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999983362606633	WITHOUT_CLASSIFICATION	1.663739336787256E-6	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999923958725605	WITHOUT_CLASSIFICATION	7.604127439496216E-6	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.999996068425901	WITHOUT_CLASSIFICATION	3.931574098924767E-6	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999985897647924	WITHOUT_CLASSIFICATION	1.410235207641664E-6	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999032686104236	WITHOUT_CLASSIFICATION	9.673138957634885E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9999901051976876	WITHOUT_CLASSIFICATION	9.894802312353224E-6	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999898751236798	WITHOUT_CLASSIFICATION	1.0124876320315026E-5	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9998853584377404	WITHOUT_CLASSIFICATION	1.1464156225960655E-4	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9991566565756996	WITHOUT_CLASSIFICATION	8.433434243002684E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999133606047681	WITHOUT_CLASSIFICATION	8.663939523181514E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999377608364992	WITHOUT_CLASSIFICATION	6.223916350083628E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9999070248416687	WITHOUT_CLASSIFICATION	9.297515833132099E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999934323271191	WITHOUT_CLASSIFICATION	6.567672880806076E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.999990922877241	WITHOUT_CLASSIFICATION	9.077122759079474E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999998479380894	WITHOUT_CLASSIFICATION	1.5206191074556316E-7	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999928573108221	WITHOUT_CLASSIFICATION	7.142689177945928E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999959908622503	WITHOUT_CLASSIFICATION	4.00913774972188E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999959908622503	WITHOUT_CLASSIFICATION	4.00913774972188E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999548544709286	WITHOUT_CLASSIFICATION	4.5145529071339516E-5	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999941216470691	WITHOUT_CLASSIFICATION	5.878352930863867E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999356923548516	WITHOUT_CLASSIFICATION	6.430764514841544E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999986096369546	WITHOUT_CLASSIFICATION	1.3903630454127242E-6	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999993645333815	WITHOUT_CLASSIFICATION	6.354666185058347E-6	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999957074386282	WITHOUT_CLASSIFICATION	4.2925613717559345E-6	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999357436488466	WITHOUT_CLASSIFICATION	6.425635115340902E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999987977182826	WITHOUT_CLASSIFICATION	1.2022817173881666E-6	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9998919301029734	WITHOUT_CLASSIFICATION	1.0806989702663231E-4	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999749038081575	WITHOUT_CLASSIFICATION	2.5096191842521698E-5	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9999384938990491	WITHOUT_CLASSIFICATION	6.150610095090255E-5	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9997524355782962	WITHOUT_CLASSIFICATION	2.47564421703785E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9998439295422652	WITHOUT_CLASSIFICATION	1.5607045773486332E-4	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9999474444346285	WITHOUT_CLASSIFICATION	5.255556537145044E-5	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999865147725323	WITHOUT_CLASSIFICATION	1.348522746768927E-5	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9997565129318573	WITHOUT_CLASSIFICATION	2.4348706814281045E-4	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999910942951321	WITHOUT_CLASSIFICATION	8.9057048679284E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999846077928949	WITHOUT_CLASSIFICATION	1.5392207105155356E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999896727904687	WITHOUT_CLASSIFICATION	1.0327209531326183E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999963998584147	WITHOUT_CLASSIFICATION	3.600141585306448E-5	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9998589473022782	WITHOUT_CLASSIFICATION	1.410526977218879E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999791694456074	WITHOUT_CLASSIFICATION	2.0830554392619823E-5	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9999746979734838	WITHOUT_CLASSIFICATION	2.5302026516173954E-5	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9990397531069528	WITHOUT_CLASSIFICATION	9.602468930471698E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9999829422269094	WITHOUT_CLASSIFICATION	1.7057773090520003E-5	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9997324199043082	WITHOUT_CLASSIFICATION	2.675800956918682E-4	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.999981442514647	WITHOUT_CLASSIFICATION	1.8557485353001152E-5	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999497931271631	WITHOUT_CLASSIFICATION	5.020687283681005E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9998779284673609	WITHOUT_CLASSIFICATION	1.2207153263899358E-4	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999368210904478	WITHOUT_CLASSIFICATION	6.317890955220044E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9998316273801822	WITHOUT_CLASSIFICATION	1.6837261981784168E-4	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.999911103792799	WITHOUT_CLASSIFICATION	8.889620720106118E-5	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999821492331067	WITHOUT_CLASSIFICATION	1.7850766893275497E-5	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999720209594573	WITHOUT_CLASSIFICATION	2.7979040542636445E-5	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999447473115319	WITHOUT_CLASSIFICATION	5.52526884680498E-5	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999233002501782	WITHOUT_CLASSIFICATION	7.669974982182817E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9997054353552876	WITHOUT_CLASSIFICATION	2.945646447123828E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9997054353552876	WITHOUT_CLASSIFICATION	2.945646447123828E-4	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.999508282031302	WITHOUT_CLASSIFICATION	4.91717968697847E-4	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999884335931175	WITHOUT_CLASSIFICATION	1.1566406882449415E-5	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999889899967801	WITHOUT_CLASSIFICATION	1.1010003219893081E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999945438042216	WITHOUT_CLASSIFICATION	5.4561957784762994E-6	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999857914598176	WITHOUT_CLASSIFICATION	1.4208540182541188E-5	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.999843976030213	WITHOUT_CLASSIFICATION	1.5602396978698044E-4	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9997941890950879	WITHOUT_CLASSIFICATION	2.0581090491218583E-4	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999941988525477	WITHOUT_CLASSIFICATION	5.801147452276808E-6	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999375041938267	WITHOUT_CLASSIFICATION	6.249580617341687E-5	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999916065034337	WITHOUT_CLASSIFICATION	8.39349656638092E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999927152458931	WITHOUT_CLASSIFICATION	7.28475410696167E-6	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.999982250070447	WITHOUT_CLASSIFICATION	1.774992955293775E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999425947289696	WITHOUT_CLASSIFICATION	5.74052710303089E-5	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999772864348561	WITHOUT_CLASSIFICATION	2.2713565143925985E-5	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999518404723132	WITHOUT_CLASSIFICATION	4.815952768678679E-5	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999780975248924	WITHOUT_CLASSIFICATION	2.1902475107577254E-5	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9997566308392232	WITHOUT_CLASSIFICATION	2.4336916077667226E-4	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9998744464543532	WITHOUT_CLASSIFICATION	1.2555354564683783E-4	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9996466545321978	WITHOUT_CLASSIFICATION	3.533454678021471E-4	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999390531532858	WITHOUT_CLASSIFICATION	6.094684671426198E-5	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999957508745603	WITHOUT_CLASSIFICATION	4.249125439678964E-6	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.99995845368236	WITHOUT_CLASSIFICATION	4.1546317640008715E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999627623214338	WITHOUT_CLASSIFICATION	3.723767856624441E-5	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999601826668604	WITHOUT_CLASSIFICATION	3.981733313960587E-5	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999605246959573	WITHOUT_CLASSIFICATION	3.947530404257129E-5	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999862731074335	WITHOUT_CLASSIFICATION	1.3726892566458307E-5	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999904576028477	WITHOUT_CLASSIFICATION	9.542397152414413E-6	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999645326566364	WITHOUT_CLASSIFICATION	3.546734336364991E-5	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9998835626748704	WITHOUT_CLASSIFICATION	1.1643732512953341E-4	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.99998373831463	WITHOUT_CLASSIFICATION	1.6261685369974755E-5	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999990727803172	WITHOUT_CLASSIFICATION	9.272196828617184E-7	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999992144379208	WITHOUT_CLASSIFICATION	7.85562079207747E-7	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999762562723189	WITHOUT_CLASSIFICATION	2.3743727681116325E-5	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999958558338081	WITHOUT_CLASSIFICATION	4.1441661918656456E-6	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999814076897706	WITHOUT_CLASSIFICATION	1.8592310229283358E-5	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999790710070053	WITHOUT_CLASSIFICATION	2.092899299467214E-5	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999943438395401	WITHOUT_CLASSIFICATION	5.656160459844188E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999862570043191	WITHOUT_CLASSIFICATION	1.3742995680968699E-5	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999797359877644	WITHOUT_CLASSIFICATION	2.0264012235734667E-5	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.999999160117369	WITHOUT_CLASSIFICATION	8.398826311068115E-7	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999849212767337	WITHOUT_CLASSIFICATION	1.5078723266451642E-5	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999922285181672	WITHOUT_CLASSIFICATION	7.771481832827344E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.999988838127537	WITHOUT_CLASSIFICATION	1.1161872463012921E-5	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999983137131434	WITHOUT_CLASSIFICATION	1.6862868565079189E-6	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999973218976257	WITHOUT_CLASSIFICATION	2.678102374301995E-6	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999764953662157	WITHOUT_CLASSIFICATION	2.3504633784359047E-5	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999689630416603	WITHOUT_CLASSIFICATION	3.103695833968281E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999815598209203	WITHOUT_CLASSIFICATION	1.8440179079632077E-5	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.999869161895437	WITHOUT_CLASSIFICATION	1.3083810456306785E-4	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999897212095288	WITHOUT_CLASSIFICATION	1.0278790471249259E-5	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999995893442699	WITHOUT_CLASSIFICATION	4.1065573004343407E-7	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.999998378395748	WITHOUT_CLASSIFICATION	1.6216042520455126E-6	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999981944962424	WITHOUT_CLASSIFICATION	1.805503757609063E-6	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999856089508843	WITHOUT_CLASSIFICATION	1.4391049115801753E-5	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999968363262389	WITHOUT_CLASSIFICATION	3.16367376110204E-6	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999969958005266	WITHOUT_CLASSIFICATION	3.0041994734900874E-6	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999892715008327	WITHOUT_CLASSIFICATION	1.0728499167241463E-5	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999694784018495	WITHOUT_CLASSIFICATION	3.0521598150452544E-5	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999887555189269	WITHOUT_CLASSIFICATION	1.1244481073044933E-5	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999806360091945	WITHOUT_CLASSIFICATION	1.9363990805396937E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9998056146938357	WITHOUT_CLASSIFICATION	1.943853061642568E-4	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999945085655407	WITHOUT_CLASSIFICATION	5.491434459282087E-6	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999063941639234	WITHOUT_CLASSIFICATION	9.360583607669431E-5	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999825654725575	WITHOUT_CLASSIFICATION	1.7434527442621557E-5	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9999980796425468	WITHOUT_CLASSIFICATION	1.9203574532121733E-6	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9997280349207308	WITHOUT_CLASSIFICATION	2.7196507926923385E-4	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9998789076175695	WITHOUT_CLASSIFICATION	1.210923824304902E-4	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999965437342146	WITHOUT_CLASSIFICATION	3.4562657853937447E-6	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999466484666646	WITHOUT_CLASSIFICATION	5.335153333534827E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999951880355084	WITHOUT_CLASSIFICATION	4.811964491722704E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999928541310581	WITHOUT_CLASSIFICATION	7.145868941952476E-6	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9997632699868451	WITHOUT_CLASSIFICATION	2.3673001315499504E-4	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.999875055118944	WITHOUT_CLASSIFICATION	1.2494488105604457E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999820094810722	WITHOUT_CLASSIFICATION	1.799051892791567E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999820094810722	WITHOUT_CLASSIFICATION	1.799051892791567E-5	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9997989895037549	WITHOUT_CLASSIFICATION	2.0101049624518964E-4	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999740559646928	WITHOUT_CLASSIFICATION	2.5944035307137616E-5	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999836257396195	WITHOUT_CLASSIFICATION	1.637426038056697E-5	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999366462541982	WITHOUT_CLASSIFICATION	6.33537458018048E-5	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9998951308674975	WITHOUT_CLASSIFICATION	1.0486913250247996E-4	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999650097000009	WITHOUT_CLASSIFICATION	3.499029999905383E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999671957005876	WITHOUT_CLASSIFICATION	3.280429941235216E-5	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.999991673875058	WITHOUT_CLASSIFICATION	8.326124941857839E-6	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9997912829997693	WITHOUT_CLASSIFICATION	2.087170002306855E-4	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999037872538414	WITHOUT_CLASSIFICATION	9.62127461585468E-5	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999089110840498	WITHOUT_CLASSIFICATION	9.108891595021107E-5	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999401990670963	WITHOUT_CLASSIFICATION	5.9800932903662724E-5	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999795267867703	WITHOUT_CLASSIFICATION	2.0473213229683824E-5	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999969965301994	WITHOUT_CLASSIFICATION	3.0034698007333694E-6	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9989493307739767	WITHOUT_CLASSIFICATION	0.001050669226023263	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9998953445471791	WITHOUT_CLASSIFICATION	1.0465545282089278E-4	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999725872860544	WITHOUT_CLASSIFICATION	2.7412713945542372E-5	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.999992414532778	WITHOUT_CLASSIFICATION	7.585467222084511E-6	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999840429763848	WITHOUT_CLASSIFICATION	1.595702361526575E-5	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.999822028522232	WITHOUT_CLASSIFICATION	1.7797147776791106E-4	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999980290130196	WITHOUT_CLASSIFICATION	1.9709869804143194E-6	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999918423927628	WITHOUT_CLASSIFICATION	8.157607237210593E-6	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999924494780775	WITHOUT_CLASSIFICATION	7.550521922388509E-6	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.999959595411318	WITHOUT_CLASSIFICATION	4.0404588682025484E-5	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999270324632586	WITHOUT_CLASSIFICATION	7.296753674139632E-5	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999891792055612	WITHOUT_CLASSIFICATION	1.082079443886516E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999941750526651	WITHOUT_CLASSIFICATION	5.824947334895865E-5	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999865196268927	WITHOUT_CLASSIFICATION	1.3480373107183227E-5	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999929373097323	WITHOUT_CLASSIFICATION	7.062690267665098E-6	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999964241570267	WITHOUT_CLASSIFICATION	3.575842973374392E-6	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999994779245218	WITHOUT_CLASSIFICATION	5.220754782190958E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.999990323886776	WITHOUT_CLASSIFICATION	9.676113223987676E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999990906474372	WITHOUT_CLASSIFICATION	9.093525627658891E-7	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9996621159157134	WITHOUT_CLASSIFICATION	3.37884084286539E-4	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999868587551758	WITHOUT_CLASSIFICATION	1.3141244824234875E-5	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999554852287552	WITHOUT_CLASSIFICATION	4.451477124469958E-5	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999996278982084	WITHOUT_CLASSIFICATION	3.721017916041041E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999940191533115	WITHOUT_CLASSIFICATION	5.980846688394098E-6	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999995964457767	WITHOUT_CLASSIFICATION	4.0355422324520233E-7	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999980601873008	WITHOUT_CLASSIFICATION	1.939812699169774E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999630726563652	WITHOUT_CLASSIFICATION	3.69273436348146E-5	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999904169085075	WITHOUT_CLASSIFICATION	9.583091492470578E-6	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999698342595269	WITHOUT_CLASSIFICATION	3.0165740473111853E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999910289583686	WITHOUT_CLASSIFICATION	8.971041631460296E-6	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999966590969123	WITHOUT_CLASSIFICATION	3.3409030876279063E-6	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999351790324069	WITHOUT_CLASSIFICATION	6.482096759302054E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999902077043664	WITHOUT_CLASSIFICATION	9.792295633663538E-6	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9997882192888542	WITHOUT_CLASSIFICATION	2.1178071114577156E-4	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999911115342428	WITHOUT_CLASSIFICATION	8.88846575721115E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999521564908709	WITHOUT_CLASSIFICATION	4.784350912919798E-5	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9997805679992202	WITHOUT_CLASSIFICATION	2.1943200077982668E-4	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999755979349264	WITHOUT_CLASSIFICATION	2.440206507353351E-5	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9999976674793227	WITHOUT_CLASSIFICATION	2.3325206772771187E-6	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999486611956723	WITHOUT_CLASSIFICATION	5.1338804327720335E-5	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9999987287636725	WITHOUT_CLASSIFICATION	1.2712363276286708E-6	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999876669874959	WITHOUT_CLASSIFICATION	1.2333012504222984E-5	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999870236656486	WITHOUT_CLASSIFICATION	1.2976334351348727E-5	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.999989580214161	WITHOUT_CLASSIFICATION	1.0419785839027355E-5	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9997343323740063	WITHOUT_CLASSIFICATION	2.6566762599369013E-4	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999713784482156	WITHOUT_CLASSIFICATION	2.8621551784455078E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999714530558507	WITHOUT_CLASSIFICATION	2.8546944149308276E-5	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999887009629962	WITHOUT_CLASSIFICATION	1.1299037003796528E-5	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999065930907695	WITHOUT_CLASSIFICATION	9.340690923053344E-5	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9997771292521829	WITHOUT_CLASSIFICATION	2.2287074781715053E-4	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999950685003028	WITHOUT_CLASSIFICATION	4.9314996971363505E-6	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999897967107123	WITHOUT_CLASSIFICATION	1.0203289287670377E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999987853598669	WITHOUT_CLASSIFICATION	1.214640133079733E-6	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999881863263433	WITHOUT_CLASSIFICATION	1.1813673656682372E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999952013684541	WITHOUT_CLASSIFICATION	4.798631545895773E-5	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999830983727201	WITHOUT_CLASSIFICATION	1.690162727991157E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999992455636083	WITHOUT_CLASSIFICATION	7.544363917616352E-7	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999945799151715	WITHOUT_CLASSIFICATION	5.420084828496384E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.999990613337941	WITHOUT_CLASSIFICATION	9.386662058894349E-6	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999921781790242	WITHOUT_CLASSIFICATION	7.821820975830495E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999855118210684	WITHOUT_CLASSIFICATION	1.4488178931533594E-5	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999841053578379	WITHOUT_CLASSIFICATION	1.589464216206361E-5	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.999995901085994	WITHOUT_CLASSIFICATION	4.098914005966982E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999977125323277	WITHOUT_CLASSIFICATION	2.2874676723048795E-6	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999983235560899	WITHOUT_CLASSIFICATION	1.6764439101742497E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999805373626266	WITHOUT_CLASSIFICATION	1.9462637373455912E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9999981409011643	WITHOUT_CLASSIFICATION	1.8590988356933113E-6	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.999997936273642	WITHOUT_CLASSIFICATION	2.0637263580564166E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999981261826855	WITHOUT_CLASSIFICATION	1.8738173144853627E-6	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999955298598331	WITHOUT_CLASSIFICATION	4.470140166923204E-6	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999871730151044	WITHOUT_CLASSIFICATION	1.2826984895643733E-5	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999893396536771	WITHOUT_CLASSIFICATION	1.06603463229758E-5	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999929321693897	WITHOUT_CLASSIFICATION	7.067830610228112E-6	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999862975071995	WITHOUT_CLASSIFICATION	1.370249280060836E-5	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999316224775827	WITHOUT_CLASSIFICATION	6.837752241730665E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999932278542257	WITHOUT_CLASSIFICATION	6.772145774258363E-6	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999752152330624	WITHOUT_CLASSIFICATION	2.478476693746196E-5	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999257161793907	WITHOUT_CLASSIFICATION	7.428382060935105E-5	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.99999301967039	WITHOUT_CLASSIFICATION	6.98032960996523E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999835913845448	WITHOUT_CLASSIFICATION	1.6408615455148616E-5	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999873359379692	WITHOUT_CLASSIFICATION	1.2664062030916237E-5	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999383315499273	WITHOUT_CLASSIFICATION	6.166845007274975E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999979977503806	WITHOUT_CLASSIFICATION	2.0022496194649438E-6	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999839225034957	WITHOUT_CLASSIFICATION	1.6077496504273095E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999988255435155	WITHOUT_CLASSIFICATION	1.1744564844863401E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999883539811164	WITHOUT_CLASSIFICATION	1.1646018883659547E-5	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999766237815116	WITHOUT_CLASSIFICATION	2.3376218488376772E-5	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.999982316367485	WITHOUT_CLASSIFICATION	1.768363251498765E-5	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999343981179238	WITHOUT_CLASSIFICATION	6.560188207624814E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999528463833077	WITHOUT_CLASSIFICATION	4.7153616692275805E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999753089200164	WITHOUT_CLASSIFICATION	2.4691079983557014E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999398187592419	WITHOUT_CLASSIFICATION	6.0181240758198444E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999888717473293	WITHOUT_CLASSIFICATION	1.1128252670688921E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999753089200164	WITHOUT_CLASSIFICATION	2.4691079983557014E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999398187592419	WITHOUT_CLASSIFICATION	6.0181240758198444E-5	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.999981955653477	WITHOUT_CLASSIFICATION	1.8044346522974213E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999927087083195	WITHOUT_CLASSIFICATION	7.291291680571522E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999605441636622	WITHOUT_CLASSIFICATION	3.945583633788666E-5	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999720233379186	WITHOUT_CLASSIFICATION	2.7976662081508692E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999317038006065	WITHOUT_CLASSIFICATION	6.82961993935614E-5	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.999992234332199	WITHOUT_CLASSIFICATION	7.76566780094734E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999971591299371	WITHOUT_CLASSIFICATION	2.8408700628761012E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999907153220539	WITHOUT_CLASSIFICATION	9.284677946143908E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999875210013387	WITHOUT_CLASSIFICATION	1.2478998661303225E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999732894988194	WITHOUT_CLASSIFICATION	2.671050118059731E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999541007026524	WITHOUT_CLASSIFICATION	4.589929734752723E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999883539811164	WITHOUT_CLASSIFICATION	1.1646018883659547E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999883539811164	WITHOUT_CLASSIFICATION	1.1646018883659547E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999398187592419	WITHOUT_CLASSIFICATION	6.0181240758198444E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999605441636622	WITHOUT_CLASSIFICATION	3.945583633788666E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999317038006065	WITHOUT_CLASSIFICATION	6.82961993935614E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999881354692329	WITHOUT_CLASSIFICATION	1.1864530767111621E-5	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.999983324633205	WITHOUT_CLASSIFICATION	1.6675366795015953E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999991011771332	WITHOUT_CLASSIFICATION	8.988228668124034E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999749157170316	WITHOUT_CLASSIFICATION	2.5084282968509748E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999389391754966	WITHOUT_CLASSIFICATION	6.106082450339803E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999389391754966	WITHOUT_CLASSIFICATION	6.106082450339803E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999870946940688	WITHOUT_CLASSIFICATION	1.2905305931146216E-5	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999047533630099	WITHOUT_CLASSIFICATION	9.524663699003174E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999688182101879	WITHOUT_CLASSIFICATION	3.118178981205675E-5	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999927311099258	WITHOUT_CLASSIFICATION	7.26889007425734E-6	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999642632447351	WITHOUT_CLASSIFICATION	3.573675526497302E-5	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9998787900644492	WITHOUT_CLASSIFICATION	1.2120993555067797E-4	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999772885264487	WITHOUT_CLASSIFICATION	2.27114735512575E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999753089200164	WITHOUT_CLASSIFICATION	2.4691079983557014E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999741384603321	WITHOUT_CLASSIFICATION	2.5861539667874735E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999927087083195	WITHOUT_CLASSIFICATION	7.291291680571522E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.999992234332199	WITHOUT_CLASSIFICATION	7.76566780094734E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999971591299371	WITHOUT_CLASSIFICATION	2.8408700628761012E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999971591299371	WITHOUT_CLASSIFICATION	2.8408700628761012E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999875210013387	WITHOUT_CLASSIFICATION	1.2478998661303225E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999732894988194	WITHOUT_CLASSIFICATION	2.671050118059731E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999541007026524	WITHOUT_CLASSIFICATION	4.589929734752723E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999932320863443	WITHOUT_CLASSIFICATION	6.767913655809432E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999995222319395	WITHOUT_CLASSIFICATION	4.777680604999386E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999807246226132	WITHOUT_CLASSIFICATION	1.9275377386663644E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999778276680923	WITHOUT_CLASSIFICATION	2.217233190768004E-5	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999950908987815	WITHOUT_CLASSIFICATION	4.909101218581036E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999050933568326	WITHOUT_CLASSIFICATION	9.49066431674046E-5	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999929911986837	WITHOUT_CLASSIFICATION	7.0088013162680815E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999596544057193	WITHOUT_CLASSIFICATION	4.0345594280674165E-5	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999706410596944	WITHOUT_CLASSIFICATION	2.9358940305595613E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999605441636622	WITHOUT_CLASSIFICATION	3.945583633788666E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999971591299371	WITHOUT_CLASSIFICATION	2.8408700628761012E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999875210013387	WITHOUT_CLASSIFICATION	1.2478998661303225E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999875210013387	WITHOUT_CLASSIFICATION	1.2478998661303225E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999881354692329	WITHOUT_CLASSIFICATION	1.1864530767111621E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999870946940688	WITHOUT_CLASSIFICATION	1.2905305931146216E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999870946940688	WITHOUT_CLASSIFICATION	1.2905305931146216E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999688182101879	WITHOUT_CLASSIFICATION	3.118178981205675E-5	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999767617242882	WITHOUT_CLASSIFICATION	2.323827571182404E-5	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999900171473253	WITHOUT_CLASSIFICATION	9.982852674767773E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999769932551238	WITHOUT_CLASSIFICATION	2.3006744876138905E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999808905283385	WITHOUT_CLASSIFICATION	1.9109471661526075E-5	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999838070459204	WITHOUT_CLASSIFICATION	1.619295407959454E-5	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999772900351082	WITHOUT_CLASSIFICATION	2.270996489180508E-5	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999572669965482	WITHOUT_CLASSIFICATION	4.273300345183529E-5	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999716787787143	WITHOUT_CLASSIFICATION	2.8321221285738145E-5	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999743087943108	WITHOUT_CLASSIFICATION	2.569120568921054E-5	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999833653910088	WITHOUT_CLASSIFICATION	1.663460899108342E-5	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999955665263754	WITHOUT_CLASSIFICATION	4.433473624612782E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999624339309615	WITHOUT_CLASSIFICATION	3.756606903842891E-5	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.999964499936194	WITHOUT_CLASSIFICATION	3.5500063805962056E-5	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999920015408439	WITHOUT_CLASSIFICATION	7.998459156054732E-6	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999625504701142	WITHOUT_CLASSIFICATION	3.7449529885855165E-5	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999890698671584	WITHOUT_CLASSIFICATION	1.0930132841550868E-5	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999946296511129	WITHOUT_CLASSIFICATION	5.370348887127082E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999975416369219	WITHOUT_CLASSIFICATION	2.4583630780996582E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999701951855835	WITHOUT_CLASSIFICATION	2.9804814416411112E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999946582324355	WITHOUT_CLASSIFICATION	5.341767564538996E-6	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999686110120777	WITHOUT_CLASSIFICATION	3.138898792234116E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999935133499923	WITHOUT_CLASSIFICATION	6.48665000762301E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999988701814193	WITHOUT_CLASSIFICATION	1.1298185806437986E-6	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999975451345381	WITHOUT_CLASSIFICATION	2.454865461880856E-6	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999952443119144	WITHOUT_CLASSIFICATION	4.755688085553889E-6	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9992714492914592	WITHOUT_CLASSIFICATION	7.285507085407823E-4	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.999388948162382	WITHOUT_CLASSIFICATION	6.110518376179694E-4	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9997468644458967	WITHOUT_CLASSIFICATION	2.5313555410342285E-4	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999002885670415	WITHOUT_CLASSIFICATION	9.971143295857724E-5	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.99999716984192	WITHOUT_CLASSIFICATION	2.830158080034449E-6	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999977223882486	WITHOUT_CLASSIFICATION	2.2776117514529195E-6	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999993235348784	WITHOUT_CLASSIFICATION	6.764651215323142E-7	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999968827144201	WITHOUT_CLASSIFICATION	3.117285579784301E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999979192548326	WITHOUT_CLASSIFICATION	2.0807451674482755E-6	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999827017605648	WITHOUT_CLASSIFICATION	1.7298239435249418E-5	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999970035242509	WITHOUT_CLASSIFICATION	2.9964757491072026E-6	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999978421167199	WITHOUT_CLASSIFICATION	2.157883279980806E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999964533752436	WITHOUT_CLASSIFICATION	3.546624756559872E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999968292675454	WITHOUT_CLASSIFICATION	3.170732454461628E-6	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999982440298177	WITHOUT_CLASSIFICATION	1.7559701822297853E-6	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999814088827365	WITHOUT_CLASSIFICATION	1.859111726349961E-5	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999852924603758	WITHOUT_CLASSIFICATION	1.4707539624119992E-5	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999971429357046	WITHOUT_CLASSIFICATION	2.8570642953369225E-6	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999965462197303	WITHOUT_CLASSIFICATION	3.453780269670041E-6	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999959216379413	WITHOUT_CLASSIFICATION	4.078362058750448E-6	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999551152619577	WITHOUT_CLASSIFICATION	4.4884738042220647E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999577199986035	WITHOUT_CLASSIFICATION	4.22800013966293E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9997836429551239	WITHOUT_CLASSIFICATION	2.1635704487614406E-4	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.999958973090206	WITHOUT_CLASSIFICATION	4.102690979403981E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9998801379925687	WITHOUT_CLASSIFICATION	1.198620074313248E-4	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999868478204225	WITHOUT_CLASSIFICATION	1.3152179577449968E-5	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.99998332115326	WITHOUT_CLASSIFICATION	1.6678846739979654E-5	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9997369466907988	WITHOUT_CLASSIFICATION	2.630533092011441E-4	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999501503145366	WITHOUT_CLASSIFICATION	4.984968546344192E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9992880681771071	WITHOUT_CLASSIFICATION	7.119318228927406E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9992880681771071	WITHOUT_CLASSIFICATION	7.119318228927406E-4	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999591688772912	WITHOUT_CLASSIFICATION	4.0831122708799105E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9998174698306858	WITHOUT_CLASSIFICATION	1.8253016931428482E-4	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9998460431983557	WITHOUT_CLASSIFICATION	1.5395680164428713E-4	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999902201162428	WITHOUT_CLASSIFICATION	9.77988375721417E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9216085008105381	WITHOUT_CLASSIFICATION	0.07839149918946191	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9998578761376085	WITHOUT_CLASSIFICATION	1.4212386239165713E-4	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.999833164779886	WITHOUT_CLASSIFICATION	1.6683522011397902E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9992434172647799	WITHOUT_CLASSIFICATION	7.565827352200978E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9998314405932164	WITHOUT_CLASSIFICATION	1.6855940678359296E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9998314405932164	WITHOUT_CLASSIFICATION	1.6855940678359296E-4	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999735006114032	WITHOUT_CLASSIFICATION	2.6499388596865364E-5	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999270302414142	WITHOUT_CLASSIFICATION	7.296975858585544E-5	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9998785367427465	WITHOUT_CLASSIFICATION	1.2146325725357357E-4	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999282432942821	WITHOUT_CLASSIFICATION	7.175670571789465E-5	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9998968391698291	WITHOUT_CLASSIFICATION	1.0316083017098643E-4	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9998599613293561	WITHOUT_CLASSIFICATION	1.4003867064397223E-4	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.999833598184205	WITHOUT_CLASSIFICATION	1.6640181579496004E-4	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999287333994865	WITHOUT_CLASSIFICATION	7.126660051348531E-5	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999407786431275	WITHOUT_CLASSIFICATION	5.922135687244623E-5	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9997199992707348	WITHOUT_CLASSIFICATION	2.800007292651318E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.999967088285815	WITHOUT_CLASSIFICATION	3.291171418501559E-5	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9998925053295245	WITHOUT_CLASSIFICATION	1.0749467047558763E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944976586397	WITHOUT_CLASSIFICATION	5.502341360415352E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999925238609215	WITHOUT_CLASSIFICATION	7.476139078368837E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999934323271191	WITHOUT_CLASSIFICATION	6.567672880806076E-6	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999551152619577	WITHOUT_CLASSIFICATION	4.4884738042220647E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9992880681771071	WITHOUT_CLASSIFICATION	7.119318228927406E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9992880681771071	WITHOUT_CLASSIFICATION	7.119318228927406E-4	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9998174698306858	WITHOUT_CLASSIFICATION	1.8253016931428482E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999952983042656	WITHOUT_CLASSIFICATION	4.701695734342634E-6	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999808976738572	WITHOUT_CLASSIFICATION	1.91023261427628E-5	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999273988480027	WITHOUT_CLASSIFICATION	7.260115199717658E-5	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9998980622820433	WITHOUT_CLASSIFICATION	1.0193771795673634E-4	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999126083843893	WITHOUT_CLASSIFICATION	8.739161561069175E-5	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999481517998511	WITHOUT_CLASSIFICATION	5.184820014898477E-5	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9998413052713828	WITHOUT_CLASSIFICATION	1.586947286171599E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999955773884206	WITHOUT_CLASSIFICATION	4.422611579397203E-6	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999901096121703	WITHOUT_CLASSIFICATION	9.890387829681893E-6	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999954583536471	WITHOUT_CLASSIFICATION	4.541646352959494E-6	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999056074490378	WITHOUT_CLASSIFICATION	9.43925509623226E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999920816105335	WITHOUT_CLASSIFICATION	7.918389466556408E-6	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999816409666605	WITHOUT_CLASSIFICATION	1.835903333940925E-5	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999500253081921	WITHOUT_CLASSIFICATION	4.997469180789396E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999333987514301	WITHOUT_CLASSIFICATION	6.660124856991702E-5	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999143464929772	WITHOUT_CLASSIFICATION	8.565350702276854E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999758848552238	WITHOUT_CLASSIFICATION	2.4115144776193006E-5	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.999993535057897	WITHOUT_CLASSIFICATION	6.46494210300875E-6	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999972153716895	WITHOUT_CLASSIFICATION	2.7846283104384352E-6	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999932998895915	WITHOUT_CLASSIFICATION	6.700110408460217E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.999993538141855	WITHOUT_CLASSIFICATION	6.461858144948509E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999841563384494	WITHOUT_CLASSIFICATION	1.584366155064645E-5	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999849963750816	WITHOUT_CLASSIFICATION	1.5003624918305236E-5	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9997930288790514	WITHOUT_CLASSIFICATION	2.0697112094855412E-4	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999957157102615	WITHOUT_CLASSIFICATION	4.28428973849724E-5	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999635158008962	WITHOUT_CLASSIFICATION	3.648419910373427E-5	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9998399114512998	WITHOUT_CLASSIFICATION	1.6008854870012515E-4	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9998064356525327	WITHOUT_CLASSIFICATION	1.9356434746735786E-4	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999556286728828	WITHOUT_CLASSIFICATION	4.4371327117153364E-5	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9993893945491372	WITHOUT_CLASSIFICATION	6.10605450862829E-4	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9998562187206428	WITHOUT_CLASSIFICATION	1.437812793571597E-4	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9993862393460581	WITHOUT_CLASSIFICATION	6.137606539418072E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9997224531652753	WITHOUT_CLASSIFICATION	2.775468347247157E-4	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999701762747923	WITHOUT_CLASSIFICATION	2.9823725207612026E-5	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999581379924284	WITHOUT_CLASSIFICATION	4.186200757157221E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999988325269431	WITHOUT_CLASSIFICATION	1.167473056899084E-6	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999745224297877	WITHOUT_CLASSIFICATION	2.547757021233744E-5	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999986856308892	WITHOUT_CLASSIFICATION	1.3143691107408496E-6	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999747564661522	WITHOUT_CLASSIFICATION	2.5243533847738624E-5	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999559939516139	WITHOUT_CLASSIFICATION	4.400604838605813E-5	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.999997514133368	WITHOUT_CLASSIFICATION	2.4858666320022432E-6	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999712479353982	WITHOUT_CLASSIFICATION	2.8752064601756922E-5	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999325057762782	WITHOUT_CLASSIFICATION	6.749422372181007E-5	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9999996589239456	WITHOUT_CLASSIFICATION	3.410760543818907E-7	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999826842358481	WITHOUT_CLASSIFICATION	1.731576415181134E-5	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999781031927363	WITHOUT_CLASSIFICATION	2.18968072637651E-5	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999947148340645	WITHOUT_CLASSIFICATION	5.285165935527067E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999643524700352	WITHOUT_CLASSIFICATION	3.564752996478393E-5	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999943945160322	WITHOUT_CLASSIFICATION	5.6054839677735926E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999562059042608	WITHOUT_CLASSIFICATION	4.3794095739293054E-5	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999878846829613	WITHOUT_CLASSIFICATION	1.211531703868785E-5	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.99995395907267	WITHOUT_CLASSIFICATION	4.604092732999942E-5	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.999999181538688	WITHOUT_CLASSIFICATION	8.18461311989969E-7	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999815129743727	WITHOUT_CLASSIFICATION	1.8487025627361576E-5	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999884403883459	WITHOUT_CLASSIFICATION	1.1559611654002037E-5	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999866193010349	WITHOUT_CLASSIFICATION	1.3380698965136965E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999959334764735	WITHOUT_CLASSIFICATION	4.0665235265045805E-5	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9998902730016246	WITHOUT_CLASSIFICATION	1.097269983753443E-4	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999478743231287	WITHOUT_CLASSIFICATION	5.2125676871367034E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.999887711125387	WITHOUT_CLASSIFICATION	1.1228887461297352E-4	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.999887711125387	WITHOUT_CLASSIFICATION	1.1228887461297352E-4	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9998967277102365	WITHOUT_CLASSIFICATION	1.0327228976341877E-4	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9998967277102365	WITHOUT_CLASSIFICATION	1.0327228976341877E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999914752895069	WITHOUT_CLASSIFICATION	8.524710493008196E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999914752895069	WITHOUT_CLASSIFICATION	8.524710493008196E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998342974195067	WITHOUT_CLASSIFICATION	1.6570258049328337E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9995103727389523	WITHOUT_CLASSIFICATION	4.896272610476568E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9995103727389523	WITHOUT_CLASSIFICATION	4.896272610476568E-4	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9998987793638258	WITHOUT_CLASSIFICATION	1.0122063617431273E-4	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9998815029378467	WITHOUT_CLASSIFICATION	1.1849706215325584E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9990226771823182	WITHOUT_CLASSIFICATION	9.773228176817154E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9990226771823182	WITHOUT_CLASSIFICATION	9.773228176817154E-4	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.999923060446133	WITHOUT_CLASSIFICATION	7.693955386696185E-5	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9996412750481144	WITHOUT_CLASSIFICATION	3.5872495188560966E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9995103727389523	WITHOUT_CLASSIFICATION	4.896272610476568E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9990226771823182	WITHOUT_CLASSIFICATION	9.773228176817154E-4	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.999886622174785	WITHOUT_CLASSIFICATION	1.1337782521505526E-4	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9998710348453925	WITHOUT_CLASSIFICATION	1.2896515460751023E-4	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999973208042328	WITHOUT_CLASSIFICATION	2.6791957671755625E-6	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999941098601361	WITHOUT_CLASSIFICATION	5.890139863857018E-6	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999716186720108	WITHOUT_CLASSIFICATION	2.8381327989180108E-5	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999790310095904	WITHOUT_CLASSIFICATION	2.0968990409618965E-5	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999968396151184	WITHOUT_CLASSIFICATION	3.1603848814904397E-6	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999980927853067	WITHOUT_CLASSIFICATION	1.9072146933073747E-6	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999776458299708	WITHOUT_CLASSIFICATION	2.2354170029156014E-5	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999111697542956	WITHOUT_CLASSIFICATION	8.883024570440357E-5	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999856854199821	WITHOUT_CLASSIFICATION	1.4314580018014521E-5	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999660207104815	WITHOUT_CLASSIFICATION	3.397928951858613E-5	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999940627082489	WITHOUT_CLASSIFICATION	5.937291751113407E-6	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.999985419518346	WITHOUT_CLASSIFICATION	1.458048165390938E-5	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999618353634335	WITHOUT_CLASSIFICATION	3.816463656649219E-5	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999812420689479	WITHOUT_CLASSIFICATION	1.8757931052160093E-5	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999663673731142	WITHOUT_CLASSIFICATION	3.363262688578056E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9999256301839199	WITHOUT_CLASSIFICATION	7.436981608006067E-5	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999799420997343	WITHOUT_CLASSIFICATION	2.0057900265744512E-5	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999976459317622	WITHOUT_CLASSIFICATION	2.3540682378050586E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999926513732063	WITHOUT_CLASSIFICATION	7.348626793814541E-6	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999393321967611	WITHOUT_CLASSIFICATION	6.0667803238890596E-5	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999869610677213	WITHOUT_CLASSIFICATION	1.303893227868089E-5	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999194478965878	WITHOUT_CLASSIFICATION	8.055210341213818E-5	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.99997274103864	WITHOUT_CLASSIFICATION	2.7258961359965375E-5	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999655336497656	WITHOUT_CLASSIFICATION	3.446635023439183E-5	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999864397811923	WITHOUT_CLASSIFICATION	1.3560218807693E-5	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999432602729829	WITHOUT_CLASSIFICATION	5.6739727017183224E-5	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999730499788266	WITHOUT_CLASSIFICATION	2.6950021173361402E-5	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.999977904983223	WITHOUT_CLASSIFICATION	2.2095016777015176E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999973208042328	WITHOUT_CLASSIFICATION	2.6791957671755625E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999988851583728	WITHOUT_CLASSIFICATION	1.114841627252819E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999618353634335	WITHOUT_CLASSIFICATION	3.816463656649219E-5	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999990064694151	WITHOUT_CLASSIFICATION	9.935305849447692E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999194478965878	WITHOUT_CLASSIFICATION	8.055210341213818E-5	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999859229990072	WITHOUT_CLASSIFICATION	1.4077000992873287E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999943840228315	WITHOUT_CLASSIFICATION	5.615977168587924E-6	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9998227628049315	WITHOUT_CLASSIFICATION	1.7723719506839079E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9993667214305635	WITHOUT_CLASSIFICATION	6.332785694365214E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9993667214305635	WITHOUT_CLASSIFICATION	6.332785694365214E-4	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9998973280982957	WITHOUT_CLASSIFICATION	1.0267190170435285E-4	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999993421100514	WITHOUT_CLASSIFICATION	6.578899487111803E-7	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999948772687385	WITHOUT_CLASSIFICATION	5.122731261536438E-6	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999961495517841	WITHOUT_CLASSIFICATION	3.850448216002801E-6	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999696150849277	WITHOUT_CLASSIFICATION	3.0384915072360072E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999960485976009	WITHOUT_CLASSIFICATION	3.951402399084114E-6	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.999926576847077	WITHOUT_CLASSIFICATION	7.342315292305583E-5	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999957766821326	WITHOUT_CLASSIFICATION	4.2233178673366985E-6	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999975859030653	WITHOUT_CLASSIFICATION	2.414096934703721E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999763952875181	WITHOUT_CLASSIFICATION	2.36047124818885E-5	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999909636012433	WITHOUT_CLASSIFICATION	9.036398756829898E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999769729884218	WITHOUT_CLASSIFICATION	2.302701157809599E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.999977458267122	WITHOUT_CLASSIFICATION	2.2541732877979342E-5	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999962430078961	WITHOUT_CLASSIFICATION	3.7569921039907546E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999716810810961	WITHOUT_CLASSIFICATION	2.8318918903864813E-5	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9991332407568111	WITHOUT_CLASSIFICATION	8.667592431889123E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999696022851181	WITHOUT_CLASSIFICATION	3.039771488181479E-5	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999909888828675	WITHOUT_CLASSIFICATION	9.011117132498251E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999940972258444	WITHOUT_CLASSIFICATION	5.902774155481653E-6	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9998449939743124	WITHOUT_CLASSIFICATION	1.5500602568758838E-4	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999931852631652	WITHOUT_CLASSIFICATION	6.814736834863909E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999987964730135	WITHOUT_CLASSIFICATION	1.2035269864660831E-6	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9998401818746306	WITHOUT_CLASSIFICATION	1.5981812536940314E-4	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999924528965309	WITHOUT_CLASSIFICATION	7.5471034690242166E-6	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999986037338595	WITHOUT_CLASSIFICATION	1.3962661404228614E-6	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999916062544935	WITHOUT_CLASSIFICATION	8.39374550656066E-6	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999941571690887	WITHOUT_CLASSIFICATION	5.842830911351156E-6	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.999984918890463	WITHOUT_CLASSIFICATION	1.5081109536922896E-5	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999933321745466	WITHOUT_CLASSIFICATION	6.667825453427184E-6	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999762254772815	WITHOUT_CLASSIFICATION	2.3774522718523844E-5	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999991203484402	WITHOUT_CLASSIFICATION	8.796515598367419E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999916324533169	WITHOUT_CLASSIFICATION	8.36754668310661E-6	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.999941249457101	WITHOUT_CLASSIFICATION	5.875054289893334E-5	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999952776534703	WITHOUT_CLASSIFICATION	4.722346529672888E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999582502576809	WITHOUT_CLASSIFICATION	4.174974231913081E-5	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999965340184831	WITHOUT_CLASSIFICATION	3.465981516981791E-6	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999806959883799	WITHOUT_CLASSIFICATION	1.930401162012885E-5	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999923130060495	WITHOUT_CLASSIFICATION	7.686993950419558E-6	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999922549624263	WITHOUT_CLASSIFICATION	7.745037573832827E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999634567726892	WITHOUT_CLASSIFICATION	3.6543227310893834E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999959596204865	WITHOUT_CLASSIFICATION	4.040379513571145E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999738423834175	WITHOUT_CLASSIFICATION	2.6157616582643728E-5	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999989738853897	WITHOUT_CLASSIFICATION	1.0261146103072437E-6	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999412405658844	WITHOUT_CLASSIFICATION	5.875943411564762E-5	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999565830960951	WITHOUT_CLASSIFICATION	4.3416903904839906E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999970623785326	WITHOUT_CLASSIFICATION	2.93762146741157E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.999946333237563	WITHOUT_CLASSIFICATION	5.366676243692694E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999081571634667	WITHOUT_CLASSIFICATION	9.184283653329482E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999914752895069	WITHOUT_CLASSIFICATION	8.524710493008196E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9998838944444423	WITHOUT_CLASSIFICATION	1.1610555555774107E-4	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999518440032641	WITHOUT_CLASSIFICATION	4.815599673579641E-5	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999988289850045	WITHOUT_CLASSIFICATION	1.1710149955983095E-6	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999608371599639	WITHOUT_CLASSIFICATION	3.916284003619896E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999974207019898	WITHOUT_CLASSIFICATION	2.5792980102182946E-6	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999942591743634	WITHOUT_CLASSIFICATION	5.740825636692088E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999936887742449	WITHOUT_CLASSIFICATION	6.311225755077228E-6	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999979743765427	WITHOUT_CLASSIFICATION	2.0256234574155505E-6	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999843359820398	WITHOUT_CLASSIFICATION	1.5664017960174564E-5	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999068734044547	WITHOUT_CLASSIFICATION	9.312659554525222E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999568194641806	WITHOUT_CLASSIFICATION	4.318053581950075E-5	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999421832637276	WITHOUT_CLASSIFICATION	5.781673627236601E-5	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.999922241254631	WITHOUT_CLASSIFICATION	7.77587453689226E-5	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999832617069093	WITHOUT_CLASSIFICATION	1.6738293090622672E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999847053878309	WITHOUT_CLASSIFICATION	1.5294612169102088E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9994590667548682	WITHOUT_CLASSIFICATION	5.40933245131846E-4	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999872514167675	WITHOUT_CLASSIFICATION	1.2748583232531429E-5	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999693865711288	WITHOUT_CLASSIFICATION	3.061342887119966E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999708300337258	WITHOUT_CLASSIFICATION	2.9169966274232467E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999801425172349	WITHOUT_CLASSIFICATION	1.985748276518889E-5	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999485958154289	WITHOUT_CLASSIFICATION	5.1404184570976705E-5	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999618867882238	WITHOUT_CLASSIFICATION	3.8113211776106355E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999918202561138	WITHOUT_CLASSIFICATION	8.179743886229314E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999538687974805	WITHOUT_CLASSIFICATION	4.61312025195876E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999962120690973	WITHOUT_CLASSIFICATION	3.7879309027596334E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999443292619999	WITHOUT_CLASSIFICATION	5.5670738000110615E-5	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999987601799207	WITHOUT_CLASSIFICATION	1.2398200792715427E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999918942666685	WITHOUT_CLASSIFICATION	8.105733331576446E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999958604788113	WITHOUT_CLASSIFICATION	4.139521188646552E-6	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9998799855563495	WITHOUT_CLASSIFICATION	1.2001444365063429E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9997930288790514	WITHOUT_CLASSIFICATION	2.0697112094855412E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999914752895069	WITHOUT_CLASSIFICATION	8.524710493008196E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998342974195067	WITHOUT_CLASSIFICATION	1.6570258049328337E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.999909888828675	WITHOUT_CLASSIFICATION	9.011117132498251E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999970321958492	WITHOUT_CLASSIFICATION	2.9678041507866126E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9998838944444423	WITHOUT_CLASSIFICATION	1.1610555555774107E-4	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999971002203917	WITHOUT_CLASSIFICATION	2.899779608304497E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999617554323978	WITHOUT_CLASSIFICATION	3.824456760206502E-5	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9998711765694293	WITHOUT_CLASSIFICATION	1.288234305707964E-4	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.999954439232131	WITHOUT_CLASSIFICATION	4.5560767868932377E-5	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999190925433127	WITHOUT_CLASSIFICATION	8.090745668731643E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999942170296283	WITHOUT_CLASSIFICATION	5.7829703716581486E-6	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999987699507934	WITHOUT_CLASSIFICATION	1.2300492066555104E-6	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999838015613913	WITHOUT_CLASSIFICATION	1.6198438608637897E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999927047144087	WITHOUT_CLASSIFICATION	7.295285591336661E-6	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999861971855099	WITHOUT_CLASSIFICATION	1.3802814490105663E-5	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999275020467187	WITHOUT_CLASSIFICATION	7.249795328132728E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999349391663619	WITHOUT_CLASSIFICATION	6.506083363820845E-5	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9987292632585139	WITHOUT_CLASSIFICATION	0.001270736741486082	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999598101521278	WITHOUT_CLASSIFICATION	4.018984787228754E-5	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9992200186400673	WITHOUT_CLASSIFICATION	7.799813599327982E-4	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999648469390235	WITHOUT_CLASSIFICATION	3.5153060976475734E-5	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9997923936466572	WITHOUT_CLASSIFICATION	2.076063533428522E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.999827669733606	WITHOUT_CLASSIFICATION	1.723302663939968E-4	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999709394550571	WITHOUT_CLASSIFICATION	2.9060544942893585E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999550718283132	WITHOUT_CLASSIFICATION	4.492817168675209E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999771255960755	WITHOUT_CLASSIFICATION	2.2874403924348387E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.999968049116728	WITHOUT_CLASSIFICATION	3.195088327206287E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999814610436614	WITHOUT_CLASSIFICATION	1.8538956338719598E-5	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.999972137753012	WITHOUT_CLASSIFICATION	2.786224698793855E-5	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.999983189445445	WITHOUT_CLASSIFICATION	1.6810554555048617E-5	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999750582924398	WITHOUT_CLASSIFICATION	2.4941707560196944E-5	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999986031017739	WITHOUT_CLASSIFICATION	1.396898226132579E-6	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.999943792599016	WITHOUT_CLASSIFICATION	5.620740098399849E-5	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9998812378759356	WITHOUT_CLASSIFICATION	1.1876212406434269E-4	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999735829615944	WITHOUT_CLASSIFICATION	2.6417038405546146E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999945438042216	WITHOUT_CLASSIFICATION	5.4561957784762994E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999914752895069	WITHOUT_CLASSIFICATION	8.524710493008196E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999068734044547	WITHOUT_CLASSIFICATION	9.312659554525222E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999568194641806	WITHOUT_CLASSIFICATION	4.318053581950075E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9994590667548682	WITHOUT_CLASSIFICATION	5.40933245131846E-4	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999872514167675	WITHOUT_CLASSIFICATION	1.2748583232531429E-5	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999693865711288	WITHOUT_CLASSIFICATION	3.061342887119966E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999708300337258	WITHOUT_CLASSIFICATION	2.9169966274232467E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999801425172349	WITHOUT_CLASSIFICATION	1.985748276518889E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999848850173182	WITHOUT_CLASSIFICATION	1.5114982681926957E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999918202561138	WITHOUT_CLASSIFICATION	8.179743886229314E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999875365609967	WITHOUT_CLASSIFICATION	1.2463439003249662E-5	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9999589186333483	WITHOUT_CLASSIFICATION	4.10813666516843E-5	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999693090869934	WITHOUT_CLASSIFICATION	3.069091300661161E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999981063795133	WITHOUT_CLASSIFICATION	1.893620486739225E-6	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999990689558378	WITHOUT_CLASSIFICATION	9.310441622780845E-7	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999888350473257	WITHOUT_CLASSIFICATION	1.1164952674348555E-5	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999294595208267	WITHOUT_CLASSIFICATION	7.054047917333129E-5	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999530002432222	WITHOUT_CLASSIFICATION	4.699975677773655E-5	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.999997857103994	WITHOUT_CLASSIFICATION	2.1428960060046074E-6	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999457919157518	WITHOUT_CLASSIFICATION	5.4208084248204076E-5	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999424485496288	WITHOUT_CLASSIFICATION	5.755145037128214E-5	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999503825248579	WITHOUT_CLASSIFICATION	4.96174751420799E-5	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999699931735884	WITHOUT_CLASSIFICATION	3.0006826411621556E-5	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999878939462448	WITHOUT_CLASSIFICATION	1.2106053755167786E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999882471627465	WITHOUT_CLASSIFICATION	1.1752837253508208E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999882471627465	WITHOUT_CLASSIFICATION	1.1752837253508208E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999909809268912	WITHOUT_CLASSIFICATION	9.019073108745831E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999915207563178	WITHOUT_CLASSIFICATION	8.479243682153907E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999915207563178	WITHOUT_CLASSIFICATION	8.479243682153907E-6	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9998737806800021	WITHOUT_CLASSIFICATION	1.2621931999786168E-4	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9998290289504301	WITHOUT_CLASSIFICATION	1.7097104956984645E-4	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999869698152012	WITHOUT_CLASSIFICATION	1.303018479876034E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999945438042216	WITHOUT_CLASSIFICATION	5.4561957784762994E-6	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999907226160781	WITHOUT_CLASSIFICATION	9.277383921800751E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999862570043191	WITHOUT_CLASSIFICATION	1.3742995680968699E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999536803214075	WITHOUT_CLASSIFICATION	4.63196785925238E-5	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999919685915936	WITHOUT_CLASSIFICATION	8.031408406507973E-6	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999664650847647	WITHOUT_CLASSIFICATION	3.35349152353589E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999527295118461	WITHOUT_CLASSIFICATION	4.727048815386315E-5	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9998858818671332	WITHOUT_CLASSIFICATION	1.1411813286679357E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999238675900695	WITHOUT_CLASSIFICATION	7.613240993049743E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999685434524114	WITHOUT_CLASSIFICATION	3.1456547588593276E-5	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999574751905279	WITHOUT_CLASSIFICATION	4.252480947206499E-5	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9997873367503068	WITHOUT_CLASSIFICATION	2.126632496932052E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999752291093852	WITHOUT_CLASSIFICATION	2.4770890614820982E-5	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9997408989004986	WITHOUT_CLASSIFICATION	2.5910109950143446E-4	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999103790598526	WITHOUT_CLASSIFICATION	8.962094014732915E-5	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999781632311628	WITHOUT_CLASSIFICATION	2.1836768837173707E-5	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999905982686902	WITHOUT_CLASSIFICATION	9.40173130970573E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.999986057058039	WITHOUT_CLASSIFICATION	1.3942941960858077E-5	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9997358809399294	WITHOUT_CLASSIFICATION	2.6411906007068134E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9996866992889462	WITHOUT_CLASSIFICATION	3.1330071105380267E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999815460504476	WITHOUT_CLASSIFICATION	1.845394955233304E-5	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999909163783951	WITHOUT_CLASSIFICATION	9.083621604985576E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999863816171526	WITHOUT_CLASSIFICATION	1.3618382847469971E-5	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.999982818225166	WITHOUT_CLASSIFICATION	1.7181774833975942E-5	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999959766655495	WITHOUT_CLASSIFICATION	4.023334450583982E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999675424171539	WITHOUT_CLASSIFICATION	3.245758284600373E-5	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999819909529994	WITHOUT_CLASSIFICATION	1.8009047000455445E-5	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999298211020801	WITHOUT_CLASSIFICATION	7.017889792002268E-5	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999294862748309	WITHOUT_CLASSIFICATION	7.051372516906754E-5	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999961434933358	WITHOUT_CLASSIFICATION	3.856506664205648E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999979366186335	WITHOUT_CLASSIFICATION	2.06338136650111E-6	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999989143768043	WITHOUT_CLASSIFICATION	1.085623195656972E-6	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999980646359562	WITHOUT_CLASSIFICATION	1.935364043813936E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999880846418441	WITHOUT_CLASSIFICATION	1.1915358156018962E-5	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999796732317453	WITHOUT_CLASSIFICATION	2.0326768254623863E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995392559339	WITHOUT_CLASSIFICATION	4.607440661457625E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999770246221575	WITHOUT_CLASSIFICATION	2.297537784250836E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999582028226801	WITHOUT_CLASSIFICATION	4.1797177319866675E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999880846418441	WITHOUT_CLASSIFICATION	1.1915358156018962E-5	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9998841559203632	WITHOUT_CLASSIFICATION	1.1584407963686298E-4	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999727878072047	WITHOUT_CLASSIFICATION	2.721219279536492E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999727878072047	WITHOUT_CLASSIFICATION	2.721219279536492E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999727878072047	WITHOUT_CLASSIFICATION	2.721219279536492E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999711028407292	WITHOUT_CLASSIFICATION	2.8897159270731052E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999711028407292	WITHOUT_CLASSIFICATION	2.8897159270731052E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999711028407292	WITHOUT_CLASSIFICATION	2.8897159270731052E-5	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999961367080833	WITHOUT_CLASSIFICATION	3.86329191666045E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999961367080833	WITHOUT_CLASSIFICATION	3.86329191666045E-6	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999979663177729	WITHOUT_CLASSIFICATION	2.0336822270722944E-6	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9997542751322357	WITHOUT_CLASSIFICATION	2.457248677642164E-4	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999971921905801	WITHOUT_CLASSIFICATION	2.8078094198842816E-6	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999078800622279	WITHOUT_CLASSIFICATION	9.211993777204352E-5	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.999989156250949	WITHOUT_CLASSIFICATION	1.0843749050919314E-5	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.999988937630615	WITHOUT_CLASSIFICATION	1.1062369385056798E-5	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999816221232425	WITHOUT_CLASSIFICATION	1.8377876757483137E-5	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999959259577238	WITHOUT_CLASSIFICATION	4.074042276255872E-6	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999542133713872	WITHOUT_CLASSIFICATION	4.578662861275768E-5	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999773601898384	WITHOUT_CLASSIFICATION	2.263981016160871E-5	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.999995251041229	WITHOUT_CLASSIFICATION	4.748958770971439E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999845874658078	WITHOUT_CLASSIFICATION	1.54125341922309E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999890608416007	WITHOUT_CLASSIFICATION	1.0939158399447921E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9985767519977266	WITHOUT_CLASSIFICATION	0.0014232480022734468	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9997468644458967	WITHOUT_CLASSIFICATION	2.5313555410342285E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999952765535327	WITHOUT_CLASSIFICATION	4.723446467309667E-6	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.999981510779542	WITHOUT_CLASSIFICATION	1.8489220457941486E-5	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.999997326313077	WITHOUT_CLASSIFICATION	2.6736869229593196E-6	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999988607239685	WITHOUT_CLASSIFICATION	1.1392760315519345E-6	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999214589459968	WITHOUT_CLASSIFICATION	7.854105400325706E-5	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999978700674278	WITHOUT_CLASSIFICATION	2.1299325722211926E-6	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999858669862788	WITHOUT_CLASSIFICATION	1.4133013721323026E-5	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9997821729897975	WITHOUT_CLASSIFICATION	2.1782701020248485E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9997284444895468	WITHOUT_CLASSIFICATION	2.7155551045324075E-4	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999945288888014	WITHOUT_CLASSIFICATION	5.4711111986274195E-6	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999603697877806	WITHOUT_CLASSIFICATION	3.9630212219400254E-5	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9998832188801848	WITHOUT_CLASSIFICATION	1.1678111981520075E-4	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.999896483989242	WITHOUT_CLASSIFICATION	1.0351601075802067E-4	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9998887421262456	WITHOUT_CLASSIFICATION	1.1125787375437974E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999882002576542	WITHOUT_CLASSIFICATION	1.179974234580081E-4	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999703812720456	WITHOUT_CLASSIFICATION	2.9618727954402622E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999750180754866	WITHOUT_CLASSIFICATION	2.498192451346414E-5	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999730754030385	WITHOUT_CLASSIFICATION	2.6924596961474565E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9998711629280399	WITHOUT_CLASSIFICATION	1.2883707196017558E-4	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999765674884857	WITHOUT_CLASSIFICATION	2.3432511514164625E-5	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9999962788170846	WITHOUT_CLASSIFICATION	3.721182915406879E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999882002576542	WITHOUT_CLASSIFICATION	1.179974234580081E-4	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999749649470575	WITHOUT_CLASSIFICATION	2.5035052942529572E-5	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999742579237441	WITHOUT_CLASSIFICATION	2.574207625598741E-5	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999573768381613	WITHOUT_CLASSIFICATION	4.262316183872676E-5	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.999990984108358	WITHOUT_CLASSIFICATION	9.015891642046092E-6	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9998705763343562	WITHOUT_CLASSIFICATION	1.294236656438199E-4	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999720805995548	WITHOUT_CLASSIFICATION	2.7919400445340185E-5	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999666685950672	WITHOUT_CLASSIFICATION	3.333140493278331E-5	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9993626972434244	WITHOUT_CLASSIFICATION	6.373027565755281E-4	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999964937631904	WITHOUT_CLASSIFICATION	3.5062368095898013E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9998907848934422	WITHOUT_CLASSIFICATION	1.0921510655778033E-4	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999822338436865	WITHOUT_CLASSIFICATION	1.776615631354951E-5	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999914069304364	WITHOUT_CLASSIFICATION	8.593069563561506E-6	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999785108426477	WITHOUT_CLASSIFICATION	2.148915735241116E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999749649470575	WITHOUT_CLASSIFICATION	2.5035052942529572E-5	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999278120310868	WITHOUT_CLASSIFICATION	7.218796891310976E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999866505291704	WITHOUT_CLASSIFICATION	1.3349470829615002E-5	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999826130118722	WITHOUT_CLASSIFICATION	1.7386988127712736E-5	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9999981973245651	WITHOUT_CLASSIFICATION	1.8026754350175588E-6	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999532790034296	WITHOUT_CLASSIFICATION	4.672099657045197E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999272507034657	WITHOUT_CLASSIFICATION	7.274929653424997E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944976586397	WITHOUT_CLASSIFICATION	5.502341360415352E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999927207982432	WITHOUT_CLASSIFICATION	7.279201756780845E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999852867487155	WITHOUT_CLASSIFICATION	1.4713251284701473E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999649418729228	WITHOUT_CLASSIFICATION	3.5058127077101184E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999769540678758	WITHOUT_CLASSIFICATION	2.3045932124189687E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999941750526651	WITHOUT_CLASSIFICATION	5.824947334895865E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999858380499884	WITHOUT_CLASSIFICATION	1.4161950011578253E-5	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999652646821919	WITHOUT_CLASSIFICATION	3.4735317808118233E-5	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9998245222390238	WITHOUT_CLASSIFICATION	1.754777609760753E-4	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9998512767002521	WITHOUT_CLASSIFICATION	1.4872329974794163E-4	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.999963736470153	WITHOUT_CLASSIFICATION	3.6263529846944336E-5	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999712471494919	WITHOUT_CLASSIFICATION	2.8752850508158847E-5	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9999153544524675	WITHOUT_CLASSIFICATION	8.464554753249027E-5	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999505277373045	WITHOUT_CLASSIFICATION	4.947226269546415E-5	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999931275789876	WITHOUT_CLASSIFICATION	6.87242101226059E-6	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999256993028166	WITHOUT_CLASSIFICATION	7.430069718349063E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999992655103789	WITHOUT_CLASSIFICATION	7.344896210727238E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999472940427961	WITHOUT_CLASSIFICATION	5.270595720391919E-5	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9994479139710191	WITHOUT_CLASSIFICATION	5.520860289809254E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999919405101156	WITHOUT_CLASSIFICATION	8.05948988426827E-6	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.999991316898226	WITHOUT_CLASSIFICATION	8.68310177407557E-6	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999558163272854	WITHOUT_CLASSIFICATION	4.41836727146245E-5	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9998813495079717	WITHOUT_CLASSIFICATION	1.1865049202823098E-4	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999708455164454	WITHOUT_CLASSIFICATION	2.9154483554537905E-5	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.999976448661571	WITHOUT_CLASSIFICATION	2.3551338429099813E-5	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999727782616324	WITHOUT_CLASSIFICATION	2.7221738367483822E-5	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999989681939286	WITHOUT_CLASSIFICATION	1.0318060713891194E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999986671358719	WITHOUT_CLASSIFICATION	1.3328641280921252E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999791694456074	WITHOUT_CLASSIFICATION	2.0830554392619823E-5	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999972223277648	WITHOUT_CLASSIFICATION	2.7776722351808185E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.999976448661571	WITHOUT_CLASSIFICATION	2.3551338429099813E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999989879108533	WITHOUT_CLASSIFICATION	1.0120891466686726E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999447243866706	WITHOUT_CLASSIFICATION	5.527561332936887E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9998558944632215	WITHOUT_CLASSIFICATION	1.4410553677849812E-4	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999330327403536	WITHOUT_CLASSIFICATION	6.69672596463267E-5	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999499704417028	WITHOUT_CLASSIFICATION	5.002955829716225E-5	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999769124666938	WITHOUT_CLASSIFICATION	2.3087533306216175E-5	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999766784945898	WITHOUT_CLASSIFICATION	2.3321505410184037E-5	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.999533506101402	WITHOUT_CLASSIFICATION	4.6649389859792617E-4	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.99998437988576	WITHOUT_CLASSIFICATION	1.5620114239975806E-5	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999936083662874	WITHOUT_CLASSIFICATION	6.391633712650522E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999561442276196	WITHOUT_CLASSIFICATION	4.385577238049742E-5	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999598387894236	WITHOUT_CLASSIFICATION	4.01612105763915E-5	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.999980814202504	WITHOUT_CLASSIFICATION	1.9185797496062173E-5	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999986278236062	WITHOUT_CLASSIFICATION	1.3721763937842917E-6	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999696757118824	WITHOUT_CLASSIFICATION	3.032428811759059E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999891961748599	WITHOUT_CLASSIFICATION	1.0803825139956573E-5	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999817512044991	WITHOUT_CLASSIFICATION	1.8248795500914092E-5	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999987422772921	WITHOUT_CLASSIFICATION	1.257722707900398E-6	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999746075696468	WITHOUT_CLASSIFICATION	2.539243035324768E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999819891628094	WITHOUT_CLASSIFICATION	1.801083719058427E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999890608416007	WITHOUT_CLASSIFICATION	1.0939158399447921E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999890608416007	WITHOUT_CLASSIFICATION	1.0939158399447921E-5	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999962674932023	WITHOUT_CLASSIFICATION	3.732506797638355E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9985767519977266	WITHOUT_CLASSIFICATION	0.0014232480022734468	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999996294853719	WITHOUT_CLASSIFICATION	3.705146280949739E-7	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999983140617261	WITHOUT_CLASSIFICATION	1.6859382738686774E-6	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9998257761068696	WITHOUT_CLASSIFICATION	1.7422389313043624E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999539648644857	WITHOUT_CLASSIFICATION	4.6035135514300365E-5	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9999686597271077	WITHOUT_CLASSIFICATION	3.134027289229563E-5	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999685996105688	WITHOUT_CLASSIFICATION	3.140038943121939E-5	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999370839863714	WITHOUT_CLASSIFICATION	6.291601362868644E-5	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9998672917127821	WITHOUT_CLASSIFICATION	1.3270828721787282E-4	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999981660152016	WITHOUT_CLASSIFICATION	1.8339847983274098E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999990430622624	WITHOUT_CLASSIFICATION	9.5693773765356E-7	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999944360250611	WITHOUT_CLASSIFICATION	5.563974938843625E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999897858114735	WITHOUT_CLASSIFICATION	1.0214188526488084E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999484751172791	WITHOUT_CLASSIFICATION	5.152488272079548E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999868048395405	WITHOUT_CLASSIFICATION	1.3195160459467795E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999589725016942	WITHOUT_CLASSIFICATION	4.102749830587666E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999974788148657	WITHOUT_CLASSIFICATION	2.521185134384082E-6	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999902718107047	WITHOUT_CLASSIFICATION	9.728189295264978E-6	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999851174408906	WITHOUT_CLASSIFICATION	1.4882559109501756E-5	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9995083147905777	WITHOUT_CLASSIFICATION	4.916852094223128E-4	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999465155019406	WITHOUT_CLASSIFICATION	5.348449805948062E-5	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999997228206294	WITHOUT_CLASSIFICATION	2.7717937057716056E-7	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999955330742601	WITHOUT_CLASSIFICATION	4.466925739814133E-6	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999986665568154	WITHOUT_CLASSIFICATION	1.3334431845584238E-6	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999777456769582	WITHOUT_CLASSIFICATION	2.2254323041788937E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999649392104992	WITHOUT_CLASSIFICATION	3.506078950085607E-5	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999977839624492	WITHOUT_CLASSIFICATION	2.216037550704487E-6	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999655764628115	WITHOUT_CLASSIFICATION	3.442353718854756E-5	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9999630092942908	WITHOUT_CLASSIFICATION	3.699070570913134E-5	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999717847438405	WITHOUT_CLASSIFICATION	2.821525615949483E-5	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999849558751157	WITHOUT_CLASSIFICATION	1.5044124884331761E-5	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999319557276638	WITHOUT_CLASSIFICATION	6.804427233615166E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999528743292614	WITHOUT_CLASSIFICATION	4.7125670738559414E-5	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999593241398055	WITHOUT_CLASSIFICATION	4.067586019452208E-5	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999864873514502	WITHOUT_CLASSIFICATION	1.3512648549785906E-5	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999601640799847	WITHOUT_CLASSIFICATION	3.9835920015282545E-5	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999984180867479	WITHOUT_CLASSIFICATION	1.5819132520372619E-6	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.999992750987218	WITHOUT_CLASSIFICATION	7.249012782137262E-6	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999940632897814	WITHOUT_CLASSIFICATION	5.936710218622067E-6	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9997832857280253	WITHOUT_CLASSIFICATION	2.1671427197458173E-4	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999526388214243	WITHOUT_CLASSIFICATION	4.7361178575758885E-5	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999505876041523	WITHOUT_CLASSIFICATION	4.9412395847749125E-5	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9994585466369923	WITHOUT_CLASSIFICATION	5.414533630076408E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9994208361148699	WITHOUT_CLASSIFICATION	5.791638851300643E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999848549769428	WITHOUT_CLASSIFICATION	1.5145023057270823E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999381208874106	WITHOUT_CLASSIFICATION	6.187911258944505E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9998966205851489	WITHOUT_CLASSIFICATION	1.0337941485103501E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999376452277865	WITHOUT_CLASSIFICATION	6.235477221343139E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999964008393231	WITHOUT_CLASSIFICATION	3.599160676884583E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999819891628094	WITHOUT_CLASSIFICATION	1.801083719058427E-5	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999816221232425	WITHOUT_CLASSIFICATION	1.8377876757483137E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9999869630249839	WITHOUT_CLASSIFICATION	1.3036975016106546E-5	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999117225208167	WITHOUT_CLASSIFICATION	8.82774791832663E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999892130161832	WITHOUT_CLASSIFICATION	1.078698381681684E-5	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999970065240387	WITHOUT_CLASSIFICATION	2.9934759613678776E-6	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999866854863856	WITHOUT_CLASSIFICATION	1.331451361439018E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999542366442198	WITHOUT_CLASSIFICATION	4.57633557801696E-5	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999981685595796	WITHOUT_CLASSIFICATION	1.831440420409386E-6	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9999828947401485	WITHOUT_CLASSIFICATION	1.7105259851437615E-5	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999851643917242	WITHOUT_CLASSIFICATION	1.4835608275819533E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999708647121831	WITHOUT_CLASSIFICATION	2.9135287816993588E-5	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.999989887948013	WITHOUT_CLASSIFICATION	1.0112051986888734E-5	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999792645841538	WITHOUT_CLASSIFICATION	2.0735415846246646E-5	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999995478336362	WITHOUT_CLASSIFICATION	4.521663636909135E-7	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999164009988686	WITHOUT_CLASSIFICATION	8.359900113142102E-5	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999767522529935	WITHOUT_CLASSIFICATION	2.324774700650957E-5	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999920830726693	WITHOUT_CLASSIFICATION	7.916927330592488E-6	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.999997661741367	WITHOUT_CLASSIFICATION	2.338258632982073E-6	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999949882726049	WITHOUT_CLASSIFICATION	5.01172739509645E-6	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999502337190733	WITHOUT_CLASSIFICATION	4.976628092670285E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999495324411095	WITHOUT_CLASSIFICATION	5.0467558890543616E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999495324411095	WITHOUT_CLASSIFICATION	5.0467558890543616E-5	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.999995743285707	WITHOUT_CLASSIFICATION	4.256714293030652E-6	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999866785043463	WITHOUT_CLASSIFICATION	1.3321495653663754E-5	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9998043737576939	WITHOUT_CLASSIFICATION	1.9562624230597792E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999989209866569	WITHOUT_CLASSIFICATION	1.079013343074246E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.999999480829879	WITHOUT_CLASSIFICATION	5.191701209901578E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999992729192854	WITHOUT_CLASSIFICATION	7.2708071464961E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999950901549649	WITHOUT_CLASSIFICATION	4.909845035044025E-6	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999145208844816	WITHOUT_CLASSIFICATION	8.547911551842481E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9994992212034574	WITHOUT_CLASSIFICATION	5.007787965425843E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9988578526651513	WITHOUT_CLASSIFICATION	0.001142147334848666	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999861885752637	WITHOUT_CLASSIFICATION	1.3811424736337281E-5	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999956248977431	WITHOUT_CLASSIFICATION	4.3751022569337416E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999872855719126	WITHOUT_CLASSIFICATION	1.271442808724269E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999996138403289	WITHOUT_CLASSIFICATION	3.8615967108305257E-7	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9993908059673817	WITHOUT_CLASSIFICATION	6.091940326181709E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.999991729422722	WITHOUT_CLASSIFICATION	8.270577278136796E-6	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999911274941872	WITHOUT_CLASSIFICATION	8.872505812744319E-6	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999803771935131	WITHOUT_CLASSIFICATION	1.962280648694906E-5	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999924854416579	WITHOUT_CLASSIFICATION	7.514558342081374E-6	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999982443041358	WITHOUT_CLASSIFICATION	1.7556958642224599E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9992026881424051	WITHOUT_CLASSIFICATION	7.973118575949241E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999986891467297	WITHOUT_CLASSIFICATION	1.310853270304514E-5	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999186885529354	WITHOUT_CLASSIFICATION	8.131144706450974E-5	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9995479545423855	WITHOUT_CLASSIFICATION	4.5204545761437623E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9993908059673817	WITHOUT_CLASSIFICATION	6.091940326181709E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9993908059673817	WITHOUT_CLASSIFICATION	6.091940326181709E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9994148346575228	WITHOUT_CLASSIFICATION	5.851653424772583E-4	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9994946828177034	WITHOUT_CLASSIFICATION	5.053171822965407E-4	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9994784904435756	WITHOUT_CLASSIFICATION	5.215095564243578E-4	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999922448965147	WITHOUT_CLASSIFICATION	7.755103485316097E-6	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999229705231718	WITHOUT_CLASSIFICATION	7.702947682815728E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999951880355084	WITHOUT_CLASSIFICATION	4.811964491722704E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999928541310581	WITHOUT_CLASSIFICATION	7.145868941952476E-6	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999981837635663	WITHOUT_CLASSIFICATION	1.8162364336564533E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999943199180815	WITHOUT_CLASSIFICATION	5.680081918452306E-6	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9997098118963378	WITHOUT_CLASSIFICATION	2.901881036622419E-4	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9996866100038604	WITHOUT_CLASSIFICATION	3.133899961396798E-4	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9997935655893776	WITHOUT_CLASSIFICATION	2.0643441062242535E-4	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999433308040694	WITHOUT_CLASSIFICATION	5.6669195930718016E-5	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999919618574427	WITHOUT_CLASSIFICATION	8.038142557307798E-6	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9998536047086678	WITHOUT_CLASSIFICATION	1.4639529133220596E-4	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999370958059588	WITHOUT_CLASSIFICATION	6.290419404121791E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9999986522821536	WITHOUT_CLASSIFICATION	1.3477178464430998E-6	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9998927747689982	WITHOUT_CLASSIFICATION	1.0722523100183095E-4	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9999879318325003	WITHOUT_CLASSIFICATION	1.20681674996233E-5	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.999994386317063	WITHOUT_CLASSIFICATION	5.613682936963392E-6	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999965043901751	WITHOUT_CLASSIFICATION	3.4956098248589042E-6	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.999997423688606	WITHOUT_CLASSIFICATION	2.5763113939377205E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999569168678185	WITHOUT_CLASSIFICATION	4.3083132181511376E-5	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999959227705306	WITHOUT_CLASSIFICATION	4.077229469403986E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999967761102352	WITHOUT_CLASSIFICATION	3.2238897648516174E-6	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999817776632282	WITHOUT_CLASSIFICATION	1.8222336771898433E-5	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999829636657532	WITHOUT_CLASSIFICATION	1.703633424669507E-5	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9995966460201762	WITHOUT_CLASSIFICATION	4.0335397982375865E-4	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999909746023202	WITHOUT_CLASSIFICATION	9.02539767983431E-6	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999939019492343	WITHOUT_CLASSIFICATION	6.098050765695334E-6	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999438224283346	WITHOUT_CLASSIFICATION	5.617757166551467E-5	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999636362917674	WITHOUT_CLASSIFICATION	3.6363708232520404E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999935823197904	WITHOUT_CLASSIFICATION	6.417680209575233E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999978534062999	WITHOUT_CLASSIFICATION	2.146593700106644E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999952130367623	WITHOUT_CLASSIFICATION	4.786963237650753E-6	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999976677866607	WITHOUT_CLASSIFICATION	2.3322133393157846E-6	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9999862601336114	WITHOUT_CLASSIFICATION	1.3739866388757657E-5	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999907764709629	WITHOUT_CLASSIFICATION	9.22352903720945E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999835459278639	WITHOUT_CLASSIFICATION	1.6454072136083492E-5	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.999992704088029	WITHOUT_CLASSIFICATION	7.295911971016636E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999996653254565	WITHOUT_CLASSIFICATION	3.346745435256449E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.999993699342539	WITHOUT_CLASSIFICATION	6.30065746094383E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999926212523553	WITHOUT_CLASSIFICATION	7.3787476447374495E-6	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999749294983908	WITHOUT_CLASSIFICATION	2.50705016092238E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999954682664034	WITHOUT_CLASSIFICATION	4.5317335965896066E-6	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999985295012028	WITHOUT_CLASSIFICATION	1.470498797111551E-6	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999979469909944	WITHOUT_CLASSIFICATION	2.0530090055847268E-6	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999965389776035	WITHOUT_CLASSIFICATION	3.461022396454407E-6	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999741059541597	WITHOUT_CLASSIFICATION	2.589404584034206E-5	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999990555115066	WITHOUT_CLASSIFICATION	9.444884934227967E-7	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999442147630926	WITHOUT_CLASSIFICATION	5.578523690753941E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999091393591797	WITHOUT_CLASSIFICATION	9.086064082029465E-5	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999664555756893	WITHOUT_CLASSIFICATION	3.354442431061108E-5	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999853734614229	WITHOUT_CLASSIFICATION	1.4626538577095158E-5	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9997518878250682	WITHOUT_CLASSIFICATION	2.481121749317706E-4	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999935182088694	WITHOUT_CLASSIFICATION	6.481791130684299E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999387841981034	WITHOUT_CLASSIFICATION	6.121580189651314E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.999608604422672	WITHOUT_CLASSIFICATION	3.9139557732805575E-4	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.999989739689118	WITHOUT_CLASSIFICATION	1.0260310881908453E-5	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9999993104690594	WITHOUT_CLASSIFICATION	6.895309404468978E-7	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999955220991102	WITHOUT_CLASSIFICATION	4.4779008896944705E-6	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999981016162806	WITHOUT_CLASSIFICATION	1.8983837194137015E-6	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999973478337596	WITHOUT_CLASSIFICATION	2.652166240358468E-6	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999994773144059	WITHOUT_CLASSIFICATION	5.226855941140531E-7	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9998286115188383	WITHOUT_CLASSIFICATION	1.7138848116160879E-4	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999348330172648	WITHOUT_CLASSIFICATION	6.516698273515235E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999984495974686	WITHOUT_CLASSIFICATION	1.5504025313788719E-6	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.999994720093097	WITHOUT_CLASSIFICATION	5.279906902995617E-6	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999864156537122	WITHOUT_CLASSIFICATION	1.3584346287839623E-5	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999997521429158	WITHOUT_CLASSIFICATION	2.4785708419766743E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999835459278639	WITHOUT_CLASSIFICATION	1.6454072136083492E-5	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999915729009182	WITHOUT_CLASSIFICATION	8.42709908175225E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999959334764735	WITHOUT_CLASSIFICATION	4.0665235265045805E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999959334764735	WITHOUT_CLASSIFICATION	4.0665235265045805E-5	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999901084773171	WITHOUT_CLASSIFICATION	9.891522682879314E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999932044166676	WITHOUT_CLASSIFICATION	6.795583332278303E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999932044166676	WITHOUT_CLASSIFICATION	6.795583332278303E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999588169730435	WITHOUT_CLASSIFICATION	4.1183026956482296E-5	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999731736996552	WITHOUT_CLASSIFICATION	2.6826300344805708E-5	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999797738184009	WITHOUT_CLASSIFICATION	2.0226181599158223E-5	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999853792520207	WITHOUT_CLASSIFICATION	1.4620747979338329E-5	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999856932844005	WITHOUT_CLASSIFICATION	1.4306715599471318E-5	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999349850594037	WITHOUT_CLASSIFICATION	6.501494059620938E-5	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999837874737786	WITHOUT_CLASSIFICATION	1.621252622147514E-5	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999801153524835	WITHOUT_CLASSIFICATION	1.988464751647136E-5	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999971539554002	WITHOUT_CLASSIFICATION	2.846044599744781E-6	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9992606671845369	WITHOUT_CLASSIFICATION	7.39332815463118E-4	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999930268808637	WITHOUT_CLASSIFICATION	6.973119136418106E-6	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999945911537411	WITHOUT_CLASSIFICATION	5.408846258849905E-6	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999371677248999	WITHOUT_CLASSIFICATION	6.28322751001136E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9998856618995562	WITHOUT_CLASSIFICATION	1.1433810044377782E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.999862501440763	WITHOUT_CLASSIFICATION	1.3749855923684022E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999648354091037	WITHOUT_CLASSIFICATION	3.5164590896223015E-5	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999864155765907	WITHOUT_CLASSIFICATION	1.3584423409314406E-5	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999991308327617	WITHOUT_CLASSIFICATION	8.691672382313873E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999950723819968	WITHOUT_CLASSIFICATION	4.927618003264441E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999932044166676	WITHOUT_CLASSIFICATION	6.795583332278303E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999588169730435	WITHOUT_CLASSIFICATION	4.1183026956482296E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999648354091037	WITHOUT_CLASSIFICATION	3.5164590896223015E-5	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999900000451374	WITHOUT_CLASSIFICATION	9.999954862511358E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999881999884864	WITHOUT_CLASSIFICATION	1.1800011513596433E-5	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999835317022366	WITHOUT_CLASSIFICATION	1.6468297763381523E-5	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9998287517188692	WITHOUT_CLASSIFICATION	1.7124828113067618E-4	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999643717708742	WITHOUT_CLASSIFICATION	3.562822912592487E-5	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999777442614017	WITHOUT_CLASSIFICATION	2.2255738598170193E-5	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999919045796977	WITHOUT_CLASSIFICATION	8.095420302341106E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999587676191791	WITHOUT_CLASSIFICATION	4.1232380820861595E-5	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9998046346469456	WITHOUT_CLASSIFICATION	1.953653530545505E-4	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999232205548803	WITHOUT_CLASSIFICATION	7.677944511977179E-5	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9994222620018186	WITHOUT_CLASSIFICATION	5.777379981813558E-4	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999539727046036	WITHOUT_CLASSIFICATION	4.602729539632365E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.999996922025382	WITHOUT_CLASSIFICATION	3.077974617994894E-6	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999964933750951	WITHOUT_CLASSIFICATION	3.5066249048670807E-6	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9696680018850361	WITHOUT_CLASSIFICATION	0.030331998114963857	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999506490296891	WITHOUT_CLASSIFICATION	4.9350970310861404E-5	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999869746500951	WITHOUT_CLASSIFICATION	1.3025349904881975E-5	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999867551047259	WITHOUT_CLASSIFICATION	1.324489527412534E-5	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999734919355799	WITHOUT_CLASSIFICATION	2.6508064420031634E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999845685513483	WITHOUT_CLASSIFICATION	1.5431448651686727E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999323695502887	WITHOUT_CLASSIFICATION	6.763044971125104E-5	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9998908364164069	WITHOUT_CLASSIFICATION	1.0916358359319849E-4	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999428005244658	WITHOUT_CLASSIFICATION	5.7199475534268374E-5	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999878607166506	WITHOUT_CLASSIFICATION	1.2139283349443758E-5	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999883367281626	WITHOUT_CLASSIFICATION	1.1663271837325394E-5	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999900745157444	WITHOUT_CLASSIFICATION	9.925484255602314E-6	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999188056019199	WITHOUT_CLASSIFICATION	8.11943980799795E-5	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999716262976985	WITHOUT_CLASSIFICATION	2.8373702301524276E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999827835771626	WITHOUT_CLASSIFICATION	1.721642283738871E-5	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999966442869647	WITHOUT_CLASSIFICATION	3.3557130353581635E-6	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9988728891491571	WITHOUT_CLASSIFICATION	0.001127110850843001	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999940034907684	WITHOUT_CLASSIFICATION	5.996509231585135E-6	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999531295897048	WITHOUT_CLASSIFICATION	4.687041029515095E-5	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999103117766601	WITHOUT_CLASSIFICATION	8.968822333977583E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999572471508207	WITHOUT_CLASSIFICATION	4.275284917922795E-5	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999910949535108	WITHOUT_CLASSIFICATION	8.90504648928413E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999868387752046	WITHOUT_CLASSIFICATION	1.3161224795576716E-5	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999985760140614	WITHOUT_CLASSIFICATION	1.4239859385878293E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999756520182423	WITHOUT_CLASSIFICATION	2.4347981757674477E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999756520182423	WITHOUT_CLASSIFICATION	2.4347981757674477E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999964723316307	WITHOUT_CLASSIFICATION	3.527668369184947E-6	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999985539545911	WITHOUT_CLASSIFICATION	1.446045408772284E-6	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999985539545911	WITHOUT_CLASSIFICATION	1.446045408772284E-6	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999858431989554	WITHOUT_CLASSIFICATION	1.4156801044586131E-5	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999858431989554	WITHOUT_CLASSIFICATION	1.4156801044586131E-5	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999916372768751	WITHOUT_CLASSIFICATION	8.3627231248776E-6	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.999976536169038	WITHOUT_CLASSIFICATION	2.346383096204686E-5	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.999995285392658	WITHOUT_CLASSIFICATION	4.714607342052873E-6	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999991488367619	WITHOUT_CLASSIFICATION	8.511632380427584E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999977506361386	WITHOUT_CLASSIFICATION	2.249363861344111E-6	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999877689772261	WITHOUT_CLASSIFICATION	1.2231022773863917E-5	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999924773992277	WITHOUT_CLASSIFICATION	7.52260077225573E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999925238609215	WITHOUT_CLASSIFICATION	7.476139078368837E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999756520182423	WITHOUT_CLASSIFICATION	2.4347981757674477E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9997681992942702	WITHOUT_CLASSIFICATION	2.3180070572992382E-4	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999865445409496	WITHOUT_CLASSIFICATION	1.3455459050383725E-5	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999607204106793	WITHOUT_CLASSIFICATION	3.9279589320626506E-5	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9998941889949798	WITHOUT_CLASSIFICATION	1.0581100502014709E-4	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999747246419886	WITHOUT_CLASSIFICATION	2.527535801140472E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999955969024712	WITHOUT_CLASSIFICATION	4.403097528902723E-6	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999952551040565	WITHOUT_CLASSIFICATION	4.744895943485355E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999714428470983	WITHOUT_CLASSIFICATION	2.855715290170759E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999899693615294	WITHOUT_CLASSIFICATION	1.0030638470602572E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999899693615294	WITHOUT_CLASSIFICATION	1.0030638470602572E-5	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9997264924793251	WITHOUT_CLASSIFICATION	2.735075206748855E-4	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999988362501213	WITHOUT_CLASSIFICATION	1.1637498786876362E-6	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999832253754236	WITHOUT_CLASSIFICATION	1.6774624576393594E-5	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999881280660922	WITHOUT_CLASSIFICATION	1.1871933907790486E-5	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.999990593584479	WITHOUT_CLASSIFICATION	9.406415521074667E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999960173500771	WITHOUT_CLASSIFICATION	3.982649922844003E-6	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999974230992085	WITHOUT_CLASSIFICATION	2.576900791590975E-6	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999987855474758	WITHOUT_CLASSIFICATION	1.2144525242869715E-6	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999916862344481	WITHOUT_CLASSIFICATION	8.31376555192836E-6	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999960173500771	WITHOUT_CLASSIFICATION	3.982649922844003E-6	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999835620370964	WITHOUT_CLASSIFICATION	1.6437962903645296E-5	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999714661778188	WITHOUT_CLASSIFICATION	2.8533822181181338E-5	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.999994724030585	WITHOUT_CLASSIFICATION	5.2759694150410266E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9999828100588569	WITHOUT_CLASSIFICATION	1.718994114302761E-5	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999958878559588	WITHOUT_CLASSIFICATION	4.112144041151607E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.999985225035216	WITHOUT_CLASSIFICATION	1.4774964784006096E-5	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999672866403482	WITHOUT_CLASSIFICATION	3.271335965174421E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9998786002705039	WITHOUT_CLASSIFICATION	1.2139972949608396E-4	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9998786002705039	WITHOUT_CLASSIFICATION	1.2139972949608396E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9998727745716738	WITHOUT_CLASSIFICATION	1.2722542832621395E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9998727745716738	WITHOUT_CLASSIFICATION	1.2722542832621395E-4	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9998363426421426	WITHOUT_CLASSIFICATION	1.6365735785751326E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998658139995961	WITHOUT_CLASSIFICATION	1.34186000403817E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998658139995961	WITHOUT_CLASSIFICATION	1.34186000403817E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9998425449949129	WITHOUT_CLASSIFICATION	1.5745500508714487E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998413981994266	WITHOUT_CLASSIFICATION	1.5860180057342919E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998413981994266	WITHOUT_CLASSIFICATION	1.5860180057342919E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9998635617453296	WITHOUT_CLASSIFICATION	1.3643825467044888E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9998992482509442	WITHOUT_CLASSIFICATION	1.0075174905581462E-4	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999924358494812	WITHOUT_CLASSIFICATION	7.564150518811891E-6	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999879003372624	WITHOUT_CLASSIFICATION	1.2099662737670333E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999959102293915	WITHOUT_CLASSIFICATION	4.089770608537196E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9998801379925687	WITHOUT_CLASSIFICATION	1.198620074313248E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9998801379925687	WITHOUT_CLASSIFICATION	1.198620074313248E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998673182061403	WITHOUT_CLASSIFICATION	1.3268179385972424E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998673182061403	WITHOUT_CLASSIFICATION	1.3268179385972424E-4	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999956981885021	WITHOUT_CLASSIFICATION	4.301811497804479E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9998840446859902	WITHOUT_CLASSIFICATION	1.159553140097323E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999492715297212	WITHOUT_CLASSIFICATION	5.072847027873634E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999381208874106	WITHOUT_CLASSIFICATION	6.187911258944505E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9998786002705039	WITHOUT_CLASSIFICATION	1.2139972949608396E-4	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999856922854032	WITHOUT_CLASSIFICATION	1.4307714596696427E-5	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999838465657893	WITHOUT_CLASSIFICATION	1.6153434210674875E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9998727745716738	WITHOUT_CLASSIFICATION	1.2722542832621395E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9998727745716738	WITHOUT_CLASSIFICATION	1.2722542832621395E-4	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9998363426421426	WITHOUT_CLASSIFICATION	1.6365735785751326E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998658139995961	WITHOUT_CLASSIFICATION	1.34186000403817E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998658139995961	WITHOUT_CLASSIFICATION	1.34186000403817E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998658139995961	WITHOUT_CLASSIFICATION	1.34186000403817E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9998425449949129	WITHOUT_CLASSIFICATION	1.5745500508714487E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998413981994266	WITHOUT_CLASSIFICATION	1.5860180057342919E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9998635617453296	WITHOUT_CLASSIFICATION	1.3643825467044888E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9998992482509442	WITHOUT_CLASSIFICATION	1.0075174905581462E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9998801379925687	WITHOUT_CLASSIFICATION	1.198620074313248E-4	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.999996225117858	WITHOUT_CLASSIFICATION	3.7748821419347665E-6	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999968165237784	WITHOUT_CLASSIFICATION	3.183476221607801E-6	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999972571099716	WITHOUT_CLASSIFICATION	2.7428900284909435E-6	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999887699912261	WITHOUT_CLASSIFICATION	1.1230008773838492E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9998801379925687	WITHOUT_CLASSIFICATION	1.198620074313248E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998673182061403	WITHOUT_CLASSIFICATION	1.3268179385972424E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998673182061403	WITHOUT_CLASSIFICATION	1.3268179385972424E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999492715297212	WITHOUT_CLASSIFICATION	5.072847027873634E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999492715297212	WITHOUT_CLASSIFICATION	5.072847027873634E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999896922168094	WITHOUT_CLASSIFICATION	1.0307783190556062E-5	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9998609925685391	WITHOUT_CLASSIFICATION	1.3900743146091102E-4	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9998780735536422	WITHOUT_CLASSIFICATION	1.2192644635770549E-4	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9998362764499971	WITHOUT_CLASSIFICATION	1.6372355000302135E-4	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999772420790412	WITHOUT_CLASSIFICATION	2.275792095885502E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9998646313327961	WITHOUT_CLASSIFICATION	1.3536866720387808E-4	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999419334618987	WITHOUT_CLASSIFICATION	5.806653810127785E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999945858341491	WITHOUT_CLASSIFICATION	5.4141658508951895E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.999943494647714	WITHOUT_CLASSIFICATION	5.6505352286004074E-5	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999965201430949	WITHOUT_CLASSIFICATION	3.4798569050551967E-6	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999822913180056	WITHOUT_CLASSIFICATION	1.7708681994341193E-5	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9996835579925314	WITHOUT_CLASSIFICATION	3.164420074686288E-4	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9998915657158135	WITHOUT_CLASSIFICATION	1.0843428418653994E-4	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9998485525188785	WITHOUT_CLASSIFICATION	1.5144748112150684E-4	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999233333712814	WITHOUT_CLASSIFICATION	7.66666287186188E-5	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999935629546116	WITHOUT_CLASSIFICATION	6.437045388331368E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.999990922877241	WITHOUT_CLASSIFICATION	9.077122759079474E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999952013684541	WITHOUT_CLASSIFICATION	4.798631545895773E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999861258341969	WITHOUT_CLASSIFICATION	1.38741658030006E-5	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999964029897971	WITHOUT_CLASSIFICATION	3.597010202897374E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999930642295771	WITHOUT_CLASSIFICATION	6.935770422826693E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9999189636646791	WITHOUT_CLASSIFICATION	8.103633532087542E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999910174597598	WITHOUT_CLASSIFICATION	8.982540240255922E-6	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999910174597598	WITHOUT_CLASSIFICATION	8.982540240255922E-6	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999816870938614	WITHOUT_CLASSIFICATION	1.8312906138580813E-5	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999980333017483	WITHOUT_CLASSIFICATION	1.9666982517158532E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9998926582142298	WITHOUT_CLASSIFICATION	1.0734178577021601E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9998887035420461	WITHOUT_CLASSIFICATION	1.112964579539335E-4	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999303441269033	WITHOUT_CLASSIFICATION	6.96558730967105E-5	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999676447925928	WITHOUT_CLASSIFICATION	3.235520740727974E-5	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999585590579187	WITHOUT_CLASSIFICATION	4.144094208126658E-5	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999967439923488	WITHOUT_CLASSIFICATION	3.256007651173475E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999610876192586	WITHOUT_CLASSIFICATION	3.891238074150745E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999610876192586	WITHOUT_CLASSIFICATION	3.891238074150745E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999610876192586	WITHOUT_CLASSIFICATION	3.891238074150745E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9997612962995835	WITHOUT_CLASSIFICATION	2.3870370041648853E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9997612962995835	WITHOUT_CLASSIFICATION	2.3870370041648853E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9997612962995835	WITHOUT_CLASSIFICATION	2.3870370041648853E-4	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999641700824456	WITHOUT_CLASSIFICATION	3.5829917554294716E-5	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9998850537281652	WITHOUT_CLASSIFICATION	1.1494627183481695E-4	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.999917244656426	WITHOUT_CLASSIFICATION	8.275534357406132E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9999284825972135	WITHOUT_CLASSIFICATION	7.151740278649058E-5	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999678281588008	WITHOUT_CLASSIFICATION	3.2171841199247026E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997592812167762	WITHOUT_CLASSIFICATION	2.4071878322374493E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999767001289909	WITHOUT_CLASSIFICATION	2.3299871009092637E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999965461877457	WITHOUT_CLASSIFICATION	3.453812254186491E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999951086028797	WITHOUT_CLASSIFICATION	4.891397120368617E-6	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999987527462822	WITHOUT_CLASSIFICATION	1.2472537177914977E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999987633885379	WITHOUT_CLASSIFICATION	1.2366114621250145E-6	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999978716024848	WITHOUT_CLASSIFICATION	2.1283975152923778E-6	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999837461918307	WITHOUT_CLASSIFICATION	1.625380816927282E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.999999765601847	WITHOUT_CLASSIFICATION	2.343981528631521E-7	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999549867741884	WITHOUT_CLASSIFICATION	4.5013225811589267E-5	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999048618599778	WITHOUT_CLASSIFICATION	9.51381400221576E-5	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999982040915879	WITHOUT_CLASSIFICATION	1.7959084120232039E-6	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999962269650629	WITHOUT_CLASSIFICATION	3.7730349372390388E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.999951788187205	WITHOUT_CLASSIFICATION	4.8211812794898555E-5	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999998086921028	WITHOUT_CLASSIFICATION	1.913078971507693E-7	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999996254453882	WITHOUT_CLASSIFICATION	3.745546118083357E-7	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999997850942073	WITHOUT_CLASSIFICATION	2.1490579259489476E-7	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999975889868328	WITHOUT_CLASSIFICATION	2.4110131672699895E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999137753368	WITHOUT_CLASSIFICATION	8.622466318688762E-8	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999985975972502	WITHOUT_CLASSIFICATION	1.4024027498079405E-6	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9998212211278112	WITHOUT_CLASSIFICATION	1.787788721887359E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999573102444584	WITHOUT_CLASSIFICATION	4.268975554158052E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999892130161832	WITHOUT_CLASSIFICATION	1.078698381681684E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999888526459383	WITHOUT_CLASSIFICATION	1.1147354061667202E-5	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999888526459383	WITHOUT_CLASSIFICATION	1.1147354061667202E-5	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9999582395287205	WITHOUT_CLASSIFICATION	4.176047127955482E-5	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999911249182003	WITHOUT_CLASSIFICATION	8.875081799718988E-6	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999927920470374	WITHOUT_CLASSIFICATION	7.207952962596555E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999686737429972	WITHOUT_CLASSIFICATION	3.1326257002683625E-5	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999781016942947	WITHOUT_CLASSIFICATION	2.189830570532596E-5	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999873807761396	WITHOUT_CLASSIFICATION	1.2619223860325717E-5	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999507221927457	WITHOUT_CLASSIFICATION	4.927780725437916E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999860263606902	WITHOUT_CLASSIFICATION	1.3973639309881426E-5	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9997992560121586	WITHOUT_CLASSIFICATION	2.0074398784148168E-4	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999850729019214	WITHOUT_CLASSIFICATION	1.4927098078694988E-5	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999368206105288	WITHOUT_CLASSIFICATION	6.317938947115773E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9998700196134069	WITHOUT_CLASSIFICATION	1.2998038659306745E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999808376421053	WITHOUT_CLASSIFICATION	1.91623578946935E-5	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9999907520127402	WITHOUT_CLASSIFICATION	9.247987259727786E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999952013684541	WITHOUT_CLASSIFICATION	4.798631545895773E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999992148689199	WITHOUT_CLASSIFICATION	7.851310802621995E-7	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9997449492973665	WITHOUT_CLASSIFICATION	2.550507026335328E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999849192837111	WITHOUT_CLASSIFICATION	1.5080716288768909E-5	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9997415358747196	WITHOUT_CLASSIFICATION	2.584641252804096E-4	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999735444808904	WITHOUT_CLASSIFICATION	2.6455519109714473E-5	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999659056895193	WITHOUT_CLASSIFICATION	3.409431048074253E-5	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9998931052167486	WITHOUT_CLASSIFICATION	1.0689478325143097E-4	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999562775249163	WITHOUT_CLASSIFICATION	4.3722475083643364E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999823021710827	WITHOUT_CLASSIFICATION	1.76978289172695E-5	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999026104745931	WITHOUT_CLASSIFICATION	9.738952540691185E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999628227506142	WITHOUT_CLASSIFICATION	3.717724938581266E-5	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9991227704942688	WITHOUT_CLASSIFICATION	8.772295057313065E-4	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9991710132623928	WITHOUT_CLASSIFICATION	8.289867376072458E-4	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999327577682645	WITHOUT_CLASSIFICATION	6.724223173549538E-5	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999423507735653	WITHOUT_CLASSIFICATION	5.764922643475527E-5	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999353633744541	WITHOUT_CLASSIFICATION	6.463662554589427E-5	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9996804547228447	WITHOUT_CLASSIFICATION	3.195452771553498E-4	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9998074142872354	WITHOUT_CLASSIFICATION	1.9258571276460661E-4	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999968860872579	WITHOUT_CLASSIFICATION	3.1139127421054897E-6	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999664903367929	WITHOUT_CLASSIFICATION	3.350966320720654E-5	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999641089701407	WITHOUT_CLASSIFICATION	3.589102985926574E-5	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999698843409506	WITHOUT_CLASSIFICATION	3.011565904936238E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.999837110720413	WITHOUT_CLASSIFICATION	1.6288927958705058E-4	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999774423032186	WITHOUT_CLASSIFICATION	2.255769678140335E-5	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999809104925367	WITHOUT_CLASSIFICATION	1.9089507463276342E-5	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.999912224915705	WITHOUT_CLASSIFICATION	8.777508429504639E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999924689290058	WITHOUT_CLASSIFICATION	7.531070994182236E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999934979113728	WITHOUT_CLASSIFICATION	6.5020886271315945E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999934979113728	WITHOUT_CLASSIFICATION	6.5020886271315945E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999862570043191	WITHOUT_CLASSIFICATION	1.3742995680968699E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999951880355084	WITHOUT_CLASSIFICATION	4.811964491722704E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999536803214075	WITHOUT_CLASSIFICATION	4.63196785925238E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999536803214075	WITHOUT_CLASSIFICATION	4.63196785925238E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997592812167762	WITHOUT_CLASSIFICATION	2.4071878322374493E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999767001289909	WITHOUT_CLASSIFICATION	2.3299871009092637E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999836494850453	WITHOUT_CLASSIFICATION	1.635051495465195E-5	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999981971659418	WITHOUT_CLASSIFICATION	1.8028340581238932E-6	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999681232252051	WITHOUT_CLASSIFICATION	3.18767747948488E-5	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999222484021598	WITHOUT_CLASSIFICATION	7.775159784019721E-5	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999929570519545	WITHOUT_CLASSIFICATION	7.042948045455148E-6	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.999967206882525	WITHOUT_CLASSIFICATION	3.2793117474902286E-5	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999695964306076	WITHOUT_CLASSIFICATION	3.0403569392417286E-5	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999654186359749	WITHOUT_CLASSIFICATION	3.458136402519092E-5	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.99998349966423	WITHOUT_CLASSIFICATION	1.6500335770043542E-5	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9999966278397147	WITHOUT_CLASSIFICATION	3.3721602853287186E-6	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999942458900283	WITHOUT_CLASSIFICATION	5.7541099717279075E-6	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9998792393947487	WITHOUT_CLASSIFICATION	1.2076060525130679E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998941905004265	WITHOUT_CLASSIFICATION	1.0580949957356165E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998941905004265	WITHOUT_CLASSIFICATION	1.0580949957356165E-4	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999944517285619	WITHOUT_CLASSIFICATION	5.548271438082453E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999843255064923	WITHOUT_CLASSIFICATION	1.5674493507744953E-5	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9997558209747269	WITHOUT_CLASSIFICATION	2.4417902527307706E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999675953164945	WITHOUT_CLASSIFICATION	3.240468350550132E-5	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999963655737684	WITHOUT_CLASSIFICATION	3.634426231501594E-6	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.999998614132996	WITHOUT_CLASSIFICATION	1.385867004070248E-6	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999965243183915	WITHOUT_CLASSIFICATION	3.4756816084991165E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999981388465786	WITHOUT_CLASSIFICATION	1.8611534214220104E-6	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999754820145351	WITHOUT_CLASSIFICATION	2.4517985464922694E-5	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999701153188099	WITHOUT_CLASSIFICATION	2.9884681190119062E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999842017836738	WITHOUT_CLASSIFICATION	1.5798216326232637E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9968694074049241	WITHOUT_CLASSIFICATION	0.003130592595075758	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.999892505447596	WITHOUT_CLASSIFICATION	1.07494552404026E-4	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999356450115733	WITHOUT_CLASSIFICATION	6.435498842670263E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999874469722585	WITHOUT_CLASSIFICATION	1.255302774147042E-5	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9995202723950973	WITHOUT_CLASSIFICATION	4.7972760490271705E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999719541622853	WITHOUT_CLASSIFICATION	2.8045837714691706E-5	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999962639074775	WITHOUT_CLASSIFICATION	3.7360925225135725E-6	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999705370976736	WITHOUT_CLASSIFICATION	2.946290232645794E-5	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999782919941477	WITHOUT_CLASSIFICATION	2.170800585237047E-5	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9992112716621145	WITHOUT_CLASSIFICATION	7.887283378854996E-4	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999906103205712	WITHOUT_CLASSIFICATION	9.389679428823313E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999821274585319	WITHOUT_CLASSIFICATION	1.787254146801022E-5	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9997481645382841	WITHOUT_CLASSIFICATION	2.5183546171587674E-4	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999679383251334	WITHOUT_CLASSIFICATION	3.206167486670183E-5	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999835162390057	WITHOUT_CLASSIFICATION	1.6483760994311706E-5	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999778249459776	WITHOUT_CLASSIFICATION	2.2175054022281898E-5	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9997788954629093	WITHOUT_CLASSIFICATION	2.2110453709076568E-4	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999394236738725	WITHOUT_CLASSIFICATION	6.05763261274447E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9986106463155238	WITHOUT_CLASSIFICATION	0.0013893536844762785	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9986106463155238	WITHOUT_CLASSIFICATION	0.0013893536844762785	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9986106463155238	WITHOUT_CLASSIFICATION	0.0013893536844762785	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9986106463155238	WITHOUT_CLASSIFICATION	0.0013893536844762785	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9986106463155238	WITHOUT_CLASSIFICATION	0.0013893536844762785	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9986106463155238	WITHOUT_CLASSIFICATION	0.0013893536844762785	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999992979810619	WITHOUT_CLASSIFICATION	7.020189381076143E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999977862856078	WITHOUT_CLASSIFICATION	2.2137143922523372E-6	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999858822815694	WITHOUT_CLASSIFICATION	1.4117718430554816E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999959368339817	WITHOUT_CLASSIFICATION	4.063166018314097E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999959368339817	WITHOUT_CLASSIFICATION	4.063166018314097E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999808699098197	WITHOUT_CLASSIFICATION	1.9130090180304886E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999808699098197	WITHOUT_CLASSIFICATION	1.9130090180304886E-5	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999608892375282	WITHOUT_CLASSIFICATION	3.9110762471744654E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.999972571223746	WITHOUT_CLASSIFICATION	2.7428776253903162E-5	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999985106398409	WITHOUT_CLASSIFICATION	1.4893601591348185E-6	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9993667404073983	WITHOUT_CLASSIFICATION	6.332595926018339E-4	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999569374993872	WITHOUT_CLASSIFICATION	4.306250061278541E-5	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999943089429818	WITHOUT_CLASSIFICATION	5.691057018227839E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999735243788409	WITHOUT_CLASSIFICATION	2.6475621159075276E-5	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999735243788409	WITHOUT_CLASSIFICATION	2.6475621159075276E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9997266633513792	WITHOUT_CLASSIFICATION	2.7333664862080404E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9997266633513792	WITHOUT_CLASSIFICATION	2.7333664862080404E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9997266633513792	WITHOUT_CLASSIFICATION	2.7333664862080404E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999764644157948	WITHOUT_CLASSIFICATION	2.3535584205240184E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999764644157948	WITHOUT_CLASSIFICATION	2.3535584205240184E-5	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999877381710783	WITHOUT_CLASSIFICATION	1.2261828921639977E-5	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999958219967052	WITHOUT_CLASSIFICATION	4.178003294783722E-6	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999813521933394	WITHOUT_CLASSIFICATION	1.8647806660621566E-5	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999947612569117	WITHOUT_CLASSIFICATION	5.238743088330268E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999975364854911	WITHOUT_CLASSIFICATION	2.463514508891117E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999975364854911	WITHOUT_CLASSIFICATION	2.463514508891117E-5	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.999977279563127	WITHOUT_CLASSIFICATION	2.2720436873046734E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9986106463155238	WITHOUT_CLASSIFICATION	0.0013893536844762785	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999975364854911	WITHOUT_CLASSIFICATION	2.463514508891117E-5	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999983954290573	WITHOUT_CLASSIFICATION	1.6045709427016945E-5	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.999983954290573	WITHOUT_CLASSIFICATION	1.6045709427016945E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999975364854911	WITHOUT_CLASSIFICATION	2.463514508891117E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999975364854911	WITHOUT_CLASSIFICATION	2.463514508891117E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.999975364854911	WITHOUT_CLASSIFICATION	2.463514508891117E-5	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999915891651975	WITHOUT_CLASSIFICATION	8.410834802459499E-6	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999953495236948	WITHOUT_CLASSIFICATION	4.650476305083171E-6	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999986202159203	WITHOUT_CLASSIFICATION	1.3797840797100703E-6	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999986202159203	WITHOUT_CLASSIFICATION	1.3797840797100703E-6	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999950490665158	WITHOUT_CLASSIFICATION	4.950933484149934E-6	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999981030467222	WITHOUT_CLASSIFICATION	1.896953277841924E-6	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999939477116749	WITHOUT_CLASSIFICATION	6.052288325101499E-6	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999986741480676	WITHOUT_CLASSIFICATION	1.3258519322472368E-6	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9978440309385223	WITHOUT_CLASSIFICATION	0.0021559690614777775	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999992517222289	WITHOUT_CLASSIFICATION	7.482777710964036E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9998847146721244	WITHOUT_CLASSIFICATION	1.1528532787564424E-4	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999837881230821	WITHOUT_CLASSIFICATION	1.621187691794782E-5	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.999956320602829	WITHOUT_CLASSIFICATION	4.367939717093529E-5	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999918772049973	WITHOUT_CLASSIFICATION	8.1227950026447E-6	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.999957157262122	WITHOUT_CLASSIFICATION	4.284273787793637E-5	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999672770014798	WITHOUT_CLASSIFICATION	3.272299852023851E-5	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999701325042355	WITHOUT_CLASSIFICATION	2.9867495764397912E-5	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999964762968362	WITHOUT_CLASSIFICATION	3.523703163802902E-6	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999974144384408	WITHOUT_CLASSIFICATION	2.5855615592306486E-6	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999302778882666	WITHOUT_CLASSIFICATION	6.972211173340886E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999976331614411	WITHOUT_CLASSIFICATION	2.366838558838933E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999959197143171	WITHOUT_CLASSIFICATION	4.0802856828076816E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999985849222482	WITHOUT_CLASSIFICATION	1.4150777516906265E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999987390002105	WITHOUT_CLASSIFICATION	1.2609997893836223E-6	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999756171841384	WITHOUT_CLASSIFICATION	2.4382815861613753E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999959197143171	WITHOUT_CLASSIFICATION	4.0802856828076816E-6	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999933811660996	WITHOUT_CLASSIFICATION	6.618833900373748E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999985849222482	WITHOUT_CLASSIFICATION	1.4150777516906265E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999987390002105	WITHOUT_CLASSIFICATION	1.2609997893836223E-6	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999957641234168	WITHOUT_CLASSIFICATION	4.235876583110226E-6	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999937135871072	WITHOUT_CLASSIFICATION	6.286412892757005E-6	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999985212146746	WITHOUT_CLASSIFICATION	1.4787853253379017E-6	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999970384804129	WITHOUT_CLASSIFICATION	2.9615195870272113E-6	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999981515449735	WITHOUT_CLASSIFICATION	1.8484550264437143E-6	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999925704600091	WITHOUT_CLASSIFICATION	7.429539990880181E-6	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9999907217527413	WITHOUT_CLASSIFICATION	9.278247258728474E-6	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999988532247587	WITHOUT_CLASSIFICATION	1.146775241334827E-6	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999927112904211	WITHOUT_CLASSIFICATION	7.288709578930319E-6	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999707022442688	WITHOUT_CLASSIFICATION	2.9297755731197684E-5	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999828469254949	WITHOUT_CLASSIFICATION	1.7153074505082747E-5	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.999998471830674	WITHOUT_CLASSIFICATION	1.5281693259692795E-6	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999872788123537	WITHOUT_CLASSIFICATION	1.2721187646203604E-5	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999990289613468	WITHOUT_CLASSIFICATION	9.710386531062463E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999525398120553	WITHOUT_CLASSIFICATION	4.74601879446837E-5	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.999986907793122	WITHOUT_CLASSIFICATION	1.3092206877974002E-5	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999942495853397	WITHOUT_CLASSIFICATION	5.750414660229192E-6	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999998315693075	WITHOUT_CLASSIFICATION	1.6843069251343728E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999842341807228	WITHOUT_CLASSIFICATION	1.5765819277240425E-5	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999842341807228	WITHOUT_CLASSIFICATION	1.5765819277240425E-5	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999725617331032	WITHOUT_CLASSIFICATION	2.743826689683652E-5	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999725617331032	WITHOUT_CLASSIFICATION	2.743826689683652E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999351293888786	WITHOUT_CLASSIFICATION	6.487061112140199E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999351293888786	WITHOUT_CLASSIFICATION	6.487061112140199E-5	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999973187337847	WITHOUT_CLASSIFICATION	2.681266215324993E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999706347909539	WITHOUT_CLASSIFICATION	2.9365209046077806E-5	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999957805972807	WITHOUT_CLASSIFICATION	4.219402719424292E-6	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999957711816317	WITHOUT_CLASSIFICATION	4.228818368266763E-6	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999644169520305	WITHOUT_CLASSIFICATION	3.558304796948067E-5	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999884979678488	WITHOUT_CLASSIFICATION	1.1502032151202198E-5	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999490726419908	WITHOUT_CLASSIFICATION	5.0927358009178484E-5	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999785322905947	WITHOUT_CLASSIFICATION	2.1467709405329124E-5	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999648478798625	WITHOUT_CLASSIFICATION	3.5152120137461684E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.99995964307857	WITHOUT_CLASSIFICATION	4.035692142990094E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999545343349417	WITHOUT_CLASSIFICATION	4.5465665058232856E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999736720214313	WITHOUT_CLASSIFICATION	2.632797856868289E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999804133136507	WITHOUT_CLASSIFICATION	1.95866863493164E-5	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999996521062193	WITHOUT_CLASSIFICATION	3.478937806542591E-7	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999669994180531	WITHOUT_CLASSIFICATION	3.3000581946913526E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.99999583486722	WITHOUT_CLASSIFICATION	4.165132779969008E-6	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999517674479037	WITHOUT_CLASSIFICATION	4.823255209637116E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999938299909601	WITHOUT_CLASSIFICATION	6.170009039912237E-6	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.999927949997944	WITHOUT_CLASSIFICATION	7.205000205601854E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999747568408364	WITHOUT_CLASSIFICATION	2.524315916361695E-5	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999908039021629	WITHOUT_CLASSIFICATION	9.196097837012343E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9998709511473898	WITHOUT_CLASSIFICATION	1.290488526102116E-4	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999549956225373	WITHOUT_CLASSIFICATION	4.50043774625938E-5	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999566165975698	WITHOUT_CLASSIFICATION	4.3383402430191657E-5	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999818071991343	WITHOUT_CLASSIFICATION	1.8192800865633336E-5	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999808270819063	WITHOUT_CLASSIFICATION	1.917291809373267E-5	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999959274170637	WITHOUT_CLASSIFICATION	4.072582936362957E-6	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999685360063565	WITHOUT_CLASSIFICATION	3.1463993643538116E-5	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999880633745309	WITHOUT_CLASSIFICATION	1.1936625468912913E-5	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.999983676162374	WITHOUT_CLASSIFICATION	1.6323837625926627E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999874349984026	WITHOUT_CLASSIFICATION	1.2565001597540592E-5	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999907773804099	WITHOUT_CLASSIFICATION	9.222619590085029E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999940150597678	WITHOUT_CLASSIFICATION	5.984940232139784E-6	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9999400910119944	WITHOUT_CLASSIFICATION	5.99089880056592E-5	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9999400910119944	WITHOUT_CLASSIFICATION	5.99089880056592E-5	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9999903589680901	WITHOUT_CLASSIFICATION	9.641031909960846E-6	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.999960262814692	WITHOUT_CLASSIFICATION	3.9737185308074355E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.999850707280805	WITHOUT_CLASSIFICATION	1.492927191949068E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999676785485428	WITHOUT_CLASSIFICATION	3.2321451457190246E-5	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9997576249682363	WITHOUT_CLASSIFICATION	2.4237503176377238E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999183631263325	WITHOUT_CLASSIFICATION	8.163687366752137E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999183631263325	WITHOUT_CLASSIFICATION	8.163687366752137E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999183631263325	WITHOUT_CLASSIFICATION	8.163687366752137E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999060379861271	WITHOUT_CLASSIFICATION	9.396201387293566E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999788040627755	WITHOUT_CLASSIFICATION	2.119593722448559E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999788040627755	WITHOUT_CLASSIFICATION	2.119593722448559E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999148748842376	WITHOUT_CLASSIFICATION	8.512511576251114E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9996324309970386	WITHOUT_CLASSIFICATION	3.675690029614633E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9998783621939368	WITHOUT_CLASSIFICATION	1.2163780606322387E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9998783621939368	WITHOUT_CLASSIFICATION	1.2163780606322387E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9998783621939368	WITHOUT_CLASSIFICATION	1.2163780606322387E-4	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999756427318516	WITHOUT_CLASSIFICATION	2.4357268148450493E-5	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999709836925753	WITHOUT_CLASSIFICATION	2.901630742463652E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9998552899753214	WITHOUT_CLASSIFICATION	1.447100246785579E-4	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999922602868019	WITHOUT_CLASSIFICATION	7.739713198119363E-6	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999840329593557	WITHOUT_CLASSIFICATION	1.5967040644301403E-5	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999911783643232	WITHOUT_CLASSIFICATION	8.82163567686267E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9998430224734318	WITHOUT_CLASSIFICATION	1.569775265682747E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999944976586397	WITHOUT_CLASSIFICATION	5.502341360415352E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999927207982432	WITHOUT_CLASSIFICATION	7.279201756780845E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.999843784960179	WITHOUT_CLASSIFICATION	1.562150398209795E-4	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999949847720185	WITHOUT_CLASSIFICATION	5.01522798140001E-6	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.99999583486722	WITHOUT_CLASSIFICATION	4.165132779969008E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999938299909601	WITHOUT_CLASSIFICATION	6.170009039912237E-6	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999950530551431	WITHOUT_CLASSIFICATION	4.946944856928937E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.999971181302082	WITHOUT_CLASSIFICATION	2.8818697917971476E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999859695661343	WITHOUT_CLASSIFICATION	1.403043386572681E-5	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999298394333218	WITHOUT_CLASSIFICATION	7.016056667820494E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.999979488632368	WITHOUT_CLASSIFICATION	2.0511367632011138E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.999979488632368	WITHOUT_CLASSIFICATION	2.0511367632011138E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.999979488632368	WITHOUT_CLASSIFICATION	2.0511367632011138E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999470400681874	WITHOUT_CLASSIFICATION	5.29599318125647E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999470400681874	WITHOUT_CLASSIFICATION	5.29599318125647E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999908654930151	WITHOUT_CLASSIFICATION	9.13450698501069E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9998948827789721	WITHOUT_CLASSIFICATION	1.0511722102792143E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9998810652006938	WITHOUT_CLASSIFICATION	1.1893479930617058E-4	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999946932297672	WITHOUT_CLASSIFICATION	5.306770232880007E-6	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9995922587845499	WITHOUT_CLASSIFICATION	4.077412154500528E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9995922587845499	WITHOUT_CLASSIFICATION	4.077412154500528E-4	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999943541613894	WITHOUT_CLASSIFICATION	5.645838610692247E-6	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999927964270499	WITHOUT_CLASSIFICATION	7.2035729501100705E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999838940468426	WITHOUT_CLASSIFICATION	1.610595315741194E-5	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999286128340928	WITHOUT_CLASSIFICATION	7.138716590719681E-5	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999926749544432	WITHOUT_CLASSIFICATION	7.3250455568307825E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999616859345359	WITHOUT_CLASSIFICATION	3.83140654640758E-5	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.999969473913872	WITHOUT_CLASSIFICATION	3.0526086127948956E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999989466004349	WITHOUT_CLASSIFICATION	1.0533995651623129E-6	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999860674102157	WITHOUT_CLASSIFICATION	1.3932589784391055E-5	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999714731088444	WITHOUT_CLASSIFICATION	2.852689115570536E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999681211624166	WITHOUT_CLASSIFICATION	3.187883758337841E-5	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999813651787198	WITHOUT_CLASSIFICATION	1.8634821280189386E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999859695661343	WITHOUT_CLASSIFICATION	1.403043386572681E-5	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999988701814193	WITHOUT_CLASSIFICATION	1.1298185806437986E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999368206105288	WITHOUT_CLASSIFICATION	6.317938947115773E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999859695661343	WITHOUT_CLASSIFICATION	1.403043386572681E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999946932297672	WITHOUT_CLASSIFICATION	5.306770232880007E-6	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.999992845453155	WITHOUT_CLASSIFICATION	7.154546845025657E-6	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999957122472207	WITHOUT_CLASSIFICATION	4.287752779349925E-6	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999681150134379	WITHOUT_CLASSIFICATION	3.1884986562167174E-5	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999681150134379	WITHOUT_CLASSIFICATION	3.1884986562167174E-5	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999931105130279	WITHOUT_CLASSIFICATION	6.889486972072748E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999931796047096	WITHOUT_CLASSIFICATION	6.820395290513756E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999598672965465	WITHOUT_CLASSIFICATION	4.013270345354553E-5	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999368734672919	WITHOUT_CLASSIFICATION	6.312653270803847E-5	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999576056740701	WITHOUT_CLASSIFICATION	4.2394325929897466E-5	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999402073465774	WITHOUT_CLASSIFICATION	5.9792653422585665E-5	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999958029198412	WITHOUT_CLASSIFICATION	4.197080158717238E-6	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.999989756951819	WITHOUT_CLASSIFICATION	1.0243048180900028E-5	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999922565323334	WITHOUT_CLASSIFICATION	7.743467666734525E-6	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999980072423306	WITHOUT_CLASSIFICATION	1.9927576694348086E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999252877198979	WITHOUT_CLASSIFICATION	7.471228010212468E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9997536341784985	WITHOUT_CLASSIFICATION	2.4636582150155083E-4	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999977280936003	WITHOUT_CLASSIFICATION	2.2719063997034175E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999976890696493	WITHOUT_CLASSIFICATION	2.3109303508005884E-6	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999968541987291	WITHOUT_CLASSIFICATION	3.145801270858827E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999986461005218	WITHOUT_CLASSIFICATION	1.353899478170305E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999962850153428	WITHOUT_CLASSIFICATION	3.7149846572811664E-6	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999964457706116	WITHOUT_CLASSIFICATION	3.5542293882350433E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999968558980308	WITHOUT_CLASSIFICATION	3.1441019691391713E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999968558980308	WITHOUT_CLASSIFICATION	3.1441019691391713E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999859695661343	WITHOUT_CLASSIFICATION	1.403043386572681E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999935133499923	WITHOUT_CLASSIFICATION	6.48665000762301E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999681211624166	WITHOUT_CLASSIFICATION	3.187883758337841E-5	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.999953510921476	WITHOUT_CLASSIFICATION	4.6489078524100133E-5	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999970779427292	WITHOUT_CLASSIFICATION	2.9220572707713494E-6	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999935022298236	WITHOUT_CLASSIFICATION	6.497770176444425E-6	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999832160853921	WITHOUT_CLASSIFICATION	1.678391460789389E-5	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999984071925062	WITHOUT_CLASSIFICATION	1.5928074937325738E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999681211624166	WITHOUT_CLASSIFICATION	3.187883758337841E-5	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999757721537257	WITHOUT_CLASSIFICATION	2.4227846274307345E-5	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999736615507651	WITHOUT_CLASSIFICATION	2.633844923498849E-5	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999552184449156	WITHOUT_CLASSIFICATION	4.478155508422929E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999645785157276	WITHOUT_CLASSIFICATION	3.54214842723505E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999963652614975	WITHOUT_CLASSIFICATION	3.6347385024950796E-6	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999890936499662	WITHOUT_CLASSIFICATION	1.0906350033777827E-5	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999906575931808	WITHOUT_CLASSIFICATION	9.342406819104396E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999712652380647	WITHOUT_CLASSIFICATION	2.8734761935427806E-5	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999904856238676	WITHOUT_CLASSIFICATION	9.514376132345228E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999974940904319	WITHOUT_CLASSIFICATION	2.5059095680033293E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999607829428084	WITHOUT_CLASSIFICATION	3.921705719154752E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999607829428084	WITHOUT_CLASSIFICATION	3.921705719154752E-5	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999564442763064	WITHOUT_CLASSIFICATION	4.355572369358137E-5	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999976262918419	WITHOUT_CLASSIFICATION	2.373708158132156E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999910506695209	WITHOUT_CLASSIFICATION	8.949330479216907E-6	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999182688639408	WITHOUT_CLASSIFICATION	8.173113605932724E-5	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9993690721642184	WITHOUT_CLASSIFICATION	6.309278357815925E-4	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999515741938495	WITHOUT_CLASSIFICATION	4.8425806150564026E-5	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999540867886061	WITHOUT_CLASSIFICATION	4.5913211393886424E-5	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999676151166789	WITHOUT_CLASSIFICATION	3.23848833211703E-5	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9998831409628111	WITHOUT_CLASSIFICATION	1.1685903718892471E-4	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999874253712118	WITHOUT_CLASSIFICATION	1.2574628788294094E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.999999282729024	WITHOUT_CLASSIFICATION	7.172709759760575E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999391710736953	WITHOUT_CLASSIFICATION	6.0828926304803885E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999391710736953	WITHOUT_CLASSIFICATION	6.0828926304803885E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999391710736953	WITHOUT_CLASSIFICATION	6.0828926304803885E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999391710736953	WITHOUT_CLASSIFICATION	6.0828926304803885E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999391710736953	WITHOUT_CLASSIFICATION	6.0828926304803885E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999391710736953	WITHOUT_CLASSIFICATION	6.0828926304803885E-5	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9999787719296664	WITHOUT_CLASSIFICATION	2.122807033355036E-5	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9998848626907557	WITHOUT_CLASSIFICATION	1.1513730924422951E-4	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999897623822293	WITHOUT_CLASSIFICATION	1.0237617770713808E-5	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999934637336977	WITHOUT_CLASSIFICATION	6.536266302371296E-6	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999871910763306	WITHOUT_CLASSIFICATION	1.2808923669390165E-5	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9998933025263589	WITHOUT_CLASSIFICATION	1.066974736411326E-4	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.999931362950475	WITHOUT_CLASSIFICATION	6.863704952493641E-5	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999468127151377	WITHOUT_CLASSIFICATION	5.3187284862339965E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.999983044741428	WITHOUT_CLASSIFICATION	1.6955258572029205E-5	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9998698013184375	WITHOUT_CLASSIFICATION	1.3019868156249399E-4	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999880211685774	WITHOUT_CLASSIFICATION	1.1978831422539978E-5	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.999991294140557	WITHOUT_CLASSIFICATION	8.705859443003705E-6	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999733452632622	WITHOUT_CLASSIFICATION	2.6654736737806774E-5	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999995696468407	WITHOUT_CLASSIFICATION	4.303531592979863E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.99999044750191	WITHOUT_CLASSIFICATION	9.552498090034867E-6	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.999860026672815	WITHOUT_CLASSIFICATION	1.3997332718487958E-4	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9996808342388669	WITHOUT_CLASSIFICATION	3.191657611330098E-4	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9997653011067688	WITHOUT_CLASSIFICATION	2.3469889323112484E-4	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9997653011067688	WITHOUT_CLASSIFICATION	2.3469889323112484E-4	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9998240028039919	WITHOUT_CLASSIFICATION	1.7599719600809447E-4	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9998405514437058	WITHOUT_CLASSIFICATION	1.594485562941616E-4	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9997467914553244	WITHOUT_CLASSIFICATION	2.53208544675641E-4	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9992449695045453	WITHOUT_CLASSIFICATION	7.550304954546461E-4	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9997589452572034	WITHOUT_CLASSIFICATION	2.4105474279664666E-4	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9991170391360603	WITHOUT_CLASSIFICATION	8.829608639398311E-4	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999485179907492	WITHOUT_CLASSIFICATION	5.1482009250702654E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999199878506374	WITHOUT_CLASSIFICATION	8.001214936255506E-5	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999919703378506	WITHOUT_CLASSIFICATION	8.029662149435296E-6	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9998864229538936	WITHOUT_CLASSIFICATION	1.1357704610635779E-4	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999933320907926	WITHOUT_CLASSIFICATION	6.667909207484436E-6	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999987182587545	WITHOUT_CLASSIFICATION	1.2817412455262814E-6	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999912343599133	WITHOUT_CLASSIFICATION	8.765640086615479E-6	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999913674528746	WITHOUT_CLASSIFICATION	8.632547125402006E-6	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999810991537182	WITHOUT_CLASSIFICATION	1.8900846281744842E-5	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999769448752508	WITHOUT_CLASSIFICATION	2.3055124749114056E-5	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999108552043949	WITHOUT_CLASSIFICATION	8.914479560505318E-5	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999269190199953	WITHOUT_CLASSIFICATION	7.308098000465403E-5	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999863867932758	WITHOUT_CLASSIFICATION	1.3613206724219377E-5	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999460891070295	WITHOUT_CLASSIFICATION	5.391089297047233E-5	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999257263087755	WITHOUT_CLASSIFICATION	7.427369122451332E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999723838890116	WITHOUT_CLASSIFICATION	2.7616110988425574E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999009724710176	WITHOUT_CLASSIFICATION	9.902752898247702E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999355281680804	WITHOUT_CLASSIFICATION	6.447183191953412E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.999910213552928	WITHOUT_CLASSIFICATION	8.978644707207517E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999120697782857	WITHOUT_CLASSIFICATION	8.793022171436835E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.999959643278756	WITHOUT_CLASSIFICATION	4.035672124412985E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999961034616749	WITHOUT_CLASSIFICATION	3.896538325117107E-6	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999977267147893	WITHOUT_CLASSIFICATION	2.273285210790962E-6	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.999964469661124	WITHOUT_CLASSIFICATION	3.5530338876155686E-5	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9997012171854119	WITHOUT_CLASSIFICATION	2.987828145880612E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999222378518251	WITHOUT_CLASSIFICATION	7.776214817494695E-5	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999087682680666	WITHOUT_CLASSIFICATION	9.123173193339998E-5	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999930137345102	WITHOUT_CLASSIFICATION	6.9862654898289615E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999698413521759	WITHOUT_CLASSIFICATION	3.015864782403117E-5	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999316707465673	WITHOUT_CLASSIFICATION	6.832925343268799E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999844836253484	WITHOUT_CLASSIFICATION	1.5516374651619615E-5	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.999878762376925	WITHOUT_CLASSIFICATION	1.2123762307506881E-4	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999677120405643	WITHOUT_CLASSIFICATION	3.228795943555971E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999677120405643	WITHOUT_CLASSIFICATION	3.228795943555971E-5	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999978463169701	WITHOUT_CLASSIFICATION	2.1536830299988767E-6	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9996999277166773	WITHOUT_CLASSIFICATION	3.0007228332271346E-4	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999830007955638	WITHOUT_CLASSIFICATION	1.6999204436151927E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999195802013899	WITHOUT_CLASSIFICATION	8.041979861005423E-5	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999971741884521	WITHOUT_CLASSIFICATION	2.825811547876572E-6	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999758827670765	WITHOUT_CLASSIFICATION	2.411723292348228E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999956807925006	WITHOUT_CLASSIFICATION	4.319207499466988E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999974625925847	WITHOUT_CLASSIFICATION	2.5374074153043965E-6	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999922285181672	WITHOUT_CLASSIFICATION	7.771481832827344E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.999988838127537	WITHOUT_CLASSIFICATION	1.1161872463012921E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999447465554536	WITHOUT_CLASSIFICATION	5.525344454642424E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999118174367688	WITHOUT_CLASSIFICATION	8.81825632312794E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999586411950174	WITHOUT_CLASSIFICATION	4.135880498260069E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999727386949555	WITHOUT_CLASSIFICATION	2.7261305044607716E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9996215725339018	WITHOUT_CLASSIFICATION	3.7842746609809553E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999957678009406	WITHOUT_CLASSIFICATION	4.232199059438821E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.999998569577982	WITHOUT_CLASSIFICATION	1.4304220179996404E-6	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999948599037931	WITHOUT_CLASSIFICATION	5.140096206940754E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999062557241419	WITHOUT_CLASSIFICATION	9.37442758581062E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.99997091177272	WITHOUT_CLASSIFICATION	2.908822728007183E-5	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999947393061043	WITHOUT_CLASSIFICATION	5.260693895727061E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999939171467441	WITHOUT_CLASSIFICATION	6.0828532559125045E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9998748559567975	WITHOUT_CLASSIFICATION	1.251440432025351E-4	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999974625925847	WITHOUT_CLASSIFICATION	2.5374074153043965E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999661049736658	WITHOUT_CLASSIFICATION	3.389502633412149E-5	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999661049736658	WITHOUT_CLASSIFICATION	3.389502633412149E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9998748559567975	WITHOUT_CLASSIFICATION	1.251440432025351E-4	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9997912222273464	WITHOUT_CLASSIFICATION	2.087777726534696E-4	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999948018649817	WITHOUT_CLASSIFICATION	5.198135018362584E-6	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999961885992766	WITHOUT_CLASSIFICATION	3.8114007232978467E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999970594007925	WITHOUT_CLASSIFICATION	2.9405992074745575E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999830177113146	WITHOUT_CLASSIFICATION	1.698228868531436E-5	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.999985469603592	WITHOUT_CLASSIFICATION	1.4530396407893513E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999786433269553	WITHOUT_CLASSIFICATION	2.1356673044658766E-5	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999916285844153	WITHOUT_CLASSIFICATION	8.371415584801344E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999846675466505	WITHOUT_CLASSIFICATION	1.5332453349500655E-5	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999608941690034	WITHOUT_CLASSIFICATION	3.91058309967451E-5	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9997914609964977	WITHOUT_CLASSIFICATION	2.0853900350230635E-4	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999993098945729	WITHOUT_CLASSIFICATION	6.901054271193553E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999896276121316	WITHOUT_CLASSIFICATION	1.0372387868425129E-5	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999896276121316	WITHOUT_CLASSIFICATION	1.0372387868425129E-5	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999939930066778	WITHOUT_CLASSIFICATION	6.006993322183411E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.999916808748736	WITHOUT_CLASSIFICATION	8.319125126390951E-5	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999914141660748	WITHOUT_CLASSIFICATION	8.585833925106302E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999961598158017	WITHOUT_CLASSIFICATION	3.840184198228118E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999961598158017	WITHOUT_CLASSIFICATION	3.840184198228118E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999649358302045	WITHOUT_CLASSIFICATION	3.5064169795410007E-5	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999649358302045	WITHOUT_CLASSIFICATION	3.5064169795410007E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999830608133397	WITHOUT_CLASSIFICATION	1.693918666032307E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.999948643307186	WITHOUT_CLASSIFICATION	5.135669281400261E-5	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9998997720883567	WITHOUT_CLASSIFICATION	1.0022791164337026E-4	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999330218887286	WITHOUT_CLASSIFICATION	6.697811127134321E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999232310178134	WITHOUT_CLASSIFICATION	7.676898218651661E-5	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999731871132981	WITHOUT_CLASSIFICATION	2.6812886701906758E-5	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999962100836672	WITHOUT_CLASSIFICATION	3.7899163328286653E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999830608133397	WITHOUT_CLASSIFICATION	1.693918666032307E-5	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999959964334713	WITHOUT_CLASSIFICATION	4.003566528808864E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.999948643307186	WITHOUT_CLASSIFICATION	5.135669281400261E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999952855176343	WITHOUT_CLASSIFICATION	4.714482365802838E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9998997720883567	WITHOUT_CLASSIFICATION	1.0022791164337026E-4	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999330218887286	WITHOUT_CLASSIFICATION	6.697811127134321E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999232310178134	WITHOUT_CLASSIFICATION	7.676898218651661E-5	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9998335032415888	WITHOUT_CLASSIFICATION	1.6649675841118758E-4	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999866898588747	WITHOUT_CLASSIFICATION	1.3310141125258967E-5	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9998772122779946	WITHOUT_CLASSIFICATION	1.2278772200540134E-4	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999410870742904	WITHOUT_CLASSIFICATION	5.891292570973666E-5	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999781186871232	WITHOUT_CLASSIFICATION	2.188131287672523E-5	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.999969525554089	WITHOUT_CLASSIFICATION	3.0474445911097892E-5	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999791717696458	WITHOUT_CLASSIFICATION	2.0828230354236372E-5	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999413312957733	WITHOUT_CLASSIFICATION	5.866870422663538E-5	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999485492807983	WITHOUT_CLASSIFICATION	5.145071920172666E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999452898793886	WITHOUT_CLASSIFICATION	5.4710120611344605E-5	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9998959221929034	WITHOUT_CLASSIFICATION	1.040778070966154E-4	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999600580558218	WITHOUT_CLASSIFICATION	3.994194417832331E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999553683249249	WITHOUT_CLASSIFICATION	4.463167507510852E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999313576919094	WITHOUT_CLASSIFICATION	6.864230809053702E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999185603825772	WITHOUT_CLASSIFICATION	8.143961742290145E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.999940125603213	WITHOUT_CLASSIFICATION	5.9874396787111126E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9997443238082636	WITHOUT_CLASSIFICATION	2.5567619173635773E-4	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999772778488143	WITHOUT_CLASSIFICATION	2.2722151185645302E-5	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9998249838068546	WITHOUT_CLASSIFICATION	1.750161931453514E-4	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9997716074152329	WITHOUT_CLASSIFICATION	2.2839258476706523E-4	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9996837080864046	WITHOUT_CLASSIFICATION	3.162919135953881E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9998698780196398	WITHOUT_CLASSIFICATION	1.301219803603073E-4	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9998721569581638	WITHOUT_CLASSIFICATION	1.2784304183623228E-4	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999774574212889	WITHOUT_CLASSIFICATION	2.2542578711043495E-5	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999643115002993	WITHOUT_CLASSIFICATION	3.568849970074829E-5	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999623307278149	WITHOUT_CLASSIFICATION	3.766927218514548E-5	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999655848446753	WITHOUT_CLASSIFICATION	3.4415155324528855E-5	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999851266825758	WITHOUT_CLASSIFICATION	1.4873317424208706E-5	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9996516550916719	WITHOUT_CLASSIFICATION	3.483449083281016E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999904316840199	WITHOUT_CLASSIFICATION	9.568315980098787E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999830177113146	WITHOUT_CLASSIFICATION	1.698228868531436E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9998977427782699	WITHOUT_CLASSIFICATION	1.0225722173009391E-4	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999711488714892	WITHOUT_CLASSIFICATION	2.8851128510798932E-5	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999856612394453	WITHOUT_CLASSIFICATION	1.4338760554698212E-5	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999625674002884	WITHOUT_CLASSIFICATION	3.7432599711493495E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999443292619999	WITHOUT_CLASSIFICATION	5.5670738000110615E-5	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999958967044792	WITHOUT_CLASSIFICATION	4.103295520751257E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999984073042502	WITHOUT_CLASSIFICATION	1.5926957498404466E-6	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999990670235704	WITHOUT_CLASSIFICATION	9.329764295208642E-7	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.999994679838582	WITHOUT_CLASSIFICATION	5.3201614179556095E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999965151884482	WITHOUT_CLASSIFICATION	3.484811551763189E-6	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999663297936623	WITHOUT_CLASSIFICATION	3.367020633768292E-5	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.99999624242292	WITHOUT_CLASSIFICATION	3.7575770799998112E-6	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999945531386358	WITHOUT_CLASSIFICATION	5.446861364114519E-6	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999987340052682	WITHOUT_CLASSIFICATION	1.2659947319012853E-6	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999907340463383	WITHOUT_CLASSIFICATION	9.265953661727211E-6	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999935083819202	WITHOUT_CLASSIFICATION	6.4916180797134455E-6	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999995606428954	WITHOUT_CLASSIFICATION	4.393571045594366E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999600580558218	WITHOUT_CLASSIFICATION	3.994194417832331E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999553683249249	WITHOUT_CLASSIFICATION	4.463167507510852E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999313576919094	WITHOUT_CLASSIFICATION	6.864230809053702E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999185603825772	WITHOUT_CLASSIFICATION	8.143961742290145E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.999940125603213	WITHOUT_CLASSIFICATION	5.9874396787111126E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9997443238082636	WITHOUT_CLASSIFICATION	2.5567619173635773E-4	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999622866709729	WITHOUT_CLASSIFICATION	3.7713329027115445E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999772778488143	WITHOUT_CLASSIFICATION	2.2722151185645302E-5	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999851266825758	WITHOUT_CLASSIFICATION	1.4873317424208706E-5	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9996516550916719	WITHOUT_CLASSIFICATION	3.483449083281016E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999904316840199	WITHOUT_CLASSIFICATION	9.568315980098787E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999136562698973	WITHOUT_CLASSIFICATION	8.634373010277969E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999136562698973	WITHOUT_CLASSIFICATION	8.634373010277969E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9998977427782699	WITHOUT_CLASSIFICATION	1.0225722173009391E-4	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999711488714892	WITHOUT_CLASSIFICATION	2.8851128510798932E-5	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999856612394453	WITHOUT_CLASSIFICATION	1.4338760554698212E-5	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.999967091431127	WITHOUT_CLASSIFICATION	3.290856887303263E-5	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9998279152120491	WITHOUT_CLASSIFICATION	1.7208478795084E-4	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999869696836481	WITHOUT_CLASSIFICATION	1.3030316351909174E-5	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999962498498304	WITHOUT_CLASSIFICATION	3.7501501695390074E-6	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999148049776939	WITHOUT_CLASSIFICATION	8.51950223061374E-5	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9997548651173521	WITHOUT_CLASSIFICATION	2.451348826478788E-4	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999289828870973	WITHOUT_CLASSIFICATION	7.101711290265542E-5	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999812605449535	WITHOUT_CLASSIFICATION	1.8739455046539435E-5	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999810323732059	WITHOUT_CLASSIFICATION	1.8967626794139377E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999921845877889	WITHOUT_CLASSIFICATION	7.815412211024455E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999450065078337	WITHOUT_CLASSIFICATION	5.499349216622864E-5	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999818459009319	WITHOUT_CLASSIFICATION	1.8154099068188775E-5	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999736223537394	WITHOUT_CLASSIFICATION	2.6377646260599107E-5	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999741685826065	WITHOUT_CLASSIFICATION	2.5831417393553765E-5	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999774049982283	WITHOUT_CLASSIFICATION	2.259500177172717E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999975982290142	WITHOUT_CLASSIFICATION	2.4017709857729135E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999841143215129	WITHOUT_CLASSIFICATION	1.5885678487130196E-5	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999928120413251	WITHOUT_CLASSIFICATION	7.187958674995588E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999991011771332	WITHOUT_CLASSIFICATION	8.988228668124034E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999912579298654	WITHOUT_CLASSIFICATION	8.742070134685074E-6	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999771943718362	WITHOUT_CLASSIFICATION	2.2805628163776247E-5	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999836948901158	WITHOUT_CLASSIFICATION	1.6305109884150736E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999988851583728	WITHOUT_CLASSIFICATION	1.114841627252819E-6	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999984022166418	WITHOUT_CLASSIFICATION	1.5977833582195539E-6	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999994021501811	WITHOUT_CLASSIFICATION	5.978498188310775E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999887008133788	WITHOUT_CLASSIFICATION	1.1299186621277473E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.99999945101794	WITHOUT_CLASSIFICATION	5.489820600737242E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9998841559203632	WITHOUT_CLASSIFICATION	1.1584407963686298E-4	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9999880829899161	WITHOUT_CLASSIFICATION	1.1917010083784249E-5	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999861972055787	WITHOUT_CLASSIFICATION	1.380279442142312E-5	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999997024376164	WITHOUT_CLASSIFICATION	2.975623835189879E-7	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999934979113728	WITHOUT_CLASSIFICATION	6.5020886271315945E-6	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999986637256314	WITHOUT_CLASSIFICATION	1.3362743685485322E-6	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999995011749093	WITHOUT_CLASSIFICATION	4.988250907268818E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999952855176343	WITHOUT_CLASSIFICATION	4.714482365802838E-6	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.999934768205646	WITHOUT_CLASSIFICATION	6.523179435401747E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.999993172065064	WITHOUT_CLASSIFICATION	6.82793493606297E-6	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999895804819319	WITHOUT_CLASSIFICATION	1.0419518068082452E-5	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999989537149898	WITHOUT_CLASSIFICATION	1.0462850101698893E-6	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999984800819371	WITHOUT_CLASSIFICATION	1.5199180628218874E-6	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999742562497765	WITHOUT_CLASSIFICATION	2.574375022340852E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999713021727283	WITHOUT_CLASSIFICATION	2.869782727161363E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999713021727283	WITHOUT_CLASSIFICATION	2.869782727161363E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999713021727283	WITHOUT_CLASSIFICATION	2.869782727161363E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999713021727283	WITHOUT_CLASSIFICATION	2.869782727161363E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999713021727283	WITHOUT_CLASSIFICATION	2.869782727161363E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999713021727283	WITHOUT_CLASSIFICATION	2.869782727161363E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999365365027373	WITHOUT_CLASSIFICATION	6.346349726277083E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999137018422339	WITHOUT_CLASSIFICATION	8.629815776607923E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999733162501622	WITHOUT_CLASSIFICATION	2.6683749837862227E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999733162501622	WITHOUT_CLASSIFICATION	2.6683749837862227E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999733162501622	WITHOUT_CLASSIFICATION	2.6683749837862227E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999921253351849	WITHOUT_CLASSIFICATION	7.874664815144536E-6	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999940195534693	WITHOUT_CLASSIFICATION	5.980446530673562E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999914944730324	WITHOUT_CLASSIFICATION	8.505526967617196E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998354147870832	WITHOUT_CLASSIFICATION	1.6458521291692665E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998354147870832	WITHOUT_CLASSIFICATION	1.6458521291692665E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999821315311209	WITHOUT_CLASSIFICATION	1.786846887908425E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999977654530061	WITHOUT_CLASSIFICATION	2.2345469938976436E-6	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999576261979913	WITHOUT_CLASSIFICATION	4.23738020087608E-5	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999889621231531	WITHOUT_CLASSIFICATION	1.103787684692971E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999003453591141	WITHOUT_CLASSIFICATION	9.965464088593825E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999956130139929	WITHOUT_CLASSIFICATION	4.386986007093929E-6	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999956130139929	WITHOUT_CLASSIFICATION	4.386986007093929E-6	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999956130139929	WITHOUT_CLASSIFICATION	4.386986007093929E-6	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999924465598645	WITHOUT_CLASSIFICATION	7.553440135475282E-6	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999890974745062	WITHOUT_CLASSIFICATION	1.0902525493798114E-5	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999761436532673	WITHOUT_CLASSIFICATION	2.3856346732754718E-5	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999920680115095	WITHOUT_CLASSIFICATION	7.931988490435961E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999030284691736	WITHOUT_CLASSIFICATION	9.697153082643068E-5	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999630029126833	WITHOUT_CLASSIFICATION	3.6997087316672764E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999817007761455	WITHOUT_CLASSIFICATION	1.8299223854553325E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999817007761455	WITHOUT_CLASSIFICATION	1.8299223854553325E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999870314087356	WITHOUT_CLASSIFICATION	1.2968591264381524E-5	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999879596255514	WITHOUT_CLASSIFICATION	1.204037444854884E-5	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999925823666046	WITHOUT_CLASSIFICATION	7.417633395419483E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999822687279639	WITHOUT_CLASSIFICATION	1.7731272036048768E-5	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9998348278914866	WITHOUT_CLASSIFICATION	1.6517210851331432E-4	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.999996840203639	WITHOUT_CLASSIFICATION	3.159796361004522E-6	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999943192485997	WITHOUT_CLASSIFICATION	5.680751400297358E-6	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.99992806993808	WITHOUT_CLASSIFICATION	7.19300619199463E-5	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999993405880877	WITHOUT_CLASSIFICATION	6.594119122211351E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999894322150896	WITHOUT_CLASSIFICATION	1.0567784910359797E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999312551697551	WITHOUT_CLASSIFICATION	6.874483024484987E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999312551697551	WITHOUT_CLASSIFICATION	6.874483024484987E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999312551697551	WITHOUT_CLASSIFICATION	6.874483024484987E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999312551697551	WITHOUT_CLASSIFICATION	6.874483024484987E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999312551697551	WITHOUT_CLASSIFICATION	6.874483024484987E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978992512152	WITHOUT_CLASSIFICATION	2.100748784814114E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978992512152	WITHOUT_CLASSIFICATION	2.100748784814114E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978992512152	WITHOUT_CLASSIFICATION	2.100748784814114E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978992512152	WITHOUT_CLASSIFICATION	2.100748784814114E-6	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999692222554696	WITHOUT_CLASSIFICATION	3.077774453046697E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9998885938779398	WITHOUT_CLASSIFICATION	1.114061220601795E-4	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.999983015343933	WITHOUT_CLASSIFICATION	1.6984656067102865E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.999917073804351	WITHOUT_CLASSIFICATION	8.292619564895256E-5	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.999999153600066	WITHOUT_CLASSIFICATION	8.463999339865915E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999859176105235	WITHOUT_CLASSIFICATION	1.4082389476641547E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999988153394389	WITHOUT_CLASSIFICATION	1.1846605611032495E-6	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999914638615024	WITHOUT_CLASSIFICATION	8.536138497608057E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999709917906624	WITHOUT_CLASSIFICATION	2.9008209337544912E-5	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.999993597773369	WITHOUT_CLASSIFICATION	6.402226630962975E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.99990783690101	WITHOUT_CLASSIFICATION	9.21630989900352E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999815841173652	WITHOUT_CLASSIFICATION	1.841588263485847E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9998314691379958	WITHOUT_CLASSIFICATION	1.6853086200414072E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9998854988407576	WITHOUT_CLASSIFICATION	1.1450115924240734E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9998854988407576	WITHOUT_CLASSIFICATION	1.1450115924240734E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9998854988407576	WITHOUT_CLASSIFICATION	1.1450115924240734E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999906934223607	WITHOUT_CLASSIFICATION	9.306577639295854E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999906934223607	WITHOUT_CLASSIFICATION	9.306577639295854E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999862623268152	WITHOUT_CLASSIFICATION	1.3737673184917025E-5	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.999973023560739	WITHOUT_CLASSIFICATION	2.697643926092459E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999799165457539	WITHOUT_CLASSIFICATION	2.0083454246086266E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999912452526097	WITHOUT_CLASSIFICATION	8.754747390325118E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999912452526097	WITHOUT_CLASSIFICATION	8.754747390325118E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999912452526097	WITHOUT_CLASSIFICATION	8.754747390325118E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999971488752151	WITHOUT_CLASSIFICATION	2.851124784895932E-6	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999545343349417	WITHOUT_CLASSIFICATION	4.5465665058232856E-5	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999900456319023	WITHOUT_CLASSIFICATION	9.954368097686561E-6	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999691433130456	WITHOUT_CLASSIFICATION	3.0856686954334655E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999967047012112	WITHOUT_CLASSIFICATION	3.295298788858722E-6	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9997632625991872	WITHOUT_CLASSIFICATION	2.3673740081286485E-4	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999992487468405	WITHOUT_CLASSIFICATION	7.51253159351237E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999946877346451	WITHOUT_CLASSIFICATION	5.312265354945894E-6	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999981747530733	WITHOUT_CLASSIFICATION	1.825246926684246E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.998408324577608	WITHOUT_CLASSIFICATION	0.0015916754223921214	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.998408324577608	WITHOUT_CLASSIFICATION	0.0015916754223921214	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9999972309980112	WITHOUT_CLASSIFICATION	2.7690019889541645E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997754059003201	WITHOUT_CLASSIFICATION	2.2459409967984757E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999979183001423	WITHOUT_CLASSIFICATION	2.0816998577683937E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999979183001423	WITHOUT_CLASSIFICATION	2.0816998577683937E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999979183001423	WITHOUT_CLASSIFICATION	2.0816998577683937E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999979183001423	WITHOUT_CLASSIFICATION	2.0816998577683937E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999979183001423	WITHOUT_CLASSIFICATION	2.0816998577683937E-6	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999990625991436	WITHOUT_CLASSIFICATION	9.374008564506663E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.999869439500089	WITHOUT_CLASSIFICATION	1.305604999111121E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999950395163366	WITHOUT_CLASSIFICATION	4.960483663416546E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999958211883629	WITHOUT_CLASSIFICATION	4.178811637022653E-6	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999581819927165	WITHOUT_CLASSIFICATION	4.1818007283412214E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999645844829163	WITHOUT_CLASSIFICATION	3.5415517083728576E-5	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999998780741339	WITHOUT_CLASSIFICATION	1.2192586608021555E-7	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999921026067354	WITHOUT_CLASSIFICATION	7.897393264521E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996637031983736	WITHOUT_CLASSIFICATION	3.3629680162639334E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996637031983736	WITHOUT_CLASSIFICATION	3.3629680162639334E-4	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999966659375893	WITHOUT_CLASSIFICATION	3.3340624106978304E-6	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999876238140688	WITHOUT_CLASSIFICATION	1.237618593116297E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9996962515425148	WITHOUT_CLASSIFICATION	3.0374845748517475E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9996962515425148	WITHOUT_CLASSIFICATION	3.0374845748517475E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.999960157609122	WITHOUT_CLASSIFICATION	3.984239087791055E-5	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999838346789062	WITHOUT_CLASSIFICATION	1.6165321093777833E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999887097103785	WITHOUT_CLASSIFICATION	1.1290289621587602E-5	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999992039801828	WITHOUT_CLASSIFICATION	7.96019817256351E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9998958159280019	WITHOUT_CLASSIFICATION	1.0418407199804734E-4	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999964789895261	WITHOUT_CLASSIFICATION	3.5210104738481045E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999987416205275	WITHOUT_CLASSIFICATION	1.2583794725548768E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999964008393231	WITHOUT_CLASSIFICATION	3.599160676884583E-6	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999976983963966	WITHOUT_CLASSIFICATION	2.301603603422088E-6	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999496757837095	WITHOUT_CLASSIFICATION	5.0324216290462084E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999876079436835	WITHOUT_CLASSIFICATION	1.2392056316426309E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999876079436835	WITHOUT_CLASSIFICATION	1.2392056316426309E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999876079436835	WITHOUT_CLASSIFICATION	1.2392056316426309E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999876079436835	WITHOUT_CLASSIFICATION	1.2392056316426309E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999507754690904	WITHOUT_CLASSIFICATION	4.922453090962749E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.999991684178488	WITHOUT_CLASSIFICATION	8.315821511932819E-6	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999903747953344	WITHOUT_CLASSIFICATION	9.625204665683742E-6	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.999995668562077	WITHOUT_CLASSIFICATION	4.331437923013997E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999900291458844	WITHOUT_CLASSIFICATION	9.97085411547906E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999819891628094	WITHOUT_CLASSIFICATION	1.801083719058427E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999819891628094	WITHOUT_CLASSIFICATION	1.801083719058427E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999819891628094	WITHOUT_CLASSIFICATION	1.801083719058427E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999819891628094	WITHOUT_CLASSIFICATION	1.801083719058427E-5	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9999927518164491	WITHOUT_CLASSIFICATION	7.248183550953995E-6	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999634703002899	WITHOUT_CLASSIFICATION	3.6529699710105966E-5	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999952230680834	WITHOUT_CLASSIFICATION	4.776931916555314E-6	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.999991829446026	WITHOUT_CLASSIFICATION	8.17055397400902E-6	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999994527021504	WITHOUT_CLASSIFICATION	5.472978495777407E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999922213145777	WITHOUT_CLASSIFICATION	7.778685422302446E-6	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999997255843888	WITHOUT_CLASSIFICATION	2.744156112956203E-7	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997106561854515	WITHOUT_CLASSIFICATION	2.893438145485045E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997106561854515	WITHOUT_CLASSIFICATION	2.893438145485045E-4	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999725169144879	WITHOUT_CLASSIFICATION	2.7483085512133108E-5	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999886391129246	WITHOUT_CLASSIFICATION	1.1360887075435846E-5	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9998070596566252	WITHOUT_CLASSIFICATION	1.9294034337488544E-4	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999708318819857	WITHOUT_CLASSIFICATION	2.9168118014414314E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999963304451646	WITHOUT_CLASSIFICATION	3.6695548355615694E-6	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999992179667513	WITHOUT_CLASSIFICATION	7.820332486273751E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999963998584147	WITHOUT_CLASSIFICATION	3.600141585306448E-5	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999763312410177	WITHOUT_CLASSIFICATION	2.3668758982345273E-5	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.999992772375033	WITHOUT_CLASSIFICATION	7.2276249670823796E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9998589473022782	WITHOUT_CLASSIFICATION	1.410526977218879E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999993754753442	WITHOUT_CLASSIFICATION	6.245246557439939E-7	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999220884097332	WITHOUT_CLASSIFICATION	7.791159026670858E-5	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999987544325001	WITHOUT_CLASSIFICATION	1.2455674998567981E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999555558682268	WITHOUT_CLASSIFICATION	4.444413177318766E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999555558682268	WITHOUT_CLASSIFICATION	4.444413177318766E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999895502440329	WITHOUT_CLASSIFICATION	1.044975596708368E-5	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999968096630086	WITHOUT_CLASSIFICATION	3.1903369912413517E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999863036221978	WITHOUT_CLASSIFICATION	1.369637780228956E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999938532161241	WITHOUT_CLASSIFICATION	6.146783875929043E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9998392102373529	WITHOUT_CLASSIFICATION	1.6078976264703458E-4	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999580232427204	WITHOUT_CLASSIFICATION	4.197675727958543E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999950723819968	WITHOUT_CLASSIFICATION	4.927618003264441E-6	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999467283326067	WITHOUT_CLASSIFICATION	5.327166739342447E-5	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999964031794936	WITHOUT_CLASSIFICATION	3.5968205065402923E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.999998621414481	WITHOUT_CLASSIFICATION	1.3785855189796855E-6	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999694189976206	WITHOUT_CLASSIFICATION	3.058100237937862E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999565300911811	WITHOUT_CLASSIFICATION	4.34699088188574E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999565300911811	WITHOUT_CLASSIFICATION	4.34699088188574E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999850350400405	WITHOUT_CLASSIFICATION	1.4964959959326598E-5	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999942457608191	WITHOUT_CLASSIFICATION	5.754239181013818E-6	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999971687846462	WITHOUT_CLASSIFICATION	2.831215353749718E-6	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999777063071181	WITHOUT_CLASSIFICATION	2.2293692881844942E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999920328492717	WITHOUT_CLASSIFICATION	7.967150728255796E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999813095474335	WITHOUT_CLASSIFICATION	1.8690452566569278E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999922702870923	WITHOUT_CLASSIFICATION	7.729712907681944E-6	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.999991743887992	WITHOUT_CLASSIFICATION	8.256112007999526E-6	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999889818187863	WITHOUT_CLASSIFICATION	1.1018181213802934E-5	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999976734948438	WITHOUT_CLASSIFICATION	2.3265051561482377E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999950907047066	WITHOUT_CLASSIFICATION	4.909295293375687E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999901465375521	WITHOUT_CLASSIFICATION	9.85346244789449E-6	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999952302096308	WITHOUT_CLASSIFICATION	4.769790369289074E-6	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999973080328323	WITHOUT_CLASSIFICATION	2.691967167828352E-6	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999996627398984	WITHOUT_CLASSIFICATION	3.372601015739005E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993215762739	WITHOUT_CLASSIFICATION	6.78423726153966E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999913174397277	WITHOUT_CLASSIFICATION	8.682560272333266E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999778097485978	WITHOUT_CLASSIFICATION	2.2190251402132987E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999899123804463	WITHOUT_CLASSIFICATION	1.0087619553595017E-5	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999976091960958	WITHOUT_CLASSIFICATION	2.3908039041800934E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.99999191155317	WITHOUT_CLASSIFICATION	8.088446830021483E-6	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999678707948981	WITHOUT_CLASSIFICATION	3.2129205101849414E-5	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999985647238796	WITHOUT_CLASSIFICATION	1.4352761204255227E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999906675718805	WITHOUT_CLASSIFICATION	9.332428119472136E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999435993078403	WITHOUT_CLASSIFICATION	5.640069215968406E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9995421092169153	WITHOUT_CLASSIFICATION	4.5789078308461557E-4	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999963797029348	WITHOUT_CLASSIFICATION	3.6202970653258643E-6	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999137772414614	WITHOUT_CLASSIFICATION	8.622275853868834E-5	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999975810548773	WITHOUT_CLASSIFICATION	2.418945122592434E-6	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999965282580562	WITHOUT_CLASSIFICATION	3.471741943910161E-6	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999928942509606	WITHOUT_CLASSIFICATION	7.10574903939537E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999573102444584	WITHOUT_CLASSIFICATION	4.268975554158052E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999573102444584	WITHOUT_CLASSIFICATION	4.268975554158052E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999573102444584	WITHOUT_CLASSIFICATION	4.268975554158052E-5	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999990337721787	WITHOUT_CLASSIFICATION	9.662278212974464E-7	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9998568752849587	WITHOUT_CLASSIFICATION	1.4312471504137388E-4	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999978419069531	WITHOUT_CLASSIFICATION	2.158093046881067E-6	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999832858758125	WITHOUT_CLASSIFICATION	1.6714124187546232E-5	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999978638176289	WITHOUT_CLASSIFICATION	2.1361823711255206E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9999902192906811	WITHOUT_CLASSIFICATION	9.78070931896582E-6	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999761751462118	WITHOUT_CLASSIFICATION	2.3824853788151677E-5	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999813887953303	WITHOUT_CLASSIFICATION	1.861120466968888E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999951086028797	WITHOUT_CLASSIFICATION	4.891397120368617E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999951086028797	WITHOUT_CLASSIFICATION	4.891397120368617E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999951086028797	WITHOUT_CLASSIFICATION	4.891397120368617E-6	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999938455425558	WITHOUT_CLASSIFICATION	6.154457444209725E-6	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999382870027204	WITHOUT_CLASSIFICATION	6.171299727969269E-5	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999970530206201	WITHOUT_CLASSIFICATION	2.946979379925485E-6	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999993647713208	WITHOUT_CLASSIFICATION	6.352286792093892E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999992592067222	WITHOUT_CLASSIFICATION	7.407932778596974E-7	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999976760004217	WITHOUT_CLASSIFICATION	2.3239995783600174E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999769540678758	WITHOUT_CLASSIFICATION	2.3045932124189687E-5	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999366521601569	WITHOUT_CLASSIFICATION	6.334783984313102E-5	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999905775207847	WITHOUT_CLASSIFICATION	9.422479215340906E-6	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999970096032404	WITHOUT_CLASSIFICATION	2.9903967596143716E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999934323271191	WITHOUT_CLASSIFICATION	6.567672880806076E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999841143215129	WITHOUT_CLASSIFICATION	1.5885678487130196E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999841143215129	WITHOUT_CLASSIFICATION	1.5885678487130196E-5	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999998479380894	WITHOUT_CLASSIFICATION	1.5206191074556316E-7	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999821386074674	WITHOUT_CLASSIFICATION	1.7861392532565277E-5	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999980262369855	WITHOUT_CLASSIFICATION	1.9737630144683986E-6	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.99998597253714	WITHOUT_CLASSIFICATION	1.4027462859932409E-5	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999968882903665	WITHOUT_CLASSIFICATION	3.1117096335149066E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.999954723591443	WITHOUT_CLASSIFICATION	4.527640855699296E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999883539811164	WITHOUT_CLASSIFICATION	1.1646018883659547E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999883539811164	WITHOUT_CLASSIFICATION	1.1646018883659547E-5	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999436409733884	WITHOUT_CLASSIFICATION	5.635902661168017E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999821308933862	WITHOUT_CLASSIFICATION	1.786910661386878E-5	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999907226160781	WITHOUT_CLASSIFICATION	9.277383921800751E-6	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.999999396242793	WITHOUT_CLASSIFICATION	6.037572069796031E-7	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999876025477591	WITHOUT_CLASSIFICATION	1.2397452240816662E-5	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999974467334191	WITHOUT_CLASSIFICATION	2.553266580858625E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.999064375418676	WITHOUT_CLASSIFICATION	9.35624581324157E-4	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999909544131257	WITHOUT_CLASSIFICATION	9.045586874220269E-6	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999878813711699	WITHOUT_CLASSIFICATION	1.2118628829990393E-5	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999681056141807	WITHOUT_CLASSIFICATION	3.189438581934616E-5	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999974352880073	WITHOUT_CLASSIFICATION	2.5647119926903336E-6	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999979059681839	WITHOUT_CLASSIFICATION	2.094031816071768E-6	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999844728434237	WITHOUT_CLASSIFICATION	1.5527156576260863E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999952013684541	WITHOUT_CLASSIFICATION	4.798631545895773E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999952013684541	WITHOUT_CLASSIFICATION	4.798631545895773E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999952013684541	WITHOUT_CLASSIFICATION	4.798631545895773E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999952013684541	WITHOUT_CLASSIFICATION	4.798631545895773E-5	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999979537756345	WITHOUT_CLASSIFICATION	2.0462243654466847E-6	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999986265360902	WITHOUT_CLASSIFICATION	1.3734639098248668E-6	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9999981409011643	WITHOUT_CLASSIFICATION	1.8590988356933113E-6	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999873359379692	WITHOUT_CLASSIFICATION	1.2664062030916237E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999979977503806	WITHOUT_CLASSIFICATION	2.0022496194649438E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999966343180162	WITHOUT_CLASSIFICATION	3.3656819836649897E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999967078779229	WITHOUT_CLASSIFICATION	3.292122077122544E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998967106760701	WITHOUT_CLASSIFICATION	1.0328932392994302E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999359166562516	WITHOUT_CLASSIFICATION	6.408334374838455E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9995103727389523	WITHOUT_CLASSIFICATION	4.896272610476568E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9998727745716738	WITHOUT_CLASSIFICATION	1.2722542832621395E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9998727745716738	WITHOUT_CLASSIFICATION	1.2722542832621395E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9998727745716738	WITHOUT_CLASSIFICATION	1.2722542832621395E-4	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999691579372113	WITHOUT_CLASSIFICATION	3.084206278863546E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9990226771823182	WITHOUT_CLASSIFICATION	9.773228176817154E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998517819257096	WITHOUT_CLASSIFICATION	1.4821807429049203E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9998801379925687	WITHOUT_CLASSIFICATION	1.198620074313248E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9998801379925687	WITHOUT_CLASSIFICATION	1.198620074313248E-4	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999956295215879	WITHOUT_CLASSIFICATION	4.37047841195719E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999691579372113	WITHOUT_CLASSIFICATION	3.084206278863546E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999902442984638	WITHOUT_CLASSIFICATION	9.75570153620057E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999935133499923	WITHOUT_CLASSIFICATION	6.48665000762301E-6	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999928596297156	WITHOUT_CLASSIFICATION	7.140370284405169E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9997741582605065	WITHOUT_CLASSIFICATION	2.2584173949337884E-4	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999540022785147	WITHOUT_CLASSIFICATION	4.59977214852269E-5	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999713897588878	WITHOUT_CLASSIFICATION	2.8610241112258257E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999610853980065	WITHOUT_CLASSIFICATION	3.891460199347702E-5	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9992980723692132	WITHOUT_CLASSIFICATION	7.019276307867715E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9992880681771071	WITHOUT_CLASSIFICATION	7.119318228927406E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9992880681771071	WITHOUT_CLASSIFICATION	7.119318228927406E-4	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9996403980586138	WITHOUT_CLASSIFICATION	3.5960194138614967E-4	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.999935144557788	WITHOUT_CLASSIFICATION	6.485544221210487E-5	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999131064094344	WITHOUT_CLASSIFICATION	8.689359056557162E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999974217148738	WITHOUT_CLASSIFICATION	2.578285126153303E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999957157102615	WITHOUT_CLASSIFICATION	4.28428973849724E-5	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.99999783938961	WITHOUT_CLASSIFICATION	2.160610390018951E-6	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999796064896841	WITHOUT_CLASSIFICATION	2.0393510315959676E-5	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999555878846605	WITHOUT_CLASSIFICATION	4.441211533945969E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.999887711125387	WITHOUT_CLASSIFICATION	1.1228887461297352E-4	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9998967277102365	WITHOUT_CLASSIFICATION	1.0327228976341877E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999914752895069	WITHOUT_CLASSIFICATION	8.524710493008196E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9995103727389523	WITHOUT_CLASSIFICATION	4.896272610476568E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9995103727389523	WITHOUT_CLASSIFICATION	4.896272610476568E-4	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.999999608890553	WITHOUT_CLASSIFICATION	3.9110944714747804E-7	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999995065099978	WITHOUT_CLASSIFICATION	4.934900021713897E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999859229990072	WITHOUT_CLASSIFICATION	1.4077000992873287E-5	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999909636012433	WITHOUT_CLASSIFICATION	9.036398756829898E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999959086597147	WITHOUT_CLASSIFICATION	4.0913402853888775E-6	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999985431092149	WITHOUT_CLASSIFICATION	1.456890785208271E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999993621625352	WITHOUT_CLASSIFICATION	6.37837464889911E-7	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999987675138957	WITHOUT_CLASSIFICATION	1.2324861042518812E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999970321958492	WITHOUT_CLASSIFICATION	2.9678041507866126E-6	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999913907479624	WITHOUT_CLASSIFICATION	8.60925203752045E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999848850173182	WITHOUT_CLASSIFICATION	1.5114982681926957E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999962120690973	WITHOUT_CLASSIFICATION	3.7879309027596334E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999443292619999	WITHOUT_CLASSIFICATION	5.5670738000110615E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999443292619999	WITHOUT_CLASSIFICATION	5.5670738000110615E-5	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999977110638201	WITHOUT_CLASSIFICATION	2.28893617997126E-6	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999939670083232	WITHOUT_CLASSIFICATION	6.032991676835497E-6	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999814610436614	WITHOUT_CLASSIFICATION	1.8538956338719598E-5	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999973370382683	WITHOUT_CLASSIFICATION	2.6629617316357316E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999536803214075	WITHOUT_CLASSIFICATION	4.63196785925238E-5	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999878939462448	WITHOUT_CLASSIFICATION	1.2106053755167786E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999909809268912	WITHOUT_CLASSIFICATION	9.019073108745831E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9999882833741789	WITHOUT_CLASSIFICATION	1.1716625821072892E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999238675900695	WITHOUT_CLASSIFICATION	7.613240993049743E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999814665224538	WITHOUT_CLASSIFICATION	1.8533477546206443E-5	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999684178002605	WITHOUT_CLASSIFICATION	3.15821997394925E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999880846418441	WITHOUT_CLASSIFICATION	1.1915358156018962E-5	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999961367080833	WITHOUT_CLASSIFICATION	3.86329191666045E-6	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999962674932023	WITHOUT_CLASSIFICATION	3.732506797638355E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999967078779229	WITHOUT_CLASSIFICATION	3.292122077122544E-6	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9999890546108963	WITHOUT_CLASSIFICATION	1.0945389103644663E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999952765535327	WITHOUT_CLASSIFICATION	4.723446467309667E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999952765535327	WITHOUT_CLASSIFICATION	4.723446467309667E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999952765535327	WITHOUT_CLASSIFICATION	4.723446467309667E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999882002576542	WITHOUT_CLASSIFICATION	1.179974234580081E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999882002576542	WITHOUT_CLASSIFICATION	1.179974234580081E-4	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999243243411081	WITHOUT_CLASSIFICATION	7.5675658891949E-5	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9999994751142326	WITHOUT_CLASSIFICATION	5.2488576736663E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999972223277648	WITHOUT_CLASSIFICATION	2.7776722351808185E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999965472178359	WITHOUT_CLASSIFICATION	3.4527821640757064E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9995334328580133	WITHOUT_CLASSIFICATION	4.665671419866569E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999539648644857	WITHOUT_CLASSIFICATION	4.6035135514300365E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999967078779229	WITHOUT_CLASSIFICATION	3.292122077122544E-6	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999970284491524	WITHOUT_CLASSIFICATION	2.9715508476712988E-6	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999922288316521	WITHOUT_CLASSIFICATION	7.771168348065938E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.999610544216793	WITHOUT_CLASSIFICATION	3.894557832071047E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9990454299190337	WITHOUT_CLASSIFICATION	9.545700809664637E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999848549769428	WITHOUT_CLASSIFICATION	1.5145023057270823E-5	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999472300928526	WITHOUT_CLASSIFICATION	5.276990714736427E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.999997079804768	WITHOUT_CLASSIFICATION	2.920195232028848E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999495324411095	WITHOUT_CLASSIFICATION	5.0467558890543616E-5	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999896936851738	WITHOUT_CLASSIFICATION	1.0306314826176208E-5	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999986190419402	WITHOUT_CLASSIFICATION	1.3809580597783576E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999787581722299	WITHOUT_CLASSIFICATION	2.1241827770124623E-5	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999943618441183	WITHOUT_CLASSIFICATION	5.638155881709763E-6	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999972696105792	WITHOUT_CLASSIFICATION	2.7303894207508806E-6	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999942913413006	WITHOUT_CLASSIFICATION	5.708658699483853E-6	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999909701897659	WITHOUT_CLASSIFICATION	9.02981023401484E-6	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999996242009467	WITHOUT_CLASSIFICATION	3.757990533298602E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999835459278639	WITHOUT_CLASSIFICATION	1.6454072136083492E-5	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999987983438233	WITHOUT_CLASSIFICATION	1.2016561765757399E-6	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999987983438233	WITHOUT_CLASSIFICATION	1.2016561765757399E-6	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9998525951501948	WITHOUT_CLASSIFICATION	1.4740484980520268E-4	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999969078978288	WITHOUT_CLASSIFICATION	3.0921021711273196E-6	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.999984159707154	WITHOUT_CLASSIFICATION	1.5840292845949155E-5	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9999073152849042	WITHOUT_CLASSIFICATION	9.26847150958071E-5	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999978378109967	WITHOUT_CLASSIFICATION	2.162189003252705E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.999996922025382	WITHOUT_CLASSIFICATION	3.077974617994894E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.999996922025382	WITHOUT_CLASSIFICATION	3.077974617994894E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999940034907684	WITHOUT_CLASSIFICATION	5.996509231585135E-6	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999989328207456	WITHOUT_CLASSIFICATION	1.067179254437268E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999868387752046	WITHOUT_CLASSIFICATION	1.3161224795576716E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999868387752046	WITHOUT_CLASSIFICATION	1.3161224795576716E-5	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999985760140614	WITHOUT_CLASSIFICATION	1.4239859385878293E-6	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999986394717811	WITHOUT_CLASSIFICATION	1.360528218895705E-6	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999811050141666	WITHOUT_CLASSIFICATION	1.8894985833363164E-5	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997738511179	WITHOUT_CLASSIFICATION	2.261488821077388E-6	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9936815015946622	WITHOUT_CLASSIFICATION	0.00631849840533773	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999799892167383	WITHOUT_CLASSIFICATION	2.0010783261789015E-5	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999925092200461	WITHOUT_CLASSIFICATION	7.490779953855252E-6	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999896643182101	WITHOUT_CLASSIFICATION	1.0335681789887015E-5	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999976037603876	WITHOUT_CLASSIFICATION	2.396239612468988E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999998787382992	WITHOUT_CLASSIFICATION	1.212617007827109E-7	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999999327659584	WITHOUT_CLASSIFICATION	6.72340414987928E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999975889868328	WITHOUT_CLASSIFICATION	2.4110131672699895E-6	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999979938073769	WITHOUT_CLASSIFICATION	2.006192623074423E-6	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999939927083582	WITHOUT_CLASSIFICATION	6.007291641727983E-6	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999769695583686	WITHOUT_CLASSIFICATION	2.3030441631376127E-5	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999598907287157	WITHOUT_CLASSIFICATION	4.010927128424166E-5	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9994197144334713	WITHOUT_CLASSIFICATION	5.802855665287149E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999818407582615	WITHOUT_CLASSIFICATION	1.8159241738476133E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999842017836738	WITHOUT_CLASSIFICATION	1.5798216326232637E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999958774732843	WITHOUT_CLASSIFICATION	4.1225267157248615E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999771431785727	WITHOUT_CLASSIFICATION	2.285682142740203E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999771431785727	WITHOUT_CLASSIFICATION	2.285682142740203E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999771431785727	WITHOUT_CLASSIFICATION	2.285682142740203E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999771431785727	WITHOUT_CLASSIFICATION	2.285682142740203E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999771431785727	WITHOUT_CLASSIFICATION	2.285682142740203E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.999972571223746	WITHOUT_CLASSIFICATION	2.7428776253903162E-5	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999871160358323	WITHOUT_CLASSIFICATION	1.2883964167717012E-5	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999987390002105	WITHOUT_CLASSIFICATION	1.2609997893836223E-6	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999996039354702	WITHOUT_CLASSIFICATION	3.960645297864872E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999525398120553	WITHOUT_CLASSIFICATION	4.74601879446837E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999525398120553	WITHOUT_CLASSIFICATION	4.74601879446837E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999525398120553	WITHOUT_CLASSIFICATION	4.74601879446837E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999525398120553	WITHOUT_CLASSIFICATION	4.74601879446837E-5	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999590308623102	WITHOUT_CLASSIFICATION	4.096913768990368E-5	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999982764336393	WITHOUT_CLASSIFICATION	1.7235663606560809E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999940150597678	WITHOUT_CLASSIFICATION	5.984940232139784E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999183631263325	WITHOUT_CLASSIFICATION	8.163687366752137E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999183631263325	WITHOUT_CLASSIFICATION	8.163687366752137E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999976391115843	WITHOUT_CLASSIFICATION	2.360888415604725E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999859695661343	WITHOUT_CLASSIFICATION	1.403043386572681E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999859695661343	WITHOUT_CLASSIFICATION	1.403043386572681E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9998810652006938	WITHOUT_CLASSIFICATION	1.1893479930617058E-4	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999954356352702	WITHOUT_CLASSIFICATION	4.564364729779267E-6	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999612060614969	WITHOUT_CLASSIFICATION	3.879393850311114E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.999998976989827	WITHOUT_CLASSIFICATION	1.0230101731235763E-6	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999900272852021	WITHOUT_CLASSIFICATION	9.97271479785246E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999963652614975	WITHOUT_CLASSIFICATION	3.6347385024950796E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999963652614975	WITHOUT_CLASSIFICATION	3.6347385024950796E-6	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9999924938227621	WITHOUT_CLASSIFICATION	7.506177237787137E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999391710736953	WITHOUT_CLASSIFICATION	6.0828926304803885E-5	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.999954601161087	WITHOUT_CLASSIFICATION	4.539883891292689E-5	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999957507868295	WITHOUT_CLASSIFICATION	4.249213170627704E-6	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999982555950196	WITHOUT_CLASSIFICATION	1.7444049802691481E-6	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999978712548157	WITHOUT_CLASSIFICATION	2.1287451843724273E-6	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.999990071744048	WITHOUT_CLASSIFICATION	9.92825595197456E-6	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999782107456705	WITHOUT_CLASSIFICATION	2.178925432951175E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999229432821624	WITHOUT_CLASSIFICATION	7.705671783770408E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999818014881939	WITHOUT_CLASSIFICATION	1.8198511806099865E-5	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9999980224134702	WITHOUT_CLASSIFICATION	1.977586529630859E-6	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9999858094433989	WITHOUT_CLASSIFICATION	1.419055660108143E-5	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999939171467441	WITHOUT_CLASSIFICATION	6.0828532559125045E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9999977976652018	WITHOUT_CLASSIFICATION	2.202334798291627E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999962100836672	WITHOUT_CLASSIFICATION	3.7899163328286653E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999959964334713	WITHOUT_CLASSIFICATION	4.003566528808864E-6	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999174051260249	WITHOUT_CLASSIFICATION	8.259487397505112E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999910105596649	WITHOUT_CLASSIFICATION	8.98944033508875E-6	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999622866709729	WITHOUT_CLASSIFICATION	3.7713329027115445E-5	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999319666827698	WITHOUT_CLASSIFICATION	6.803331723015982E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999136562698973	WITHOUT_CLASSIFICATION	8.634373010277969E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999136562698973	WITHOUT_CLASSIFICATION	8.634373010277969E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999482459730703	WITHOUT_CLASSIFICATION	5.1754026929796236E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9999963106069951	WITHOUT_CLASSIFICATION	3.689393004892708E-6	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9995852481931766	WITHOUT_CLASSIFICATION	4.1475180682335535E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9999516319252632	WITHOUT_CLASSIFICATION	4.8368074736805295E-5	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9993956332566026	WITHOUT_CLASSIFICATION	6.043667433974034E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999979333589248	WITHOUT_CLASSIFICATION	2.066641075066927E-6	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9999901412558322	WITHOUT_CLASSIFICATION	9.8587441678426E-6	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9999741951735998	WITHOUT_CLASSIFICATION	2.5804826400176405E-5	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9999767341084347	WITHOUT_CLASSIFICATION	2.3265891565200805E-5	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9999963186643331	WITHOUT_CLASSIFICATION	3.6813356668639425E-6	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999998176511378	WITHOUT_CLASSIFICATION	1.8234886219567315E-7	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.999776791750361	WITHOUT_CLASSIFICATION	2.2320824963887632E-4	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9999767341084347	WITHOUT_CLASSIFICATION	2.3265891565200805E-5	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9999948640821406	WITHOUT_CLASSIFICATION	5.135917859487902E-6	DEFECT
