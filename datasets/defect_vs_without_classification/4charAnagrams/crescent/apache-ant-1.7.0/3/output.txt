/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999748451945166	WITHOUT_CLASSIFICATION	2.5154805483346787E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9997679610345281	WITHOUT_CLASSIFICATION	2.3203896547179822E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999969043628413	WITHOUT_CLASSIFICATION	3.0956371586076017E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999969043628413	WITHOUT_CLASSIFICATION	3.0956371586076017E-6	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999912243517415	WITHOUT_CLASSIFICATION	8.775648258465876E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999922702661188	WITHOUT_CLASSIFICATION	7.729733881261996E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999992906724562	WITHOUT_CLASSIFICATION	7.093275439551896E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999986012608617	WITHOUT_CLASSIFICATION	1.3987391382577607E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999974711534427	WITHOUT_CLASSIFICATION	2.528846557331477E-6	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999985499964348	WITHOUT_CLASSIFICATION	1.450003565172067E-6	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999999947581198	WITHOUT_CLASSIFICATION	5.241880218392883E-9	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999957937046053	WITHOUT_CLASSIFICATION	4.206295394605157E-6	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999985920015115	WITHOUT_CLASSIFICATION	1.407998488447457E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9998552626022729	WITHOUT_CLASSIFICATION	1.4473739772720578E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.999994111535891	WITHOUT_CLASSIFICATION	5.888464108887766E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999964635641037	WITHOUT_CLASSIFICATION	3.5364358963968382E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999964635641037	WITHOUT_CLASSIFICATION	3.5364358963968382E-6	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999999528945404	WITHOUT_CLASSIFICATION	4.7105459676035625E-8	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999872968465833	WITHOUT_CLASSIFICATION	1.2703153416845395E-5	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9987307242632704	WITHOUT_CLASSIFICATION	0.0012692757367296244	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999986368132597	WITHOUT_CLASSIFICATION	1.363186740315002E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9997673898040781	WITHOUT_CLASSIFICATION	2.326101959218769E-4	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999983266611928	WITHOUT_CLASSIFICATION	1.6733388072209187E-6	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999983241676649	WITHOUT_CLASSIFICATION	1.6758323351058084E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999955907789952	WITHOUT_CLASSIFICATION	4.409221004717779E-6	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999974394867888	WITHOUT_CLASSIFICATION	2.560513211179419E-6	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999987680386969	WITHOUT_CLASSIFICATION	1.2319613031535482E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999885365788813	WITHOUT_CLASSIFICATION	1.146342111867421E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995630555695	WITHOUT_CLASSIFICATION	4.3694443057219783E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999854227514748	WITHOUT_CLASSIFICATION	1.4577248525083064E-5	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999743262851951	WITHOUT_CLASSIFICATION	2.5673714804895172E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999928639323407	WITHOUT_CLASSIFICATION	7.1360676593125E-6	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999949213590785	WITHOUT_CLASSIFICATION	5.0786409214513005E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999826448927529	WITHOUT_CLASSIFICATION	1.7355107247064185E-5	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999923652384123	WITHOUT_CLASSIFICATION	7.634761587731154E-6	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999960095042303	WITHOUT_CLASSIFICATION	3.990495769692428E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999242426846914	WITHOUT_CLASSIFICATION	7.575731530862175E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999986368132597	WITHOUT_CLASSIFICATION	1.363186740315002E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999954912314034	WITHOUT_CLASSIFICATION	4.50876859650018E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999925934475024	WITHOUT_CLASSIFICATION	7.406552497603401E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999925934475024	WITHOUT_CLASSIFICATION	7.406552497603401E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999999771231848	WITHOUT_CLASSIFICATION	2.2876815208566856E-8	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999992242284205	WITHOUT_CLASSIFICATION	7.757715795173342E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999957037794246	WITHOUT_CLASSIFICATION	4.296220575388183E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999957037794246	WITHOUT_CLASSIFICATION	4.296220575388183E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999964681341826	WITHOUT_CLASSIFICATION	3.5318658174845147E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999995601797815	WITHOUT_CLASSIFICATION	4.3982021843567846E-7	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999958810781522	WITHOUT_CLASSIFICATION	4.118921847868603E-6	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999695779857259	WITHOUT_CLASSIFICATION	3.042201427400981E-5	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999996946722435	WITHOUT_CLASSIFICATION	3.053277565527918E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984329359295	WITHOUT_CLASSIFICATION	1.567064070482896E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999993925687886	WITHOUT_CLASSIFICATION	6.074312114149653E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999968369219534	WITHOUT_CLASSIFICATION	3.1630780465816127E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999968369219534	WITHOUT_CLASSIFICATION	3.1630780465816127E-6	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999965690638634	WITHOUT_CLASSIFICATION	3.4309361366900687E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999993688767923	WITHOUT_CLASSIFICATION	6.311232076773406E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999985307641346	WITHOUT_CLASSIFICATION	1.4692358653887193E-6	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999985307641346	WITHOUT_CLASSIFICATION	1.4692358653887193E-6	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999997812930088	WITHOUT_CLASSIFICATION	2.1870699118778177E-7	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999883174989376	WITHOUT_CLASSIFICATION	1.1682501062455076E-5	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999523915966582	WITHOUT_CLASSIFICATION	4.7608403341879606E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999390227092166	WITHOUT_CLASSIFICATION	6.097729078348783E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999987365776436	WITHOUT_CLASSIFICATION	1.2634223563930591E-6	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999946569662139	WITHOUT_CLASSIFICATION	5.343033786088875E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999926315249212	WITHOUT_CLASSIFICATION	7.368475078716044E-6	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999983099942203	WITHOUT_CLASSIFICATION	1.6900057797605882E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999659031576422	WITHOUT_CLASSIFICATION	3.409684235774378E-5	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999678552658163	WITHOUT_CLASSIFICATION	3.2144734183731364E-5	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999966542500253	WITHOUT_CLASSIFICATION	3.3457499747168573E-6	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999453157171947	WITHOUT_CLASSIFICATION	5.4684282805297606E-5	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9996433139714793	WITHOUT_CLASSIFICATION	3.566860285206704E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999996687473227	WITHOUT_CLASSIFICATION	3.312526773828559E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999960653053453	WITHOUT_CLASSIFICATION	3.934694654574957E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999960653053453	WITHOUT_CLASSIFICATION	3.934694654574957E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999390227092166	WITHOUT_CLASSIFICATION	6.097729078348783E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999312359765739	WITHOUT_CLASSIFICATION	6.876402342615755E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999390227092166	WITHOUT_CLASSIFICATION	6.097729078348783E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999932832429943	WITHOUT_CLASSIFICATION	6.716757005706282E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999312359765739	WITHOUT_CLASSIFICATION	6.876402342615755E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.99993217938472	WITHOUT_CLASSIFICATION	6.782061527992717E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999203033374147	WITHOUT_CLASSIFICATION	7.96966625852399E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999437801849073	WITHOUT_CLASSIFICATION	5.6219815092713287E-5	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999944172877	WITHOUT_CLASSIFICATION	5.5827123033459195E-9	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999926838173699	WITHOUT_CLASSIFICATION	7.3161826300655614E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999926838173699	WITHOUT_CLASSIFICATION	7.3161826300655614E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999926838173699	WITHOUT_CLASSIFICATION	7.3161826300655614E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999926838173699	WITHOUT_CLASSIFICATION	7.3161826300655614E-6	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999828379727741	WITHOUT_CLASSIFICATION	1.716202722587423E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999983927207335	WITHOUT_CLASSIFICATION	1.60727926655014E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999983927207335	WITHOUT_CLASSIFICATION	1.60727926655014E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999970846592926	WITHOUT_CLASSIFICATION	2.9153407074572663E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999983927207335	WITHOUT_CLASSIFICATION	1.60727926655014E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999739861624676	WITHOUT_CLASSIFICATION	2.6013837532445117E-5	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999969956599913	WITHOUT_CLASSIFICATION	3.004340008695416E-6	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999995351387668	WITHOUT_CLASSIFICATION	4.648612331220258E-7	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999998398459452	WITHOUT_CLASSIFICATION	1.6015405473931768E-7	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999977427847231	WITHOUT_CLASSIFICATION	2.2572152769464027E-6	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999940563811497	WITHOUT_CLASSIFICATION	5.943618850343446E-6	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999978857210856	WITHOUT_CLASSIFICATION	2.1142789142913046E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999987519439368	WITHOUT_CLASSIFICATION	1.2480560631472403E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999953056323136	WITHOUT_CLASSIFICATION	4.694367686398834E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999981729979022	WITHOUT_CLASSIFICATION	1.8270020978916861E-6	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.999977288845736	WITHOUT_CLASSIFICATION	2.271115426396569E-5	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999624815252999	WITHOUT_CLASSIFICATION	3.751847470010628E-5	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999915661826031	WITHOUT_CLASSIFICATION	8.43381739681233E-6	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999817438851284	WITHOUT_CLASSIFICATION	1.825611487164447E-5	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999958905878632	WITHOUT_CLASSIFICATION	4.109412136821285E-6	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.999983557656872	WITHOUT_CLASSIFICATION	1.6442343128053463E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999422874429458	WITHOUT_CLASSIFICATION	5.771255705420265E-5	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999903332781562	WITHOUT_CLASSIFICATION	9.66672184368408E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999984068309176	WITHOUT_CLASSIFICATION	1.5931690824215386E-6	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999985519239859	WITHOUT_CLASSIFICATION	1.4480760140761955E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999934656394672	WITHOUT_CLASSIFICATION	6.534360532826924E-6	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999983289993917	WITHOUT_CLASSIFICATION	1.6710006083487834E-6	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.999993109729983	WITHOUT_CLASSIFICATION	6.890270017008272E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999953056323136	WITHOUT_CLASSIFICATION	4.694367686398834E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999977954985684	WITHOUT_CLASSIFICATION	2.2045014316711512E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999977858192857	WITHOUT_CLASSIFICATION	2.214180714297023E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999937295086883	WITHOUT_CLASSIFICATION	6.270491311781077E-6	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.999992111407414	WITHOUT_CLASSIFICATION	7.888592586165301E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999968761700069	WITHOUT_CLASSIFICATION	3.1238299930931473E-6	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999969710800694	WITHOUT_CLASSIFICATION	3.028919930572401E-6	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999833405120673	WITHOUT_CLASSIFICATION	1.6659487932796425E-5	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999939419481882	WITHOUT_CLASSIFICATION	6.058051811817921E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.99999766351566	WITHOUT_CLASSIFICATION	2.3364843399418782E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999993388844663	WITHOUT_CLASSIFICATION	6.611155336862961E-7	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999987319521548	WITHOUT_CLASSIFICATION	1.268047845189725E-6	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999996922652895	WITHOUT_CLASSIFICATION	3.0773471046625707E-7	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999984092068881	WITHOUT_CLASSIFICATION	1.590793111911328E-6	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999983771462759	WITHOUT_CLASSIFICATION	1.622853724107874E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.99998950382458	WITHOUT_CLASSIFICATION	1.049617542005301E-5	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999930155824206	WITHOUT_CLASSIFICATION	6.98441757945437E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999991127855159	WITHOUT_CLASSIFICATION	8.872144840596446E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9965429153512617	WITHOUT_CLASSIFICATION	0.0034570846487381947	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.999971323102622	WITHOUT_CLASSIFICATION	2.8676897377944548E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999990311969068	WITHOUT_CLASSIFICATION	9.688030931268172E-7	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999910298504409	WITHOUT_CLASSIFICATION	8.970149559121388E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999913857244317	WITHOUT_CLASSIFICATION	8.61427556833406E-6	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999989036193428	WITHOUT_CLASSIFICATION	1.0963806571394587E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9999974620899379	WITHOUT_CLASSIFICATION	2.537910062098442E-6	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999988684567248	WITHOUT_CLASSIFICATION	1.1315432751803111E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999985406293044	WITHOUT_CLASSIFICATION	1.4593706957038027E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999002249255156	WITHOUT_CLASSIFICATION	9.977507448444922E-5	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999964993412291	WITHOUT_CLASSIFICATION	3.5006587708118967E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999977385582597	WITHOUT_CLASSIFICATION	2.2614417402281143E-6	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999910348802189	WITHOUT_CLASSIFICATION	8.965119781077189E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999928006568944	WITHOUT_CLASSIFICATION	7.199343105563554E-6	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999981524815222	WITHOUT_CLASSIFICATION	1.8475184778394815E-6	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.999999482766498	WITHOUT_CLASSIFICATION	5.17233502027756E-7	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999612260496055	WITHOUT_CLASSIFICATION	3.877395039440199E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999739861624676	WITHOUT_CLASSIFICATION	2.6013837532445117E-5	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999990773849708	WITHOUT_CLASSIFICATION	9.226150290388945E-7	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999849017197947	WITHOUT_CLASSIFICATION	1.5098280205424251E-5	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999988931989137	WITHOUT_CLASSIFICATION	1.106801086333452E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999729836910459	WITHOUT_CLASSIFICATION	2.701630895408028E-5	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9995896486132293	WITHOUT_CLASSIFICATION	4.1035138677074866E-4	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999590393867254	WITHOUT_CLASSIFICATION	4.0960613274542065E-5	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999871077839672	WITHOUT_CLASSIFICATION	1.2892216032863959E-5	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999979794510181	WITHOUT_CLASSIFICATION	2.020548981917586E-6	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999858917185275	WITHOUT_CLASSIFICATION	1.410828147251543E-5	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999993827994546	WITHOUT_CLASSIFICATION	6.172005453743641E-7	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999989444819604	WITHOUT_CLASSIFICATION	1.0555180396251865E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.999871312175504	WITHOUT_CLASSIFICATION	1.2868782449612708E-4	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999496130643721	WITHOUT_CLASSIFICATION	5.038693562791131E-5	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999906251264677	WITHOUT_CLASSIFICATION	9.374873532169312E-6	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999842171672874	WITHOUT_CLASSIFICATION	1.5782832712662725E-5	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999959615730423	WITHOUT_CLASSIFICATION	4.038426957762866E-6	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999994517811879	WITHOUT_CLASSIFICATION	5.482188120720235E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999899186651694	WITHOUT_CLASSIFICATION	1.00813348306382E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999934213153339	WITHOUT_CLASSIFICATION	6.57868466608614E-6	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999955514271266	WITHOUT_CLASSIFICATION	4.448572873452992E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999931419911507	WITHOUT_CLASSIFICATION	6.858008849182364E-6	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999996733410172	WITHOUT_CLASSIFICATION	3.266589826563931E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999892237019059	WITHOUT_CLASSIFICATION	1.0776298094114832E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.999994442906789	WITHOUT_CLASSIFICATION	5.55709321108693E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.999994442906789	WITHOUT_CLASSIFICATION	5.55709321108693E-6	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999876345522564	WITHOUT_CLASSIFICATION	1.2365447743643301E-5	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999974037014665	WITHOUT_CLASSIFICATION	2.596298533569599E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.999994574258878	WITHOUT_CLASSIFICATION	5.4257411220189976E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.999994574258878	WITHOUT_CLASSIFICATION	5.4257411220189976E-6	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999975839706793	WITHOUT_CLASSIFICATION	2.416029320740971E-6	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999965612959784	WITHOUT_CLASSIFICATION	3.438704021732965E-6	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9995479910820804	WITHOUT_CLASSIFICATION	4.520089179196999E-4	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999883142288895	WITHOUT_CLASSIFICATION	1.1685771110511165E-5	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999665529382602	WITHOUT_CLASSIFICATION	3.344706173975208E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999976895579591	WITHOUT_CLASSIFICATION	2.3104420409188173E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999675885183246	WITHOUT_CLASSIFICATION	3.241148167549399E-5	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999319376425687	WITHOUT_CLASSIFICATION	6.806235743131496E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999847174853542	WITHOUT_CLASSIFICATION	1.5282514645728906E-5	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999981672762058	WITHOUT_CLASSIFICATION	1.8327237941576565E-6	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999970952353933	WITHOUT_CLASSIFICATION	2.9047646067641993E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.999997021737313	WITHOUT_CLASSIFICATION	2.978262687095347E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999845808684642	WITHOUT_CLASSIFICATION	1.541913153572348E-5	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999986012608617	WITHOUT_CLASSIFICATION	1.3987391382577607E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999974711534427	WITHOUT_CLASSIFICATION	2.528846557331477E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999960653053453	WITHOUT_CLASSIFICATION	3.934694654574957E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999845808684642	WITHOUT_CLASSIFICATION	1.541913153572348E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9983362178404686	WITHOUT_CLASSIFICATION	0.0016637821595315546	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999977167375916	WITHOUT_CLASSIFICATION	2.283262408317006E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999977167375916	WITHOUT_CLASSIFICATION	2.283262408317006E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999977167375916	WITHOUT_CLASSIFICATION	2.283262408317006E-6	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999941636597687	WITHOUT_CLASSIFICATION	5.836340231309929E-6	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999404777100902	WITHOUT_CLASSIFICATION	5.9522289909723435E-5	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999404633953308	WITHOUT_CLASSIFICATION	5.9536604669132765E-5	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9946182476953828	WITHOUT_CLASSIFICATION	0.005381752304617147	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.999189925931592	WITHOUT_CLASSIFICATION	8.100740684081405E-4	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999808730507843	WITHOUT_CLASSIFICATION	1.9126949215647784E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9983362178404686	WITHOUT_CLASSIFICATION	0.0016637821595315546	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999981008676407	WITHOUT_CLASSIFICATION	1.8991323591524483E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9997665701140608	WITHOUT_CLASSIFICATION	2.3342988593925588E-4	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999997048579272	WITHOUT_CLASSIFICATION	2.9514207276738875E-7	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999959277881767	WITHOUT_CLASSIFICATION	4.072211823340173E-6	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.999959772601978	WITHOUT_CLASSIFICATION	4.0227398021999955E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999960653053453	WITHOUT_CLASSIFICATION	3.934694654574957E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999960653053453	WITHOUT_CLASSIFICATION	3.934694654574957E-6	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999847174853542	WITHOUT_CLASSIFICATION	1.5282514645728906E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999981008676407	WITHOUT_CLASSIFICATION	1.8991323591524483E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999994854054982	WITHOUT_CLASSIFICATION	5.145945018049838E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999994854054982	WITHOUT_CLASSIFICATION	5.145945018049838E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.999994854054982	WITHOUT_CLASSIFICATION	5.145945018049838E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999750584852811	WITHOUT_CLASSIFICATION	2.4941514718836106E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999750584852811	WITHOUT_CLASSIFICATION	2.4941514718836106E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999421635209039	WITHOUT_CLASSIFICATION	5.7836479095992994E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999421635209039	WITHOUT_CLASSIFICATION	5.7836479095992994E-5	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999729159122328	WITHOUT_CLASSIFICATION	2.708408776718541E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.999986995328311	WITHOUT_CLASSIFICATION	1.3004671688932433E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.999986995328311	WITHOUT_CLASSIFICATION	1.3004671688932433E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999976301884916	WITHOUT_CLASSIFICATION	2.3698115083945954E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999995546103998	WITHOUT_CLASSIFICATION	4.453896002828503E-7	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999793146884722	WITHOUT_CLASSIFICATION	2.068531152781351E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.999992974897001	WITHOUT_CLASSIFICATION	7.025102998920881E-6	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.999992974897001	WITHOUT_CLASSIFICATION	7.025102998920881E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999864645815996	WITHOUT_CLASSIFICATION	1.3535418400313627E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999864645815996	WITHOUT_CLASSIFICATION	1.3535418400313627E-5	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999845850412602	WITHOUT_CLASSIFICATION	1.5414958739771382E-5	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.99997889379971	WITHOUT_CLASSIFICATION	2.110620029008004E-5	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999633036973151	WITHOUT_CLASSIFICATION	3.669630268488871E-5	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.999955023785954	WITHOUT_CLASSIFICATION	4.497621404587479E-5	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999867910737331	WITHOUT_CLASSIFICATION	1.3208926266837167E-5	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.999975989341991	WITHOUT_CLASSIFICATION	2.4010658009157685E-5	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999955113607539	WITHOUT_CLASSIFICATION	4.488639246088888E-6	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999960321078515	WITHOUT_CLASSIFICATION	3.967892148540678E-6	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.999991514844287	WITHOUT_CLASSIFICATION	8.485155712959209E-6	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999995523626918	WITHOUT_CLASSIFICATION	4.4763730821098953E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999973548818606	WITHOUT_CLASSIFICATION	2.6451181393560013E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999990831102965	WITHOUT_CLASSIFICATION	9.168897035192636E-7	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.999998998617016	WITHOUT_CLASSIFICATION	1.0013829839228437E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999538190643106	WITHOUT_CLASSIFICATION	4.618093568936521E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9983638869863918	WITHOUT_CLASSIFICATION	0.0016361130136082604	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999952164643617	WITHOUT_CLASSIFICATION	4.783535638277267E-6	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999994920187558	WITHOUT_CLASSIFICATION	5.079812441874686E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999538190643106	WITHOUT_CLASSIFICATION	4.618093568936521E-5	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999939023638597	WITHOUT_CLASSIFICATION	6.097636140361755E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999538190643106	WITHOUT_CLASSIFICATION	4.618093568936521E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9983638869863918	WITHOUT_CLASSIFICATION	0.0016361130136082604	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999225654721	WITHOUT_CLASSIFICATION	7.74345278853221E-8	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.999999608839118	WITHOUT_CLASSIFICATION	3.9116088200393715E-7	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999967935340599	WITHOUT_CLASSIFICATION	3.206465940190944E-6	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999065817708	WITHOUT_CLASSIFICATION	9.341822913432534E-8	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999998758962025	WITHOUT_CLASSIFICATION	1.2410379754165977E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999945109594734	WITHOUT_CLASSIFICATION	5.48904052643973E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999999417117242	WITHOUT_CLASSIFICATION	5.8288275852299716E-8	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999997236221005	WITHOUT_CLASSIFICATION	2.76377899463548E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999945109594734	WITHOUT_CLASSIFICATION	5.48904052643973E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999945109594734	WITHOUT_CLASSIFICATION	5.48904052643973E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999945109594734	WITHOUT_CLASSIFICATION	5.48904052643973E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999945109594734	WITHOUT_CLASSIFICATION	5.48904052643973E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999987765676311	WITHOUT_CLASSIFICATION	1.2234323689242109E-6	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999991713379814	WITHOUT_CLASSIFICATION	8.286620185395394E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.99999966377367	WITHOUT_CLASSIFICATION	3.3622633000964666E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.99999966377367	WITHOUT_CLASSIFICATION	3.3622633000964666E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.999999959853908	WITHOUT_CLASSIFICATION	4.014609194128308E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999995999938135	WITHOUT_CLASSIFICATION	4.0000618651830277E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999995357643656	WITHOUT_CLASSIFICATION	4.642356343690974E-7	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999981190644973	WITHOUT_CLASSIFICATION	1.8809355027428323E-6	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999999938871659	WITHOUT_CLASSIFICATION	6.1128341099413295E-9	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999961725292119	WITHOUT_CLASSIFICATION	3.827470788082276E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999961725292119	WITHOUT_CLASSIFICATION	3.827470788082276E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999961725292119	WITHOUT_CLASSIFICATION	3.827470788082276E-6	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999999976599843	WITHOUT_CLASSIFICATION	2.3400157097532116E-9	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999997304961086	WITHOUT_CLASSIFICATION	2.695038915022325E-7	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999996177544127	WITHOUT_CLASSIFICATION	3.822455873554846E-7	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9998947839148166	WITHOUT_CLASSIFICATION	1.0521608518341057E-4	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999660397469131	WITHOUT_CLASSIFICATION	3.396025308681135E-5	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999982126208877	WITHOUT_CLASSIFICATION	1.7873791122262396E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999945989324144	WITHOUT_CLASSIFICATION	5.401067585609261E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999676461887187	WITHOUT_CLASSIFICATION	3.235381128136765E-5	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999981828396834	WITHOUT_CLASSIFICATION	1.8171603165236504E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999399835110795	WITHOUT_CLASSIFICATION	6.001648892049795E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999856576009786	WITHOUT_CLASSIFICATION	1.4342399021481949E-5	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999930583885193	WITHOUT_CLASSIFICATION	6.941611480775824E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.999999906500847	WITHOUT_CLASSIFICATION	9.349915309240535E-8	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999890342308551	WITHOUT_CLASSIFICATION	1.0965769144993734E-5	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999477994093674	WITHOUT_CLASSIFICATION	5.2200590632491315E-5	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999979194877492	WITHOUT_CLASSIFICATION	2.080512250796606E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999477994093674	WITHOUT_CLASSIFICATION	5.2200590632491315E-5	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999980160336075	WITHOUT_CLASSIFICATION	1.983966392561964E-6	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999878699874053	WITHOUT_CLASSIFICATION	1.2130012594811137E-5	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999808023866157	WITHOUT_CLASSIFICATION	1.9197613384267328E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999992811256787	WITHOUT_CLASSIFICATION	7.188743213982171E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999445807859	WITHOUT_CLASSIFICATION	5.5419214128133576E-8	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999057381391	WITHOUT_CLASSIFICATION	9.426186083200434E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999960209021064	WITHOUT_CLASSIFICATION	3.979097893656334E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999759919474411	WITHOUT_CLASSIFICATION	2.400805255882516E-5	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999874466636685	WITHOUT_CLASSIFICATION	1.255333633148653E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999796647738637	WITHOUT_CLASSIFICATION	2.0335226136257094E-5	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999591139377	WITHOUT_CLASSIFICATION	4.088606240335315E-8	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.999998137693969	WITHOUT_CLASSIFICATION	1.8623060310335217E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999965447847683	WITHOUT_CLASSIFICATION	3.4552152316117097E-6	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999975656554893	WITHOUT_CLASSIFICATION	2.4343445107729832E-6	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999869821900101	WITHOUT_CLASSIFICATION	1.301780998974674E-5	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999965070887745	WITHOUT_CLASSIFICATION	3.492911225456948E-6	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999991005317975	WITHOUT_CLASSIFICATION	8.994682025486094E-7	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999998241589688	WITHOUT_CLASSIFICATION	1.7584103109533141E-7	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999911320565883	WITHOUT_CLASSIFICATION	8.8679434117147E-6	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999996112290671	WITHOUT_CLASSIFICATION	3.8877093290866973E-7	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999999010523908	WITHOUT_CLASSIFICATION	9.894760921922083E-8	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999943131316538	WITHOUT_CLASSIFICATION	5.686868346200331E-6	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999987247847186	WITHOUT_CLASSIFICATION	1.2752152813185184E-6	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999987247847186	WITHOUT_CLASSIFICATION	1.2752152813185184E-6	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.999998407535986	WITHOUT_CLASSIFICATION	1.5924640139081885E-6	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.999998407535986	WITHOUT_CLASSIFICATION	1.5924640139081885E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999801862214236	WITHOUT_CLASSIFICATION	1.981377857634188E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999335411888007	WITHOUT_CLASSIFICATION	6.645881119930369E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999335411888007	WITHOUT_CLASSIFICATION	6.645881119930369E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999253070416	WITHOUT_CLASSIFICATION	7.469295839230095E-8	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999999253070416	WITHOUT_CLASSIFICATION	7.469295839230095E-8	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999915928392995	WITHOUT_CLASSIFICATION	8.407160700489514E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999995149361632	WITHOUT_CLASSIFICATION	4.850638367165752E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999983484400892	WITHOUT_CLASSIFICATION	1.6515599108249326E-6	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999965738818323	WITHOUT_CLASSIFICATION	3.4261181677543934E-6	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.999825848588193	WITHOUT_CLASSIFICATION	1.741514118069626E-4	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999969318976876	WITHOUT_CLASSIFICATION	3.068102312401617E-6	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999883972476163	WITHOUT_CLASSIFICATION	1.1602752383696225E-5	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999645999561722	WITHOUT_CLASSIFICATION	3.540004382791452E-5	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999996102179858	WITHOUT_CLASSIFICATION	3.8978201410381944E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9996730314138462	WITHOUT_CLASSIFICATION	3.269685861538028E-4	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999994126884741	WITHOUT_CLASSIFICATION	5.873115258812003E-7	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999952562182439	WITHOUT_CLASSIFICATION	4.7437817560927074E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999998099383364	WITHOUT_CLASSIFICATION	1.9006166367674877E-7	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999968359392751	WITHOUT_CLASSIFICATION	3.1640607249025887E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999991077762643	WITHOUT_CLASSIFICATION	8.922237356310729E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999242426846914	WITHOUT_CLASSIFICATION	7.575731530862175E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999960209021064	WITHOUT_CLASSIFICATION	3.979097893656334E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999796647738637	WITHOUT_CLASSIFICATION	2.0335226136257094E-5	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999940738528226	WITHOUT_CLASSIFICATION	5.926147177358469E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999998189333251	WITHOUT_CLASSIFICATION	1.810666748901385E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999950447453086	WITHOUT_CLASSIFICATION	4.955254691398722E-6	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999919234557483	WITHOUT_CLASSIFICATION	8.076544251660824E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999989923471003	WITHOUT_CLASSIFICATION	1.0076528996063397E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999982795648032	WITHOUT_CLASSIFICATION	1.7204351967626825E-6	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999966591991842	WITHOUT_CLASSIFICATION	3.340800815725894E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999991350191164	WITHOUT_CLASSIFICATION	8.649808834903058E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999640017589967	WITHOUT_CLASSIFICATION	3.599824100333654E-5	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.999992448841686	WITHOUT_CLASSIFICATION	7.551158313999995E-6	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999895688091855	WITHOUT_CLASSIFICATION	1.0431190814523764E-5	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999800572602534	WITHOUT_CLASSIFICATION	1.994273974651864E-5	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999982567690071	WITHOUT_CLASSIFICATION	1.743230992873632E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999982567690071	WITHOUT_CLASSIFICATION	1.743230992873632E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9999833319098607	WITHOUT_CLASSIFICATION	1.6668090139301114E-5	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999982121488055	WITHOUT_CLASSIFICATION	1.7878511946069862E-6	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999882833896965	WITHOUT_CLASSIFICATION	1.171661030340006E-5	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999864612614735	WITHOUT_CLASSIFICATION	1.3538738526390677E-5	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999719982125853	WITHOUT_CLASSIFICATION	2.8001787414765046E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999821885450262	WITHOUT_CLASSIFICATION	1.7811454973759086E-5	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.999981924691822	WITHOUT_CLASSIFICATION	1.807530817789837E-5	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9998883304355878	WITHOUT_CLASSIFICATION	1.1166956441221711E-4	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.999915839228696	WITHOUT_CLASSIFICATION	8.416077130410553E-5	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999880180817625	WITHOUT_CLASSIFICATION	1.198191823745159E-5	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999920349221079	WITHOUT_CLASSIFICATION	7.965077892195502E-6	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999821563111506	WITHOUT_CLASSIFICATION	1.784368884934953E-5	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.999999247236666	WITHOUT_CLASSIFICATION	7.527633340700082E-7	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.999989710169303	WITHOUT_CLASSIFICATION	1.0289830696872137E-5	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999875006419207	WITHOUT_CLASSIFICATION	1.2499358079343205E-5	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999775365001435	WITHOUT_CLASSIFICATION	2.2463499856562122E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999825472644633	WITHOUT_CLASSIFICATION	1.7452735536665414E-5	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999986589660491	WITHOUT_CLASSIFICATION	1.341033950890159E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999885365788813	WITHOUT_CLASSIFICATION	1.146342111867421E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995630555695	WITHOUT_CLASSIFICATION	4.3694443057219783E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999854227514748	WITHOUT_CLASSIFICATION	1.4577248525083064E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999854227514748	WITHOUT_CLASSIFICATION	1.4577248525083064E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999928639323407	WITHOUT_CLASSIFICATION	7.1360676593125E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999928639323407	WITHOUT_CLASSIFICATION	7.1360676593125E-6	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999923982892294	WITHOUT_CLASSIFICATION	7.601710770632232E-6	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999969824157191	WITHOUT_CLASSIFICATION	3.0175842809361614E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999997507116103	WITHOUT_CLASSIFICATION	2.4928838980434334E-7	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999954414985307	WITHOUT_CLASSIFICATION	4.558501469246289E-6	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999957617404308	WITHOUT_CLASSIFICATION	4.2382595692527825E-6	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9964804181447903	WITHOUT_CLASSIFICATION	0.003519581855209793	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999357982621	WITHOUT_CLASSIFICATION	6.420173789991281E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999789066117962	WITHOUT_CLASSIFICATION	2.1093388203785218E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999789066117962	WITHOUT_CLASSIFICATION	2.1093388203785218E-5	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999518756084428	WITHOUT_CLASSIFICATION	4.81243915571849E-5	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.999997952164205	WITHOUT_CLASSIFICATION	2.047835794977529E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999577309429073	WITHOUT_CLASSIFICATION	4.2269057092799345E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999577309429073	WITHOUT_CLASSIFICATION	4.2269057092799345E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999965161208727	WITHOUT_CLASSIFICATION	3.4838791272368016E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999457437388504	WITHOUT_CLASSIFICATION	5.425626114962808E-5	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999693729726764	WITHOUT_CLASSIFICATION	3.062702732363045E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999436534795778	WITHOUT_CLASSIFICATION	5.634652042217534E-5	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999892995611827	WITHOUT_CLASSIFICATION	1.070043881733821E-5	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999975689261255	WITHOUT_CLASSIFICATION	2.4310738745996555E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9998970243871672	WITHOUT_CLASSIFICATION	1.0297561283286598E-4	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9998970243871672	WITHOUT_CLASSIFICATION	1.0297561283286598E-4	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999462102909769	WITHOUT_CLASSIFICATION	5.378970902323783E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999951930376175	WITHOUT_CLASSIFICATION	4.806962382547575E-6	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.999981505773088	WITHOUT_CLASSIFICATION	1.8494226912081846E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.999998978057734	WITHOUT_CLASSIFICATION	1.0219422660258795E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999946472983607	WITHOUT_CLASSIFICATION	5.352701639210286E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999995112841495	WITHOUT_CLASSIFICATION	4.887158504028077E-7	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999970105380717	WITHOUT_CLASSIFICATION	2.9894619283052426E-6	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999998639667438	WITHOUT_CLASSIFICATION	1.3603325623033503E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999880750579307	WITHOUT_CLASSIFICATION	1.192494206916847E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999880750579307	WITHOUT_CLASSIFICATION	1.192494206916847E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999880750579307	WITHOUT_CLASSIFICATION	1.192494206916847E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999880750579307	WITHOUT_CLASSIFICATION	1.192494206916847E-5	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999643864282354	WITHOUT_CLASSIFICATION	3.561357176465271E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999989416931833	WITHOUT_CLASSIFICATION	1.0583068166375493E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999935162895519	WITHOUT_CLASSIFICATION	6.483710448088139E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999877456793893	WITHOUT_CLASSIFICATION	1.2254320610700118E-5	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999877456793893	WITHOUT_CLASSIFICATION	1.2254320610700118E-5	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999973822541804	WITHOUT_CLASSIFICATION	2.6177458195165044E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999973822541804	WITHOUT_CLASSIFICATION	2.6177458195165044E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999958560953204	WITHOUT_CLASSIFICATION	4.143904679583881E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999954247689208	WITHOUT_CLASSIFICATION	4.575231079238244E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999771805943286	WITHOUT_CLASSIFICATION	2.281940567139361E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999970832761876	WITHOUT_CLASSIFICATION	2.9167238124018042E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999542124744946	WITHOUT_CLASSIFICATION	4.578752550540521E-5	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999978999682441	WITHOUT_CLASSIFICATION	2.1000317559161605E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999911465942192	WITHOUT_CLASSIFICATION	8.85340578088109E-6	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9999678623949202	WITHOUT_CLASSIFICATION	3.21376050797054E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999474062647113	WITHOUT_CLASSIFICATION	5.259373528864194E-5	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999993876590869	WITHOUT_CLASSIFICATION	6.123409130888032E-7	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999968082415321	WITHOUT_CLASSIFICATION	3.1917584679171066E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999982081339077	WITHOUT_CLASSIFICATION	1.7918660922613223E-6	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999999886725001	WITHOUT_CLASSIFICATION	1.132750000841523E-8	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999978248557727	WITHOUT_CLASSIFICATION	2.175144227316151E-6	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999724928586268	WITHOUT_CLASSIFICATION	2.7507141373308276E-5	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999998707042849	WITHOUT_CLASSIFICATION	1.2929571519231382E-7	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999995821712663	WITHOUT_CLASSIFICATION	4.178287337362532E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999980957808949	WITHOUT_CLASSIFICATION	1.9042191050997816E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999980957808949	WITHOUT_CLASSIFICATION	1.9042191050997816E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999980957808949	WITHOUT_CLASSIFICATION	1.9042191050997816E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999929665925252	WITHOUT_CLASSIFICATION	7.033407474743632E-6	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999968208580858	WITHOUT_CLASSIFICATION	3.179141914300688E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999991862624322	WITHOUT_CLASSIFICATION	8.137375676757365E-7	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999966224963589	WITHOUT_CLASSIFICATION	3.377503641168679E-6	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999378266995	WITHOUT_CLASSIFICATION	6.217330052187231E-8	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999992328475724	WITHOUT_CLASSIFICATION	7.671524275688912E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999377387759242	WITHOUT_CLASSIFICATION	6.22612240757607E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999997721634512	WITHOUT_CLASSIFICATION	2.2783654877031874E-7	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999959345065771	WITHOUT_CLASSIFICATION	4.065493423003547E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9999975426569456	WITHOUT_CLASSIFICATION	2.4573430544122707E-6	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.999996995468659	WITHOUT_CLASSIFICATION	3.004531340956634E-6	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999747662543281	WITHOUT_CLASSIFICATION	2.5233745671900044E-5	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999999355927196	WITHOUT_CLASSIFICATION	6.440728042498912E-8	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9998886927841854	WITHOUT_CLASSIFICATION	1.1130721581457976E-4	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.999926984541164	WITHOUT_CLASSIFICATION	7.301545883590547E-5	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999993490008804	WITHOUT_CLASSIFICATION	6.50999119619905E-7	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999997029042694	WITHOUT_CLASSIFICATION	2.9709573059152927E-7	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.999999074543097	WITHOUT_CLASSIFICATION	9.254569030060234E-7	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999978291169	WITHOUT_CLASSIFICATION	2.170883166926492E-9	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999983758754215	WITHOUT_CLASSIFICATION	1.6241245785564704E-6	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.999996488434059	WITHOUT_CLASSIFICATION	3.511565940990247E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999915242463054	WITHOUT_CLASSIFICATION	8.475753694519243E-6	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999440556285	WITHOUT_CLASSIFICATION	5.5944371351117316E-8	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999967338169128	WITHOUT_CLASSIFICATION	3.266183087221917E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.999999555018097	WITHOUT_CLASSIFICATION	4.4498190296043385E-7	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999933319866647	WITHOUT_CLASSIFICATION	6.668013335267046E-6	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999951491849804	WITHOUT_CLASSIFICATION	4.85081501966772E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999992420755679	WITHOUT_CLASSIFICATION	7.579244321406532E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999978543836009	WITHOUT_CLASSIFICATION	2.145616399223419E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999987665400282	WITHOUT_CLASSIFICATION	1.2334599718530396E-6	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999965012398103	WITHOUT_CLASSIFICATION	3.49876018962751E-6	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999276211795515	WITHOUT_CLASSIFICATION	7.237882044855274E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999877919922865	WITHOUT_CLASSIFICATION	1.2208007713491998E-5	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999505141872731	WITHOUT_CLASSIFICATION	4.9485812726975445E-5	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999937680040148	WITHOUT_CLASSIFICATION	6.231995985132197E-6	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999686030662553	WITHOUT_CLASSIFICATION	3.139693374462617E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999469698395227	WITHOUT_CLASSIFICATION	5.3030160477428355E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9991661600408396	WITHOUT_CLASSIFICATION	8.338399591603664E-4	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.999997655631042	WITHOUT_CLASSIFICATION	2.3443689579437975E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999991349817083	WITHOUT_CLASSIFICATION	8.650182915537721E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999996593450569	WITHOUT_CLASSIFICATION	3.406549431767527E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999575360608741	WITHOUT_CLASSIFICATION	4.246393912588653E-5	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999925507288245	WITHOUT_CLASSIFICATION	7.44927117546797E-6	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9998918831047702	WITHOUT_CLASSIFICATION	1.0811689522985922E-4	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999973104919813	WITHOUT_CLASSIFICATION	2.6895080187597016E-6	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999821712006048	WITHOUT_CLASSIFICATION	1.7828799395179113E-5	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999835802030997	WITHOUT_CLASSIFICATION	1.6419796900236653E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999984120361958	WITHOUT_CLASSIFICATION	1.5879638042101123E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999881741097523	WITHOUT_CLASSIFICATION	1.1825890247769728E-5	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999699590327357	WITHOUT_CLASSIFICATION	3.0040967264359866E-5	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999979782302377	WITHOUT_CLASSIFICATION	2.0217697623009797E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999955412743725	WITHOUT_CLASSIFICATION	4.45872562752014E-6	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999997785088154	WITHOUT_CLASSIFICATION	2.2149118458888702E-7	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999985490165962	WITHOUT_CLASSIFICATION	1.4509834036622792E-6	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999975979753495	WITHOUT_CLASSIFICATION	2.4020246505718636E-6	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9997117513211288	WITHOUT_CLASSIFICATION	2.882486788712568E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999986756020826	WITHOUT_CLASSIFICATION	1.3243979174076758E-6	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999888050541947	WITHOUT_CLASSIFICATION	1.1194945805311748E-5	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.999996318649214	WITHOUT_CLASSIFICATION	3.6813507860288847E-6	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999978646078107	WITHOUT_CLASSIFICATION	2.135392189250681E-6	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999981513852612	WITHOUT_CLASSIFICATION	1.8486147388559034E-6	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999997030840455	WITHOUT_CLASSIFICATION	2.9691595455801263E-7	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9999092809422578	WITHOUT_CLASSIFICATION	9.071905774214857E-5	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999994903382355	WITHOUT_CLASSIFICATION	5.09661764341964E-7	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9994508953858845	WITHOUT_CLASSIFICATION	5.491046141155E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999853129871084	WITHOUT_CLASSIFICATION	1.468701289159441E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999918947940376	WITHOUT_CLASSIFICATION	8.10520596231088E-6	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9997817412401708	WITHOUT_CLASSIFICATION	2.1825875982912766E-4	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999994232569467	WITHOUT_CLASSIFICATION	5.767430533308034E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999964681902824	WITHOUT_CLASSIFICATION	3.531809717603259E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999899248253874	WITHOUT_CLASSIFICATION	1.0075174612697288E-5	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9998372480873788	WITHOUT_CLASSIFICATION	1.6275191262126186E-4	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.999998185662473	WITHOUT_CLASSIFICATION	1.8143375270336209E-6	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999987459086	WITHOUT_CLASSIFICATION	1.254091387395921E-9	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999986944278411	WITHOUT_CLASSIFICATION	1.305572158941674E-6	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999808440666458	WITHOUT_CLASSIFICATION	1.915593335427203E-5	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999931958552233	WITHOUT_CLASSIFICATION	6.8041447767197286E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999940469639474	WITHOUT_CLASSIFICATION	5.9530360526069144E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999940469639474	WITHOUT_CLASSIFICATION	5.9530360526069144E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999940469639474	WITHOUT_CLASSIFICATION	5.9530360526069144E-5	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999981746406875	WITHOUT_CLASSIFICATION	1.8253593124664027E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999985459035607	WITHOUT_CLASSIFICATION	1.454096439277505E-6	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999992959569437	WITHOUT_CLASSIFICATION	7.040430562949324E-7	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999942451316078	WITHOUT_CLASSIFICATION	5.754868392059574E-6	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999965233696569	WITHOUT_CLASSIFICATION	3.4766303430561637E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999974636268786	WITHOUT_CLASSIFICATION	2.536373121425131E-6	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999970822374827	WITHOUT_CLASSIFICATION	2.917762517269582E-6	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999932543996621	WITHOUT_CLASSIFICATION	6.745600337858174E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999998448422291	WITHOUT_CLASSIFICATION	1.551577708944241E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999998448422291	WITHOUT_CLASSIFICATION	1.551577708944241E-6	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.999985689559105	WITHOUT_CLASSIFICATION	1.431044089502567E-5	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999983189423847	WITHOUT_CLASSIFICATION	1.6810576152531197E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999986944278411	WITHOUT_CLASSIFICATION	1.305572158941674E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999973213190082	WITHOUT_CLASSIFICATION	2.6786809917742856E-6	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999994918318257	WITHOUT_CLASSIFICATION	5.081681743546919E-7	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999880372672443	WITHOUT_CLASSIFICATION	1.1962732755837593E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999531321834136	WITHOUT_CLASSIFICATION	4.686781658646667E-5	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999764946262694	WITHOUT_CLASSIFICATION	2.3505373730581753E-5	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.999998676723467	WITHOUT_CLASSIFICATION	1.3232765330307615E-6	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999711042121597	WITHOUT_CLASSIFICATION	2.8895787840352805E-5	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9999981537057095	WITHOUT_CLASSIFICATION	1.8462942904794616E-6	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.999755652746445	WITHOUT_CLASSIFICATION	2.4434725355503895E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999901013739066	WITHOUT_CLASSIFICATION	9.89862609337039E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9975062519170254	WITHOUT_CLASSIFICATION	0.0024937480829746554	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999802480086961	WITHOUT_CLASSIFICATION	1.9751991303883812E-5	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999365487072217	WITHOUT_CLASSIFICATION	6.345129277836019E-5	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999817517479743	WITHOUT_CLASSIFICATION	1.8248252025673675E-5	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999839850535222	WITHOUT_CLASSIFICATION	1.6014946477855386E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999706396073552	WITHOUT_CLASSIFICATION	2.936039264483292E-5	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.999905442920915	WITHOUT_CLASSIFICATION	9.455707908507422E-5	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999621587472349	WITHOUT_CLASSIFICATION	3.7841252765070246E-5	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999676679804147	WITHOUT_CLASSIFICATION	3.233201958530862E-5	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999970311230195	WITHOUT_CLASSIFICATION	2.9688769805746593E-6	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999988276446573	WITHOUT_CLASSIFICATION	1.1723553426614772E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999887885407672	WITHOUT_CLASSIFICATION	1.1211459232835451E-5	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999847342977902	WITHOUT_CLASSIFICATION	1.5265702209826108E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999993739551837	WITHOUT_CLASSIFICATION	6.260448162943515E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999737647125154	WITHOUT_CLASSIFICATION	2.623528748460583E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999510326239957	WITHOUT_CLASSIFICATION	4.896737600445196E-5	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999909073185866	WITHOUT_CLASSIFICATION	9.092681413344135E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999980118740529	WITHOUT_CLASSIFICATION	1.988125947172748E-6	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999834686737871	WITHOUT_CLASSIFICATION	1.653132621289884E-5	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999994080725306	WITHOUT_CLASSIFICATION	5.919274693807648E-7	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999751686908	WITHOUT_CLASSIFICATION	2.483130922631221E-8	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9998482992272737	WITHOUT_CLASSIFICATION	1.51700772726288E-4	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999753975450595	WITHOUT_CLASSIFICATION	2.4602454940493188E-5	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999979493057526	WITHOUT_CLASSIFICATION	2.0506942473733447E-6	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999848004072078	WITHOUT_CLASSIFICATION	1.5199592792102805E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999820228974974	WITHOUT_CLASSIFICATION	1.7977102502595513E-5	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.999982618529232	WITHOUT_CLASSIFICATION	1.7381470767987566E-5	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999991867300954	WITHOUT_CLASSIFICATION	8.132699047542137E-7	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999978998010542	WITHOUT_CLASSIFICATION	2.1001989457385074E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999912706953894	WITHOUT_CLASSIFICATION	8.729304610627599E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999993499456976	WITHOUT_CLASSIFICATION	6.500543024351016E-7	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999953786654121	WITHOUT_CLASSIFICATION	4.621334587844312E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9999970367643661	WITHOUT_CLASSIFICATION	2.963235633800832E-6	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999935910593988	WITHOUT_CLASSIFICATION	6.408940601182749E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999985299078306	WITHOUT_CLASSIFICATION	1.470092169367452E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999969087489838	WITHOUT_CLASSIFICATION	3.091251016162391E-6	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999950246352981	WITHOUT_CLASSIFICATION	4.975364701907131E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999800754448893	WITHOUT_CLASSIFICATION	1.992455511078303E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999126260495451	WITHOUT_CLASSIFICATION	8.737395045490054E-5	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999895142114232	WITHOUT_CLASSIFICATION	1.0485788576704357E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9999886833130056	WITHOUT_CLASSIFICATION	1.1316686994295413E-5	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999873019590493	WITHOUT_CLASSIFICATION	1.2698040950655103E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999968251364949	WITHOUT_CLASSIFICATION	3.1748635051282094E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999345169519389	WITHOUT_CLASSIFICATION	6.548304806099856E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999856558786525	WITHOUT_CLASSIFICATION	1.4344121347517206E-5	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.999982707742968	WITHOUT_CLASSIFICATION	1.7292257031994382E-5	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999783278530575	WITHOUT_CLASSIFICATION	2.1672146942505264E-5	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999998283884043	WITHOUT_CLASSIFICATION	1.7161159577287177E-7	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999997685147161	WITHOUT_CLASSIFICATION	2.3148528400394033E-7	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999986408690997	WITHOUT_CLASSIFICATION	1.3591309002607018E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999996913068545	WITHOUT_CLASSIFICATION	3.086931454668239E-7	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999970297601399	WITHOUT_CLASSIFICATION	2.97023985998933E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9999863262051254	WITHOUT_CLASSIFICATION	1.3673794874582387E-5	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9995832413487109	WITHOUT_CLASSIFICATION	4.167586512891744E-4	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999913545540495	WITHOUT_CLASSIFICATION	8.645445950381143E-6	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999998716315849	WITHOUT_CLASSIFICATION	1.2836841506065134E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999970887508816	WITHOUT_CLASSIFICATION	2.9112491184516298E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999742237327872	WITHOUT_CLASSIFICATION	2.5776267212857752E-5	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999975088973441	WITHOUT_CLASSIFICATION	2.4911026559579673E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999628636583806	WITHOUT_CLASSIFICATION	3.713634161936838E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999853129871084	WITHOUT_CLASSIFICATION	1.468701289159441E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999970887508816	WITHOUT_CLASSIFICATION	2.9112491184516298E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999742237327872	WITHOUT_CLASSIFICATION	2.5776267212857752E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999969363256375	WITHOUT_CLASSIFICATION	3.063674362589993E-6	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999932759658	WITHOUT_CLASSIFICATION	6.72403418678934E-9	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.999995102058254	WITHOUT_CLASSIFICATION	4.8979417459327225E-6	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999997421457526	WITHOUT_CLASSIFICATION	2.57854247362719E-7	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.999997087739985	WITHOUT_CLASSIFICATION	2.912260014960023E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.999995372828021	WITHOUT_CLASSIFICATION	4.6271719790657616E-6	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999051879453462	WITHOUT_CLASSIFICATION	9.481205465381492E-5	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999811413209678	WITHOUT_CLASSIFICATION	1.885867903216288E-5	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.999995481421336	WITHOUT_CLASSIFICATION	4.5185786640601266E-6	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999969655223241	WITHOUT_CLASSIFICATION	3.0344776757903947E-6	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999937817580742	WITHOUT_CLASSIFICATION	6.218241925754149E-6	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999782620732851	WITHOUT_CLASSIFICATION	2.1737926714879553E-5	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999744119703895	WITHOUT_CLASSIFICATION	2.5588029610599315E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999864935859418	WITHOUT_CLASSIFICATION	1.3506414058166955E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9993669224944096	WITHOUT_CLASSIFICATION	6.330775055903838E-4	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999357377258731	WITHOUT_CLASSIFICATION	6.426227412684326E-5	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999886966862649	WITHOUT_CLASSIFICATION	1.130331373505619E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.999843567434506	WITHOUT_CLASSIFICATION	1.564325654939628E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999943422993428	WITHOUT_CLASSIFICATION	5.657700657161643E-6	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999841894975564	WITHOUT_CLASSIFICATION	1.5810502443668278E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999759293216224	WITHOUT_CLASSIFICATION	2.4070678377718987E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999508885240846	WITHOUT_CLASSIFICATION	4.911147591540576E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999474819976633	WITHOUT_CLASSIFICATION	5.251800233684701E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999994232569467	WITHOUT_CLASSIFICATION	5.767430533308034E-7	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999998193941584	WITHOUT_CLASSIFICATION	1.806058414682902E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999945584301522	WITHOUT_CLASSIFICATION	5.441569847888668E-6	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999558527274773	WITHOUT_CLASSIFICATION	4.414727252255472E-5	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.999783297471728	WITHOUT_CLASSIFICATION	2.1670252827202442E-4	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999933303532427	WITHOUT_CLASSIFICATION	6.669646757293076E-6	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999880623173442	WITHOUT_CLASSIFICATION	1.1937682655904801E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999974808974196	WITHOUT_CLASSIFICATION	2.5191025804612507E-6	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999921020426354	WITHOUT_CLASSIFICATION	7.897957364577167E-6	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999705876310947	WITHOUT_CLASSIFICATION	2.9412368905235595E-5	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999940268295382	WITHOUT_CLASSIFICATION	5.973170461765536E-6	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999958139491179	WITHOUT_CLASSIFICATION	4.186050882190602E-6	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999875397728869	WITHOUT_CLASSIFICATION	1.2460227113089465E-5	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999876496489102	WITHOUT_CLASSIFICATION	1.2350351089858233E-5	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999972750050665	WITHOUT_CLASSIFICATION	2.724994933439435E-6	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999946034185003	WITHOUT_CLASSIFICATION	5.396581499719749E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999994089233163	WITHOUT_CLASSIFICATION	5.910766836649058E-7	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999859791885045	WITHOUT_CLASSIFICATION	1.4020811495586685E-5	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999273067458673	WITHOUT_CLASSIFICATION	7.269325413273423E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999859091054997	WITHOUT_CLASSIFICATION	1.4090894500326375E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999942300973732	WITHOUT_CLASSIFICATION	5.76990262679361E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999826402228317	WITHOUT_CLASSIFICATION	1.7359777168340998E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999972131050558	WITHOUT_CLASSIFICATION	2.7868949441296043E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999972131050558	WITHOUT_CLASSIFICATION	2.7868949441296043E-6	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999512499179789	WITHOUT_CLASSIFICATION	4.875008202104032E-5	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.999995133538285	WITHOUT_CLASSIFICATION	4.866461715043312E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999926077734919	WITHOUT_CLASSIFICATION	7.392226508169741E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999995812222437	WITHOUT_CLASSIFICATION	4.1877775626383875E-7	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999902167471926	WITHOUT_CLASSIFICATION	9.78325280747724E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.999998034647553	WITHOUT_CLASSIFICATION	1.9653524469195245E-6	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999856160888476	WITHOUT_CLASSIFICATION	1.4383911152422022E-5	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999820335864175	WITHOUT_CLASSIFICATION	1.796641358255026E-5	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999970205542238	WITHOUT_CLASSIFICATION	2.9794457763051663E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999445114656471	WITHOUT_CLASSIFICATION	5.548853435288354E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999994755998293	WITHOUT_CLASSIFICATION	5.244001706894794E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999975868173375	WITHOUT_CLASSIFICATION	2.413182662487507E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999997676027073	WITHOUT_CLASSIFICATION	2.32397292816695E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999997676027073	WITHOUT_CLASSIFICATION	2.32397292816695E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999974654364	WITHOUT_CLASSIFICATION	2.5345636001240657E-6	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999879551216085	WITHOUT_CLASSIFICATION	1.2044878391367225E-5	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999974321719279	WITHOUT_CLASSIFICATION	2.5678280721724982E-6	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999987020565042	WITHOUT_CLASSIFICATION	1.2979434957942977E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999982806548192	WITHOUT_CLASSIFICATION	1.719345180734557E-6	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999970671985502	WITHOUT_CLASSIFICATION	2.9328014497782367E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999912447140007	WITHOUT_CLASSIFICATION	8.755285999225103E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999714781245546	WITHOUT_CLASSIFICATION	2.8521875445446906E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999887535238474	WITHOUT_CLASSIFICATION	1.1246476152505015E-5	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999902167471926	WITHOUT_CLASSIFICATION	9.78325280747724E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999891877377682	WITHOUT_CLASSIFICATION	1.0812262231653197E-5	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999979894792086	WITHOUT_CLASSIFICATION	2.0105207913710832E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999976740657519	WITHOUT_CLASSIFICATION	2.3259342481840427E-6	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999968492266006	WITHOUT_CLASSIFICATION	3.150773399385562E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999993595135304	WITHOUT_CLASSIFICATION	6.404864696292459E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999927983439266	WITHOUT_CLASSIFICATION	7.201656073349999E-6	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999794258194608	WITHOUT_CLASSIFICATION	2.0574180539190443E-5	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999804786850167	WITHOUT_CLASSIFICATION	1.952131498329507E-5	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999746583260724	WITHOUT_CLASSIFICATION	2.534167392763361E-5	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999972153254946	WITHOUT_CLASSIFICATION	2.784674505398996E-6	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999994518167883	WITHOUT_CLASSIFICATION	5.481832116335824E-7	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999999406677293	WITHOUT_CLASSIFICATION	5.9332270561495313E-8	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999788987105045	WITHOUT_CLASSIFICATION	2.110128949553626E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999993628080354	WITHOUT_CLASSIFICATION	6.371919646453945E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9999506414284235	WITHOUT_CLASSIFICATION	4.9358571576549584E-5	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.999996931887697	WITHOUT_CLASSIFICATION	3.068112302956686E-6	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999930123379701	WITHOUT_CLASSIFICATION	6.987662029945749E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999938139332659	WITHOUT_CLASSIFICATION	6.186066734075688E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999992184035986	WITHOUT_CLASSIFICATION	7.81596401386289E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999993500980371	WITHOUT_CLASSIFICATION	6.499019628947523E-7	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.999998620807291	WITHOUT_CLASSIFICATION	1.3791927091213036E-6	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999996285690824	WITHOUT_CLASSIFICATION	3.7143091762771915E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996824496425	WITHOUT_CLASSIFICATION	3.175503574066937E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997471924827	WITHOUT_CLASSIFICATION	2.5280751729518965E-7	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999628087871624	WITHOUT_CLASSIFICATION	3.7191212837670364E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999666749875014	WITHOUT_CLASSIFICATION	3.332501249867608E-5	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999948158916077	WITHOUT_CLASSIFICATION	5.184108392343179E-6	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999995826453186	WITHOUT_CLASSIFICATION	4.1735468132839483E-7	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999356971956562	WITHOUT_CLASSIFICATION	6.430280434379255E-5	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999823903061729	WITHOUT_CLASSIFICATION	1.7609693827161787E-5	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9998225614462816	WITHOUT_CLASSIFICATION	1.774385537184265E-4	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999825581013434	WITHOUT_CLASSIFICATION	1.744189865660078E-5	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999957394322743	WITHOUT_CLASSIFICATION	4.2605677256884405E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999997290306943	WITHOUT_CLASSIFICATION	2.7096930574669207E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999997290306943	WITHOUT_CLASSIFICATION	2.7096930574669207E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999800300073199	WITHOUT_CLASSIFICATION	1.9969992680016693E-5	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999971848924537	WITHOUT_CLASSIFICATION	2.815107546234106E-6	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999976046560687	WITHOUT_CLASSIFICATION	2.3953439313854067E-6	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999781575127994	WITHOUT_CLASSIFICATION	2.1842487200641875E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999996472443414	WITHOUT_CLASSIFICATION	3.5275565856415763E-7	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9991176302449333	WITHOUT_CLASSIFICATION	8.823697550666482E-4	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999947336826419	WITHOUT_CLASSIFICATION	5.266317358186255E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9996847443103197	WITHOUT_CLASSIFICATION	3.1525568968030756E-4	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999983300825219	WITHOUT_CLASSIFICATION	1.669917478077918E-6	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999982249281666	WITHOUT_CLASSIFICATION	1.7750718333987265E-6	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.99996692512087	WITHOUT_CLASSIFICATION	3.307487913001122E-5	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.999889546845248	WITHOUT_CLASSIFICATION	1.1045315475190501E-4	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999968674468506	WITHOUT_CLASSIFICATION	3.132553149470442E-6	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9993723349713662	WITHOUT_CLASSIFICATION	6.276650286338582E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999825581013434	WITHOUT_CLASSIFICATION	1.744189865660078E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999996472443414	WITHOUT_CLASSIFICATION	3.5275565856415763E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999977302406856	WITHOUT_CLASSIFICATION	2.2697593144529863E-6	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999993194321039	WITHOUT_CLASSIFICATION	6.80567896136431E-7	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999784142526811	WITHOUT_CLASSIFICATION	2.1585747318916003E-5	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999945212374645	WITHOUT_CLASSIFICATION	5.47876253552562E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999997487903359	WITHOUT_CLASSIFICATION	2.512096640684308E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9998937627504171	WITHOUT_CLASSIFICATION	1.0623724958296587E-4	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999997568402638	WITHOUT_CLASSIFICATION	2.4315973624436383E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999997659857142	WITHOUT_CLASSIFICATION	2.3401428578940302E-7	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999893298455976	WITHOUT_CLASSIFICATION	1.0670154402469535E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999966251633428	WITHOUT_CLASSIFICATION	3.374836657323172E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996304235196	WITHOUT_CLASSIFICATION	3.695764805011509E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998171139924	WITHOUT_CLASSIFICATION	1.8288600764468044E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999899132427112	WITHOUT_CLASSIFICATION	1.0086757288860455E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9995788656508178	WITHOUT_CLASSIFICATION	4.211343491821171E-4	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999863948559683	WITHOUT_CLASSIFICATION	1.36051440316072E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9999017291948896	WITHOUT_CLASSIFICATION	9.82708051104016E-5	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999789209669464	WITHOUT_CLASSIFICATION	2.1079033053534067E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999923690321345	WITHOUT_CLASSIFICATION	7.630967865533397E-6	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999751951281989	WITHOUT_CLASSIFICATION	2.480487180110185E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999933263453175	WITHOUT_CLASSIFICATION	6.6736546826551545E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999943808311019	WITHOUT_CLASSIFICATION	5.619168898086454E-6	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999954519473385	WITHOUT_CLASSIFICATION	4.54805266139446E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999991643899472	WITHOUT_CLASSIFICATION	8.356100527535597E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999999236254342	WITHOUT_CLASSIFICATION	7.637456581029088E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999965629164606	WITHOUT_CLASSIFICATION	3.4370835394467914E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999985377975091	WITHOUT_CLASSIFICATION	1.4622024908026043E-6	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999942000274215	WITHOUT_CLASSIFICATION	5.79997257848128E-6	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9950983872142172	WITHOUT_CLASSIFICATION	0.0049016127857828395	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.999996835057913	WITHOUT_CLASSIFICATION	3.164942087034579E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999982433767587	WITHOUT_CLASSIFICATION	1.7566232413239505E-6	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999943863953544	WITHOUT_CLASSIFICATION	5.613604645674855E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999996492366083	WITHOUT_CLASSIFICATION	3.5076339173999394E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999992254184734	WITHOUT_CLASSIFICATION	7.745815265055703E-7	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999876922840496	WITHOUT_CLASSIFICATION	1.230771595051706E-5	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999973282470459	WITHOUT_CLASSIFICATION	2.6717529541317816E-6	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999959728013493	WITHOUT_CLASSIFICATION	4.02719865061749E-6	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999981895694828	WITHOUT_CLASSIFICATION	1.810430517080765E-6	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999983589586089	WITHOUT_CLASSIFICATION	1.6410413911751856E-6	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.999996753518253	WITHOUT_CLASSIFICATION	3.246481746992813E-6	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999833706657453	WITHOUT_CLASSIFICATION	1.6629334254743627E-5	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9998684280370906	WITHOUT_CLASSIFICATION	1.3157196290940933E-4	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999784030120411	WITHOUT_CLASSIFICATION	2.1596987958853376E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999930295952918	WITHOUT_CLASSIFICATION	6.97040470813967E-6	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999944178677981	WITHOUT_CLASSIFICATION	5.58213220191734E-6	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999638304793537	WITHOUT_CLASSIFICATION	3.6169520646330586E-5	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999967948718903	WITHOUT_CLASSIFICATION	3.2051281097643983E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999990350372434	WITHOUT_CLASSIFICATION	9.649627566928603E-7	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999827073013564	WITHOUT_CLASSIFICATION	1.729269864356376E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999972366748411	WITHOUT_CLASSIFICATION	2.7633251587900732E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999663528063079	WITHOUT_CLASSIFICATION	3.364719369204222E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999929187299895	WITHOUT_CLASSIFICATION	7.081270010459912E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999984498593307	WITHOUT_CLASSIFICATION	1.5501406693663767E-6	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9982635983641581	WITHOUT_CLASSIFICATION	0.0017364016358417961	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999950875726975	WITHOUT_CLASSIFICATION	4.912427302596085E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999994118276598	WITHOUT_CLASSIFICATION	5.88172340182348E-7	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999884113903843	WITHOUT_CLASSIFICATION	1.1588609615639058E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999996361936921	WITHOUT_CLASSIFICATION	3.638063078935968E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999992396667186	WITHOUT_CLASSIFICATION	7.60333281390657E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999652754889505	WITHOUT_CLASSIFICATION	3.472451104941598E-5	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999964594293241	WITHOUT_CLASSIFICATION	3.5405706759742434E-6	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999933810518773	WITHOUT_CLASSIFICATION	6.618948122776639E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999990477057399	WITHOUT_CLASSIFICATION	9.522942600246296E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999652754889505	WITHOUT_CLASSIFICATION	3.472451104941598E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999951664012569	WITHOUT_CLASSIFICATION	4.833598743181252E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999917178757924	WITHOUT_CLASSIFICATION	8.282124207442266E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999968106564358	WITHOUT_CLASSIFICATION	3.189343564235431E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999984623747927	WITHOUT_CLASSIFICATION	1.537625207352599E-6	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999624306505931	WITHOUT_CLASSIFICATION	3.75693494068743E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999995336619085	WITHOUT_CLASSIFICATION	4.6633809136995126E-7	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999848139447788	WITHOUT_CLASSIFICATION	1.5186055221332039E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999913109867786	WITHOUT_CLASSIFICATION	8.689013221398378E-6	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999991126330514	WITHOUT_CLASSIFICATION	8.873669486890014E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999536204328644	WITHOUT_CLASSIFICATION	4.63795671357142E-5	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999933214387801	WITHOUT_CLASSIFICATION	6.67856121994046E-6	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999983951078812	WITHOUT_CLASSIFICATION	1.6048921187497642E-6	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999965275557109	WITHOUT_CLASSIFICATION	3.472444289140226E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.999989132410809	WITHOUT_CLASSIFICATION	1.0867589191018815E-5	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999987015734432	WITHOUT_CLASSIFICATION	1.2984265568522705E-6	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999975724238559	WITHOUT_CLASSIFICATION	2.4275761441662833E-6	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999926797208645	WITHOUT_CLASSIFICATION	7.320279135526717E-6	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999989762517643	WITHOUT_CLASSIFICATION	1.0237482357431539E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999497751818609	WITHOUT_CLASSIFICATION	5.0224818139147133E-5	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999991390538371	WITHOUT_CLASSIFICATION	8.609461629253788E-7	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999691287766759	WITHOUT_CLASSIFICATION	3.0871223324164245E-5	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999982478047846	WITHOUT_CLASSIFICATION	1.7521952154562992E-6	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.999996925532844	WITHOUT_CLASSIFICATION	3.0744671559060884E-6	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.999999844922543	WITHOUT_CLASSIFICATION	1.5507745700091265E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999992736789233	WITHOUT_CLASSIFICATION	7.26321076738242E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999992207935124	WITHOUT_CLASSIFICATION	7.792064876067818E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998359660709	WITHOUT_CLASSIFICATION	1.6403392905353034E-7	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999970875587658	WITHOUT_CLASSIFICATION	2.9124412341261284E-6	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9999929045844608	WITHOUT_CLASSIFICATION	7.095415539255941E-6	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999930459552154	WITHOUT_CLASSIFICATION	6.954044784520991E-6	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999857093687592	WITHOUT_CLASSIFICATION	1.4290631240818E-5	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999974809975472	WITHOUT_CLASSIFICATION	2.5190024527499837E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999979957799908	WITHOUT_CLASSIFICATION	2.004220009234095E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998359660709	WITHOUT_CLASSIFICATION	1.6403392905353034E-7	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999920663532923	WITHOUT_CLASSIFICATION	7.933646707583835E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999920663532923	WITHOUT_CLASSIFICATION	7.933646707583835E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999980602318277	WITHOUT_CLASSIFICATION	1.939768172379221E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998359660709	WITHOUT_CLASSIFICATION	1.6403392905353034E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999998359660709	WITHOUT_CLASSIFICATION	1.6403392905353034E-7	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999954903834386	WITHOUT_CLASSIFICATION	4.509616561435593E-6	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999997958130207	WITHOUT_CLASSIFICATION	2.0418697927333354E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999931908601457	WITHOUT_CLASSIFICATION	6.80913985431969E-6	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999931908601457	WITHOUT_CLASSIFICATION	6.80913985431969E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999994042478754	WITHOUT_CLASSIFICATION	5.957521247367612E-7	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999890823869191	WITHOUT_CLASSIFICATION	1.0917613080802273E-5	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999986345053274	WITHOUT_CLASSIFICATION	1.3654946725941356E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999497751818609	WITHOUT_CLASSIFICATION	5.0224818139147133E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999497751818609	WITHOUT_CLASSIFICATION	5.0224818139147133E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999994042478754	WITHOUT_CLASSIFICATION	5.957521247367612E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999997509971531	WITHOUT_CLASSIFICATION	2.490028469264746E-7	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999983893478884	WITHOUT_CLASSIFICATION	1.6106521115738889E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999994930641544	WITHOUT_CLASSIFICATION	5.069358456013263E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.99999797747347	WITHOUT_CLASSIFICATION	2.0225265299382822E-6	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999942334914066	WITHOUT_CLASSIFICATION	5.766508593495397E-6	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999967172604545	WITHOUT_CLASSIFICATION	3.282739545601731E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999947569471004	WITHOUT_CLASSIFICATION	5.243052899624976E-6	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999771994108483	WITHOUT_CLASSIFICATION	2.2800589151637705E-5	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999968454039876	WITHOUT_CLASSIFICATION	3.154596012343779E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999999555281731	WITHOUT_CLASSIFICATION	4.4471826922103E-8	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.999998797590775	WITHOUT_CLASSIFICATION	1.2024092249309522E-6	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999867347246116	WITHOUT_CLASSIFICATION	1.3265275388287797E-5	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999836810195952	WITHOUT_CLASSIFICATION	1.631898040478434E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999993877053516	WITHOUT_CLASSIFICATION	6.122946485429776E-7	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999979883924442	WITHOUT_CLASSIFICATION	2.0116075557507506E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999967485117435	WITHOUT_CLASSIFICATION	3.251488256539197E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999616252899977	WITHOUT_CLASSIFICATION	3.837471000236408E-5	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.999987552651773	WITHOUT_CLASSIFICATION	1.2447348226952561E-5	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999976374376074	WITHOUT_CLASSIFICATION	2.3625623927081174E-6	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999828575181915	WITHOUT_CLASSIFICATION	1.71424818085115E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999882494926311	WITHOUT_CLASSIFICATION	1.1750507368890224E-5	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.999999072442513	WITHOUT_CLASSIFICATION	9.275574869510363E-7	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999980431058869	WITHOUT_CLASSIFICATION	1.956894113151562E-6	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999289132902366	WITHOUT_CLASSIFICATION	7.108670976341042E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999785814176323	WITHOUT_CLASSIFICATION	2.141858236770722E-5	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999966412818337	WITHOUT_CLASSIFICATION	3.3587181663319477E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.999996000652202	WITHOUT_CLASSIFICATION	3.999347798056828E-6	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.999967351624146	WITHOUT_CLASSIFICATION	3.26483758541088E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999626322369874	WITHOUT_CLASSIFICATION	3.736776301260287E-5	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999960736365191	WITHOUT_CLASSIFICATION	3.926363480842864E-6	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999673028239561	WITHOUT_CLASSIFICATION	3.269717604393127E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9999878720332261	WITHOUT_CLASSIFICATION	1.2127966773841057E-5	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999994412193972	WITHOUT_CLASSIFICATION	5.587806027830635E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999219196817801	WITHOUT_CLASSIFICATION	7.808031821979345E-5	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999935962441804	WITHOUT_CLASSIFICATION	6.4037558195705406E-6	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999985444108878	WITHOUT_CLASSIFICATION	1.4555891121957004E-6	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999845949205027	WITHOUT_CLASSIFICATION	1.540507949729169E-5	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999935269246573	WITHOUT_CLASSIFICATION	6.473075342661382E-6	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999973858374563	WITHOUT_CLASSIFICATION	2.61416254356582E-6	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9998347379216446	WITHOUT_CLASSIFICATION	1.6526207835551376E-4	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999791375180052	WITHOUT_CLASSIFICATION	2.0862481994865625E-5	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999925957519247	WITHOUT_CLASSIFICATION	7.40424807530894E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.999991465316521	WITHOUT_CLASSIFICATION	8.534683478939764E-6	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999737728772299	WITHOUT_CLASSIFICATION	2.6227122770183452E-5	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999267035808326	WITHOUT_CLASSIFICATION	7.329641916745128E-5	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9996568769854584	WITHOUT_CLASSIFICATION	3.431230145416691E-4	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9994309613641749	WITHOUT_CLASSIFICATION	5.690386358250562E-4	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999916783575068	WITHOUT_CLASSIFICATION	8.321642493151633E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999986266218626	WITHOUT_CLASSIFICATION	1.3733781374398458E-6	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999971803111056	WITHOUT_CLASSIFICATION	2.8196888942771285E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9996919705188042	WITHOUT_CLASSIFICATION	3.080294811957553E-4	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.999961456762352	WITHOUT_CLASSIFICATION	3.854323764802157E-5	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999996257130904	WITHOUT_CLASSIFICATION	3.7428690951581173E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999999939041598	WITHOUT_CLASSIFICATION	6.095840165442475E-9	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999995888397408	WITHOUT_CLASSIFICATION	4.111602591943549E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999988124958645	WITHOUT_CLASSIFICATION	1.1875041354838127E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999979765714518	WITHOUT_CLASSIFICATION	2.0234285481555654E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999961151121534	WITHOUT_CLASSIFICATION	3.884887846663986E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999982017935969	WITHOUT_CLASSIFICATION	1.7982064031062593E-6	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.99999999739151	WITHOUT_CLASSIFICATION	2.608490011844642E-9	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999985247542548	WITHOUT_CLASSIFICATION	1.4752457451750301E-6	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9999995235964356	WITHOUT_CLASSIFICATION	4.764035644163052E-7	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999976596353939	WITHOUT_CLASSIFICATION	2.3403646061377244E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999998588848068	WITHOUT_CLASSIFICATION	1.411151931479875E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.8790847564178474	WITHOUT_CLASSIFICATION	0.12091524358215255	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999962487343721	WITHOUT_CLASSIFICATION	3.751265627855169E-6	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999958848613886	WITHOUT_CLASSIFICATION	4.11513861139603E-6	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9981037828556457	WITHOUT_CLASSIFICATION	0.0018962171443544001	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.999990780985496	WITHOUT_CLASSIFICATION	9.219014504025486E-6	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9959936997367482	WITHOUT_CLASSIFICATION	0.004006300263251768	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999815024787633	WITHOUT_CLASSIFICATION	1.8497521236658733E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999972940198333	WITHOUT_CLASSIFICATION	2.705980166750467E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999980212335665	WITHOUT_CLASSIFICATION	1.978766433464855E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9998169862117613	WITHOUT_CLASSIFICATION	1.830137882386132E-4	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999959820743729	WITHOUT_CLASSIFICATION	4.017925627172053E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999937252668768	WITHOUT_CLASSIFICATION	6.2747331232323354E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999937252668768	WITHOUT_CLASSIFICATION	6.2747331232323354E-6	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999996864996337	WITHOUT_CLASSIFICATION	3.1350036640298863E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9999980880797614	WITHOUT_CLASSIFICATION	1.9119202384433013E-6	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999991387721049	WITHOUT_CLASSIFICATION	8.612278950801513E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9995827740236889	WITHOUT_CLASSIFICATION	4.1722597631120963E-4	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999970149626691	WITHOUT_CLASSIFICATION	2.9850373308525034E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999987945384324	WITHOUT_CLASSIFICATION	1.2054615676601158E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9997811546574683	WITHOUT_CLASSIFICATION	2.1884534253177024E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999921138199095	WITHOUT_CLASSIFICATION	7.886180090526114E-6	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.999906319854042	WITHOUT_CLASSIFICATION	9.368014595798708E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.999999585710212	WITHOUT_CLASSIFICATION	4.142897880439371E-7	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999998958578344	WITHOUT_CLASSIFICATION	1.0414216560606344E-7	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999999774807159	WITHOUT_CLASSIFICATION	2.2519284124505634E-8	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999995616804649	WITHOUT_CLASSIFICATION	4.383195350246654E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.99999750596724	WITHOUT_CLASSIFICATION	2.494032760076916E-6	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999996293162239	WITHOUT_CLASSIFICATION	3.706837760504512E-7	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999863978108608	WITHOUT_CLASSIFICATION	1.3602189139169499E-5	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999814851777005	WITHOUT_CLASSIFICATION	1.8514822299489157E-5	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999945482952901	WITHOUT_CLASSIFICATION	5.451704709848997E-6	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9998363405873284	WITHOUT_CLASSIFICATION	1.636594126715571E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999134580738432	WITHOUT_CLASSIFICATION	8.654192615681997E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999451935477888	WITHOUT_CLASSIFICATION	5.480645221127407E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9996692665657163	WITHOUT_CLASSIFICATION	3.30733434283776E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999959681180534	WITHOUT_CLASSIFICATION	4.031881946589364E-6	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999899220700154	WITHOUT_CLASSIFICATION	1.007792998454675E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9998689346467856	WITHOUT_CLASSIFICATION	1.310653532143591E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9998786441306482	WITHOUT_CLASSIFICATION	1.2135586935171691E-4	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9999962379591782	WITHOUT_CLASSIFICATION	3.7620408216803977E-6	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999755475604855	WITHOUT_CLASSIFICATION	2.4452439514528043E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999905640164094	WITHOUT_CLASSIFICATION	9.435983590661986E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999134580738432	WITHOUT_CLASSIFICATION	8.654192615681997E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9996692665657163	WITHOUT_CLASSIFICATION	3.30733434283776E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999992823880368	WITHOUT_CLASSIFICATION	7.176119631821311E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999917533665367	WITHOUT_CLASSIFICATION	8.246633463353126E-6	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999030889426699	WITHOUT_CLASSIFICATION	9.691105733018542E-5	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9991591505030344	WITHOUT_CLASSIFICATION	8.408494969654824E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999983136294686	WITHOUT_CLASSIFICATION	1.6863705314326028E-6	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999702069965459	WITHOUT_CLASSIFICATION	2.9793003454027802E-5	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999942461333756	WITHOUT_CLASSIFICATION	5.753866624405119E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9997646210411201	WITHOUT_CLASSIFICATION	2.3537895887987205E-4	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999801467429231	WITHOUT_CLASSIFICATION	1.9853257076881512E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999953621613786	WITHOUT_CLASSIFICATION	4.637838621439387E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999741011117906	WITHOUT_CLASSIFICATION	2.589888820928523E-5	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999986401721902	WITHOUT_CLASSIFICATION	1.3598278098064123E-6	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999820201127144	WITHOUT_CLASSIFICATION	1.7979887285591156E-5	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999939851376041	WITHOUT_CLASSIFICATION	6.014862395902093E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999989434438247	WITHOUT_CLASSIFICATION	1.0565561754095569E-6	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999971935428417	WITHOUT_CLASSIFICATION	2.806457158419031E-6	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9997165842911006	WITHOUT_CLASSIFICATION	2.834157088993511E-4	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999793944044951	WITHOUT_CLASSIFICATION	2.0605595504902538E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999774727818644	WITHOUT_CLASSIFICATION	2.2527218135553247E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999992207935124	WITHOUT_CLASSIFICATION	7.792064876067818E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999929055763503	WITHOUT_CLASSIFICATION	7.094423649578199E-6	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999998817443679	WITHOUT_CLASSIFICATION	1.1825563211275123E-7	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.999995132988604	WITHOUT_CLASSIFICATION	4.867011395918182E-6	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999894417558013	WITHOUT_CLASSIFICATION	1.0558244198682984E-5	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999988579250619	WITHOUT_CLASSIFICATION	1.1420749380010334E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999137156717782	WITHOUT_CLASSIFICATION	8.628432822178551E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9997648265914207	WITHOUT_CLASSIFICATION	2.351734085792171E-4	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999816757531965	WITHOUT_CLASSIFICATION	1.8324246803425576E-5	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.999998687078623	WITHOUT_CLASSIFICATION	1.312921376934173E-6	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999650301883183	WITHOUT_CLASSIFICATION	3.496981168176399E-5	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999968175491604	WITHOUT_CLASSIFICATION	3.1824508396289297E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999952735058215	WITHOUT_CLASSIFICATION	4.7264941784754026E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999870278956227	WITHOUT_CLASSIFICATION	1.297210437741178E-5	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999878638026564	WITHOUT_CLASSIFICATION	1.2136197343724553E-5	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999995706353042	WITHOUT_CLASSIFICATION	4.29364695759391E-7	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999995741609087	WITHOUT_CLASSIFICATION	4.258390913608256E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999997833214646	WITHOUT_CLASSIFICATION	2.1667853551275734E-7	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.999998711387577	WITHOUT_CLASSIFICATION	1.2886124229757006E-6	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999971145765144	WITHOUT_CLASSIFICATION	2.8854234856813947E-6	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999904245331152	WITHOUT_CLASSIFICATION	9.575466884789473E-6	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999893911764621	WITHOUT_CLASSIFICATION	1.0608823538004524E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999460593077386	WITHOUT_CLASSIFICATION	5.394069226124821E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999710539132204	WITHOUT_CLASSIFICATION	2.8946086779561652E-5	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999913464311293	WITHOUT_CLASSIFICATION	8.653568870747143E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999965712895598	WITHOUT_CLASSIFICATION	3.42871044027643E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9999918357418062	WITHOUT_CLASSIFICATION	8.16425819388883E-6	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999931353492775	WITHOUT_CLASSIFICATION	6.864650722524838E-6	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999420781797754	WITHOUT_CLASSIFICATION	5.792182022456809E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9997719252799372	WITHOUT_CLASSIFICATION	2.2807472006281508E-4	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.999831545345753	WITHOUT_CLASSIFICATION	1.6845465424698359E-4	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999991153831125	WITHOUT_CLASSIFICATION	8.84616887591268E-7	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999997765604457	WITHOUT_CLASSIFICATION	2.234395542714898E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999992853741869	WITHOUT_CLASSIFICATION	7.146258130318475E-7	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999962854001454	WITHOUT_CLASSIFICATION	3.7145998546117446E-6	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999648294713628	WITHOUT_CLASSIFICATION	3.5170528637223965E-5	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999932060432715	WITHOUT_CLASSIFICATION	6.79395672850056E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999926435576623	WITHOUT_CLASSIFICATION	7.356442337843483E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999898430717682	WITHOUT_CLASSIFICATION	1.015692823186744E-5	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999987806449356	WITHOUT_CLASSIFICATION	1.219355064410264E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999989762517643	WITHOUT_CLASSIFICATION	1.0237482357431539E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999973337705291	WITHOUT_CLASSIFICATION	2.6662294709809374E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.99999839744705	WITHOUT_CLASSIFICATION	1.602552949909694E-6	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999957309837593	WITHOUT_CLASSIFICATION	4.269016240700716E-6	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999957309837593	WITHOUT_CLASSIFICATION	4.269016240700716E-6	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999966906505101	WITHOUT_CLASSIFICATION	3.309349489911085E-6	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.999998298164512	WITHOUT_CLASSIFICATION	1.7018354879679812E-6	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999992905547953	WITHOUT_CLASSIFICATION	7.094452048096295E-7	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999140964000721	WITHOUT_CLASSIFICATION	8.590359992788437E-5	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999987992874282	WITHOUT_CLASSIFICATION	1.2007125717610601E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999979906637132	WITHOUT_CLASSIFICATION	2.009336286739111E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999986276304986	WITHOUT_CLASSIFICATION	1.372369501391392E-6	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9999972349620992	WITHOUT_CLASSIFICATION	2.765037900625292E-6	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.999993131720785	WITHOUT_CLASSIFICATION	6.8682792151012345E-6	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.999999922664695	WITHOUT_CLASSIFICATION	7.733530498355022E-8	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999985973085825	WITHOUT_CLASSIFICATION	1.402691417470766E-6	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999999461474449	WITHOUT_CLASSIFICATION	5.385255493107071E-8	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999007990354	WITHOUT_CLASSIFICATION	9.920096461604593E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999998238666795	WITHOUT_CLASSIFICATION	1.7613332042154977E-7	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999995239941561	WITHOUT_CLASSIFICATION	4.760058437473269E-7	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999905759879603	WITHOUT_CLASSIFICATION	9.424012039729485E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999861241955784	WITHOUT_CLASSIFICATION	1.3875804421607862E-5	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999738632653898	WITHOUT_CLASSIFICATION	2.61367346102018E-5	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999952923417514	WITHOUT_CLASSIFICATION	4.707658248554445E-6	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999899202475782	WITHOUT_CLASSIFICATION	1.007975242177171E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999388418007225	WITHOUT_CLASSIFICATION	6.115819927753444E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999966707982889	WITHOUT_CLASSIFICATION	3.3292017109560023E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999984364035488	WITHOUT_CLASSIFICATION	1.563596451303387E-6	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999998491338763	WITHOUT_CLASSIFICATION	1.5086612371036896E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999993739551837	WITHOUT_CLASSIFICATION	6.260448162943515E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999737647125154	WITHOUT_CLASSIFICATION	2.623528748460583E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999966707982889	WITHOUT_CLASSIFICATION	3.3292017109560023E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999933477419704	WITHOUT_CLASSIFICATION	6.652258029611922E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9998895539702025	WITHOUT_CLASSIFICATION	1.1044602979746374E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999964335090351	WITHOUT_CLASSIFICATION	3.5664909650516786E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999834698850918	WITHOUT_CLASSIFICATION	1.653011490824932E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999711749157745	WITHOUT_CLASSIFICATION	2.8825084225492784E-5	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999986980642347	WITHOUT_CLASSIFICATION	1.3019357653322442E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.99999337278663	WITHOUT_CLASSIFICATION	6.627213370021666E-6	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999985807909196	WITHOUT_CLASSIFICATION	1.4192090804067274E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999966217439257	WITHOUT_CLASSIFICATION	3.378256074379043E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999983371285492	WITHOUT_CLASSIFICATION	1.6628714507331356E-6	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999987380849715	WITHOUT_CLASSIFICATION	1.2619150284707922E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999557586088081	WITHOUT_CLASSIFICATION	4.424139119183889E-5	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999985591829951	WITHOUT_CLASSIFICATION	1.4408170049660289E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999963632337265	WITHOUT_CLASSIFICATION	3.636766273512568E-6	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999709802116443	WITHOUT_CLASSIFICATION	2.901978835558703E-5	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999812389127887	WITHOUT_CLASSIFICATION	1.876108721137089E-5	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999161726135455	WITHOUT_CLASSIFICATION	8.382738645447623E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999993593871103	WITHOUT_CLASSIFICATION	6.406128896908531E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999973497705077	WITHOUT_CLASSIFICATION	2.6502294924173343E-6	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999964378750192	WITHOUT_CLASSIFICATION	3.562124980680617E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999660551499696	WITHOUT_CLASSIFICATION	3.3944850030487397E-5	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999965724173105	WITHOUT_CLASSIFICATION	3.427582689450983E-6	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999947326389068	WITHOUT_CLASSIFICATION	5.26736109317205E-6	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999999017914485	WITHOUT_CLASSIFICATION	9.82085515543899E-8	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999979838246744	WITHOUT_CLASSIFICATION	2.0161753255556727E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999977897340918	WITHOUT_CLASSIFICATION	2.2102659080787277E-6	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999988548519371	WITHOUT_CLASSIFICATION	1.1451480629009666E-6	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999579381199278	WITHOUT_CLASSIFICATION	4.206188007212642E-5	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999922041538819	WITHOUT_CLASSIFICATION	7.795846118107572E-6	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9998600094332449	WITHOUT_CLASSIFICATION	1.3999056675509776E-4	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999931860822574	WITHOUT_CLASSIFICATION	6.813917742620316E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999899505562557	WITHOUT_CLASSIFICATION	1.0049443744153696E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999826402228317	WITHOUT_CLASSIFICATION	1.7359777168340998E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999711749157745	WITHOUT_CLASSIFICATION	2.8825084225492784E-5	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999986980642347	WITHOUT_CLASSIFICATION	1.3019357653322442E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.99999337278663	WITHOUT_CLASSIFICATION	6.627213370021666E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999966217439257	WITHOUT_CLASSIFICATION	3.378256074379043E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999983371285492	WITHOUT_CLASSIFICATION	1.6628714507331356E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9999957757619622	WITHOUT_CLASSIFICATION	4.224238037830129E-6	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999998209347025	WITHOUT_CLASSIFICATION	1.7906529751681981E-7	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9997921121457154	WITHOUT_CLASSIFICATION	2.0788785428467254E-4	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.999985771411958	WITHOUT_CLASSIFICATION	1.4228588042023192E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9998616849443298	WITHOUT_CLASSIFICATION	1.3831505567015118E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999971091642794	WITHOUT_CLASSIFICATION	2.8908357205461515E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999981283910304	WITHOUT_CLASSIFICATION	1.871608969575389E-6	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999963592713081	WITHOUT_CLASSIFICATION	3.6407286918867873E-6	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999879283520459	WITHOUT_CLASSIFICATION	1.2071647954025135E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999983193214315	WITHOUT_CLASSIFICATION	1.6806785685326194E-6	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999928070229523	WITHOUT_CLASSIFICATION	7.192977047700086E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999866064168685	WITHOUT_CLASSIFICATION	1.3393583131529272E-5	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999996059447146	WITHOUT_CLASSIFICATION	3.9405528540726696E-7	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999738500311686	WITHOUT_CLASSIFICATION	2.614996883149705E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999950795609647	WITHOUT_CLASSIFICATION	4.920439035400322E-6	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999889675948709	WITHOUT_CLASSIFICATION	1.1032405129178347E-5	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999987915141174	WITHOUT_CLASSIFICATION	1.2084858826403647E-6	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999988812789165	WITHOUT_CLASSIFICATION	1.118721083607412E-6	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999978256531081	WITHOUT_CLASSIFICATION	2.174346891972822E-6	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999845675759207	WITHOUT_CLASSIFICATION	1.5432424079305876E-5	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.999993435397071	WITHOUT_CLASSIFICATION	6.5646029291002766E-6	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999916096113979	WITHOUT_CLASSIFICATION	8.390388602125201E-6	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999994518120003	WITHOUT_CLASSIFICATION	5.481879997578032E-7	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999962613091748	WITHOUT_CLASSIFICATION	3.738690825179261E-6	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999913831495563	WITHOUT_CLASSIFICATION	8.616850443678003E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999929187299895	WITHOUT_CLASSIFICATION	7.081270010459912E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999137156717782	WITHOUT_CLASSIFICATION	8.628432822178551E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999991153831125	WITHOUT_CLASSIFICATION	8.84616887591268E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999983371285492	WITHOUT_CLASSIFICATION	1.6628714507331356E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999995582044231	WITHOUT_CLASSIFICATION	4.4179557681574307E-7	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.999999948869697	WITHOUT_CLASSIFICATION	5.113030303301067E-8	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999109568001	WITHOUT_CLASSIFICATION	8.904319984299003E-8	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.999952825246248	WITHOUT_CLASSIFICATION	4.7174753752127526E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.999952825246248	WITHOUT_CLASSIFICATION	4.7174753752127526E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999998979897321	WITHOUT_CLASSIFICATION	1.0201026787819571E-7	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999210846459291	WITHOUT_CLASSIFICATION	7.891535407092919E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999811014184095	WITHOUT_CLASSIFICATION	1.889858159056707E-5	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.999964209773771	WITHOUT_CLASSIFICATION	3.5790226229058525E-5	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9996688840930277	WITHOUT_CLASSIFICATION	3.3111590697229896E-4	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9991528094840382	WITHOUT_CLASSIFICATION	8.471905159618844E-4	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999758314077125	WITHOUT_CLASSIFICATION	2.4168592287439637E-5	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9998965187717535	WITHOUT_CLASSIFICATION	1.034812282465657E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998669664318681	WITHOUT_CLASSIFICATION	1.3303356813186443E-4	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999939409598947	WITHOUT_CLASSIFICATION	6.059040105300483E-6	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999924143383359	WITHOUT_CLASSIFICATION	7.585661664163047E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999894818727775	WITHOUT_CLASSIFICATION	1.0518127222489711E-5	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998923085341487	WITHOUT_CLASSIFICATION	1.0769146585131954E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9999506803158492	WITHOUT_CLASSIFICATION	4.9319684150821505E-5	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999652451405713	WITHOUT_CLASSIFICATION	3.4754859428745834E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999962326367999	WITHOUT_CLASSIFICATION	3.767363200116155E-6	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999936432639344	WITHOUT_CLASSIFICATION	6.356736065663296E-6	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999935566485857	WITHOUT_CLASSIFICATION	6.443351414301511E-6	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999869764237457	WITHOUT_CLASSIFICATION	1.3023576254284267E-5	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.999996114780436	WITHOUT_CLASSIFICATION	3.885219563967269E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999962326367999	WITHOUT_CLASSIFICATION	3.767363200116155E-6	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999977970670694	WITHOUT_CLASSIFICATION	2.2029329305913E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993299739414	WITHOUT_CLASSIFICATION	6.700260586837756E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993299739414	WITHOUT_CLASSIFICATION	6.700260586837756E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999935566485857	WITHOUT_CLASSIFICATION	6.443351414301511E-6	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999908481767709	WITHOUT_CLASSIFICATION	9.151823229116943E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999960459100414	WITHOUT_CLASSIFICATION	3.9540899585834636E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999960459100414	WITHOUT_CLASSIFICATION	3.9540899585834636E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999959465866756	WITHOUT_CLASSIFICATION	4.053413324424978E-6	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999763096655505	WITHOUT_CLASSIFICATION	2.3690334449461478E-5	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9998611122012935	WITHOUT_CLASSIFICATION	1.3888779870659798E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999916883853014	WITHOUT_CLASSIFICATION	8.311614698656899E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999968007244603	WITHOUT_CLASSIFICATION	3.199275539753541E-6	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999456668563087	WITHOUT_CLASSIFICATION	5.433314369120852E-5	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.999997296714453	WITHOUT_CLASSIFICATION	2.703285547008425E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999164057190362	WITHOUT_CLASSIFICATION	8.359428096379274E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999776130996202	WITHOUT_CLASSIFICATION	2.238690037988862E-5	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999799520592862	WITHOUT_CLASSIFICATION	2.0047940713731538E-5	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999595598391497	WITHOUT_CLASSIFICATION	4.0440160850280245E-5	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999996475486831	WITHOUT_CLASSIFICATION	3.5245131699576057E-7	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9999978862489329	WITHOUT_CLASSIFICATION	2.113751067067963E-6	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999158559279253	WITHOUT_CLASSIFICATION	8.41440720746889E-5	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9999813819379417	WITHOUT_CLASSIFICATION	1.861806205821917E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999969988599509	WITHOUT_CLASSIFICATION	3.0011400491162746E-6	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.999997997989045	WITHOUT_CLASSIFICATION	2.0020109550971865E-6	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999989401431931	WITHOUT_CLASSIFICATION	1.059856806779766E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999425366516677	WITHOUT_CLASSIFICATION	5.746334833224923E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999561521422895	WITHOUT_CLASSIFICATION	4.384785771044749E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999961697964457	WITHOUT_CLASSIFICATION	3.8302035543829344E-6	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999981956610772	WITHOUT_CLASSIFICATION	1.804338922919239E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999898827780407	WITHOUT_CLASSIFICATION	1.0117221959420995E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998669664318681	WITHOUT_CLASSIFICATION	1.3303356813186443E-4	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999994018460624	WITHOUT_CLASSIFICATION	5.981539376969906E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999993058139577	WITHOUT_CLASSIFICATION	6.941860423156008E-7	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999997535846219	WITHOUT_CLASSIFICATION	2.464153781557668E-7	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999937762960095	WITHOUT_CLASSIFICATION	6.223703990501489E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999945128082838	WITHOUT_CLASSIFICATION	5.487191716116276E-6	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999896323585521	WITHOUT_CLASSIFICATION	1.0367641447968293E-5	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999969203276594	WITHOUT_CLASSIFICATION	3.0796723406420065E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999994520779208	WITHOUT_CLASSIFICATION	5.479220791346966E-7	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.999998040921041	WITHOUT_CLASSIFICATION	1.9590789589679695E-6	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999973764032455	WITHOUT_CLASSIFICATION	2.6235967544148632E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9998610988698313	WITHOUT_CLASSIFICATION	1.3890113016864038E-4	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999958919203521	WITHOUT_CLASSIFICATION	4.1080796479364916E-6	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999883456814211	WITHOUT_CLASSIFICATION	1.165431857893595E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999928876510898	WITHOUT_CLASSIFICATION	7.112348910136881E-6	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999903203487597	WITHOUT_CLASSIFICATION	9.679651240350692E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.999994236955388	WITHOUT_CLASSIFICATION	5.7630446120437325E-6	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999984140075422	WITHOUT_CLASSIFICATION	1.5859924577858253E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999769341353867	WITHOUT_CLASSIFICATION	2.306586461328251E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.999935046301699	WITHOUT_CLASSIFICATION	6.49536983009566E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9998927914141476	WITHOUT_CLASSIFICATION	1.072085858525448E-4	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999955784528076	WITHOUT_CLASSIFICATION	4.4215471924529755E-6	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999844210881348	WITHOUT_CLASSIFICATION	1.5578911865245353E-5	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999885447125728	WITHOUT_CLASSIFICATION	1.1455287427133426E-5	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999992664702095	WITHOUT_CLASSIFICATION	7.335297905257192E-7	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999892161189453	WITHOUT_CLASSIFICATION	1.0783881054605947E-5	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999938038479232	WITHOUT_CLASSIFICATION	6.1961520767629805E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.999948881366672	WITHOUT_CLASSIFICATION	5.111863332802956E-5	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999946407719474	WITHOUT_CLASSIFICATION	5.359228052612233E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.999999684757953	WITHOUT_CLASSIFICATION	3.152420470233646E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999951114478801	WITHOUT_CLASSIFICATION	4.888552119890749E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999998630698188	WITHOUT_CLASSIFICATION	1.3693018118254562E-7	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999958451056904	WITHOUT_CLASSIFICATION	4.154894309611788E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9999940452740237	WITHOUT_CLASSIFICATION	5.954725976349396E-6	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9999878945144892	WITHOUT_CLASSIFICATION	1.210548551064731E-5	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999880324902553	WITHOUT_CLASSIFICATION	1.1967509744702058E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999985286998666	WITHOUT_CLASSIFICATION	1.471300133407267E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999778587740048	WITHOUT_CLASSIFICATION	2.214122599519245E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999778587740048	WITHOUT_CLASSIFICATION	2.214122599519245E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.999981076903676	WITHOUT_CLASSIFICATION	1.8923096323964106E-5	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999981680265942	WITHOUT_CLASSIFICATION	1.8319734057718238E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999996541955403	WITHOUT_CLASSIFICATION	3.4580445964288643E-7	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9999505266383331	WITHOUT_CLASSIFICATION	4.947336166697467E-5	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999997032489304	WITHOUT_CLASSIFICATION	2.9675106959525375E-7	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.99999949133003	WITHOUT_CLASSIFICATION	5.086699700973605E-7	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9998294793115893	WITHOUT_CLASSIFICATION	1.7052068841083066E-4	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.99996993383248	WITHOUT_CLASSIFICATION	3.0066167519988756E-5	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999699684698262	WITHOUT_CLASSIFICATION	3.0031530173737988E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999991286722727	WITHOUT_CLASSIFICATION	8.713277273296334E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999951841399478	WITHOUT_CLASSIFICATION	4.815860052190151E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.99999976305109	WITHOUT_CLASSIFICATION	2.3694891002311376E-7	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999990175176313	WITHOUT_CLASSIFICATION	9.824823686256142E-7	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999951181878879	WITHOUT_CLASSIFICATION	4.881812112067622E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999964111070749	WITHOUT_CLASSIFICATION	3.5888929251619194E-6	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999836535769849	WITHOUT_CLASSIFICATION	1.634642301506931E-5	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999994850829992	WITHOUT_CLASSIFICATION	5.149170007931515E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999981556616979	WITHOUT_CLASSIFICATION	1.8443383020746339E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.999985458576128	WITHOUT_CLASSIFICATION	1.4541423871892518E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.999999794886166	WITHOUT_CLASSIFICATION	2.0511383405969224E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999345169519389	WITHOUT_CLASSIFICATION	6.548304806099856E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999345169519389	WITHOUT_CLASSIFICATION	6.548304806099856E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999992695237687	WITHOUT_CLASSIFICATION	7.304762312141867E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999996467047242	WITHOUT_CLASSIFICATION	3.5329527577478467E-7	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999995743706429	WITHOUT_CLASSIFICATION	4.2562935705340556E-7	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999980448735546	WITHOUT_CLASSIFICATION	1.955126445469827E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999994585698064	WITHOUT_CLASSIFICATION	5.414301935299695E-7	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.999918445860351	WITHOUT_CLASSIFICATION	8.155413964908152E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999893496634557	WITHOUT_CLASSIFICATION	1.0650336544345431E-5	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9998125079553425	WITHOUT_CLASSIFICATION	1.8749204465757453E-4	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999704819390699	WITHOUT_CLASSIFICATION	2.951806093010394E-5	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9983341584698819	WITHOUT_CLASSIFICATION	0.001665841530118072	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999951952242627	WITHOUT_CLASSIFICATION	4.804775737224376E-6	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9980243102730312	WITHOUT_CLASSIFICATION	0.001975689726968934	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999229125164761	WITHOUT_CLASSIFICATION	7.708748352377864E-5	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999996124973576	WITHOUT_CLASSIFICATION	3.8750264241522884E-7	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999991964334286	WITHOUT_CLASSIFICATION	8.035665713586542E-7	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999984185923978	WITHOUT_CLASSIFICATION	1.5814076022197733E-6	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999912538004129	WITHOUT_CLASSIFICATION	8.746199587199416E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999708447610608	WITHOUT_CLASSIFICATION	2.915523893922069E-5	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999936433322251	WITHOUT_CLASSIFICATION	6.356667775039657E-6	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9998336919834292	WITHOUT_CLASSIFICATION	1.6630801657083495E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999828575181915	WITHOUT_CLASSIFICATION	1.71424818085115E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999917533665367	WITHOUT_CLASSIFICATION	8.246633463353126E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999756455120752	WITHOUT_CLASSIFICATION	2.4354487924730236E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999993434472039	WITHOUT_CLASSIFICATION	6.565527962474222E-7	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.999999798885908	WITHOUT_CLASSIFICATION	2.0111409203405205E-7	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999997992457933	WITHOUT_CLASSIFICATION	2.0075420663172994E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999995676901587	WITHOUT_CLASSIFICATION	4.3230984120876015E-7	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999823380547825	WITHOUT_CLASSIFICATION	1.766194521744124E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999513492991915	WITHOUT_CLASSIFICATION	4.8650700808416205E-5	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999993991473934	WITHOUT_CLASSIFICATION	6.00852606524272E-7	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999156180073563	WITHOUT_CLASSIFICATION	8.438199264375371E-5	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999808039341122	WITHOUT_CLASSIFICATION	1.9196065887787733E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999979971233542	WITHOUT_CLASSIFICATION	2.0028766456619882E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999979971233542	WITHOUT_CLASSIFICATION	2.0028766456619882E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9999711465724895	WITHOUT_CLASSIFICATION	2.8853427510469638E-5	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9998954744796474	WITHOUT_CLASSIFICATION	1.0452552035265775E-4	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999995017411554	WITHOUT_CLASSIFICATION	4.982588446129136E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9998341547663553	WITHOUT_CLASSIFICATION	1.6584523364462483E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999985872848245	WITHOUT_CLASSIFICATION	1.4127151755027676E-6	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999973606107717	WITHOUT_CLASSIFICATION	2.639389228192385E-6	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999528909811528	WITHOUT_CLASSIFICATION	4.710901884707297E-5	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999943185815813	WITHOUT_CLASSIFICATION	5.681418418824809E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999997641312954	WITHOUT_CLASSIFICATION	2.3586870445836793E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999932773973984	WITHOUT_CLASSIFICATION	6.7226026016563805E-6	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999884161892887	WITHOUT_CLASSIFICATION	1.1583810711321113E-5	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999588396214312	WITHOUT_CLASSIFICATION	4.116037856882675E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999952309827579	WITHOUT_CLASSIFICATION	4.769017242100591E-6	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999995367433653	WITHOUT_CLASSIFICATION	4.6325663471469284E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999817385770319	WITHOUT_CLASSIFICATION	1.8261422968148804E-5	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999842600315632	WITHOUT_CLASSIFICATION	1.573996843689934E-5	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9999347031839076	WITHOUT_CLASSIFICATION	6.529681609228063E-5	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9997185426414269	WITHOUT_CLASSIFICATION	2.81457358573062E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999984498593307	WITHOUT_CLASSIFICATION	1.5501406693663767E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999827073013564	WITHOUT_CLASSIFICATION	1.729269864356376E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998669664318681	WITHOUT_CLASSIFICATION	1.3303356813186443E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999994814805893	WITHOUT_CLASSIFICATION	5.185194106948647E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999541087731874	WITHOUT_CLASSIFICATION	4.5891226812595E-5	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999992562629044	WITHOUT_CLASSIFICATION	7.437370956883176E-7	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9915353545774551	WITHOUT_CLASSIFICATION	0.008464645422544829	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.999999267202196	WITHOUT_CLASSIFICATION	7.327978040431599E-7	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999986373247608	WITHOUT_CLASSIFICATION	1.3626752392907474E-6	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999980432775425	WITHOUT_CLASSIFICATION	1.9567224575734628E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999992871765316	WITHOUT_CLASSIFICATION	7.128234682687763E-7	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999950447949206	WITHOUT_CLASSIFICATION	4.955205079308953E-6	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999981394155817	WITHOUT_CLASSIFICATION	1.8605844182550143E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999991485537011	WITHOUT_CLASSIFICATION	8.514462988379025E-7	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9998264488163402	WITHOUT_CLASSIFICATION	1.735511836597821E-4	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999964401312359	WITHOUT_CLASSIFICATION	3.559868764083254E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9985093211044637	WITHOUT_CLASSIFICATION	0.0014906788955363277	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999988854767083	WITHOUT_CLASSIFICATION	1.1145232916474103E-6	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999769967878289	WITHOUT_CLASSIFICATION	2.300321217113307E-5	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999715090890685	WITHOUT_CLASSIFICATION	2.849091093144368E-5	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999702476381185	WITHOUT_CLASSIFICATION	2.9752361881463624E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999983371285492	WITHOUT_CLASSIFICATION	1.6628714507331356E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999586698648641	WITHOUT_CLASSIFICATION	4.1330135135874054E-5	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999956382352149	WITHOUT_CLASSIFICATION	4.361764785157639E-6	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9995971982682379	WITHOUT_CLASSIFICATION	4.02801731762088E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.999976543909968	WITHOUT_CLASSIFICATION	2.345609003195059E-5	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999907363874715	WITHOUT_CLASSIFICATION	9.263612528523221E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999999455272828	WITHOUT_CLASSIFICATION	5.447271717186468E-8	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999947174877584	WITHOUT_CLASSIFICATION	5.2825122415671534E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.999999030123512	WITHOUT_CLASSIFICATION	9.698764880315165E-7	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999990727157283	WITHOUT_CLASSIFICATION	9.272842716799269E-7	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999213238832235	WITHOUT_CLASSIFICATION	7.867611677645866E-5	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999915358990884	WITHOUT_CLASSIFICATION	8.464100911525544E-6	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999995089034279	WITHOUT_CLASSIFICATION	4.910965721093277E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999944327012309	WITHOUT_CLASSIFICATION	5.56729876906795E-6	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999893443673501	WITHOUT_CLASSIFICATION	1.0655632649995615E-5	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999919780955171	WITHOUT_CLASSIFICATION	8.02190448293526E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999986648682934	WITHOUT_CLASSIFICATION	1.3351317066416115E-6	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999930943743365	WITHOUT_CLASSIFICATION	6.905625663516091E-6	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999995722216023	WITHOUT_CLASSIFICATION	4.2777839760914786E-7	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999989805002304	WITHOUT_CLASSIFICATION	1.0194997695798606E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999997764234817	WITHOUT_CLASSIFICATION	2.235765183929212E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999997764234817	WITHOUT_CLASSIFICATION	2.235765183929212E-7	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999984446075206	WITHOUT_CLASSIFICATION	1.5553924794206305E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9997552628632613	WITHOUT_CLASSIFICATION	2.4473713673869114E-4	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999922547899807	WITHOUT_CLASSIFICATION	7.745210019246168E-6	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999986556112045	WITHOUT_CLASSIFICATION	1.3443887954827733E-6	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999990657912193	WITHOUT_CLASSIFICATION	9.342087806037955E-7	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999878522380725	WITHOUT_CLASSIFICATION	1.2147761927380135E-5	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.999959587961126	WITHOUT_CLASSIFICATION	4.041203887384386E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999948117325925	WITHOUT_CLASSIFICATION	5.18826740747043E-6	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999948117325925	WITHOUT_CLASSIFICATION	5.18826740747043E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999940345454584	WITHOUT_CLASSIFICATION	5.965454541640214E-6	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999994522237944	WITHOUT_CLASSIFICATION	5.477762056131677E-7	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999737771025382	WITHOUT_CLASSIFICATION	2.6222897461806647E-5	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999932502370192	WITHOUT_CLASSIFICATION	6.749762980748462E-6	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999938819597491	WITHOUT_CLASSIFICATION	6.118040250875579E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999916700192791	WITHOUT_CLASSIFICATION	8.329980720803081E-6	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999887597541083	WITHOUT_CLASSIFICATION	1.1240245891709527E-5	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9994304867139973	WITHOUT_CLASSIFICATION	5.695132860027342E-4	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.999997040446764	WITHOUT_CLASSIFICATION	2.959553236031023E-6	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999992689789406	WITHOUT_CLASSIFICATION	7.310210593368163E-7	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.999995820373813	WITHOUT_CLASSIFICATION	4.1796261870535215E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999962513190609	WITHOUT_CLASSIFICATION	3.7486809391032417E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999993913798955	WITHOUT_CLASSIFICATION	6.086201044901661E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999878492112302	WITHOUT_CLASSIFICATION	1.2150788769846451E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999996187995311	WITHOUT_CLASSIFICATION	3.8120046886442974E-7	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.999995716234176	WITHOUT_CLASSIFICATION	4.28376582390834E-6	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999761928817735	WITHOUT_CLASSIFICATION	2.3807118226563123E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999928504817174	WITHOUT_CLASSIFICATION	7.149518282625267E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999943835761382	WITHOUT_CLASSIFICATION	5.616423861872387E-6	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999999702559709	WITHOUT_CLASSIFICATION	2.974402917665507E-8	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999694881552714	WITHOUT_CLASSIFICATION	3.0511844728553758E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999862236335854	WITHOUT_CLASSIFICATION	1.3776366414765162E-5	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999805739501025	WITHOUT_CLASSIFICATION	1.9426049897370476E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999939552036167	WITHOUT_CLASSIFICATION	6.044796383219431E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.999985592355135	WITHOUT_CLASSIFICATION	1.4407644865082734E-5	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999325664930593	WITHOUT_CLASSIFICATION	6.743350694068224E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999996990862867	WITHOUT_CLASSIFICATION	3.009137133182475E-7	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.999918217278556	WITHOUT_CLASSIFICATION	8.178272144400137E-5	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999997652520677	WITHOUT_CLASSIFICATION	2.3474793229823424E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999996074710077	WITHOUT_CLASSIFICATION	3.9252899232642075E-7	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999875184636866	WITHOUT_CLASSIFICATION	1.2481536313297518E-5	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999864602056794	WITHOUT_CLASSIFICATION	1.35397943205521E-5	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9999804501195364	WITHOUT_CLASSIFICATION	1.954988046351654E-5	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999976662004272	WITHOUT_CLASSIFICATION	2.333799572768998E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999995827646475	WITHOUT_CLASSIFICATION	4.172353524726444E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999872497431305	WITHOUT_CLASSIFICATION	1.2750256869472002E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999895345939905	WITHOUT_CLASSIFICATION	1.0465406009389107E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999952495131403	WITHOUT_CLASSIFICATION	4.750486859730956E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9996066445704462	WITHOUT_CLASSIFICATION	3.933554295537816E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9999958576740998	WITHOUT_CLASSIFICATION	4.142325900150892E-6	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999842684604535	WITHOUT_CLASSIFICATION	1.5731539546481168E-5	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999958536011275	WITHOUT_CLASSIFICATION	4.1463988724755285E-6	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999992516363048	WITHOUT_CLASSIFICATION	7.48363695333804E-7	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999736160119412	WITHOUT_CLASSIFICATION	2.6383988058814804E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999993892706595	WITHOUT_CLASSIFICATION	6.107293404667532E-7	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9999656493290264	WITHOUT_CLASSIFICATION	3.43506709736718E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999988150777606	WITHOUT_CLASSIFICATION	1.1849222394890946E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999917533665367	WITHOUT_CLASSIFICATION	8.246633463353126E-6	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999988150777606	WITHOUT_CLASSIFICATION	1.1849222394890946E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999841975941337	WITHOUT_CLASSIFICATION	1.5802405866289343E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999797018483165	WITHOUT_CLASSIFICATION	2.0298151683405658E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999976265262711	WITHOUT_CLASSIFICATION	2.3734737288558038E-6	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999923886281381	WITHOUT_CLASSIFICATION	7.611371861868293E-6	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9999392577751912	WITHOUT_CLASSIFICATION	6.074222480890087E-5	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9999174757958537	WITHOUT_CLASSIFICATION	8.252420414637736E-5	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.999964697456694	WITHOUT_CLASSIFICATION	3.5302543305948064E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999945360604546	WITHOUT_CLASSIFICATION	5.463939545316671E-6	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999997569899077	WITHOUT_CLASSIFICATION	2.4301009225943705E-7	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999996037351937	WITHOUT_CLASSIFICATION	3.9626480620084474E-7	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999982287275253	WITHOUT_CLASSIFICATION	1.7712724746874631E-6	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999952737923057	WITHOUT_CLASSIFICATION	4.726207694325626E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999959562861314	WITHOUT_CLASSIFICATION	4.0437138686544895E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999940922803516	WITHOUT_CLASSIFICATION	5.907719648380104E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999971293393807	WITHOUT_CLASSIFICATION	2.870660619255822E-6	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999894214438594	WITHOUT_CLASSIFICATION	1.0578556140607493E-5	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999903253086904	WITHOUT_CLASSIFICATION	9.674691309604797E-6	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999358739262153	WITHOUT_CLASSIFICATION	6.412607378462856E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9998961374896248	WITHOUT_CLASSIFICATION	1.0386251037519271E-4	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999926304255692	WITHOUT_CLASSIFICATION	7.369574430911027E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.99996522727284	WITHOUT_CLASSIFICATION	3.4772727160039497E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999996742860413	WITHOUT_CLASSIFICATION	3.2571395870042105E-7	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999987401698619	WITHOUT_CLASSIFICATION	1.259830138112636E-6	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998112756256	WITHOUT_CLASSIFICATION	1.8872437440333464E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999376725186	WITHOUT_CLASSIFICATION	6.23274814060635E-8	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999958384611283	WITHOUT_CLASSIFICATION	4.1615388717347045E-6	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9999741458228523	WITHOUT_CLASSIFICATION	2.5854177147770533E-5	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999893848462676	WITHOUT_CLASSIFICATION	1.0615153732397329E-5	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999701770662776	WITHOUT_CLASSIFICATION	2.9822933722386434E-5	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9998896745593279	WITHOUT_CLASSIFICATION	1.1032544067205181E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999931555726648	WITHOUT_CLASSIFICATION	6.8444273351910455E-6	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999773361811845	WITHOUT_CLASSIFICATION	2.266381881546385E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9999235030885812	WITHOUT_CLASSIFICATION	7.649691141875966E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999378198446591	WITHOUT_CLASSIFICATION	6.218015534085162E-5	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999989946854092	WITHOUT_CLASSIFICATION	1.0053145908121368E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999549835903	WITHOUT_CLASSIFICATION	4.5016409614184754E-8	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.999999478343235	WITHOUT_CLASSIFICATION	5.216567649466184E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999989778415522	WITHOUT_CLASSIFICATION	1.022158447711664E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999989778415522	WITHOUT_CLASSIFICATION	1.022158447711664E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999922252114111	WITHOUT_CLASSIFICATION	7.774788589014857E-6	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999948646256834	WITHOUT_CLASSIFICATION	5.13537431660059E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999884440325285	WITHOUT_CLASSIFICATION	1.155596747148052E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.99999979751683	WITHOUT_CLASSIFICATION	2.0248316995182819E-7	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999992168143756	WITHOUT_CLASSIFICATION	7.831856243978648E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999997930207191	WITHOUT_CLASSIFICATION	2.0697928097760384E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999738653388807	WITHOUT_CLASSIFICATION	2.613466111927189E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999514981814	WITHOUT_CLASSIFICATION	4.8501818437306754E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999636247332424	WITHOUT_CLASSIFICATION	3.63752667576033E-5	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999952573031033	WITHOUT_CLASSIFICATION	4.742696896634185E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9999455050806046	WITHOUT_CLASSIFICATION	5.4494919395400575E-5	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9999571574307962	WITHOUT_CLASSIFICATION	4.284256920382724E-5	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999687952442565	WITHOUT_CLASSIFICATION	3.120475574348655E-5	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9999876028453284	WITHOUT_CLASSIFICATION	1.2397154671500105E-5	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999960353540744	WITHOUT_CLASSIFICATION	3.9646459254798185E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999550360849324	WITHOUT_CLASSIFICATION	4.496391506768619E-5	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999991427057043	WITHOUT_CLASSIFICATION	8.572942955831927E-7	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999964640619995	WITHOUT_CLASSIFICATION	3.5359380004507597E-6	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999972336156899	WITHOUT_CLASSIFICATION	2.766384310102383E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999994930641544	WITHOUT_CLASSIFICATION	5.069358456013263E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999712206493521	WITHOUT_CLASSIFICATION	2.877935064789402E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999983136294686	WITHOUT_CLASSIFICATION	1.6863705314326028E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9999827359448122	WITHOUT_CLASSIFICATION	1.7264055187776332E-5	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9994508085599787	WITHOUT_CLASSIFICATION	5.491914400213523E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.999471079793572	WITHOUT_CLASSIFICATION	5.289202064279886E-4	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999298791360333	WITHOUT_CLASSIFICATION	7.012086396682972E-5	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9997475283778382	WITHOUT_CLASSIFICATION	2.52471622161814E-4	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999890729168179	WITHOUT_CLASSIFICATION	1.092708318206707E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999915234901425	WITHOUT_CLASSIFICATION	8.476509857539453E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.999982357764102	WITHOUT_CLASSIFICATION	1.7642235897905466E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999698039018136	WITHOUT_CLASSIFICATION	3.0196098186434206E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.999971796715973	WITHOUT_CLASSIFICATION	2.8203284027100414E-5	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999938444634602	WITHOUT_CLASSIFICATION	6.155536539811934E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999971555332143	WITHOUT_CLASSIFICATION	2.8444667856114343E-6	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999750135591133	WITHOUT_CLASSIFICATION	2.4986440886708344E-5	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999017554375893	WITHOUT_CLASSIFICATION	9.824456241068388E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999854850214175	WITHOUT_CLASSIFICATION	1.4514978582520742E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999854850214175	WITHOUT_CLASSIFICATION	1.4514978582520742E-5	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999427830921025	WITHOUT_CLASSIFICATION	5.721690789744943E-5	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999984887098328	WITHOUT_CLASSIFICATION	1.5112901671800992E-6	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999852709651119	WITHOUT_CLASSIFICATION	1.4729034888134978E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999912938670458	WITHOUT_CLASSIFICATION	8.70613295420624E-6	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999994903480094	WITHOUT_CLASSIFICATION	5.096519905719042E-7	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.999969333497614	WITHOUT_CLASSIFICATION	3.0666502386085594E-5	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999729058041129	WITHOUT_CLASSIFICATION	2.7094195887086955E-5	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999988345908432	WITHOUT_CLASSIFICATION	1.1654091568805952E-6	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999725280950661	WITHOUT_CLASSIFICATION	2.74719049338784E-5	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999997566158118	WITHOUT_CLASSIFICATION	2.4338418829811277E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999985815619815	WITHOUT_CLASSIFICATION	1.4184380184215174E-6	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9998915954402522	WITHOUT_CLASSIFICATION	1.0840455974769499E-4	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999953720172565	WITHOUT_CLASSIFICATION	4.627982743507165E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999944638409748	WITHOUT_CLASSIFICATION	5.536159025211162E-6	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999969108480266	WITHOUT_CLASSIFICATION	3.089151973435709E-6	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999949279465719	WITHOUT_CLASSIFICATION	5.072053428202786E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.999815867267653	WITHOUT_CLASSIFICATION	1.8413273234685223E-4	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999605869177776	WITHOUT_CLASSIFICATION	3.9413082222468875E-5	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999549821879654	WITHOUT_CLASSIFICATION	4.501781203453151E-5	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999867378673672	WITHOUT_CLASSIFICATION	1.3262132632703768E-5	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999988554284651	WITHOUT_CLASSIFICATION	1.1445715349165672E-6	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9998858020675652	WITHOUT_CLASSIFICATION	1.1419793243481604E-4	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999939226773994	WITHOUT_CLASSIFICATION	6.077322600607282E-6	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999928133056117	WITHOUT_CLASSIFICATION	7.18669438834159E-6	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999729751659666	WITHOUT_CLASSIFICATION	2.702483403329683E-5	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999900901527525	WITHOUT_CLASSIFICATION	9.909847247547386E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999976916180837	WITHOUT_CLASSIFICATION	2.3083819162405733E-6	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999964871266948	WITHOUT_CLASSIFICATION	3.5128733052992736E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999965861103962	WITHOUT_CLASSIFICATION	3.413889603789937E-6	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999997053630519	WITHOUT_CLASSIFICATION	2.9463694809731497E-7	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999974327651519	WITHOUT_CLASSIFICATION	2.567234848129292E-6	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999992653558518	WITHOUT_CLASSIFICATION	7.34644148246878E-7	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999952405555909	WITHOUT_CLASSIFICATION	4.759444409144162E-6	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999996725880282	WITHOUT_CLASSIFICATION	3.2741197164736674E-7	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999976234997028	WITHOUT_CLASSIFICATION	2.3765002971918214E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999981672837477	WITHOUT_CLASSIFICATION	1.8327162522382745E-6	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999995395849546	WITHOUT_CLASSIFICATION	4.604150453792866E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9996171923183003	WITHOUT_CLASSIFICATION	3.828076816996593E-4	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999953235420812	WITHOUT_CLASSIFICATION	4.676457918826952E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999999230896527	WITHOUT_CLASSIFICATION	7.691034734570337E-8	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999981306632094	WITHOUT_CLASSIFICATION	1.869336790613932E-6	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999989831050405	WITHOUT_CLASSIFICATION	1.016894959485885E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999989334872665	WITHOUT_CLASSIFICATION	1.0665127334051568E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999655732802956	WITHOUT_CLASSIFICATION	3.442671970442897E-5	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.999999638253029	WITHOUT_CLASSIFICATION	3.617469710896874E-7	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999959847592316	WITHOUT_CLASSIFICATION	4.015240768424998E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999935113854498	WITHOUT_CLASSIFICATION	6.488614550239712E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999972034172714	WITHOUT_CLASSIFICATION	2.796582728618191E-6	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999702378864487	WITHOUT_CLASSIFICATION	2.976211355125627E-5	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999989293306034	WITHOUT_CLASSIFICATION	1.0706693966056098E-6	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.999990189575104	WITHOUT_CLASSIFICATION	9.810424896004817E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999947453737298	WITHOUT_CLASSIFICATION	5.254626270215216E-6	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999957976446728	WITHOUT_CLASSIFICATION	4.202355327144027E-6	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999967977382768	WITHOUT_CLASSIFICATION	3.2022617232819904E-6	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999993803113292	WITHOUT_CLASSIFICATION	6.196886708534409E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999971752536454	WITHOUT_CLASSIFICATION	2.824746354663875E-6	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999953552047796	WITHOUT_CLASSIFICATION	4.644795220538793E-6	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999951775320534	WITHOUT_CLASSIFICATION	4.8224679467093735E-6	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.999993929077368	WITHOUT_CLASSIFICATION	6.070922632008171E-6	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999982229019136	WITHOUT_CLASSIFICATION	1.7770980862985996E-6	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999573387219773	WITHOUT_CLASSIFICATION	4.266127802267231E-5	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999957695476287	WITHOUT_CLASSIFICATION	4.23045237126264E-6	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.999924404573842	WITHOUT_CLASSIFICATION	7.559542615801058E-5	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999764974737874	WITHOUT_CLASSIFICATION	2.3502526212632644E-5	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.999719218614429	WITHOUT_CLASSIFICATION	2.8078138557094173E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9998750421752336	WITHOUT_CLASSIFICATION	1.2495782476645097E-4	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9305923389767138	WITHOUT_CLASSIFICATION	0.06940766102328617	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999983611131478	WITHOUT_CLASSIFICATION	1.6388868521498478E-6	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999950559187697	WITHOUT_CLASSIFICATION	4.94408123029969E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999835276707018	WITHOUT_CLASSIFICATION	1.6472329298200641E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999766219887983	WITHOUT_CLASSIFICATION	2.3378011201699534E-4	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999209010187057	WITHOUT_CLASSIFICATION	7.909898129432835E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999469094929043	WITHOUT_CLASSIFICATION	5.30905070957288E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999796657775386	WITHOUT_CLASSIFICATION	2.0334222461325517E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999796657775386	WITHOUT_CLASSIFICATION	2.0334222461325517E-5	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.999968280303684	WITHOUT_CLASSIFICATION	3.171969631593842E-5	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9998890928008081	WITHOUT_CLASSIFICATION	1.1090719919202034E-4	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.99999752253659	WITHOUT_CLASSIFICATION	2.4774634099900567E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999605153606138	WITHOUT_CLASSIFICATION	3.948463938612308E-5	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999626584328376	WITHOUT_CLASSIFICATION	3.7341567162322675E-5	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999921078085052	WITHOUT_CLASSIFICATION	7.892191494729E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999913109867786	WITHOUT_CLASSIFICATION	8.689013221398378E-6	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999964044352407	WITHOUT_CLASSIFICATION	3.595564759233483E-6	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999866948117516	WITHOUT_CLASSIFICATION	1.3305188248387741E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999304575400358	WITHOUT_CLASSIFICATION	6.954245996414818E-5	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999934205507963	WITHOUT_CLASSIFICATION	6.57944920363028E-6	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999811504202131	WITHOUT_CLASSIFICATION	1.8849579786858493E-5	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999866117472116	WITHOUT_CLASSIFICATION	1.3388252788498412E-5	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999995795048673	WITHOUT_CLASSIFICATION	4.2049513264238736E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.999639370592476	WITHOUT_CLASSIFICATION	3.606294075239994E-4	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999884841069385	WITHOUT_CLASSIFICATION	1.151589306157102E-5	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999952804037846	WITHOUT_CLASSIFICATION	4.719596215384761E-6	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999936714572084	WITHOUT_CLASSIFICATION	6.3285427916079625E-6	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999993487185141	WITHOUT_CLASSIFICATION	6.512814859324871E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.99993895954892	WITHOUT_CLASSIFICATION	6.104045108004984E-5	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999995127021374	WITHOUT_CLASSIFICATION	4.872978625017357E-7	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999991502140189	WITHOUT_CLASSIFICATION	8.497859811700662E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.999998010805496	WITHOUT_CLASSIFICATION	1.989194503927961E-6	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999963489786821	WITHOUT_CLASSIFICATION	3.651021317858086E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999931503450311	WITHOUT_CLASSIFICATION	6.8496549689731764E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999981740171576	WITHOUT_CLASSIFICATION	1.8259828423778322E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999990691561375	WITHOUT_CLASSIFICATION	9.308438625016238E-6	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999933996279803	WITHOUT_CLASSIFICATION	6.600372019600705E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999997516267444	WITHOUT_CLASSIFICATION	2.4837325570368935E-7	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999992847180452	WITHOUT_CLASSIFICATION	7.152819548472521E-7	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.999999969761518	WITHOUT_CLASSIFICATION	3.0238482085151E-8	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999977497537345	WITHOUT_CLASSIFICATION	2.250246265519764E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999190436368	WITHOUT_CLASSIFICATION	8.095636313315576E-8	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999067117838636	WITHOUT_CLASSIFICATION	9.328821613645725E-5	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999991044885203	WITHOUT_CLASSIFICATION	8.955114797656077E-7	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999968849113255	WITHOUT_CLASSIFICATION	3.1150886744175257E-6	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999997125038935	WITHOUT_CLASSIFICATION	2.8749610650543357E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999996793034537	WITHOUT_CLASSIFICATION	3.206965463637906E-7	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999473586147	WITHOUT_CLASSIFICATION	5.264138525418376E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999980684928365	WITHOUT_CLASSIFICATION	1.931507163508641E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999817343928628	WITHOUT_CLASSIFICATION	1.826560713716644E-5	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999991461365524	WITHOUT_CLASSIFICATION	8.538634476471015E-7	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999954865392344	WITHOUT_CLASSIFICATION	4.513460765586089E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999992736789233	WITHOUT_CLASSIFICATION	7.26321076738242E-7	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999840532692776	WITHOUT_CLASSIFICATION	1.594673072235867E-5	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9971667580275203	WITHOUT_CLASSIFICATION	0.0028332419724798	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999711385451355	WITHOUT_CLASSIFICATION	2.8861454864464383E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999884487873397	WITHOUT_CLASSIFICATION	1.1551212660300487E-5	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.999995032508622	WITHOUT_CLASSIFICATION	4.967491378048043E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999736363845408	WITHOUT_CLASSIFICATION	2.636361545917052E-5	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9996605956805578	WITHOUT_CLASSIFICATION	3.3940431944226037E-4	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999923301931516	WITHOUT_CLASSIFICATION	7.669806848342705E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9999852474692525	WITHOUT_CLASSIFICATION	1.4752530747398163E-5	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999912783070123	WITHOUT_CLASSIFICATION	8.721692987745392E-6	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9999997828222852	WITHOUT_CLASSIFICATION	2.1717771484475153E-7	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999986182322446	WITHOUT_CLASSIFICATION	1.381767755490131E-6	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999984695621642	WITHOUT_CLASSIFICATION	1.5304378357979113E-6	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999975121142634	WITHOUT_CLASSIFICATION	2.4878857365874693E-6	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999775491813121	WITHOUT_CLASSIFICATION	2.2450818687940666E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999725616119016	WITHOUT_CLASSIFICATION	2.7438388098344203E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999935226610814	WITHOUT_CLASSIFICATION	6.477338918521965E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999968365994782	WITHOUT_CLASSIFICATION	3.163400521813876E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999854068524624	WITHOUT_CLASSIFICATION	1.4593147537614076E-5	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999452956666569	WITHOUT_CLASSIFICATION	5.470433334311275E-5	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999975670339282	WITHOUT_CLASSIFICATION	2.4329660717787126E-6	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999109634564355	WITHOUT_CLASSIFICATION	8.903654356440851E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999956041766326	WITHOUT_CLASSIFICATION	4.3958233674770465E-6	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.999996237327075	WITHOUT_CLASSIFICATION	3.7626729251447375E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.99999834428573	WITHOUT_CLASSIFICATION	1.6557142699380922E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999978541671044	WITHOUT_CLASSIFICATION	2.145832895731315E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.999999880776694	WITHOUT_CLASSIFICATION	1.192233060501789E-7	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999934855372894	WITHOUT_CLASSIFICATION	6.514462710581667E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999984622502588	WITHOUT_CLASSIFICATION	1.537749741249044E-6	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999943724454377	WITHOUT_CLASSIFICATION	5.6275545623802435E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999908242846892	WITHOUT_CLASSIFICATION	9.175715310838474E-6	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999927683859595	WITHOUT_CLASSIFICATION	7.231614040411479E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999986352091336	WITHOUT_CLASSIFICATION	1.3647908664041306E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999988241370636	WITHOUT_CLASSIFICATION	1.1758629363614873E-6	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999963606909478	WITHOUT_CLASSIFICATION	3.6393090521571922E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999960653053453	WITHOUT_CLASSIFICATION	3.934694654574957E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9998982258828673	WITHOUT_CLASSIFICATION	1.0177411713272644E-4	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999994568024703	WITHOUT_CLASSIFICATION	5.431975296562002E-7	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9998950969791768	WITHOUT_CLASSIFICATION	1.0490302082323576E-4	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999997162902099	WITHOUT_CLASSIFICATION	2.8370979003690684E-7	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999905284347123	WITHOUT_CLASSIFICATION	9.471565287761455E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999994956676049	WITHOUT_CLASSIFICATION	5.043323951858892E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999995902550638	WITHOUT_CLASSIFICATION	4.097449362167198E-7	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999989814753006	WITHOUT_CLASSIFICATION	1.0185246993003172E-6	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999139001488765	WITHOUT_CLASSIFICATION	8.609985112341439E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999995121386038	WITHOUT_CLASSIFICATION	4.878613961827246E-7	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999978836604088	WITHOUT_CLASSIFICATION	2.116339591188014E-6	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999736567925352	WITHOUT_CLASSIFICATION	2.634320746477847E-5	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999957506071181	WITHOUT_CLASSIFICATION	4.249392881947868E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999980069440797	WITHOUT_CLASSIFICATION	1.9930559202530102E-6	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999974980475053	WITHOUT_CLASSIFICATION	2.501952494704423E-5	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999763144454462	WITHOUT_CLASSIFICATION	2.3685554553769395E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999998210156353	WITHOUT_CLASSIFICATION	1.789843647291235E-7	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999983773136348	WITHOUT_CLASSIFICATION	1.622686365193164E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999950177440322	WITHOUT_CLASSIFICATION	4.982255967827166E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999988750367819	WITHOUT_CLASSIFICATION	1.1249632181381172E-6	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999972548130255	WITHOUT_CLASSIFICATION	2.745186974597279E-6	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.999998082064866	WITHOUT_CLASSIFICATION	1.9179351340966258E-6	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.999995890233842	WITHOUT_CLASSIFICATION	4.109766157978347E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999977637434267	WITHOUT_CLASSIFICATION	2.236256573300112E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999950538835353	WITHOUT_CLASSIFICATION	4.946116464760134E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999963443630413	WITHOUT_CLASSIFICATION	3.655636958756192E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999961569245729	WITHOUT_CLASSIFICATION	3.843075427091278E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999950538835353	WITHOUT_CLASSIFICATION	4.946116464760134E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999963443630413	WITHOUT_CLASSIFICATION	3.655636958756192E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999905183026373	WITHOUT_CLASSIFICATION	9.481697362624396E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999918426238202	WITHOUT_CLASSIFICATION	8.157376179790799E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999966990757677	WITHOUT_CLASSIFICATION	3.300924232229884E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999851223833935	WITHOUT_CLASSIFICATION	1.4877616606420125E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999950794039403	WITHOUT_CLASSIFICATION	4.920596059677386E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999986182038388	WITHOUT_CLASSIFICATION	1.3817961612059724E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999980516151561	WITHOUT_CLASSIFICATION	1.948384843950009E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999982551242146	WITHOUT_CLASSIFICATION	1.7448757853502748E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999977343435504	WITHOUT_CLASSIFICATION	2.2656564495465235E-6	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999931333286811	WITHOUT_CLASSIFICATION	6.86667131883119E-6	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999527705798689	WITHOUT_CLASSIFICATION	4.722942013116682E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999988750367819	WITHOUT_CLASSIFICATION	1.1249632181381172E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999988750367819	WITHOUT_CLASSIFICATION	1.1249632181381172E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999963443630413	WITHOUT_CLASSIFICATION	3.655636958756192E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999966990757677	WITHOUT_CLASSIFICATION	3.300924232229884E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999950794039403	WITHOUT_CLASSIFICATION	4.920596059677386E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999846080152398	WITHOUT_CLASSIFICATION	1.539198476018578E-5	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999985475290266	WITHOUT_CLASSIFICATION	1.4524709733092519E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999968289330998	WITHOUT_CLASSIFICATION	3.17106690012713E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999953530074335	WITHOUT_CLASSIFICATION	4.646992566471658E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999947074333816	WITHOUT_CLASSIFICATION	5.292566618413803E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999947074333816	WITHOUT_CLASSIFICATION	5.292566618413803E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999773349350507	WITHOUT_CLASSIFICATION	2.266506494930143E-5	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999934559000728	WITHOUT_CLASSIFICATION	6.544099927199595E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999944741803449	WITHOUT_CLASSIFICATION	5.525819655056831E-6	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999960888286392	WITHOUT_CLASSIFICATION	3.911171360837608E-6	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999987781730308	WITHOUT_CLASSIFICATION	1.2218269692388876E-6	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999942239889608	WITHOUT_CLASSIFICATION	5.776011039153956E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999867111124946	WITHOUT_CLASSIFICATION	1.3288887505335721E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999950538835353	WITHOUT_CLASSIFICATION	4.946116464760134E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999959590501972	WITHOUT_CLASSIFICATION	4.040949802770782E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999918426238202	WITHOUT_CLASSIFICATION	8.157376179790799E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999986182038388	WITHOUT_CLASSIFICATION	1.3817961612059724E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999980516151561	WITHOUT_CLASSIFICATION	1.948384843950009E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999980516151561	WITHOUT_CLASSIFICATION	1.948384843950009E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999977343435504	WITHOUT_CLASSIFICATION	2.2656564495465235E-6	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999931333286811	WITHOUT_CLASSIFICATION	6.86667131883119E-6	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999527705798689	WITHOUT_CLASSIFICATION	4.722942013116682E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999961415120192	WITHOUT_CLASSIFICATION	3.858487980847196E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999979989610845	WITHOUT_CLASSIFICATION	2.001038915548464E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999400445370301	WITHOUT_CLASSIFICATION	5.99554629699748E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999976903676122	WITHOUT_CLASSIFICATION	2.3096323877429073E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999967245383554	WITHOUT_CLASSIFICATION	3.2754616445628377E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999922864476374	WITHOUT_CLASSIFICATION	7.713552362658448E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999985803774567	WITHOUT_CLASSIFICATION	1.4196225432102417E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999984411450304	WITHOUT_CLASSIFICATION	1.5588549696014047E-6	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999925601325814	WITHOUT_CLASSIFICATION	7.439867418552291E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999966990757677	WITHOUT_CLASSIFICATION	3.300924232229884E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999980516151561	WITHOUT_CLASSIFICATION	1.948384843950009E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999977343435504	WITHOUT_CLASSIFICATION	2.2656564495465235E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999977343435504	WITHOUT_CLASSIFICATION	2.2656564495465235E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999846080152398	WITHOUT_CLASSIFICATION	1.539198476018578E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999773349350507	WITHOUT_CLASSIFICATION	2.266506494930143E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999773349350507	WITHOUT_CLASSIFICATION	2.266506494930143E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999944741803449	WITHOUT_CLASSIFICATION	5.525819655056831E-6	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999946706272289	WITHOUT_CLASSIFICATION	5.329372771046251E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999972174674732	WITHOUT_CLASSIFICATION	2.7825325268258237E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.999983444024089	WITHOUT_CLASSIFICATION	1.6555975911008076E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999971875374689	WITHOUT_CLASSIFICATION	2.8124625310693905E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999978289393786	WITHOUT_CLASSIFICATION	2.1710606213718094E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999977948211659	WITHOUT_CLASSIFICATION	2.205178834052445E-6	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999981007533458	WITHOUT_CLASSIFICATION	1.8992466542519974E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.999997029944269	WITHOUT_CLASSIFICATION	2.9700557310034396E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999970892678987	WITHOUT_CLASSIFICATION	2.9107321013873924E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999979916280274	WITHOUT_CLASSIFICATION	2.0083719727321665E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999977189413344	WITHOUT_CLASSIFICATION	2.2810586656424715E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999954983069843	WITHOUT_CLASSIFICATION	4.501693015756549E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999970323139036	WITHOUT_CLASSIFICATION	2.967686096479294E-6	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999202083518252	WITHOUT_CLASSIFICATION	7.979164817481491E-5	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999983918087354	WITHOUT_CLASSIFICATION	1.6081912645392703E-6	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999898734997993	WITHOUT_CLASSIFICATION	1.0126500200636266E-5	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999990837489211	WITHOUT_CLASSIFICATION	9.162510789532333E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999986980642347	WITHOUT_CLASSIFICATION	1.3019357653322442E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.99999337278663	WITHOUT_CLASSIFICATION	6.627213370021666E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999997931362005	WITHOUT_CLASSIFICATION	2.0686379953702866E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999923822553091	WITHOUT_CLASSIFICATION	7.617744690893229E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999994584695249	WITHOUT_CLASSIFICATION	5.415304751442238E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999492088948	WITHOUT_CLASSIFICATION	5.079110526487863E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999996952022181	WITHOUT_CLASSIFICATION	3.0479778195578433E-7	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999921595243112	WITHOUT_CLASSIFICATION	7.840475688869969E-6	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999658403336437	WITHOUT_CLASSIFICATION	3.4159666356306006E-5	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999750854765865	WITHOUT_CLASSIFICATION	2.4914523413461098E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999908189341444	WITHOUT_CLASSIFICATION	9.181065855584794E-6	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999896089139927	WITHOUT_CLASSIFICATION	1.0391086007383093E-5	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999983989928832	WITHOUT_CLASSIFICATION	1.6010071168491223E-6	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999996579447117	WITHOUT_CLASSIFICATION	3.4205528834742426E-7	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999946566216005	WITHOUT_CLASSIFICATION	5.343378399539895E-6	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999988914010056	WITHOUT_CLASSIFICATION	1.1085989944020186E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999998927101126	WITHOUT_CLASSIFICATION	1.0728988747223914E-7	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999955865392797	WITHOUT_CLASSIFICATION	4.413460720371812E-6	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999994431111184	WITHOUT_CLASSIFICATION	5.568888816771178E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999998627583873	WITHOUT_CLASSIFICATION	1.3724161271556412E-7	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.999999683842227	WITHOUT_CLASSIFICATION	3.161577729007956E-7	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999981356183024	WITHOUT_CLASSIFICATION	1.8643816976296164E-6	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999998467716964	WITHOUT_CLASSIFICATION	1.5322830362916936E-7	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999925113955171	WITHOUT_CLASSIFICATION	7.488604482860962E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999977842116414	WITHOUT_CLASSIFICATION	2.215788358581115E-6	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999998720175465	WITHOUT_CLASSIFICATION	1.2798245352601166E-7	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999998562300391	WITHOUT_CLASSIFICATION	1.4376996095578902E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999993992431787	WITHOUT_CLASSIFICATION	6.007568211902246E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999965202677861	WITHOUT_CLASSIFICATION	3.479732213923686E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999916877907002	WITHOUT_CLASSIFICATION	8.312209299805819E-6	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999874871960619	WITHOUT_CLASSIFICATION	1.2512803938038353E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999065447217589	WITHOUT_CLASSIFICATION	9.345527824115685E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999937120521144	WITHOUT_CLASSIFICATION	6.28794788559714E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999958725010061	WITHOUT_CLASSIFICATION	4.127498993978754E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999990721155427	WITHOUT_CLASSIFICATION	9.278844572274586E-7	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999857758413241	WITHOUT_CLASSIFICATION	1.4224158675831536E-5	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999922862905689	WITHOUT_CLASSIFICATION	7.713709431115777E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999488991035123	WITHOUT_CLASSIFICATION	5.1100896487641746E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999488991035123	WITHOUT_CLASSIFICATION	5.1100896487641746E-5	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999920746094734	WITHOUT_CLASSIFICATION	7.925390526615069E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9998394490793049	WITHOUT_CLASSIFICATION	1.6055092069515496E-4	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999190807086377	WITHOUT_CLASSIFICATION	8.091929136230722E-5	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999979560234099	WITHOUT_CLASSIFICATION	2.0439765899902983E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.6541352172695822	WITHOUT_CLASSIFICATION	0.34586478273041776	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999399085175793	WITHOUT_CLASSIFICATION	6.009148242070758E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9998491586888901	WITHOUT_CLASSIFICATION	1.5084131110990357E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.999931411917612	WITHOUT_CLASSIFICATION	6.858808238804277E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999784971259565	WITHOUT_CLASSIFICATION	2.150287404334048E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999784971259565	WITHOUT_CLASSIFICATION	2.150287404334048E-5	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999941039740702	WITHOUT_CLASSIFICATION	5.896025929835883E-6	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999918499981071	WITHOUT_CLASSIFICATION	8.150001892910223E-6	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999941335340102	WITHOUT_CLASSIFICATION	5.866465989743373E-6	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999968860716233	WITHOUT_CLASSIFICATION	3.113928376632893E-6	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999566225604225	WITHOUT_CLASSIFICATION	4.3377439577512114E-5	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.999984636835772	WITHOUT_CLASSIFICATION	1.5363164228065492E-5	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999479856416003	WITHOUT_CLASSIFICATION	5.201435839974869E-5	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999960100208977	WITHOUT_CLASSIFICATION	3.9899791022885135E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999724709252585	WITHOUT_CLASSIFICATION	2.7529074741466214E-5	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999828156306906	WITHOUT_CLASSIFICATION	1.7184369309429805E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999794991671174	WITHOUT_CLASSIFICATION	2.0500832882612135E-5	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.999924670957735	WITHOUT_CLASSIFICATION	7.532904226494058E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999970832761876	WITHOUT_CLASSIFICATION	2.9167238124018042E-5	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9998341547663553	WITHOUT_CLASSIFICATION	1.6584523364462483E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999378198446591	WITHOUT_CLASSIFICATION	6.218015534085162E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999965202677861	WITHOUT_CLASSIFICATION	3.479732213923686E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999488991035123	WITHOUT_CLASSIFICATION	5.1100896487641746E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999488991035123	WITHOUT_CLASSIFICATION	5.1100896487641746E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9998394490793049	WITHOUT_CLASSIFICATION	1.6055092069515496E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9998211088896939	WITHOUT_CLASSIFICATION	1.7889111030620962E-4	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999967491136523	WITHOUT_CLASSIFICATION	3.2508863477851286E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999466380489891	WITHOUT_CLASSIFICATION	5.336195101084865E-5	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.999957077515012	WITHOUT_CLASSIFICATION	4.292248498810839E-5	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999831471970849	WITHOUT_CLASSIFICATION	1.6852802915072882E-5	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999737225964723	WITHOUT_CLASSIFICATION	2.627740352768702E-5	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999440841019782	WITHOUT_CLASSIFICATION	5.5915898021866256E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999561895980954	WITHOUT_CLASSIFICATION	4.3810401904616117E-5	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9997396719069715	WITHOUT_CLASSIFICATION	2.6032809302844567E-4	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999998116098409	WITHOUT_CLASSIFICATION	1.8839015916093936E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999628328924093	WITHOUT_CLASSIFICATION	3.716710759067559E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999993500346013	WITHOUT_CLASSIFICATION	6.4996539866584E-7	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999977151910496	WITHOUT_CLASSIFICATION	2.28480895029866E-6	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999971073594953	WITHOUT_CLASSIFICATION	2.8926405047331447E-6	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.999991038468491	WITHOUT_CLASSIFICATION	8.961531508887868E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.999915276402932	WITHOUT_CLASSIFICATION	8.472359706797261E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999954662133305	WITHOUT_CLASSIFICATION	4.533786669519344E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999996133223521	WITHOUT_CLASSIFICATION	3.8667764786675077E-7	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999785534681	WITHOUT_CLASSIFICATION	2.1446531873149596E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999991583735952	WITHOUT_CLASSIFICATION	8.416264047980477E-7	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999766461543057	WITHOUT_CLASSIFICATION	2.3353845694302535E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999975076523718	WITHOUT_CLASSIFICATION	2.4923476281686017E-6	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999955038788075	WITHOUT_CLASSIFICATION	4.4961211923893944E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999942164615024	WITHOUT_CLASSIFICATION	5.783538497588275E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999980261326392	WITHOUT_CLASSIFICATION	1.9738673607573123E-6	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999953502913108	WITHOUT_CLASSIFICATION	4.649708689167536E-6	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999996135846321	WITHOUT_CLASSIFICATION	3.864153679595094E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999241842335994	WITHOUT_CLASSIFICATION	7.581576640051039E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999951576751871	WITHOUT_CLASSIFICATION	4.84232481286871E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998722577967895	WITHOUT_CLASSIFICATION	1.277422032105812E-4	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999711354753643	WITHOUT_CLASSIFICATION	2.8864524635657963E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9997936356137719	WITHOUT_CLASSIFICATION	2.0636438622803608E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999952924618462	WITHOUT_CLASSIFICATION	4.7075381538491175E-6	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999955716966682	WITHOUT_CLASSIFICATION	4.428303331899869E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999862712683892	WITHOUT_CLASSIFICATION	1.372873161082221E-5	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999976309162266	WITHOUT_CLASSIFICATION	2.36908377332729E-6	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999854706775793	WITHOUT_CLASSIFICATION	1.4529322420770412E-5	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999998496043678	WITHOUT_CLASSIFICATION	1.503956322173242E-7	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999916359096812	WITHOUT_CLASSIFICATION	8.364090318764285E-6	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999938340778826	WITHOUT_CLASSIFICATION	6.1659221174649095E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999997075121231	WITHOUT_CLASSIFICATION	2.9248787689742555E-7	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999601374197418	WITHOUT_CLASSIFICATION	3.986258025827326E-5	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999872428212148	WITHOUT_CLASSIFICATION	1.2757178785195914E-5	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9999991220723432	WITHOUT_CLASSIFICATION	8.779276566923865E-7	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999942270697735	WITHOUT_CLASSIFICATION	5.7729302266140646E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.999992276092563	WITHOUT_CLASSIFICATION	7.723907437054069E-6	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999652408402735	WITHOUT_CLASSIFICATION	3.4759159726498646E-5	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999992136677007	WITHOUT_CLASSIFICATION	7.86332299278721E-7	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999996898343021	WITHOUT_CLASSIFICATION	3.101656979325873E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999956474740346	WITHOUT_CLASSIFICATION	4.352525965501473E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999934497772014	WITHOUT_CLASSIFICATION	6.550222798618164E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999900320238225	WITHOUT_CLASSIFICATION	9.967976177540179E-6	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999854702371237	WITHOUT_CLASSIFICATION	1.452976287644784E-5	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999917121880311	WITHOUT_CLASSIFICATION	8.287811969015928E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999963866200057	WITHOUT_CLASSIFICATION	3.6133799942473125E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999830137644212	WITHOUT_CLASSIFICATION	1.6986235578757487E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999965806071521	WITHOUT_CLASSIFICATION	3.419392847895113E-6	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999759862710078	WITHOUT_CLASSIFICATION	2.4013728992169366E-5	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999930742824974	WITHOUT_CLASSIFICATION	6.925717502598256E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999646409157756	WITHOUT_CLASSIFICATION	3.5359084224316985E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999646409157756	WITHOUT_CLASSIFICATION	3.5359084224316985E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999103990684304	WITHOUT_CLASSIFICATION	8.960093156970158E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999103990684304	WITHOUT_CLASSIFICATION	8.960093156970158E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999988044414414	WITHOUT_CLASSIFICATION	1.195558558565355E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999988044414414	WITHOUT_CLASSIFICATION	1.195558558565355E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999661358644647	WITHOUT_CLASSIFICATION	3.3864135535220335E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999732642415928	WITHOUT_CLASSIFICATION	2.6735758407168688E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999732642415928	WITHOUT_CLASSIFICATION	2.6735758407168688E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999864879328565	WITHOUT_CLASSIFICATION	1.351206714361269E-5	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999905120008594	WITHOUT_CLASSIFICATION	9.487999140595913E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999406920069496	WITHOUT_CLASSIFICATION	5.9307993050369874E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999406920069496	WITHOUT_CLASSIFICATION	5.9307993050369874E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999885484481652	WITHOUT_CLASSIFICATION	1.1451551834785945E-5	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999688050375863	WITHOUT_CLASSIFICATION	3.1194962413775755E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999732642415928	WITHOUT_CLASSIFICATION	2.6735758407168688E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999406920069496	WITHOUT_CLASSIFICATION	5.9307993050369874E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999914016813318	WITHOUT_CLASSIFICATION	8.598318668091255E-6	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999898283643036	WITHOUT_CLASSIFICATION	1.0171635696509961E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998857689341064	WITHOUT_CLASSIFICATION	1.1423106589368193E-4	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999990207707512	WITHOUT_CLASSIFICATION	9.792292488196273E-7	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999919018765117	WITHOUT_CLASSIFICATION	8.098123488436557E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999993181302104	WITHOUT_CLASSIFICATION	6.818697897013667E-7	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999987257580722	WITHOUT_CLASSIFICATION	1.274241927712714E-6	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999990483882406	WITHOUT_CLASSIFICATION	9.516117593601298E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999961976238014	WITHOUT_CLASSIFICATION	3.802376198494113E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999770213004995	WITHOUT_CLASSIFICATION	2.2978699500592553E-5	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999923966497135	WITHOUT_CLASSIFICATION	7.6033502864903095E-6	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999969762729437	WITHOUT_CLASSIFICATION	3.023727056335214E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999968865169854	WITHOUT_CLASSIFICATION	3.1134830145584627E-6	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999980303062822	WITHOUT_CLASSIFICATION	1.9696937179122375E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.999992133830828	WITHOUT_CLASSIFICATION	7.866169172015586E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999882239187342	WITHOUT_CLASSIFICATION	1.1776081265679968E-5	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999968433437267	WITHOUT_CLASSIFICATION	3.1566562733274526E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9999687626683988	WITHOUT_CLASSIFICATION	3.123733160117717E-5	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999984878816826	WITHOUT_CLASSIFICATION	1.5121183175289047E-6	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999864381888165	WITHOUT_CLASSIFICATION	1.3561811183462664E-5	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999976425299896	WITHOUT_CLASSIFICATION	2.3574700105068045E-6	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999760992261219	WITHOUT_CLASSIFICATION	2.390077387819553E-5	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999890622852033	WITHOUT_CLASSIFICATION	1.0937714796665822E-5	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999953183229574	WITHOUT_CLASSIFICATION	4.681677042567103E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999963581954737	WITHOUT_CLASSIFICATION	3.6418045262372206E-6	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999941669202658	WITHOUT_CLASSIFICATION	5.833079734190511E-6	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999971310845817	WITHOUT_CLASSIFICATION	2.868915418290918E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999970887087059	WITHOUT_CLASSIFICATION	2.9112912942044237E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999811983840091	WITHOUT_CLASSIFICATION	1.8801615990859952E-5	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999912373962144	WITHOUT_CLASSIFICATION	8.762603785536734E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998857689341064	WITHOUT_CLASSIFICATION	1.1423106589368193E-4	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999931435584127	WITHOUT_CLASSIFICATION	6.856441587200305E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.999992133830828	WITHOUT_CLASSIFICATION	7.866169172015586E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999998454608651	WITHOUT_CLASSIFICATION	1.5453913497589616E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999953183229574	WITHOUT_CLASSIFICATION	4.681677042567103E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999987860274965	WITHOUT_CLASSIFICATION	1.2139725034887234E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999989628414366	WITHOUT_CLASSIFICATION	1.0371585633874108E-6	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999896692582088	WITHOUT_CLASSIFICATION	1.0330741791222773E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999622710625138	WITHOUT_CLASSIFICATION	3.77289374862441E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999622710625138	WITHOUT_CLASSIFICATION	3.77289374862441E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999880932938646	WITHOUT_CLASSIFICATION	1.1906706135451812E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.999999905245662	WITHOUT_CLASSIFICATION	9.475433813500706E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999996511086704	WITHOUT_CLASSIFICATION	3.488913296186827E-7	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999983212937088	WITHOUT_CLASSIFICATION	1.6787062911475794E-6	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999941198083911	WITHOUT_CLASSIFICATION	5.880191608928587E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.999998106780114	WITHOUT_CLASSIFICATION	1.8932198860732648E-6	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999844770799459	WITHOUT_CLASSIFICATION	1.552292005408836E-5	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999970777773273	WITHOUT_CLASSIFICATION	2.9222226726848603E-6	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999976318491123	WITHOUT_CLASSIFICATION	2.368150887804245E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999982751541143	WITHOUT_CLASSIFICATION	1.7248458857383142E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999950472818604	WITHOUT_CLASSIFICATION	4.952718139576259E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.999954131572036	WITHOUT_CLASSIFICATION	4.5868427964074744E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999939784195863	WITHOUT_CLASSIFICATION	6.021580413758356E-6	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999937659717709	WITHOUT_CLASSIFICATION	6.234028229025313E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999936387943141	WITHOUT_CLASSIFICATION	6.361205685814603E-6	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9997721540639121	WITHOUT_CLASSIFICATION	2.2784593608797906E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999935390733555	WITHOUT_CLASSIFICATION	6.4609266444841724E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999734385558207	WITHOUT_CLASSIFICATION	2.6561444179333632E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999995366174664	WITHOUT_CLASSIFICATION	4.6338253350594584E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999590303822045	WITHOUT_CLASSIFICATION	4.096961779566244E-5	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999991936473767	WITHOUT_CLASSIFICATION	8.063526233761567E-7	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999997435824551	WITHOUT_CLASSIFICATION	2.5641754480699063E-7	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9998778287200994	WITHOUT_CLASSIFICATION	1.2217127990051254E-4	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999990704812001	WITHOUT_CLASSIFICATION	9.295187997786123E-7	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.999999392035599	WITHOUT_CLASSIFICATION	6.079644010848327E-7	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999995102568559	WITHOUT_CLASSIFICATION	4.897431440747871E-7	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999986852062147	WITHOUT_CLASSIFICATION	1.31479378529872E-6	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999983791542908	WITHOUT_CLASSIFICATION	1.6208457091603595E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999981784617477	WITHOUT_CLASSIFICATION	1.8215382522903831E-6	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999942856559371	WITHOUT_CLASSIFICATION	5.7143440629124735E-6	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999994058887856	WITHOUT_CLASSIFICATION	5.941112145436879E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.999998464551284	WITHOUT_CLASSIFICATION	1.5354487159734687E-6	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999937687834717	WITHOUT_CLASSIFICATION	6.231216528435406E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999274580314276	WITHOUT_CLASSIFICATION	7.254196857237276E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999947214766143	WITHOUT_CLASSIFICATION	5.278523385656711E-6	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999994592833801	WITHOUT_CLASSIFICATION	5.407166199517887E-7	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999953848690231	WITHOUT_CLASSIFICATION	4.615130977039199E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999980565232843	WITHOUT_CLASSIFICATION	1.943476715606855E-6	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999990049366648	WITHOUT_CLASSIFICATION	9.950633352542906E-7	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999878427919917	WITHOUT_CLASSIFICATION	1.2157208008267948E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999989400663476	WITHOUT_CLASSIFICATION	1.0599336524776022E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999961560409335	WITHOUT_CLASSIFICATION	3.843959066483414E-6	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999995921612377	WITHOUT_CLASSIFICATION	4.078387623688794E-7	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999864250569847	WITHOUT_CLASSIFICATION	1.3574943015323316E-5	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999983455211781	WITHOUT_CLASSIFICATION	1.6544788218886707E-6	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999999290332635	WITHOUT_CLASSIFICATION	7.096673652125719E-8	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999736075796708	WITHOUT_CLASSIFICATION	2.6392420329235526E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999604276955698	WITHOUT_CLASSIFICATION	3.9572304430155414E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999988044414414	WITHOUT_CLASSIFICATION	1.195558558565355E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9988254636474969	WITHOUT_CLASSIFICATION	0.0011745363525030566	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999943374324745	WITHOUT_CLASSIFICATION	5.6625675255533095E-6	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999997049936963	WITHOUT_CLASSIFICATION	2.9500630364351055E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999969454935821	WITHOUT_CLASSIFICATION	3.0545064180294576E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999984688377822	WITHOUT_CLASSIFICATION	1.5311622177296953E-6	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999986657128512	WITHOUT_CLASSIFICATION	1.3342871488194528E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999994815292378	WITHOUT_CLASSIFICATION	5.184707623012968E-7	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.99999954142506	WITHOUT_CLASSIFICATION	4.585749399649805E-7	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999953040801557	WITHOUT_CLASSIFICATION	4.6959198442589056E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999681645378253	WITHOUT_CLASSIFICATION	3.1835462174556936E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999834906220235	WITHOUT_CLASSIFICATION	1.6509377976524958E-5	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.999988820602503	WITHOUT_CLASSIFICATION	1.1179397496885644E-5	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999809915454233	WITHOUT_CLASSIFICATION	1.9008454576740506E-5	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.999951962798891	WITHOUT_CLASSIFICATION	4.8037201108988425E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999458026884386	WITHOUT_CLASSIFICATION	5.419731156138729E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999410497798772	WITHOUT_CLASSIFICATION	5.895022012283294E-5	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999972251913275	WITHOUT_CLASSIFICATION	2.7748086724509474E-6	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999889407074176	WITHOUT_CLASSIFICATION	1.105929258234042E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999966579496126	WITHOUT_CLASSIFICATION	3.342050387463828E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999959910460806	WITHOUT_CLASSIFICATION	4.008953919302308E-6	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999897682015952	WITHOUT_CLASSIFICATION	1.0231798404795974E-5	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999774133648859	WITHOUT_CLASSIFICATION	2.2586635114161207E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.99999865615766	WITHOUT_CLASSIFICATION	1.343842339932528E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999967044641983	WITHOUT_CLASSIFICATION	3.295535801599528E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999988025980076	WITHOUT_CLASSIFICATION	1.1974019924873948E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999940481606332	WITHOUT_CLASSIFICATION	5.9518393667821276E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999996450661303	WITHOUT_CLASSIFICATION	3.5493386978954887E-7	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999991107577765	WITHOUT_CLASSIFICATION	8.89242223552386E-7	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.999999785427961	WITHOUT_CLASSIFICATION	2.1457203915788187E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999817851431427	WITHOUT_CLASSIFICATION	1.8214856857215835E-5	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999942164615024	WITHOUT_CLASSIFICATION	5.783538497588275E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999988044414414	WITHOUT_CLASSIFICATION	1.195558558565355E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999661358644647	WITHOUT_CLASSIFICATION	3.3864135535220335E-5	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999734385558207	WITHOUT_CLASSIFICATION	2.6561444179333632E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999979318263917	WITHOUT_CLASSIFICATION	2.068173608220014E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9988254636474969	WITHOUT_CLASSIFICATION	0.0011745363525030566	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999972379990573	WITHOUT_CLASSIFICATION	2.7620009426882844E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999961362284663	WITHOUT_CLASSIFICATION	3.863771533691412E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.999981499602758	WITHOUT_CLASSIFICATION	1.8500397241990593E-5	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999690903511308	WITHOUT_CLASSIFICATION	3.090964886917108E-5	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999673780601472	WITHOUT_CLASSIFICATION	3.262193985271619E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999939808625466	WITHOUT_CLASSIFICATION	6.019137453422889E-6	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999986918151155	WITHOUT_CLASSIFICATION	1.3081848845743263E-6	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999952772722612	WITHOUT_CLASSIFICATION	4.722727738841186E-6	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999937336343163	WITHOUT_CLASSIFICATION	6.2663656837190174E-6	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999909213429241	WITHOUT_CLASSIFICATION	9.078657075976312E-6	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999826086465691	WITHOUT_CLASSIFICATION	1.739135343095728E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999613101776588	WITHOUT_CLASSIFICATION	3.8689822341133714E-5	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9998948290781005	WITHOUT_CLASSIFICATION	1.0517092189963699E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999842172340647	WITHOUT_CLASSIFICATION	1.5782765935299688E-5	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9995613433756297	WITHOUT_CLASSIFICATION	4.386566243702361E-4	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999693547671905	WITHOUT_CLASSIFICATION	3.0645232809471275E-5	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999534261128404	WITHOUT_CLASSIFICATION	4.6573887159485315E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999371430627856	WITHOUT_CLASSIFICATION	6.285693721443933E-5	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999949838062285	WITHOUT_CLASSIFICATION	5.016193771466109E-6	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999857123072362	WITHOUT_CLASSIFICATION	1.428769276384926E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999902561657209	WITHOUT_CLASSIFICATION	9.743834279018734E-6	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999564704057347	WITHOUT_CLASSIFICATION	4.352959426532233E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999945250531025	WITHOUT_CLASSIFICATION	5.474946897425102E-6	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999833842420934	WITHOUT_CLASSIFICATION	1.6615757906528596E-5	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999989808973646	WITHOUT_CLASSIFICATION	1.0191026354325349E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999877852839919	WITHOUT_CLASSIFICATION	1.2214716008060225E-5	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999974143520087	WITHOUT_CLASSIFICATION	2.5856479912666913E-6	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999893062133067	WITHOUT_CLASSIFICATION	1.0693786693148547E-5	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999862891743955	WITHOUT_CLASSIFICATION	1.371082560446911E-5	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999965105222605	WITHOUT_CLASSIFICATION	3.489477739560388E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999912938670458	WITHOUT_CLASSIFICATION	8.70613295420624E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999988044414414	WITHOUT_CLASSIFICATION	1.195558558565355E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999681645378253	WITHOUT_CLASSIFICATION	3.1835462174556936E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999834906220235	WITHOUT_CLASSIFICATION	1.6509377976524958E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999410497798772	WITHOUT_CLASSIFICATION	5.895022012283294E-5	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999972251913275	WITHOUT_CLASSIFICATION	2.7748086724509474E-6	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999889407074176	WITHOUT_CLASSIFICATION	1.105929258234042E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999966579496126	WITHOUT_CLASSIFICATION	3.342050387463828E-6	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999959910460806	WITHOUT_CLASSIFICATION	4.008953919302308E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999989132238656	WITHOUT_CLASSIFICATION	1.0867761344314662E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.99999865615766	WITHOUT_CLASSIFICATION	1.343842339932528E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999997950799789	WITHOUT_CLASSIFICATION	2.0492002111529337E-7	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9994233419033693	WITHOUT_CLASSIFICATION	5.766580966305873E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999833779001046	WITHOUT_CLASSIFICATION	1.662209989536603E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999999111104908	WITHOUT_CLASSIFICATION	8.888950918413771E-8	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999567928443	WITHOUT_CLASSIFICATION	4.320715571116249E-8	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999976005200195	WITHOUT_CLASSIFICATION	2.3994799806010773E-6	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.999989665734763	WITHOUT_CLASSIFICATION	1.0334265237073161E-5	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.999989999491252	WITHOUT_CLASSIFICATION	1.0000508748005706E-5	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999120225845604	WITHOUT_CLASSIFICATION	8.797741543966027E-5	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999759557479189	WITHOUT_CLASSIFICATION	2.4044252081067844E-5	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.999979309557437	WITHOUT_CLASSIFICATION	2.0690442563029128E-5	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999979672556117	WITHOUT_CLASSIFICATION	2.0327443881593266E-6	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999895172429029	WITHOUT_CLASSIFICATION	1.048275709722479E-5	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999990146381192	WITHOUT_CLASSIFICATION	9.853618807862934E-7	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999940557328423	WITHOUT_CLASSIFICATION	5.9442671577488984E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999940557328423	WITHOUT_CLASSIFICATION	5.9442671577488984E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999998677405379	WITHOUT_CLASSIFICATION	1.3225946211501647E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999989207558164	WITHOUT_CLASSIFICATION	1.0792441835797556E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999989207558164	WITHOUT_CLASSIFICATION	1.0792441835797556E-6	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999282304582174	WITHOUT_CLASSIFICATION	7.176954178251311E-5	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999780970246582	WITHOUT_CLASSIFICATION	2.190297534180948E-5	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.999998983286606	WITHOUT_CLASSIFICATION	1.0167133939446373E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999912938670458	WITHOUT_CLASSIFICATION	8.70613295420624E-6	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997320779424153	WITHOUT_CLASSIFICATION	2.6792205758474906E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9996171923183003	WITHOUT_CLASSIFICATION	3.828076816996593E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999987289290583	WITHOUT_CLASSIFICATION	1.2710709417457646E-6	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.999999594323801	WITHOUT_CLASSIFICATION	4.0567619894928247E-7	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999956157173882	WITHOUT_CLASSIFICATION	4.384282611884826E-6	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999920493977993	WITHOUT_CLASSIFICATION	7.950602200740495E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999611510775245	WITHOUT_CLASSIFICATION	3.884892247540611E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999898548728066	WITHOUT_CLASSIFICATION	1.0145127193500661E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999772390855093	WITHOUT_CLASSIFICATION	2.2760914490665064E-5	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999922231294629	WITHOUT_CLASSIFICATION	7.776870537178796E-6	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9999691806781144	WITHOUT_CLASSIFICATION	3.081932188563734E-5	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999957565782418	WITHOUT_CLASSIFICATION	4.2434217581303425E-6	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999153113042495	WITHOUT_CLASSIFICATION	8.468869575059364E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999827857820034	WITHOUT_CLASSIFICATION	1.7214217996605476E-5	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999974894831835	WITHOUT_CLASSIFICATION	2.510516816523516E-6	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999986450436299	WITHOUT_CLASSIFICATION	1.3549563700541E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999501274991683	WITHOUT_CLASSIFICATION	4.987250083161884E-5	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999950445402053	WITHOUT_CLASSIFICATION	4.955459794751754E-6	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999975378066581	WITHOUT_CLASSIFICATION	2.462193341846134E-6	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.999998047954697	WITHOUT_CLASSIFICATION	1.9520453029169177E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999980989137811	WITHOUT_CLASSIFICATION	1.9010862188775184E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999937974566168	WITHOUT_CLASSIFICATION	6.202543383279132E-6	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999970033537199	WITHOUT_CLASSIFICATION	2.9966462800618465E-6	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999985866831511	WITHOUT_CLASSIFICATION	1.4133168489632857E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999922327075846	WITHOUT_CLASSIFICATION	7.767292415357968E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999938309232339	WITHOUT_CLASSIFICATION	6.16907676604657E-6	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999857467058756	WITHOUT_CLASSIFICATION	1.4253294124509183E-5	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999406739961141	WITHOUT_CLASSIFICATION	5.932600388591217E-5	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999926780059788	WITHOUT_CLASSIFICATION	7.321994021169145E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999994754402546	WITHOUT_CLASSIFICATION	5.245597454572595E-7	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.99999974545628	WITHOUT_CLASSIFICATION	2.5454372000715515E-7	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.999999789962217	WITHOUT_CLASSIFICATION	2.100377829973634E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999974854308897	WITHOUT_CLASSIFICATION	2.514569110179263E-6	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999995383810598	WITHOUT_CLASSIFICATION	4.6161894025231666E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999158286166	WITHOUT_CLASSIFICATION	8.417138343427527E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999930835339809	WITHOUT_CLASSIFICATION	6.916466019075003E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999914941500434	WITHOUT_CLASSIFICATION	8.50584995662731E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999974854308897	WITHOUT_CLASSIFICATION	2.514569110179263E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999976192959923	WITHOUT_CLASSIFICATION	2.3807040078247384E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999998496333364	WITHOUT_CLASSIFICATION	1.503666635959765E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999998496333364	WITHOUT_CLASSIFICATION	1.503666635959765E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999998496333364	WITHOUT_CLASSIFICATION	1.503666635959765E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999995291187713	WITHOUT_CLASSIFICATION	4.708812286693446E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999995291187713	WITHOUT_CLASSIFICATION	4.708812286693446E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999995291187713	WITHOUT_CLASSIFICATION	4.708812286693446E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999993774969061	WITHOUT_CLASSIFICATION	6.225030938884216E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999993774969061	WITHOUT_CLASSIFICATION	6.225030938884216E-7	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.999999466965976	WITHOUT_CLASSIFICATION	5.330340239683148E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9998135078690504	WITHOUT_CLASSIFICATION	1.864921309495155E-4	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999990842223448	WITHOUT_CLASSIFICATION	9.157776551724087E-7	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999233849766862	WITHOUT_CLASSIFICATION	7.661502331372802E-5	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999986857947161	WITHOUT_CLASSIFICATION	1.3142052839820649E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999897898708369	WITHOUT_CLASSIFICATION	1.0210129163158925E-5	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999955435013456	WITHOUT_CLASSIFICATION	4.456498654543305E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999989551731295	WITHOUT_CLASSIFICATION	1.0448268704785086E-6	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999906485671674	WITHOUT_CLASSIFICATION	9.351432832676268E-6	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999975309159002	WITHOUT_CLASSIFICATION	2.4690840998608928E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999952657991321	WITHOUT_CLASSIFICATION	4.734200867870139E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999988781411078	WITHOUT_CLASSIFICATION	1.1218588922553025E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.999997900250705	WITHOUT_CLASSIFICATION	2.099749294972921E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999970548895469	WITHOUT_CLASSIFICATION	2.945110453099076E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999908189341444	WITHOUT_CLASSIFICATION	9.181065855584794E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999958715927478	WITHOUT_CLASSIFICATION	4.128407252209255E-6	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.999992776420443	WITHOUT_CLASSIFICATION	7.223579556926249E-6	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.999995194709763	WITHOUT_CLASSIFICATION	4.805290237034791E-6	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999981996725779	WITHOUT_CLASSIFICATION	1.8003274220772476E-6	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999924301044715	WITHOUT_CLASSIFICATION	7.569895528434025E-6	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999953493366834	WITHOUT_CLASSIFICATION	4.6506633165553365E-6	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999991033538218	WITHOUT_CLASSIFICATION	8.966461781379861E-7	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9997996272761364	WITHOUT_CLASSIFICATION	2.003727238636021E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999908205087904	WITHOUT_CLASSIFICATION	9.179491209572742E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999976265944602	WITHOUT_CLASSIFICATION	2.373405539784969E-6	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999973382887062	WITHOUT_CLASSIFICATION	2.6617112938222073E-6	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999890979611555	WITHOUT_CLASSIFICATION	1.0902038844447739E-5	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999706236965997	WITHOUT_CLASSIFICATION	2.937630340032101E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999944411824437	WITHOUT_CLASSIFICATION	5.5588175562587895E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999181062746416	WITHOUT_CLASSIFICATION	8.189372535847939E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999937860330234	WITHOUT_CLASSIFICATION	6.2139669766964785E-6	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.999997020371907	WITHOUT_CLASSIFICATION	2.9796280931205806E-6	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999716085746069	WITHOUT_CLASSIFICATION	2.839142539310261E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.999512246844393	WITHOUT_CLASSIFICATION	4.877531556070451E-4	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999385203108151	WITHOUT_CLASSIFICATION	6.147968918494076E-5	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9999748952398647	WITHOUT_CLASSIFICATION	2.5104760135357994E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999181062746416	WITHOUT_CLASSIFICATION	8.189372535847939E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999892667375159	WITHOUT_CLASSIFICATION	1.0733262484156718E-5	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999888744584691	WITHOUT_CLASSIFICATION	1.1125541530986063E-5	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999864408453095	WITHOUT_CLASSIFICATION	1.3559154690533988E-5	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999979670128912	WITHOUT_CLASSIFICATION	2.0329871087603723E-6	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999827411267257	WITHOUT_CLASSIFICATION	1.7258873274275592E-5	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999969739203043	WITHOUT_CLASSIFICATION	3.0260796955700183E-6	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999954529129748	WITHOUT_CLASSIFICATION	4.547087025205255E-6	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9997730722734013	WITHOUT_CLASSIFICATION	2.2692772659869633E-4	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999981982199434	WITHOUT_CLASSIFICATION	1.8017800566328377E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999931053248422	WITHOUT_CLASSIFICATION	6.89467515780039E-6	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.999994330672641	WITHOUT_CLASSIFICATION	5.669327359014482E-6	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9998910071893715	WITHOUT_CLASSIFICATION	1.0899281062846498E-4	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999991391978255	WITHOUT_CLASSIFICATION	8.608021745712034E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999892667375159	WITHOUT_CLASSIFICATION	1.0733262484156718E-5	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999641328044278	WITHOUT_CLASSIFICATION	3.586719557226262E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999697043806083	WITHOUT_CLASSIFICATION	3.029561939171992E-5	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999911506578655	WITHOUT_CLASSIFICATION	8.849342134566867E-6	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9999997479482896	WITHOUT_CLASSIFICATION	2.520517104013948E-7	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999665721882137	WITHOUT_CLASSIFICATION	3.342781178630303E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999922702661188	WITHOUT_CLASSIFICATION	7.729733881261996E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999970832761876	WITHOUT_CLASSIFICATION	2.9167238124018042E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999542124744946	WITHOUT_CLASSIFICATION	4.578752550540521E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999984498593307	WITHOUT_CLASSIFICATION	1.5501406693663767E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999827073013564	WITHOUT_CLASSIFICATION	1.729269864356376E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999918010057023	WITHOUT_CLASSIFICATION	8.198994297668395E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999990691561375	WITHOUT_CLASSIFICATION	9.308438625016238E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999904613619643	WITHOUT_CLASSIFICATION	9.538638035649512E-6	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999927022578645	WITHOUT_CLASSIFICATION	7.297742135487708E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999800051897587	WITHOUT_CLASSIFICATION	1.999481024133046E-5	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999909030313596	WITHOUT_CLASSIFICATION	9.096968640381332E-6	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999881705214684	WITHOUT_CLASSIFICATION	1.1829478531652009E-5	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999938866427437	WITHOUT_CLASSIFICATION	6.113357256279693E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9995563183836657	WITHOUT_CLASSIFICATION	4.4368161633429477E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999955866839959	WITHOUT_CLASSIFICATION	4.413316004126516E-6	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999947439622411	WITHOUT_CLASSIFICATION	5.256037758853649E-6	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999899711095315	WITHOUT_CLASSIFICATION	1.0028890468434433E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999953835853267	WITHOUT_CLASSIFICATION	4.616414673265394E-6	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999912851364401	WITHOUT_CLASSIFICATION	8.714863559858203E-6	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999059570770331	WITHOUT_CLASSIFICATION	9.404292296685982E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999907602005926	WITHOUT_CLASSIFICATION	9.239799407302858E-6	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9999918153893201	WITHOUT_CLASSIFICATION	8.184610679853203E-6	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999879045302266	WITHOUT_CLASSIFICATION	1.2095469773356952E-5	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999738021024058	WITHOUT_CLASSIFICATION	2.6197897594249558E-5	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999992697530474	WITHOUT_CLASSIFICATION	7.302469525073622E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999987713263152	WITHOUT_CLASSIFICATION	1.228673684821315E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999972515717622	WITHOUT_CLASSIFICATION	2.748428237824799E-6	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999984258907231	WITHOUT_CLASSIFICATION	1.5741092769099655E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999887885407672	WITHOUT_CLASSIFICATION	1.1211459232835451E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999983136294686	WITHOUT_CLASSIFICATION	1.6863705314326028E-6	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999941213656591	WITHOUT_CLASSIFICATION	5.8786343409110004E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999987713263152	WITHOUT_CLASSIFICATION	1.228673684821315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999906277772658	WITHOUT_CLASSIFICATION	9.37222273411655E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999813069698503	WITHOUT_CLASSIFICATION	1.869303014969431E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999913593762074	WITHOUT_CLASSIFICATION	8.640623792574095E-6	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999877123957825	WITHOUT_CLASSIFICATION	1.228760421744216E-5	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999822267478752	WITHOUT_CLASSIFICATION	1.777325212477989E-5	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.999991209794055	WITHOUT_CLASSIFICATION	8.79020594512507E-6	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999846182335738	WITHOUT_CLASSIFICATION	1.538176642617816E-5	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9989965782268603	WITHOUT_CLASSIFICATION	0.001003421773139789	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999956975287845	WITHOUT_CLASSIFICATION	4.302471215497099E-6	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999981889791049	WITHOUT_CLASSIFICATION	1.8110208950719853E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999959390712861	WITHOUT_CLASSIFICATION	4.060928713784906E-6	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999884575563152	WITHOUT_CLASSIFICATION	1.1542443684931269E-5	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999961452908845	WITHOUT_CLASSIFICATION	3.85470911539997E-6	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999269842721	WITHOUT_CLASSIFICATION	7.301572784043232E-8	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999726408915647	WITHOUT_CLASSIFICATION	2.7359108435349336E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999957504416633	WITHOUT_CLASSIFICATION	4.249558336670919E-6	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999976076462719	WITHOUT_CLASSIFICATION	2.3923537281078777E-6	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999965014645767	WITHOUT_CLASSIFICATION	3.498535423170439E-6	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.999956961758113	WITHOUT_CLASSIFICATION	4.3038241887046394E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999966251633428	WITHOUT_CLASSIFICATION	3.374836657323172E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.999997900250705	WITHOUT_CLASSIFICATION	2.099749294972921E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.999997900250705	WITHOUT_CLASSIFICATION	2.099749294972921E-6	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999359867306188	WITHOUT_CLASSIFICATION	6.401326938117208E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999970548895469	WITHOUT_CLASSIFICATION	2.945110453099076E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999957105690527	WITHOUT_CLASSIFICATION	4.289430947297146E-6	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999998535651069	WITHOUT_CLASSIFICATION	1.4643489305137303E-7	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999856713519317	WITHOUT_CLASSIFICATION	1.4328648068323175E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999914961462272	WITHOUT_CLASSIFICATION	8.503853772834858E-6	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9999555634295513	WITHOUT_CLASSIFICATION	4.443657044868376E-5	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999964427557397	WITHOUT_CLASSIFICATION	3.557244260171223E-6	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999970257782093	WITHOUT_CLASSIFICATION	2.974221790768881E-6	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999795785562982	WITHOUT_CLASSIFICATION	2.0421443701884675E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999996966555155	WITHOUT_CLASSIFICATION	3.033444845257838E-7	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999999796883166	WITHOUT_CLASSIFICATION	2.031168344296802E-8	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999995566425386	WITHOUT_CLASSIFICATION	4.433574613194224E-7	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999989854541635	WITHOUT_CLASSIFICATION	1.0145458364467904E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999968912395545	WITHOUT_CLASSIFICATION	3.1087604454989014E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999952207972648	WITHOUT_CLASSIFICATION	4.779202735317818E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.99997578570548	WITHOUT_CLASSIFICATION	2.4214294520046103E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999778709001135	WITHOUT_CLASSIFICATION	2.2129099886486826E-5	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999991880447603	WITHOUT_CLASSIFICATION	8.119552396239024E-7	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999965479191713	WITHOUT_CLASSIFICATION	3.4520808287995583E-6	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999823501138084	WITHOUT_CLASSIFICATION	1.7649886191669722E-5	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999969442512548	WITHOUT_CLASSIFICATION	3.0557487452076543E-6	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999999305669864	WITHOUT_CLASSIFICATION	6.943301356493866E-8	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.999996830204967	WITHOUT_CLASSIFICATION	3.169795032922076E-6	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999987910064196	WITHOUT_CLASSIFICATION	1.208993580378941E-6	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999361745802168	WITHOUT_CLASSIFICATION	6.382541978324932E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999900635339616	WITHOUT_CLASSIFICATION	9.936466038444514E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999998404164427	WITHOUT_CLASSIFICATION	1.595835572805439E-7	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999953354348953	WITHOUT_CLASSIFICATION	4.664565104744155E-6	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9999825077576482	WITHOUT_CLASSIFICATION	1.7492242351831184E-5	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999398786555647	WITHOUT_CLASSIFICATION	6.012134443543287E-5	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999920767863908	WITHOUT_CLASSIFICATION	7.923213609156664E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999647800140528	WITHOUT_CLASSIFICATION	3.521998594722232E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999955167830812	WITHOUT_CLASSIFICATION	4.483216918745284E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999919929920414	WITHOUT_CLASSIFICATION	8.007007958485365E-6	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999996072589389	WITHOUT_CLASSIFICATION	3.9274106119918815E-7	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999927571433541	WITHOUT_CLASSIFICATION	7.24285664589446E-6	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999997787977363	WITHOUT_CLASSIFICATION	2.2120226369021385E-7	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999974734088627	WITHOUT_CLASSIFICATION	2.5265911373520146E-6	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999989743098736	WITHOUT_CLASSIFICATION	1.025690126381116E-6	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.996193059730603	WITHOUT_CLASSIFICATION	0.0038069402693970147	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999886932280907	WITHOUT_CLASSIFICATION	1.1306771909324806E-5	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999956998031935	WITHOUT_CLASSIFICATION	4.3001968065773076E-6	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.99988739390023	WITHOUT_CLASSIFICATION	1.1260609977010049E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999489013713118	WITHOUT_CLASSIFICATION	5.109862868826644E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999942416081892	WITHOUT_CLASSIFICATION	5.758391810810705E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999678204848662	WITHOUT_CLASSIFICATION	3.2179515133847327E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999942300973732	WITHOUT_CLASSIFICATION	5.76990262679361E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999445114656471	WITHOUT_CLASSIFICATION	5.548853435288354E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999972848892431	WITHOUT_CLASSIFICATION	2.7151107569436753E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999966251633428	WITHOUT_CLASSIFICATION	3.374836657323172E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999955435013456	WITHOUT_CLASSIFICATION	4.456498654543305E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9999822498233566	WITHOUT_CLASSIFICATION	1.7750176643367513E-5	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.999990258487665	WITHOUT_CLASSIFICATION	9.741512335064874E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999990270896745	WITHOUT_CLASSIFICATION	9.729103255508712E-7	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999929073359168	WITHOUT_CLASSIFICATION	7.092664083156622E-6	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999956549394491	WITHOUT_CLASSIFICATION	4.345060550915551E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.999993649598416	WITHOUT_CLASSIFICATION	6.350401584057176E-6	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999992658104506	WITHOUT_CLASSIFICATION	7.341895494579129E-7	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9999796906271113	WITHOUT_CLASSIFICATION	2.0309372888708123E-5	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999981370910463	WITHOUT_CLASSIFICATION	1.8629089537320956E-6	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999728395449137	WITHOUT_CLASSIFICATION	2.716045508632038E-5	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.999999370380347	WITHOUT_CLASSIFICATION	6.296196530593894E-7	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999922851784763	WITHOUT_CLASSIFICATION	7.714821523799342E-6	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999998953541541	WITHOUT_CLASSIFICATION	1.0464584583205904E-7	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999800417283038	WITHOUT_CLASSIFICATION	1.9958271696137208E-5	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999910768498556	WITHOUT_CLASSIFICATION	8.923150144449336E-6	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999993375488246	WITHOUT_CLASSIFICATION	6.624511753792388E-7	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999990011859923	WITHOUT_CLASSIFICATION	9.98814007704202E-7	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999992628552781	WITHOUT_CLASSIFICATION	7.371447219559972E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999837001590052	WITHOUT_CLASSIFICATION	1.6299840994787784E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999922021627975	WITHOUT_CLASSIFICATION	7.797837202398256E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999922021627975	WITHOUT_CLASSIFICATION	7.797837202398256E-6	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999995303443332	WITHOUT_CLASSIFICATION	4.696556666992754E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999832220376293	WITHOUT_CLASSIFICATION	1.6777962370704837E-5	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999482701879485	WITHOUT_CLASSIFICATION	5.1729812051528375E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999998224680934	WITHOUT_CLASSIFICATION	1.7753190663050756E-7	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999997341984984	WITHOUT_CLASSIFICATION	2.6580150155562985E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999970421510362	WITHOUT_CLASSIFICATION	2.9578489637198214E-6	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999988823397856	WITHOUT_CLASSIFICATION	1.1176602143316799E-6	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999975468406411	WITHOUT_CLASSIFICATION	2.453159358918138E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9998973890285839	WITHOUT_CLASSIFICATION	1.026109714161102E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999088017755202	WITHOUT_CLASSIFICATION	9.119822447976617E-5	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999917314725976	WITHOUT_CLASSIFICATION	8.268527402473473E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999997279380607	WITHOUT_CLASSIFICATION	2.720619392616854E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999995091413266	WITHOUT_CLASSIFICATION	4.908586733345418E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999859951825095	WITHOUT_CLASSIFICATION	1.4004817490500701E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999802335732693	WITHOUT_CLASSIFICATION	1.976642673074446E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9999975008669214	WITHOUT_CLASSIFICATION	2.499133078578511E-6	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999962782216163	WITHOUT_CLASSIFICATION	3.721778383686674E-6	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999766182597868	WITHOUT_CLASSIFICATION	2.3381740213203583E-5	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999993809087554	WITHOUT_CLASSIFICATION	6.190912446666208E-7	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.99999971471416	WITHOUT_CLASSIFICATION	2.852858399131702E-7	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9998712493346573	WITHOUT_CLASSIFICATION	1.2875066534267927E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998467179789436	WITHOUT_CLASSIFICATION	1.532820210563034E-4	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999444095296847	WITHOUT_CLASSIFICATION	5.559047031529714E-5	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999870916821652	WITHOUT_CLASSIFICATION	1.290831783493515E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999802335732693	WITHOUT_CLASSIFICATION	1.976642673074446E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999802335732693	WITHOUT_CLASSIFICATION	1.976642673074446E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999786310773308	WITHOUT_CLASSIFICATION	2.1368922669254065E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999744093176893	WITHOUT_CLASSIFICATION	2.5590682310685833E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.99998472319093	WITHOUT_CLASSIFICATION	1.5276809070039678E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999984748679809	WITHOUT_CLASSIFICATION	1.5251320190713678E-6	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999515788424604	WITHOUT_CLASSIFICATION	4.842115753957283E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999835276707018	WITHOUT_CLASSIFICATION	1.6472329298200641E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999766219887983	WITHOUT_CLASSIFICATION	2.3378011201699534E-4	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999968860007843	WITHOUT_CLASSIFICATION	3.113999215686925E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999984881724715	WITHOUT_CLASSIFICATION	1.5118275285451642E-6	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9999172720397295	WITHOUT_CLASSIFICATION	8.272796027044339E-5	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999142030363085	WITHOUT_CLASSIFICATION	8.579696369154875E-5	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999349947458794	WITHOUT_CLASSIFICATION	6.500525412054289E-5	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.999981524999433	WITHOUT_CLASSIFICATION	1.847500056694754E-5	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999943940528797	WITHOUT_CLASSIFICATION	5.605947120302119E-6	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999854600983654	WITHOUT_CLASSIFICATION	1.4539901634538024E-5	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.999962940852788	WITHOUT_CLASSIFICATION	3.705914721198205E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.999993792271954	WITHOUT_CLASSIFICATION	6.207728046010563E-6	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.999979903250562	WITHOUT_CLASSIFICATION	2.009674943798148E-5	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9999343462327801	WITHOUT_CLASSIFICATION	6.565376721996847E-5	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999990652508696	WITHOUT_CLASSIFICATION	9.347491304309198E-7	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999993594341318	WITHOUT_CLASSIFICATION	6.405658681942588E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999935380598212	WITHOUT_CLASSIFICATION	6.461940178867875E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.999988098785276	WITHOUT_CLASSIFICATION	1.1901214724032764E-5	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999710912173784	WITHOUT_CLASSIFICATION	2.8908782621605548E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999995361736882	WITHOUT_CLASSIFICATION	4.6382631181667015E-7	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999201295018888	WITHOUT_CLASSIFICATION	7.987049811114225E-5	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999988474930503	WITHOUT_CLASSIFICATION	1.1525069496849135E-6	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999478214470705	WITHOUT_CLASSIFICATION	5.21785529295003E-5	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999955617533972	WITHOUT_CLASSIFICATION	4.438246602784578E-6	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999784392990126	WITHOUT_CLASSIFICATION	2.1560700987374203E-5	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999922725892326	WITHOUT_CLASSIFICATION	7.727410767396103E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999418879875533	WITHOUT_CLASSIFICATION	5.8112012446708596E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999684320613585	WITHOUT_CLASSIFICATION	3.1567938641345955E-5	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999940803144608	WITHOUT_CLASSIFICATION	5.919685539157548E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999989261328539	WITHOUT_CLASSIFICATION	1.0738671460732618E-6	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.999999148737525	WITHOUT_CLASSIFICATION	8.512624749971367E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9999780182976817	WITHOUT_CLASSIFICATION	2.198170231822212E-5	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999367567269613	WITHOUT_CLASSIFICATION	6.324327303878474E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999988570704729	WITHOUT_CLASSIFICATION	1.1429295271521838E-6	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999989506696438	WITHOUT_CLASSIFICATION	1.0493303561503986E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999997999739868	WITHOUT_CLASSIFICATION	2.0002601330047352E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999913713071183	WITHOUT_CLASSIFICATION	8.628692881641115E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999872863739065	WITHOUT_CLASSIFICATION	1.2713626093395556E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999845354684886	WITHOUT_CLASSIFICATION	1.5464531511353257E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999996973375767	WITHOUT_CLASSIFICATION	3.0266242330941646E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999986871395938	WITHOUT_CLASSIFICATION	1.312860406093521E-6	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999994440057172	WITHOUT_CLASSIFICATION	5.559942828785544E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999994513562682	WITHOUT_CLASSIFICATION	5.486437318728047E-7	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999981429489627	WITHOUT_CLASSIFICATION	1.8570510372346026E-6	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9998815564246876	WITHOUT_CLASSIFICATION	1.1844357531245077E-4	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999825468898964	WITHOUT_CLASSIFICATION	1.745311010357121E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999640629471173	WITHOUT_CLASSIFICATION	3.593705288266803E-5	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999907435579329	WITHOUT_CLASSIFICATION	9.256442067027472E-6	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999875600738473	WITHOUT_CLASSIFICATION	1.2439926152642454E-5	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999258620691018	WITHOUT_CLASSIFICATION	7.413793089818369E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999980911516291	WITHOUT_CLASSIFICATION	1.9088483709061586E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.999966182185551	WITHOUT_CLASSIFICATION	3.381781444909622E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999552706596563	WITHOUT_CLASSIFICATION	4.472934034382106E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999927342599696	WITHOUT_CLASSIFICATION	7.2657400304829065E-6	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9999990776549598	WITHOUT_CLASSIFICATION	9.223450403175757E-7	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999972848876281	WITHOUT_CLASSIFICATION	2.715112372030298E-6	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999997157485674	WITHOUT_CLASSIFICATION	2.8425143260964283E-7	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999993093343895	WITHOUT_CLASSIFICATION	6.906656104203236E-7	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999995553928843	WITHOUT_CLASSIFICATION	4.446071157089932E-7	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.999989009992247	WITHOUT_CLASSIFICATION	1.0990007752937233E-5	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999924749662352	WITHOUT_CLASSIFICATION	7.5250337647846295E-6	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.999989597348065	WITHOUT_CLASSIFICATION	1.0402651935022222E-5	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999995067847189	WITHOUT_CLASSIFICATION	4.932152810526428E-7	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999978174155956	WITHOUT_CLASSIFICATION	2.1825844043148365E-6	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999993739362247	WITHOUT_CLASSIFICATION	6.260637753439989E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999988570704729	WITHOUT_CLASSIFICATION	1.1429295271521838E-6	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999919956431796	WITHOUT_CLASSIFICATION	8.004356820249915E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999965806071521	WITHOUT_CLASSIFICATION	3.419392847895113E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999965806071521	WITHOUT_CLASSIFICATION	3.419392847895113E-6	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999918244699555	WITHOUT_CLASSIFICATION	8.175530044517421E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999977851904308	WITHOUT_CLASSIFICATION	2.214809569129772E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999977851904308	WITHOUT_CLASSIFICATION	2.214809569129772E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999881791094871	WITHOUT_CLASSIFICATION	1.1820890512785244E-5	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999972199907268	WITHOUT_CLASSIFICATION	2.7800092733137284E-6	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999950278189512	WITHOUT_CLASSIFICATION	4.972181048783235E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999977239127203	WITHOUT_CLASSIFICATION	2.2760872796180366E-6	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999993668941258	WITHOUT_CLASSIFICATION	6.331058740796647E-7	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999994025762908	WITHOUT_CLASSIFICATION	5.974237092025949E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999980065803524	WITHOUT_CLASSIFICATION	1.993419647584985E-6	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999980305963534	WITHOUT_CLASSIFICATION	1.9694036466651483E-6	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999987583272898	WITHOUT_CLASSIFICATION	1.2416727100949179E-6	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9998485831947368	WITHOUT_CLASSIFICATION	1.5141680526329292E-4	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999996632845578	WITHOUT_CLASSIFICATION	3.3671544220663977E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999985173339485	WITHOUT_CLASSIFICATION	1.4826660515045297E-6	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999961238870781	WITHOUT_CLASSIFICATION	3.876112921868266E-6	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999858894267807	WITHOUT_CLASSIFICATION	1.4110573219223234E-5	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9999556384082107	WITHOUT_CLASSIFICATION	4.436159178932428E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999972245800007	WITHOUT_CLASSIFICATION	2.775419999340172E-6	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.999995902595069	WITHOUT_CLASSIFICATION	4.09740493098843E-6	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999934597983929	WITHOUT_CLASSIFICATION	6.540201606992318E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999917533665367	WITHOUT_CLASSIFICATION	8.246633463353126E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999977851904308	WITHOUT_CLASSIFICATION	2.214809569129772E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999881791094871	WITHOUT_CLASSIFICATION	1.1820890512785244E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999972245800007	WITHOUT_CLASSIFICATION	2.775419999340172E-6	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.999997509709317	WITHOUT_CLASSIFICATION	2.4902906829085906E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999936569052055	WITHOUT_CLASSIFICATION	6.343094794555706E-6	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999995777113028	WITHOUT_CLASSIFICATION	4.222886972201693E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.999995970245182	WITHOUT_CLASSIFICATION	4.029754817913527E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999870073089548	WITHOUT_CLASSIFICATION	1.2992691045027537E-5	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999959970274167	WITHOUT_CLASSIFICATION	4.002972583242993E-6	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999911286731088	WITHOUT_CLASSIFICATION	8.871326891217788E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.999971640370269	WITHOUT_CLASSIFICATION	2.8359629731051627E-5	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999709569879526	WITHOUT_CLASSIFICATION	2.9043012047424754E-5	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999754660427933	WITHOUT_CLASSIFICATION	2.4533957206701574E-5	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999204525228271	WITHOUT_CLASSIFICATION	7.95474771728851E-5	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9998605881468797	WITHOUT_CLASSIFICATION	1.394118531202089E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999991758035969	WITHOUT_CLASSIFICATION	8.241964030642336E-7	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.999998689607651	WITHOUT_CLASSIFICATION	1.310392349000659E-6	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9923827784606503	WITHOUT_CLASSIFICATION	0.007617221539349755	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999859615328659	WITHOUT_CLASSIFICATION	1.40384671340545E-5	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999938854415984	WITHOUT_CLASSIFICATION	6.114558401593133E-6	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999980693805304	WITHOUT_CLASSIFICATION	1.9306194696123138E-6	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999827209682615	WITHOUT_CLASSIFICATION	1.727903173851522E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999745443791035	WITHOUT_CLASSIFICATION	2.5455620896534707E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999946625360411	WITHOUT_CLASSIFICATION	5.337463958950515E-6	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999917942166431	WITHOUT_CLASSIFICATION	8.205783356978866E-6	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.999989351400281	WITHOUT_CLASSIFICATION	1.0648599719014585E-5	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999956658592101	WITHOUT_CLASSIFICATION	4.3341407899082025E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.999973835086914	WITHOUT_CLASSIFICATION	2.6164913086009995E-5	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999989945797627	WITHOUT_CLASSIFICATION	1.0054202372872898E-6	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.999993374720104	WITHOUT_CLASSIFICATION	6.625279896064782E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999445349083226	WITHOUT_CLASSIFICATION	5.546509167733026E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999956546720665	WITHOUT_CLASSIFICATION	4.345327933527974E-6	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999244714712572	WITHOUT_CLASSIFICATION	7.552852874285103E-5	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999749617528265	WITHOUT_CLASSIFICATION	2.5038247173538632E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999987177065083	WITHOUT_CLASSIFICATION	1.2822934916969406E-6	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999777641329867	WITHOUT_CLASSIFICATION	2.2235867013332164E-5	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999814651684535	WITHOUT_CLASSIFICATION	1.8534831546433367E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999720675211216	WITHOUT_CLASSIFICATION	2.7932478878463765E-5	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.999976427110735	WITHOUT_CLASSIFICATION	2.357288926501947E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999859718225997	WITHOUT_CLASSIFICATION	1.402817740015597E-5	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999259347264	WITHOUT_CLASSIFICATION	7.406527363105077E-8	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.999991762172012	WITHOUT_CLASSIFICATION	8.237827988085864E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.999991762172012	WITHOUT_CLASSIFICATION	8.237827988085864E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999876485465	WITHOUT_CLASSIFICATION	1.2351453487306133E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999659695945	WITHOUT_CLASSIFICATION	3.403040544020055E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999659695945	WITHOUT_CLASSIFICATION	3.403040544020055E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999992609896219	WITHOUT_CLASSIFICATION	7.390103780036779E-7	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999992609896219	WITHOUT_CLASSIFICATION	7.390103780036779E-7	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.99991282641111	WITHOUT_CLASSIFICATION	8.717358888996374E-5	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999694227621252	WITHOUT_CLASSIFICATION	3.05772378748549E-5	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999988458023864	WITHOUT_CLASSIFICATION	1.154197613647072E-6	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999995210487084	WITHOUT_CLASSIFICATION	4.789512917130536E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999244622979	WITHOUT_CLASSIFICATION	7.553770212594014E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999928216352615	WITHOUT_CLASSIFICATION	7.178364738488944E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999985725783621	WITHOUT_CLASSIFICATION	1.427421637933925E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9998341547663553	WITHOUT_CLASSIFICATION	1.6584523364462483E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.999991762172012	WITHOUT_CLASSIFICATION	8.237827988085864E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999653661007731	WITHOUT_CLASSIFICATION	3.463389922698538E-5	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999668840921	WITHOUT_CLASSIFICATION	3.311590792999448E-8	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999180404392	WITHOUT_CLASSIFICATION	8.195956071083262E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9999766770156155	WITHOUT_CLASSIFICATION	2.3322984384470938E-5	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999239258950323	WITHOUT_CLASSIFICATION	7.607410496766347E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999991905055357	WITHOUT_CLASSIFICATION	8.09494464372439E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999971440624136	WITHOUT_CLASSIFICATION	2.8559375864123803E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999849321942952	WITHOUT_CLASSIFICATION	1.5067805704821494E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999748793323705	WITHOUT_CLASSIFICATION	2.5120667629485763E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999748793323705	WITHOUT_CLASSIFICATION	2.5120667629485763E-5	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999632197466979	WITHOUT_CLASSIFICATION	3.678025330219595E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999999413923253	WITHOUT_CLASSIFICATION	5.860767481457684E-8	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999913704641444	WITHOUT_CLASSIFICATION	8.629535855618028E-6	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999900398658844	WITHOUT_CLASSIFICATION	9.960134115612844E-6	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999975473439229	WITHOUT_CLASSIFICATION	2.452656077077208E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997129710404	WITHOUT_CLASSIFICATION	2.870289595606814E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999962899492125	WITHOUT_CLASSIFICATION	3.7100507873200376E-6	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999968033409721	WITHOUT_CLASSIFICATION	3.196659027955731E-6	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.999999178374314	WITHOUT_CLASSIFICATION	8.216256859851782E-7	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997129710404	WITHOUT_CLASSIFICATION	2.870289595606814E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999960028275756	WITHOUT_CLASSIFICATION	3.997172424384839E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999951447491285	WITHOUT_CLASSIFICATION	4.855250871482255E-6	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999981767574044	WITHOUT_CLASSIFICATION	1.823242595479095E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.999997275511725	WITHOUT_CLASSIFICATION	2.7244882749975985E-6	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.99999881768338	WITHOUT_CLASSIFICATION	1.182316620087695E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999941663060713	WITHOUT_CLASSIFICATION	5.833693928691489E-6	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999917777432339	WITHOUT_CLASSIFICATION	8.222256766059876E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999952776857588	WITHOUT_CLASSIFICATION	4.722314241185412E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999952776857588	WITHOUT_CLASSIFICATION	4.722314241185412E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999800659097775	WITHOUT_CLASSIFICATION	1.993409022249109E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999800659097775	WITHOUT_CLASSIFICATION	1.993409022249109E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999906920777424	WITHOUT_CLASSIFICATION	9.307922257573559E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999944878771332	WITHOUT_CLASSIFICATION	5.512122866842069E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999944878771332	WITHOUT_CLASSIFICATION	5.512122866842069E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999928442061653	WITHOUT_CLASSIFICATION	7.1557938346929505E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999927801759304	WITHOUT_CLASSIFICATION	7.219824069696491E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999927801759304	WITHOUT_CLASSIFICATION	7.219824069696491E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999938979021633	WITHOUT_CLASSIFICATION	6.102097836671966E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999933245400521	WITHOUT_CLASSIFICATION	6.675459947970503E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.999990088587346	WITHOUT_CLASSIFICATION	9.911412654111066E-6	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999942964619938	WITHOUT_CLASSIFICATION	5.703538006205312E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999998410175055	WITHOUT_CLASSIFICATION	1.5898249439501247E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999937120521144	WITHOUT_CLASSIFICATION	6.28794788559714E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999937120521144	WITHOUT_CLASSIFICATION	6.28794788559714E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999926633370665	WITHOUT_CLASSIFICATION	7.3366629334955106E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999926633370665	WITHOUT_CLASSIFICATION	7.3366629334955106E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999989043322555	WITHOUT_CLASSIFICATION	1.0956677445863018E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999809784543296	WITHOUT_CLASSIFICATION	1.9021545670339215E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.99996469984699	WITHOUT_CLASSIFICATION	3.530015300990881E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999678204848662	WITHOUT_CLASSIFICATION	3.2179515133847327E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999952776857588	WITHOUT_CLASSIFICATION	4.722314241185412E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999856566990469	WITHOUT_CLASSIFICATION	1.4343300952930294E-5	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999956053609836	WITHOUT_CLASSIFICATION	4.394639016343371E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999800659097775	WITHOUT_CLASSIFICATION	1.993409022249109E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999800659097775	WITHOUT_CLASSIFICATION	1.993409022249109E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999906920777424	WITHOUT_CLASSIFICATION	9.307922257573559E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999944878771332	WITHOUT_CLASSIFICATION	5.512122866842069E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999944878771332	WITHOUT_CLASSIFICATION	5.512122866842069E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999944878771332	WITHOUT_CLASSIFICATION	5.512122866842069E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999928442061653	WITHOUT_CLASSIFICATION	7.1557938346929505E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999927801759304	WITHOUT_CLASSIFICATION	7.219824069696491E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999938979021633	WITHOUT_CLASSIFICATION	6.102097836671966E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999933245400521	WITHOUT_CLASSIFICATION	6.675459947970503E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999937120521144	WITHOUT_CLASSIFICATION	6.28794788559714E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999291544115	WITHOUT_CLASSIFICATION	7.084558850124141E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999993473935406	WITHOUT_CLASSIFICATION	6.526064593870565E-7	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999982850762255	WITHOUT_CLASSIFICATION	1.714923774507838E-6	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999997899315997	WITHOUT_CLASSIFICATION	2.100684002903479E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999937120521144	WITHOUT_CLASSIFICATION	6.28794788559714E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999926633370665	WITHOUT_CLASSIFICATION	7.3366629334955106E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999926633370665	WITHOUT_CLASSIFICATION	7.3366629334955106E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.99996469984699	WITHOUT_CLASSIFICATION	3.530015300990881E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.99996469984699	WITHOUT_CLASSIFICATION	3.530015300990881E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999978906981115	WITHOUT_CLASSIFICATION	2.1093018885014984E-5	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999944766204929	WITHOUT_CLASSIFICATION	5.523379507150743E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999810995851323	WITHOUT_CLASSIFICATION	1.8900414867753346E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999926936006932	WITHOUT_CLASSIFICATION	7.306399306779214E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999816714359004	WITHOUT_CLASSIFICATION	1.8328564099613982E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999940118466981	WITHOUT_CLASSIFICATION	5.988153301905743E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999588853668747	WITHOUT_CLASSIFICATION	4.111463312533039E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999930510838823	WITHOUT_CLASSIFICATION	6.948916117702385E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999741771286094	WITHOUT_CLASSIFICATION	2.582287139069681E-5	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999991218957929	WITHOUT_CLASSIFICATION	8.781042070857798E-7	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999972051303925	WITHOUT_CLASSIFICATION	2.7948696076335214E-6	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999134248818872	WITHOUT_CLASSIFICATION	8.657511811290531E-5	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999715922354816	WITHOUT_CLASSIFICATION	2.8407764518416176E-5	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999710314791531	WITHOUT_CLASSIFICATION	2.896852084694895E-5	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9998865891097602	WITHOUT_CLASSIFICATION	1.134108902396899E-4	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999982125327885	WITHOUT_CLASSIFICATION	1.7874672114101037E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999989946854092	WITHOUT_CLASSIFICATION	1.0053145908121368E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.99999834428573	WITHOUT_CLASSIFICATION	1.6557142699380922E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999963346544963	WITHOUT_CLASSIFICATION	3.6653455037907136E-6	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999984731922235	WITHOUT_CLASSIFICATION	1.5268077764690286E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.999986756168833	WITHOUT_CLASSIFICATION	1.324383116708354E-5	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9996228446657969	WITHOUT_CLASSIFICATION	3.771553342030995E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.999996898575924	WITHOUT_CLASSIFICATION	3.1014240760501343E-6	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.999996898575924	WITHOUT_CLASSIFICATION	3.1014240760501343E-6	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999953539786182	WITHOUT_CLASSIFICATION	4.6460213818333055E-6	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999986446981557	WITHOUT_CLASSIFICATION	1.3553018442809626E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9999291543843479	WITHOUT_CLASSIFICATION	7.084561565204851E-5	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999909192131651	WITHOUT_CLASSIFICATION	9.080786834897133E-6	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999954548893158	WITHOUT_CLASSIFICATION	4.54511068415843E-6	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999911389477629	WITHOUT_CLASSIFICATION	8.861052237097718E-6	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999835428159042	WITHOUT_CLASSIFICATION	1.6457184095823352E-5	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999874751216264	WITHOUT_CLASSIFICATION	1.2524878373633837E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999885807634333	WITHOUT_CLASSIFICATION	1.1419236566632281E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999885807634333	WITHOUT_CLASSIFICATION	1.1419236566632281E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999885807634333	WITHOUT_CLASSIFICATION	1.1419236566632281E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999694557129781	WITHOUT_CLASSIFICATION	3.054428702184266E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999694557129781	WITHOUT_CLASSIFICATION	3.054428702184266E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999694557129781	WITHOUT_CLASSIFICATION	3.054428702184266E-5	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999936038529053	WITHOUT_CLASSIFICATION	6.396147094714446E-6	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999887578758183	WITHOUT_CLASSIFICATION	1.1242124181695405E-5	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999447647058276	WITHOUT_CLASSIFICATION	5.5235294172409816E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9998789354243004	WITHOUT_CLASSIFICATION	1.2106457569951832E-4	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.999990649218367	WITHOUT_CLASSIFICATION	9.350781633046702E-6	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999408475347821	WITHOUT_CLASSIFICATION	5.915246521790019E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999297285950909	WITHOUT_CLASSIFICATION	7.027140490905358E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999998330952927	WITHOUT_CLASSIFICATION	1.6690470723480936E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999916700192791	WITHOUT_CLASSIFICATION	8.329980720803081E-6	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999988691134232	WITHOUT_CLASSIFICATION	1.1308865767804592E-6	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.999999779110483	WITHOUT_CLASSIFICATION	2.2088951692184912E-7	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999995031432873	WITHOUT_CLASSIFICATION	4.968567126474161E-7	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999997507388277	WITHOUT_CLASSIFICATION	2.492611722781774E-7	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.999999829723899	WITHOUT_CLASSIFICATION	1.7027610107483346E-7	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999939665807571	WITHOUT_CLASSIFICATION	6.033419242858369E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999929288111072	WITHOUT_CLASSIFICATION	7.0711888928561946E-6	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999999454368023	WITHOUT_CLASSIFICATION	5.4563197810228794E-8	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999951449820562	WITHOUT_CLASSIFICATION	4.855017943774601E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9999769528228786	WITHOUT_CLASSIFICATION	2.3047177121386722E-5	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999805327785	WITHOUT_CLASSIFICATION	1.9467221495548902E-8	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999998073472834	WITHOUT_CLASSIFICATION	1.9265271664056194E-7	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999849119532	WITHOUT_CLASSIFICATION	1.5088046819471674E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999999107293203	WITHOUT_CLASSIFICATION	8.927067978661023E-8	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999799741086	WITHOUT_CLASSIFICATION	2.002589130702469E-8	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999998851953593	WITHOUT_CLASSIFICATION	1.1480464072579804E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999263532924703	WITHOUT_CLASSIFICATION	7.364670752965924E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999985872848245	WITHOUT_CLASSIFICATION	1.4127151755027676E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999990270896745	WITHOUT_CLASSIFICATION	9.729103255508712E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999979412573525	WITHOUT_CLASSIFICATION	2.0587426474710796E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999979412573525	WITHOUT_CLASSIFICATION	2.0587426474710796E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9998608841784841	WITHOUT_CLASSIFICATION	1.391158215158854E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999885278391287	WITHOUT_CLASSIFICATION	1.1472160871252286E-5	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999912269918597	WITHOUT_CLASSIFICATION	8.773008140241472E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999983073464255	WITHOUT_CLASSIFICATION	1.6926535745212288E-6	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999959256286216	WITHOUT_CLASSIFICATION	4.074371378463476E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999979089904572	WITHOUT_CLASSIFICATION	2.091009542770292E-6	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999879937380726	WITHOUT_CLASSIFICATION	1.2006261927513009E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999910270502328	WITHOUT_CLASSIFICATION	8.972949767147189E-6	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9998523125505208	WITHOUT_CLASSIFICATION	1.4768744947930487E-4	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999982851431901	WITHOUT_CLASSIFICATION	1.7148568098696555E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.999923307928996	WITHOUT_CLASSIFICATION	7.669207100398484E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9996906490625417	WITHOUT_CLASSIFICATION	3.093509374583658E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999897872350911	WITHOUT_CLASSIFICATION	1.0212764908854353E-5	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9999965199406082	WITHOUT_CLASSIFICATION	3.4800593918933404E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.99999834428573	WITHOUT_CLASSIFICATION	1.6557142699380922E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999989578532362	WITHOUT_CLASSIFICATION	1.0421467637948825E-6	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9995941999252699	WITHOUT_CLASSIFICATION	4.05800074730142E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999883352888981	WITHOUT_CLASSIFICATION	1.1664711101909346E-5	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.998722090959454	WITHOUT_CLASSIFICATION	0.0012779090405460264	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9998427841007164	WITHOUT_CLASSIFICATION	1.5721589928364198E-4	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999995380777914	WITHOUT_CLASSIFICATION	4.619222085248248E-7	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999796521961198	WITHOUT_CLASSIFICATION	2.034780388016894E-5	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999652997412872	WITHOUT_CLASSIFICATION	3.470025871273226E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999912343948058	WITHOUT_CLASSIFICATION	8.765605194190756E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999731173323163	WITHOUT_CLASSIFICATION	2.6882667683782325E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999940535950325	WITHOUT_CLASSIFICATION	5.9464049675400354E-6	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999084385772068	WITHOUT_CLASSIFICATION	9.156142279310731E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.999776555998206	WITHOUT_CLASSIFICATION	2.2344400179395997E-4	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999881189097567	WITHOUT_CLASSIFICATION	1.188109024325022E-5	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999800232068007	WITHOUT_CLASSIFICATION	1.9976793199276785E-5	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999903756621861	WITHOUT_CLASSIFICATION	9.624337813948982E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999736573302446	WITHOUT_CLASSIFICATION	2.6342669755406754E-5	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999939516705388	WITHOUT_CLASSIFICATION	6.048329461209427E-6	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999986476388462	WITHOUT_CLASSIFICATION	1.352361153917715E-6	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999996321582232	WITHOUT_CLASSIFICATION	3.6784177675655117E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999978718221583	WITHOUT_CLASSIFICATION	2.1281778418682886E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999975422295923	WITHOUT_CLASSIFICATION	2.457770407771494E-6	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999906132137045	WITHOUT_CLASSIFICATION	9.386786295559165E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999962696482182	WITHOUT_CLASSIFICATION	3.7303517817366508E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999586569810949	WITHOUT_CLASSIFICATION	4.134301890524846E-5	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9999385021299069	WITHOUT_CLASSIFICATION	6.149787009308266E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999995009039858	WITHOUT_CLASSIFICATION	4.990960140854294E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.999993842831701	WITHOUT_CLASSIFICATION	6.157168299070579E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.999993842831701	WITHOUT_CLASSIFICATION	6.157168299070579E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9996171923183003	WITHOUT_CLASSIFICATION	3.828076816996593E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999835276707018	WITHOUT_CLASSIFICATION	1.6472329298200641E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999987289290583	WITHOUT_CLASSIFICATION	1.2710709417457646E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999987289290583	WITHOUT_CLASSIFICATION	1.2710709417457646E-6	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999408475347821	WITHOUT_CLASSIFICATION	5.915246521790019E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999297285950909	WITHOUT_CLASSIFICATION	7.027140490905358E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9998753338515657	WITHOUT_CLASSIFICATION	1.246661484343959E-4	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999984088013657	WITHOUT_CLASSIFICATION	1.591198634340992E-6	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999363920608492	WITHOUT_CLASSIFICATION	6.360793915083367E-5	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999773991851957	WITHOUT_CLASSIFICATION	2.2600814804291272E-5	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999972376928845	WITHOUT_CLASSIFICATION	2.762307115498562E-6	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999923143937341	WITHOUT_CLASSIFICATION	7.685606265969776E-6	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999286108071709	WITHOUT_CLASSIFICATION	7.138919282914575E-5	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999809637321381	WITHOUT_CLASSIFICATION	1.9036267861976915E-5	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999964391339321	WITHOUT_CLASSIFICATION	3.5608660679425405E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9999924154064339	WITHOUT_CLASSIFICATION	7.5845935660897405E-6	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999993722926769	WITHOUT_CLASSIFICATION	6.277073230709486E-7	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999409727159367	WITHOUT_CLASSIFICATION	5.902728406334518E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999452938853615	WITHOUT_CLASSIFICATION	5.470611463865877E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999452938853615	WITHOUT_CLASSIFICATION	5.470611463865877E-5	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999935939811283	WITHOUT_CLASSIFICATION	6.406018871687716E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999964149655411	WITHOUT_CLASSIFICATION	3.585034458891464E-6	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999203850492119	WITHOUT_CLASSIFICATION	7.961495078809569E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999940442306195	WITHOUT_CLASSIFICATION	5.955769380446339E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999998395832909	WITHOUT_CLASSIFICATION	1.6041670907823686E-7	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999999469862987	WITHOUT_CLASSIFICATION	5.301370146071441E-8	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999947252745536	WITHOUT_CLASSIFICATION	5.274725446447659E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999996529633859	WITHOUT_CLASSIFICATION	3.4703661411360005E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999974762091668	WITHOUT_CLASSIFICATION	2.5237908332424877E-6	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999422207295853	WITHOUT_CLASSIFICATION	5.777927041471143E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999767950297045	WITHOUT_CLASSIFICATION	2.3204970295603813E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.999716873815284	WITHOUT_CLASSIFICATION	2.831261847160028E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9999875232945306	WITHOUT_CLASSIFICATION	1.2476705469409189E-5	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999913767499764	WITHOUT_CLASSIFICATION	8.623250023572586E-6	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999968777541673	WITHOUT_CLASSIFICATION	3.122245832625774E-6	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9997850441754658	WITHOUT_CLASSIFICATION	2.149558245343324E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999966507882235	WITHOUT_CLASSIFICATION	3.3492117764326657E-6	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999984877782422	WITHOUT_CLASSIFICATION	1.5122217579168633E-6	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.999976517082033	WITHOUT_CLASSIFICATION	2.3482917966979038E-5	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999843120410672	WITHOUT_CLASSIFICATION	1.5687958932794804E-5	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999295958894274	WITHOUT_CLASSIFICATION	7.040411057256853E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999932629319133	WITHOUT_CLASSIFICATION	6.737068086659341E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9996083657463083	WITHOUT_CLASSIFICATION	3.9163425369160735E-4	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999866955710941	WITHOUT_CLASSIFICATION	1.3304428905958303E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.999983831289661	WITHOUT_CLASSIFICATION	1.6168710339099605E-5	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999917934599486	WITHOUT_CLASSIFICATION	8.206540051399792E-6	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999927196931193	WITHOUT_CLASSIFICATION	7.28030688071243E-6	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.999946159673771	WITHOUT_CLASSIFICATION	5.384032622906979E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999790306096976	WITHOUT_CLASSIFICATION	2.096939030238659E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.999165605768372	WITHOUT_CLASSIFICATION	8.343942316280324E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.999165605768372	WITHOUT_CLASSIFICATION	8.343942316280324E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.999165605768372	WITHOUT_CLASSIFICATION	8.343942316280324E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.999165605768372	WITHOUT_CLASSIFICATION	8.343942316280324E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.999165605768372	WITHOUT_CLASSIFICATION	8.343942316280324E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.999165605768372	WITHOUT_CLASSIFICATION	8.343942316280324E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999994108066776	WITHOUT_CLASSIFICATION	5.891933224061176E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.999997963681062	WITHOUT_CLASSIFICATION	2.036318938108428E-6	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999937545248374	WITHOUT_CLASSIFICATION	6.2454751625319994E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999918528462117	WITHOUT_CLASSIFICATION	8.147153788205476E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999918528462117	WITHOUT_CLASSIFICATION	8.147153788205476E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999842863736979	WITHOUT_CLASSIFICATION	1.571362630207095E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999842863736979	WITHOUT_CLASSIFICATION	1.571362630207095E-5	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999786064691907	WITHOUT_CLASSIFICATION	2.1393530809367147E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999950945515297	WITHOUT_CLASSIFICATION	4.905448470300998E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999971265335846	WITHOUT_CLASSIFICATION	2.873466415473858E-6	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999581589772929	WITHOUT_CLASSIFICATION	4.184102270714121E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999844174456857	WITHOUT_CLASSIFICATION	1.5582554314325622E-5	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999990090659489	WITHOUT_CLASSIFICATION	9.909340511369437E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999956808748268	WITHOUT_CLASSIFICATION	4.3191251732595474E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999956808748268	WITHOUT_CLASSIFICATION	4.3191251732595474E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999836371253077	WITHOUT_CLASSIFICATION	1.6362874692320033E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999836371253077	WITHOUT_CLASSIFICATION	1.6362874692320033E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999836371253077	WITHOUT_CLASSIFICATION	1.6362874692320033E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999734228375385	WITHOUT_CLASSIFICATION	2.6577162461424992E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999734228375385	WITHOUT_CLASSIFICATION	2.6577162461424992E-5	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999988308908616	WITHOUT_CLASSIFICATION	1.169109138431325E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999993678933258	WITHOUT_CLASSIFICATION	6.321066742334422E-7	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999954608066578	WITHOUT_CLASSIFICATION	4.539193342113528E-6	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999931640638126	WITHOUT_CLASSIFICATION	6.835936187489533E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999966189562501	WITHOUT_CLASSIFICATION	3.3810437499612004E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999966189562501	WITHOUT_CLASSIFICATION	3.3810437499612004E-6	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999969517696282	WITHOUT_CLASSIFICATION	3.0482303718848746E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.999165605768372	WITHOUT_CLASSIFICATION	8.343942316280324E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999966189562501	WITHOUT_CLASSIFICATION	3.3810437499612004E-6	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999957395008205	WITHOUT_CLASSIFICATION	4.260499179476143E-6	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999957395008205	WITHOUT_CLASSIFICATION	4.260499179476143E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999966189562501	WITHOUT_CLASSIFICATION	3.3810437499612004E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999966189562501	WITHOUT_CLASSIFICATION	3.3810437499612004E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999966189562501	WITHOUT_CLASSIFICATION	3.3810437499612004E-6	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999996709473622	WITHOUT_CLASSIFICATION	3.290526377749097E-7	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999992521488256	WITHOUT_CLASSIFICATION	7.478511744393382E-7	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999994405818118	WITHOUT_CLASSIFICATION	5.594181882975318E-7	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999994405818118	WITHOUT_CLASSIFICATION	5.594181882975318E-7	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999995808049704	WITHOUT_CLASSIFICATION	4.191950296269226E-7	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999998371434574	WITHOUT_CLASSIFICATION	1.628565426661959E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.999990131642611	WITHOUT_CLASSIFICATION	9.868357388947349E-6	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999993615092525	WITHOUT_CLASSIFICATION	6.384907475421385E-7	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9998959261493794	WITHOUT_CLASSIFICATION	1.040738506206148E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999999059029524	WITHOUT_CLASSIFICATION	9.409704752445565E-8	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.999928940306984	WITHOUT_CLASSIFICATION	7.105969301604472E-5	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999986286211546	WITHOUT_CLASSIFICATION	1.3713788453379034E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999977207664489	WITHOUT_CLASSIFICATION	2.2792335510982744E-6	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999998176586248	WITHOUT_CLASSIFICATION	1.8234137530998887E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999928899468689	WITHOUT_CLASSIFICATION	7.110053131144559E-6	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999929619483015	WITHOUT_CLASSIFICATION	7.038051698571723E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999950598585724	WITHOUT_CLASSIFICATION	4.94014142768025E-6	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999992308850144	WITHOUT_CLASSIFICATION	7.691149855239287E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999995898342138	WITHOUT_CLASSIFICATION	4.101657861464377E-7	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999912913568798	WITHOUT_CLASSIFICATION	8.708643120157987E-6	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.99999938695602	WITHOUT_CLASSIFICATION	6.13043979983988E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999988509902362	WITHOUT_CLASSIFICATION	1.1490097638138482E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999995727372553	WITHOUT_CLASSIFICATION	4.272627447809113E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999993277618501	WITHOUT_CLASSIFICATION	6.722381499003639E-7	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999890131552911	WITHOUT_CLASSIFICATION	1.0986844708995306E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999988509902362	WITHOUT_CLASSIFICATION	1.1490097638138482E-6	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999996092593145	WITHOUT_CLASSIFICATION	3.907406854614237E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999995727372553	WITHOUT_CLASSIFICATION	4.272627447809113E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999993277618501	WITHOUT_CLASSIFICATION	6.722381499003639E-7	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999978772436227	WITHOUT_CLASSIFICATION	2.122756377466175E-6	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999978029585772	WITHOUT_CLASSIFICATION	2.1970414228557205E-6	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999995383468369	WITHOUT_CLASSIFICATION	4.6165316305576975E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999982954775293	WITHOUT_CLASSIFICATION	1.704522470834145E-6	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999996265401999	WITHOUT_CLASSIFICATION	3.734598000606068E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999989755697387	WITHOUT_CLASSIFICATION	1.024430261296813E-6	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9999882302634638	WITHOUT_CLASSIFICATION	1.1769736536084747E-5	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999993446047747	WITHOUT_CLASSIFICATION	6.55395225434492E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.999983992136939	WITHOUT_CLASSIFICATION	1.600786306100049E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999850726658474	WITHOUT_CLASSIFICATION	1.4927334152719908E-5	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999967747989955	WITHOUT_CLASSIFICATION	3.225201004466881E-6	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999999106762065	WITHOUT_CLASSIFICATION	8.932379343950692E-8	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999989083880875	WITHOUT_CLASSIFICATION	1.0916119125387634E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999999361282024	WITHOUT_CLASSIFICATION	6.387179760935517E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999957185522934	WITHOUT_CLASSIFICATION	4.2814477066146844E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999981588867377	WITHOUT_CLASSIFICATION	1.841113262238994E-6	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999997499096063	WITHOUT_CLASSIFICATION	2.500903937172811E-7	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999995328764016	WITHOUT_CLASSIFICATION	4.67123598471327E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999989650621672	WITHOUT_CLASSIFICATION	1.0349378328016365E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999989650621672	WITHOUT_CLASSIFICATION	1.0349378328016365E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999971122418787	WITHOUT_CLASSIFICATION	2.887758121292525E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999971122418787	WITHOUT_CLASSIFICATION	2.887758121292525E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999930714894273	WITHOUT_CLASSIFICATION	6.9285105726942134E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999930714894273	WITHOUT_CLASSIFICATION	6.9285105726942134E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999983952995167	WITHOUT_CLASSIFICATION	1.6047004832421398E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999859206312754	WITHOUT_CLASSIFICATION	1.4079368724460278E-5	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.99999952089182	WITHOUT_CLASSIFICATION	4.791081800796504E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999999414312135	WITHOUT_CLASSIFICATION	5.856878656929423E-8	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.999994699383461	WITHOUT_CLASSIFICATION	5.300616539026625E-6	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999982772564184	WITHOUT_CLASSIFICATION	1.72274358156517E-6	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999946938047087	WITHOUT_CLASSIFICATION	5.30619529127209E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.999996893782154	WITHOUT_CLASSIFICATION	3.1062178461514276E-6	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999974709546676	WITHOUT_CLASSIFICATION	2.5290453324551785E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9999835135271914	WITHOUT_CLASSIFICATION	1.648647280857301E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999949675229416	WITHOUT_CLASSIFICATION	5.032477058466484E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999987665400282	WITHOUT_CLASSIFICATION	1.2334599718530396E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999867527262519	WITHOUT_CLASSIFICATION	1.3247273748167225E-5	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999930759763077	WITHOUT_CLASSIFICATION	6.924023692350943E-6	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999899960459027	WITHOUT_CLASSIFICATION	1.0003954097402906E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999749019833569	WITHOUT_CLASSIFICATION	2.509801664303308E-5	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.999983629398932	WITHOUT_CLASSIFICATION	1.6370601067999617E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999641361580512	WITHOUT_CLASSIFICATION	3.586384194873303E-5	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999629779851951	WITHOUT_CLASSIFICATION	3.70220148050259E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.999976256699116	WITHOUT_CLASSIFICATION	2.374330088396616E-5	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999815133297344	WITHOUT_CLASSIFICATION	1.8486670265635795E-5	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999722561199962	WITHOUT_CLASSIFICATION	2.7743880003887565E-5	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.999995042185647	WITHOUT_CLASSIFICATION	4.957814352877924E-6	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999961232499068	WITHOUT_CLASSIFICATION	3.876750093184855E-6	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.999998547285526	WITHOUT_CLASSIFICATION	1.4527144740358552E-6	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999971472983412	WITHOUT_CLASSIFICATION	2.852701658826597E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999987201514999	WITHOUT_CLASSIFICATION	1.2798484999840942E-6	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999988948450518	WITHOUT_CLASSIFICATION	1.1051549481959855E-6	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.999996778117596	WITHOUT_CLASSIFICATION	3.2218824038624877E-6	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999966615635281	WITHOUT_CLASSIFICATION	3.338436472014235E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999972239394801	WITHOUT_CLASSIFICATION	2.776060519978621E-6	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999979830828006	WITHOUT_CLASSIFICATION	2.016917199243041E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999914625822736	WITHOUT_CLASSIFICATION	8.537417726493427E-6	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9997592410050149	WITHOUT_CLASSIFICATION	2.4075899498498244E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9997592410050149	WITHOUT_CLASSIFICATION	2.4075899498498244E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9999736488607378	WITHOUT_CLASSIFICATION	2.635113926216854E-5	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999927567524308	WITHOUT_CLASSIFICATION	7.243247569223171E-6	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.999975101911677	WITHOUT_CLASSIFICATION	2.4898088322967674E-5	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.99999482369711	WITHOUT_CLASSIFICATION	5.176302890035127E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999571820666558	WITHOUT_CLASSIFICATION	4.2817933344103136E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999905521829732	WITHOUT_CLASSIFICATION	9.447817026788192E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999905521829732	WITHOUT_CLASSIFICATION	9.447817026788192E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999905521829732	WITHOUT_CLASSIFICATION	9.447817026788192E-6	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999896864787547	WITHOUT_CLASSIFICATION	1.0313521245327182E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.99997950599947	WITHOUT_CLASSIFICATION	2.0494000529999934E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.99997950599947	WITHOUT_CLASSIFICATION	2.0494000529999934E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999571492371145	WITHOUT_CLASSIFICATION	4.285076288549386E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9996248929698043	WITHOUT_CLASSIFICATION	3.751070301957532E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999780413168712	WITHOUT_CLASSIFICATION	2.1958683128841975E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999780413168712	WITHOUT_CLASSIFICATION	2.1958683128841975E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999780413168712	WITHOUT_CLASSIFICATION	2.1958683128841975E-5	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.999993444479403	WITHOUT_CLASSIFICATION	6.555520597022415E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999687327871508	WITHOUT_CLASSIFICATION	3.126721284916327E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999791867050941	WITHOUT_CLASSIFICATION	2.081329490589408E-5	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999957693750999	WITHOUT_CLASSIFICATION	4.23062490005495E-6	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999948125509974	WITHOUT_CLASSIFICATION	5.18744900257875E-6	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999961030135165	WITHOUT_CLASSIFICATION	3.896986483462467E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999693729726764	WITHOUT_CLASSIFICATION	3.062702732363045E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999970832761876	WITHOUT_CLASSIFICATION	2.9167238124018042E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999542124744946	WITHOUT_CLASSIFICATION	4.578752550540521E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9995788656508178	WITHOUT_CLASSIFICATION	4.211343491821171E-4	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999923690321345	WITHOUT_CLASSIFICATION	7.630967865533397E-6	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999749019833569	WITHOUT_CLASSIFICATION	2.509801664303308E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999641361580512	WITHOUT_CLASSIFICATION	3.586384194873303E-5	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999952014998981	WITHOUT_CLASSIFICATION	4.798500101995614E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.999997865642876	WITHOUT_CLASSIFICATION	2.134357124101565E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999972828794534	WITHOUT_CLASSIFICATION	2.7171205466264596E-6	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999709503455998	WITHOUT_CLASSIFICATION	2.904965440024075E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999970073062782	WITHOUT_CLASSIFICATION	2.9926937218459713E-6	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999970073062782	WITHOUT_CLASSIFICATION	2.9926937218459713E-6	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999970073062782	WITHOUT_CLASSIFICATION	2.9926937218459713E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999925629836673	WITHOUT_CLASSIFICATION	7.437016332694033E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999925629836673	WITHOUT_CLASSIFICATION	7.437016332694033E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999958620988035	WITHOUT_CLASSIFICATION	4.137901196384219E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999929799021411	WITHOUT_CLASSIFICATION	7.020097858857164E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999565902269271	WITHOUT_CLASSIFICATION	4.340977307286761E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999837136921994	WITHOUT_CLASSIFICATION	1.6286307800538248E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999113042790607	WITHOUT_CLASSIFICATION	8.869572093930034E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999113042790607	WITHOUT_CLASSIFICATION	8.869572093930034E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999970214316876	WITHOUT_CLASSIFICATION	2.978568312394071E-6	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999914319808396	WITHOUT_CLASSIFICATION	8.568019160446152E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999957567582056	WITHOUT_CLASSIFICATION	4.2432417943755575E-6	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999948257191137	WITHOUT_CLASSIFICATION	5.174280886305834E-6	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999978665969688	WITHOUT_CLASSIFICATION	2.133403031237438E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999923585608002	WITHOUT_CLASSIFICATION	7.641439199891833E-6	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999167842163672	WITHOUT_CLASSIFICATION	8.32157836327868E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999984671721764	WITHOUT_CLASSIFICATION	1.5328278235560072E-6	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999990922438097	WITHOUT_CLASSIFICATION	9.077561902678047E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.999964048587683	WITHOUT_CLASSIFICATION	3.5951412316983434E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999954628098386	WITHOUT_CLASSIFICATION	4.5371901614286916E-6	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999752463978872	WITHOUT_CLASSIFICATION	2.47536021128824E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999972828794534	WITHOUT_CLASSIFICATION	2.7171205466264596E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999492088948	WITHOUT_CLASSIFICATION	5.079110526487863E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.999923307928996	WITHOUT_CLASSIFICATION	7.669207100398484E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999972828794534	WITHOUT_CLASSIFICATION	2.7171205466264596E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999837136921994	WITHOUT_CLASSIFICATION	1.6286307800538248E-5	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999987630791309	WITHOUT_CLASSIFICATION	1.2369208690436569E-6	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999993346463056	WITHOUT_CLASSIFICATION	6.653536943529648E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999970871722739	WITHOUT_CLASSIFICATION	2.9128277261591476E-6	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999970871722739	WITHOUT_CLASSIFICATION	2.9128277261591476E-6	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.999995275197318	WITHOUT_CLASSIFICATION	4.724802682072914E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999905121844644	WITHOUT_CLASSIFICATION	9.487815535545248E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999944428501848	WITHOUT_CLASSIFICATION	5.557149815278218E-6	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999954217129464	WITHOUT_CLASSIFICATION	4.578287053557477E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999996289969189	WITHOUT_CLASSIFICATION	3.7100308105861974E-7	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999728648751862	WITHOUT_CLASSIFICATION	2.7135124813766314E-5	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999998646292856	WITHOUT_CLASSIFICATION	1.3537071436672106E-7	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999669653285677	WITHOUT_CLASSIFICATION	3.303467143234749E-5	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999980798425757	WITHOUT_CLASSIFICATION	1.920157424156997E-6	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999990580567744	WITHOUT_CLASSIFICATION	9.419432257064616E-7	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9998747326619558	WITHOUT_CLASSIFICATION	1.2526733804413273E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999497996859362	WITHOUT_CLASSIFICATION	5.020031406388355E-5	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999991098461288	WITHOUT_CLASSIFICATION	8.901538710861955E-7	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999997691402033	WITHOUT_CLASSIFICATION	2.3085979673330815E-7	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999993505061637	WITHOUT_CLASSIFICATION	6.494938362098551E-7	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999998151534739	WITHOUT_CLASSIFICATION	1.8484652616863022E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999898220334285	WITHOUT_CLASSIFICATION	1.017796657150484E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.999999023550191	WITHOUT_CLASSIFICATION	9.764498089276632E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999993068577725	WITHOUT_CLASSIFICATION	6.931422275730866E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999993068577725	WITHOUT_CLASSIFICATION	6.931422275730866E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999972828794534	WITHOUT_CLASSIFICATION	2.7171205466264596E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999994584695249	WITHOUT_CLASSIFICATION	5.415304751442238E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999954628098386	WITHOUT_CLASSIFICATION	4.5371901614286916E-6	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999946372703323	WITHOUT_CLASSIFICATION	5.362729667646735E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999993829834682	WITHOUT_CLASSIFICATION	6.170165317297659E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999925309274823	WITHOUT_CLASSIFICATION	7.469072517654856E-6	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999976804509687	WITHOUT_CLASSIFICATION	2.3195490312863014E-6	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999997088077048	WITHOUT_CLASSIFICATION	2.9119229520027545E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999954628098386	WITHOUT_CLASSIFICATION	4.5371901614286916E-6	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999955679976076	WITHOUT_CLASSIFICATION	4.432002392387853E-6	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999959259978363	WITHOUT_CLASSIFICATION	4.0740021637986765E-6	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.999994196063923	WITHOUT_CLASSIFICATION	5.803936076948486E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999954369742172	WITHOUT_CLASSIFICATION	4.563025782771166E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996040505272	WITHOUT_CLASSIFICATION	3.959494727873096E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999974436593096	WITHOUT_CLASSIFICATION	2.5563406904520585E-6	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999911242810972	WITHOUT_CLASSIFICATION	8.875718902870902E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999913836787343	WITHOUT_CLASSIFICATION	8.616321265749372E-6	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999925071373249	WITHOUT_CLASSIFICATION	7.492862675169688E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999997416758597	WITHOUT_CLASSIFICATION	2.58324140291005E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999976648116787	WITHOUT_CLASSIFICATION	2.3351883213625373E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999976648116787	WITHOUT_CLASSIFICATION	2.3351883213625373E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.999987760648762	WITHOUT_CLASSIFICATION	1.2239351238052416E-5	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999985535208159	WITHOUT_CLASSIFICATION	1.446479184195799E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999990129141728	WITHOUT_CLASSIFICATION	9.870858271928467E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.999993956763515	WITHOUT_CLASSIFICATION	6.043236485015019E-6	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999706086258324	WITHOUT_CLASSIFICATION	2.939137416755283E-5	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999323723218749	WITHOUT_CLASSIFICATION	6.762767812510787E-5	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999939749019774	WITHOUT_CLASSIFICATION	6.0250980225430616E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999978081036967	WITHOUT_CLASSIFICATION	2.1918963034799725E-6	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999977165416526	WITHOUT_CLASSIFICATION	2.2834583474681966E-6	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999813092474307	WITHOUT_CLASSIFICATION	1.8690752569407317E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999999694842422	WITHOUT_CLASSIFICATION	3.0515757771666476E-8	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999950882523274	WITHOUT_CLASSIFICATION	4.911747672617981E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999950882523274	WITHOUT_CLASSIFICATION	4.911747672617981E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999950882523274	WITHOUT_CLASSIFICATION	4.911747672617981E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999950882523274	WITHOUT_CLASSIFICATION	4.911747672617981E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999950882523274	WITHOUT_CLASSIFICATION	4.911747672617981E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999950882523274	WITHOUT_CLASSIFICATION	4.911747672617981E-6	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9999941452670137	WITHOUT_CLASSIFICATION	5.8547329863283236E-6	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999834934664287	WITHOUT_CLASSIFICATION	1.6506533571346053E-5	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999995541036208	WITHOUT_CLASSIFICATION	4.4589637916310407E-7	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999992620989048	WITHOUT_CLASSIFICATION	7.379010951670332E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999990388679628	WITHOUT_CLASSIFICATION	9.611320371919216E-7	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.999991059246397	WITHOUT_CLASSIFICATION	8.940753603108056E-6	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999896903050793	WITHOUT_CLASSIFICATION	1.0309694920561844E-5	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999839824917817	WITHOUT_CLASSIFICATION	1.60175082183424E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9999858508784651	WITHOUT_CLASSIFICATION	1.414912153485113E-5	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999934905583606	WITHOUT_CLASSIFICATION	6.509441639325504E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999884284840524	WITHOUT_CLASSIFICATION	1.1571515947620578E-5	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999979979164689	WITHOUT_CLASSIFICATION	2.0020835311287616E-6	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999928368842147	WITHOUT_CLASSIFICATION	7.16311578540656E-6	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999998944468566	WITHOUT_CLASSIFICATION	1.0555314343635246E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999998224572205	WITHOUT_CLASSIFICATION	1.775427794414113E-7	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999504987349224	WITHOUT_CLASSIFICATION	4.950126507758312E-5	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999089921946789	WITHOUT_CLASSIFICATION	9.100780532106619E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999321795772752	WITHOUT_CLASSIFICATION	6.78204227247963E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999321795772752	WITHOUT_CLASSIFICATION	6.78204227247963E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999947306760221	WITHOUT_CLASSIFICATION	5.269323977884805E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999048911767415	WITHOUT_CLASSIFICATION	9.510882325845117E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999310401860212	WITHOUT_CLASSIFICATION	6.895981397876476E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999639401329524	WITHOUT_CLASSIFICATION	3.605986704757479E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999280129658582	WITHOUT_CLASSIFICATION	7.198703414176584E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999668087181486	WITHOUT_CLASSIFICATION	3.3191281851414123E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999944140492388	WITHOUT_CLASSIFICATION	5.585950761107748E-6	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999931169958093	WITHOUT_CLASSIFICATION	6.88300419068203E-6	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999895103688993	WITHOUT_CLASSIFICATION	1.0489631100744915E-5	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999892457728192	WITHOUT_CLASSIFICATION	1.075422718071454E-5	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999991989071312	WITHOUT_CLASSIFICATION	8.010928688425282E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999994180296966	WITHOUT_CLASSIFICATION	5.819703034092101E-7	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999960900124439	WITHOUT_CLASSIFICATION	3.909987556072246E-6	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999965590011154	WITHOUT_CLASSIFICATION	3.4409988846166145E-6	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999977796526197	WITHOUT_CLASSIFICATION	2.2203473802159948E-6	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999950210564655	WITHOUT_CLASSIFICATION	4.978943534455271E-6	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999890621118392	WITHOUT_CLASSIFICATION	1.0937888160770719E-5	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999906298630822	WITHOUT_CLASSIFICATION	9.370136917862492E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999978016658352	WITHOUT_CLASSIFICATION	2.1983341648254044E-6	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999915858300207	WITHOUT_CLASSIFICATION	8.414169979370602E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999562772753816	WITHOUT_CLASSIFICATION	4.3722724618324314E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999750136389814	WITHOUT_CLASSIFICATION	2.4986361018553988E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999760330626616	WITHOUT_CLASSIFICATION	2.3966937338407783E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999858143437206	WITHOUT_CLASSIFICATION	1.4185656279431626E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999792761139406	WITHOUT_CLASSIFICATION	2.0723886059505615E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999830519341766	WITHOUT_CLASSIFICATION	1.6948065823442076E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999949224028032	WITHOUT_CLASSIFICATION	5.077597196863267E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.999999383886116	WITHOUT_CLASSIFICATION	6.161138840982424E-7	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999997830356755	WITHOUT_CLASSIFICATION	2.169643246210641E-7	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999891913207145	WITHOUT_CLASSIFICATION	1.080867928545008E-5	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9999491256826851	WITHOUT_CLASSIFICATION	5.0874317314872445E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999946104137646	WITHOUT_CLASSIFICATION	5.389586235318781E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.999987222006042	WITHOUT_CLASSIFICATION	1.2777993958118636E-5	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999983291728068	WITHOUT_CLASSIFICATION	1.6708271931422353E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999971764491965	WITHOUT_CLASSIFICATION	2.823550803475063E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999811796448379	WITHOUT_CLASSIFICATION	1.8820355162027988E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999986343883008	WITHOUT_CLASSIFICATION	1.3656116991480866E-6	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.999922558261495	WITHOUT_CLASSIFICATION	7.74417385049915E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999868032204529	WITHOUT_CLASSIFICATION	1.319677954713781E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999868032204529	WITHOUT_CLASSIFICATION	1.319677954713781E-5	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999994138968094	WITHOUT_CLASSIFICATION	5.86103190636799E-7	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9998298097214523	WITHOUT_CLASSIFICATION	1.7019027854772495E-4	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999626499459385	WITHOUT_CLASSIFICATION	3.735005406149307E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999874876880693	WITHOUT_CLASSIFICATION	1.2512311930698373E-5	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.999998507980689	WITHOUT_CLASSIFICATION	1.4920193109803263E-6	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.999988159237154	WITHOUT_CLASSIFICATION	1.1840762845993954E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999908287323653	WITHOUT_CLASSIFICATION	9.171267634597819E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.999997183683548	WITHOUT_CLASSIFICATION	2.816316452107319E-6	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999989831050405	WITHOUT_CLASSIFICATION	1.016894959485885E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999989334872665	WITHOUT_CLASSIFICATION	1.0665127334051568E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999876948733933	WITHOUT_CLASSIFICATION	1.2305126606598669E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999831866909282	WITHOUT_CLASSIFICATION	1.6813309071837706E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999888955638875	WITHOUT_CLASSIFICATION	1.1104436112566948E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999885047028092	WITHOUT_CLASSIFICATION	1.1495297190815412E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9979527253586151	WITHOUT_CLASSIFICATION	0.0020472746413848527	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999857634938046	WITHOUT_CLASSIFICATION	1.4236506195361703E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999998861409866	WITHOUT_CLASSIFICATION	1.1385901342418233E-7	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999997227515464	WITHOUT_CLASSIFICATION	2.7724845370078024E-7	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999734749467054	WITHOUT_CLASSIFICATION	2.6525053294563984E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999971606346009	WITHOUT_CLASSIFICATION	2.8393653992028795E-6	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.999965614228296	WITHOUT_CLASSIFICATION	3.438577170395441E-5	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999973342564089	WITHOUT_CLASSIFICATION	2.6657435910909963E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999935646525379	WITHOUT_CLASSIFICATION	6.43534746207516E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.999997183683548	WITHOUT_CLASSIFICATION	2.816316452107319E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999954935453889	WITHOUT_CLASSIFICATION	4.50645461113103E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999954935453889	WITHOUT_CLASSIFICATION	4.50645461113103E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999935646525379	WITHOUT_CLASSIFICATION	6.43534746207516E-6	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999666275467104	WITHOUT_CLASSIFICATION	3.3372453289623195E-5	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999992306082717	WITHOUT_CLASSIFICATION	7.693917282142489E-7	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999966772554567	WITHOUT_CLASSIFICATION	3.3227445432046612E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999990809456554	WITHOUT_CLASSIFICATION	9.190543446438856E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999913933135506	WITHOUT_CLASSIFICATION	8.606686449421293E-6	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999915732546639	WITHOUT_CLASSIFICATION	8.426745336179216E-6	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999915757999681	WITHOUT_CLASSIFICATION	8.424200031870882E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999987180345131	WITHOUT_CLASSIFICATION	1.2819654869125312E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999874196332876	WITHOUT_CLASSIFICATION	1.2580366712317948E-5	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999964917491149	WITHOUT_CLASSIFICATION	3.50825088514972E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999316816040642	WITHOUT_CLASSIFICATION	6.83183959358069E-5	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999963688854032	WITHOUT_CLASSIFICATION	3.6311145967754534E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999827227335149	WITHOUT_CLASSIFICATION	1.727726648524914E-5	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999827227335149	WITHOUT_CLASSIFICATION	1.727726648524914E-5	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999948831928025	WITHOUT_CLASSIFICATION	5.116807197553527E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.999986774503079	WITHOUT_CLASSIFICATION	1.3225496920985527E-5	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999981650835802	WITHOUT_CLASSIFICATION	1.834916419787387E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999994606400255	WITHOUT_CLASSIFICATION	5.393599745429658E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999994606400255	WITHOUT_CLASSIFICATION	5.393599745429658E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.999993546492083	WITHOUT_CLASSIFICATION	6.453507917023027E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.999993546492083	WITHOUT_CLASSIFICATION	6.453507917023027E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999981646427818	WITHOUT_CLASSIFICATION	1.8353572181663736E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999685799204663	WITHOUT_CLASSIFICATION	3.142007953375091E-5	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999884304683876	WITHOUT_CLASSIFICATION	1.1569531612358833E-5	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999922257246176	WITHOUT_CLASSIFICATION	7.774275382401496E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999888294822344	WITHOUT_CLASSIFICATION	1.1170517765537374E-5	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999972798440431	WITHOUT_CLASSIFICATION	2.720155956937806E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999995524395454	WITHOUT_CLASSIFICATION	4.4756045462137344E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999981646427818	WITHOUT_CLASSIFICATION	1.8353572181663736E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.999999941050084	WITHOUT_CLASSIFICATION	5.894991587021294E-8	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999685799204663	WITHOUT_CLASSIFICATION	3.142007953375091E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999992810884126	WITHOUT_CLASSIFICATION	7.189115874799805E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999884304683876	WITHOUT_CLASSIFICATION	1.1569531612358833E-5	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.999922257246176	WITHOUT_CLASSIFICATION	7.774275382401496E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999888294822344	WITHOUT_CLASSIFICATION	1.1170517765537374E-5	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999242822649335	WITHOUT_CLASSIFICATION	7.571773506656281E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999948526830003	WITHOUT_CLASSIFICATION	5.147316999678469E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999945041248756	WITHOUT_CLASSIFICATION	5.495875124476537E-6	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999947496962831	WITHOUT_CLASSIFICATION	5.250303716877834E-6	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.999989147107802	WITHOUT_CLASSIFICATION	1.0852892198107346E-5	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999921760124643	WITHOUT_CLASSIFICATION	7.823987535775825E-6	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999979116230306	WITHOUT_CLASSIFICATION	2.0883769693493274E-6	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999874054801204	WITHOUT_CLASSIFICATION	1.2594519879580915E-5	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999460427903856	WITHOUT_CLASSIFICATION	5.395720961437667E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999745365637928	WITHOUT_CLASSIFICATION	2.5463436207154463E-5	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999918427124443	WITHOUT_CLASSIFICATION	8.157287555567956E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999917634345392	WITHOUT_CLASSIFICATION	8.236565460723434E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999946699168842	WITHOUT_CLASSIFICATION	5.330083115715294E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999779579542899	WITHOUT_CLASSIFICATION	2.204204571000543E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999765393767729	WITHOUT_CLASSIFICATION	2.346062322720483E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999795936360157	WITHOUT_CLASSIFICATION	2.0406363984289365E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999727048880575	WITHOUT_CLASSIFICATION	2.7295111942510896E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999946752980461	WITHOUT_CLASSIFICATION	5.3247019539081945E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999592622734836	WITHOUT_CLASSIFICATION	4.0737726516483916E-5	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999805306261763	WITHOUT_CLASSIFICATION	1.9469373823654106E-5	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.999886551626554	WITHOUT_CLASSIFICATION	1.1344837344603118E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999937729923306	WITHOUT_CLASSIFICATION	6.227007669337803E-6	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999900642735549	WITHOUT_CLASSIFICATION	9.93572644508011E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999935656408753	WITHOUT_CLASSIFICATION	6.434359124681805E-6	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999916589862899	WITHOUT_CLASSIFICATION	8.341013710023488E-6	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999897938356069	WITHOUT_CLASSIFICATION	1.02061643931561E-5	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999851037737011	WITHOUT_CLASSIFICATION	1.4896226298780058E-5	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999990166339843	WITHOUT_CLASSIFICATION	9.833660157158335E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9998415715015279	WITHOUT_CLASSIFICATION	1.584284984720356E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999778171497654	WITHOUT_CLASSIFICATION	2.2182850234653446E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999913933135506	WITHOUT_CLASSIFICATION	8.606686449421293E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999844158754412	WITHOUT_CLASSIFICATION	1.5584124558815727E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999960521921701	WITHOUT_CLASSIFICATION	3.947807829889258E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.999990311079597	WITHOUT_CLASSIFICATION	9.688920402939068E-6	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.999993114826306	WITHOUT_CLASSIFICATION	6.885173694015284E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999940481606332	WITHOUT_CLASSIFICATION	5.9518393667821276E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999997218761232	WITHOUT_CLASSIFICATION	2.7812387684517417E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999999691005421	WITHOUT_CLASSIFICATION	3.089945780922465E-8	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999996682465726	WITHOUT_CLASSIFICATION	3.3175342734936174E-7	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999966716208617	WITHOUT_CLASSIFICATION	3.328379138358688E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999994626309089	WITHOUT_CLASSIFICATION	5.373690910768281E-7	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999965641619892	WITHOUT_CLASSIFICATION	3.4358380107284685E-6	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999997764206318	WITHOUT_CLASSIFICATION	2.2357936829741318E-7	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999997180246315	WITHOUT_CLASSIFICATION	2.8197536844801676E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999984196191043	WITHOUT_CLASSIFICATION	1.5803808957340756E-6	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999965046283518	WITHOUT_CLASSIFICATION	3.495371648141128E-6	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999981831336837	WITHOUT_CLASSIFICATION	1.8168663163349915E-6	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999980419986899	WITHOUT_CLASSIFICATION	1.958001310042502E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999917634345392	WITHOUT_CLASSIFICATION	8.236565460723434E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999946699168842	WITHOUT_CLASSIFICATION	5.330083115715294E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999779579542899	WITHOUT_CLASSIFICATION	2.204204571000543E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999765393767729	WITHOUT_CLASSIFICATION	2.346062322720483E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999795936360157	WITHOUT_CLASSIFICATION	2.0406363984289365E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999727048880575	WITHOUT_CLASSIFICATION	2.7295111942510896E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.999984211550972	WITHOUT_CLASSIFICATION	1.5788449028081748E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999946752980461	WITHOUT_CLASSIFICATION	5.3247019539081945E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999990166339843	WITHOUT_CLASSIFICATION	9.833660157158335E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9998415715015279	WITHOUT_CLASSIFICATION	1.584284984720356E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999778171497654	WITHOUT_CLASSIFICATION	2.2182850234653446E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999989409622498	WITHOUT_CLASSIFICATION	1.05903775018907E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999989409622498	WITHOUT_CLASSIFICATION	1.05903775018907E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999844158754412	WITHOUT_CLASSIFICATION	1.5584124558815727E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999960521921701	WITHOUT_CLASSIFICATION	3.947807829889258E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.999990311079597	WITHOUT_CLASSIFICATION	9.688920402939068E-6	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9999944528383268	WITHOUT_CLASSIFICATION	5.547161673189588E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.999952145150489	WITHOUT_CLASSIFICATION	4.7854849510949344E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.999997019861808	WITHOUT_CLASSIFICATION	2.9801381920998526E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.999998930720155	WITHOUT_CLASSIFICATION	1.0692798449948792E-6	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999959224878936	WITHOUT_CLASSIFICATION	4.0775121064050435E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999619503783932	WITHOUT_CLASSIFICATION	3.804962160683591E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999945193510695	WITHOUT_CLASSIFICATION	5.4806489305161005E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.999994679229048	WITHOUT_CLASSIFICATION	5.3207709520601025E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.999926480663187	WITHOUT_CLASSIFICATION	7.3519336813E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999977678043437	WITHOUT_CLASSIFICATION	2.2321956562956208E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999544688865006	WITHOUT_CLASSIFICATION	4.553111349930938E-5	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.999997387691591	WITHOUT_CLASSIFICATION	2.6123084089995374E-6	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999950793556316	WITHOUT_CLASSIFICATION	4.920644368341003E-6	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999960216849761	WITHOUT_CLASSIFICATION	3.978315023884279E-6	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.999992016177612	WITHOUT_CLASSIFICATION	7.983822387899182E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999700962338962	WITHOUT_CLASSIFICATION	2.990376610368513E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999990359836035	WITHOUT_CLASSIFICATION	9.64016396576063E-7	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999994436200003	WITHOUT_CLASSIFICATION	5.5637999971035336E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999968289330998	WITHOUT_CLASSIFICATION	3.17106690012713E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.99999864914189	WITHOUT_CLASSIFICATION	1.3508581099458392E-6	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999907282892155	WITHOUT_CLASSIFICATION	9.271710784482143E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999952988220413	WITHOUT_CLASSIFICATION	4.701177958798567E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999931435584127	WITHOUT_CLASSIFICATION	6.856441587200305E-6	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999995994095887	WITHOUT_CLASSIFICATION	4.005904112226514E-7	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999998141967967	WITHOUT_CLASSIFICATION	1.8580320326931575E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999994074752562	WITHOUT_CLASSIFICATION	5.925247437527281E-7	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999998969948247	WITHOUT_CLASSIFICATION	1.0300517528784943E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999976192959923	WITHOUT_CLASSIFICATION	2.3807040078247384E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9999372746888052	WITHOUT_CLASSIFICATION	6.272531119477343E-5	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999964855197977	WITHOUT_CLASSIFICATION	3.514480202337092E-6	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999992302704406	WITHOUT_CLASSIFICATION	7.697295593180295E-7	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.999993842831701	WITHOUT_CLASSIFICATION	6.157168299070579E-6	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.999999935860935	WITHOUT_CLASSIFICATION	6.413906490746356E-8	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.999998582317305	WITHOUT_CLASSIFICATION	1.4176826950152053E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999992810884126	WITHOUT_CLASSIFICATION	7.189115874799805E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999842731328735	WITHOUT_CLASSIFICATION	1.5726867126402608E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999988795949015	WITHOUT_CLASSIFICATION	1.120405098422645E-6	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999929579096278	WITHOUT_CLASSIFICATION	7.0420903721576296E-6	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999245830820014	WITHOUT_CLASSIFICATION	7.541691799859707E-5	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999957086457211	WITHOUT_CLASSIFICATION	4.2913542789459025E-6	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999704653604279	WITHOUT_CLASSIFICATION	2.953463957208014E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999821958949989	WITHOUT_CLASSIFICATION	1.780410500099132E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999821958949989	WITHOUT_CLASSIFICATION	1.780410500099132E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999821958949989	WITHOUT_CLASSIFICATION	1.780410500099132E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999821958949989	WITHOUT_CLASSIFICATION	1.780410500099132E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999821958949989	WITHOUT_CLASSIFICATION	1.780410500099132E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999821958949989	WITHOUT_CLASSIFICATION	1.780410500099132E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999955528530136	WITHOUT_CLASSIFICATION	4.4471469865064284E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999922261395094	WITHOUT_CLASSIFICATION	7.7738604905457E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999753227048735	WITHOUT_CLASSIFICATION	2.4677295126478937E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999753227048735	WITHOUT_CLASSIFICATION	2.4677295126478937E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999753227048735	WITHOUT_CLASSIFICATION	2.4677295126478937E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.999997182384355	WITHOUT_CLASSIFICATION	2.8176156449702385E-6	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.999999252014909	WITHOUT_CLASSIFICATION	7.479850909426301E-7	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.999975714653931	WITHOUT_CLASSIFICATION	2.428534606909761E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9997679610345281	WITHOUT_CLASSIFICATION	2.3203896547179822E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9997679610345281	WITHOUT_CLASSIFICATION	2.3203896547179822E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999969043628413	WITHOUT_CLASSIFICATION	3.0956371586076017E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999992906724562	WITHOUT_CLASSIFICATION	7.093275439551896E-7	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999130060124335	WITHOUT_CLASSIFICATION	8.699398756650232E-5	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999996039246215	WITHOUT_CLASSIFICATION	3.9607537846721813E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999885365788813	WITHOUT_CLASSIFICATION	1.146342111867421E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995630555695	WITHOUT_CLASSIFICATION	4.3694443057219783E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995630555695	WITHOUT_CLASSIFICATION	4.3694443057219783E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999995630555695	WITHOUT_CLASSIFICATION	4.3694443057219783E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999982539271677	WITHOUT_CLASSIFICATION	1.7460728322646752E-6	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984329359295	WITHOUT_CLASSIFICATION	1.567064070482896E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999949971208297	WITHOUT_CLASSIFICATION	5.0028791702910655E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.999999750583983	WITHOUT_CLASSIFICATION	2.494160169115292E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999905375812126	WITHOUT_CLASSIFICATION	9.462418787448149E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.999998933705834	WITHOUT_CLASSIFICATION	1.0662941659526806E-6	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920827238371	WITHOUT_CLASSIFICATION	7.917276162839782E-6	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920827238371	WITHOUT_CLASSIFICATION	7.917276162839782E-6	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.999999359949959	WITHOUT_CLASSIFICATION	6.400500409351636E-7	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999927129267993	WITHOUT_CLASSIFICATION	7.287073200722223E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999993358695485	WITHOUT_CLASSIFICATION	6.641304515888758E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999002249255156	WITHOUT_CLASSIFICATION	9.977507448444922E-5	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999729836910459	WITHOUT_CLASSIFICATION	2.701630895408028E-5	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.999998981929545	WITHOUT_CLASSIFICATION	1.0180704550950258E-6	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999996216399172	WITHOUT_CLASSIFICATION	3.7836008284505405E-7	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9998950745413955	WITHOUT_CLASSIFICATION	1.0492545860444847E-4	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.999999781226872	WITHOUT_CLASSIFICATION	2.1877312796779632E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999993097185661	WITHOUT_CLASSIFICATION	6.90281433777595E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999845808684642	WITHOUT_CLASSIFICATION	1.541913153572348E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999845808684642	WITHOUT_CLASSIFICATION	1.541913153572348E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999845808684642	WITHOUT_CLASSIFICATION	1.541913153572348E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999845808684642	WITHOUT_CLASSIFICATION	1.541913153572348E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999845808684642	WITHOUT_CLASSIFICATION	1.541913153572348E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999977167375916	WITHOUT_CLASSIFICATION	2.283262408317006E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999977167375916	WITHOUT_CLASSIFICATION	2.283262408317006E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999977167375916	WITHOUT_CLASSIFICATION	2.283262408317006E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999977167375916	WITHOUT_CLASSIFICATION	2.283262408317006E-6	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999976301884916	WITHOUT_CLASSIFICATION	2.3698115083945954E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999864645815996	WITHOUT_CLASSIFICATION	1.3535418400313627E-5	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9999845768669132	WITHOUT_CLASSIFICATION	1.542313308683635E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999538190643106	WITHOUT_CLASSIFICATION	4.618093568936521E-5	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999997740369441	WITHOUT_CLASSIFICATION	2.2596305605614374E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999801862214236	WITHOUT_CLASSIFICATION	1.981377857634188E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999998878737759	WITHOUT_CLASSIFICATION	1.1212622414484041E-7	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999983677609744	WITHOUT_CLASSIFICATION	1.6322390256808326E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999800572602534	WITHOUT_CLASSIFICATION	1.994273974651864E-5	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999993252032663	WITHOUT_CLASSIFICATION	6.747967337347137E-7	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999833567378095	WITHOUT_CLASSIFICATION	1.6643262190583046E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999825472644633	WITHOUT_CLASSIFICATION	1.7452735536665414E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999951930376175	WITHOUT_CLASSIFICATION	4.806962382547575E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999880750579307	WITHOUT_CLASSIFICATION	1.192494206916847E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999880750579307	WITHOUT_CLASSIFICATION	1.192494206916847E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999880750579307	WITHOUT_CLASSIFICATION	1.192494206916847E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999946472983607	WITHOUT_CLASSIFICATION	5.352701639210286E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999946472983607	WITHOUT_CLASSIFICATION	5.352701639210286E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999244632527865	WITHOUT_CLASSIFICATION	7.553674721352748E-5	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999967466862401	WITHOUT_CLASSIFICATION	3.2533137598581078E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999868482340489	WITHOUT_CLASSIFICATION	1.3151765950989813E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999980957808949	WITHOUT_CLASSIFICATION	1.9042191050997816E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999980957808949	WITHOUT_CLASSIFICATION	1.9042191050997816E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999980957808949	WITHOUT_CLASSIFICATION	1.9042191050997816E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999998059775435	WITHOUT_CLASSIFICATION	1.9402245665367764E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999949675229416	WITHOUT_CLASSIFICATION	5.032477058466484E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.99999809028367	WITHOUT_CLASSIFICATION	1.9097163298647503E-6	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999409365522438	WITHOUT_CLASSIFICATION	5.906344775617191E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999988268321123	WITHOUT_CLASSIFICATION	1.173167887717066E-6	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9998961572837308	WITHOUT_CLASSIFICATION	1.0384271626920963E-4	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999994276827456	WITHOUT_CLASSIFICATION	5.723172543010382E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999989947716462	WITHOUT_CLASSIFICATION	1.0052283537399472E-6	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999920096840236	WITHOUT_CLASSIFICATION	7.99031597637401E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999940469639474	WITHOUT_CLASSIFICATION	5.9530360526069144E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999940469639474	WITHOUT_CLASSIFICATION	5.9530360526069144E-5	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9999604537095523	WITHOUT_CLASSIFICATION	3.9546290447697317E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999527747853449	WITHOUT_CLASSIFICATION	4.722521465497098E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999998448422291	WITHOUT_CLASSIFICATION	1.551577708944241E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999998448422291	WITHOUT_CLASSIFICATION	1.551577708944241E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999998448422291	WITHOUT_CLASSIFICATION	1.551577708944241E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999998448422291	WITHOUT_CLASSIFICATION	1.551577708944241E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.999998448422291	WITHOUT_CLASSIFICATION	1.551577708944241E-6	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999973213190082	WITHOUT_CLASSIFICATION	2.6786809917742856E-6	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9996543916084447	WITHOUT_CLASSIFICATION	3.4560839155527373E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999881299230059	WITHOUT_CLASSIFICATION	1.1870076993993592E-5	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999980118740529	WITHOUT_CLASSIFICATION	1.988125947172748E-6	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999119497684967	WITHOUT_CLASSIFICATION	8.805023150330817E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999958853752997	WITHOUT_CLASSIFICATION	4.114624700201568E-6	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999995397444726	WITHOUT_CLASSIFICATION	4.6025552726172343E-7	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999987785942998	WITHOUT_CLASSIFICATION	1.2214057002889094E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999345169519389	WITHOUT_CLASSIFICATION	6.548304806099856E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999345169519389	WITHOUT_CLASSIFICATION	6.548304806099856E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999997240087215	WITHOUT_CLASSIFICATION	2.7599127842194496E-7	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999950016699961	WITHOUT_CLASSIFICATION	4.998330003898609E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9993669224944096	WITHOUT_CLASSIFICATION	6.330775055903838E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9993669224944096	WITHOUT_CLASSIFICATION	6.330775055903838E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999969363256375	WITHOUT_CLASSIFICATION	3.063674362589993E-6	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999880176467637	WITHOUT_CLASSIFICATION	1.1982353236255779E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999984867522305	WITHOUT_CLASSIFICATION	1.5132477695002923E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999964066239455	WITHOUT_CLASSIFICATION	3.5933760545277243E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999898827780407	WITHOUT_CLASSIFICATION	1.0117221959420995E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999994089233163	WITHOUT_CLASSIFICATION	5.910766836649058E-7	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999994755998293	WITHOUT_CLASSIFICATION	5.244001706894794E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999972848892431	WITHOUT_CLASSIFICATION	2.7151107569436753E-6	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999985906899709	WITHOUT_CLASSIFICATION	1.4093100292078753E-6	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999906187218885	WITHOUT_CLASSIFICATION	9.381278111500376E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999912447140007	WITHOUT_CLASSIFICATION	8.755285999225103E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999912447140007	WITHOUT_CLASSIFICATION	8.755285999225103E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999912447140007	WITHOUT_CLASSIFICATION	8.755285999225103E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999912447140007	WITHOUT_CLASSIFICATION	8.755285999225103E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999806520654092	WITHOUT_CLASSIFICATION	1.9347934590855718E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999788987105045	WITHOUT_CLASSIFICATION	2.110128949553626E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999956547851401	WITHOUT_CLASSIFICATION	4.345214859966633E-6	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987622093667	WITHOUT_CLASSIFICATION	1.2377906332652709E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999986629507487	WITHOUT_CLASSIFICATION	1.3370492513549855E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999966251633428	WITHOUT_CLASSIFICATION	3.374836657323172E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999966251633428	WITHOUT_CLASSIFICATION	3.374836657323172E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999966251633428	WITHOUT_CLASSIFICATION	3.374836657323172E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999966251633428	WITHOUT_CLASSIFICATION	3.374836657323172E-6	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9995774639100551	WITHOUT_CLASSIFICATION	4.2253608994485554E-4	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999927285832274	WITHOUT_CLASSIFICATION	7.27141677252487E-6	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999996198764921	WITHOUT_CLASSIFICATION	3.8012350785558095E-7	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999938170013793	WITHOUT_CLASSIFICATION	6.182998620748289E-6	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999998880927444	WITHOUT_CLASSIFICATION	1.1190725557742625E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999624306505931	WITHOUT_CLASSIFICATION	3.75693494068743E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999995336619085	WITHOUT_CLASSIFICATION	4.6633809136995126E-7	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999497751818609	WITHOUT_CLASSIFICATION	5.0224818139147133E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999497751818609	WITHOUT_CLASSIFICATION	5.0224818139147133E-5	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999985882246967	WITHOUT_CLASSIFICATION	1.4117753033311512E-6	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999971424331716	WITHOUT_CLASSIFICATION	2.8575668283901268E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9998890533626656	WITHOUT_CLASSIFICATION	1.1094663733438414E-4	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999979828842643	WITHOUT_CLASSIFICATION	2.017115735650606E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999994042478754	WITHOUT_CLASSIFICATION	5.957521247367612E-7	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.999999975674318	WITHOUT_CLASSIFICATION	2.432568193809321E-8	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.999994930641544	WITHOUT_CLASSIFICATION	5.069358456013263E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999994377459596	WITHOUT_CLASSIFICATION	5.62254040488428E-7	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999864384884641	WITHOUT_CLASSIFICATION	1.3561511535826008E-5	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999712206493521	WITHOUT_CLASSIFICATION	2.877935064789402E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999998701914481	WITHOUT_CLASSIFICATION	1.2980855187138777E-7	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999931652869883	WITHOUT_CLASSIFICATION	6.834713011706914E-6	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999164153801	WITHOUT_CLASSIFICATION	8.358461979958915E-8	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999815024787633	WITHOUT_CLASSIFICATION	1.8497521236658733E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999815024787633	WITHOUT_CLASSIFICATION	1.8497521236658733E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999980212335665	WITHOUT_CLASSIFICATION	1.978766433464855E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999981352867615	WITHOUT_CLASSIFICATION	1.8647132384275298E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999989122667018	WITHOUT_CLASSIFICATION	1.0877332982188543E-6	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.999997908441934	WITHOUT_CLASSIFICATION	2.0915580658602164E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999451935477888	WITHOUT_CLASSIFICATION	5.480645221127407E-5	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999962613502597	WITHOUT_CLASSIFICATION	3.7386497403598176E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999917533665367	WITHOUT_CLASSIFICATION	8.246633463353126E-6	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999875808666031	WITHOUT_CLASSIFICATION	1.241913339689951E-5	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999972829634144	WITHOUT_CLASSIFICATION	2.717036585501136E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999971801761773	WITHOUT_CLASSIFICATION	2.8198238225969476E-6	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999967180870579	WITHOUT_CLASSIFICATION	3.2819129420804516E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999137156717782	WITHOUT_CLASSIFICATION	8.628432822178551E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999137156717782	WITHOUT_CLASSIFICATION	8.628432822178551E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999842806725696	WITHOUT_CLASSIFICATION	1.571932743045893E-5	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.999999752229389	WITHOUT_CLASSIFICATION	2.4777061098053475E-7	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999984923419932	WITHOUT_CLASSIFICATION	1.507658006774917E-6	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999906652598074	WITHOUT_CLASSIFICATION	9.33474019270879E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999973337705291	WITHOUT_CLASSIFICATION	2.6662294709809374E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9998067874979619	WITHOUT_CLASSIFICATION	1.9321250203806323E-4	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999980925178321	WITHOUT_CLASSIFICATION	1.9074821679088864E-6	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999820294801511	WITHOUT_CLASSIFICATION	1.7970519848943287E-5	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.999992565435787	WITHOUT_CLASSIFICATION	7.434564213066724E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999983853883789	WITHOUT_CLASSIFICATION	1.6146116211730144E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.999976265010084	WITHOUT_CLASSIFICATION	2.3734989916131214E-5	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999998714093924	WITHOUT_CLASSIFICATION	1.2859060759432696E-7	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999974724599753	WITHOUT_CLASSIFICATION	2.527540024702242E-6	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999999849535067	WITHOUT_CLASSIFICATION	1.5046493277690977E-8	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999999847324881	WITHOUT_CLASSIFICATION	1.5267511976427736E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999993299739414	WITHOUT_CLASSIFICATION	6.700260586837756E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.99999709859151	WITHOUT_CLASSIFICATION	2.9014084900760995E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999958919203521	WITHOUT_CLASSIFICATION	4.1080796479364916E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999955784528076	WITHOUT_CLASSIFICATION	4.4215471924529755E-6	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.999991941862128	WITHOUT_CLASSIFICATION	8.058137871955294E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.999999684757953	WITHOUT_CLASSIFICATION	3.152420470233646E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.999981076903676	WITHOUT_CLASSIFICATION	1.8923096323964106E-5	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999985587513549	WITHOUT_CLASSIFICATION	1.4412486451723638E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999981556616979	WITHOUT_CLASSIFICATION	1.8443383020746339E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.999985458576128	WITHOUT_CLASSIFICATION	1.4541423871892518E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999346769510725	WITHOUT_CLASSIFICATION	6.53230489274534E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999994585698064	WITHOUT_CLASSIFICATION	5.414301935299695E-7	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999901470874589	WITHOUT_CLASSIFICATION	9.852912541104826E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999995792811935	WITHOUT_CLASSIFICATION	4.207188064396585E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999997263986419	WITHOUT_CLASSIFICATION	2.736013581122489E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999937783347846	WITHOUT_CLASSIFICATION	6.2216652153618624E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999985872848245	WITHOUT_CLASSIFICATION	1.4127151755027676E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999985872848245	WITHOUT_CLASSIFICATION	1.4127151755027676E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999985872848245	WITHOUT_CLASSIFICATION	1.4127151755027676E-6	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999768544595	WITHOUT_CLASSIFICATION	2.314554042267707E-8	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999715554477234	WITHOUT_CLASSIFICATION	2.844455227658776E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999992725757877	WITHOUT_CLASSIFICATION	7.274242123265862E-7	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999989394162478	WITHOUT_CLASSIFICATION	1.0605837521508803E-6	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999997262667841	WITHOUT_CLASSIFICATION	2.7373321587733975E-7	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9999934499112634	WITHOUT_CLASSIFICATION	6.550088736664411E-6	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999985902730828	WITHOUT_CLASSIFICATION	1.409726917152633E-6	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999944483702993	WITHOUT_CLASSIFICATION	5.551629700677086E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999916700192791	WITHOUT_CLASSIFICATION	8.329980720803081E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999916700192791	WITHOUT_CLASSIFICATION	8.329980720803081E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999916700192791	WITHOUT_CLASSIFICATION	8.329980720803081E-6	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999999524286008	WITHOUT_CLASSIFICATION	4.7571399096648955E-8	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999867797916594	WITHOUT_CLASSIFICATION	1.3220208340669605E-5	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999922513053977	WITHOUT_CLASSIFICATION	7.748694602339689E-6	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999995529123207	WITHOUT_CLASSIFICATION	4.470876793192138E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999986243938632	WITHOUT_CLASSIFICATION	1.37560613682888E-6	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999882582997915	WITHOUT_CLASSIFICATION	1.1741700208519579E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999918010057023	WITHOUT_CLASSIFICATION	8.198994297668395E-6	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.999996304328465	WITHOUT_CLASSIFICATION	3.6956715351722524E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999025773673	WITHOUT_CLASSIFICATION	9.742263268104136E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999437647849553	WITHOUT_CLASSIFICATION	5.623521504472888E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999378198446591	WITHOUT_CLASSIFICATION	6.218015534085162E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999990359836035	WITHOUT_CLASSIFICATION	9.64016396576063E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999990359836035	WITHOUT_CLASSIFICATION	9.64016396576063E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999549835903	WITHOUT_CLASSIFICATION	4.5016409614184754E-8	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999994162120724	WITHOUT_CLASSIFICATION	5.83787927555804E-7	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999999942568181	WITHOUT_CLASSIFICATION	5.743181922182413E-9	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999952749179668	WITHOUT_CLASSIFICATION	4.725082033183384E-6	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999714258815157	WITHOUT_CLASSIFICATION	2.857411848436159E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999949033125348	WITHOUT_CLASSIFICATION	5.096687465105884E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999988750367819	WITHOUT_CLASSIFICATION	1.1249632181381172E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999988750367819	WITHOUT_CLASSIFICATION	1.1249632181381172E-6	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.999997564827208	WITHOUT_CLASSIFICATION	2.4351727919964492E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.999942818186801	WITHOUT_CLASSIFICATION	5.718181319902527E-5	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997320779424153	WITHOUT_CLASSIFICATION	2.6792205758474906E-4	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999999545337543	WITHOUT_CLASSIFICATION	4.546624567462718E-8	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999995225235722	WITHOUT_CLASSIFICATION	4.774764278571313E-7	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999919675944667	WITHOUT_CLASSIFICATION	8.032405533286483E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9996841541745319	WITHOUT_CLASSIFICATION	3.1584582546806E-4	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999990874886653	WITHOUT_CLASSIFICATION	9.12511334752155E-7	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999994350956595	WITHOUT_CLASSIFICATION	5.649043405943893E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.999998270785719	WITHOUT_CLASSIFICATION	1.7292142810189165E-6	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999995491099363	WITHOUT_CLASSIFICATION	4.5089006377351467E-7	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999937567551455	WITHOUT_CLASSIFICATION	6.243244854567954E-6	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999978124852352	WITHOUT_CLASSIFICATION	2.1875147647125326E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.99999834428573	WITHOUT_CLASSIFICATION	1.6557142699380922E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.99999834428573	WITHOUT_CLASSIFICATION	1.6557142699380922E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.99999834428573	WITHOUT_CLASSIFICATION	1.6557142699380922E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.99999834428573	WITHOUT_CLASSIFICATION	1.6557142699380922E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999999045664943	WITHOUT_CLASSIFICATION	9.543350566457212E-8	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999999658221678	WITHOUT_CLASSIFICATION	3.417783222060202E-8	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9998982258828673	WITHOUT_CLASSIFICATION	1.0177411713272644E-4	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999974980475053	WITHOUT_CLASSIFICATION	2.501952494704423E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999998210156353	WITHOUT_CLASSIFICATION	1.789843647291235E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999980478263425	WITHOUT_CLASSIFICATION	1.9521736574531374E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999993456511008	WITHOUT_CLASSIFICATION	6.543488991464342E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999936446401201	WITHOUT_CLASSIFICATION	6.355359879928899E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999918346891787	WITHOUT_CLASSIFICATION	8.165310821212434E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999732642415928	WITHOUT_CLASSIFICATION	2.6735758407168688E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999800659097775	WITHOUT_CLASSIFICATION	1.993409022249109E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999800659097775	WITHOUT_CLASSIFICATION	1.993409022249109E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999800659097775	WITHOUT_CLASSIFICATION	1.993409022249109E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999908449810754	WITHOUT_CLASSIFICATION	9.155018924600232E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999406920069496	WITHOUT_CLASSIFICATION	5.9307993050369874E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999930181698196	WITHOUT_CLASSIFICATION	6.981830180361244E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999937120521144	WITHOUT_CLASSIFICATION	6.28794788559714E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999937120521144	WITHOUT_CLASSIFICATION	6.28794788559714E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999998725170173	WITHOUT_CLASSIFICATION	1.2748298270301127E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999908449810754	WITHOUT_CLASSIFICATION	9.155018924600232E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999998519871323	WITHOUT_CLASSIFICATION	1.4801286773708702E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999994584695249	WITHOUT_CLASSIFICATION	5.415304751442238E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999992855412435	WITHOUT_CLASSIFICATION	7.144587565588112E-7	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999889806863784	WITHOUT_CLASSIFICATION	1.1019313621549951E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999650469691088	WITHOUT_CLASSIFICATION	3.4953030891094826E-5	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999965535574273	WITHOUT_CLASSIFICATION	3.446442572686526E-6	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999851741876088	WITHOUT_CLASSIFICATION	1.482581239120462E-5	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9997545457099618	WITHOUT_CLASSIFICATION	2.454542900381403E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999488991035123	WITHOUT_CLASSIFICATION	5.1100896487641746E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999488991035123	WITHOUT_CLASSIFICATION	5.1100896487641746E-5	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9999747809979357	WITHOUT_CLASSIFICATION	2.521900206423548E-5	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999778465120589	WITHOUT_CLASSIFICATION	2.215348794114005E-5	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999912217353142	WITHOUT_CLASSIFICATION	8.778264685891851E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999365554114	WITHOUT_CLASSIFICATION	6.344458851768611E-8	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999980261326392	WITHOUT_CLASSIFICATION	1.9738673607573123E-6	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9999978111886522	WITHOUT_CLASSIFICATION	2.1888113478527617E-6	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9997831788701326	WITHOUT_CLASSIFICATION	2.1682112986748262E-4	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999926483622702	WITHOUT_CLASSIFICATION	7.3516377298743735E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999646409157756	WITHOUT_CLASSIFICATION	3.5359084224316985E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999103990684304	WITHOUT_CLASSIFICATION	8.960093156970158E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999988044414414	WITHOUT_CLASSIFICATION	1.195558558565355E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999732642415928	WITHOUT_CLASSIFICATION	2.6735758407168688E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999732642415928	WITHOUT_CLASSIFICATION	2.6735758407168688E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999999304405808	WITHOUT_CLASSIFICATION	6.95594192188873E-8	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999998699480631	WITHOUT_CLASSIFICATION	1.3005193696000413E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999987860274965	WITHOUT_CLASSIFICATION	1.2139725034887234E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999950472818604	WITHOUT_CLASSIFICATION	4.952718139576259E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999987236421124	WITHOUT_CLASSIFICATION	1.2763578876431976E-6	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999989639520166	WITHOUT_CLASSIFICATION	1.036047983451157E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999996916607509	WITHOUT_CLASSIFICATION	3.083392491661694E-7	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.999996913399725	WITHOUT_CLASSIFICATION	3.0866002749357717E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999979318263917	WITHOUT_CLASSIFICATION	2.068173608220014E-6	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999969140441578	WITHOUT_CLASSIFICATION	3.0859558421770543E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999989132238656	WITHOUT_CLASSIFICATION	1.0867761344314662E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999988025980076	WITHOUT_CLASSIFICATION	1.1974019924873948E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999940481606332	WITHOUT_CLASSIFICATION	5.9518393667821276E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999940481606332	WITHOUT_CLASSIFICATION	5.9518393667821276E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999991568267145	WITHOUT_CLASSIFICATION	8.431732855320769E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.999997382889281	WITHOUT_CLASSIFICATION	2.617110719108104E-6	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999945250531025	WITHOUT_CLASSIFICATION	5.474946897425102E-6	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999050738037	WITHOUT_CLASSIFICATION	9.492619628541726E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999987289290583	WITHOUT_CLASSIFICATION	1.2710709417457646E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999990146381192	WITHOUT_CLASSIFICATION	9.853618807862934E-7	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999998677405379	WITHOUT_CLASSIFICATION	1.3225946211501647E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9999989627759688	WITHOUT_CLASSIFICATION	1.0372240311240696E-6	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999898548728066	WITHOUT_CLASSIFICATION	1.0145127193500661E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999994778093503	WITHOUT_CLASSIFICATION	5.221906497177799E-7	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999974296602492	WITHOUT_CLASSIFICATION	2.570339750871114E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999974854308897	WITHOUT_CLASSIFICATION	2.514569110179263E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999993774969061	WITHOUT_CLASSIFICATION	6.225030938884216E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999359867306188	WITHOUT_CLASSIFICATION	6.401326938117208E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999993456511008	WITHOUT_CLASSIFICATION	6.543488991464342E-7	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9999986364617526	WITHOUT_CLASSIFICATION	1.3635382473589979E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999958715927478	WITHOUT_CLASSIFICATION	4.128407252209255E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999958715927478	WITHOUT_CLASSIFICATION	4.128407252209255E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999958715927478	WITHOUT_CLASSIFICATION	4.128407252209255E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999181062746416	WITHOUT_CLASSIFICATION	8.189372535847939E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999181062746416	WITHOUT_CLASSIFICATION	8.189372535847939E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999935834100611	WITHOUT_CLASSIFICATION	6.416589938925655E-6	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9999783322961739	WITHOUT_CLASSIFICATION	2.166770382605869E-5	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999941213656591	WITHOUT_CLASSIFICATION	5.8786343409110004E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999994196752032	WITHOUT_CLASSIFICATION	5.803247967945488E-7	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999883960315277	WITHOUT_CLASSIFICATION	1.1603968472408412E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999914961462272	WITHOUT_CLASSIFICATION	8.503853772834858E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999993456511008	WITHOUT_CLASSIFICATION	6.543488991464342E-7	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999996994658835	WITHOUT_CLASSIFICATION	3.005341164677631E-7	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999998473270797	WITHOUT_CLASSIFICATION	1.5267292029471573E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9999959432729274	WITHOUT_CLASSIFICATION	4.056727072644958E-6	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9997833915689812	WITHOUT_CLASSIFICATION	2.1660843101876205E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999942416081892	WITHOUT_CLASSIFICATION	5.758391810810705E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.999918627866412	WITHOUT_CLASSIFICATION	8.137213358804779E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999964302422271	WITHOUT_CLASSIFICATION	3.5697577729437644E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999922021627975	WITHOUT_CLASSIFICATION	7.797837202398256E-6	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999932566582578	WITHOUT_CLASSIFICATION	6.743341742221608E-6	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999583824299402	WITHOUT_CLASSIFICATION	4.1617570059865515E-5	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999918843232701	WITHOUT_CLASSIFICATION	8.115676729800757E-6	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999982366301018	WITHOUT_CLASSIFICATION	1.7633698981336635E-6	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999998339134374	WITHOUT_CLASSIFICATION	1.6608656269179518E-7	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999921096140488	WITHOUT_CLASSIFICATION	7.890385951295509E-6	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999991030476845	WITHOUT_CLASSIFICATION	8.969523155837011E-7	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999994392230863	WITHOUT_CLASSIFICATION	5.607769136213121E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999988570704729	WITHOUT_CLASSIFICATION	1.1429295271521838E-6	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999998204459923	WITHOUT_CLASSIFICATION	1.795540076744981E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999998204459923	WITHOUT_CLASSIFICATION	1.795540076744981E-7	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999905416217669	WITHOUT_CLASSIFICATION	9.458378233039808E-6	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999987408414919	WITHOUT_CLASSIFICATION	1.2591585081199255E-6	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999588588816706	WITHOUT_CLASSIFICATION	4.114111832949026E-5	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9992620006994142	WITHOUT_CLASSIFICATION	7.379993005857756E-4	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999997475886555	WITHOUT_CLASSIFICATION	2.5241134444006445E-7	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999991758035969	WITHOUT_CLASSIFICATION	8.241964030642336E-7	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999991758035969	WITHOUT_CLASSIFICATION	8.241964030642336E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999987177065083	WITHOUT_CLASSIFICATION	1.2822934916969406E-6	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999897163200395	WITHOUT_CLASSIFICATION	1.0283679960384818E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999859718225997	WITHOUT_CLASSIFICATION	1.402817740015597E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999859718225997	WITHOUT_CLASSIFICATION	1.402817740015597E-5	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999259347264	WITHOUT_CLASSIFICATION	7.406527363105077E-8	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999891602962883	WITHOUT_CLASSIFICATION	1.083970371172301E-5	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999919093614846	WITHOUT_CLASSIFICATION	8.09063851538886E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997018302307	WITHOUT_CLASSIFICATION	2.981697692222896E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9996593657709523	WITHOUT_CLASSIFICATION	3.406342290477738E-4	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999993636894233	WITHOUT_CLASSIFICATION	6.3631057668875026E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999920817730481	WITHOUT_CLASSIFICATION	7.918226951899008E-6	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999894307618207	WITHOUT_CLASSIFICATION	1.0569238179273206E-5	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999998466930625	WITHOUT_CLASSIFICATION	1.533069374591352E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999062524504	WITHOUT_CLASSIFICATION	9.374754957936768E-8	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999999899088254	WITHOUT_CLASSIFICATION	1.0091174492573219E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999999107293203	WITHOUT_CLASSIFICATION	8.927067978661023E-8	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.999998638480606	WITHOUT_CLASSIFICATION	1.361519394008677E-6	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999992035183727	WITHOUT_CLASSIFICATION	7.964816274598257E-7	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999992574113753	WITHOUT_CLASSIFICATION	7.425886245810271E-7	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999967375566092	WITHOUT_CLASSIFICATION	3.2624433906805392E-6	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9996900365584892	WITHOUT_CLASSIFICATION	3.0996344151076514E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999896917938321	WITHOUT_CLASSIFICATION	1.0308206167895472E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999767950297045	WITHOUT_CLASSIFICATION	2.3204970295603813E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999071055570294	WITHOUT_CLASSIFICATION	9.289444297058465E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999959960545873	WITHOUT_CLASSIFICATION	4.003945412579674E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999959960545873	WITHOUT_CLASSIFICATION	4.003945412579674E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999959960545873	WITHOUT_CLASSIFICATION	4.003945412579674E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999959960545873	WITHOUT_CLASSIFICATION	4.003945412579674E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999959960545873	WITHOUT_CLASSIFICATION	4.003945412579674E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999950945515297	WITHOUT_CLASSIFICATION	4.905448470300998E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999988239418782	WITHOUT_CLASSIFICATION	1.1760581217844235E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999993277618501	WITHOUT_CLASSIFICATION	6.722381499003639E-7	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999467327503	WITHOUT_CLASSIFICATION	5.326724969100872E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999957185522934	WITHOUT_CLASSIFICATION	4.2814477066146844E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999957185522934	WITHOUT_CLASSIFICATION	4.2814477066146844E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999957185522934	WITHOUT_CLASSIFICATION	4.2814477066146844E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999957185522934	WITHOUT_CLASSIFICATION	4.2814477066146844E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999947127351118	WITHOUT_CLASSIFICATION	5.287264888187249E-6	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999994640561861	WITHOUT_CLASSIFICATION	5.359438139257658E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999914625822736	WITHOUT_CLASSIFICATION	8.537417726493427E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999905521829732	WITHOUT_CLASSIFICATION	9.447817026788192E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999905521829732	WITHOUT_CLASSIFICATION	9.447817026788192E-6	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999330597683237	WITHOUT_CLASSIFICATION	6.694023167632125E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999972828794534	WITHOUT_CLASSIFICATION	2.7171205466264596E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999972828794534	WITHOUT_CLASSIFICATION	2.7171205466264596E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999565902269271	WITHOUT_CLASSIFICATION	4.340977307286761E-5	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999987846151147	WITHOUT_CLASSIFICATION	1.2153848851801522E-6	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999255057443759	WITHOUT_CLASSIFICATION	7.449425562413244E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999997707511576	WITHOUT_CLASSIFICATION	2.292488422456693E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999748218888385	WITHOUT_CLASSIFICATION	2.5178111161427277E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996040505272	WITHOUT_CLASSIFICATION	3.959494727873096E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996040505272	WITHOUT_CLASSIFICATION	3.959494727873096E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9999686653525697	WITHOUT_CLASSIFICATION	3.133464743036067E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999950882523274	WITHOUT_CLASSIFICATION	4.911747672617981E-6	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999986204311065	WITHOUT_CLASSIFICATION	1.379568893482074E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999839020152118	WITHOUT_CLASSIFICATION	1.609798478820707E-5	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999966584946428	WITHOUT_CLASSIFICATION	3.3415053572736577E-6	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999995034505563	WITHOUT_CLASSIFICATION	4.965494436980857E-7	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999956299309162	WITHOUT_CLASSIFICATION	4.370069083751018E-6	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999949892765408	WITHOUT_CLASSIFICATION	5.010723459109853E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9994794579306473	WITHOUT_CLASSIFICATION	5.205420693527554E-4	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9987533467947234	WITHOUT_CLASSIFICATION	0.0012466532052766701	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9999992867659554	WITHOUT_CLASSIFICATION	7.132340446415915E-7	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9999930846135143	WITHOUT_CLASSIFICATION	6.915386485756231E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999973342564089	WITHOUT_CLASSIFICATION	2.6657435910909963E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.999977226272096	WITHOUT_CLASSIFICATION	2.277372790406568E-5	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999995524395454	WITHOUT_CLASSIFICATION	4.4756045462137344E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.999999941050084	WITHOUT_CLASSIFICATION	5.894991587021294E-8	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999348230269276	WITHOUT_CLASSIFICATION	6.517697307237875E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.999999105875593	WITHOUT_CLASSIFICATION	8.941244068772993E-7	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.999984211550972	WITHOUT_CLASSIFICATION	1.5788449028081748E-5	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999838651374818	WITHOUT_CLASSIFICATION	1.6134862518261283E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999989409622498	WITHOUT_CLASSIFICATION	1.05903775018907E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.999989409622498	WITHOUT_CLASSIFICATION	1.05903775018907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999896640842428	WITHOUT_CLASSIFICATION	1.0335915757165714E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9999978524602898	WITHOUT_CLASSIFICATION	2.147539710262632E-6	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9996694466046541	WITHOUT_CLASSIFICATION	3.305533953459136E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9679115558396876	WITHOUT_CLASSIFICATION	0.03208844416031237	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9994882272324584	WITHOUT_CLASSIFICATION	5.117727675416671E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999979482404905	WITHOUT_CLASSIFICATION	2.0517595096067026E-6	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9951000564119142	WITHOUT_CLASSIFICATION	0.004899943588085831	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9998647262090393	WITHOUT_CLASSIFICATION	1.3527379096066506E-4	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9857146824571884	WITHOUT_CLASSIFICATION	0.014285317542811541	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9999398570411422	WITHOUT_CLASSIFICATION	6.014295885787389E-5	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999995452698186	WITHOUT_CLASSIFICATION	4.547301813812229E-7	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.7200600034636934	WITHOUT_CLASSIFICATION	0.2799399965363066	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9857146824571884	WITHOUT_CLASSIFICATION	0.014285317542811541	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.999095933952617	WITHOUT_CLASSIFICATION	9.040660473830124E-4	DEFECT
