// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999978639351855	WITHOUT_CLASSIFICATION	2.1360648144140753E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999760362495775	WITHOUT_CLASSIFICATION	2.396375042248251E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999997105936935	WITHOUT_CLASSIFICATION	2.8940630650265883E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.999440232070783	WITHOUT_CLASSIFICATION	5.597679292169891E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999896584651663	WITHOUT_CLASSIFICATION	1.0341534833579713E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999053804822	WITHOUT_CLASSIFICATION	9.461951772407671E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999883211243968	WITHOUT_CLASSIFICATION	1.167887560322555E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997984405016	WITHOUT_CLASSIFICATION	2.0155949838829128E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999962641619441	WITHOUT_CLASSIFICATION	3.7358380558111628E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999993152846541	WITHOUT_CLASSIFICATION	6.847153459906059E-7	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999988272637257	WITHOUT_CLASSIFICATION	1.1727362742668337E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999989707570044	WITHOUT_CLASSIFICATION	1.029242995553526E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995498955736442	WITHOUT_CLASSIFICATION	4.501044263557547E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996039757959	WITHOUT_CLASSIFICATION	3.960242040814528E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993757424045	WITHOUT_CLASSIFICATION	6.24257595595348E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996468326955	WITHOUT_CLASSIFICATION	3.5316730456752086E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999944165091134	WITHOUT_CLASSIFICATION	5.5834908865640945E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999883211243968	WITHOUT_CLASSIFICATION	1.167887560322555E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999851110953429	WITHOUT_CLASSIFICATION	1.4888904657130229E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999940993887878	WITHOUT_CLASSIFICATION	5.900611212201265E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999971707914602	WITHOUT_CLASSIFICATION	2.829208539758563E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999873944533152	WITHOUT_CLASSIFICATION	1.2605546684820682E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999873944533152	WITHOUT_CLASSIFICATION	1.2605546684820682E-5	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998348306596	WITHOUT_CLASSIFICATION	1.6516934046521218E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999997561905763	WITHOUT_CLASSIFICATION	2.438094237440967E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.999996711962516	WITHOUT_CLASSIFICATION	3.2880374839936787E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999741081610487	WITHOUT_CLASSIFICATION	2.589183895128192E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999985999566456	WITHOUT_CLASSIFICATION	1.4000433544240023E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999970079267617	WITHOUT_CLASSIFICATION	2.9920732383640368E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999966046719199	WITHOUT_CLASSIFICATION	3.3953280802171396E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999751651929095	WITHOUT_CLASSIFICATION	2.4834807090399792E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999997054836671	WITHOUT_CLASSIFICATION	2.9451633288824234E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990449428084799	WITHOUT_CLASSIFICATION	9.550571915200799E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999772224247361	WITHOUT_CLASSIFICATION	2.2777575263861038E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.999997074892256	WITHOUT_CLASSIFICATION	2.925107743939674E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999879877115082	WITHOUT_CLASSIFICATION	1.2012288491925244E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999958142188252	WITHOUT_CLASSIFICATION	4.185781174778154E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999997842262546	WITHOUT_CLASSIFICATION	2.157737454114291E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999929829247225	WITHOUT_CLASSIFICATION	7.017075277420742E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999993450183273	WITHOUT_CLASSIFICATION	6.549816727680122E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999529390803	WITHOUT_CLASSIFICATION	4.706091971749941E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995851332219985	WITHOUT_CLASSIFICATION	4.1486677800144545E-4	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999996845644451	WITHOUT_CLASSIFICATION	3.154355549892141E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999999999980915	WITHOUT_CLASSIFICATION	1.908494553166866E-11	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999766510995537	WITHOUT_CLASSIFICATION	2.3348900446274757E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999732100231232	WITHOUT_CLASSIFICATION	2.6789976876755225E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999992074032609	WITHOUT_CLASSIFICATION	7.925967390878012E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998524007344	WITHOUT_CLASSIFICATION	1.4759926559618118E-7	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.999934182544523	WITHOUT_CLASSIFICATION	6.581745547690836E-5	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999699180453869	WITHOUT_CLASSIFICATION	3.0081954613136612E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999992074032609	WITHOUT_CLASSIFICATION	7.925967390878012E-6	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999861838722057	WITHOUT_CLASSIFICATION	1.3816127794307418E-5	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999667564191843	WITHOUT_CLASSIFICATION	3.3243580815751424E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999344285391619	WITHOUT_CLASSIFICATION	6.557146083809522E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999774395386544	WITHOUT_CLASSIFICATION	2.2560461345650265E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999563710010793	WITHOUT_CLASSIFICATION	4.362899892075949E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.99998569175132	WITHOUT_CLASSIFICATION	1.4308248680003575E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999984697333288	WITHOUT_CLASSIFICATION	1.5302666711866087E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999349830394969	WITHOUT_CLASSIFICATION	6.501696050299397E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999988138199936	WITHOUT_CLASSIFICATION	1.1861800064341589E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999769393143767	WITHOUT_CLASSIFICATION	2.3060685623305376E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9383488305871361	WITHOUT_CLASSIFICATION	0.06165116941286392	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999872900590375	WITHOUT_CLASSIFICATION	1.2709940962543736E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.996612311548571	WITHOUT_CLASSIFICATION	0.0033876884514289682	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9991773697844564	WITHOUT_CLASSIFICATION	8.226302155436718E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999950981227341	WITHOUT_CLASSIFICATION	4.901877265829001E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999999615493487	WITHOUT_CLASSIFICATION	3.845065126681606E-8	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999394799828332	WITHOUT_CLASSIFICATION	6.052001716679579E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9994570136389302	WITHOUT_CLASSIFICATION	5.429863610696498E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999989707570044	WITHOUT_CLASSIFICATION	1.029242995553526E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995498955736442	WITHOUT_CLASSIFICATION	4.501044263557547E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996039757959	WITHOUT_CLASSIFICATION	3.960242040814528E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999962890269347	WITHOUT_CLASSIFICATION	3.7109730652850195E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999984099462235	WITHOUT_CLASSIFICATION	1.590053776608239E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993757424045	WITHOUT_CLASSIFICATION	6.24257595595348E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996468326955	WITHOUT_CLASSIFICATION	3.5316730456752086E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999944165091134	WITHOUT_CLASSIFICATION	5.5834908865640945E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999940307094913	WITHOUT_CLASSIFICATION	5.969290508681897E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999940307094913	WITHOUT_CLASSIFICATION	5.969290508681897E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999940307094913	WITHOUT_CLASSIFICATION	5.969290508681897E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999053804822	WITHOUT_CLASSIFICATION	9.461951772407671E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999908042861028	WITHOUT_CLASSIFICATION	9.195713897196578E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999912944343	WITHOUT_CLASSIFICATION	8.705565807413572E-9	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999984336344583	WITHOUT_CLASSIFICATION	1.5663655417543089E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999971707914602	WITHOUT_CLASSIFICATION	2.829208539758563E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999981171724817	WITHOUT_CLASSIFICATION	1.8828275183059577E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999966046719199	WITHOUT_CLASSIFICATION	3.3953280802171396E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999751651929095	WITHOUT_CLASSIFICATION	2.4834807090399792E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990449428084799	WITHOUT_CLASSIFICATION	9.550571915200799E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999879877115082	WITHOUT_CLASSIFICATION	1.2012288491925244E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999510952000792	WITHOUT_CLASSIFICATION	4.890479992079467E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999657687593028	WITHOUT_CLASSIFICATION	3.4231240697217045E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999595798584	WITHOUT_CLASSIFICATION	4.0420141599159953E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.999997790741747	WITHOUT_CLASSIFICATION	2.2092582530202346E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999963400786656	WITHOUT_CLASSIFICATION	3.6599213344927318E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999993450183273	WITHOUT_CLASSIFICATION	6.549816727680122E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995851332219985	WITHOUT_CLASSIFICATION	4.1486677800144545E-4	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999989022285595	WITHOUT_CLASSIFICATION	1.0977714404892628E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999777949268982	WITHOUT_CLASSIFICATION	2.2205073101882893E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999983158995087	WITHOUT_CLASSIFICATION	1.6841004913588513E-6	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999996994229897	WITHOUT_CLASSIFICATION	3.0057701032825493E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999941354111793	WITHOUT_CLASSIFICATION	5.864588820669831E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999959004850254	WITHOUT_CLASSIFICATION	4.099514974578564E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999994584852446	WITHOUT_CLASSIFICATION	5.415147553602927E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999882196438076	WITHOUT_CLASSIFICATION	1.178035619247469E-5	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914213153374	WITHOUT_CLASSIFICATION	8.578684662666051E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999846321280168	WITHOUT_CLASSIFICATION	1.536787198324376E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999792446642	WITHOUT_CLASSIFICATION	2.0755335822685118E-8	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914213153374	WITHOUT_CLASSIFICATION	8.578684662666051E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999865898822965	WITHOUT_CLASSIFICATION	1.3410117703502435E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998121919632	WITHOUT_CLASSIFICATION	1.8780803679951195E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999920352074	WITHOUT_CLASSIFICATION	7.964792522096685E-9	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999987075488357	WITHOUT_CLASSIFICATION	1.292451164306094E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914213153374	WITHOUT_CLASSIFICATION	8.578684662666051E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999846321280168	WITHOUT_CLASSIFICATION	1.536787198324376E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999995608168137	WITHOUT_CLASSIFICATION	4.3918318623088753E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999966889982	WITHOUT_CLASSIFICATION	3.3110016951981206E-9	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999984518926622	WITHOUT_CLASSIFICATION	1.5481073378048612E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999997176610917	WITHOUT_CLASSIFICATION	2.8233890827355414E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999999990413489	WITHOUT_CLASSIFICATION	9.586511114700558E-9	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999971668249389	WITHOUT_CLASSIFICATION	2.8331750610905723E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999995046391457	WITHOUT_CLASSIFICATION	4.953608543055926E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999548736424648	WITHOUT_CLASSIFICATION	4.512635753522236E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999412485294182	WITHOUT_CLASSIFICATION	5.875147058177647E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9998621638953015	WITHOUT_CLASSIFICATION	1.378361046986412E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9969182336072109	WITHOUT_CLASSIFICATION	0.0030817663927890883	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999500719255	WITHOUT_CLASSIFICATION	4.992807455840398E-8	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999770015803	WITHOUT_CLASSIFICATION	2.299841970382963E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998524007344	WITHOUT_CLASSIFICATION	1.4759926559618118E-7	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.999999988200951	WITHOUT_CLASSIFICATION	1.1799048826415986E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999998371034443	WITHOUT_CLASSIFICATION	1.6289655572605264E-7	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9997289828747532	WITHOUT_CLASSIFICATION	2.710171252467887E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999831428387421	WITHOUT_CLASSIFICATION	1.6857161257855994E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999988823744611	WITHOUT_CLASSIFICATION	1.117625538806584E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999800627132166	WITHOUT_CLASSIFICATION	1.993728678347245E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999767372635842	WITHOUT_CLASSIFICATION	2.3262736415780032E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.999999988200951	WITHOUT_CLASSIFICATION	1.1799048826415986E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999998371034443	WITHOUT_CLASSIFICATION	1.6289655572605264E-7	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999730714567003	WITHOUT_CLASSIFICATION	2.6928543299549792E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999730714567003	WITHOUT_CLASSIFICATION	2.6928543299549792E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999479146697411	WITHOUT_CLASSIFICATION	5.208533025891631E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.8879307363255258	WITHOUT_CLASSIFICATION	0.11206926367447421	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9998761605788836	WITHOUT_CLASSIFICATION	1.238394211163371E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999479146697411	WITHOUT_CLASSIFICATION	5.208533025891631E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.8879307363255258	WITHOUT_CLASSIFICATION	0.11206926367447421	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999974573362977	WITHOUT_CLASSIFICATION	2.54266370224773E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.99997845324737	WITHOUT_CLASSIFICATION	2.1546752630004814E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999872836657	WITHOUT_CLASSIFICATION	1.2716334350258419E-8	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999999234025453	WITHOUT_CLASSIFICATION	7.659745472137894E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999872836657	WITHOUT_CLASSIFICATION	1.2716334350258419E-8	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999997600878313	WITHOUT_CLASSIFICATION	2.3991216863382487E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999785153577	WITHOUT_CLASSIFICATION	2.148464226427542E-8	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999785153577	WITHOUT_CLASSIFICATION	2.148464226427542E-8	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999863552632478	WITHOUT_CLASSIFICATION	1.3644736752106726E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999997858858729	WITHOUT_CLASSIFICATION	2.1411412711061686E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9997875679941265	WITHOUT_CLASSIFICATION	2.124320058735194E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999984900189712	WITHOUT_CLASSIFICATION	1.5099810287404914E-6	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999994193970042	WITHOUT_CLASSIFICATION	5.806029958513035E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999997529836744	WITHOUT_CLASSIFICATION	2.4701632571379626E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999986116354459	WITHOUT_CLASSIFICATION	1.3883645540841013E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.999999015252138	WITHOUT_CLASSIFICATION	9.847478620110585E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999977043272	WITHOUT_CLASSIFICATION	2.2956727240852597E-9	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999995389057141	WITHOUT_CLASSIFICATION	4.61094285957129E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999997819506118	WITHOUT_CLASSIFICATION	2.1804938832947194E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999977065811596	WITHOUT_CLASSIFICATION	2.2934188403707833E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996445216885	WITHOUT_CLASSIFICATION	3.5547831142294014E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999992835036061	WITHOUT_CLASSIFICATION	7.164963939828466E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999318489527472	WITHOUT_CLASSIFICATION	6.815104725272042E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.999917475649783	WITHOUT_CLASSIFICATION	8.252435021705657E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999998656059477	WITHOUT_CLASSIFICATION	1.3439405230191884E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999896949232	WITHOUT_CLASSIFICATION	1.0305076906880502E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999983534225125	WITHOUT_CLASSIFICATION	1.6465774874584593E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999983534225125	WITHOUT_CLASSIFICATION	1.6465774874584593E-6	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998735334178	WITHOUT_CLASSIFICATION	1.2646658213085048E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998355216937	WITHOUT_CLASSIFICATION	1.6447830626597123E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999656219717872	WITHOUT_CLASSIFICATION	3.437802821276984E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999677697885098	WITHOUT_CLASSIFICATION	3.223021149024806E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999821416020672	WITHOUT_CLASSIFICATION	1.7858397932792025E-5	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999993269326526	WITHOUT_CLASSIFICATION	6.730673474459107E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999318489527472	WITHOUT_CLASSIFICATION	6.815104725272042E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999795680675717	WITHOUT_CLASSIFICATION	2.0431932428340622E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999997268013939	WITHOUT_CLASSIFICATION	2.731986060297909E-7	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999996999518564	WITHOUT_CLASSIFICATION	3.0004814348320766E-7	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.999999278021871	WITHOUT_CLASSIFICATION	7.21978128928214E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999875018936855	WITHOUT_CLASSIFICATION	1.2498106314487063E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999380986907	WITHOUT_CLASSIFICATION	6.190130928967909E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999837830740702	WITHOUT_CLASSIFICATION	1.6216925929795428E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999661405304434	WITHOUT_CLASSIFICATION	3.3859469556678407E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999998089992079	WITHOUT_CLASSIFICATION	1.9100079203690392E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983862839379	WITHOUT_CLASSIFICATION	1.6137160621126176E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999997019561	WITHOUT_CLASSIFICATION	2.9804393119481583E-10	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999994917969476	WITHOUT_CLASSIFICATION	5.082030523889344E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999994917969476	WITHOUT_CLASSIFICATION	5.082030523889344E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999998337241034	WITHOUT_CLASSIFICATION	1.6627589665715012E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999996741142658	WITHOUT_CLASSIFICATION	3.2588573425977733E-7	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999908210932213	WITHOUT_CLASSIFICATION	9.178906778597285E-6	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9883178068498407	WITHOUT_CLASSIFICATION	0.011682193150159398	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999461333573	WITHOUT_CLASSIFICATION	5.3866642661055634E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999396671499499	WITHOUT_CLASSIFICATION	6.033285005013371E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9984939402747182	WITHOUT_CLASSIFICATION	0.001506059725281795	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999999223209405	WITHOUT_CLASSIFICATION	7.767905956548878E-8	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999998529861878	WITHOUT_CLASSIFICATION	1.470138121597914E-7	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9999663480693622	WITHOUT_CLASSIFICATION	3.3651930637780645E-5	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999999111580714	WITHOUT_CLASSIFICATION	8.884192853265906E-8	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999742225611924	WITHOUT_CLASSIFICATION	2.5777438807622167E-5	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999952379853604	WITHOUT_CLASSIFICATION	4.76201463958979E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999970255613218	WITHOUT_CLASSIFICATION	2.974438678362458E-6	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9612381577177748	WITHOUT_CLASSIFICATION	0.038761842282225324	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999949646551385	WITHOUT_CLASSIFICATION	5.035344861547098E-6	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999989870012005	WITHOUT_CLASSIFICATION	1.0129987995739979E-6	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999998017827335	WITHOUT_CLASSIFICATION	1.9821726651904773E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999996266139662	WITHOUT_CLASSIFICATION	3.7338603380310226E-7	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999765411349	WITHOUT_CLASSIFICATION	2.345886517142314E-8	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999997121120494	WITHOUT_CLASSIFICATION	2.8788795059860697E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9998426815350369	WITHOUT_CLASSIFICATION	1.5731846496315838E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999998957592482	WITHOUT_CLASSIFICATION	1.0424075177353865E-7	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999991054085634	WITHOUT_CLASSIFICATION	8.945914367199636E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999750277050338	WITHOUT_CLASSIFICATION	2.4972294966161838E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999991924198092	WITHOUT_CLASSIFICATION	8.075801908057813E-7	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999991836552076	WITHOUT_CLASSIFICATION	8.163447923528323E-7	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999976417738362	WITHOUT_CLASSIFICATION	2.3582261637704403E-6	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988532687144	WITHOUT_CLASSIFICATION	1.1467312855882532E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.999999452380361	WITHOUT_CLASSIFICATION	5.476196389190526E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999999432146925	WITHOUT_CLASSIFICATION	5.678530742185701E-8	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999999432146925	WITHOUT_CLASSIFICATION	5.678530742185701E-8	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999981799578835	WITHOUT_CLASSIFICATION	1.8200421165354828E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999981799578835	WITHOUT_CLASSIFICATION	1.8200421165354828E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999520146967	WITHOUT_CLASSIFICATION	4.798530329599255E-7	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9994074201627814	WITHOUT_CLASSIFICATION	5.925798372185309E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999961963647123	WITHOUT_CLASSIFICATION	3.803635287674339E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999961963647123	WITHOUT_CLASSIFICATION	3.803635287674339E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999988018493301	WITHOUT_CLASSIFICATION	1.1981506699537264E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999873803268384	WITHOUT_CLASSIFICATION	1.261967316152484E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996445216885	WITHOUT_CLASSIFICATION	3.5547831142294014E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999996812740237	WITHOUT_CLASSIFICATION	3.187259763136799E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999996812740237	WITHOUT_CLASSIFICATION	3.187259763136799E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999996812740237	WITHOUT_CLASSIFICATION	3.187259763136799E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999873803268384	WITHOUT_CLASSIFICATION	1.261967316152484E-5	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999996732764246	WITHOUT_CLASSIFICATION	3.2672357535544007E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999712495435403	WITHOUT_CLASSIFICATION	2.8750456459731813E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9978945021166477	WITHOUT_CLASSIFICATION	0.0021054978833523795	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999991154762027	WITHOUT_CLASSIFICATION	8.845237972933732E-7	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999999210895906	WITHOUT_CLASSIFICATION	7.891040947226413E-8	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999993920276362	WITHOUT_CLASSIFICATION	6.079723637513157E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999997105936935	WITHOUT_CLASSIFICATION	2.8940630650265883E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.999440232070783	WITHOUT_CLASSIFICATION	5.597679292169891E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999896584651663	WITHOUT_CLASSIFICATION	1.0341534833579713E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999053804822	WITHOUT_CLASSIFICATION	9.461951772407671E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997984405016	WITHOUT_CLASSIFICATION	2.0155949838829128E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999962641619441	WITHOUT_CLASSIFICATION	3.7358380558111628E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999993152846541	WITHOUT_CLASSIFICATION	6.847153459906059E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999989707570044	WITHOUT_CLASSIFICATION	1.029242995553526E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995498955736442	WITHOUT_CLASSIFICATION	4.501044263557547E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996039757959	WITHOUT_CLASSIFICATION	3.960242040814528E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999997813376969	WITHOUT_CLASSIFICATION	2.186623030881608E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993757424045	WITHOUT_CLASSIFICATION	6.24257595595348E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996468326955	WITHOUT_CLASSIFICATION	3.5316730456752086E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999944165091134	WITHOUT_CLASSIFICATION	5.5834908865640945E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999851110953429	WITHOUT_CLASSIFICATION	1.4888904657130229E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999940993887878	WITHOUT_CLASSIFICATION	5.900611212201265E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998856971264	WITHOUT_CLASSIFICATION	1.1430287357453237E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995996007495	WITHOUT_CLASSIFICATION	4.0039925043707847E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999971707914602	WITHOUT_CLASSIFICATION	2.829208539758563E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998348306596	WITHOUT_CLASSIFICATION	1.6516934046521218E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999997561905763	WITHOUT_CLASSIFICATION	2.438094237440967E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999981171724817	WITHOUT_CLASSIFICATION	1.8828275183059577E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999966046719199	WITHOUT_CLASSIFICATION	3.3953280802171396E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999751651929095	WITHOUT_CLASSIFICATION	2.4834807090399792E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999997054836671	WITHOUT_CLASSIFICATION	2.9451633288824234E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990449428084799	WITHOUT_CLASSIFICATION	9.550571915200799E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999390935945	WITHOUT_CLASSIFICATION	6.090640542829931E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999967348523	WITHOUT_CLASSIFICATION	3.265147766497684E-9	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999997842262546	WITHOUT_CLASSIFICATION	2.157737454114291E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999772224247361	WITHOUT_CLASSIFICATION	2.2777575263861038E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999879877115082	WITHOUT_CLASSIFICATION	1.2012288491925244E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.999997074892256	WITHOUT_CLASSIFICATION	2.925107743939674E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995994533808	WITHOUT_CLASSIFICATION	4.005466192568952E-7	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999994372738088	WITHOUT_CLASSIFICATION	5.627261912454812E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999879877115082	WITHOUT_CLASSIFICATION	1.2012288491925244E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999993450183273	WITHOUT_CLASSIFICATION	6.549816727680122E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999929829247225	WITHOUT_CLASSIFICATION	7.017075277420742E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999930717291465	WITHOUT_CLASSIFICATION	6.928270853428025E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995851332219985	WITHOUT_CLASSIFICATION	4.1486677800144545E-4	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999993737936923	WITHOUT_CLASSIFICATION	6.262063076675329E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995994533808	WITHOUT_CLASSIFICATION	4.005466192568952E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995851332219985	WITHOUT_CLASSIFICATION	4.1486677800144545E-4	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999970111407409	WITHOUT_CLASSIFICATION	2.988859259118103E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999923800792	WITHOUT_CLASSIFICATION	7.619920909494822E-9	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999958038415752	WITHOUT_CLASSIFICATION	4.196158424884908E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.99999536906646	WITHOUT_CLASSIFICATION	4.630933540030845E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999998546049433	WITHOUT_CLASSIFICATION	1.453950566903745E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9997547935646777	WITHOUT_CLASSIFICATION	2.452064353223365E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999996133894486	WITHOUT_CLASSIFICATION	3.8661055124610006E-7	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999995367331247	WITHOUT_CLASSIFICATION	4.632668753353206E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9998150680794868	WITHOUT_CLASSIFICATION	1.8493192051317322E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999893317788624	WITHOUT_CLASSIFICATION	1.0668221137636318E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999956426427834	WITHOUT_CLASSIFICATION	4.357357216670715E-6	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999964134043005	WITHOUT_CLASSIFICATION	3.586595699565631E-6	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999990754686375	WITHOUT_CLASSIFICATION	9.245313624605224E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999936127885141	WITHOUT_CLASSIFICATION	6.387211485857362E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999912113976915	WITHOUT_CLASSIFICATION	8.788602308439973E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999983406032433	WITHOUT_CLASSIFICATION	1.6593967566204089E-6	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999974546674828	WITHOUT_CLASSIFICATION	2.5453325171278784E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999933020007901	WITHOUT_CLASSIFICATION	6.697999209899242E-6	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999144333306	WITHOUT_CLASSIFICATION	8.556666931554866E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999980369419289	WITHOUT_CLASSIFICATION	1.963058071098536E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999912652157644	WITHOUT_CLASSIFICATION	8.734784235580863E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999992610650025	WITHOUT_CLASSIFICATION	7.389349975342582E-7	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.999999770277401	WITHOUT_CLASSIFICATION	2.2972259891965223E-7	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999997694090846	WITHOUT_CLASSIFICATION	2.3059091526758926E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999823475252908	WITHOUT_CLASSIFICATION	1.7652474709198623E-5	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.8980553934388319	WITHOUT_CLASSIFICATION	0.10194460656116822	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999993674253973	WITHOUT_CLASSIFICATION	6.325746027482158E-7	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999996854487463	WITHOUT_CLASSIFICATION	3.145512537005661E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.999999959201394	WITHOUT_CLASSIFICATION	4.079860600563631E-8	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999993370049667	WITHOUT_CLASSIFICATION	6.629950332669806E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999996845644451	WITHOUT_CLASSIFICATION	3.154355549892141E-7	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999995233548735	WITHOUT_CLASSIFICATION	4.766451264574696E-7	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999997919578457	WITHOUT_CLASSIFICATION	2.0804215426770517E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999956691477	WITHOUT_CLASSIFICATION	4.3308523303071855E-9	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999747114211146	WITHOUT_CLASSIFICATION	2.5288578885366613E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999651051553081	WITHOUT_CLASSIFICATION	3.489484469185047E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9998366776175364	WITHOUT_CLASSIFICATION	1.633223824636919E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999991436064093	WITHOUT_CLASSIFICATION	8.563935906970937E-7	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.99999976162463	WITHOUT_CLASSIFICATION	2.383753699314202E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999990791001626	WITHOUT_CLASSIFICATION	9.208998373957643E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999998266933093	WITHOUT_CLASSIFICATION	1.733066906709765E-7	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999982574423498	WITHOUT_CLASSIFICATION	1.7425576502093033E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999998320549547	WITHOUT_CLASSIFICATION	1.679450451758111E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999994787706201	WITHOUT_CLASSIFICATION	5.212293798434483E-7	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999972332535063	WITHOUT_CLASSIFICATION	2.7667464936241304E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999903470282864	WITHOUT_CLASSIFICATION	9.652971713636549E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999701266681608	WITHOUT_CLASSIFICATION	2.9873331839201954E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999786097202278	WITHOUT_CLASSIFICATION	2.1390279772245762E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999175897175	WITHOUT_CLASSIFICATION	8.241028251297287E-8	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999993268714699	WITHOUT_CLASSIFICATION	6.731285301831407E-7	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999998234244957	WITHOUT_CLASSIFICATION	1.7657550431183508E-7	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9987697374860345	WITHOUT_CLASSIFICATION	0.0012302625139655418	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999424106122866	WITHOUT_CLASSIFICATION	5.758938771342375E-5	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999950771731244	WITHOUT_CLASSIFICATION	4.9228268755879085E-6	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999998536838068	WITHOUT_CLASSIFICATION	1.4631619316300144E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999997858858729	WITHOUT_CLASSIFICATION	2.1411412711061686E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999875529242335	WITHOUT_CLASSIFICATION	1.2447075766579716E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999992719384455	WITHOUT_CLASSIFICATION	7.280615546146628E-7	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999514970285	WITHOUT_CLASSIFICATION	4.850297155242806E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998703093219	WITHOUT_CLASSIFICATION	1.2969067796136033E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999830188449	WITHOUT_CLASSIFICATION	1.6981155123831407E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.999960077775639	WITHOUT_CLASSIFICATION	3.992222436104441E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999581929109577	WITHOUT_CLASSIFICATION	4.180708904235413E-5	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999948538966204	WITHOUT_CLASSIFICATION	5.146103379622649E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999956070458	WITHOUT_CLASSIFICATION	4.39295429344795E-9	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999993579948202	WITHOUT_CLASSIFICATION	6.420051798937443E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999936072046	WITHOUT_CLASSIFICATION	6.392795400012478E-9	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999998656059477	WITHOUT_CLASSIFICATION	1.3439405230191884E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999896949232	WITHOUT_CLASSIFICATION	1.0305076906880502E-8	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999993269326526	WITHOUT_CLASSIFICATION	6.730673474459107E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.999960077775639	WITHOUT_CLASSIFICATION	3.992222436104441E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999993579948202	WITHOUT_CLASSIFICATION	6.420051798937443E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999936072046	WITHOUT_CLASSIFICATION	6.392795400012478E-9	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999021803698	WITHOUT_CLASSIFICATION	9.781963022004323E-8	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999755609841612	WITHOUT_CLASSIFICATION	2.4439015838739365E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.999913142308459	WITHOUT_CLASSIFICATION	8.68576915409882E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999985949210646	WITHOUT_CLASSIFICATION	1.405078935446559E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999996238567541	WITHOUT_CLASSIFICATION	3.7614324590855697E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999984496657	WITHOUT_CLASSIFICATION	1.5503343329885624E-9	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999959851997	WITHOUT_CLASSIFICATION	4.014800273000528E-9	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.999987119341798	WITHOUT_CLASSIFICATION	1.2880658202048597E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999999887420423	WITHOUT_CLASSIFICATION	1.1257957780735804E-8	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9998406712946267	WITHOUT_CLASSIFICATION	1.5932870537336112E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999989484114705	WITHOUT_CLASSIFICATION	1.0515885294346726E-6	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9758669096250763	WITHOUT_CLASSIFICATION	0.024133090374923682	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999980106717015	WITHOUT_CLASSIFICATION	1.9893282985888447E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999994129276366	WITHOUT_CLASSIFICATION	5.870723633646214E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999990069504977	WITHOUT_CLASSIFICATION	9.930495022382264E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999990167662203	WITHOUT_CLASSIFICATION	9.832337797392086E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999775493931172	WITHOUT_CLASSIFICATION	2.2450606882758752E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999985978063878	WITHOUT_CLASSIFICATION	1.4021936122689112E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999835167654	WITHOUT_CLASSIFICATION	1.6483234613452347E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999983294292066	WITHOUT_CLASSIFICATION	1.6705707932832944E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999958903559	WITHOUT_CLASSIFICATION	4.109644078735556E-9	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999999312903	WITHOUT_CLASSIFICATION	6.870972508660554E-11	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998703093219	WITHOUT_CLASSIFICATION	1.2969067796136033E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999830188449	WITHOUT_CLASSIFICATION	1.6981155123831407E-8	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999964612529	WITHOUT_CLASSIFICATION	3.538747045846447E-9	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.999999998736549	WITHOUT_CLASSIFICATION	1.2634509471234003E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999432597113	WITHOUT_CLASSIFICATION	5.674028865958518E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999990608959584	WITHOUT_CLASSIFICATION	9.391040416474691E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999920557491992	WITHOUT_CLASSIFICATION	7.944250800767733E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999993696642048	WITHOUT_CLASSIFICATION	6.303357951860244E-7	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9993392095327959	WITHOUT_CLASSIFICATION	6.60790467204031E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999868325145375	WITHOUT_CLASSIFICATION	1.316748546248071E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999992874752497	WITHOUT_CLASSIFICATION	7.125247503240546E-7	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999992874752497	WITHOUT_CLASSIFICATION	7.125247503240546E-7	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999991519089212	WITHOUT_CLASSIFICATION	8.480910788305375E-7	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999989762622669	WITHOUT_CLASSIFICATION	1.0237377331534803E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999986822968056	WITHOUT_CLASSIFICATION	1.3177031944287525E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999838144026567	WITHOUT_CLASSIFICATION	1.618559734328164E-5	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999998808565971	WITHOUT_CLASSIFICATION	1.1914340297002948E-7	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999998136631321	WITHOUT_CLASSIFICATION	1.863368678966474E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999999131792653	WITHOUT_CLASSIFICATION	8.682073466027513E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999999131792653	WITHOUT_CLASSIFICATION	8.682073466027513E-8	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999815759553	WITHOUT_CLASSIFICATION	1.8424044742914672E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999977780951904	WITHOUT_CLASSIFICATION	2.2219048095990647E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999997296586209	WITHOUT_CLASSIFICATION	2.7034137904165983E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999999526843748	WITHOUT_CLASSIFICATION	4.7315625188338796E-8	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999845876985	WITHOUT_CLASSIFICATION	1.541230155648299E-8	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.999992627645594	WITHOUT_CLASSIFICATION	7.372354405880768E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999818189137	WITHOUT_CLASSIFICATION	1.8181086306037772E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999996619746778	WITHOUT_CLASSIFICATION	3.3802532216988573E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999081654273	WITHOUT_CLASSIFICATION	9.183457277145045E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.999999812659491	WITHOUT_CLASSIFICATION	1.8734050894382544E-7	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999980016059248	WITHOUT_CLASSIFICATION	1.9983940752125714E-6	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.999999994866157	WITHOUT_CLASSIFICATION	5.133842961236806E-9	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.999885655759537	WITHOUT_CLASSIFICATION	1.143442404630182E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999989542217509	WITHOUT_CLASSIFICATION	1.0457782490666653E-6	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999931012685143	WITHOUT_CLASSIFICATION	6.8987314857541535E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999995387528396	WITHOUT_CLASSIFICATION	4.61247160413821E-7	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.999999365988162	WITHOUT_CLASSIFICATION	6.340118380740457E-7	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.999999911787698	WITHOUT_CLASSIFICATION	8.821230203656218E-8	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999999204980288	WITHOUT_CLASSIFICATION	7.950197126799795E-8	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999997644896191	WITHOUT_CLASSIFICATION	2.355103808056226E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.999999838108122	WITHOUT_CLASSIFICATION	1.6189187797136725E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999711067458	WITHOUT_CLASSIFICATION	2.8893254146303922E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999835957339	WITHOUT_CLASSIFICATION	1.6404266087168794E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999998763030197	WITHOUT_CLASSIFICATION	1.2369698041075675E-7	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999999689635926	WITHOUT_CLASSIFICATION	3.10364074516708E-8	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.999999903435751	WITHOUT_CLASSIFICATION	9.656424907465225E-8	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999995687418352	WITHOUT_CLASSIFICATION	4.3125816485518873E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999995415402243	WITHOUT_CLASSIFICATION	4.5845977577753466E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999998954552459	WITHOUT_CLASSIFICATION	1.0454475411441415E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999806778682	WITHOUT_CLASSIFICATION	1.9322131834918055E-8	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999987454178371	WITHOUT_CLASSIFICATION	1.2545821629521945E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999823561973472	WITHOUT_CLASSIFICATION	1.7643802652759077E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999993599032224	WITHOUT_CLASSIFICATION	6.400967775523257E-7	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999832066632679	WITHOUT_CLASSIFICATION	1.6793336732042386E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9999949753435714	WITHOUT_CLASSIFICATION	5.024656428626275E-6	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999835269824916	WITHOUT_CLASSIFICATION	1.647301750835879E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999923604275017	WITHOUT_CLASSIFICATION	7.639572498280954E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999852063127476	WITHOUT_CLASSIFICATION	1.4793687252366404E-5	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999921410487317	WITHOUT_CLASSIFICATION	7.858951268355096E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999125416752591	WITHOUT_CLASSIFICATION	8.745832474085698E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999959641206286	WITHOUT_CLASSIFICATION	4.03587937139923E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999285741395374	WITHOUT_CLASSIFICATION	7.142586046271034E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999996024458616	WITHOUT_CLASSIFICATION	3.9755413840081433E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999963879968172	WITHOUT_CLASSIFICATION	3.6120031828010338E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999247194698545	WITHOUT_CLASSIFICATION	7.528053014545313E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999959641206286	WITHOUT_CLASSIFICATION	4.03587937139923E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999996024458616	WITHOUT_CLASSIFICATION	3.9755413840081433E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999355185207016	WITHOUT_CLASSIFICATION	6.448147929839379E-5	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999997845338572	WITHOUT_CLASSIFICATION	2.1546614283747399E-7	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999996341853348	WITHOUT_CLASSIFICATION	3.658146652716542E-7	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999868412397	WITHOUT_CLASSIFICATION	1.3158760366732199E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999125416752591	WITHOUT_CLASSIFICATION	8.745832474085698E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999125416752591	WITHOUT_CLASSIFICATION	8.745832474085698E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999959641206286	WITHOUT_CLASSIFICATION	4.03587937139923E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999989170927762	WITHOUT_CLASSIFICATION	1.0829072238143016E-6	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999917015388566	WITHOUT_CLASSIFICATION	8.298461143290036E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999994646684119	WITHOUT_CLASSIFICATION	5.353315880166233E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999994646684119	WITHOUT_CLASSIFICATION	5.353315880166233E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999843471475	WITHOUT_CLASSIFICATION	1.5652852484933493E-8	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999923405240553	WITHOUT_CLASSIFICATION	7.659475944815974E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999030820655737	WITHOUT_CLASSIFICATION	9.691793442635099E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999030820655737	WITHOUT_CLASSIFICATION	9.691793442635099E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999968177609688	WITHOUT_CLASSIFICATION	3.1822390312427766E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999923405240553	WITHOUT_CLASSIFICATION	7.659475944815974E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999030820655737	WITHOUT_CLASSIFICATION	9.691793442635099E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999968177609688	WITHOUT_CLASSIFICATION	3.1822390312427766E-6	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999984908577102	WITHOUT_CLASSIFICATION	1.5091422898083905E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999998822426771	WITHOUT_CLASSIFICATION	1.1775732296568498E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999961275663	WITHOUT_CLASSIFICATION	3.87243368874489E-9	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999998516699524	WITHOUT_CLASSIFICATION	1.4833004754826872E-7	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999931113846661	WITHOUT_CLASSIFICATION	6.888615333979492E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999998190290522	WITHOUT_CLASSIFICATION	1.809709478226922E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999986445324796	WITHOUT_CLASSIFICATION	1.3554675204951394E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999973050570048	WITHOUT_CLASSIFICATION	2.694942995299149E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999934939361269	WITHOUT_CLASSIFICATION	6.5060638730724255E-6	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999568576915466	WITHOUT_CLASSIFICATION	4.3142308453401284E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999993114637332	WITHOUT_CLASSIFICATION	6.885362667485305E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999925816584412	WITHOUT_CLASSIFICATION	7.41834155883025E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999982742255	WITHOUT_CLASSIFICATION	1.7257745491781511E-9	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999966793789	WITHOUT_CLASSIFICATION	3.320621239323849E-9	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999712433	WITHOUT_CLASSIFICATION	2.875660250409708E-11	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999992194948804	WITHOUT_CLASSIFICATION	7.805051195381111E-7	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999998787607237	WITHOUT_CLASSIFICATION	1.2123927623147665E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999999867385929	WITHOUT_CLASSIFICATION	1.3261406981085827E-8	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999998243139471	WITHOUT_CLASSIFICATION	1.7568605288686335E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999995380187162	WITHOUT_CLASSIFICATION	4.619812838467945E-7	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999997795317	WITHOUT_CLASSIFICATION	2.2046823649103264E-10	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999999907081677	WITHOUT_CLASSIFICATION	9.29183237185334E-9	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999853805466	WITHOUT_CLASSIFICATION	1.4619453469114109E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999998547008713	WITHOUT_CLASSIFICATION	1.452991286662527E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999999181181096	WITHOUT_CLASSIFICATION	8.188189045684947E-8	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.999999988114653	WITHOUT_CLASSIFICATION	1.1885347072307224E-8	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999944659552	WITHOUT_CLASSIFICATION	5.5340447893894726E-9	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999954738789084	WITHOUT_CLASSIFICATION	4.5261210915121925E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999993729648	WITHOUT_CLASSIFICATION	6.270351686428002E-10	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999970776258496	WITHOUT_CLASSIFICATION	2.9223741504360083E-6	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999980204659268	WITHOUT_CLASSIFICATION	1.979534073182359E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999999791669631	WITHOUT_CLASSIFICATION	2.0833036923252956E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999992026803799	WITHOUT_CLASSIFICATION	7.973196201090339E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.999999756209041	WITHOUT_CLASSIFICATION	2.4379095898032255E-7	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999995086796711	WITHOUT_CLASSIFICATION	4.913203289186107E-7	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999996788206927	WITHOUT_CLASSIFICATION	3.211793072598947E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999999715707	WITHOUT_CLASSIFICATION	2.8429219226842858E-11	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999972486154426	WITHOUT_CLASSIFICATION	2.751384557411538E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999969564519069	WITHOUT_CLASSIFICATION	3.0435480931354465E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999969564519069	WITHOUT_CLASSIFICATION	3.0435480931354465E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999969564519069	WITHOUT_CLASSIFICATION	3.0435480931354465E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.999999683860396	WITHOUT_CLASSIFICATION	3.161396039931573E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999997844399094	WITHOUT_CLASSIFICATION	2.1556009052484712E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999838432282742	WITHOUT_CLASSIFICATION	1.6156771725857435E-5	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999894558911	WITHOUT_CLASSIFICATION	1.0544108976225208E-8	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999842785390304	WITHOUT_CLASSIFICATION	1.5721460969604235E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999921358018098	WITHOUT_CLASSIFICATION	7.864198190260396E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999812575571	WITHOUT_CLASSIFICATION	1.874244302095756E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999996650511357	WITHOUT_CLASSIFICATION	3.3494886434327633E-7	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999990749862563	WITHOUT_CLASSIFICATION	9.250137436505798E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999999508464771	WITHOUT_CLASSIFICATION	4.915352294454345E-8	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999909453400431	WITHOUT_CLASSIFICATION	9.054659956898748E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999914077894295	WITHOUT_CLASSIFICATION	8.592210570440853E-6	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999997265643439	WITHOUT_CLASSIFICATION	2.7343565615048335E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.99994689889141	WITHOUT_CLASSIFICATION	5.310110858992117E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9994189659262953	WITHOUT_CLASSIFICATION	5.810340737046452E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999945233533	WITHOUT_CLASSIFICATION	5.476646617099134E-9	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999974353580323	WITHOUT_CLASSIFICATION	2.5646419678213287E-6	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999977927457921	WITHOUT_CLASSIFICATION	2.207254207975864E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999961697078867	WITHOUT_CLASSIFICATION	3.83029211329421E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.999998620894199	WITHOUT_CLASSIFICATION	1.3791058009569612E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999245174770865	WITHOUT_CLASSIFICATION	7.548252291345274E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999997601884283	WITHOUT_CLASSIFICATION	2.398115717597252E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999544934987631	WITHOUT_CLASSIFICATION	4.5506501236988975E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999997787664947	WITHOUT_CLASSIFICATION	2.212335052252292E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999999452424202	WITHOUT_CLASSIFICATION	5.475757978768435E-8	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999977396832074	WITHOUT_CLASSIFICATION	2.2603167925993636E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999911768208	WITHOUT_CLASSIFICATION	8.823179127218659E-9	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999998535976294	WITHOUT_CLASSIFICATION	1.4640237054382348E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999999989892581	WITHOUT_CLASSIFICATION	1.0107418976966272E-9	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999973303110562	WITHOUT_CLASSIFICATION	2.6696889437609594E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999711501371256	WITHOUT_CLASSIFICATION	2.8849862874425026E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999981574163604	WITHOUT_CLASSIFICATION	1.842583639640863E-6	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9996193927228577	WITHOUT_CLASSIFICATION	3.80607277142192E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999848177309931	WITHOUT_CLASSIFICATION	1.5182269006880373E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9998137771135739	WITHOUT_CLASSIFICATION	1.8622288642612585E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999995424786	WITHOUT_CLASSIFICATION	4.5752130373190365E-10	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999783250712877	WITHOUT_CLASSIFICATION	2.167492871236957E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999785155804735	WITHOUT_CLASSIFICATION	2.1484419526528595E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999988384259806	WITHOUT_CLASSIFICATION	1.1615740194368243E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999854422903942	WITHOUT_CLASSIFICATION	1.4557709605790126E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999958402992688	WITHOUT_CLASSIFICATION	4.159700731207717E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999669587734692	WITHOUT_CLASSIFICATION	3.304122653080458E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999993696642048	WITHOUT_CLASSIFICATION	6.303357951860244E-7	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999247343381834	WITHOUT_CLASSIFICATION	7.52656618166159E-5	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9997989046833655	WITHOUT_CLASSIFICATION	2.0109531663451276E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9986566476103612	WITHOUT_CLASSIFICATION	0.0013433523896388044	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9997442412427131	WITHOUT_CLASSIFICATION	2.5575875728691734E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999911037652027	WITHOUT_CLASSIFICATION	8.896234797330344E-6	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9995326663178313	WITHOUT_CLASSIFICATION	4.6733368216860763E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999993391893018	WITHOUT_CLASSIFICATION	6.608106982437072E-7	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999998765942	WITHOUT_CLASSIFICATION	1.2340586573904374E-10	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9998181744473161	WITHOUT_CLASSIFICATION	1.8182555268387744E-4	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999998711617379	WITHOUT_CLASSIFICATION	1.2883826217137126E-7	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999024862759	WITHOUT_CLASSIFICATION	9.751372410446964E-8	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999974130484376	WITHOUT_CLASSIFICATION	2.586951562347527E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999998090017298	WITHOUT_CLASSIFICATION	1.9099827023033113E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999969683726118	WITHOUT_CLASSIFICATION	3.031627388203182E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999742889236013	WITHOUT_CLASSIFICATION	2.5711076398673004E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999999530902179	WITHOUT_CLASSIFICATION	4.690978206441346E-8	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999999371305177	WITHOUT_CLASSIFICATION	6.286948229223622E-8	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999725644183	WITHOUT_CLASSIFICATION	2.7435581748021182E-8	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999985687646257	WITHOUT_CLASSIFICATION	1.431235374314941E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999961310835688	WITHOUT_CLASSIFICATION	3.868916431189096E-6	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999998022562954	WITHOUT_CLASSIFICATION	1.9774370463781577E-7	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.999996332514618	WITHOUT_CLASSIFICATION	3.6674853819934814E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999860789074283	WITHOUT_CLASSIFICATION	1.392109257168556E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.999998854886333	WITHOUT_CLASSIFICATION	1.1451136669506442E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999999371092466	WITHOUT_CLASSIFICATION	6.289075339781803E-8	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999999371092466	WITHOUT_CLASSIFICATION	6.289075339781803E-8	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998889147393	WITHOUT_CLASSIFICATION	1.1108526070085552E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998889147393	WITHOUT_CLASSIFICATION	1.1108526070085552E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999860789074283	WITHOUT_CLASSIFICATION	1.392109257168556E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998889147393	WITHOUT_CLASSIFICATION	1.1108526070085552E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999990511301459	WITHOUT_CLASSIFICATION	9.488698542777532E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999975061083463	WITHOUT_CLASSIFICATION	2.4938916537229677E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999975061083463	WITHOUT_CLASSIFICATION	2.4938916537229677E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999985851979396	WITHOUT_CLASSIFICATION	1.4148020603993371E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999999954999801	WITHOUT_CLASSIFICATION	4.500019880334094E-9	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.999999973665222	WITHOUT_CLASSIFICATION	2.6334777980438465E-8	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9998543037890048	WITHOUT_CLASSIFICATION	1.4569621099526283E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999990588752845	WITHOUT_CLASSIFICATION	9.41124715549231E-7	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999986972136516	WITHOUT_CLASSIFICATION	1.3027863483839423E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999932581508112	WITHOUT_CLASSIFICATION	6.74184918884277E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999823950544778	WITHOUT_CLASSIFICATION	1.7604945522146855E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999711940640174	WITHOUT_CLASSIFICATION	2.880593598272305E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999978254640483	WITHOUT_CLASSIFICATION	2.17453595174961E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999771266608	WITHOUT_CLASSIFICATION	2.2873339233933557E-8	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999994612997	WITHOUT_CLASSIFICATION	5.387002421882661E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999983928395059	WITHOUT_CLASSIFICATION	1.6071604942179537E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999991743755	WITHOUT_CLASSIFICATION	8.256245041906074E-10	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.999995581324138	WITHOUT_CLASSIFICATION	4.418675861960485E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999998509443	WITHOUT_CLASSIFICATION	1.4905558611547614E-10	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999992522722112	WITHOUT_CLASSIFICATION	7.477277887304201E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9995753962253789	WITHOUT_CLASSIFICATION	4.246037746210765E-4	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9997571009795588	WITHOUT_CLASSIFICATION	2.4289902044108554E-4	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999992685684785	WITHOUT_CLASSIFICATION	7.314315215046629E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999957163147	WITHOUT_CLASSIFICATION	4.283685294093065E-9	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999995475107428	WITHOUT_CLASSIFICATION	4.5248925713094E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999953878188	WITHOUT_CLASSIFICATION	4.612181216918314E-9	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999813056030826	WITHOUT_CLASSIFICATION	1.8694396917339712E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999813056030826	WITHOUT_CLASSIFICATION	1.8694396917339712E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999999576931196	WITHOUT_CLASSIFICATION	4.23068804225182E-8	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999999635811178	WITHOUT_CLASSIFICATION	3.6418882224853583E-8	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.999997380301866	WITHOUT_CLASSIFICATION	2.6196981339777644E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999988759515963	WITHOUT_CLASSIFICATION	1.1240484037433215E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999999897390311	WITHOUT_CLASSIFICATION	1.0260968921418717E-8	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999940805566081	WITHOUT_CLASSIFICATION	5.91944339183872E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999995193628217	WITHOUT_CLASSIFICATION	4.806371782893231E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9998368737465193	WITHOUT_CLASSIFICATION	1.6312625348075387E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9998808533221252	WITHOUT_CLASSIFICATION	1.1914667787480701E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.999918333575583	WITHOUT_CLASSIFICATION	8.166642441699198E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999991372193939	WITHOUT_CLASSIFICATION	8.627806061473068E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.99998791402891	WITHOUT_CLASSIFICATION	1.2085971089962071E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999998320661999	WITHOUT_CLASSIFICATION	1.6793380006753432E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999967704895727	WITHOUT_CLASSIFICATION	3.2295104272968024E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999999078906	WITHOUT_CLASSIFICATION	9.21094442338454E-11	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999555493629	WITHOUT_CLASSIFICATION	4.445063704834468E-8	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999970997440799	WITHOUT_CLASSIFICATION	2.9002559200865454E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999971883927	WITHOUT_CLASSIFICATION	2.81160715655302E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999047524614	WITHOUT_CLASSIFICATION	9.52475386893326E-8	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999974338047875	WITHOUT_CLASSIFICATION	2.566195212520795E-6	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.999998693987827	WITHOUT_CLASSIFICATION	1.3060121730298817E-6	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999984720683409	WITHOUT_CLASSIFICATION	1.5279316591114253E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999958634367975	WITHOUT_CLASSIFICATION	4.1365632026220445E-6	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.999984987173036	WITHOUT_CLASSIFICATION	1.5012826964097067E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999997631990886	WITHOUT_CLASSIFICATION	2.3680091136962125E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999988044904294	WITHOUT_CLASSIFICATION	1.195509570541921E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999980623435	WITHOUT_CLASSIFICATION	1.9376565361215503E-9	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.999999902510388	WITHOUT_CLASSIFICATION	9.748961209713271E-8	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999465227494	WITHOUT_CLASSIFICATION	5.347725068754556E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999336047702	WITHOUT_CLASSIFICATION	6.639522966721986E-8	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999988774271881	WITHOUT_CLASSIFICATION	1.122572811934397E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999391221396	WITHOUT_CLASSIFICATION	6.087786046159643E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999188609355334	WITHOUT_CLASSIFICATION	8.113906446665163E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999979306949301	WITHOUT_CLASSIFICATION	2.0693050698833083E-6	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9976142420432142	WITHOUT_CLASSIFICATION	0.002385757956785746	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999991977051131	WITHOUT_CLASSIFICATION	8.022948867604823E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999903986188	WITHOUT_CLASSIFICATION	9.601381274109019E-9	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999998678012317	WITHOUT_CLASSIFICATION	1.321987682614753E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.999160954358409	WITHOUT_CLASSIFICATION	8.390456415908857E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.999837602794871	WITHOUT_CLASSIFICATION	1.6239720512901964E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999689198306	WITHOUT_CLASSIFICATION	3.108016953415085E-8	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999264889176	WITHOUT_CLASSIFICATION	7.351108244704809E-8	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999995101488042	WITHOUT_CLASSIFICATION	4.89851195822558E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999997105936935	WITHOUT_CLASSIFICATION	2.8940630650265883E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.999440232070783	WITHOUT_CLASSIFICATION	5.597679292169891E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9998808533221252	WITHOUT_CLASSIFICATION	1.1914667787480701E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.999918333575583	WITHOUT_CLASSIFICATION	8.166642441699198E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999991372193939	WITHOUT_CLASSIFICATION	8.627806061473068E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999997574891167	WITHOUT_CLASSIFICATION	2.4251088326035595E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999999643820943	WITHOUT_CLASSIFICATION	3.5617905647487755E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.999999631547433	WITHOUT_CLASSIFICATION	3.684525669015072E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999995488675693	WITHOUT_CLASSIFICATION	4.511324307420501E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.999999288621913	WITHOUT_CLASSIFICATION	7.113780869919191E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999963474868684	WITHOUT_CLASSIFICATION	3.6525131316636326E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999976291689872	WITHOUT_CLASSIFICATION	2.3708310128478813E-6	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999495605406485	WITHOUT_CLASSIFICATION	5.043945935148182E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999160905683	WITHOUT_CLASSIFICATION	8.390943171817904E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999997524734446	WITHOUT_CLASSIFICATION	2.4752655538587326E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999984223684528	WITHOUT_CLASSIFICATION	1.5776315470813606E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999984223684528	WITHOUT_CLASSIFICATION	1.5776315470813606E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999923873140047	WITHOUT_CLASSIFICATION	7.612685995261872E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999235869029828	WITHOUT_CLASSIFICATION	7.641309701712539E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999818710772	WITHOUT_CLASSIFICATION	1.8128922764972886E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999994792063226	WITHOUT_CLASSIFICATION	5.207936773975436E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999986323165764	WITHOUT_CLASSIFICATION	1.367683423684486E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999646942805	WITHOUT_CLASSIFICATION	3.530571939461572E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999693217202	WITHOUT_CLASSIFICATION	3.067827979885226E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999974254359485	WITHOUT_CLASSIFICATION	2.574564051462025E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999993248006698	WITHOUT_CLASSIFICATION	6.751993301870803E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999063279393	WITHOUT_CLASSIFICATION	9.367206062186668E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999550008566	WITHOUT_CLASSIFICATION	4.4999143503751736E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997661500247	WITHOUT_CLASSIFICATION	2.3384997529110077E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999997581225839	WITHOUT_CLASSIFICATION	2.41877416082943E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210704231637	WITHOUT_CLASSIFICATION	7.892957683631731E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913756463069	WITHOUT_CLASSIFICATION	8.624353693102329E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998985756661278	WITHOUT_CLASSIFICATION	1.0142433387217273E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999988272637257	WITHOUT_CLASSIFICATION	1.1727362742668337E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999896584651663	WITHOUT_CLASSIFICATION	1.0341534833579713E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999053804822	WITHOUT_CLASSIFICATION	9.461951772407671E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997984405016	WITHOUT_CLASSIFICATION	2.0155949838829128E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999962641619441	WITHOUT_CLASSIFICATION	3.7358380558111628E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999993152846541	WITHOUT_CLASSIFICATION	6.847153459906059E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999989707570044	WITHOUT_CLASSIFICATION	1.029242995553526E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995498955736442	WITHOUT_CLASSIFICATION	4.501044263557547E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996039757959	WITHOUT_CLASSIFICATION	3.960242040814528E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999997813376969	WITHOUT_CLASSIFICATION	2.186623030881608E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993757424045	WITHOUT_CLASSIFICATION	6.24257595595348E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996468326955	WITHOUT_CLASSIFICATION	3.5316730456752086E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999944165091134	WITHOUT_CLASSIFICATION	5.5834908865640945E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999851110953429	WITHOUT_CLASSIFICATION	1.4888904657130229E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999940993887878	WITHOUT_CLASSIFICATION	5.900611212201265E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999971707914602	WITHOUT_CLASSIFICATION	2.829208539758563E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998348306596	WITHOUT_CLASSIFICATION	1.6516934046521218E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999997561905763	WITHOUT_CLASSIFICATION	2.438094237440967E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999981171724817	WITHOUT_CLASSIFICATION	1.8828275183059577E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999966046719199	WITHOUT_CLASSIFICATION	3.3953280802171396E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999751651929095	WITHOUT_CLASSIFICATION	2.4834807090399792E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999997054836671	WITHOUT_CLASSIFICATION	2.9451633288824234E-6	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999390935945	WITHOUT_CLASSIFICATION	6.090640542829931E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999772224247361	WITHOUT_CLASSIFICATION	2.2777575263861038E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.999997074892256	WITHOUT_CLASSIFICATION	2.925107743939674E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995994533808	WITHOUT_CLASSIFICATION	4.005466192568952E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999997842262546	WITHOUT_CLASSIFICATION	2.157737454114291E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999929829247225	WITHOUT_CLASSIFICATION	7.017075277420742E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999993450183273	WITHOUT_CLASSIFICATION	6.549816727680122E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995851332219985	WITHOUT_CLASSIFICATION	4.1486677800144545E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999923873140047	WITHOUT_CLASSIFICATION	7.612685995261872E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999235869029828	WITHOUT_CLASSIFICATION	7.641309701712539E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999818710772	WITHOUT_CLASSIFICATION	1.8128922764972886E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999994792063226	WITHOUT_CLASSIFICATION	5.207936773975436E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999693217202	WITHOUT_CLASSIFICATION	3.067827979885226E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999974254359485	WITHOUT_CLASSIFICATION	2.574564051462025E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9991248765206008	WITHOUT_CLASSIFICATION	8.751234793991692E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999958038415752	WITHOUT_CLASSIFICATION	4.196158424884908E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.99999536906646	WITHOUT_CLASSIFICATION	4.630933540030845E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999550008566	WITHOUT_CLASSIFICATION	4.4999143503751736E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997661500247	WITHOUT_CLASSIFICATION	2.3384997529110077E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999997581225839	WITHOUT_CLASSIFICATION	2.41877416082943E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210704231637	WITHOUT_CLASSIFICATION	7.892957683631731E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998985756661278	WITHOUT_CLASSIFICATION	1.0142433387217273E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999725445613934	WITHOUT_CLASSIFICATION	2.7455438606510436E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999585767001467	WITHOUT_CLASSIFICATION	4.142329985332614E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999442968677	WITHOUT_CLASSIFICATION	5.570313246480579E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9910229505864917	WITHOUT_CLASSIFICATION	0.008977049413508307	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999977873426916	WITHOUT_CLASSIFICATION	2.2126573083782207E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999995839420723	WITHOUT_CLASSIFICATION	4.1605792760012933E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998979690017	WITHOUT_CLASSIFICATION	1.0203099832599523E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999978639351855	WITHOUT_CLASSIFICATION	2.1360648144140753E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999971327704729	WITHOUT_CLASSIFICATION	2.8672295271133185E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999994880577743	WITHOUT_CLASSIFICATION	5.119422256839757E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999971327704729	WITHOUT_CLASSIFICATION	2.8672295271133185E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9875293986687196	WITHOUT_CLASSIFICATION	0.012470601331280395	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999999095826905	WITHOUT_CLASSIFICATION	9.041730947964032E-8	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999325416948287	WITHOUT_CLASSIFICATION	6.745830517133199E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999325416948287	WITHOUT_CLASSIFICATION	6.745830517133199E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999996625425279	WITHOUT_CLASSIFICATION	3.3745747216164676E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999998961501473	WITHOUT_CLASSIFICATION	1.0384985269492224E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999999695306852	WITHOUT_CLASSIFICATION	3.0469314832772175E-8	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999997248598304	WITHOUT_CLASSIFICATION	2.751401696085949E-7	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9986286814204637	WITHOUT_CLASSIFICATION	0.0013713185795364098	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999983227476	WITHOUT_CLASSIFICATION	1.6772525059853676E-9	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.999949916156216	WITHOUT_CLASSIFICATION	5.0083843783966276E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.999999898952443	WITHOUT_CLASSIFICATION	1.0104755707698939E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999995174988275	WITHOUT_CLASSIFICATION	4.825011724547813E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.999999889387007	WITHOUT_CLASSIFICATION	1.106129929548478E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999999249689587	WITHOUT_CLASSIFICATION	7.503104124993898E-8	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999532352358251	WITHOUT_CLASSIFICATION	4.676476417477067E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999743051786917	WITHOUT_CLASSIFICATION	2.5694821308355278E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999743051786917	WITHOUT_CLASSIFICATION	2.5694821308355278E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999992330640873	WITHOUT_CLASSIFICATION	7.66935912587851E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999850713190234	WITHOUT_CLASSIFICATION	1.4928680976517702E-5	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999987414628486	WITHOUT_CLASSIFICATION	1.258537151411863E-6	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9991964830986308	WITHOUT_CLASSIFICATION	8.035169013692298E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.999998138762898	WITHOUT_CLASSIFICATION	1.8612371019757185E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.999995648063411	WITHOUT_CLASSIFICATION	4.351936589052891E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.99999566475752	WITHOUT_CLASSIFICATION	4.33524248001171E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999920500296079	WITHOUT_CLASSIFICATION	7.949970392059233E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999664953334	WITHOUT_CLASSIFICATION	3.350466659537843E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999260741169	WITHOUT_CLASSIFICATION	7.39258830947648E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999978565010067	WITHOUT_CLASSIFICATION	2.1434989932586105E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999063378924392	WITHOUT_CLASSIFICATION	9.366210756083608E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999895005942298	WITHOUT_CLASSIFICATION	1.04994057702533E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999755313944685	WITHOUT_CLASSIFICATION	2.446860553154124E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999988759515963	WITHOUT_CLASSIFICATION	1.1240484037433215E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999998686740847	WITHOUT_CLASSIFICATION	1.3132591530704836E-7	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999902141510711	WITHOUT_CLASSIFICATION	9.78584892888879E-6	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999996496089281	WITHOUT_CLASSIFICATION	3.503910720144048E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999778814432	WITHOUT_CLASSIFICATION	2.2118556766375166E-8	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999874829842362	WITHOUT_CLASSIFICATION	1.2517015763729781E-5	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.999947538988938	WITHOUT_CLASSIFICATION	5.246101106218924E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999501471313598	WITHOUT_CLASSIFICATION	4.985286864028287E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999893444141	WITHOUT_CLASSIFICATION	1.0655585940680547E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.999984910308354	WITHOUT_CLASSIFICATION	1.5089691645964194E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999994697822345	WITHOUT_CLASSIFICATION	5.302177654537654E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999945673314	WITHOUT_CLASSIFICATION	5.432668561377438E-9	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999945673314	WITHOUT_CLASSIFICATION	5.432668561377438E-9	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999175080868556	WITHOUT_CLASSIFICATION	8.249191314428838E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999957425643622	WITHOUT_CLASSIFICATION	4.257435637771854E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999751104891	WITHOUT_CLASSIFICATION	2.4889510830325066E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998331341551376	WITHOUT_CLASSIFICATION	1.6686584486245296E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999631949260278	WITHOUT_CLASSIFICATION	3.680507397227879E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999479877284141	WITHOUT_CLASSIFICATION	5.201227158597492E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999893122605423	WITHOUT_CLASSIFICATION	1.0687739457605128E-5	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9997948234780473	WITHOUT_CLASSIFICATION	2.051765219526367E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999980705226511	WITHOUT_CLASSIFICATION	1.9294773489176153E-6	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.99997866496385	WITHOUT_CLASSIFICATION	2.1335036149944103E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.999983939742514	WITHOUT_CLASSIFICATION	1.6060257485977356E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999995927951835	WITHOUT_CLASSIFICATION	4.07204816446551E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998090293704	WITHOUT_CLASSIFICATION	1.9097062957143003E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999856244777164	WITHOUT_CLASSIFICATION	1.4375522283585779E-5	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.999999989990534	WITHOUT_CLASSIFICATION	1.000946607575474E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999877042027907	WITHOUT_CLASSIFICATION	1.2295797209401776E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999999632077	WITHOUT_CLASSIFICATION	3.679233004560003E-11	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9685193256343845	WITHOUT_CLASSIFICATION	0.03148067436561552	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.99995941593021	WITHOUT_CLASSIFICATION	4.0584069790071146E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999930093978773	WITHOUT_CLASSIFICATION	6.990602122732652E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999929562380766	WITHOUT_CLASSIFICATION	7.043761923302176E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999720842171	WITHOUT_CLASSIFICATION	2.7915782806243586E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999997813376969	WITHOUT_CLASSIFICATION	2.186623030881608E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998856971264	WITHOUT_CLASSIFICATION	1.1430287357453237E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995994533808	WITHOUT_CLASSIFICATION	4.005466192568952E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999995839420723	WITHOUT_CLASSIFICATION	4.1605792760012933E-7	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999999031349627	WITHOUT_CLASSIFICATION	9.686503725902981E-8	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999822528942843	WITHOUT_CLASSIFICATION	1.7747105715700152E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999993152846541	WITHOUT_CLASSIFICATION	6.847153459906059E-7	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.999997512335953	WITHOUT_CLASSIFICATION	2.487664046896222E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999964841965343	WITHOUT_CLASSIFICATION	3.515803465576456E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999984287568338	WITHOUT_CLASSIFICATION	1.5712431661942862E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999883241532593	WITHOUT_CLASSIFICATION	1.1675846740739496E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995994533808	WITHOUT_CLASSIFICATION	4.005466192568952E-7	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999846321280168	WITHOUT_CLASSIFICATION	1.536787198324376E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999865898822965	WITHOUT_CLASSIFICATION	1.3410117703502435E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999868325145375	WITHOUT_CLASSIFICATION	1.316748546248071E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999999599855351	WITHOUT_CLASSIFICATION	4.001446484314534E-8	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999998863776514	WITHOUT_CLASSIFICATION	1.1362234868000287E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9978811406586556	WITHOUT_CLASSIFICATION	0.002118859341344417	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999891615036	WITHOUT_CLASSIFICATION	1.083849645699734E-8	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999989352551073	WITHOUT_CLASSIFICATION	1.0647448926768898E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999125416752591	WITHOUT_CLASSIFICATION	8.745832474085698E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999977571237514	WITHOUT_CLASSIFICATION	2.2428762486294018E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999843471475	WITHOUT_CLASSIFICATION	1.5652852484933493E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999843471475	WITHOUT_CLASSIFICATION	1.5652852484933493E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999843471475	WITHOUT_CLASSIFICATION	1.5652852484933493E-8	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999030820655737	WITHOUT_CLASSIFICATION	9.691793442635099E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999463841548047	WITHOUT_CLASSIFICATION	5.361584519528148E-5	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999998961812081	WITHOUT_CLASSIFICATION	1.0381879191063666E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999896669246	WITHOUT_CLASSIFICATION	1.0333075284292983E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999973050570048	WITHOUT_CLASSIFICATION	2.694942995299149E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999599832607	WITHOUT_CLASSIFICATION	4.0016739261782983E-8	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999988289798434	WITHOUT_CLASSIFICATION	1.1710201565576532E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999998548702886	WITHOUT_CLASSIFICATION	1.4512971139932029E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999999336777549	WITHOUT_CLASSIFICATION	6.632224515290541E-8	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999983160462468	WITHOUT_CLASSIFICATION	1.6839537532592536E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.999999999861581	WITHOUT_CLASSIFICATION	1.384190114418993E-10	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999814482422	WITHOUT_CLASSIFICATION	1.855175781633415E-8	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999956442345309	WITHOUT_CLASSIFICATION	4.3557654690899454E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999989730103777	WITHOUT_CLASSIFICATION	1.0269896223561017E-6	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.998968386432407	WITHOUT_CLASSIFICATION	0.001031613567593014	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999978515	WITHOUT_CLASSIFICATION	2.1485005300653224E-12	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999998542002729	WITHOUT_CLASSIFICATION	1.4579972716665231E-7	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999993249386269	WITHOUT_CLASSIFICATION	6.750613732001641E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999630667171	WITHOUT_CLASSIFICATION	3.693328288125097E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999734467971255	WITHOUT_CLASSIFICATION	2.655320287449532E-5	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999998594	WITHOUT_CLASSIFICATION	1.405320957401482E-13	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999969564519069	WITHOUT_CLASSIFICATION	3.0435480931354465E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999995841645452	WITHOUT_CLASSIFICATION	4.158354547702075E-7	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999655414233	WITHOUT_CLASSIFICATION	3.4458576759070794E-8	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999849330168	WITHOUT_CLASSIFICATION	1.5066983196443027E-8	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999931629984	WITHOUT_CLASSIFICATION	6.837001619796151E-9	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999994623389037	WITHOUT_CLASSIFICATION	5.376610963827279E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999896933023	WITHOUT_CLASSIFICATION	1.030669773023793E-8	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999786330162216	WITHOUT_CLASSIFICATION	2.136698377840587E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999750484709	WITHOUT_CLASSIFICATION	2.4951529069047875E-8	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999992674171526	WITHOUT_CLASSIFICATION	7.325828474526745E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999602342470303	WITHOUT_CLASSIFICATION	3.976575296970542E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999951076524	WITHOUT_CLASSIFICATION	4.892347642591765E-9	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999799286955	WITHOUT_CLASSIFICATION	2.007130448108336E-8	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999958733925	WITHOUT_CLASSIFICATION	4.126607530868474E-9	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999968048317901	WITHOUT_CLASSIFICATION	3.1951682099868553E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9988366303762066	WITHOUT_CLASSIFICATION	0.0011633696237933395	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999814037503866	WITHOUT_CLASSIFICATION	1.8596249613434637E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998889147393	WITHOUT_CLASSIFICATION	1.1108526070085552E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998889147393	WITHOUT_CLASSIFICATION	1.1108526070085552E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999983928395059	WITHOUT_CLASSIFICATION	1.6071604942179537E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999983928395059	WITHOUT_CLASSIFICATION	1.6071604942179537E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999852210609	WITHOUT_CLASSIFICATION	1.4778938984139232E-8	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999987996495519	WITHOUT_CLASSIFICATION	1.2003504482423954E-6	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999816806698	WITHOUT_CLASSIFICATION	1.8319330131952916E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999997652099674	WITHOUT_CLASSIFICATION	2.347900326333307E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999997652099674	WITHOUT_CLASSIFICATION	2.347900326333307E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999997652099674	WITHOUT_CLASSIFICATION	2.347900326333307E-7	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999931090868841	WITHOUT_CLASSIFICATION	6.89091311596771E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999996119220925	WITHOUT_CLASSIFICATION	3.880779075004686E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.99998791402891	WITHOUT_CLASSIFICATION	1.2085971089962071E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999987631144365	WITHOUT_CLASSIFICATION	1.2368855635277454E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999998718410783	WITHOUT_CLASSIFICATION	1.2815892159666232E-7	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999996744459647	WITHOUT_CLASSIFICATION	3.255540352746239E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999970475193649	WITHOUT_CLASSIFICATION	2.9524806350309885E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999993136847486	WITHOUT_CLASSIFICATION	6.863152513940986E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999993136847486	WITHOUT_CLASSIFICATION	6.863152513940986E-6	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999986952847	WITHOUT_CLASSIFICATION	1.3047153982170124E-9	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999985274434355	WITHOUT_CLASSIFICATION	1.4725565644581854E-6	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999965831773159	WITHOUT_CLASSIFICATION	3.4168226841397754E-6	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999083930756	WITHOUT_CLASSIFICATION	9.160692440615297E-8	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999846980488	WITHOUT_CLASSIFICATION	1.5301951139887992E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999677189354236	WITHOUT_CLASSIFICATION	3.228106457641817E-5	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999998949947414	WITHOUT_CLASSIFICATION	1.0500525857319395E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999984223684528	WITHOUT_CLASSIFICATION	1.5776315470813606E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999986323165764	WITHOUT_CLASSIFICATION	1.367683423684486E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999646942805	WITHOUT_CLASSIFICATION	3.530571939461572E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999063279393	WITHOUT_CLASSIFICATION	9.367206062186668E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913756463069	WITHOUT_CLASSIFICATION	8.624353693102329E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999999684235614	WITHOUT_CLASSIFICATION	3.1576438541142455E-8	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999996487283824	WITHOUT_CLASSIFICATION	3.5127161756869663E-7	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999999453181274	WITHOUT_CLASSIFICATION	5.4681872574022474E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998979690017	WITHOUT_CLASSIFICATION	1.0203099832599523E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999921973239612	WITHOUT_CLASSIFICATION	7.802676038857033E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.999999986485893	WITHOUT_CLASSIFICATION	1.3514106971020937E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999992330640873	WITHOUT_CLASSIFICATION	7.66935912587851E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.999999982676152	WITHOUT_CLASSIFICATION	1.7323848031849168E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9998701688335367	WITHOUT_CLASSIFICATION	1.2983116646334702E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999922622949	WITHOUT_CLASSIFICATION	7.73770515354485E-9	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999996602224134	WITHOUT_CLASSIFICATION	3.3977758662532384E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999999609719749	WITHOUT_CLASSIFICATION	3.9028025070877654E-8	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999972001099546	WITHOUT_CLASSIFICATION	2.7998900453471957E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997005100161	WITHOUT_CLASSIFICATION	2.9948998389754664E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999999940193811	WITHOUT_CLASSIFICATION	5.980618905903081E-9	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999972326671	WITHOUT_CLASSIFICATION	2.7673329936447068E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999901725762	WITHOUT_CLASSIFICATION	9.827423852995126E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999901725762	WITHOUT_CLASSIFICATION	9.827423852995126E-9	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999935431781	WITHOUT_CLASSIFICATION	6.456821867463058E-9	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999103885622919	WITHOUT_CLASSIFICATION	8.96114377081056E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999901662188	WITHOUT_CLASSIFICATION	9.833781203756855E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999977446801405	WITHOUT_CLASSIFICATION	2.2553198594426797E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999977446801405	WITHOUT_CLASSIFICATION	2.2553198594426797E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9996432375546571	WITHOUT_CLASSIFICATION	3.5676244534289494E-4	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.7873251428096536	WITHOUT_CLASSIFICATION	0.21267485719034637	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.999999250163855	WITHOUT_CLASSIFICATION	7.498361448571854E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999829692393	WITHOUT_CLASSIFICATION	1.703076062118847E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999762042668082	WITHOUT_CLASSIFICATION	2.37957331917196E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999837897872	WITHOUT_CLASSIFICATION	1.6210212871699793E-8	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999707846973	WITHOUT_CLASSIFICATION	2.9215302748925857E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999997752497286	WITHOUT_CLASSIFICATION	2.2475027138276797E-7	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999989609824023	WITHOUT_CLASSIFICATION	1.0390175977414095E-6	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999967686933655	WITHOUT_CLASSIFICATION	3.2313066344309018E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999975874343	WITHOUT_CLASSIFICATION	2.4125656462615493E-9	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.999999765914675	WITHOUT_CLASSIFICATION	2.3408532499870556E-7	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9998388590764786	WITHOUT_CLASSIFICATION	1.6114092352140507E-4	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999998745297	WITHOUT_CLASSIFICATION	1.2547039410595182E-10	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999961996918721	WITHOUT_CLASSIFICATION	3.8003081278052816E-6	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999999302886227	WITHOUT_CLASSIFICATION	6.971137726214316E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999624745907	WITHOUT_CLASSIFICATION	3.75254093738023E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999791527969	WITHOUT_CLASSIFICATION	2.0847203018368442E-8	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999989221147	WITHOUT_CLASSIFICATION	1.077885273718107E-9	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999304233833	WITHOUT_CLASSIFICATION	6.957661662809257E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999977905264881	WITHOUT_CLASSIFICATION	2.2094735120493475E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999905870771075	WITHOUT_CLASSIFICATION	9.412922892567203E-6	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.999997133147257	WITHOUT_CLASSIFICATION	2.866852743012594E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999838786586842	WITHOUT_CLASSIFICATION	1.6121341315831264E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998679679599	WITHOUT_CLASSIFICATION	1.3203203996945034E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998679679599	WITHOUT_CLASSIFICATION	1.3203203996945034E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998679679599	WITHOUT_CLASSIFICATION	1.3203203996945034E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998679679599	WITHOUT_CLASSIFICATION	1.3203203996945034E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999997868826235	WITHOUT_CLASSIFICATION	2.1311737647419435E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999434395194	WITHOUT_CLASSIFICATION	5.65604806533568E-8	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999994411575817	WITHOUT_CLASSIFICATION	5.588424182439414E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999994411575817	WITHOUT_CLASSIFICATION	5.588424182439414E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999994411575817	WITHOUT_CLASSIFICATION	5.588424182439414E-7	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.999999827944156	WITHOUT_CLASSIFICATION	1.720558439936873E-7	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999673097203825	WITHOUT_CLASSIFICATION	3.269027961749016E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999996788282145	WITHOUT_CLASSIFICATION	3.2117178556938415E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999986552566694	WITHOUT_CLASSIFICATION	1.344743330517226E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999986552566694	WITHOUT_CLASSIFICATION	1.344743330517226E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999778814432	WITHOUT_CLASSIFICATION	2.2118556766375166E-8	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999778814432	WITHOUT_CLASSIFICATION	2.2118556766375166E-8	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9907245587863863	WITHOUT_CLASSIFICATION	0.009275441213613678	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9907245587863863	WITHOUT_CLASSIFICATION	0.009275441213613678	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9996249452336501	WITHOUT_CLASSIFICATION	3.750547663498389E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999995874652301	WITHOUT_CLASSIFICATION	4.1253476987655177E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.99999756651087	WITHOUT_CLASSIFICATION	2.4334891300410348E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999992517170512	WITHOUT_CLASSIFICATION	7.482829488265806E-7	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999997673194776	WITHOUT_CLASSIFICATION	2.3268052241999658E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999959995603478	WITHOUT_CLASSIFICATION	4.000439652230584E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.999992176880275	WITHOUT_CLASSIFICATION	7.82311972495978E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999841216033	WITHOUT_CLASSIFICATION	1.5878396705722314E-8	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999996916605816	WITHOUT_CLASSIFICATION	3.083394184900744E-7	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999931449049071	WITHOUT_CLASSIFICATION	6.855095092872603E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999974767825005	WITHOUT_CLASSIFICATION	2.5232174994715287E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.999998559298948	WITHOUT_CLASSIFICATION	1.4407010520697818E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999999956129155	WITHOUT_CLASSIFICATION	4.3870845040877E-9	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999993043165042	WITHOUT_CLASSIFICATION	6.956834958164922E-7	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999981773654989	WITHOUT_CLASSIFICATION	1.8226345010729412E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999981761581287	WITHOUT_CLASSIFICATION	1.8238418712706844E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996974715947	WITHOUT_CLASSIFICATION	3.025284053589656E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997970931938	WITHOUT_CLASSIFICATION	2.0290680635267023E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999717416075827	WITHOUT_CLASSIFICATION	2.8258392417246043E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999953998066292	WITHOUT_CLASSIFICATION	4.600193370757781E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976239859374	WITHOUT_CLASSIFICATION	2.3760140625995525E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976239859374	WITHOUT_CLASSIFICATION	2.3760140625995525E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999851469013114	WITHOUT_CLASSIFICATION	1.4853098688785381E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999981732102653	WITHOUT_CLASSIFICATION	1.8267897347274616E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9991572462012	WITHOUT_CLASSIFICATION	8.42753798799884E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9992218785038626	WITHOUT_CLASSIFICATION	7.78121496137532E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9991046937524332	WITHOUT_CLASSIFICATION	8.953062475669794E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9996503910574931	WITHOUT_CLASSIFICATION	3.496089425069888E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9994901957978798	WITHOUT_CLASSIFICATION	5.098042021201559E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9983078063244988	WITHOUT_CLASSIFICATION	0.0016921936755011277	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9993777378902666	WITHOUT_CLASSIFICATION	6.2226210973327E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9978040308058481	WITHOUT_CLASSIFICATION	0.00219596919415195	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9994457469943804	WITHOUT_CLASSIFICATION	5.542530056195556E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9994687354375587	WITHOUT_CLASSIFICATION	5.312645624412202E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9991342287809895	WITHOUT_CLASSIFICATION	8.65771219010472E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9980400312970168	WITHOUT_CLASSIFICATION	0.00195996870298313	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9994407641759776	WITHOUT_CLASSIFICATION	5.592358240223307E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9989750680301712	WITHOUT_CLASSIFICATION	0.0010249319698287908	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999937279151001	WITHOUT_CLASSIFICATION	6.272084899856363E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999955017657353	WITHOUT_CLASSIFICATION	4.498234264797979E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999998071479816	WITHOUT_CLASSIFICATION	1.9285201830395798E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999712380697	WITHOUT_CLASSIFICATION	2.876193029126524E-8	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999920463926696	WITHOUT_CLASSIFICATION	7.953607330402091E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999920463926696	WITHOUT_CLASSIFICATION	7.953607330402091E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999920463926696	WITHOUT_CLASSIFICATION	7.953607330402091E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999920463926696	WITHOUT_CLASSIFICATION	7.953607330402091E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9991788973589247	WITHOUT_CLASSIFICATION	8.211026410753369E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999870922576	WITHOUT_CLASSIFICATION	1.2907742515584403E-8	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999999578383	WITHOUT_CLASSIFICATION	4.216160715273813E-11	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992474417397	WITHOUT_CLASSIFICATION	7.525582601677903E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992474417397	WITHOUT_CLASSIFICATION	7.525582601677903E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999952992900322	WITHOUT_CLASSIFICATION	4.700709967808211E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999990060941965	WITHOUT_CLASSIFICATION	9.93905803537234E-7	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999990060941965	WITHOUT_CLASSIFICATION	9.93905803537234E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991748042222	WITHOUT_CLASSIFICATION	8.251957777723784E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991748042222	WITHOUT_CLASSIFICATION	8.251957777723784E-7	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999985027211675	WITHOUT_CLASSIFICATION	1.4972788324310819E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999951946888053	WITHOUT_CLASSIFICATION	4.805311194660745E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999947404802739	WITHOUT_CLASSIFICATION	5.259519726095031E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999997086487076	WITHOUT_CLASSIFICATION	2.9135129247691285E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999753601428	WITHOUT_CLASSIFICATION	2.463985712907517E-8	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999957750558	WITHOUT_CLASSIFICATION	4.224944152500017E-9	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999909993459	WITHOUT_CLASSIFICATION	9.000654059873288E-9	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999995863881856	WITHOUT_CLASSIFICATION	4.13611814393013E-7	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9989587777059624	WITHOUT_CLASSIFICATION	0.0010412222940375973	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9989587777059624	WITHOUT_CLASSIFICATION	0.0010412222940375973	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999867380962277	WITHOUT_CLASSIFICATION	1.3261903772319653E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999998987262757	WITHOUT_CLASSIFICATION	1.0127372424533672E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999998274085095	WITHOUT_CLASSIFICATION	1.7259149049231E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999700726313	WITHOUT_CLASSIFICATION	2.992736867834045E-8	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999885577934652	WITHOUT_CLASSIFICATION	1.1442206534672035E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999819742589	WITHOUT_CLASSIFICATION	1.8025741224048667E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999819742589	WITHOUT_CLASSIFICATION	1.8025741224048667E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999819742589	WITHOUT_CLASSIFICATION	1.8025741224048667E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999997687390152	WITHOUT_CLASSIFICATION	2.3126098487368089E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999997687390152	WITHOUT_CLASSIFICATION	2.3126098487368089E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999970873389	WITHOUT_CLASSIFICATION	2.9126610954028144E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999790050926	WITHOUT_CLASSIFICATION	2.099490735316426E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999790050926	WITHOUT_CLASSIFICATION	2.099490735316426E-8	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999856367321	WITHOUT_CLASSIFICATION	1.4363267976160647E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999995401335646	WITHOUT_CLASSIFICATION	4.5986643544363603E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998331341551376	WITHOUT_CLASSIFICATION	1.6686584486245296E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998086246893699	WITHOUT_CLASSIFICATION	1.9137531063003648E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99855809225461	WITHOUT_CLASSIFICATION	0.0014419077453899666	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99855809225461	WITHOUT_CLASSIFICATION	0.0014419077453899666	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997935850062708	WITHOUT_CLASSIFICATION	2.064149937292041E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999386241309853	WITHOUT_CLASSIFICATION	6.137586901468016E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998476365430234	WITHOUT_CLASSIFICATION	1.5236345697653068E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998475904447616	WITHOUT_CLASSIFICATION	1.524095552384574E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997845337036421	WITHOUT_CLASSIFICATION	2.1546629635799762E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999162138524618	WITHOUT_CLASSIFICATION	8.378614753824306E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999162682636242	WITHOUT_CLASSIFICATION	8.373173637581712E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999963760777955	WITHOUT_CLASSIFICATION	3.623922204595211E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999763131598959	WITHOUT_CLASSIFICATION	2.3686840104105415E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998747024729866	WITHOUT_CLASSIFICATION	1.2529752701338187E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853978959757	WITHOUT_CLASSIFICATION	1.4602104024258568E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999174312468541	WITHOUT_CLASSIFICATION	8.256875314598561E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999991972462439	WITHOUT_CLASSIFICATION	8.027537560302994E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9998761605788836	WITHOUT_CLASSIFICATION	1.238394211163371E-4	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999991084602653	WITHOUT_CLASSIFICATION	8.915397347331935E-7	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999992142977997	WITHOUT_CLASSIFICATION	7.857022002218015E-7	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999994683213342	WITHOUT_CLASSIFICATION	5.316786656854216E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9954603382309068	WITHOUT_CLASSIFICATION	0.004539661769093209	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999995052661765	WITHOUT_CLASSIFICATION	4.947338235664847E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999997685370867	WITHOUT_CLASSIFICATION	2.314629131663957E-7	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999990186192999	WITHOUT_CLASSIFICATION	9.813807001069757E-7	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999953883858037	WITHOUT_CLASSIFICATION	4.6116141963021335E-6	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999987508463085	WITHOUT_CLASSIFICATION	1.2491536915250398E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999997274256823	WITHOUT_CLASSIFICATION	2.725743176655671E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999980960110797	WITHOUT_CLASSIFICATION	1.9039889203050108E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999805748794	WITHOUT_CLASSIFICATION	1.94251206444612E-8	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.999998609673003	WITHOUT_CLASSIFICATION	1.3903269969508698E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999965923830632	WITHOUT_CLASSIFICATION	3.407616936891502E-6	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999988672605359	WITHOUT_CLASSIFICATION	1.1327394642081672E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997797801692	WITHOUT_CLASSIFICATION	2.202198307738412E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999994415361799	WITHOUT_CLASSIFICATION	5.584638201410314E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999999406416341	WITHOUT_CLASSIFICATION	5.935836594214434E-8	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999996577618042	WITHOUT_CLASSIFICATION	3.4223819579745986E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999988246228361	WITHOUT_CLASSIFICATION	1.1753771639642533E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9998859434488366	WITHOUT_CLASSIFICATION	1.1405655116335277E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9998757882233055	WITHOUT_CLASSIFICATION	1.242117766945657E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999996999146413	WITHOUT_CLASSIFICATION	3.000853586107037E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999932481162255	WITHOUT_CLASSIFICATION	6.75188377452982E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999720759947386	WITHOUT_CLASSIFICATION	2.792400526149046E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999984697333288	WITHOUT_CLASSIFICATION	1.5302666711866087E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999999823891484	WITHOUT_CLASSIFICATION	1.761085158939758E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.999993743987601	WITHOUT_CLASSIFICATION	6.256012398978147E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999789556333923	WITHOUT_CLASSIFICATION	2.1044366607704627E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999981831425283	WITHOUT_CLASSIFICATION	1.8168574716385107E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.999998701813375	WITHOUT_CLASSIFICATION	1.2981866250052855E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999908237986014	WITHOUT_CLASSIFICATION	9.17620139864804E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999971377035153	WITHOUT_CLASSIFICATION	2.86229648472532E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999990456104046	WITHOUT_CLASSIFICATION	9.543895952988772E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9998295362520689	WITHOUT_CLASSIFICATION	1.7046374793109036E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999980442676861	WITHOUT_CLASSIFICATION	1.9557323139041937E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9998295362520689	WITHOUT_CLASSIFICATION	1.7046374793109036E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999996772567803	WITHOUT_CLASSIFICATION	3.227432196890514E-7	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999999018078651	WITHOUT_CLASSIFICATION	9.819213485822566E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999992243557209	WITHOUT_CLASSIFICATION	7.756442790946207E-7	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9996900254182638	WITHOUT_CLASSIFICATION	3.0997458173614946E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999976347626884	WITHOUT_CLASSIFICATION	2.365237311455101E-6	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999986011495671	WITHOUT_CLASSIFICATION	1.3988504329058228E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999946939823	WITHOUT_CLASSIFICATION	5.306017766830176E-9	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.999998876437438	WITHOUT_CLASSIFICATION	1.123562562050327E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9954603382309068	WITHOUT_CLASSIFICATION	0.004539661769093209	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999935076272654	WITHOUT_CLASSIFICATION	6.492372734623102E-6	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999913081019955	WITHOUT_CLASSIFICATION	8.69189800447013E-6	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.999999923301546	WITHOUT_CLASSIFICATION	7.669845401415625E-8	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999881056638	WITHOUT_CLASSIFICATION	1.1894336062913276E-8	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999914267582674	WITHOUT_CLASSIFICATION	8.573241732646067E-6	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999764674285072	WITHOUT_CLASSIFICATION	2.3532571492744334E-5	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999733968027661	WITHOUT_CLASSIFICATION	2.660319723387743E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999996540334303	WITHOUT_CLASSIFICATION	3.459665697646605E-7	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999999892706338	WITHOUT_CLASSIFICATION	1.072936625221248E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999995240294158	WITHOUT_CLASSIFICATION	4.759705842510689E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999893861901	WITHOUT_CLASSIFICATION	1.061380991346974E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999851338146676	WITHOUT_CLASSIFICATION	1.4866185332389383E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999995379772152	WITHOUT_CLASSIFICATION	4.620227847453133E-7	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999894999251829	WITHOUT_CLASSIFICATION	1.0500074817111539E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.999998100372863	WITHOUT_CLASSIFICATION	1.8996271370794115E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999922685065638	WITHOUT_CLASSIFICATION	7.731493436277973E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998327637349	WITHOUT_CLASSIFICATION	1.6723626505385164E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999530778044636	WITHOUT_CLASSIFICATION	4.692219553627294E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999530778044636	WITHOUT_CLASSIFICATION	4.692219553627294E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999916359334404	WITHOUT_CLASSIFICATION	8.364066559643075E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9993602838907102	WITHOUT_CLASSIFICATION	6.397161092899349E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9958067098446354	WITHOUT_CLASSIFICATION	0.004193290155364705	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999702700003544	WITHOUT_CLASSIFICATION	2.9729999645612967E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997851796667	WITHOUT_CLASSIFICATION	2.148203333950713E-7	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.999985528565485	WITHOUT_CLASSIFICATION	1.447143451511273E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9994570136389302	WITHOUT_CLASSIFICATION	5.429863610696498E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999993466962342	WITHOUT_CLASSIFICATION	6.533037657938731E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992585686628	WITHOUT_CLASSIFICATION	7.414313372279647E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995273768811271	WITHOUT_CLASSIFICATION	4.726231188728726E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999529874279569	WITHOUT_CLASSIFICATION	4.7012572043010024E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999958751299971	WITHOUT_CLASSIFICATION	4.124870002868042E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999949296691125	WITHOUT_CLASSIFICATION	5.0703308875269344E-6	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.999995107667482	WITHOUT_CLASSIFICATION	4.892332518010998E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998524007344	WITHOUT_CLASSIFICATION	1.4759926559618118E-7	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999987954242603	WITHOUT_CLASSIFICATION	1.2045757397909742E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997261288395	WITHOUT_CLASSIFICATION	2.7387116056618745E-7	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999879093196622	WITHOUT_CLASSIFICATION	1.2090680337802812E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999968825603841	WITHOUT_CLASSIFICATION	3.1174396159290137E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997851796667	WITHOUT_CLASSIFICATION	2.148203333950713E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997261288395	WITHOUT_CLASSIFICATION	2.7387116056618745E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999993466962342	WITHOUT_CLASSIFICATION	6.533037657938731E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992585686628	WITHOUT_CLASSIFICATION	7.414313372279647E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999999241456118	WITHOUT_CLASSIFICATION	7.585438829341954E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999991866091811	WITHOUT_CLASSIFICATION	8.13390818861053E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999982604546124	WITHOUT_CLASSIFICATION	1.7395453876264076E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999290154084	WITHOUT_CLASSIFICATION	7.098459168815006E-8	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999636097716	WITHOUT_CLASSIFICATION	3.639022830503366E-8	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999876892567793	WITHOUT_CLASSIFICATION	1.2310743220718654E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999876892567793	WITHOUT_CLASSIFICATION	1.2310743220718654E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999983920144119	WITHOUT_CLASSIFICATION	1.6079855880999517E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999995815065115	WITHOUT_CLASSIFICATION	4.184934886486684E-7	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999036051932	WITHOUT_CLASSIFICATION	9.639480682535803E-8	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998382682366	WITHOUT_CLASSIFICATION	1.617317633051288E-7	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995326338211	WITHOUT_CLASSIFICATION	4.6736617887872176E-7	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997646457679	WITHOUT_CLASSIFICATION	2.3535423215554076E-7	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997371605209	WITHOUT_CLASSIFICATION	2.628394789921393E-7	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999090445809	WITHOUT_CLASSIFICATION	9.095541919598132E-8	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997755630214	WITHOUT_CLASSIFICATION	2.2443697856408793E-7	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997493527181	WITHOUT_CLASSIFICATION	2.5064728195998206E-7	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999132636828	WITHOUT_CLASSIFICATION	8.673631718740701E-8	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999424889351	WITHOUT_CLASSIFICATION	5.751106494355867E-8	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999996816332997	WITHOUT_CLASSIFICATION	3.183667003456484E-7	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997211599715	WITHOUT_CLASSIFICATION	2.7884002855894203E-7	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999035076008	WITHOUT_CLASSIFICATION	9.649239927284172E-8	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998576209052	WITHOUT_CLASSIFICATION	1.4237909484439098E-7	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999829680242	WITHOUT_CLASSIFICATION	1.7031975784266578E-7	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999662626482	WITHOUT_CLASSIFICATION	3.373735183468235E-8	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999866301343	WITHOUT_CLASSIFICATION	1.3369865703255308E-7	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999994581091008	WITHOUT_CLASSIFICATION	5.418908991492532E-7	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999993517677607	WITHOUT_CLASSIFICATION	6.482322393265778E-7	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997756796272	WITHOUT_CLASSIFICATION	2.2432037283748867E-7	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999347726304	WITHOUT_CLASSIFICATION	6.522736968729416E-8	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997168184341	WITHOUT_CLASSIFICATION	2.8318156587133034E-7	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996837477952	WITHOUT_CLASSIFICATION	3.1625220475695723E-7	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998905611402	WITHOUT_CLASSIFICATION	1.0943885968104004E-7	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999993936562607	WITHOUT_CLASSIFICATION	6.063437393560251E-7	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999979950481058	WITHOUT_CLASSIFICATION	2.0049518942267487E-6	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.99999694701488	WITHOUT_CLASSIFICATION	3.0529851199634425E-6	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999988808729344	WITHOUT_CLASSIFICATION	1.1191270655491275E-6	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999381733094214	WITHOUT_CLASSIFICATION	6.182669057868247E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999978707891286	WITHOUT_CLASSIFICATION	2.1292108713543054E-6	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998362884454	WITHOUT_CLASSIFICATION	1.637115546739455E-7	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998566139812	WITHOUT_CLASSIFICATION	1.4338601887267488E-7	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999503813717	WITHOUT_CLASSIFICATION	4.9618628391132614E-8	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998794613125	WITHOUT_CLASSIFICATION	1.2053868749094122E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998944267405	WITHOUT_CLASSIFICATION	1.0557325939054434E-7	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999634664507	WITHOUT_CLASSIFICATION	3.653354934736128E-8	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997880615478	WITHOUT_CLASSIFICATION	2.1193845220420535E-7	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997464704674	WITHOUT_CLASSIFICATION	2.5352953257412943E-7	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999122662818	WITHOUT_CLASSIFICATION	8.773371816848145E-8	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998919072125	WITHOUT_CLASSIFICATION	1.0809278756493366E-7	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999053274254	WITHOUT_CLASSIFICATION	9.467257458783785E-8	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998672241751	WITHOUT_CLASSIFICATION	1.3277582482029153E-7	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999215676904	WITHOUT_CLASSIFICATION	7.843230960043834E-7	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989635232455	WITHOUT_CLASSIFICATION	1.0364767546003188E-6	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996427643372	WITHOUT_CLASSIFICATION	3.572356628544876E-7	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999996872137369	WITHOUT_CLASSIFICATION	3.1278626302927376E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999914147799	WITHOUT_CLASSIFICATION	8.585220071878633E-9	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999978476225226	WITHOUT_CLASSIFICATION	2.1523774774101557E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999641838676	WITHOUT_CLASSIFICATION	3.5816132408040054E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999891369739	WITHOUT_CLASSIFICATION	1.0863026097055701E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999796114145154	WITHOUT_CLASSIFICATION	2.038858548458991E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999977338356087	WITHOUT_CLASSIFICATION	2.2661643912323374E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999958751299971	WITHOUT_CLASSIFICATION	4.124870002868042E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999999184186381	WITHOUT_CLASSIFICATION	8.158136194282275E-8	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.999999965412587	WITHOUT_CLASSIFICATION	3.458741302239856E-8	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999984668815695	WITHOUT_CLASSIFICATION	1.5331184305904418E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.999997174418103	WITHOUT_CLASSIFICATION	2.8255818969698024E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999999130966242	WITHOUT_CLASSIFICATION	8.690337587855066E-8	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999984023768472	WITHOUT_CLASSIFICATION	1.597623152829114E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999996825342357	WITHOUT_CLASSIFICATION	3.174657643179713E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999529874279569	WITHOUT_CLASSIFICATION	4.7012572043010024E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999944130121968	WITHOUT_CLASSIFICATION	5.5869878032204835E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999999929042974	WITHOUT_CLASSIFICATION	7.095702621826254E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999948372687724	WITHOUT_CLASSIFICATION	5.162731227634692E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99999748671028	WITHOUT_CLASSIFICATION	2.513289719971797E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999969897871449	WITHOUT_CLASSIFICATION	3.0102128551395624E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973406865735	WITHOUT_CLASSIFICATION	2.6593134264207123E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999948694750068	WITHOUT_CLASSIFICATION	5.130524993200088E-6	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999996061341185	WITHOUT_CLASSIFICATION	3.938658814554618E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983862839379	WITHOUT_CLASSIFICATION	1.6137160621126176E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999996741142658	WITHOUT_CLASSIFICATION	3.2588573425977733E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999998977559175	WITHOUT_CLASSIFICATION	1.022440825025406E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.999999985668231	WITHOUT_CLASSIFICATION	1.4331769126824764E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999955337423378	WITHOUT_CLASSIFICATION	4.466257662178747E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999990467786273	WITHOUT_CLASSIFICATION	9.532213726827264E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999853400799	WITHOUT_CLASSIFICATION	1.4659920055131948E-8	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999991614840645	WITHOUT_CLASSIFICATION	8.385159353365105E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999995450795506	WITHOUT_CLASSIFICATION	4.5492044934479084E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999987277217061	WITHOUT_CLASSIFICATION	1.272278293867968E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999529874279569	WITHOUT_CLASSIFICATION	4.7012572043010024E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999998977559175	WITHOUT_CLASSIFICATION	1.022440825025406E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.999999985668231	WITHOUT_CLASSIFICATION	1.4331769126824764E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999955337423378	WITHOUT_CLASSIFICATION	4.466257662178747E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999936547313174	WITHOUT_CLASSIFICATION	6.345268682550537E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999120039671326	WITHOUT_CLASSIFICATION	8.799603286742902E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999873803268384	WITHOUT_CLASSIFICATION	1.261967316152484E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999998582604	WITHOUT_CLASSIFICATION	1.4173954452274386E-10	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999912259687322	WITHOUT_CLASSIFICATION	8.774031267667464E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999912259687322	WITHOUT_CLASSIFICATION	8.774031267667464E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999912259687322	WITHOUT_CLASSIFICATION	8.774031267667464E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999998491318299	WITHOUT_CLASSIFICATION	1.5086816999292585E-7	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999989166334379	WITHOUT_CLASSIFICATION	1.0833665621872514E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999979833284429	WITHOUT_CLASSIFICATION	2.016671557048271E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999995155919053	WITHOUT_CLASSIFICATION	4.844080948088248E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999990778675286	WITHOUT_CLASSIFICATION	9.221324713186776E-7	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999809041819	WITHOUT_CLASSIFICATION	1.9095818199409783E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999994405559555	WITHOUT_CLASSIFICATION	5.5944404450438766E-6	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999982224350398	WITHOUT_CLASSIFICATION	1.7775649601284836E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999967348523	WITHOUT_CLASSIFICATION	3.265147766497684E-9	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999999566925756	WITHOUT_CLASSIFICATION	4.330742447278232E-8	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999907847092336	WITHOUT_CLASSIFICATION	9.215290766401007E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999978768637	WITHOUT_CLASSIFICATION	2.1231364153204142E-9	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9995558249775296	WITHOUT_CLASSIFICATION	4.4417502247048445E-4	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999861320854	WITHOUT_CLASSIFICATION	1.3867914606334441E-8	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999997671945946	WITHOUT_CLASSIFICATION	2.3280540534712073E-7	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999981639656047	WITHOUT_CLASSIFICATION	1.8360343953129651E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9996640528629164	WITHOUT_CLASSIFICATION	3.3594713708371326E-4	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9998132954496481	WITHOUT_CLASSIFICATION	1.8670455035185387E-4	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999992930513009	WITHOUT_CLASSIFICATION	7.069486991745081E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999915157911886	WITHOUT_CLASSIFICATION	8.484208811304631E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999999360516326	WITHOUT_CLASSIFICATION	6.394836735100032E-8	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999989339910984	WITHOUT_CLASSIFICATION	1.0660089015202273E-6	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999994359162658	WITHOUT_CLASSIFICATION	5.640837340705481E-7	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999950820755	WITHOUT_CLASSIFICATION	4.917924454633878E-9	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999839691249	WITHOUT_CLASSIFICATION	1.6030875020727908E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999893317788624	WITHOUT_CLASSIFICATION	1.0668221137636318E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999976613262281	WITHOUT_CLASSIFICATION	2.3386737718942216E-6	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999968594594875	WITHOUT_CLASSIFICATION	3.1405405124963302E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999991304876238	WITHOUT_CLASSIFICATION	8.695123761289273E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999975850270113	WITHOUT_CLASSIFICATION	2.4149729886674967E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999994928027923	WITHOUT_CLASSIFICATION	5.071972076542883E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999986643013198	WITHOUT_CLASSIFICATION	1.3356986802630339E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999074301076	WITHOUT_CLASSIFICATION	9.256989236134319E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999793637178069	WITHOUT_CLASSIFICATION	2.0636282193059766E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999989212847654	WITHOUT_CLASSIFICATION	1.0787152346167316E-6	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999997925036144	WITHOUT_CLASSIFICATION	2.0749638564007343E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997797801692	WITHOUT_CLASSIFICATION	2.202198307738412E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999591799808419	WITHOUT_CLASSIFICATION	4.082001915801903E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999988410535	WITHOUT_CLASSIFICATION	1.1589464955867802E-9	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999995868837522	WITHOUT_CLASSIFICATION	4.1311624773481726E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999985708703854	WITHOUT_CLASSIFICATION	1.4291296146606705E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998614901882115	WITHOUT_CLASSIFICATION	1.385098117885053E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999343268635297	WITHOUT_CLASSIFICATION	6.567313647026833E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998614901882115	WITHOUT_CLASSIFICATION	1.385098117885053E-4	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999999433257503	WITHOUT_CLASSIFICATION	5.667424975446817E-8	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999980272663697	WITHOUT_CLASSIFICATION	1.9727336302254704E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999787988385813	WITHOUT_CLASSIFICATION	2.120116141871143E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999998496347274	WITHOUT_CLASSIFICATION	1.5036527262475892E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999999752900162	WITHOUT_CLASSIFICATION	2.4709983770111393E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999999949770427	WITHOUT_CLASSIFICATION	5.022957335392113E-9	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999860085528165	WITHOUT_CLASSIFICATION	1.399144718349931E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999999600916073	WITHOUT_CLASSIFICATION	3.990839273302928E-8	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999999380787568	WITHOUT_CLASSIFICATION	6.192124322569726E-8	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999999613191708	WITHOUT_CLASSIFICATION	3.8680829207053395E-8	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999998018785154	WITHOUT_CLASSIFICATION	1.9812148445663315E-7	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999983260310034	WITHOUT_CLASSIFICATION	1.6739689966459615E-6	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999989820830294	WITHOUT_CLASSIFICATION	1.0179169706108928E-6	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999793830043	WITHOUT_CLASSIFICATION	2.0616995655291565E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999998613417642	WITHOUT_CLASSIFICATION	1.3865823575516699E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999997166921964	WITHOUT_CLASSIFICATION	2.8330780344770274E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999982681237	WITHOUT_CLASSIFICATION	1.7318762769820222E-9	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999969886394591	WITHOUT_CLASSIFICATION	3.0113605409195217E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999998452910066	WITHOUT_CLASSIFICATION	1.5470899347141482E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999998586663116	WITHOUT_CLASSIFICATION	1.413336883125288E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999997765661409	WITHOUT_CLASSIFICATION	2.2343385904186596E-7	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999998808738271	WITHOUT_CLASSIFICATION	1.1912617287309025E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999945035108148	WITHOUT_CLASSIFICATION	5.496489185272556E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999998535976294	WITHOUT_CLASSIFICATION	1.4640237054382348E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999998244894152	WITHOUT_CLASSIFICATION	1.7551058490350708E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999996798133493	WITHOUT_CLASSIFICATION	3.2018665079493384E-7	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999729548633	WITHOUT_CLASSIFICATION	2.704513676008236E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999996149148571	WITHOUT_CLASSIFICATION	3.8508514288996944E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999929485109695	WITHOUT_CLASSIFICATION	7.051489030378182E-6	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999999033684391	WITHOUT_CLASSIFICATION	9.663156088422572E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.999997648923181	WITHOUT_CLASSIFICATION	2.3510768190115375E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999711501371256	WITHOUT_CLASSIFICATION	2.8849862874425026E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999966651641	WITHOUT_CLASSIFICATION	3.334835888360394E-9	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999389500630079	WITHOUT_CLASSIFICATION	6.104993699200928E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999987001732068	WITHOUT_CLASSIFICATION	1.2998267931421085E-6	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999992869429817	WITHOUT_CLASSIFICATION	7.130570183177568E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999664908478	WITHOUT_CLASSIFICATION	3.350915211938328E-8	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999971016935832	WITHOUT_CLASSIFICATION	2.898306416723702E-6	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999995868837522	WITHOUT_CLASSIFICATION	4.1311624773481726E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999997779118468	WITHOUT_CLASSIFICATION	2.220881531958043E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999973727343914	WITHOUT_CLASSIFICATION	2.6272656085613846E-6	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999991481174899	WITHOUT_CLASSIFICATION	8.518825100825092E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999998875518799	WITHOUT_CLASSIFICATION	1.1244812012506718E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999343268635297	WITHOUT_CLASSIFICATION	6.567313647026833E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999785155804735	WITHOUT_CLASSIFICATION	2.1484419526528595E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999950288748012	WITHOUT_CLASSIFICATION	4.971125198793911E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999991506672862	WITHOUT_CLASSIFICATION	8.493327138073725E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999910048927156	WITHOUT_CLASSIFICATION	8.99510728436747E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999999774405266	WITHOUT_CLASSIFICATION	2.2559473393773248E-8	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999863145603465	WITHOUT_CLASSIFICATION	1.3685439653432001E-5	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999984371381494	WITHOUT_CLASSIFICATION	1.562861850673515E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999982249210041	WITHOUT_CLASSIFICATION	1.7750789959308285E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999998296362982	WITHOUT_CLASSIFICATION	1.7036370190050908E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9998896178547259	WITHOUT_CLASSIFICATION	1.1038214527409308E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999994415361799	WITHOUT_CLASSIFICATION	5.584638201410314E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999669587734692	WITHOUT_CLASSIFICATION	3.304122653080458E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999995536347469	WITHOUT_CLASSIFICATION	4.463652529953267E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999988356823342	WITHOUT_CLASSIFICATION	1.1643176659155128E-6	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999927428423655	WITHOUT_CLASSIFICATION	7.257157634457464E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999999976574236	WITHOUT_CLASSIFICATION	2.3425763871969904E-9	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999913899726528	WITHOUT_CLASSIFICATION	8.610027347090447E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999999884757461	WITHOUT_CLASSIFICATION	1.152425393744245E-8	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999947939922266	WITHOUT_CLASSIFICATION	5.206007773501638E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999964137649	WITHOUT_CLASSIFICATION	3.5862350464854187E-9	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999988553254806	WITHOUT_CLASSIFICATION	1.1446745194069583E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999947939922266	WITHOUT_CLASSIFICATION	5.206007773501638E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999915672231	WITHOUT_CLASSIFICATION	8.432776957910888E-9	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999974093186875	WITHOUT_CLASSIFICATION	2.590681312455878E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999759644969	WITHOUT_CLASSIFICATION	2.4035503102803484E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999995121713586	WITHOUT_CLASSIFICATION	4.878286413838018E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999934884186	WITHOUT_CLASSIFICATION	6.511581293245729E-9	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999841631843	WITHOUT_CLASSIFICATION	1.583681576831187E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999980702262	WITHOUT_CLASSIFICATION	1.9297738650319194E-9	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999999960539417	WITHOUT_CLASSIFICATION	3.9460582722066E-9	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999988796606044	WITHOUT_CLASSIFICATION	1.1203393956207601E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999984371762	WITHOUT_CLASSIFICATION	1.5628237605356917E-9	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999997169569014	WITHOUT_CLASSIFICATION	2.8304309864482764E-7	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999801237754	WITHOUT_CLASSIFICATION	1.9876224509703155E-8	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999940249231	WITHOUT_CLASSIFICATION	5.975076859543189E-9	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999864793403	WITHOUT_CLASSIFICATION	1.3520659714930206E-8	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999998471101599	WITHOUT_CLASSIFICATION	1.5288984002078753E-7	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999971897597181	WITHOUT_CLASSIFICATION	2.8102402819569593E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999998495172254	WITHOUT_CLASSIFICATION	1.504827745860997E-7	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999998789726371	WITHOUT_CLASSIFICATION	1.2102736292636953E-7	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999999591292376	WITHOUT_CLASSIFICATION	4.087076241322917E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999999746981237	WITHOUT_CLASSIFICATION	2.530187627166946E-8	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999997027862141	WITHOUT_CLASSIFICATION	2.972137859268539E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999992243557209	WITHOUT_CLASSIFICATION	7.756442790946207E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994191581933	WITHOUT_CLASSIFICATION	5.808418065268112E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999999911901931	WITHOUT_CLASSIFICATION	8.80980693074267E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999920739084	WITHOUT_CLASSIFICATION	7.926091561026946E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999920739084	WITHOUT_CLASSIFICATION	7.926091561026946E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999953878188	WITHOUT_CLASSIFICATION	4.612181216918314E-9	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.999999998596903	WITHOUT_CLASSIFICATION	1.4030969996115592E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.999999996121796	WITHOUT_CLASSIFICATION	3.8782039131694264E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999899734503	WITHOUT_CLASSIFICATION	1.0026549736856395E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999997478275419	WITHOUT_CLASSIFICATION	2.521724581206625E-7	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999858671817162	WITHOUT_CLASSIFICATION	1.4132818283806433E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999869662565939	WITHOUT_CLASSIFICATION	1.3033743406192727E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999997071167813	WITHOUT_CLASSIFICATION	2.9288321864254595E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999303640349	WITHOUT_CLASSIFICATION	6.963596518590818E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999303640349	WITHOUT_CLASSIFICATION	6.963596518590818E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996450021807	WITHOUT_CLASSIFICATION	3.549978191920985E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996450021807	WITHOUT_CLASSIFICATION	3.549978191920985E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999854422903942	WITHOUT_CLASSIFICATION	1.4557709605790126E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999993759758561	WITHOUT_CLASSIFICATION	6.240241438777289E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999994726344826	WITHOUT_CLASSIFICATION	5.273655173352804E-7	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999954117140737	WITHOUT_CLASSIFICATION	4.588285926212074E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.999999880891482	WITHOUT_CLASSIFICATION	1.1910851807173831E-7	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.999999976387819	WITHOUT_CLASSIFICATION	2.361218102787086E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999985348233178	WITHOUT_CLASSIFICATION	1.4651766822113568E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999989993323606	WITHOUT_CLASSIFICATION	1.0006676393570664E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999461685338511	WITHOUT_CLASSIFICATION	5.383146614889982E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999911989142048	WITHOUT_CLASSIFICATION	8.80108579516181E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.999999873229586	WITHOUT_CLASSIFICATION	1.2677041401682142E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999362601378	WITHOUT_CLASSIFICATION	6.373986216942267E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999362601378	WITHOUT_CLASSIFICATION	6.373986216942267E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999997784233478	WITHOUT_CLASSIFICATION	2.2157665209871548E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999997784233478	WITHOUT_CLASSIFICATION	2.2157665209871548E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999985607588819	WITHOUT_CLASSIFICATION	1.4392411180733696E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998980886276813	WITHOUT_CLASSIFICATION	1.0191137231872763E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999922497443529	WITHOUT_CLASSIFICATION	7.750255647043459E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999934335413736	WITHOUT_CLASSIFICATION	6.566458626433448E-6	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999961130635762	WITHOUT_CLASSIFICATION	3.886936423843124E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999983351407432	WITHOUT_CLASSIFICATION	1.6648592567930602E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999896669246	WITHOUT_CLASSIFICATION	1.0333075284292983E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999997023888046	WITHOUT_CLASSIFICATION	2.9761119528448557E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999997023888046	WITHOUT_CLASSIFICATION	2.9761119528448557E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997552276443	WITHOUT_CLASSIFICATION	2.4477235573588497E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997552276443	WITHOUT_CLASSIFICATION	2.4477235573588497E-7	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999965580309095	WITHOUT_CLASSIFICATION	3.4419690905230303E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999992274833219	WITHOUT_CLASSIFICATION	7.725166781292913E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999991778842721	WITHOUT_CLASSIFICATION	8.221157280485242E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999991778842721	WITHOUT_CLASSIFICATION	8.221157280485242E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999991778842721	WITHOUT_CLASSIFICATION	8.221157280485242E-7	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999997580851764	WITHOUT_CLASSIFICATION	2.419148235630794E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999997387739824	WITHOUT_CLASSIFICATION	2.6122601758440024E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999985476091277	WITHOUT_CLASSIFICATION	1.452390872422316E-6	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999689288606	WITHOUT_CLASSIFICATION	3.1071139527529356E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999997547119759	WITHOUT_CLASSIFICATION	2.452880241512447E-7	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999878968757379	WITHOUT_CLASSIFICATION	1.2103124262198839E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999996990628173	WITHOUT_CLASSIFICATION	3.009371827359554E-7	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999997579490545	WITHOUT_CLASSIFICATION	2.4205094546044077E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999997694104652	WITHOUT_CLASSIFICATION	2.305895347820263E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999985189923153	WITHOUT_CLASSIFICATION	1.4810076847772461E-6	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999965485762656	WITHOUT_CLASSIFICATION	3.45142373441623E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999999080307539	WITHOUT_CLASSIFICATION	9.196924602585333E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999814482422	WITHOUT_CLASSIFICATION	1.855175781633415E-8	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999943459836	WITHOUT_CLASSIFICATION	5.654016367402789E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999999641800983	WITHOUT_CLASSIFICATION	3.581990178686422E-8	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999995668791416	WITHOUT_CLASSIFICATION	4.331208584237938E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999981337177744	WITHOUT_CLASSIFICATION	1.8662822256978285E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999409319443936	WITHOUT_CLASSIFICATION	5.906805560651085E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999952180589	WITHOUT_CLASSIFICATION	4.781941093896906E-9	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999993631856	WITHOUT_CLASSIFICATION	6.368143163354045E-10	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999994121326	WITHOUT_CLASSIFICATION	5.878674422059625E-10	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999996467498112	WITHOUT_CLASSIFICATION	3.532501886759656E-7	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999989292833943	WITHOUT_CLASSIFICATION	1.0707166056308693E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999990367434027	WITHOUT_CLASSIFICATION	9.63256597252264E-7	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999994704150001	WITHOUT_CLASSIFICATION	5.295849999039635E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999998976744477	WITHOUT_CLASSIFICATION	1.023255522920089E-7	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999888111675461	WITHOUT_CLASSIFICATION	1.1188832453831415E-5	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999671385446	WITHOUT_CLASSIFICATION	3.286145547039176E-8	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999738170740157	WITHOUT_CLASSIFICATION	2.61829259842827E-5	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999734467971255	WITHOUT_CLASSIFICATION	2.655320287449532E-5	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999830665302	WITHOUT_CLASSIFICATION	1.6933469811499598E-8	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999978398036832	WITHOUT_CLASSIFICATION	2.160196316833111E-6	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999999195761061	WITHOUT_CLASSIFICATION	8.042389389884215E-7	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999997252440086	WITHOUT_CLASSIFICATION	2.747559914374901E-7	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999941950140175	WITHOUT_CLASSIFICATION	5.804985982434558E-6	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999994995661222	WITHOUT_CLASSIFICATION	5.004338778747428E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999994880071207	WITHOUT_CLASSIFICATION	5.119928793208597E-7	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999999658751746	WITHOUT_CLASSIFICATION	3.412482536709301E-8	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999784526948	WITHOUT_CLASSIFICATION	2.1547305175302143E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999655414233	WITHOUT_CLASSIFICATION	3.4458576759070794E-8	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999979401136615	WITHOUT_CLASSIFICATION	2.0598863384074984E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999849330168	WITHOUT_CLASSIFICATION	1.5066983196443027E-8	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.999269387420279	WITHOUT_CLASSIFICATION	7.306125797209743E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999858533607	WITHOUT_CLASSIFICATION	1.4146639349104639E-8	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999900689207174	WITHOUT_CLASSIFICATION	9.931079282639034E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999997944853378	WITHOUT_CLASSIFICATION	2.055146622156169E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999990289543318	WITHOUT_CLASSIFICATION	9.710456682352015E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999997642501621	WITHOUT_CLASSIFICATION	2.3574983789404168E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999980675849833	WITHOUT_CLASSIFICATION	1.9324150167590264E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999986646835467	WITHOUT_CLASSIFICATION	1.335316453313662E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.999998824371792	WITHOUT_CLASSIFICATION	1.175628207928511E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999624309622	WITHOUT_CLASSIFICATION	3.756903780578708E-8	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999531894258	WITHOUT_CLASSIFICATION	4.681057417269442E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999995438309207	WITHOUT_CLASSIFICATION	4.561690793255812E-7	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999974564150921	WITHOUT_CLASSIFICATION	2.543584907791906E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999475350751396	WITHOUT_CLASSIFICATION	5.246492486042938E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.999269387420279	WITHOUT_CLASSIFICATION	7.306125797209743E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.999269387420279	WITHOUT_CLASSIFICATION	7.306125797209743E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.999999878858974	WITHOUT_CLASSIFICATION	1.2114102604555412E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999991407591182	WITHOUT_CLASSIFICATION	8.592408817842401E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999951076524	WITHOUT_CLASSIFICATION	4.892347642591765E-9	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999998000582297	WITHOUT_CLASSIFICATION	1.9994177024700832E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999998000582297	WITHOUT_CLASSIFICATION	1.9994177024700832E-7	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999963926208	WITHOUT_CLASSIFICATION	3.6073792942716975E-9	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999850515525	WITHOUT_CLASSIFICATION	1.494844750032096E-8	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999999697774739	WITHOUT_CLASSIFICATION	3.0222526147698114E-8	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.999827756158732	WITHOUT_CLASSIFICATION	1.7224384126800143E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999878785284927	WITHOUT_CLASSIFICATION	1.2121471507293645E-4	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999981446932	WITHOUT_CLASSIFICATION	1.8553067722983467E-9	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999998720081795	WITHOUT_CLASSIFICATION	1.279918204561496E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999997436620043	WITHOUT_CLASSIFICATION	2.563379957627621E-7	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999688445001114	WITHOUT_CLASSIFICATION	3.115549988866334E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999906720960814	WITHOUT_CLASSIFICATION	9.327903918607032E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999877414534	WITHOUT_CLASSIFICATION	1.225854655402617E-8	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.999999998829131	WITHOUT_CLASSIFICATION	1.170869007050256E-9	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999878785284927	WITHOUT_CLASSIFICATION	1.2121471507293645E-4	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999303640349	WITHOUT_CLASSIFICATION	6.963596518590818E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999303640349	WITHOUT_CLASSIFICATION	6.963596518590818E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999978262437498	WITHOUT_CLASSIFICATION	2.173756250297498E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.999995726269227	WITHOUT_CLASSIFICATION	4.273730773105537E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999998700079339	WITHOUT_CLASSIFICATION	1.2999206619248736E-7	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999941993868664	WITHOUT_CLASSIFICATION	5.800613133681438E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.999998269491234	WITHOUT_CLASSIFICATION	1.7305087660287329E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999849437953849	WITHOUT_CLASSIFICATION	1.5056204615089576E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999849437953849	WITHOUT_CLASSIFICATION	1.5056204615089576E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999290300123341	WITHOUT_CLASSIFICATION	7.096998766583443E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999840909425517	WITHOUT_CLASSIFICATION	1.5909057448381623E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999996960214156	WITHOUT_CLASSIFICATION	3.0397858443851075E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999886845867899	WITHOUT_CLASSIFICATION	1.1315413210043052E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999961008017791	WITHOUT_CLASSIFICATION	3.899198220811008E-6	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.999996518512491	WITHOUT_CLASSIFICATION	3.4814875089690612E-6	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999993974058208	WITHOUT_CLASSIFICATION	6.025941792058471E-7	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999955423364842	WITHOUT_CLASSIFICATION	4.457663515705396E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999984697333288	WITHOUT_CLASSIFICATION	1.5302666711866087E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999999823891484	WITHOUT_CLASSIFICATION	1.761085158939758E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.999993743987601	WITHOUT_CLASSIFICATION	6.256012398978147E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999780723734	WITHOUT_CLASSIFICATION	2.19276265981512E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999999002364609	WITHOUT_CLASSIFICATION	9.976353913331072E-8	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999784402765	WITHOUT_CLASSIFICATION	2.1559723442078387E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999999218153226	WITHOUT_CLASSIFICATION	7.818467742472448E-8	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999996027604074	WITHOUT_CLASSIFICATION	3.9723959264317004E-7	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999993924485535	WITHOUT_CLASSIFICATION	6.075514464321709E-7	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999999766059073	WITHOUT_CLASSIFICATION	2.339409258974285E-8	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999979901088627	WITHOUT_CLASSIFICATION	2.009891137206099E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999998490932455	WITHOUT_CLASSIFICATION	1.509067545937569E-7	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999988566731394	WITHOUT_CLASSIFICATION	1.143326860626315E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988751639883	WITHOUT_CLASSIFICATION	1.1248360116660033E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988751639883	WITHOUT_CLASSIFICATION	1.1248360116660033E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999998384773924	WITHOUT_CLASSIFICATION	1.6152260766315635E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999852210609	WITHOUT_CLASSIFICATION	1.4778938984139232E-8	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999985090644985	WITHOUT_CLASSIFICATION	1.4909355014201634E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999995312025457	WITHOUT_CLASSIFICATION	4.687974543752794E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999995312025457	WITHOUT_CLASSIFICATION	4.687974543752794E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999996696092803	WITHOUT_CLASSIFICATION	3.303907196761333E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999996528181836	WITHOUT_CLASSIFICATION	3.471818164079579E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999997652099674	WITHOUT_CLASSIFICATION	2.347900326333307E-7	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999978894106318	WITHOUT_CLASSIFICATION	2.110589368196067E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999992654546964	WITHOUT_CLASSIFICATION	7.345453036391639E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998036048109	WITHOUT_CLASSIFICATION	1.9639518913228654E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998524007344	WITHOUT_CLASSIFICATION	1.4759926559618118E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999997784233478	WITHOUT_CLASSIFICATION	2.2157665209871548E-7	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999994453476312	WITHOUT_CLASSIFICATION	5.546523688554985E-7	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999992076235794	WITHOUT_CLASSIFICATION	7.923764205535516E-7	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999995274550987	WITHOUT_CLASSIFICATION	4.7254490125525906E-7	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999997944480165	WITHOUT_CLASSIFICATION	2.055519834304464E-7	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999996505892192	WITHOUT_CLASSIFICATION	3.494107808167901E-7	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999999091974844	WITHOUT_CLASSIFICATION	9.080251553458311E-8	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.999981701319476	WITHOUT_CLASSIFICATION	1.8298680524009747E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999942880785436	WITHOUT_CLASSIFICATION	5.711921456443845E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.999999648993243	WITHOUT_CLASSIFICATION	3.510067569696905E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999975620726241	WITHOUT_CLASSIFICATION	2.43792737586642E-6	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999994783241197	WITHOUT_CLASSIFICATION	5.216758801665611E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999858622929126	WITHOUT_CLASSIFICATION	1.4137707087396483E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999938346764564	WITHOUT_CLASSIFICATION	6.1653235435938315E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.999989644327556	WITHOUT_CLASSIFICATION	1.0355672444021384E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999998815155875	WITHOUT_CLASSIFICATION	1.184844124956784E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999984648438963	WITHOUT_CLASSIFICATION	1.535156103754572E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.999976843274137	WITHOUT_CLASSIFICATION	2.315672586293439E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999987631144365	WITHOUT_CLASSIFICATION	1.2368855635277454E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999968573947708	WITHOUT_CLASSIFICATION	3.1426052291678646E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999968573947708	WITHOUT_CLASSIFICATION	3.1426052291678646E-6	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999998474955238	WITHOUT_CLASSIFICATION	1.5250447615786392E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999927899200449	WITHOUT_CLASSIFICATION	7.210079955088712E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999993136847486	WITHOUT_CLASSIFICATION	6.863152513940986E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999993136847486	WITHOUT_CLASSIFICATION	6.863152513940986E-6	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999911220752007	WITHOUT_CLASSIFICATION	8.877924799309464E-6	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999996618951384	WITHOUT_CLASSIFICATION	3.381048615537345E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999999136494216	WITHOUT_CLASSIFICATION	8.635057836312704E-8	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999860483716	WITHOUT_CLASSIFICATION	1.395162855636612E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999998837352208	WITHOUT_CLASSIFICATION	1.1626477912020814E-7	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999999011840395	WITHOUT_CLASSIFICATION	9.881596050636985E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999998517987689	WITHOUT_CLASSIFICATION	1.4820123106920456E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999998906635611	WITHOUT_CLASSIFICATION	1.0933643891848568E-7	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999980097383279	WITHOUT_CLASSIFICATION	1.9902616720524776E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999998771171473	WITHOUT_CLASSIFICATION	1.2288285267354048E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999375256144888	WITHOUT_CLASSIFICATION	6.24743855111977E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.999989644327556	WITHOUT_CLASSIFICATION	1.0355672444021384E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999993571858125	WITHOUT_CLASSIFICATION	6.428141875072379E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999529874279569	WITHOUT_CLASSIFICATION	4.7012572043010024E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999958751299971	WITHOUT_CLASSIFICATION	4.124870002868042E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999485284493	WITHOUT_CLASSIFICATION	5.1471550746048205E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9998722400674691	WITHOUT_CLASSIFICATION	1.2775993253096694E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999990790630818	WITHOUT_CLASSIFICATION	9.209369181205221E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.999999994756921	WITHOUT_CLASSIFICATION	5.24307894340416E-9	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992354429886158	WITHOUT_CLASSIFICATION	7.645570113842547E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992354429886158	WITHOUT_CLASSIFICATION	7.645570113842547E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999685582999402	WITHOUT_CLASSIFICATION	3.144170005975444E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999070099965	WITHOUT_CLASSIFICATION	9.29900033761772E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999998906635611	WITHOUT_CLASSIFICATION	1.0933643891848568E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999998906635611	WITHOUT_CLASSIFICATION	1.0933643891848568E-7	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999997409585578	WITHOUT_CLASSIFICATION	2.590414421337914E-7	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9999637176716495	WITHOUT_CLASSIFICATION	3.628232835046462E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999982414801013	WITHOUT_CLASSIFICATION	1.7585198987749603E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999984660125226	WITHOUT_CLASSIFICATION	1.5339874773512468E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999987516524389	WITHOUT_CLASSIFICATION	1.2483475610674264E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999995624786834	WITHOUT_CLASSIFICATION	4.375213166062831E-7	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999830260304916	WITHOUT_CLASSIFICATION	1.6973969508371915E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999992918341468	WITHOUT_CLASSIFICATION	7.08165853135406E-7	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999996225827158	WITHOUT_CLASSIFICATION	3.774172842504167E-7	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999908949200179	WITHOUT_CLASSIFICATION	9.105079982042418E-6	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999813962402	WITHOUT_CLASSIFICATION	1.8603759802738125E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999951452451235	WITHOUT_CLASSIFICATION	4.854754876566813E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999951452451235	WITHOUT_CLASSIFICATION	4.854754876566813E-6	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999998625292972	WITHOUT_CLASSIFICATION	1.3747070287767373E-7	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999998943006371	WITHOUT_CLASSIFICATION	1.0569936289212658E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999998943006371	WITHOUT_CLASSIFICATION	1.0569936289212658E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999992763436707	WITHOUT_CLASSIFICATION	7.236563293211595E-7	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999992763436707	WITHOUT_CLASSIFICATION	7.236563293211595E-7	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999677475615079	WITHOUT_CLASSIFICATION	3.225243849207924E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999966767742	WITHOUT_CLASSIFICATION	3.323225870734316E-9	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999966767742	WITHOUT_CLASSIFICATION	3.323225870734316E-9	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999999577826366	WITHOUT_CLASSIFICATION	4.221736338418087E-8	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999990364519218	WITHOUT_CLASSIFICATION	9.635480781828673E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995273768811271	WITHOUT_CLASSIFICATION	4.726231188728726E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.999995648063411	WITHOUT_CLASSIFICATION	4.351936589052891E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.999999982676152	WITHOUT_CLASSIFICATION	1.7323848031849168E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.99999967183409	WITHOUT_CLASSIFICATION	3.281659100481509E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9998701688335367	WITHOUT_CLASSIFICATION	1.2983116646334702E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.999996547191604	WITHOUT_CLASSIFICATION	3.4528083959721895E-6	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999891064506499	WITHOUT_CLASSIFICATION	1.0893549350090717E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999996368756967	WITHOUT_CLASSIFICATION	3.63124303229604E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999998549967748	WITHOUT_CLASSIFICATION	1.4500322520557875E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999999897214769	WITHOUT_CLASSIFICATION	1.0278523282111775E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999206950382226	WITHOUT_CLASSIFICATION	7.930496177739285E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999990364519218	WITHOUT_CLASSIFICATION	9.635480781828673E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999951435509807	WITHOUT_CLASSIFICATION	4.856449019247714E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999922622949	WITHOUT_CLASSIFICATION	7.73770515354485E-9	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999322927705	WITHOUT_CLASSIFICATION	6.770722949371644E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999936752837156	WITHOUT_CLASSIFICATION	6.324716284342503E-6	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999751191901	WITHOUT_CLASSIFICATION	2.4880809882097668E-8	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999989573837628	WITHOUT_CLASSIFICATION	1.0426162371363358E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999888421550222	WITHOUT_CLASSIFICATION	1.1157844977870212E-5	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999968310048	WITHOUT_CLASSIFICATION	3.1689952382154435E-9	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.999999698430834	WITHOUT_CLASSIFICATION	3.01569165972534E-7	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999655219674731	WITHOUT_CLASSIFICATION	3.4478032526926286E-5	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999992243336506	WITHOUT_CLASSIFICATION	7.756663493445843E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999812986611181	WITHOUT_CLASSIFICATION	1.8701338881914707E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999998754130641	WITHOUT_CLASSIFICATION	1.2458693579457663E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999937106872488	WITHOUT_CLASSIFICATION	6.28931275111007E-6	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999999719138724	WITHOUT_CLASSIFICATION	2.8086127643920778E-8	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.99999780348858	WITHOUT_CLASSIFICATION	2.196511419933408E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999923093013893	WITHOUT_CLASSIFICATION	7.690698610709524E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999944433460748	WITHOUT_CLASSIFICATION	5.556653925194167E-6	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999998752027909	WITHOUT_CLASSIFICATION	1.2479720913576744E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999992879138029	WITHOUT_CLASSIFICATION	7.12086197066416E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999997831984345	WITHOUT_CLASSIFICATION	2.1680156550431002E-7	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999835076574094	WITHOUT_CLASSIFICATION	1.6492342590596487E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997005100161	WITHOUT_CLASSIFICATION	2.9948998389754664E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999938769292358	WITHOUT_CLASSIFICATION	6.123070764251256E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9992232890442126	WITHOUT_CLASSIFICATION	7.767109557873973E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999999170853183	WITHOUT_CLASSIFICATION	8.291468165319672E-8	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999956637459775	WITHOUT_CLASSIFICATION	4.336254022548821E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999990209519143	WITHOUT_CLASSIFICATION	9.790480857705665E-7	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999974087952084	WITHOUT_CLASSIFICATION	2.5912047916112986E-6	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999607205802378	WITHOUT_CLASSIFICATION	3.927941976215892E-5	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999836493046288	WITHOUT_CLASSIFICATION	1.635069537123991E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.999999837149471	WITHOUT_CLASSIFICATION	1.6285052895377235E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999997932680675	WITHOUT_CLASSIFICATION	2.067319325274552E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999998229164931	WITHOUT_CLASSIFICATION	1.7708350689999665E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999994208728729	WITHOUT_CLASSIFICATION	5.791271272679058E-7	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9997754503387694	WITHOUT_CLASSIFICATION	2.2454966123072154E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999999649992333	WITHOUT_CLASSIFICATION	3.5000766735781094E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999938769292358	WITHOUT_CLASSIFICATION	6.123070764251256E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999664953334	WITHOUT_CLASSIFICATION	3.350466659537843E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999952641118	WITHOUT_CLASSIFICATION	4.735888176342736E-9	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999952641118	WITHOUT_CLASSIFICATION	4.735888176342736E-9	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999995427606315	WITHOUT_CLASSIFICATION	4.5723936851438333E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999995427606315	WITHOUT_CLASSIFICATION	4.5723936851438333E-7	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9993419314361113	WITHOUT_CLASSIFICATION	6.580685638886605E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999994688009126	WITHOUT_CLASSIFICATION	5.311990874218324E-7	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.999999917363257	WITHOUT_CLASSIFICATION	8.26367429377687E-8	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999989537719018	WITHOUT_CLASSIFICATION	1.046228098167764E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999891999236683	WITHOUT_CLASSIFICATION	1.0800076331770574E-5	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9992476512736814	WITHOUT_CLASSIFICATION	7.523487263185965E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999266037590364	WITHOUT_CLASSIFICATION	7.339624096357571E-5	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999998702493939	WITHOUT_CLASSIFICATION	1.2975060615809228E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999688996624	WITHOUT_CLASSIFICATION	3.1100337594495076E-8	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999944345199	WITHOUT_CLASSIFICATION	5.565480073084515E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999982786756182	WITHOUT_CLASSIFICATION	1.7213243817344614E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999993653056923	WITHOUT_CLASSIFICATION	6.346943076194305E-7	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999999688261658	WITHOUT_CLASSIFICATION	3.11738342056382E-8	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999996187768333	WITHOUT_CLASSIFICATION	3.8122316667277457E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999998836293917	WITHOUT_CLASSIFICATION	1.163706083012841E-7	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999967550881306	WITHOUT_CLASSIFICATION	3.2449118693896485E-6	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999988075230573	WITHOUT_CLASSIFICATION	1.1924769427585104E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999485284493	WITHOUT_CLASSIFICATION	5.1471550746048205E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999996396454477	WITHOUT_CLASSIFICATION	3.603545522972468E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999002517821	WITHOUT_CLASSIFICATION	9.974821793535836E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998524007344	WITHOUT_CLASSIFICATION	1.4759926559618118E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999002517821	WITHOUT_CLASSIFICATION	9.974821793535836E-8	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999800238799252	WITHOUT_CLASSIFICATION	1.9976120074790636E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999923047534865	WITHOUT_CLASSIFICATION	7.695246513545976E-6	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999167820070587	WITHOUT_CLASSIFICATION	8.321799294131752E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999901662188	WITHOUT_CLASSIFICATION	9.833781203756855E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999998791523472	WITHOUT_CLASSIFICATION	1.208476528390062E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999541953806105	WITHOUT_CLASSIFICATION	4.580461938947062E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999541953806105	WITHOUT_CLASSIFICATION	4.580461938947062E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999829497791256	WITHOUT_CLASSIFICATION	1.7050220874381947E-5	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999969569630429	WITHOUT_CLASSIFICATION	3.043036957195066E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999996277584	WITHOUT_CLASSIFICATION	3.7224164007229974E-10	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999733667044	WITHOUT_CLASSIFICATION	2.6633295609188563E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.999999805716472	WITHOUT_CLASSIFICATION	1.9428352802810188E-7	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999980389852399	WITHOUT_CLASSIFICATION	1.961014760021594E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999998791523472	WITHOUT_CLASSIFICATION	1.208476528390062E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999541953806105	WITHOUT_CLASSIFICATION	4.580461938947062E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999541953806105	WITHOUT_CLASSIFICATION	4.580461938947062E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999829497791256	WITHOUT_CLASSIFICATION	1.7050220874381947E-5	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999822810095	WITHOUT_CLASSIFICATION	1.7718990518405778E-8	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999999909703918	WITHOUT_CLASSIFICATION	9.029608172970856E-9	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999999125422476	WITHOUT_CLASSIFICATION	8.745775238107533E-8	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999992695440879	WITHOUT_CLASSIFICATION	7.30455912038684E-7	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999949762742626	WITHOUT_CLASSIFICATION	5.023725737378965E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999106508365946	WITHOUT_CLASSIFICATION	8.934916340545322E-5	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999996577849976	WITHOUT_CLASSIFICATION	3.4221500243966127E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999920442725372	WITHOUT_CLASSIFICATION	7.955727462900927E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999920442725372	WITHOUT_CLASSIFICATION	7.955727462900927E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999280766802376	WITHOUT_CLASSIFICATION	7.192331976241302E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999999462591143	WITHOUT_CLASSIFICATION	5.374088569499271E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999979306583353	WITHOUT_CLASSIFICATION	2.0693416647957296E-6	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9912717757499726	WITHOUT_CLASSIFICATION	0.008728224250027427	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999984559372271	WITHOUT_CLASSIFICATION	1.544062772846882E-6	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999620054596585	WITHOUT_CLASSIFICATION	3.799454034149596E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999772666415193	WITHOUT_CLASSIFICATION	2.2733358480671428E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999990086384616	WITHOUT_CLASSIFICATION	9.913615384264874E-7	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9993056282430471	WITHOUT_CLASSIFICATION	6.943717569527507E-4	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999971878490981	WITHOUT_CLASSIFICATION	2.8121509019793065E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.999999381676198	WITHOUT_CLASSIFICATION	6.183238021252128E-7	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999335266892774	WITHOUT_CLASSIFICATION	6.647331072254162E-5	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999995244149331	WITHOUT_CLASSIFICATION	4.755850669615036E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9974931334835767	WITHOUT_CLASSIFICATION	0.0025068665164232748	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.999999593190306	WITHOUT_CLASSIFICATION	4.068096940483248E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999943425273257	WITHOUT_CLASSIFICATION	5.657472674340567E-6	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999106521861102	WITHOUT_CLASSIFICATION	8.934781388987574E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999983358178033	WITHOUT_CLASSIFICATION	1.6641821966955154E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999970921106983	WITHOUT_CLASSIFICATION	2.9078893016551514E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999926961634891	WITHOUT_CLASSIFICATION	7.303836510865063E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9997768846051917	WITHOUT_CLASSIFICATION	2.2311539480847248E-4	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999999533042063	WITHOUT_CLASSIFICATION	4.669579378825201E-8	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999992188401982	WITHOUT_CLASSIFICATION	7.811598018453905E-7	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999922323409446	WITHOUT_CLASSIFICATION	7.767659055393503E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.999999945417958	WITHOUT_CLASSIFICATION	5.4582042036298094E-8	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999999007161366	WITHOUT_CLASSIFICATION	9.928386336188486E-8	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999997049751087	WITHOUT_CLASSIFICATION	2.95024891327129E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999955225356731	WITHOUT_CLASSIFICATION	4.4774643269044E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.999999999519644	WITHOUT_CLASSIFICATION	4.803558834633931E-10	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999999737764199	WITHOUT_CLASSIFICATION	2.6223580060061093E-8	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999999200533296	WITHOUT_CLASSIFICATION	7.994667038960063E-8	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999999280816446	WITHOUT_CLASSIFICATION	7.191835535188775E-8	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.999999967182164	WITHOUT_CLASSIFICATION	3.2817836070655786E-8	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999999792735824	WITHOUT_CLASSIFICATION	2.07264175803291E-8	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999990491096359	WITHOUT_CLASSIFICATION	9.508903641110348E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999990491096359	WITHOUT_CLASSIFICATION	9.508903641110348E-7	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.999995757108551	WITHOUT_CLASSIFICATION	4.242891448977215E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999989604061023	WITHOUT_CLASSIFICATION	1.0395938977294222E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999964640907908	WITHOUT_CLASSIFICATION	3.5359092092390134E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999983028174385	WITHOUT_CLASSIFICATION	1.6971825614811992E-6	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999993701637471	WITHOUT_CLASSIFICATION	6.298362528444618E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.999999994184307	WITHOUT_CLASSIFICATION	5.815693004060871E-9	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999899393532065	WITHOUT_CLASSIFICATION	1.0060646793577305E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999720417909198	WITHOUT_CLASSIFICATION	2.7958209080219042E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9997731771692754	WITHOUT_CLASSIFICATION	2.2682283072471594E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999997871782863	WITHOUT_CLASSIFICATION	2.1282171364921334E-7	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999999664801298	WITHOUT_CLASSIFICATION	3.35198701356623E-8	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9998449182012473	WITHOUT_CLASSIFICATION	1.5508179875276955E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999238357543104	WITHOUT_CLASSIFICATION	7.61642456894616E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999742508732323	WITHOUT_CLASSIFICATION	2.5749126767701022E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9899077541774761	WITHOUT_CLASSIFICATION	0.010092245822523915	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999799922108246	WITHOUT_CLASSIFICATION	2.000778917549375E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999992743589045	WITHOUT_CLASSIFICATION	7.256410955502406E-7	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999999645381519	WITHOUT_CLASSIFICATION	3.546184811623325E-8	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999999501683409	WITHOUT_CLASSIFICATION	4.983165904900402E-8	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999997783715991	WITHOUT_CLASSIFICATION	2.216284008848858E-7	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999851082215	WITHOUT_CLASSIFICATION	1.4891778436324809E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999999158649054	WITHOUT_CLASSIFICATION	8.413509459553277E-8	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999759877104337	WITHOUT_CLASSIFICATION	2.401228956619584E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999975874343	WITHOUT_CLASSIFICATION	2.4125656462615493E-9	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999983203217	WITHOUT_CLASSIFICATION	1.679678341883493E-9	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999995207004468	WITHOUT_CLASSIFICATION	4.792995531912057E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999998556898647	WITHOUT_CLASSIFICATION	1.4431013538654098E-7	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999985763819437	WITHOUT_CLASSIFICATION	1.4236180563672884E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999919114509312	WITHOUT_CLASSIFICATION	8.088549068640654E-6	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999910539535268	WITHOUT_CLASSIFICATION	8.9460464732275E-6	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999867040244725	WITHOUT_CLASSIFICATION	1.3295975527568438E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999983840151602	WITHOUT_CLASSIFICATION	1.6159848397960558E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999724764653649	WITHOUT_CLASSIFICATION	2.7523534635162944E-5	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999893090593848	WITHOUT_CLASSIFICATION	1.0690940615287087E-5	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9996692830791168	WITHOUT_CLASSIFICATION	3.3071692088308257E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999796962618194	WITHOUT_CLASSIFICATION	2.030373818062241E-5	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.999991567549087	WITHOUT_CLASSIFICATION	8.432450913051767E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999972234092862	WITHOUT_CLASSIFICATION	2.7765907139174543E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999993977165815	WITHOUT_CLASSIFICATION	6.022834184635364E-7	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.999960540643302	WITHOUT_CLASSIFICATION	3.945935669796517E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999947025319	WITHOUT_CLASSIFICATION	5.2974681752857125E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999999597139057	WITHOUT_CLASSIFICATION	4.028609430998632E-8	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999999672913569	WITHOUT_CLASSIFICATION	3.270864314702964E-8	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.999998505287566	WITHOUT_CLASSIFICATION	1.494712434155298E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999927416225257	WITHOUT_CLASSIFICATION	7.258377474239552E-6	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999662798572	WITHOUT_CLASSIFICATION	3.3720142807186995E-8	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999999105699	WITHOUT_CLASSIFICATION	8.943021938107447E-11	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999662798572	WITHOUT_CLASSIFICATION	3.3720142807186995E-8	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999792261085135	WITHOUT_CLASSIFICATION	2.0773891486452353E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9999916466774935	WITHOUT_CLASSIFICATION	8.35332250657094E-6	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.999999976867975	WITHOUT_CLASSIFICATION	2.313202498724582E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999217863015	WITHOUT_CLASSIFICATION	7.821369849648277E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999988753657406	WITHOUT_CLASSIFICATION	1.1246342593806825E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999995403074	WITHOUT_CLASSIFICATION	4.596925595715368E-10	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999999710321422	WITHOUT_CLASSIFICATION	2.89678577030406E-8	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.996822605267234	WITHOUT_CLASSIFICATION	0.003177394732766124	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999683737873161	WITHOUT_CLASSIFICATION	3.162621268395604E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999997734876223	WITHOUT_CLASSIFICATION	2.265123776497229E-7	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999999764431496	WITHOUT_CLASSIFICATION	2.3556850335972815E-8	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999998888693373	WITHOUT_CLASSIFICATION	1.1113066262591941E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999983104745948	WITHOUT_CLASSIFICATION	1.6895254052292715E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9943651151552257	WITHOUT_CLASSIFICATION	0.005634884844774211	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999916914564626	WITHOUT_CLASSIFICATION	8.308543537387264E-6	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999961996918721	WITHOUT_CLASSIFICATION	3.8003081278052816E-6	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999857374462003	WITHOUT_CLASSIFICATION	1.4262553799653681E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9994884194997162	WITHOUT_CLASSIFICATION	5.115805002838229E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999983436654615	WITHOUT_CLASSIFICATION	1.656334538522597E-6	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999996806224007	WITHOUT_CLASSIFICATION	3.19377599354662E-7	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.999999864154501	WITHOUT_CLASSIFICATION	1.3584549901827534E-7	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999979906918997	WITHOUT_CLASSIFICATION	2.0093081003965467E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999655080598	WITHOUT_CLASSIFICATION	3.4491940122519964E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999999710321422	WITHOUT_CLASSIFICATION	2.89678577030406E-8	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999991695403541	WITHOUT_CLASSIFICATION	8.304596458903475E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999998131960227	WITHOUT_CLASSIFICATION	1.868039772799157E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999998131960227	WITHOUT_CLASSIFICATION	1.868039772799157E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999624745907	WITHOUT_CLASSIFICATION	3.75254093738023E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999740865164	WITHOUT_CLASSIFICATION	2.5913483651393284E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999740865164	WITHOUT_CLASSIFICATION	2.5913483651393284E-8	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999916877575081	WITHOUT_CLASSIFICATION	8.312242491952172E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999916877575081	WITHOUT_CLASSIFICATION	8.312242491952172E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9922189560306197	WITHOUT_CLASSIFICATION	0.007781043969380318	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999999417208859	WITHOUT_CLASSIFICATION	5.827911399532342E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999791527969	WITHOUT_CLASSIFICATION	2.0847203018368442E-8	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999994168891212	WITHOUT_CLASSIFICATION	5.831108787323455E-7	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999996442252905	WITHOUT_CLASSIFICATION	3.557747093638612E-7	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999981835582472	WITHOUT_CLASSIFICATION	1.8164417527375994E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.99997232655813	WITHOUT_CLASSIFICATION	2.7673441870119827E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999996169053375	WITHOUT_CLASSIFICATION	3.830946624347299E-7	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999696737096	WITHOUT_CLASSIFICATION	3.032629030359891E-8	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999998774069139	WITHOUT_CLASSIFICATION	1.2259308618245157E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999990728238	WITHOUT_CLASSIFICATION	9.271762242797282E-10	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999977150922242	WITHOUT_CLASSIFICATION	2.2849077758468816E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999989221147	WITHOUT_CLASSIFICATION	1.077885273718107E-9	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999985111465	WITHOUT_CLASSIFICATION	1.4888534373457765E-9	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999999873679769	WITHOUT_CLASSIFICATION	1.2632023123461571E-8	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.999999282397808	WITHOUT_CLASSIFICATION	7.176021919873087E-7	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999998931657845	WITHOUT_CLASSIFICATION	1.0683421540806994E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999982400995995	WITHOUT_CLASSIFICATION	1.7599004006282874E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999982400995995	WITHOUT_CLASSIFICATION	1.7599004006282874E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999304233833	WITHOUT_CLASSIFICATION	6.957661662809257E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9953170248124833	WITHOUT_CLASSIFICATION	0.004682975187516691	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999456598204	WITHOUT_CLASSIFICATION	5.434017964208907E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999697098747236	WITHOUT_CLASSIFICATION	3.0290125276367164E-5	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999999461427906	WITHOUT_CLASSIFICATION	5.385720934115954E-8	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999844518798356	WITHOUT_CLASSIFICATION	1.5548120164313037E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999980884725199	WITHOUT_CLASSIFICATION	1.9115274800722028E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999993800247207	WITHOUT_CLASSIFICATION	6.199752793675189E-7	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999992114474296	WITHOUT_CLASSIFICATION	7.8855257022121E-7	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999991848660845	WITHOUT_CLASSIFICATION	8.151339155555304E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999999667637	WITHOUT_CLASSIFICATION	3.323640867023888E-11	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999997420052786	WITHOUT_CLASSIFICATION	2.579947213131364E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999998277095854	WITHOUT_CLASSIFICATION	1.722904145502681E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999999335811588	WITHOUT_CLASSIFICATION	6.641884121491834E-8	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999997230168525	WITHOUT_CLASSIFICATION	2.76983147461565E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999998334572376	WITHOUT_CLASSIFICATION	1.665427623037721E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999823251258348	WITHOUT_CLASSIFICATION	1.7674874165188302E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999718671570643	WITHOUT_CLASSIFICATION	2.8132842935631392E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999870294831884	WITHOUT_CLASSIFICATION	1.2970516811657117E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999904119352233	WITHOUT_CLASSIFICATION	9.588064776744004E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999979442812434	WITHOUT_CLASSIFICATION	2.0557187566283527E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999973880774635	WITHOUT_CLASSIFICATION	2.6119225364204116E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999857640990201	WITHOUT_CLASSIFICATION	1.423590097999152E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999998545566269	WITHOUT_CLASSIFICATION	1.454433730567652E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999924145301	WITHOUT_CLASSIFICATION	7.585469933082636E-9	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999986290046	WITHOUT_CLASSIFICATION	1.3709953804812123E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999773090813	WITHOUT_CLASSIFICATION	2.2690918720585723E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999982725761	WITHOUT_CLASSIFICATION	1.7274239248302003E-9	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999990766015359	WITHOUT_CLASSIFICATION	9.233984641391194E-7	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999948158756747	WITHOUT_CLASSIFICATION	5.184124325237845E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999993195791562	WITHOUT_CLASSIFICATION	6.804208437444154E-7	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999998470514083	WITHOUT_CLASSIFICATION	1.5294859168284268E-7	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999961715841288	WITHOUT_CLASSIFICATION	3.828415871205961E-6	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999985214787622	WITHOUT_CLASSIFICATION	1.47852123768E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999958103356287	WITHOUT_CLASSIFICATION	4.189664371351551E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999935050019049	WITHOUT_CLASSIFICATION	6.494998095085072E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9997922981165246	WITHOUT_CLASSIFICATION	2.0770188347537898E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999818082866355	WITHOUT_CLASSIFICATION	1.8191713364412533E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999992040980772	WITHOUT_CLASSIFICATION	7.959019228339999E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998679679599	WITHOUT_CLASSIFICATION	1.3203203996945034E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999995485959132	WITHOUT_CLASSIFICATION	4.514040867306383E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999993953952037	WITHOUT_CLASSIFICATION	6.046047963704907E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999999883308297	WITHOUT_CLASSIFICATION	1.1669170256744644E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998607676139	WITHOUT_CLASSIFICATION	1.3923238609059786E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9995047019779214	WITHOUT_CLASSIFICATION	4.952980220786453E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999997868826235	WITHOUT_CLASSIFICATION	2.1311737647419435E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999994912161609	WITHOUT_CLASSIFICATION	5.087838390343305E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998607676139	WITHOUT_CLASSIFICATION	1.3923238609059786E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999874352982665	WITHOUT_CLASSIFICATION	1.2564701733447089E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999968477982358	WITHOUT_CLASSIFICATION	3.1522017640591213E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.999999722601201	WITHOUT_CLASSIFICATION	2.7739879911646726E-7	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999870880926944	WITHOUT_CLASSIFICATION	1.2911907305513773E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999982581533323	WITHOUT_CLASSIFICATION	1.741846667589404E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9995047019779214	WITHOUT_CLASSIFICATION	4.952980220786453E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999994912161609	WITHOUT_CLASSIFICATION	5.087838390343305E-7	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999874381884362	WITHOUT_CLASSIFICATION	1.2561811563798952E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999434395194	WITHOUT_CLASSIFICATION	5.65604806533568E-8	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999967966952115	WITHOUT_CLASSIFICATION	3.203304788630728E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999999427075882	WITHOUT_CLASSIFICATION	5.729241178758865E-8	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995034198153346	WITHOUT_CLASSIFICATION	4.965801846653486E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999910703741436	WITHOUT_CLASSIFICATION	8.929625856321575E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9984200071681155	WITHOUT_CLASSIFICATION	0.0015799928318845405	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999998363107039	WITHOUT_CLASSIFICATION	1.636892960996423E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999994411575817	WITHOUT_CLASSIFICATION	5.588424182439414E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999994411575817	WITHOUT_CLASSIFICATION	5.588424182439414E-7	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999998195447254	WITHOUT_CLASSIFICATION	1.8045527471918169E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999927805337009	WITHOUT_CLASSIFICATION	7.219466299163431E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.999999782443726	WITHOUT_CLASSIFICATION	2.175562741075046E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999982214446738	WITHOUT_CLASSIFICATION	1.778555326252775E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999984697333288	WITHOUT_CLASSIFICATION	1.5302666711866087E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998036048109	WITHOUT_CLASSIFICATION	1.9639518913228654E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998036048109	WITHOUT_CLASSIFICATION	1.9639518913228654E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999999823891484	WITHOUT_CLASSIFICATION	1.761085158939758E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.999993743987601	WITHOUT_CLASSIFICATION	6.256012398978147E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.999999648993243	WITHOUT_CLASSIFICATION	3.510067569696905E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999975620726241	WITHOUT_CLASSIFICATION	2.43792737586642E-6	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999991423596214	WITHOUT_CLASSIFICATION	8.576403786714532E-7	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998243506643986	WITHOUT_CLASSIFICATION	1.7564933560154089E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999970339142099	WITHOUT_CLASSIFICATION	2.9660857901881237E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999983986919503	WITHOUT_CLASSIFICATION	1.6013080497364233E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999972689833829	WITHOUT_CLASSIFICATION	2.731016617001384E-6	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999936016075	WITHOUT_CLASSIFICATION	6.3983925607398466E-9	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999981157279	WITHOUT_CLASSIFICATION	1.8842721338310878E-9	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999999268935	WITHOUT_CLASSIFICATION	7.310651859703586E-11	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999970466759721	WITHOUT_CLASSIFICATION	2.9533240279172005E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999928295977595	WITHOUT_CLASSIFICATION	7.1704022405737425E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999996788282145	WITHOUT_CLASSIFICATION	3.2117178556938415E-7	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999889912093638	WITHOUT_CLASSIFICATION	1.100879063626286E-5	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999886005955073	WITHOUT_CLASSIFICATION	1.139940449254321E-5	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.99999990136228	WITHOUT_CLASSIFICATION	9.863771996900472E-8	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999563865794233	WITHOUT_CLASSIFICATION	4.3613420576593006E-5	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999885640259523	WITHOUT_CLASSIFICATION	1.1435974047724692E-5	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999841214604677	WITHOUT_CLASSIFICATION	1.5878539532347126E-5	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999968250617076	WITHOUT_CLASSIFICATION	3.1749382925196148E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999940941042574	WITHOUT_CLASSIFICATION	5.905895742613616E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999953538797149	WITHOUT_CLASSIFICATION	4.646120285025818E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999998129615795	WITHOUT_CLASSIFICATION	1.8703842058196423E-7	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999883198662843	WITHOUT_CLASSIFICATION	1.1680133715616072E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.99995303198038	WITHOUT_CLASSIFICATION	4.69680196200318E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.999999648993243	WITHOUT_CLASSIFICATION	3.510067569696905E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999975620726241	WITHOUT_CLASSIFICATION	2.43792737586642E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999920442725372	WITHOUT_CLASSIFICATION	7.955727462900927E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999566352722822	WITHOUT_CLASSIFICATION	4.336472771771117E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999917230396185	WITHOUT_CLASSIFICATION	8.276960381623116E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998372842795583	WITHOUT_CLASSIFICATION	1.6271572044166454E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.999943723800228	WITHOUT_CLASSIFICATION	5.6276199771910814E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999995291941662	WITHOUT_CLASSIFICATION	4.70805833791068E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999999535569208	WITHOUT_CLASSIFICATION	4.644307912846632E-8	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999999535569208	WITHOUT_CLASSIFICATION	4.644307912846632E-8	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999773797853444	WITHOUT_CLASSIFICATION	2.2620214655498607E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999883960142729	WITHOUT_CLASSIFICATION	1.1603985726972627E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999645177311114	WITHOUT_CLASSIFICATION	3.5482268888706816E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999999622139338	WITHOUT_CLASSIFICATION	3.778606620026675E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999999622139338	WITHOUT_CLASSIFICATION	3.778606620026675E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999996566554256	WITHOUT_CLASSIFICATION	3.4334457440105192E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999997547806165	WITHOUT_CLASSIFICATION	2.452193834324574E-7	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999994825975537	WITHOUT_CLASSIFICATION	5.174024462191783E-7	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.999999860384617	WITHOUT_CLASSIFICATION	1.396153829824144E-7	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999961807314	WITHOUT_CLASSIFICATION	3.819268596403538E-9	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999927731773337	WITHOUT_CLASSIFICATION	7.2268226663626595E-6	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999864539874347	WITHOUT_CLASSIFICATION	1.3546012565336574E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999905107063433	WITHOUT_CLASSIFICATION	9.489293656784206E-6	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999621763944689	WITHOUT_CLASSIFICATION	3.7823605531077225E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999952337840802	WITHOUT_CLASSIFICATION	4.7662159197686596E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999950535166807	WITHOUT_CLASSIFICATION	4.9464833192494674E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999950535166807	WITHOUT_CLASSIFICATION	4.9464833192494674E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9907245587863863	WITHOUT_CLASSIFICATION	0.009275441213613678	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999281943410105	WITHOUT_CLASSIFICATION	7.180565898942372E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999281943410105	WITHOUT_CLASSIFICATION	7.180565898942372E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999281943410105	WITHOUT_CLASSIFICATION	7.180565898942372E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9996249452336501	WITHOUT_CLASSIFICATION	3.750547663498389E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9996249452336501	WITHOUT_CLASSIFICATION	3.750547663498389E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999999254661823	WITHOUT_CLASSIFICATION	7.453381770164501E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999999254661823	WITHOUT_CLASSIFICATION	7.453381770164501E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.999999254661823	WITHOUT_CLASSIFICATION	7.453381770164501E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999973650739119	WITHOUT_CLASSIFICATION	2.6349260881411845E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999973650739119	WITHOUT_CLASSIFICATION	2.6349260881411845E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999973650739119	WITHOUT_CLASSIFICATION	2.6349260881411845E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999980213466	WITHOUT_CLASSIFICATION	1.978653299730581E-9	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999980213466	WITHOUT_CLASSIFICATION	1.978653299730581E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999983415735768	WITHOUT_CLASSIFICATION	1.6584264231871232E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999983415735768	WITHOUT_CLASSIFICATION	1.6584264231871232E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999980762283087	WITHOUT_CLASSIFICATION	1.923771691241722E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999980762283087	WITHOUT_CLASSIFICATION	1.923771691241722E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999998686740847	WITHOUT_CLASSIFICATION	1.3132591530704836E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999998686740847	WITHOUT_CLASSIFICATION	1.3132591530704836E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999242056262	WITHOUT_CLASSIFICATION	7.579437384692682E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999242056262	WITHOUT_CLASSIFICATION	7.579437384692682E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999858000319596	WITHOUT_CLASSIFICATION	1.419996804039717E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999858000319596	WITHOUT_CLASSIFICATION	1.419996804039717E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999984922501277	WITHOUT_CLASSIFICATION	1.5077498723533608E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999984922501277	WITHOUT_CLASSIFICATION	1.5077498723533608E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999980213466	WITHOUT_CLASSIFICATION	1.978653299730581E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999983415735768	WITHOUT_CLASSIFICATION	1.6584264231871232E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999980762283087	WITHOUT_CLASSIFICATION	1.923771691241722E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999242056262	WITHOUT_CLASSIFICATION	7.579437384692682E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999858000319596	WITHOUT_CLASSIFICATION	1.419996804039717E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999984922501277	WITHOUT_CLASSIFICATION	1.5077498723533608E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999971864582319	WITHOUT_CLASSIFICATION	2.8135417680264924E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999971876666666	WITHOUT_CLASSIFICATION	2.812333333370191E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999948814970321	WITHOUT_CLASSIFICATION	5.118502967849675E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9982534808011709	WITHOUT_CLASSIFICATION	0.0017465191988291307	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999955591891737	WITHOUT_CLASSIFICATION	4.4408108262120894E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999983676056149	WITHOUT_CLASSIFICATION	1.6323943851570514E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999976719641356	WITHOUT_CLASSIFICATION	2.328035864424885E-6	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999980013986598	WITHOUT_CLASSIFICATION	1.9986013401711502E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999716648418433	WITHOUT_CLASSIFICATION	2.833515815674514E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.999999879653277	WITHOUT_CLASSIFICATION	1.2034672302252058E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999998133198356	WITHOUT_CLASSIFICATION	1.866801644997657E-7	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999998896475013	WITHOUT_CLASSIFICATION	1.1035249859820277E-7	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999997777002639	WITHOUT_CLASSIFICATION	2.2229973597860296E-7	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999998362722677	WITHOUT_CLASSIFICATION	1.6372773224484115E-7	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999996851791433	WITHOUT_CLASSIFICATION	3.148208567488733E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.99999756651087	WITHOUT_CLASSIFICATION	2.4334891300410348E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999955178189928	WITHOUT_CLASSIFICATION	4.482181007234358E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.999997438126124	WITHOUT_CLASSIFICATION	2.5618738760441064E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999992517170512	WITHOUT_CLASSIFICATION	7.482829488265806E-7	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999930257970057	WITHOUT_CLASSIFICATION	6.974202994371546E-6	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999999610973591	WITHOUT_CLASSIFICATION	3.8902640885575413E-8	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999957892885319	WITHOUT_CLASSIFICATION	4.210711468060952E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999999435705771	WITHOUT_CLASSIFICATION	5.6429422818936074E-8	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999989139401165	WITHOUT_CLASSIFICATION	1.0860598835685015E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999968316080865	WITHOUT_CLASSIFICATION	3.1683919134790948E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999971288928196	WITHOUT_CLASSIFICATION	2.8711071805030276E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999972548571118	WITHOUT_CLASSIFICATION	2.745142888259281E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999997899190008	WITHOUT_CLASSIFICATION	2.1008099915817555E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999959995603478	WITHOUT_CLASSIFICATION	4.000439652230584E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999973754916005	WITHOUT_CLASSIFICATION	2.624508399488679E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999992111947592	WITHOUT_CLASSIFICATION	7.888052407451103E-7	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.999992176880275	WITHOUT_CLASSIFICATION	7.82311972495978E-6	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999994345850923	WITHOUT_CLASSIFICATION	5.654149076711003E-7	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999994345850923	WITHOUT_CLASSIFICATION	5.654149076711003E-7	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999992878841191	WITHOUT_CLASSIFICATION	7.121158808564231E-7	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999988275202917	WITHOUT_CLASSIFICATION	1.1724797083000213E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999911114502679	WITHOUT_CLASSIFICATION	8.888549732178655E-6	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999970482120534	WITHOUT_CLASSIFICATION	2.951787946536049E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999841216033	WITHOUT_CLASSIFICATION	1.5878396705722314E-8	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999998423331615	WITHOUT_CLASSIFICATION	1.5766683841430666E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999983100840375	WITHOUT_CLASSIFICATION	1.689915962521463E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999927349978345	WITHOUT_CLASSIFICATION	7.26500216559653E-6	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.999998418911092	WITHOUT_CLASSIFICATION	1.5810889080192338E-6	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.999989189737224	WITHOUT_CLASSIFICATION	1.081026277600774E-5	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999939527747395	WITHOUT_CLASSIFICATION	6.047225260581859E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999991856123852	WITHOUT_CLASSIFICATION	8.143876148295874E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976239859374	WITHOUT_CLASSIFICATION	2.3760140625995525E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976239859374	WITHOUT_CLASSIFICATION	2.3760140625995525E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999931449049071	WITHOUT_CLASSIFICATION	6.855095092872603E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999931449049071	WITHOUT_CLASSIFICATION	6.855095092872603E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999931449049071	WITHOUT_CLASSIFICATION	6.855095092872603E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999912415726165	WITHOUT_CLASSIFICATION	8.758427383352886E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999965371347723	WITHOUT_CLASSIFICATION	3.4628652276284765E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999974767825005	WITHOUT_CLASSIFICATION	2.5232174994715287E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999974767825005	WITHOUT_CLASSIFICATION	2.5232174994715287E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999994723214025	WITHOUT_CLASSIFICATION	5.276785974574624E-7	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9998112964363461	WITHOUT_CLASSIFICATION	1.8870356365384837E-4	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999998322509982	WITHOUT_CLASSIFICATION	1.677490017571199E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999811075232838	WITHOUT_CLASSIFICATION	1.8892476716224328E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.999999681410489	WITHOUT_CLASSIFICATION	3.185895110545166E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999945031773196	WITHOUT_CLASSIFICATION	5.496822680417411E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999802228651756	WITHOUT_CLASSIFICATION	1.9777134824382243E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999999669837818	WITHOUT_CLASSIFICATION	3.3016218138668564E-8	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999991856854274	WITHOUT_CLASSIFICATION	8.143145725149161E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999848544771368	WITHOUT_CLASSIFICATION	1.5145522863273069E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999997763899523	WITHOUT_CLASSIFICATION	2.2361004783567107E-7	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999978607530401	WITHOUT_CLASSIFICATION	2.1392469598832546E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999999074445177	WITHOUT_CLASSIFICATION	9.255548230724382E-8	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999983651889633	WITHOUT_CLASSIFICATION	1.6348110365777601E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999864360209264	WITHOUT_CLASSIFICATION	1.3563979073730366E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999983477548116	WITHOUT_CLASSIFICATION	1.6522451884718946E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.999999983064169	WITHOUT_CLASSIFICATION	1.6935830909360582E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999949849379963	WITHOUT_CLASSIFICATION	5.015062003735387E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999939547487512	WITHOUT_CLASSIFICATION	6.045251248739817E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999297756796645	WITHOUT_CLASSIFICATION	7.022432033559714E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999932842291682	WITHOUT_CLASSIFICATION	6.715770831700601E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999993043165042	WITHOUT_CLASSIFICATION	6.956834958164922E-7	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9954303099778912	WITHOUT_CLASSIFICATION	0.004569690022108873	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996974715947	WITHOUT_CLASSIFICATION	3.025284053589656E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996974715947	WITHOUT_CLASSIFICATION	3.025284053589656E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999996974715947	WITHOUT_CLASSIFICATION	3.025284053589656E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997970931938	WITHOUT_CLASSIFICATION	2.0290680635267023E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997970931938	WITHOUT_CLASSIFICATION	2.0290680635267023E-7	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999717416075827	WITHOUT_CLASSIFICATION	2.8258392417246043E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9996444343176635	WITHOUT_CLASSIFICATION	3.555656823366141E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9996444343176635	WITHOUT_CLASSIFICATION	3.555656823366141E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999983536189424	WITHOUT_CLASSIFICATION	1.646381057543826E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.999967136019972	WITHOUT_CLASSIFICATION	3.28639800280313E-5	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999717416075827	WITHOUT_CLASSIFICATION	2.8258392417246043E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999998352242387	WITHOUT_CLASSIFICATION	1.6477576124208048E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999717416075827	WITHOUT_CLASSIFICATION	2.8258392417246043E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999961619349474	WITHOUT_CLASSIFICATION	3.838065052526623E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999961619349474	WITHOUT_CLASSIFICATION	3.838065052526623E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976239859374	WITHOUT_CLASSIFICATION	2.3760140625995525E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998663267790658	WITHOUT_CLASSIFICATION	1.336732209340896E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9994540124937259	WITHOUT_CLASSIFICATION	5.459875062741175E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.99926390794797	WITHOUT_CLASSIFICATION	7.360920520300072E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.999436349303955	WITHOUT_CLASSIFICATION	5.63650696044935E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9995830584522155	WITHOUT_CLASSIFICATION	4.169415477845346E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9984938509172638	WITHOUT_CLASSIFICATION	0.0015061490827360884	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9989117596039797	WITHOUT_CLASSIFICATION	0.0010882403960203151	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9989566802512669	WITHOUT_CLASSIFICATION	0.001043319748732994	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9991870884093467	WITHOUT_CLASSIFICATION	8.129115906534033E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.999219668970467	WITHOUT_CLASSIFICATION	7.803310295330279E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9994994770513634	WITHOUT_CLASSIFICATION	5.005229486366352E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9991683804538022	WITHOUT_CLASSIFICATION	8.316195461977674E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.999224345894483	WITHOUT_CLASSIFICATION	7.756541055171514E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9992946845134602	WITHOUT_CLASSIFICATION	7.053154865398073E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9988984712502443	WITHOUT_CLASSIFICATION	0.0011015287497556155	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9994303622783324	WITHOUT_CLASSIFICATION	5.696377216676844E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9994214055004296	WITHOUT_CLASSIFICATION	5.785944995704388E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9987000352471539	WITHOUT_CLASSIFICATION	0.001299964752846115	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9992025951602662	WITHOUT_CLASSIFICATION	7.974048397338352E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9993889068461174	WITHOUT_CLASSIFICATION	6.11093153882604E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9996250443339834	WITHOUT_CLASSIFICATION	3.7495566601666646E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9994520533732502	WITHOUT_CLASSIFICATION	5.479466267498542E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9994016268879234	WITHOUT_CLASSIFICATION	5.983731120765196E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9996321529545563	WITHOUT_CLASSIFICATION	3.6784704544374466E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9993890687375728	WITHOUT_CLASSIFICATION	6.109312624270528E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9993352584775367	WITHOUT_CLASSIFICATION	6.64741522463246E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9997084879796567	WITHOUT_CLASSIFICATION	2.915120203432674E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9987593890950242	WITHOUT_CLASSIFICATION	0.0012406109049758404	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.999544089063589	WITHOUT_CLASSIFICATION	4.559109364109895E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.999083818333574	WITHOUT_CLASSIFICATION	9.161816664259386E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9994780562427694	WITHOUT_CLASSIFICATION	5.21943757230585E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9994723051587351	WITHOUT_CLASSIFICATION	5.276948412650218E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9994179888283098	WITHOUT_CLASSIFICATION	5.820111716902277E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9995590515762252	WITHOUT_CLASSIFICATION	4.4094842377481595E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9994887500597902	WITHOUT_CLASSIFICATION	5.11249940209799E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9991040563494549	WITHOUT_CLASSIFICATION	8.959436505450528E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9993408912527829	WITHOUT_CLASSIFICATION	6.591087472170585E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9991298562829892	WITHOUT_CLASSIFICATION	8.701437170108777E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9993826367105556	WITHOUT_CLASSIFICATION	6.173632894444484E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9993644912636153	WITHOUT_CLASSIFICATION	6.355087363846103E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9989011169603793	WITHOUT_CLASSIFICATION	0.0010988830396207192	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9991587753333944	WITHOUT_CLASSIFICATION	8.412246666055581E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9989700641340012	WITHOUT_CLASSIFICATION	0.0010299358659987274	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9989499378602859	WITHOUT_CLASSIFICATION	0.001050062139714149	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.999059967405671	WITHOUT_CLASSIFICATION	9.400325943288186E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9987528401881914	WITHOUT_CLASSIFICATION	0.0012471598118085805	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9988497641893279	WITHOUT_CLASSIFICATION	0.0011502358106720396	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9988222707012208	WITHOUT_CLASSIFICATION	0.001177729298779266	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9979481134617557	WITHOUT_CLASSIFICATION	0.0020518865382443538	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.99922495503849	WITHOUT_CLASSIFICATION	7.750449615100278E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.999523625918685	WITHOUT_CLASSIFICATION	4.763740813150695E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9989999364211413	WITHOUT_CLASSIFICATION	0.001000063578858708	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.999042839119003	WITHOUT_CLASSIFICATION	9.571608809971027E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9991542763796128	WITHOUT_CLASSIFICATION	8.457236203871829E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9994542960249222	WITHOUT_CLASSIFICATION	5.457039750777912E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9993868409353102	WITHOUT_CLASSIFICATION	6.131590646898773E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9996955552884206	WITHOUT_CLASSIFICATION	3.0444471157934386E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9991028008252213	WITHOUT_CLASSIFICATION	8.971991747788281E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9985418885441685	WITHOUT_CLASSIFICATION	0.001458111455831617	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9993567129959497	WITHOUT_CLASSIFICATION	6.432870040502121E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9973515029811122	WITHOUT_CLASSIFICATION	0.0026484970188878306	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9992022184779494	WITHOUT_CLASSIFICATION	7.977815220506192E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9993626665844138	WITHOUT_CLASSIFICATION	6.373334155863233E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9990678734341732	WITHOUT_CLASSIFICATION	9.321265658268345E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9994393687745143	WITHOUT_CLASSIFICATION	5.606312254856996E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.998809415555185	WITHOUT_CLASSIFICATION	0.0011905844448149108	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9986780002717877	WITHOUT_CLASSIFICATION	0.0013219997282123293	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9994464024040706	WITHOUT_CLASSIFICATION	5.535975959294491E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9995563562847679	WITHOUT_CLASSIFICATION	4.43643715232186E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9992172638401086	WITHOUT_CLASSIFICATION	7.827361598914428E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9995512650982099	WITHOUT_CLASSIFICATION	4.4873490179010104E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9997049940084276	WITHOUT_CLASSIFICATION	2.9500599157240273E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9992143679475474	WITHOUT_CLASSIFICATION	7.856320524526816E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9995025591767513	WITHOUT_CLASSIFICATION	4.974408232486025E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9994420716499763	WITHOUT_CLASSIFICATION	5.579283500236912E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9991937858857649	WITHOUT_CLASSIFICATION	8.062141142351761E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9994662753159523	WITHOUT_CLASSIFICATION	5.337246840476591E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9977430137145648	WITHOUT_CLASSIFICATION	0.0022569862854352504	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9992412489932917	WITHOUT_CLASSIFICATION	7.587510067083437E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9995479359748114	WITHOUT_CLASSIFICATION	4.5206402518867375E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999625133323671	WITHOUT_CLASSIFICATION	3.7486667633021906E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999939080360207	WITHOUT_CLASSIFICATION	6.091963979221215E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999996647038768	WITHOUT_CLASSIFICATION	3.3529612329416746E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.999999650382553	WITHOUT_CLASSIFICATION	3.4961744706525704E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999884025226	WITHOUT_CLASSIFICATION	1.1597477476092303E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999999793836671	WITHOUT_CLASSIFICATION	2.0616332876932543E-8	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999970823188279	WITHOUT_CLASSIFICATION	2.9176811720887207E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999951157616449	WITHOUT_CLASSIFICATION	4.8842383550609754E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999996343075983	WITHOUT_CLASSIFICATION	3.656924016601846E-7	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999990701650854	WITHOUT_CLASSIFICATION	9.298349145718684E-7	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999998423331615	WITHOUT_CLASSIFICATION	1.5766683841430666E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999912415726165	WITHOUT_CLASSIFICATION	8.758427383352886E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999965371347723	WITHOUT_CLASSIFICATION	3.4628652276284765E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999974767825005	WITHOUT_CLASSIFICATION	2.5232174994715287E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999949849379963	WITHOUT_CLASSIFICATION	5.015062003735387E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999939547487512	WITHOUT_CLASSIFICATION	6.045251248739817E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999981773654989	WITHOUT_CLASSIFICATION	1.8226345010729412E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997970931938	WITHOUT_CLASSIFICATION	2.0290680635267023E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976239859374	WITHOUT_CLASSIFICATION	2.3760140625995525E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999819290136555	WITHOUT_CLASSIFICATION	1.807098634449142E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999979447477408	WITHOUT_CLASSIFICATION	2.055252259062652E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999996456073456	WITHOUT_CLASSIFICATION	3.5439265440162144E-7	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999994687845504	WITHOUT_CLASSIFICATION	5.312154495693847E-7	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999827299707162	WITHOUT_CLASSIFICATION	1.7270029283794677E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999984526206124	WITHOUT_CLASSIFICATION	1.5473793876001557E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999998656643653	WITHOUT_CLASSIFICATION	1.3433563467920032E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999676495288	WITHOUT_CLASSIFICATION	3.2350471087863703E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.999997438126124	WITHOUT_CLASSIFICATION	2.5618738760441064E-6	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999984345196931	WITHOUT_CLASSIFICATION	1.5654803069566392E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999995367234763	WITHOUT_CLASSIFICATION	4.632765237751841E-7	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999998977865192	WITHOUT_CLASSIFICATION	1.0221348078243022E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999554503446767	WITHOUT_CLASSIFICATION	4.4549655323376507E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999992025319107	WITHOUT_CLASSIFICATION	7.974680894603684E-7	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.999999633271067	WITHOUT_CLASSIFICATION	3.667289329392994E-7	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999978192756489	WITHOUT_CLASSIFICATION	2.1807243511008563E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999998475597682	WITHOUT_CLASSIFICATION	1.5244023166712087E-7	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999998914656143	WITHOUT_CLASSIFICATION	1.085343856329722E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.999989363426277	WITHOUT_CLASSIFICATION	1.0636573723031324E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999939389337559	WITHOUT_CLASSIFICATION	6.061066244064069E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999971282895641	WITHOUT_CLASSIFICATION	2.8717104359759033E-6	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999924776274984	WITHOUT_CLASSIFICATION	7.522372501676233E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.999999867459851	WITHOUT_CLASSIFICATION	1.3254014897869112E-7	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999998787166526	WITHOUT_CLASSIFICATION	1.21283347404259E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9998648480197488	WITHOUT_CLASSIFICATION	1.3515198025125194E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999923726479668	WITHOUT_CLASSIFICATION	7.6273520331616435E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998449368613267	WITHOUT_CLASSIFICATION	1.5506313867322345E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999199862558	WITHOUT_CLASSIFICATION	8.001374417744933E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999943050320729	WITHOUT_CLASSIFICATION	5.69496792715144E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999994852690347	WITHOUT_CLASSIFICATION	5.147309651940999E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999990583544687	WITHOUT_CLASSIFICATION	9.416455313283753E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999870922576	WITHOUT_CLASSIFICATION	1.2907742515584403E-8	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999870922576	WITHOUT_CLASSIFICATION	1.2907742515584403E-8	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999893444141	WITHOUT_CLASSIFICATION	1.0655585940680547E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999989040768421	WITHOUT_CLASSIFICATION	1.095923157842037E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999981094426619	WITHOUT_CLASSIFICATION	1.8905573381633981E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.999866184690968	WITHOUT_CLASSIFICATION	1.3381530903191417E-4	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999998334833477	WITHOUT_CLASSIFICATION	1.665166523051605E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999376710017	WITHOUT_CLASSIFICATION	6.232899820587262E-8	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9995386123745741	WITHOUT_CLASSIFICATION	4.6138762542600336E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999952992900322	WITHOUT_CLASSIFICATION	4.700709967808211E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.999961808454921	WITHOUT_CLASSIFICATION	3.819154507909936E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999986680777088	WITHOUT_CLASSIFICATION	1.3319222912250407E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991748042222	WITHOUT_CLASSIFICATION	8.251957777723784E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999994823950402	WITHOUT_CLASSIFICATION	5.176049596935063E-7	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999843694173997	WITHOUT_CLASSIFICATION	1.56305826002766E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999983162480958	WITHOUT_CLASSIFICATION	1.6837519042777284E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999985027211675	WITHOUT_CLASSIFICATION	1.4972788324310819E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999951946888053	WITHOUT_CLASSIFICATION	4.805311194660745E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999995643219751	WITHOUT_CLASSIFICATION	4.3567802491896624E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999212319770948	WITHOUT_CLASSIFICATION	7.876802290519924E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999803405101122	WITHOUT_CLASSIFICATION	1.9659489887722825E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999872234587	WITHOUT_CLASSIFICATION	1.2776541246038663E-8	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999947404802739	WITHOUT_CLASSIFICATION	5.259519726095031E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999974230174012	WITHOUT_CLASSIFICATION	2.576982598796573E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999997474858494	WITHOUT_CLASSIFICATION	2.525141506055603E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998481611169	WITHOUT_CLASSIFICATION	1.5183888314198018E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999999054244516	WITHOUT_CLASSIFICATION	9.457554840699024E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999997086487076	WITHOUT_CLASSIFICATION	2.9135129247691285E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999890438427	WITHOUT_CLASSIFICATION	1.0956157266818814E-8	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999753601428	WITHOUT_CLASSIFICATION	2.463985712907517E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999999994662139	WITHOUT_CLASSIFICATION	5.3378610504653444E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999849557052	WITHOUT_CLASSIFICATION	1.5044294811157227E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999979629734767	WITHOUT_CLASSIFICATION	2.0370265233009808E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999909993459	WITHOUT_CLASSIFICATION	9.000654059873288E-9	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999756890044	WITHOUT_CLASSIFICATION	2.4310995600673752E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999934605551	WITHOUT_CLASSIFICATION	6.539444971969982E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999895439552358	WITHOUT_CLASSIFICATION	1.0456044764151026E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999990585668834	WITHOUT_CLASSIFICATION	9.414331164897464E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999393805317114	WITHOUT_CLASSIFICATION	6.061946828853562E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999991711056208	WITHOUT_CLASSIFICATION	8.288943792269716E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999999525246837	WITHOUT_CLASSIFICATION	4.747531630591463E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999700726313	WITHOUT_CLASSIFICATION	2.992736867834045E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999748694050156	WITHOUT_CLASSIFICATION	2.5130594984532002E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999885577934652	WITHOUT_CLASSIFICATION	1.1442206534672035E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999949297429052	WITHOUT_CLASSIFICATION	5.070257094841995E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999236765342521	WITHOUT_CLASSIFICATION	7.632346574792866E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999828576658092	WITHOUT_CLASSIFICATION	1.7142334190829394E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9991739060728614	WITHOUT_CLASSIFICATION	8.260939271386678E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999971660695763	WITHOUT_CLASSIFICATION	2.8339304235928227E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999996877239682	WITHOUT_CLASSIFICATION	3.122760317961635E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999992439189034	WITHOUT_CLASSIFICATION	7.56081096598747E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999748254411	WITHOUT_CLASSIFICATION	2.517455890447819E-7	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999934714846477	WITHOUT_CLASSIFICATION	6.528515352298573E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999998772416764	WITHOUT_CLASSIFICATION	1.227583236246811E-7	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999703683822	WITHOUT_CLASSIFICATION	2.9631617724303227E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999819742589	WITHOUT_CLASSIFICATION	1.8025741224048667E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999781523009	WITHOUT_CLASSIFICATION	2.1847699135372387E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998368880851	WITHOUT_CLASSIFICATION	1.6311191489561195E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9998433679599701	WITHOUT_CLASSIFICATION	1.5663204003000744E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999547318357	WITHOUT_CLASSIFICATION	4.526816439453887E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.999984910308354	WITHOUT_CLASSIFICATION	1.5089691645964194E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999998712637075	WITHOUT_CLASSIFICATION	1.2873629257361134E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999989596122931	WITHOUT_CLASSIFICATION	1.0403877068481929E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999997250286716	WITHOUT_CLASSIFICATION	2.7497132835379765E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999624941522	WITHOUT_CLASSIFICATION	3.7505847756529746E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999972700891855	WITHOUT_CLASSIFICATION	2.729910814451926E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999999936134645	WITHOUT_CLASSIFICATION	6.386535491308542E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999998097294021	WITHOUT_CLASSIFICATION	1.9027059803827564E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999256358985	WITHOUT_CLASSIFICATION	7.436410164711095E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999982679032267	WITHOUT_CLASSIFICATION	1.7320967732820213E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999926767089247	WITHOUT_CLASSIFICATION	7.323291075296212E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999999984573443	WITHOUT_CLASSIFICATION	1.5426557026430893E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999970873389	WITHOUT_CLASSIFICATION	2.9126610954028144E-9	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999902869644994	WITHOUT_CLASSIFICATION	9.713035500458345E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999956593980027	WITHOUT_CLASSIFICATION	4.3406019972694775E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999974601332229	WITHOUT_CLASSIFICATION	2.5398667770989636E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999873451850125	WITHOUT_CLASSIFICATION	1.2654814987381419E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9988558684329037	WITHOUT_CLASSIFICATION	0.0011441315670963302	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999973598295565	WITHOUT_CLASSIFICATION	2.640170443510175E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999992377875389	WITHOUT_CLASSIFICATION	7.622124610867365E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999867128460024	WITHOUT_CLASSIFICATION	1.3287153997580177E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999022846977	WITHOUT_CLASSIFICATION	9.771530237307889E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999922956441	WITHOUT_CLASSIFICATION	7.70435588519571E-9	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999999559336861	WITHOUT_CLASSIFICATION	4.4066314064311466E-8	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999957425643622	WITHOUT_CLASSIFICATION	4.257435637771854E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999930413169907	WITHOUT_CLASSIFICATION	6.9586830091596425E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999856367321	WITHOUT_CLASSIFICATION	1.4363267976160647E-8	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998707244086371	WITHOUT_CLASSIFICATION	1.292755913628347E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999839673743037	WITHOUT_CLASSIFICATION	1.6032625696358408E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999500758107287	WITHOUT_CLASSIFICATION	4.992418927129598E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999656197465	WITHOUT_CLASSIFICATION	3.4380253567535294E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992474417397	WITHOUT_CLASSIFICATION	7.525582601677903E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999910125561	WITHOUT_CLASSIFICATION	8.987443951284047E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998987715298	WITHOUT_CLASSIFICATION	1.0122847009877976E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999998010196366	WITHOUT_CLASSIFICATION	1.9898036339453632E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999999103731928	WITHOUT_CLASSIFICATION	8.962680717364516E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999717929131	WITHOUT_CLASSIFICATION	2.8207086861234603E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999997508898538	WITHOUT_CLASSIFICATION	2.491101461732744E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999999663927055	WITHOUT_CLASSIFICATION	3.360729440655808E-8	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999997900971043	WITHOUT_CLASSIFICATION	2.0990289574148387E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999999228902714	WITHOUT_CLASSIFICATION	7.710972867258997E-8	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.99999994912584	WITHOUT_CLASSIFICATION	5.087415996274137E-8	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998817269930268	WITHOUT_CLASSIFICATION	1.1827300697317537E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999870572646303	WITHOUT_CLASSIFICATION	1.2942735369664414E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999755209275715	WITHOUT_CLASSIFICATION	2.447907242849782E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999883881538193	WITHOUT_CLASSIFICATION	1.161184618059946E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998086246893699	WITHOUT_CLASSIFICATION	1.9137531063003648E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613857992073	WITHOUT_CLASSIFICATION	3.8614200792576156E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889041061715	WITHOUT_CLASSIFICATION	1.1095893828415349E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999191234190343	WITHOUT_CLASSIFICATION	8.087658096569252E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773777173465	WITHOUT_CLASSIFICATION	2.262228265349317E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999631746500384	WITHOUT_CLASSIFICATION	3.682534996161685E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998283245223	WITHOUT_CLASSIFICATION	1.716754776999746E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999617839869717	WITHOUT_CLASSIFICATION	3.8216013028345765E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999129047721964	WITHOUT_CLASSIFICATION	8.709522780352022E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999681142261668	WITHOUT_CLASSIFICATION	3.188577383321703E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999701542109015	WITHOUT_CLASSIFICATION	2.9845789098511373E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99997630636566	WITHOUT_CLASSIFICATION	2.3693634339955656E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999386241309853	WITHOUT_CLASSIFICATION	6.137586901468016E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999847905658311	WITHOUT_CLASSIFICATION	1.5209434168925116E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999782104897231	WITHOUT_CLASSIFICATION	2.1789510276811315E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998476365430234	WITHOUT_CLASSIFICATION	1.5236345697653068E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998558199084314	WITHOUT_CLASSIFICATION	1.4418009156861455E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999090065802945	WITHOUT_CLASSIFICATION	9.099341970562865E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999754526734506	WITHOUT_CLASSIFICATION	2.4547326549523198E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999831963209675	WITHOUT_CLASSIFICATION	1.6803679032386883E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998771952149879	WITHOUT_CLASSIFICATION	1.2280478501218068E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998822435629838	WITHOUT_CLASSIFICATION	1.177564370161914E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999949065548521	WITHOUT_CLASSIFICATION	5.093445147908255E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999949065548521	WITHOUT_CLASSIFICATION	5.093445147908255E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997845337036421	WITHOUT_CLASSIFICATION	2.1546629635799762E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999219829041386	WITHOUT_CLASSIFICATION	7.801709586132384E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999909541305749	WITHOUT_CLASSIFICATION	9.045869425091355E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999292819325871	WITHOUT_CLASSIFICATION	7.071806741286008E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998836133200528	WITHOUT_CLASSIFICATION	1.1638667994712665E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997919654503601	WITHOUT_CLASSIFICATION	2.080345496399737E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999249232539367	WITHOUT_CLASSIFICATION	7.507674606323528E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999093853214585	WITHOUT_CLASSIFICATION	9.061467854152755E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999369126631299	WITHOUT_CLASSIFICATION	6.30873368700822E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999786424063765	WITHOUT_CLASSIFICATION	2.1357593623447357E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998486396943275	WITHOUT_CLASSIFICATION	1.5136030567247278E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999985928096566	WITHOUT_CLASSIFICATION	1.4071903434155238E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999596866996807	WITHOUT_CLASSIFICATION	4.0313300319317746E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999162682636242	WITHOUT_CLASSIFICATION	8.373173637581712E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998984405616546	WITHOUT_CLASSIFICATION	1.01559438345395E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999105597737339	WITHOUT_CLASSIFICATION	8.944022626609063E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999347181545798	WITHOUT_CLASSIFICATION	6.528184542022483E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999483947294815	WITHOUT_CLASSIFICATION	5.16052705185215E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999244034529723	WITHOUT_CLASSIFICATION	7.559654702770488E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999019985419837	WITHOUT_CLASSIFICATION	9.800145801631873E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998747024729866	WITHOUT_CLASSIFICATION	1.2529752701338187E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986716833921	WITHOUT_CLASSIFICATION	1.328316607892828E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986716833921	WITHOUT_CLASSIFICATION	1.328316607892828E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850466208415	WITHOUT_CLASSIFICATION	1.4953379158499898E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850466208415	WITHOUT_CLASSIFICATION	1.4953379158499898E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853978959757	WITHOUT_CLASSIFICATION	1.4602104024258568E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999174312468541	WITHOUT_CLASSIFICATION	8.256875314598561E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999782104897231	WITHOUT_CLASSIFICATION	2.1789510276811315E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999019985419837	WITHOUT_CLASSIFICATION	9.800145801631873E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986716833921	WITHOUT_CLASSIFICATION	1.328316607892828E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850466208415	WITHOUT_CLASSIFICATION	1.4953379158499898E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999174312468541	WITHOUT_CLASSIFICATION	8.256875314598561E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999264033222569	WITHOUT_CLASSIFICATION	7.359667774299674E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999891001666253	WITHOUT_CLASSIFICATION	1.0899833374702279E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997796409720147	WITHOUT_CLASSIFICATION	2.2035902798522584E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996862341157927	WITHOUT_CLASSIFICATION	3.137658842072956E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995756873553668	WITHOUT_CLASSIFICATION	4.2431264463318156E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999380050405332	WITHOUT_CLASSIFICATION	6.19949594667876E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999792144298559	WITHOUT_CLASSIFICATION	2.078557014406593E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999479877284141	WITHOUT_CLASSIFICATION	5.201227158597492E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999792144298559	WITHOUT_CLASSIFICATION	2.078557014406593E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998682691393849	WITHOUT_CLASSIFICATION	1.3173086061516804E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997793307596353	WITHOUT_CLASSIFICATION	2.2066924036468063E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998951369331658	WITHOUT_CLASSIFICATION	1.0486306683418633E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999212608273462	WITHOUT_CLASSIFICATION	7.873917265372379E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999103287750045	WITHOUT_CLASSIFICATION	8.967122499551327E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998787871131	WITHOUT_CLASSIFICATION	1.2121288689998785E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999773714674782	WITHOUT_CLASSIFICATION	2.262853252174939E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999290300123341	WITHOUT_CLASSIFICATION	7.096998766583443E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999901892773288	WITHOUT_CLASSIFICATION	9.810722671205871E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999930844734517	WITHOUT_CLASSIFICATION	6.915526548346082E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999426192716838	WITHOUT_CLASSIFICATION	5.7380728316290655E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999436314715423	WITHOUT_CLASSIFICATION	5.636852845775797E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999519860720885	WITHOUT_CLASSIFICATION	4.801392791152647E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999745862131991	WITHOUT_CLASSIFICATION	2.5413786800901404E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999784923766932	WITHOUT_CLASSIFICATION	2.150762330683329E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999436477754432	WITHOUT_CLASSIFICATION	5.6352224556819406E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998996196853496	WITHOUT_CLASSIFICATION	1.003803146504577E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999836960643022	WITHOUT_CLASSIFICATION	1.630393569782016E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871118781475	WITHOUT_CLASSIFICATION	1.2888121852468807E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999788296745188	WITHOUT_CLASSIFICATION	2.117032548123365E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999872234587	WITHOUT_CLASSIFICATION	1.2776541246038663E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999206950382226	WITHOUT_CLASSIFICATION	7.930496177739285E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995034198153346	WITHOUT_CLASSIFICATION	4.965801846653486E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999583777602228	WITHOUT_CLASSIFICATION	4.162223977730011E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999426192716838	WITHOUT_CLASSIFICATION	5.7380728316290655E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999530219188264	WITHOUT_CLASSIFICATION	4.6978081173591845E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996421755380144	WITHOUT_CLASSIFICATION	3.5782446198566784E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998011233098366	WITHOUT_CLASSIFICATION	1.9887669016335616E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999999961275281	WITHOUT_CLASSIFICATION	3.8724719100283543E-8	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999585007123	WITHOUT_CLASSIFICATION	4.149928774327684E-8	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999998398658192	WITHOUT_CLASSIFICATION	1.6013418070648648E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999999950838461	WITHOUT_CLASSIFICATION	4.9161539025447565E-8	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999999645100338	WITHOUT_CLASSIFICATION	3.548996609680796E-8	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999999990859672	WITHOUT_CLASSIFICATION	9.140328153923772E-9	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999429163947	WITHOUT_CLASSIFICATION	5.708360533023132E-8	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999913951637	WITHOUT_CLASSIFICATION	8.604836367920094E-9	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999462606729	WITHOUT_CLASSIFICATION	5.373932710789743E-8	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999675801509	WITHOUT_CLASSIFICATION	3.24198490451653E-8	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999994722227693	WITHOUT_CLASSIFICATION	5.277772306113383E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999717929131	WITHOUT_CLASSIFICATION	2.8207086861234603E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999997632661171	WITHOUT_CLASSIFICATION	2.3673388294686415E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999450949578	WITHOUT_CLASSIFICATION	5.4905042098536555E-8	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999959546226904	WITHOUT_CLASSIFICATION	4.045377309642983E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.999999404495898	WITHOUT_CLASSIFICATION	5.955041020153139E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999581411178	WITHOUT_CLASSIFICATION	4.185888219378127E-8	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999981958359391	WITHOUT_CLASSIFICATION	1.8041640609048413E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999999350995473	WITHOUT_CLASSIFICATION	6.490045268988016E-8	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999998426628122	WITHOUT_CLASSIFICATION	1.5733718793517993E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999999117808744	WITHOUT_CLASSIFICATION	8.821912549135666E-8	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998449368613267	WITHOUT_CLASSIFICATION	1.5506313867322345E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999199862558	WITHOUT_CLASSIFICATION	8.001374417744933E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999943050320729	WITHOUT_CLASSIFICATION	5.69496792715144E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999994852690347	WITHOUT_CLASSIFICATION	5.147309651940999E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999990583544687	WITHOUT_CLASSIFICATION	9.416455313283753E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999870922576	WITHOUT_CLASSIFICATION	1.2907742515584403E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999989040768421	WITHOUT_CLASSIFICATION	1.095923157842037E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999981094426619	WITHOUT_CLASSIFICATION	1.8905573381633981E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.999866184690968	WITHOUT_CLASSIFICATION	1.3381530903191417E-4	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999998334833477	WITHOUT_CLASSIFICATION	1.665166523051605E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999376710017	WITHOUT_CLASSIFICATION	6.232899820587262E-8	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999994697822345	WITHOUT_CLASSIFICATION	5.302177654537654E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992474417397	WITHOUT_CLASSIFICATION	7.525582601677903E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999986680777088	WITHOUT_CLASSIFICATION	1.3319222912250407E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999994823950402	WITHOUT_CLASSIFICATION	5.176049596935063E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999995643219751	WITHOUT_CLASSIFICATION	4.3567802491896624E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999212319770948	WITHOUT_CLASSIFICATION	7.876802290519924E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999803405101122	WITHOUT_CLASSIFICATION	1.9659489887722825E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.999961808454921	WITHOUT_CLASSIFICATION	3.819154507909936E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991748042222	WITHOUT_CLASSIFICATION	8.251957777723784E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999872234587	WITHOUT_CLASSIFICATION	1.2776541246038663E-8	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999983162480958	WITHOUT_CLASSIFICATION	1.6837519042777284E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999923726479668	WITHOUT_CLASSIFICATION	7.6273520331616435E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999843694173997	WITHOUT_CLASSIFICATION	1.56305826002766E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999997474858494	WITHOUT_CLASSIFICATION	2.525141506055603E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998481611169	WITHOUT_CLASSIFICATION	1.5183888314198018E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999999054244516	WITHOUT_CLASSIFICATION	9.457554840699024E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999717929131	WITHOUT_CLASSIFICATION	2.8207086861234603E-8	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985888752253981	WITHOUT_CLASSIFICATION	0.0014111247746018591	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999996111557	WITHOUT_CLASSIFICATION	3.888442927450602E-10	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999890438427	WITHOUT_CLASSIFICATION	1.0956157266818814E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999999994662139	WITHOUT_CLASSIFICATION	5.3378610504653444E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999957750558	WITHOUT_CLASSIFICATION	4.224944152500017E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999849557052	WITHOUT_CLASSIFICATION	1.5044294811157227E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999979629734767	WITHOUT_CLASSIFICATION	2.0370265233009808E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999756890044	WITHOUT_CLASSIFICATION	2.4310995600673752E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999995863881856	WITHOUT_CLASSIFICATION	4.13611814393013E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999934605551	WITHOUT_CLASSIFICATION	6.539444971969982E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999895439552358	WITHOUT_CLASSIFICATION	1.0456044764151026E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999990585668834	WITHOUT_CLASSIFICATION	9.414331164897464E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999867380962277	WITHOUT_CLASSIFICATION	1.3261903772319653E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999393805317114	WITHOUT_CLASSIFICATION	6.061946828853562E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999998274085095	WITHOUT_CLASSIFICATION	1.7259149049231E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999748694050156	WITHOUT_CLASSIFICATION	2.5130594984532002E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999991711056208	WITHOUT_CLASSIFICATION	8.288943792269716E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999999525246837	WITHOUT_CLASSIFICATION	4.747531630591463E-7	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999949297429052	WITHOUT_CLASSIFICATION	5.070257094841995E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999236765342521	WITHOUT_CLASSIFICATION	7.632346574792866E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999828576658092	WITHOUT_CLASSIFICATION	1.7142334190829394E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999175080868556	WITHOUT_CLASSIFICATION	8.249191314428838E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9991739060728614	WITHOUT_CLASSIFICATION	8.260939271386678E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999971660695763	WITHOUT_CLASSIFICATION	2.8339304235928227E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999996877239682	WITHOUT_CLASSIFICATION	3.122760317961635E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999992439189034	WITHOUT_CLASSIFICATION	7.56081096598747E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999748254411	WITHOUT_CLASSIFICATION	2.517455890447819E-7	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999934714846477	WITHOUT_CLASSIFICATION	6.528515352298573E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999998772416764	WITHOUT_CLASSIFICATION	1.227583236246811E-7	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999703683822	WITHOUT_CLASSIFICATION	2.9631617724303227E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999819742589	WITHOUT_CLASSIFICATION	1.8025741224048667E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999819742589	WITHOUT_CLASSIFICATION	1.8025741224048667E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999781523009	WITHOUT_CLASSIFICATION	2.1847699135372387E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998368880851	WITHOUT_CLASSIFICATION	1.6311191489561195E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9998433679599701	WITHOUT_CLASSIFICATION	1.5663204003000744E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999547318357	WITHOUT_CLASSIFICATION	4.526816439453887E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999998712637075	WITHOUT_CLASSIFICATION	1.2873629257361134E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999989596122931	WITHOUT_CLASSIFICATION	1.0403877068481929E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999997250286716	WITHOUT_CLASSIFICATION	2.7497132835379765E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999624941522	WITHOUT_CLASSIFICATION	3.7505847756529746E-8	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999999936134645	WITHOUT_CLASSIFICATION	6.386535491308542E-8	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999751104891	WITHOUT_CLASSIFICATION	2.4889510830325066E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999998097294021	WITHOUT_CLASSIFICATION	1.9027059803827564E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999256358985	WITHOUT_CLASSIFICATION	7.436410164711095E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999982679032267	WITHOUT_CLASSIFICATION	1.7320967732820213E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999926767089247	WITHOUT_CLASSIFICATION	7.323291075296212E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999999984573443	WITHOUT_CLASSIFICATION	1.5426557026430893E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999902869644994	WITHOUT_CLASSIFICATION	9.713035500458345E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999956593980027	WITHOUT_CLASSIFICATION	4.3406019972694775E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999974601332229	WITHOUT_CLASSIFICATION	2.5398667770989636E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999873451850125	WITHOUT_CLASSIFICATION	1.2654814987381419E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9988558684329037	WITHOUT_CLASSIFICATION	0.0011441315670963302	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999973598295565	WITHOUT_CLASSIFICATION	2.640170443510175E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999992377875389	WITHOUT_CLASSIFICATION	7.622124610867365E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999867128460024	WITHOUT_CLASSIFICATION	1.3287153997580177E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999022846977	WITHOUT_CLASSIFICATION	9.771530237307889E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999922956441	WITHOUT_CLASSIFICATION	7.70435588519571E-9	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999999559336861	WITHOUT_CLASSIFICATION	4.4066314064311466E-8	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999930413169907	WITHOUT_CLASSIFICATION	6.9586830091596425E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998707244086371	WITHOUT_CLASSIFICATION	1.292755913628347E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999839673743037	WITHOUT_CLASSIFICATION	1.6032625696358408E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999500758107287	WITHOUT_CLASSIFICATION	4.992418927129598E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999656197465	WITHOUT_CLASSIFICATION	3.4380253567535294E-8	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999631949260278	WITHOUT_CLASSIFICATION	3.680507397227879E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999994211788755	WITHOUT_CLASSIFICATION	5.788211246005864E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999999088882838	WITHOUT_CLASSIFICATION	9.111171616137834E-8	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999910125561	WITHOUT_CLASSIFICATION	8.987443951284047E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999940863558	WITHOUT_CLASSIFICATION	5.913644208268027E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998987715298	WITHOUT_CLASSIFICATION	1.0122847009877976E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999998010196366	WITHOUT_CLASSIFICATION	1.9898036339453632E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999999103731928	WITHOUT_CLASSIFICATION	8.962680717364516E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999995401335646	WITHOUT_CLASSIFICATION	4.5986643544363603E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999997508898538	WITHOUT_CLASSIFICATION	2.491101461732744E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999999663927055	WITHOUT_CLASSIFICATION	3.360729440655808E-8	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999997900971043	WITHOUT_CLASSIFICATION	2.0990289574148387E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999999228902714	WITHOUT_CLASSIFICATION	7.710972867258997E-8	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.99999994912584	WITHOUT_CLASSIFICATION	5.087415996274137E-8	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998817269930268	WITHOUT_CLASSIFICATION	1.1827300697317537E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999870572646303	WITHOUT_CLASSIFICATION	1.2942735369664414E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999755209275715	WITHOUT_CLASSIFICATION	2.447907242849782E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999883881538193	WITHOUT_CLASSIFICATION	1.161184618059946E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613857992073	WITHOUT_CLASSIFICATION	3.8614200792576156E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889041061715	WITHOUT_CLASSIFICATION	1.1095893828415349E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999191234190343	WITHOUT_CLASSIFICATION	8.087658096569252E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773777173465	WITHOUT_CLASSIFICATION	2.262228265349317E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894630826526	WITHOUT_CLASSIFICATION	1.0536917347407128E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999631746500384	WITHOUT_CLASSIFICATION	3.682534996161685E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998283245223	WITHOUT_CLASSIFICATION	1.716754776999746E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999617839869717	WITHOUT_CLASSIFICATION	3.8216013028345765E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999129047721964	WITHOUT_CLASSIFICATION	8.709522780352022E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999681142261668	WITHOUT_CLASSIFICATION	3.188577383321703E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999701542109015	WITHOUT_CLASSIFICATION	2.9845789098511373E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99997630636566	WITHOUT_CLASSIFICATION	2.3693634339955656E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997935850062708	WITHOUT_CLASSIFICATION	2.064149937292041E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999847905658311	WITHOUT_CLASSIFICATION	1.5209434168925116E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999782104897231	WITHOUT_CLASSIFICATION	2.1789510276811315E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998558199084314	WITHOUT_CLASSIFICATION	1.4418009156861455E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999090065802945	WITHOUT_CLASSIFICATION	9.099341970562865E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999754526734506	WITHOUT_CLASSIFICATION	2.4547326549523198E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999831963209675	WITHOUT_CLASSIFICATION	1.6803679032386883E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998771952149879	WITHOUT_CLASSIFICATION	1.2280478501218068E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998475904447616	WITHOUT_CLASSIFICATION	1.524095552384574E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998822435629838	WITHOUT_CLASSIFICATION	1.177564370161914E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999949065548521	WITHOUT_CLASSIFICATION	5.093445147908255E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999219829041386	WITHOUT_CLASSIFICATION	7.801709586132384E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999093853214585	WITHOUT_CLASSIFICATION	9.061467854152755E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999949065548521	WITHOUT_CLASSIFICATION	5.093445147908255E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999909541305749	WITHOUT_CLASSIFICATION	9.045869425091355E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999292819325871	WITHOUT_CLASSIFICATION	7.071806741286008E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998836133200528	WITHOUT_CLASSIFICATION	1.1638667994712665E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997919654503601	WITHOUT_CLASSIFICATION	2.080345496399737E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999249232539367	WITHOUT_CLASSIFICATION	7.507674606323528E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999369126631299	WITHOUT_CLASSIFICATION	6.30873368700822E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999786424063765	WITHOUT_CLASSIFICATION	2.1357593623447357E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998486396943275	WITHOUT_CLASSIFICATION	1.5136030567247278E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999985928096566	WITHOUT_CLASSIFICATION	1.4071903434155238E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999596866996807	WITHOUT_CLASSIFICATION	4.0313300319317746E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999162138524618	WITHOUT_CLASSIFICATION	8.378614753824306E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999763131598959	WITHOUT_CLASSIFICATION	2.3686840104105415E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998984405616546	WITHOUT_CLASSIFICATION	1.01559438345395E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999105597737339	WITHOUT_CLASSIFICATION	8.944022626609063E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999483947294815	WITHOUT_CLASSIFICATION	5.16052705185215E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892826523584	WITHOUT_CLASSIFICATION	1.0717347641631096E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999347181545798	WITHOUT_CLASSIFICATION	6.528184542022483E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999244034529723	WITHOUT_CLASSIFICATION	7.559654702770488E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999019985419837	WITHOUT_CLASSIFICATION	9.800145801631873E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986716833921	WITHOUT_CLASSIFICATION	1.328316607892828E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986716833921	WITHOUT_CLASSIFICATION	1.328316607892828E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850466208415	WITHOUT_CLASSIFICATION	1.4953379158499898E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850466208415	WITHOUT_CLASSIFICATION	1.4953379158499898E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853978959757	WITHOUT_CLASSIFICATION	1.4602104024258568E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999853978959757	WITHOUT_CLASSIFICATION	1.4602104024258568E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999174312468541	WITHOUT_CLASSIFICATION	8.256875314598561E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999264033222569	WITHOUT_CLASSIFICATION	7.359667774299674E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999782104897231	WITHOUT_CLASSIFICATION	2.1789510276811315E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999019985419837	WITHOUT_CLASSIFICATION	9.800145801631873E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986716833921	WITHOUT_CLASSIFICATION	1.328316607892828E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850466208415	WITHOUT_CLASSIFICATION	1.4953379158499898E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999891001666253	WITHOUT_CLASSIFICATION	1.0899833374702279E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997796409720147	WITHOUT_CLASSIFICATION	2.2035902798522584E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996862341157927	WITHOUT_CLASSIFICATION	3.137658842072956E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995756873553668	WITHOUT_CLASSIFICATION	4.2431264463318156E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999380050405332	WITHOUT_CLASSIFICATION	6.19949594667876E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999479877284141	WITHOUT_CLASSIFICATION	5.201227158597492E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999479877284141	WITHOUT_CLASSIFICATION	5.201227158597492E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999792144298559	WITHOUT_CLASSIFICATION	2.078557014406593E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998682691393849	WITHOUT_CLASSIFICATION	1.3173086061516804E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997793307596353	WITHOUT_CLASSIFICATION	2.2066924036468063E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998951369331658	WITHOUT_CLASSIFICATION	1.0486306683418633E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999212608273462	WITHOUT_CLASSIFICATION	7.873917265372379E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999864849464756	WITHOUT_CLASSIFICATION	1.3515053524390105E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999785773197528	WITHOUT_CLASSIFICATION	2.1422680247217515E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999792144298559	WITHOUT_CLASSIFICATION	2.078557014406593E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999103287750045	WITHOUT_CLASSIFICATION	8.967122499551327E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998787871131	WITHOUT_CLASSIFICATION	1.2121288689998785E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999773714674782	WITHOUT_CLASSIFICATION	2.262853252174939E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999901892773288	WITHOUT_CLASSIFICATION	9.810722671205871E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999930844734517	WITHOUT_CLASSIFICATION	6.915526548346082E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999426192716838	WITHOUT_CLASSIFICATION	5.7380728316290655E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999436314715423	WITHOUT_CLASSIFICATION	5.636852845775797E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999519860720885	WITHOUT_CLASSIFICATION	4.801392791152647E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999745862131991	WITHOUT_CLASSIFICATION	2.5413786800901404E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999784923766932	WITHOUT_CLASSIFICATION	2.150762330683329E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999436477754432	WITHOUT_CLASSIFICATION	5.6352224556819406E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998996196853496	WITHOUT_CLASSIFICATION	1.003803146504577E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999836960643022	WITHOUT_CLASSIFICATION	1.630393569782016E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871118781475	WITHOUT_CLASSIFICATION	1.2888121852468807E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999788296745188	WITHOUT_CLASSIFICATION	2.117032548123365E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999720417909198	WITHOUT_CLASSIFICATION	2.7958209080219042E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999583777602228	WITHOUT_CLASSIFICATION	4.162223977730011E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999426192716838	WITHOUT_CLASSIFICATION	5.7380728316290655E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999530219188264	WITHOUT_CLASSIFICATION	4.6978081173591845E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996421755380144	WITHOUT_CLASSIFICATION	3.5782446198566784E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998011233098366	WITHOUT_CLASSIFICATION	1.9887669016335616E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985888752253981	WITHOUT_CLASSIFICATION	0.0014111247746018591	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999999961275281	WITHOUT_CLASSIFICATION	3.8724719100283543E-8	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999585007123	WITHOUT_CLASSIFICATION	4.149928774327684E-8	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999998398658192	WITHOUT_CLASSIFICATION	1.6013418070648648E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999999950838461	WITHOUT_CLASSIFICATION	4.9161539025447565E-8	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999999645100338	WITHOUT_CLASSIFICATION	3.548996609680796E-8	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999999990859672	WITHOUT_CLASSIFICATION	9.140328153923772E-9	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999429163947	WITHOUT_CLASSIFICATION	5.708360533023132E-8	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999913951637	WITHOUT_CLASSIFICATION	8.604836367920094E-9	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999462606729	WITHOUT_CLASSIFICATION	5.373932710789743E-8	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999675801509	WITHOUT_CLASSIFICATION	3.24198490451653E-8	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999994722227693	WITHOUT_CLASSIFICATION	5.277772306113383E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999717929131	WITHOUT_CLASSIFICATION	2.8207086861234603E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999997632661171	WITHOUT_CLASSIFICATION	2.3673388294686415E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999450949578	WITHOUT_CLASSIFICATION	5.4905042098536555E-8	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999959546226904	WITHOUT_CLASSIFICATION	4.045377309642983E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.999999404495898	WITHOUT_CLASSIFICATION	5.955041020153139E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999872234587	WITHOUT_CLASSIFICATION	1.2776541246038663E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999581411178	WITHOUT_CLASSIFICATION	4.185888219378127E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999581411178	WITHOUT_CLASSIFICATION	4.185888219378127E-8	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999999350995473	WITHOUT_CLASSIFICATION	6.490045268988016E-8	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999998426628122	WITHOUT_CLASSIFICATION	1.5733718793517993E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999996111557	WITHOUT_CLASSIFICATION	3.888442927450602E-10	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999998782276013	WITHOUT_CLASSIFICATION	1.21772398811593E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999998782276013	WITHOUT_CLASSIFICATION	1.21772398811593E-7	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999774922774223	WITHOUT_CLASSIFICATION	2.2507722577726982E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.999988207171337	WITHOUT_CLASSIFICATION	1.179282866298446E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999992061825341	WITHOUT_CLASSIFICATION	7.938174659018678E-7	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.999990624452012	WITHOUT_CLASSIFICATION	9.375547988065988E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.969118629786814	WITHOUT_CLASSIFICATION	0.03088137021318603	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999596476624083	WITHOUT_CLASSIFICATION	4.0352337591648534E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994560416919	WITHOUT_CLASSIFICATION	5.439583081455038E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999999402279398	WITHOUT_CLASSIFICATION	5.977206021897168E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9976001006925976	WITHOUT_CLASSIFICATION	0.0023998993074023475	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999743874863322	WITHOUT_CLASSIFICATION	2.561251366790072E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9998923228161416	WITHOUT_CLASSIFICATION	1.0767718385837224E-4	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999934005576206	WITHOUT_CLASSIFICATION	6.599442379340759E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999955559807551	WITHOUT_CLASSIFICATION	4.4440192449472175E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999276870425394	WITHOUT_CLASSIFICATION	7.231295746054816E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999990747980695	WITHOUT_CLASSIFICATION	9.252019304491813E-7	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999996677564968	WITHOUT_CLASSIFICATION	3.3224350316707277E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9998251190356887	WITHOUT_CLASSIFICATION	1.7488096431135522E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9998685374789056	WITHOUT_CLASSIFICATION	1.3146252109444008E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999831466334469	WITHOUT_CLASSIFICATION	1.6853366553060412E-5	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999974424623638	WITHOUT_CLASSIFICATION	2.557537636310223E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999998033613813	WITHOUT_CLASSIFICATION	1.9663861878207048E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999922433458115	WITHOUT_CLASSIFICATION	7.756654188464493E-6	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999938275296768	WITHOUT_CLASSIFICATION	6.172470323227828E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999591206892267	WITHOUT_CLASSIFICATION	4.0879310773291635E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999915906271831	WITHOUT_CLASSIFICATION	8.40937281678613E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999985775744751	WITHOUT_CLASSIFICATION	1.422425525009185E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999987593828004	WITHOUT_CLASSIFICATION	1.2406171996718003E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999295081783582	WITHOUT_CLASSIFICATION	7.049182164169453E-5	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999942801699554	WITHOUT_CLASSIFICATION	5.719830044652874E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999999950999926	WITHOUT_CLASSIFICATION	4.9000074010131645E-8	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999999950999926	WITHOUT_CLASSIFICATION	4.9000074010131645E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999995776138254	WITHOUT_CLASSIFICATION	4.22386174511147E-7	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999997439903573	WITHOUT_CLASSIFICATION	2.5600964266476903E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999893293191	WITHOUT_CLASSIFICATION	1.0670680894124984E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9998332022001111	WITHOUT_CLASSIFICATION	1.6679779988899943E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999787825766617	WITHOUT_CLASSIFICATION	2.1217423338299393E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999912665585237	WITHOUT_CLASSIFICATION	8.733441476341293E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999624739056352	WITHOUT_CLASSIFICATION	3.7526094364918955E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999916148801068	WITHOUT_CLASSIFICATION	8.3851198932755E-6	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999995664924936	WITHOUT_CLASSIFICATION	4.3350750641224503E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999959162626337	WITHOUT_CLASSIFICATION	4.0837373661775624E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999959162626337	WITHOUT_CLASSIFICATION	4.0837373661775624E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9994687562948127	WITHOUT_CLASSIFICATION	5.312437051874419E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9994687562948127	WITHOUT_CLASSIFICATION	5.312437051874419E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999691514967511	WITHOUT_CLASSIFICATION	3.084850324891058E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999974885280504	WITHOUT_CLASSIFICATION	2.5114719496695243E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999995891926131	WITHOUT_CLASSIFICATION	4.1080738685314694E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999998391462956	WITHOUT_CLASSIFICATION	1.608537043580638E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999989152437565	WITHOUT_CLASSIFICATION	1.0847562434518624E-6	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999999824820575	WITHOUT_CLASSIFICATION	1.7517942576163752E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999990218828747	WITHOUT_CLASSIFICATION	9.781171252337222E-7	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999998706532724	WITHOUT_CLASSIFICATION	1.2934672755859177E-7	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999809175019982	WITHOUT_CLASSIFICATION	1.9082498001740138E-5	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999999653057021	WITHOUT_CLASSIFICATION	3.469429788211824E-8	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999891270243328	WITHOUT_CLASSIFICATION	1.0872975667127165E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999999579422677	WITHOUT_CLASSIFICATION	4.205773226497428E-8	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999951631967632	WITHOUT_CLASSIFICATION	4.836803236739078E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999997971249134	WITHOUT_CLASSIFICATION	2.0287508655308892E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999942571733	WITHOUT_CLASSIFICATION	5.742826589135248E-9	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999884228445862	WITHOUT_CLASSIFICATION	1.157715541370277E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999876976255906	WITHOUT_CLASSIFICATION	1.230237440938308E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999854039050982	WITHOUT_CLASSIFICATION	1.4596094901831684E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999983296000822	WITHOUT_CLASSIFICATION	1.6703999177239632E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999964464045519	WITHOUT_CLASSIFICATION	3.5535954482005183E-6	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.999908173386598	WITHOUT_CLASSIFICATION	9.182661340204968E-5	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9997770337736829	WITHOUT_CLASSIFICATION	2.2296622631714225E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999998286040803	WITHOUT_CLASSIFICATION	1.7139591970242246E-7	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999985967429891	WITHOUT_CLASSIFICATION	1.403257010987177E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999958607887	WITHOUT_CLASSIFICATION	4.139211267036781E-9	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999788073265858	WITHOUT_CLASSIFICATION	2.1192673414113436E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999988018368949	WITHOUT_CLASSIFICATION	1.1981631050736378E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999987314935868	WITHOUT_CLASSIFICATION	1.268506413249036E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999987314935868	WITHOUT_CLASSIFICATION	1.268506413249036E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999692971526506	WITHOUT_CLASSIFICATION	3.0702847349446216E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999101314417413	WITHOUT_CLASSIFICATION	8.986855825869284E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.999997793385957	WITHOUT_CLASSIFICATION	2.2066140430007077E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999936971062708	WITHOUT_CLASSIFICATION	6.302893729276125E-6	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999977324376624	WITHOUT_CLASSIFICATION	2.2675623376385847E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999895654539306	WITHOUT_CLASSIFICATION	1.0434546069416026E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999992688050177	WITHOUT_CLASSIFICATION	7.311949823417661E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999738482727546	WITHOUT_CLASSIFICATION	2.6151727245327853E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999788073265858	WITHOUT_CLASSIFICATION	2.1192673414113436E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.99997866496385	WITHOUT_CLASSIFICATION	2.1335036149944103E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999974454501107	WITHOUT_CLASSIFICATION	2.554549889247145E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999963623608592	WITHOUT_CLASSIFICATION	3.637639140848233E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999989242729392	WITHOUT_CLASSIFICATION	1.0757270608180676E-6	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.999998005084172	WITHOUT_CLASSIFICATION	1.9949158280918404E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999831290084044	WITHOUT_CLASSIFICATION	1.6870991595602754E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999790208669	WITHOUT_CLASSIFICATION	2.0979133093982208E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999714874527	WITHOUT_CLASSIFICATION	2.8512547405282365E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999946498395379	WITHOUT_CLASSIFICATION	5.350160462106155E-6	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999996443660183	WITHOUT_CLASSIFICATION	3.5563398170484074E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999684264067	WITHOUT_CLASSIFICATION	3.1573593235585235E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999822278389	WITHOUT_CLASSIFICATION	1.7772161072459692E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999913936657527	WITHOUT_CLASSIFICATION	8.606334247244017E-6	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.999999690964452	WITHOUT_CLASSIFICATION	3.0903554805073126E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999996508405304	WITHOUT_CLASSIFICATION	3.4915946951006976E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999969808715543	WITHOUT_CLASSIFICATION	3.0191284456486055E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999390161972141	WITHOUT_CLASSIFICATION	6.098380278581254E-5	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999996466710543	WITHOUT_CLASSIFICATION	3.533289456459587E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999960222899776	WITHOUT_CLASSIFICATION	3.977710022406826E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999930003386109	WITHOUT_CLASSIFICATION	6.9996613890824E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999629491829116	WITHOUT_CLASSIFICATION	3.7050817088318595E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999609613533743	WITHOUT_CLASSIFICATION	3.903864662576921E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999963692098182	WITHOUT_CLASSIFICATION	3.630790181773457E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.99997250439391	WITHOUT_CLASSIFICATION	2.749560608996931E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999929794823351	WITHOUT_CLASSIFICATION	7.020517664899169E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999790208669	WITHOUT_CLASSIFICATION	2.0979133093982208E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999996508405304	WITHOUT_CLASSIFICATION	3.4915946951006976E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999999201229743	WITHOUT_CLASSIFICATION	7.987702560443857E-8	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999486220539	WITHOUT_CLASSIFICATION	5.13779460707096E-8	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999929465646192	WITHOUT_CLASSIFICATION	7.053435380832359E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999988934230136	WITHOUT_CLASSIFICATION	1.1065769864194387E-6	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999865205331118	WITHOUT_CLASSIFICATION	1.3479466888127258E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999948744577729	WITHOUT_CLASSIFICATION	5.125542227043315E-6	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.999999971434252	WITHOUT_CLASSIFICATION	2.8565747952215346E-8	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999937749801077	WITHOUT_CLASSIFICATION	6.225019892387906E-6	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9955018184686127	WITHOUT_CLASSIFICATION	0.0044981815313873685	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999088165149923	WITHOUT_CLASSIFICATION	9.118348500764267E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999841053714014	WITHOUT_CLASSIFICATION	1.5894628598736693E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999841053714014	WITHOUT_CLASSIFICATION	1.5894628598736693E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999426224186303	WITHOUT_CLASSIFICATION	5.737758136959935E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9998735547611565	WITHOUT_CLASSIFICATION	1.264452388435636E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999963248347683	WITHOUT_CLASSIFICATION	3.6751652317543427E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999998663058338	WITHOUT_CLASSIFICATION	1.3369416607344768E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999719711757366	WITHOUT_CLASSIFICATION	2.8028824263446536E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9997372627401085	WITHOUT_CLASSIFICATION	2.6273725989141425E-4	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999956905609024	WITHOUT_CLASSIFICATION	4.3094390976701475E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999980399789774	WITHOUT_CLASSIFICATION	1.960021022547796E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999957650560053	WITHOUT_CLASSIFICATION	4.234943994788136E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999222980611	WITHOUT_CLASSIFICATION	7.77019388255182E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999601464577411	WITHOUT_CLASSIFICATION	3.98535422589955E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9994687562948127	WITHOUT_CLASSIFICATION	5.312437051874419E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999990218828747	WITHOUT_CLASSIFICATION	9.781171252337222E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999996508405304	WITHOUT_CLASSIFICATION	3.4915946951006976E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999719711757366	WITHOUT_CLASSIFICATION	2.8028824263446536E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9997372627401085	WITHOUT_CLASSIFICATION	2.6273725989141425E-4	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999963016924193	WITHOUT_CLASSIFICATION	3.698307580594219E-6	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999999391880717	WITHOUT_CLASSIFICATION	6.081192829421945E-8	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9998402132035995	WITHOUT_CLASSIFICATION	1.59786796400591E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.999888630267381	WITHOUT_CLASSIFICATION	1.1136973261907052E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999541584666167	WITHOUT_CLASSIFICATION	4.5841533383128E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999989153136292	WITHOUT_CLASSIFICATION	1.0846863707612584E-6	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9989207243430104	WITHOUT_CLASSIFICATION	0.0010792756569896155	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999998290749157	WITHOUT_CLASSIFICATION	1.709250843391933E-7	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999996378301774	WITHOUT_CLASSIFICATION	3.6216982255611547E-7	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999999482803001	WITHOUT_CLASSIFICATION	5.171969997858952E-8	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999564575343	WITHOUT_CLASSIFICATION	4.3542465740391426E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999997486593062	WITHOUT_CLASSIFICATION	2.5134069387048284E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9891650049723087	WITHOUT_CLASSIFICATION	0.010834995027691351	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999999890965146	WITHOUT_CLASSIFICATION	1.0903485550842818E-8	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9998668310017402	WITHOUT_CLASSIFICATION	1.3316899825973526E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999660268258	WITHOUT_CLASSIFICATION	3.397317410325846E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9891650049723087	WITHOUT_CLASSIFICATION	0.010834995027691351	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9891650049723087	WITHOUT_CLASSIFICATION	0.010834995027691351	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9891650049723087	WITHOUT_CLASSIFICATION	0.010834995027691351	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999907484844334	WITHOUT_CLASSIFICATION	9.251515566750435E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999987241341437	WITHOUT_CLASSIFICATION	1.2758658562813985E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999996502831474	WITHOUT_CLASSIFICATION	3.49716852586516E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999889537560972	WITHOUT_CLASSIFICATION	1.1046243902783816E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999979080463733	WITHOUT_CLASSIFICATION	2.091953626664923E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9995703709513905	WITHOUT_CLASSIFICATION	4.2962904860951843E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999943912044316	WITHOUT_CLASSIFICATION	5.608795568538637E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.999998307976484	WITHOUT_CLASSIFICATION	1.6920235159817719E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999987063422614	WITHOUT_CLASSIFICATION	1.2936577386502212E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999930354373469	WITHOUT_CLASSIFICATION	6.964562653095891E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999988243310177	WITHOUT_CLASSIFICATION	1.1756689822602009E-6	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999762067865713	WITHOUT_CLASSIFICATION	2.3793213428728823E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999994792063226	WITHOUT_CLASSIFICATION	5.207936773975436E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999999581411178	WITHOUT_CLASSIFICATION	4.185888219378127E-8	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999912227173081	WITHOUT_CLASSIFICATION	8.777282691873214E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9993349151844138	WITHOUT_CLASSIFICATION	6.650848155863315E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999967834915865	WITHOUT_CLASSIFICATION	3.216508413428314E-6	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999875050338682	WITHOUT_CLASSIFICATION	1.2494966131794839E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998234655937	WITHOUT_CLASSIFICATION	1.7653440635118185E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998234655937	WITHOUT_CLASSIFICATION	1.7653440635118185E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997484383111	WITHOUT_CLASSIFICATION	2.515616889626321E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989638749088	WITHOUT_CLASSIFICATION	1.0361250911916084E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997484383111	WITHOUT_CLASSIFICATION	2.515616889626321E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997247128835	WITHOUT_CLASSIFICATION	2.7528711655051985E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999991126301438	WITHOUT_CLASSIFICATION	8.873698562443911E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999995056995342	WITHOUT_CLASSIFICATION	4.94300465776221E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998447358425	WITHOUT_CLASSIFICATION	1.5526415763865548E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998447358425	WITHOUT_CLASSIFICATION	1.5526415763865548E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998005611906	WITHOUT_CLASSIFICATION	1.994388094046856E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998005611906	WITHOUT_CLASSIFICATION	1.994388094046856E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996418913331	WITHOUT_CLASSIFICATION	3.581086669318493E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996418913331	WITHOUT_CLASSIFICATION	3.581086669318493E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999997736711925	WITHOUT_CLASSIFICATION	2.263288074586962E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999999716885095	WITHOUT_CLASSIFICATION	2.831149043538187E-8	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999940693255196	WITHOUT_CLASSIFICATION	5.930674480371775E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999996021070732	WITHOUT_CLASSIFICATION	3.9789292686134796E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999627267671284	WITHOUT_CLASSIFICATION	3.727323287167741E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999980341773655	WITHOUT_CLASSIFICATION	1.9658226344410903E-6	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.99999858038254	WITHOUT_CLASSIFICATION	1.4196174600097965E-6	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9998986565488398	WITHOUT_CLASSIFICATION	1.0134345116022728E-4	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999987479205164	WITHOUT_CLASSIFICATION	1.2520794835613788E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9981307834497425	WITHOUT_CLASSIFICATION	0.0018692165502575606	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999976770775	WITHOUT_CLASSIFICATION	2.322922597944911E-9	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999336707546941	WITHOUT_CLASSIFICATION	6.632924530589675E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999983973941796	WITHOUT_CLASSIFICATION	1.6026058202767117E-6	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.999999412638481	WITHOUT_CLASSIFICATION	5.873615189910178E-7	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999991801445838	WITHOUT_CLASSIFICATION	8.198554161416826E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999975076571378	WITHOUT_CLASSIFICATION	2.4923428622485615E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999988694942563	WITHOUT_CLASSIFICATION	1.1305057436876446E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999997837747873	WITHOUT_CLASSIFICATION	2.1622521276625183E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999975581378729	WITHOUT_CLASSIFICATION	2.441862127009581E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999989713856848	WITHOUT_CLASSIFICATION	1.028614315228367E-6	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999969577094391	WITHOUT_CLASSIFICATION	3.042290560994874E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999990369208651	WITHOUT_CLASSIFICATION	9.630791349398767E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9879319358447605	WITHOUT_CLASSIFICATION	0.012068064155239507	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9879319358447605	WITHOUT_CLASSIFICATION	0.012068064155239507	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9946872360918259	WITHOUT_CLASSIFICATION	0.005312763908174206	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9946872360918259	WITHOUT_CLASSIFICATION	0.005312763908174206	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998090293704	WITHOUT_CLASSIFICATION	1.9097062957143003E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999738957057195	WITHOUT_CLASSIFICATION	2.6104294280565092E-5	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999689567699	WITHOUT_CLASSIFICATION	3.1043230002951204E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999997139570281	WITHOUT_CLASSIFICATION	2.8604297189352025E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999960358255814	WITHOUT_CLASSIFICATION	3.964174418613845E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999852344665816	WITHOUT_CLASSIFICATION	1.4765533418462482E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999999160773493	WITHOUT_CLASSIFICATION	8.392265074513212E-8	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9967227886406844	WITHOUT_CLASSIFICATION	0.0032772113593154887	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999984161386072	WITHOUT_CLASSIFICATION	1.583861392823585E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999898848072832	WITHOUT_CLASSIFICATION	1.0115192716704883E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999998184192811	WITHOUT_CLASSIFICATION	1.8158071901010646E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999986605569227	WITHOUT_CLASSIFICATION	1.339443077273869E-6	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999998089668586	WITHOUT_CLASSIFICATION	1.9103314151991644E-7	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999992072972	WITHOUT_CLASSIFICATION	7.927027570084301E-10	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999986964020962	WITHOUT_CLASSIFICATION	1.3035979039044828E-6	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999992806708146	WITHOUT_CLASSIFICATION	7.193291854468785E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999855149391	WITHOUT_CLASSIFICATION	1.4485060982735343E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999921578164959	WITHOUT_CLASSIFICATION	7.842183504254163E-6	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999976733358565	WITHOUT_CLASSIFICATION	2.326664143475108E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9996585154123123	WITHOUT_CLASSIFICATION	3.414845876876538E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999881173851	WITHOUT_CLASSIFICATION	1.1882614994578097E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999995958967505	WITHOUT_CLASSIFICATION	4.0410324947105266E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.999999405652566	WITHOUT_CLASSIFICATION	5.943474340312624E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9994759486961303	WITHOUT_CLASSIFICATION	5.240513038697322E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999997589975187	WITHOUT_CLASSIFICATION	2.410024813397685E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.999987933812961	WITHOUT_CLASSIFICATION	1.2066187038931839E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999853378414107	WITHOUT_CLASSIFICATION	1.4662158589318142E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999188575704441	WITHOUT_CLASSIFICATION	8.114242955589666E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999999347036684	WITHOUT_CLASSIFICATION	6.529633152920621E-8	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.999595611149398	WITHOUT_CLASSIFICATION	4.043888506019718E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999984697333288	WITHOUT_CLASSIFICATION	1.5302666711866087E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998524007344	WITHOUT_CLASSIFICATION	1.4759926559618118E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999998782276013	WITHOUT_CLASSIFICATION	1.21772398811593E-7	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.999985248213961	WITHOUT_CLASSIFICATION	1.4751786039012208E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.999999987168706	WITHOUT_CLASSIFICATION	1.2831294049212274E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999486898675378	WITHOUT_CLASSIFICATION	5.131013246214612E-5	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999949906356161	WITHOUT_CLASSIFICATION	5.00936438386765E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999997244137667	WITHOUT_CLASSIFICATION	2.7558623325334924E-7	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9998712268586495	WITHOUT_CLASSIFICATION	1.2877314135054633E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999457517413	WITHOUT_CLASSIFICATION	5.42482587285077E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999921015822	WITHOUT_CLASSIFICATION	7.89841790949765E-9	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999993953188022	WITHOUT_CLASSIFICATION	6.046811977832056E-7	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999990217863497	WITHOUT_CLASSIFICATION	9.782136503303358E-7	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999978393283127	WITHOUT_CLASSIFICATION	2.1606716873162654E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999979880734502	WITHOUT_CLASSIFICATION	2.0119265498462408E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999960046558966	WITHOUT_CLASSIFICATION	3.995344103465331E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999870794502603	WITHOUT_CLASSIFICATION	1.2920549739688992E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999933442011256	WITHOUT_CLASSIFICATION	6.655798874286635E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999998050168141	WITHOUT_CLASSIFICATION	1.9498318587262467E-7	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.999997280057475	WITHOUT_CLASSIFICATION	2.719942524976784E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999981601704926	WITHOUT_CLASSIFICATION	1.8398295073856684E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993649752	WITHOUT_CLASSIFICATION	6.350248390090744E-10	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999569733060281	WITHOUT_CLASSIFICATION	4.302669397198237E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9907360255219624	WITHOUT_CLASSIFICATION	0.00926397447803772	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.999999747167058	WITHOUT_CLASSIFICATION	2.528329420723018E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999999703971891	WITHOUT_CLASSIFICATION	2.9602810941658313E-8	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.7049490420381209	DEFECT	0.295050957961879	WITHOUT_CLASSIFICATION
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9982095868014446	WITHOUT_CLASSIFICATION	0.0017904131985554776	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999947309050605	WITHOUT_CLASSIFICATION	5.269094939476318E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.999999972532508	WITHOUT_CLASSIFICATION	2.7467491998476484E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999998742367626	WITHOUT_CLASSIFICATION	1.257632373343844E-7	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999996456881137	WITHOUT_CLASSIFICATION	3.543118862674454E-7	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999991795566223	WITHOUT_CLASSIFICATION	8.204433776469102E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999997988231323	WITHOUT_CLASSIFICATION	2.011768676928934E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999102113861891	WITHOUT_CLASSIFICATION	8.978861381089584E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999821406208	WITHOUT_CLASSIFICATION	1.785937920583171E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999498492188	WITHOUT_CLASSIFICATION	5.015078119000947E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999678100604429	WITHOUT_CLASSIFICATION	3.218993955705657E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999984870624877	WITHOUT_CLASSIFICATION	1.5129375122925665E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999994575069742	WITHOUT_CLASSIFICATION	5.424930259372695E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999999327738212	WITHOUT_CLASSIFICATION	6.722617880553426E-8	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999830229461395	WITHOUT_CLASSIFICATION	1.6977053860589322E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999999742148412	WITHOUT_CLASSIFICATION	2.5785158799261844E-8	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.999999953681081	WITHOUT_CLASSIFICATION	4.63189190445766E-8	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999999314522932	WITHOUT_CLASSIFICATION	6.854770684392776E-8	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999997941186906	WITHOUT_CLASSIFICATION	2.0588130952647317E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999869080117577	WITHOUT_CLASSIFICATION	1.3091988242308835E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999997744831616	WITHOUT_CLASSIFICATION	2.2551683848735554E-7	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999997679297854	WITHOUT_CLASSIFICATION	2.3207021459994065E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999830605671179	WITHOUT_CLASSIFICATION	1.693943288204416E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999999205203801	WITHOUT_CLASSIFICATION	7.947961992181875E-8	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.999231445028595	WITHOUT_CLASSIFICATION	7.685549714049233E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999995184117116	WITHOUT_CLASSIFICATION	4.815882883418274E-7	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999955832456475	WITHOUT_CLASSIFICATION	4.416754352457892E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999996132217502	WITHOUT_CLASSIFICATION	3.867782498282867E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999995224152384	WITHOUT_CLASSIFICATION	4.775847616586005E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.99999998741493	WITHOUT_CLASSIFICATION	1.2585069984908016E-8	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.999999373716211	WITHOUT_CLASSIFICATION	6.262837890611079E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.999999373716211	WITHOUT_CLASSIFICATION	6.262837890611079E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999999958679	WITHOUT_CLASSIFICATION	4.13212879705023E-12	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999987093403663	WITHOUT_CLASSIFICATION	1.2906596337203592E-6	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999999034673992	WITHOUT_CLASSIFICATION	9.653260075087429E-8	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999999455711263	WITHOUT_CLASSIFICATION	5.4428873671966675E-8	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999998664131557	WITHOUT_CLASSIFICATION	1.335868443678249E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999825309418405	WITHOUT_CLASSIFICATION	1.7469058159467373E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999739482712	WITHOUT_CLASSIFICATION	2.605172876605961E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999999756274801	WITHOUT_CLASSIFICATION	2.4372519865089607E-8	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999693020357	WITHOUT_CLASSIFICATION	3.069796423605045E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999958752742619	WITHOUT_CLASSIFICATION	4.1247257380249185E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999255501545	WITHOUT_CLASSIFICATION	7.444984552708105E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9986456546368911	WITHOUT_CLASSIFICATION	0.0013543453631088011	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.999998749538009	WITHOUT_CLASSIFICATION	1.250461990922244E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999962502885702	WITHOUT_CLASSIFICATION	3.7497114298785084E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.999999957586524	WITHOUT_CLASSIFICATION	4.2413475918756024E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9970174523031606	WITHOUT_CLASSIFICATION	0.0029825476968393144	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999972423400193	WITHOUT_CLASSIFICATION	2.757659980732536E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999990940551	WITHOUT_CLASSIFICATION	9.059448999824609E-10	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999922433649915	WITHOUT_CLASSIFICATION	7.756635008471055E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9994006409861033	WITHOUT_CLASSIFICATION	5.993590138968275E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999998595285913	WITHOUT_CLASSIFICATION	1.4047140862321197E-7	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999975403806256	WITHOUT_CLASSIFICATION	2.4596193744458907E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999146947701	WITHOUT_CLASSIFICATION	8.530522991962471E-8	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999300206649	WITHOUT_CLASSIFICATION	6.997933506269373E-8	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999999430054906	WITHOUT_CLASSIFICATION	5.6994509357353566E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999992243557209	WITHOUT_CLASSIFICATION	7.756442790946207E-7	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999963760777955	WITHOUT_CLASSIFICATION	3.623922204595211E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999806156012427	WITHOUT_CLASSIFICATION	1.938439875724041E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.999993012722076	WITHOUT_CLASSIFICATION	6.987277924092126E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999979226512357	WITHOUT_CLASSIFICATION	2.077348764347415E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9993346059854255	WITHOUT_CLASSIFICATION	6.653940145745375E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999993330393339	WITHOUT_CLASSIFICATION	6.66960666144867E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999960039502005	WITHOUT_CLASSIFICATION	3.996049799519666E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999915037786293	WITHOUT_CLASSIFICATION	8.496221370657797E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999910834088	WITHOUT_CLASSIFICATION	8.916591284062711E-9	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999998036783461	WITHOUT_CLASSIFICATION	1.963216540615487E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.999999471067958	WITHOUT_CLASSIFICATION	5.289320419999866E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999992435188	WITHOUT_CLASSIFICATION	7.564812128780904E-10	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999999373122933	WITHOUT_CLASSIFICATION	6.26877066469065E-8	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999980594651826	WITHOUT_CLASSIFICATION	1.940534817448727E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999966020027893	WITHOUT_CLASSIFICATION	3.397997210778407E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999889507672509	WITHOUT_CLASSIFICATION	1.104923274908659E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999965160896883	WITHOUT_CLASSIFICATION	3.48391031164246E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998234655937	WITHOUT_CLASSIFICATION	1.7653440635118185E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998234655937	WITHOUT_CLASSIFICATION	1.7653440635118185E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997484383111	WITHOUT_CLASSIFICATION	2.515616889626321E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997484383111	WITHOUT_CLASSIFICATION	2.515616889626321E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999995927951835	WITHOUT_CLASSIFICATION	4.07204816446551E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999905147552636	WITHOUT_CLASSIFICATION	9.485244736313234E-6	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999997755479852	WITHOUT_CLASSIFICATION	2.2445201475541948E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999976320522184	WITHOUT_CLASSIFICATION	2.3679477816710464E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999931866356027	WITHOUT_CLASSIFICATION	6.8133643973975085E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999998960917061	WITHOUT_CLASSIFICATION	1.0390829382267075E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999999887819387	WITHOUT_CLASSIFICATION	1.1218061262942492E-8	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999999480126476	WITHOUT_CLASSIFICATION	5.1987352480595344E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999932481162255	WITHOUT_CLASSIFICATION	6.75188377452982E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999932481162255	WITHOUT_CLASSIFICATION	6.75188377452982E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999951452451235	WITHOUT_CLASSIFICATION	4.854754876566813E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999951452451235	WITHOUT_CLASSIFICATION	4.854754876566813E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999660268258	WITHOUT_CLASSIFICATION	3.397317410325846E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999991126301438	WITHOUT_CLASSIFICATION	8.873698562443911E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997247128835	WITHOUT_CLASSIFICATION	2.7528711655051985E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999995056995342	WITHOUT_CLASSIFICATION	4.94300465776221E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998447358425	WITHOUT_CLASSIFICATION	1.5526415763865548E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998447358425	WITHOUT_CLASSIFICATION	1.5526415763865548E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998005611906	WITHOUT_CLASSIFICATION	1.994388094046856E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998005611906	WITHOUT_CLASSIFICATION	1.994388094046856E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996418913331	WITHOUT_CLASSIFICATION	3.581086669318493E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996418913331	WITHOUT_CLASSIFICATION	3.581086669318493E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999867306613904	WITHOUT_CLASSIFICATION	1.326933860955836E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.99999980505319	WITHOUT_CLASSIFICATION	1.9494681013861454E-7	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999669674092281	WITHOUT_CLASSIFICATION	3.303259077202486E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9998813446261844	WITHOUT_CLASSIFICATION	1.186553738155994E-4	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.999998084766583	WITHOUT_CLASSIFICATION	1.915233416990693E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999999022941374	WITHOUT_CLASSIFICATION	9.770586260088489E-8	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999997787599327	WITHOUT_CLASSIFICATION	2.2124006719120807E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999994763498472	WITHOUT_CLASSIFICATION	5.23650152742076E-7	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999995305921617	WITHOUT_CLASSIFICATION	4.6940783832073624E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999982239319201	WITHOUT_CLASSIFICATION	1.7760680799826698E-6	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.999999974743043	WITHOUT_CLASSIFICATION	2.525695701875322E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.999986586787931	WITHOUT_CLASSIFICATION	1.341321206902822E-5	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999950884382552	WITHOUT_CLASSIFICATION	4.911561744698556E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999999166493292	WITHOUT_CLASSIFICATION	8.335067074880457E-8	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999999637024363	WITHOUT_CLASSIFICATION	3.629756375066963E-8	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999251838081169	WITHOUT_CLASSIFICATION	7.481619188308036E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999443428133757	WITHOUT_CLASSIFICATION	5.565718662436046E-5	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999998381460422	WITHOUT_CLASSIFICATION	1.6185395782488064E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999998784113	WITHOUT_CLASSIFICATION	1.2158868710502564E-10	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999994362694071	WITHOUT_CLASSIFICATION	5.637305928605781E-7	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999975068293784	WITHOUT_CLASSIFICATION	2.4931706216181864E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999963008015822	WITHOUT_CLASSIFICATION	3.699198417856409E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999976428763176	WITHOUT_CLASSIFICATION	2.357123682328577E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999986166514927	WITHOUT_CLASSIFICATION	1.3833485072173055E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999461870509028	WITHOUT_CLASSIFICATION	5.38129490971412E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.999999986886652	WITHOUT_CLASSIFICATION	1.3113347965297356E-8	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999144020607037	WITHOUT_CLASSIFICATION	8.559793929632086E-5	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9997901747729563	WITHOUT_CLASSIFICATION	2.0982522704360754E-4	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9977436065385662	WITHOUT_CLASSIFICATION	0.0022563934614338536	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.999950212492998	WITHOUT_CLASSIFICATION	4.978750700200506E-5	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999811086032	WITHOUT_CLASSIFICATION	1.8891396731384886E-8	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999999411066793	WITHOUT_CLASSIFICATION	5.889332074485218E-8	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999943077472656	WITHOUT_CLASSIFICATION	5.692252734430794E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.999999429085694	WITHOUT_CLASSIFICATION	5.709143060517926E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999812092557906	WITHOUT_CLASSIFICATION	1.879074420938749E-5	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999878026591	WITHOUT_CLASSIFICATION	1.2197340867415865E-8	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999998771118386	WITHOUT_CLASSIFICATION	1.228881614602576E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999115813065	WITHOUT_CLASSIFICATION	8.841869343125794E-8	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999958545487	WITHOUT_CLASSIFICATION	4.145451311606402E-9	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999988353632355	WITHOUT_CLASSIFICATION	1.1646367644657932E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999797908609386	WITHOUT_CLASSIFICATION	2.0209139061382773E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999998801797807	WITHOUT_CLASSIFICATION	1.1982021932639922E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999889881929	WITHOUT_CLASSIFICATION	1.1011807160491426E-8	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999995242933883	WITHOUT_CLASSIFICATION	4.7570661177415715E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999973162876	WITHOUT_CLASSIFICATION	2.683712313883135E-9	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999996027512245	WITHOUT_CLASSIFICATION	3.972487756503282E-7	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9901387515208532	WITHOUT_CLASSIFICATION	0.009861248479146843	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.999998396300217	WITHOUT_CLASSIFICATION	1.6036997829854244E-6	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999971298088529	WITHOUT_CLASSIFICATION	2.87019114712257E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999996645917311	WITHOUT_CLASSIFICATION	3.3540826900425335E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999999502548169	WITHOUT_CLASSIFICATION	4.9745183174129495E-8	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999995408934713	WITHOUT_CLASSIFICATION	4.5910652862340666E-7	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9998365252946635	WITHOUT_CLASSIFICATION	1.6347470533661703E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9991227387934815	WITHOUT_CLASSIFICATION	8.772612065185258E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9992998481927937	WITHOUT_CLASSIFICATION	7.00151807206172E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999886351966	WITHOUT_CLASSIFICATION	1.1364803503267821E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9989886124421185	WITHOUT_CLASSIFICATION	0.001011387557881463	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999984546909455	WITHOUT_CLASSIFICATION	1.5453090544470338E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999922048868	WITHOUT_CLASSIFICATION	7.795113169696077E-9	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999999519444882	WITHOUT_CLASSIFICATION	4.8055511752836594E-8	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999991210635517	WITHOUT_CLASSIFICATION	8.789364483882931E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999998597142	WITHOUT_CLASSIFICATION	1.402858476143111E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999460573479	WITHOUT_CLASSIFICATION	5.394265204757407E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999991635236234	WITHOUT_CLASSIFICATION	8.364763765405685E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999972297647866	WITHOUT_CLASSIFICATION	2.770235213558297E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999238133118262	WITHOUT_CLASSIFICATION	7.618668817379734E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999596375402	WITHOUT_CLASSIFICATION	4.0362459906520056E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999976721297666	WITHOUT_CLASSIFICATION	2.3278702333953934E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999934520128843	WITHOUT_CLASSIFICATION	6.547987115663891E-6	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999997901193057	WITHOUT_CLASSIFICATION	2.0988069426084464E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999999545267	WITHOUT_CLASSIFICATION	4.5473310505643524E-11	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999962478316207	WITHOUT_CLASSIFICATION	3.7521683792840987E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999999131434737	WITHOUT_CLASSIFICATION	8.685652631387057E-8	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999859766363	WITHOUT_CLASSIFICATION	1.4023363652113576E-8	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999950829141174	WITHOUT_CLASSIFICATION	4.917085882643488E-6	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999998765181863	WITHOUT_CLASSIFICATION	1.234818135513319E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999978641571172	WITHOUT_CLASSIFICATION	2.135842882710974E-6	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9969563993484201	WITHOUT_CLASSIFICATION	0.0030436006515799563	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999991334613654	WITHOUT_CLASSIFICATION	8.665386346152285E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999940348500228	WITHOUT_CLASSIFICATION	5.9651499772854766E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999992696346379	WITHOUT_CLASSIFICATION	7.303653620987458E-7	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999998876	WITHOUT_CLASSIFICATION	1.1231713790962178E-13	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9999246916589191	WITHOUT_CLASSIFICATION	7.530834108097799E-5	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999999811212165	WITHOUT_CLASSIFICATION	1.887878356071908E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999099174561	WITHOUT_CLASSIFICATION	9.008254381892155E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.999931531515632	WITHOUT_CLASSIFICATION	6.846848436796017E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999765900265255	WITHOUT_CLASSIFICATION	2.3409973474550108E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999994379148651	WITHOUT_CLASSIFICATION	5.620851349438277E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.999986154961437	WITHOUT_CLASSIFICATION	1.384503856301307E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999992283027	WITHOUT_CLASSIFICATION	7.716973822809529E-10	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999946967760571	WITHOUT_CLASSIFICATION	5.30322394285603E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9997193020918084	WITHOUT_CLASSIFICATION	2.8069790819168435E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.999997181145093	WITHOUT_CLASSIFICATION	2.8188549071401075E-6	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999988889582413	WITHOUT_CLASSIFICATION	1.111041758718372E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999987541763534	WITHOUT_CLASSIFICATION	1.245823646579212E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999989487689697	WITHOUT_CLASSIFICATION	1.051231030342448E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999993023845583	WITHOUT_CLASSIFICATION	6.976154418160361E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999986651282865	WITHOUT_CLASSIFICATION	1.3348717135424356E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999982071166342	WITHOUT_CLASSIFICATION	1.792883365797002E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999982071166342	WITHOUT_CLASSIFICATION	1.792883365797002E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999992203377933	WITHOUT_CLASSIFICATION	7.796622067493186E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999998052508108	WITHOUT_CLASSIFICATION	1.9474918922078056E-7	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999997294237398	WITHOUT_CLASSIFICATION	2.7057626010231334E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999999137430825	WITHOUT_CLASSIFICATION	8.625691743369559E-8	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999998845848894	WITHOUT_CLASSIFICATION	1.154151105823523E-7	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.999999776775517	WITHOUT_CLASSIFICATION	2.2322448300100688E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999996294351868	WITHOUT_CLASSIFICATION	3.705648131359917E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999986452107559	WITHOUT_CLASSIFICATION	1.35478924413855E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999968189875397	WITHOUT_CLASSIFICATION	3.181012460217914E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999998780527471	WITHOUT_CLASSIFICATION	1.2194725274447538E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999999749813896	WITHOUT_CLASSIFICATION	2.5018610403551486E-8	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999998658367	WITHOUT_CLASSIFICATION	1.3416343284810184E-10	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999940861388843	WITHOUT_CLASSIFICATION	5.913861115610525E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999989804311996	WITHOUT_CLASSIFICATION	1.0195688003927144E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999996410335859	WITHOUT_CLASSIFICATION	3.5896641409985376E-7	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999995442494993	WITHOUT_CLASSIFICATION	4.557505006124116E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999994990742946	WITHOUT_CLASSIFICATION	5.009257054540451E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.999985980807096	WITHOUT_CLASSIFICATION	1.4019192903979954E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999999058533248	WITHOUT_CLASSIFICATION	9.414667520854932E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.999999111015689	WITHOUT_CLASSIFICATION	8.889843109940748E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999998008214444	WITHOUT_CLASSIFICATION	1.9917855566418555E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999898202994351	WITHOUT_CLASSIFICATION	1.0179700564899358E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999984940158403	WITHOUT_CLASSIFICATION	1.5059841597376093E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999409731186	WITHOUT_CLASSIFICATION	5.902688133352695E-8	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999992705911313	WITHOUT_CLASSIFICATION	7.294088687890995E-7	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999622119131	WITHOUT_CLASSIFICATION	3.778808693339077E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999992406814737	WITHOUT_CLASSIFICATION	7.593185263150748E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999988387358526	WITHOUT_CLASSIFICATION	1.1612641474823688E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999994795062581	WITHOUT_CLASSIFICATION	5.204937419739647E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999997503902186	WITHOUT_CLASSIFICATION	2.4960978145540903E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999972785147407	WITHOUT_CLASSIFICATION	2.7214852593330492E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999994328272119	WITHOUT_CLASSIFICATION	5.671727879885075E-7	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999863034705133	WITHOUT_CLASSIFICATION	1.3696529486624576E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999956584158668	WITHOUT_CLASSIFICATION	4.341584133160771E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.99999278267623	WITHOUT_CLASSIFICATION	7.217323770055783E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999946128626755	WITHOUT_CLASSIFICATION	5.387137324379002E-6	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999886078028464	WITHOUT_CLASSIFICATION	1.1392197153544001E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999994795062581	WITHOUT_CLASSIFICATION	5.204937419739647E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999997068735037	WITHOUT_CLASSIFICATION	2.9312649631585454E-7	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999989391216308	WITHOUT_CLASSIFICATION	1.0608783691990592E-6	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999990920035815	WITHOUT_CLASSIFICATION	9.079964183968257E-7	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999279909035851	WITHOUT_CLASSIFICATION	7.200909641492376E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999969367270033	WITHOUT_CLASSIFICATION	3.0632729966344805E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999968669820024	WITHOUT_CLASSIFICATION	3.133017997500206E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999981173468081	WITHOUT_CLASSIFICATION	1.8826531918559322E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999899195609898	WITHOUT_CLASSIFICATION	1.0080439010206113E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999971309771719	WITHOUT_CLASSIFICATION	2.8690228280631008E-6	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999995899598498	WITHOUT_CLASSIFICATION	4.100401501540626E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999960040439498	WITHOUT_CLASSIFICATION	3.9959560501596555E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999995356946383	WITHOUT_CLASSIFICATION	4.643053616915673E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.999999062687896	WITHOUT_CLASSIFICATION	9.373121040692342E-7	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.999982834315674	WITHOUT_CLASSIFICATION	1.7165684326022758E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999991398692893	WITHOUT_CLASSIFICATION	8.601307106974154E-7	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.999875629059327	WITHOUT_CLASSIFICATION	1.2437094067301022E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.999875629059327	WITHOUT_CLASSIFICATION	1.2437094067301022E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9995873535233996	WITHOUT_CLASSIFICATION	4.1264647660042126E-4	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9998642756499423	WITHOUT_CLASSIFICATION	1.3572435005775429E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999946903936647	WITHOUT_CLASSIFICATION	5.3096063352854134E-6	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999608438019694	WITHOUT_CLASSIFICATION	3.91561980305501E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999992696407	WITHOUT_CLASSIFICATION	7.303593617560817E-10	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999996210150607	WITHOUT_CLASSIFICATION	3.789849392601095E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999989079084018	WITHOUT_CLASSIFICATION	1.092091598175493E-6	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999955659049361	WITHOUT_CLASSIFICATION	4.434095063915745E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999364575193672	WITHOUT_CLASSIFICATION	6.354248063278086E-5	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999992002035254	WITHOUT_CLASSIFICATION	7.997964745982086E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.999999469601383	WITHOUT_CLASSIFICATION	5.303986171265589E-7	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9998592799823413	WITHOUT_CLASSIFICATION	1.4072001765879461E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.999999999967277	WITHOUT_CLASSIFICATION	3.2722998942670364E-11	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989638749088	WITHOUT_CLASSIFICATION	1.0361250911916084E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989638749088	WITHOUT_CLASSIFICATION	1.0361250911916084E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999946903936647	WITHOUT_CLASSIFICATION	5.3096063352854134E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.999999469601383	WITHOUT_CLASSIFICATION	5.303986171265589E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999915484846729	WITHOUT_CLASSIFICATION	8.451515327128124E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999031693585343	WITHOUT_CLASSIFICATION	9.683064146579646E-5	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9989954818426271	WITHOUT_CLASSIFICATION	0.0010045181573728724	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999671695552899	WITHOUT_CLASSIFICATION	3.2830444710125206E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9995148191392771	WITHOUT_CLASSIFICATION	4.8518086072288775E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999944945853851	WITHOUT_CLASSIFICATION	5.505414614912053E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9997281825844246	WITHOUT_CLASSIFICATION	2.718174155754148E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999309867683	WITHOUT_CLASSIFICATION	6.90132317082268E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999972107241	WITHOUT_CLASSIFICATION	2.789275898474506E-9	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999994204760352	WITHOUT_CLASSIFICATION	5.795239648149333E-7	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999232589763706	WITHOUT_CLASSIFICATION	7.674102362944188E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9998818708752109	WITHOUT_CLASSIFICATION	1.1812912478921305E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999997282514985	WITHOUT_CLASSIFICATION	2.717485014834594E-7	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999965247248748	WITHOUT_CLASSIFICATION	3.475275125114035E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999991223937692	WITHOUT_CLASSIFICATION	8.776062306793913E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999976504773976	WITHOUT_CLASSIFICATION	2.3495226023841156E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.999997765122516	WITHOUT_CLASSIFICATION	2.2348774839412943E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.999999758483998	WITHOUT_CLASSIFICATION	2.415160019845419E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999993790047271	WITHOUT_CLASSIFICATION	6.209952727910835E-7	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999999916577375	WITHOUT_CLASSIFICATION	8.342262609242872E-9	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9973369073693121	WITHOUT_CLASSIFICATION	0.002663092630687975	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999988432155693	WITHOUT_CLASSIFICATION	1.1567844307134833E-6	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9919600503133618	WITHOUT_CLASSIFICATION	0.008039949686638206	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999941481471927	WITHOUT_CLASSIFICATION	5.851852807371865E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999998442477	WITHOUT_CLASSIFICATION	1.5575236644422904E-10	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999655080598	WITHOUT_CLASSIFICATION	3.4491940122519964E-8	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999992895983707	WITHOUT_CLASSIFICATION	7.104016292542161E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999745306508173	WITHOUT_CLASSIFICATION	2.54693491826976E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999999939495425	WITHOUT_CLASSIFICATION	6.05045750312923E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999997106070214	WITHOUT_CLASSIFICATION	2.893929786342609E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9993941371542671	WITHOUT_CLASSIFICATION	6.058628457328652E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999986773184407	WITHOUT_CLASSIFICATION	1.32268155925972E-6	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999842852016	WITHOUT_CLASSIFICATION	1.5714798278326818E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999936852203	WITHOUT_CLASSIFICATION	6.3147796569779086E-9	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999983743605	WITHOUT_CLASSIFICATION	1.6256395203966109E-9	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999837039193994	WITHOUT_CLASSIFICATION	1.62960806007032E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999705219713	WITHOUT_CLASSIFICATION	2.9478028669453066E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999930399464	WITHOUT_CLASSIFICATION	6.9600537009055135E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999999728396375	WITHOUT_CLASSIFICATION	2.7160362504404165E-8	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999999932835905	WITHOUT_CLASSIFICATION	6.716409515397136E-9	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999999361923824	WITHOUT_CLASSIFICATION	6.380761763991086E-8	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999717749501	WITHOUT_CLASSIFICATION	2.822504988589793E-8	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999992402909699	WITHOUT_CLASSIFICATION	7.597090301623539E-7	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999939441272	WITHOUT_CLASSIFICATION	6.0558727245891776E-9	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999937502869622	WITHOUT_CLASSIFICATION	6.249713037763297E-6	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999971336168043	WITHOUT_CLASSIFICATION	2.866383195744422E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999945332626964	WITHOUT_CLASSIFICATION	5.46673730367712E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999955211983	WITHOUT_CLASSIFICATION	4.4788016373132294E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999984099199	WITHOUT_CLASSIFICATION	1.5900800783018663E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999883211243968	WITHOUT_CLASSIFICATION	1.167887560322555E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998524007344	WITHOUT_CLASSIFICATION	1.4759926559618118E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999983928395059	WITHOUT_CLASSIFICATION	1.6071604942179537E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999923873140047	WITHOUT_CLASSIFICATION	7.612685995261872E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999235869029828	WITHOUT_CLASSIFICATION	7.641309701712539E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999818710772	WITHOUT_CLASSIFICATION	1.8128922764972886E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999994792063226	WITHOUT_CLASSIFICATION	5.207936773975436E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999986323165764	WITHOUT_CLASSIFICATION	1.367683423684486E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999646942805	WITHOUT_CLASSIFICATION	3.530571939461572E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999693217202	WITHOUT_CLASSIFICATION	3.067827979885226E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999974254359485	WITHOUT_CLASSIFICATION	2.574564051462025E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9995864516634346	WITHOUT_CLASSIFICATION	4.135483365653062E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999676568551362	WITHOUT_CLASSIFICATION	3.2343144863789616E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999841863059195	WITHOUT_CLASSIFICATION	1.5813694080496012E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9999347683989805	WITHOUT_CLASSIFICATION	6.52316010194378E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999966132007602	WITHOUT_CLASSIFICATION	3.3867992398500685E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999966132007602	WITHOUT_CLASSIFICATION	3.3867992398500685E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999892111596806	WITHOUT_CLASSIFICATION	1.0788840319355247E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.999995159107391	WITHOUT_CLASSIFICATION	4.840892608976577E-6	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.999992938266049	WITHOUT_CLASSIFICATION	7.061733950998521E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999873944533152	WITHOUT_CLASSIFICATION	1.2605546684820682E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999873944533152	WITHOUT_CLASSIFICATION	1.2605546684820682E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999873944533152	WITHOUT_CLASSIFICATION	1.2605546684820682E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999783675293132	WITHOUT_CLASSIFICATION	2.163247068677142E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999984697333288	WITHOUT_CLASSIFICATION	1.5302666711866087E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999880088	WITHOUT_CLASSIFICATION	1.1991265827602456E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999655080598	WITHOUT_CLASSIFICATION	3.4491940122519964E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996292302784	WITHOUT_CLASSIFICATION	3.707697216562502E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999986686320964	WITHOUT_CLASSIFICATION	1.3313679035626431E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999992921613998	WITHOUT_CLASSIFICATION	7.078386001405954E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999999949107589	WITHOUT_CLASSIFICATION	5.0892410992930946E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999923873140047	WITHOUT_CLASSIFICATION	7.612685995261872E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999235869029828	WITHOUT_CLASSIFICATION	7.641309701712539E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999818710772	WITHOUT_CLASSIFICATION	1.8128922764972886E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999063279393	WITHOUT_CLASSIFICATION	9.367206062186668E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999550008566	WITHOUT_CLASSIFICATION	4.4999143503751736E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997661500247	WITHOUT_CLASSIFICATION	2.3384997529110077E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999997581225839	WITHOUT_CLASSIFICATION	2.41877416082943E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210704231637	WITHOUT_CLASSIFICATION	7.892957683631731E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913756463069	WITHOUT_CLASSIFICATION	8.624353693102329E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998985756661278	WITHOUT_CLASSIFICATION	1.0142433387217273E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999935509028278	WITHOUT_CLASSIFICATION	6.449097172172255E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999747426525449	WITHOUT_CLASSIFICATION	2.5257347455008818E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999682598695258	WITHOUT_CLASSIFICATION	3.174013047429297E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999587072233179	WITHOUT_CLASSIFICATION	4.129277668214256E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999678891769628	WITHOUT_CLASSIFICATION	3.211082303724018E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999998438031825	WITHOUT_CLASSIFICATION	1.5619681760966883E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999998981596538	WITHOUT_CLASSIFICATION	1.0184034613399593E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998876132431955	WITHOUT_CLASSIFICATION	1.1238675680445742E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999891951014757	WITHOUT_CLASSIFICATION	1.0804898524312502E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9999081895238913	WITHOUT_CLASSIFICATION	9.181047610874191E-5	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.999869300043308	WITHOUT_CLASSIFICATION	1.3069995669198636E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9998812981892008	WITHOUT_CLASSIFICATION	1.1870181079920436E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999958038415752	WITHOUT_CLASSIFICATION	4.196158424884908E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.99999536906646	WITHOUT_CLASSIFICATION	4.630933540030845E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999983928395059	WITHOUT_CLASSIFICATION	1.6071604942179537E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999646942805	WITHOUT_CLASSIFICATION	3.530571939461572E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999693217202	WITHOUT_CLASSIFICATION	3.067827979885226E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999974254359485	WITHOUT_CLASSIFICATION	2.574564051462025E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999550008566	WITHOUT_CLASSIFICATION	4.4999143503751736E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997661500247	WITHOUT_CLASSIFICATION	2.3384997529110077E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999997581225839	WITHOUT_CLASSIFICATION	2.41877416082943E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999210704231637	WITHOUT_CLASSIFICATION	7.892957683631731E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913756463069	WITHOUT_CLASSIFICATION	8.624353693102329E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999442968677	WITHOUT_CLASSIFICATION	5.570313246480579E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9910229505864917	WITHOUT_CLASSIFICATION	0.008977049413508307	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999977873426916	WITHOUT_CLASSIFICATION	2.2126573083782207E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999831466334469	WITHOUT_CLASSIFICATION	1.6853366553060412E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999831466334469	WITHOUT_CLASSIFICATION	1.6853366553060412E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999831466334469	WITHOUT_CLASSIFICATION	1.6853366553060412E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999831466334469	WITHOUT_CLASSIFICATION	1.6853366553060412E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999831466334469	WITHOUT_CLASSIFICATION	1.6853366553060412E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999915906271831	WITHOUT_CLASSIFICATION	8.40937281678613E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996494938502	WITHOUT_CLASSIFICATION	3.505061497940331E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999998152078586	WITHOUT_CLASSIFICATION	1.8479214135597651E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999958243101685	WITHOUT_CLASSIFICATION	4.1756898314805715E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999010450298	WITHOUT_CLASSIFICATION	9.895497023575891E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994104420917	WITHOUT_CLASSIFICATION	5.895579082504158E-7	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999998885744033	WITHOUT_CLASSIFICATION	1.1142559665255601E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999991553045697	WITHOUT_CLASSIFICATION	8.44695430322002E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999818181508751	WITHOUT_CLASSIFICATION	1.8181849124945325E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999932481162255	WITHOUT_CLASSIFICATION	6.75188377452982E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999932481162255	WITHOUT_CLASSIFICATION	6.75188377452982E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999932481162255	WITHOUT_CLASSIFICATION	6.75188377452982E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999988018368949	WITHOUT_CLASSIFICATION	1.1981631050736378E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999767372635842	WITHOUT_CLASSIFICATION	2.3262736415780032E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999548196632617	WITHOUT_CLASSIFICATION	4.51803367382374E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.99997845324737	WITHOUT_CLASSIFICATION	2.1546752630004814E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.99997845324737	WITHOUT_CLASSIFICATION	2.1546752630004814E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999996508405304	WITHOUT_CLASSIFICATION	3.4915946951006976E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.99997845324737	WITHOUT_CLASSIFICATION	2.1546752630004814E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999930003386109	WITHOUT_CLASSIFICATION	6.9996613890824E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999629491829116	WITHOUT_CLASSIFICATION	3.7050817088318595E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999609613533743	WITHOUT_CLASSIFICATION	3.903864662576921E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999998239069843	WITHOUT_CLASSIFICATION	1.7609301577917024E-7	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999998239069843	WITHOUT_CLASSIFICATION	1.7609301577917024E-7	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999991769111833	WITHOUT_CLASSIFICATION	8.230888167443985E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.999985809512841	WITHOUT_CLASSIFICATION	1.41904871589654E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999940228731841	WITHOUT_CLASSIFICATION	5.977126815892264E-6	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999316960523229	WITHOUT_CLASSIFICATION	6.830394767711678E-5	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999533457158278	WITHOUT_CLASSIFICATION	4.665428417210153E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999995271379339	WITHOUT_CLASSIFICATION	4.728620661401784E-7	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.999998220408931	WITHOUT_CLASSIFICATION	1.7795910689974928E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999991665480552	WITHOUT_CLASSIFICATION	8.334519447994514E-7	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999993595396	WITHOUT_CLASSIFICATION	6.404604000863155E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999732100231232	WITHOUT_CLASSIFICATION	2.6789976876755225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997889935478	WITHOUT_CLASSIFICATION	2.1100645216713143E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999732100231232	WITHOUT_CLASSIFICATION	2.6789976876755225E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999783675293132	WITHOUT_CLASSIFICATION	2.163247068677142E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999873944533152	WITHOUT_CLASSIFICATION	1.2605546684820682E-5	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999252268381	WITHOUT_CLASSIFICATION	7.477316179914896E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999796948547991	WITHOUT_CLASSIFICATION	2.0305145200865803E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999760362495775	WITHOUT_CLASSIFICATION	2.396375042248251E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999436934240535	WITHOUT_CLASSIFICATION	5.630657594635574E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999783675293132	WITHOUT_CLASSIFICATION	2.163247068677142E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999652560460305	WITHOUT_CLASSIFICATION	3.474395396954011E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999990647119934	WITHOUT_CLASSIFICATION	9.35288006622963E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998967207385	WITHOUT_CLASSIFICATION	1.0327926141542682E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999980341773655	WITHOUT_CLASSIFICATION	1.9658226344410903E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999897488650755	WITHOUT_CLASSIFICATION	1.0251134924498409E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999897488650755	WITHOUT_CLASSIFICATION	1.0251134924498409E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999806176220377	WITHOUT_CLASSIFICATION	1.9382377962323455E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999999972677	WITHOUT_CLASSIFICATION	2.732256034414288E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999962106	WITHOUT_CLASSIFICATION	3.789388049981379E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999999354009	WITHOUT_CLASSIFICATION	6.459904394021681E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999658492	WITHOUT_CLASSIFICATION	3.4150762813914826E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999964062	WITHOUT_CLASSIFICATION	3.59387451441449E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999999957134	WITHOUT_CLASSIFICATION	4.286613340086713E-12	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999974859922062	WITHOUT_CLASSIFICATION	2.5140077937980183E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997153228561	WITHOUT_CLASSIFICATION	2.8467714376562016E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999989547188469	WITHOUT_CLASSIFICATION	1.0452811530568964E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999993604288746	WITHOUT_CLASSIFICATION	6.395711254235545E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998354362302	WITHOUT_CLASSIFICATION	1.6456376983823095E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999997844634	WITHOUT_CLASSIFICATION	2.1553661099187753E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999222394572	WITHOUT_CLASSIFICATION	7.776054276550181E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999999815235985	WITHOUT_CLASSIFICATION	1.8476401497416028E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999931387	WITHOUT_CLASSIFICATION	6.8612476659610355E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999924272	WITHOUT_CLASSIFICATION	7.5727033676234E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998825405	WITHOUT_CLASSIFICATION	1.174593880257905E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999996524808	WITHOUT_CLASSIFICATION	3.475192970713511E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999996069824	WITHOUT_CLASSIFICATION	3.9301764469875024E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999989276	WITHOUT_CLASSIFICATION	1.0723410816520195E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999998582604	WITHOUT_CLASSIFICATION	1.4173954452274386E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999931387	WITHOUT_CLASSIFICATION	6.8612476659610355E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999995741004	WITHOUT_CLASSIFICATION	4.2589972376532087E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999930317	WITHOUT_CLASSIFICATION	6.968322312662318E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998560485	WITHOUT_CLASSIFICATION	1.4395149086110254E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999300203	WITHOUT_CLASSIFICATION	6.997969296860491E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999773642	WITHOUT_CLASSIFICATION	2.263576649470632E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999996118485	WITHOUT_CLASSIFICATION	3.8815142531454126E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999999556157	WITHOUT_CLASSIFICATION	4.438419708858988E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999998912682	WITHOUT_CLASSIFICATION	1.0873179236267497E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999914234	WITHOUT_CLASSIFICATION	8.576541882740857E-12	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999749367638734	WITHOUT_CLASSIFICATION	2.506323612665845E-5	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999749367638734	WITHOUT_CLASSIFICATION	2.506323612665845E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999989276	WITHOUT_CLASSIFICATION	1.0723410816520195E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999999923735	WITHOUT_CLASSIFICATION	7.626344318678593E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999987161	WITHOUT_CLASSIFICATION	1.2837969815155128E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999999807677	WITHOUT_CLASSIFICATION	1.923230486545114E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999999926905	WITHOUT_CLASSIFICATION	7.309465331602842E-12	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999802634038	WITHOUT_CLASSIFICATION	1.9736596275771554E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999689201716	WITHOUT_CLASSIFICATION	3.107982834738896E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999999749325809	WITHOUT_CLASSIFICATION	2.506741908029113E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999999978068699	WITHOUT_CLASSIFICATION	2.1931301502604948E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998770709065	WITHOUT_CLASSIFICATION	1.2292909347778246E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997667161271	WITHOUT_CLASSIFICATION	2.3328387279020164E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999998450911	WITHOUT_CLASSIFICATION	1.5490897891269822E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999994887680372	WITHOUT_CLASSIFICATION	5.112319628494906E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999864713148	WITHOUT_CLASSIFICATION	1.3528685212454532E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999999787058	WITHOUT_CLASSIFICATION	2.1294162542689438E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999880088	WITHOUT_CLASSIFICATION	1.1991265827602456E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999994225	WITHOUT_CLASSIFICATION	5.774890859744435E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999998827463	WITHOUT_CLASSIFICATION	1.1725369236075034E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999982855813663	WITHOUT_CLASSIFICATION	1.7144186338400153E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999992803880189	WITHOUT_CLASSIFICATION	7.196119810940754E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999994225	WITHOUT_CLASSIFICATION	5.774890859744435E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999994728171	WITHOUT_CLASSIFICATION	5.271829217316732E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999998714083	WITHOUT_CLASSIFICATION	1.285917159664884E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999997267025	WITHOUT_CLASSIFICATION	2.7329744103553526E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999991548161	WITHOUT_CLASSIFICATION	8.451838866963344E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999991347932	WITHOUT_CLASSIFICATION	8.652068791542548E-10	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999787988385813	WITHOUT_CLASSIFICATION	2.120116141871143E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999787988385813	WITHOUT_CLASSIFICATION	2.120116141871143E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999787988385813	WITHOUT_CLASSIFICATION	2.120116141871143E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999787988385813	WITHOUT_CLASSIFICATION	2.120116141871143E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999787988385813	WITHOUT_CLASSIFICATION	2.120116141871143E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999787988385813	WITHOUT_CLASSIFICATION	2.120116141871143E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996748990866	WITHOUT_CLASSIFICATION	3.25100913448319E-7	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999995247790675	WITHOUT_CLASSIFICATION	4.7522093256857387E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9998619616320942	WITHOUT_CLASSIFICATION	1.380383679058748E-4	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999958200031339	WITHOUT_CLASSIFICATION	4.179996866137118E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999804565569	WITHOUT_CLASSIFICATION	1.9543443162062937E-8	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999985453027793	WITHOUT_CLASSIFICATION	1.454697220655793E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993649752	WITHOUT_CLASSIFICATION	6.350248390090744E-10	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999948684793621	WITHOUT_CLASSIFICATION	5.1315206378841475E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9904521273069461	WITHOUT_CLASSIFICATION	0.009547872693053901	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999953582309702	WITHOUT_CLASSIFICATION	4.6417690298198436E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999911449041	WITHOUT_CLASSIFICATION	8.855095805377498E-9	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999318489527472	WITHOUT_CLASSIFICATION	6.815104725272042E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999809008164	WITHOUT_CLASSIFICATION	1.90991835875375E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999996744190901	WITHOUT_CLASSIFICATION	3.2558090989610733E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999713551327	WITHOUT_CLASSIFICATION	2.864486718887433E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.999990382986652	WITHOUT_CLASSIFICATION	9.61701334796706E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999999727017278	WITHOUT_CLASSIFICATION	2.7298272193562975E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.999999684496152	WITHOUT_CLASSIFICATION	3.1550384806651185E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.999999684496152	WITHOUT_CLASSIFICATION	3.1550384806651185E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.999999684496152	WITHOUT_CLASSIFICATION	3.1550384806651185E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999146947701	WITHOUT_CLASSIFICATION	8.530522991962471E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999983534225125	WITHOUT_CLASSIFICATION	1.6465774874584593E-6	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.999999906328249	WITHOUT_CLASSIFICATION	9.367175098012641E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999854192886	WITHOUT_CLASSIFICATION	1.4580711311749216E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.8906255817896762	WITHOUT_CLASSIFICATION	0.10937441821032376	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999984697333288	WITHOUT_CLASSIFICATION	1.5302666711866087E-6	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999993783318	WITHOUT_CLASSIFICATION	6.21668226899541E-10	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999986028797314	WITHOUT_CLASSIFICATION	1.3971202685704415E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999461870509028	WITHOUT_CLASSIFICATION	5.38129490971412E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999989867231731	WITHOUT_CLASSIFICATION	1.0132768269175447E-6	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9994229794902605	WITHOUT_CLASSIFICATION	5.770205097394762E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998036048109	WITHOUT_CLASSIFICATION	1.9639518913228654E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999997369620699	WITHOUT_CLASSIFICATION	2.630379300930449E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999732100231232	WITHOUT_CLASSIFICATION	2.6789976876755225E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999732100231232	WITHOUT_CLASSIFICATION	2.6789976876755225E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999766510995537	WITHOUT_CLASSIFICATION	2.3348900446274757E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999950817617043	WITHOUT_CLASSIFICATION	4.918238295713989E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999943077472656	WITHOUT_CLASSIFICATION	5.692252734430794E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999918361052	WITHOUT_CLASSIFICATION	8.16389475643717E-9	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999572013751699	WITHOUT_CLASSIFICATION	4.2798624830109906E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999982775438883	WITHOUT_CLASSIFICATION	1.7224561116810426E-6	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999958929028213	WITHOUT_CLASSIFICATION	4.107097178629498E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963147047681	WITHOUT_CLASSIFICATION	3.6852952319567862E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999989225254	WITHOUT_CLASSIFICATION	1.077474556943163E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999732100231232	WITHOUT_CLASSIFICATION	2.6789976876755225E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999873944533152	WITHOUT_CLASSIFICATION	1.2605546684820682E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999948356406465	WITHOUT_CLASSIFICATION	5.164359353494018E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.999999955246491	WITHOUT_CLASSIFICATION	4.475350896598133E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999953456061265	WITHOUT_CLASSIFICATION	4.65439387356673E-6	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999996591381178	WITHOUT_CLASSIFICATION	3.4086188209516806E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999996624261968	WITHOUT_CLASSIFICATION	3.375738032045345E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999996624261968	WITHOUT_CLASSIFICATION	3.375738032045345E-7	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.999998082925423	WITHOUT_CLASSIFICATION	1.9170745770565117E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999677697885098	WITHOUT_CLASSIFICATION	3.223021149024806E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999318091233	WITHOUT_CLASSIFICATION	6.819087678431691E-8	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999995141484658	WITHOUT_CLASSIFICATION	4.858515342565798E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999993023845583	WITHOUT_CLASSIFICATION	6.976154418160361E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999993023845583	WITHOUT_CLASSIFICATION	6.976154418160361E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9998295362520689	WITHOUT_CLASSIFICATION	1.7046374793109036E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9998295362520689	WITHOUT_CLASSIFICATION	1.7046374793109036E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999992203377933	WITHOUT_CLASSIFICATION	7.796622067493186E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999992243557209	WITHOUT_CLASSIFICATION	7.756442790946207E-7	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999966607761007	WITHOUT_CLASSIFICATION	3.339223899362161E-6	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999982939482837	WITHOUT_CLASSIFICATION	1.706051716369227E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999993307550029	WITHOUT_CLASSIFICATION	6.692449970785381E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999115870394042	WITHOUT_CLASSIFICATION	8.84129605958716E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999115870394042	WITHOUT_CLASSIFICATION	8.84129605958716E-5	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9998527195773976	WITHOUT_CLASSIFICATION	1.4728042260236663E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999975235097	WITHOUT_CLASSIFICATION	2.4764903679849345E-9	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999468596468	WITHOUT_CLASSIFICATION	5.314035333610235E-8	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999891017304	WITHOUT_CLASSIFICATION	1.0898269541093053E-8	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999994795062581	WITHOUT_CLASSIFICATION	5.204937419739647E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999998337241034	WITHOUT_CLASSIFICATION	1.6627589665715012E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9979189281998423	WITHOUT_CLASSIFICATION	0.0020810718001576575	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999993074046527	WITHOUT_CLASSIFICATION	6.925953473164035E-7	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9995873535233996	WITHOUT_CLASSIFICATION	4.1264647660042126E-4	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999626810710579	WITHOUT_CLASSIFICATION	3.731892894203244E-5	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999948230696142	WITHOUT_CLASSIFICATION	5.176930385781184E-6	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999950314469	WITHOUT_CLASSIFICATION	4.968553070352795E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9957798834153851	WITHOUT_CLASSIFICATION	0.00422011658461487	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999937134749995	WITHOUT_CLASSIFICATION	6.286525000433904E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999950921473434	WITHOUT_CLASSIFICATION	4.907852656648633E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999982795340188	WITHOUT_CLASSIFICATION	1.720465981290135E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999978479379	WITHOUT_CLASSIFICATION	2.1520620957272647E-9	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999915484846729	WITHOUT_CLASSIFICATION	8.451515327128124E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999991958834841	WITHOUT_CLASSIFICATION	8.041165159290989E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999991916607484	WITHOUT_CLASSIFICATION	8.083392515232871E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999991916607484	WITHOUT_CLASSIFICATION	8.083392515232871E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999921635447925	WITHOUT_CLASSIFICATION	7.836455207515681E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.998319197283607	WITHOUT_CLASSIFICATION	0.0016808027163930299	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999995379772152	WITHOUT_CLASSIFICATION	4.620227847453133E-7	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999930931013167	WITHOUT_CLASSIFICATION	6.906898683311873E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999972601233694	WITHOUT_CLASSIFICATION	2.7398766306104795E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999650742135359	WITHOUT_CLASSIFICATION	3.492578646418184E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999650760457375	WITHOUT_CLASSIFICATION	3.4923954262446234E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999993460333866	WITHOUT_CLASSIFICATION	6.539666133793657E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999790891276459	WITHOUT_CLASSIFICATION	2.0910872354141755E-5	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999949723055	WITHOUT_CLASSIFICATION	5.027694454615405E-9	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999910547967698	WITHOUT_CLASSIFICATION	8.945203230318955E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999961963647123	WITHOUT_CLASSIFICATION	3.803635287674339E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999940307094913	WITHOUT_CLASSIFICATION	5.969290508681897E-6	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9017978680980734	WITHOUT_CLASSIFICATION	0.09820213190192661	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.999999635847307	WITHOUT_CLASSIFICATION	3.641526930177841E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999987935954564	WITHOUT_CLASSIFICATION	1.2064045436030428E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999992950136549	WITHOUT_CLASSIFICATION	7.049863451587669E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996763362319	WITHOUT_CLASSIFICATION	3.2366376815468895E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999912259687322	WITHOUT_CLASSIFICATION	8.774031267667464E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999912259687322	WITHOUT_CLASSIFICATION	8.774031267667464E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999912259687322	WITHOUT_CLASSIFICATION	8.774031267667464E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999912259687322	WITHOUT_CLASSIFICATION	8.774031267667464E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999998939732093	WITHOUT_CLASSIFICATION	1.0602679071744499E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995392412231	WITHOUT_CLASSIFICATION	4.6075877688659723E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995392412231	WITHOUT_CLASSIFICATION	4.6075877688659723E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999972700891855	WITHOUT_CLASSIFICATION	2.729910814451926E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999994211788755	WITHOUT_CLASSIFICATION	5.788211246005864E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999999088882838	WITHOUT_CLASSIFICATION	9.111171616137834E-8	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999940863558	WITHOUT_CLASSIFICATION	5.913644208268027E-9	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999959398313363	WITHOUT_CLASSIFICATION	4.060168663668171E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997984405016	WITHOUT_CLASSIFICATION	2.0155949838829128E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999994405559555	WITHOUT_CLASSIFICATION	5.5944404450438766E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989638749088	WITHOUT_CLASSIFICATION	1.0361250911916084E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989638749088	WITHOUT_CLASSIFICATION	1.0361250911916084E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989638749088	WITHOUT_CLASSIFICATION	1.0361250911916084E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999990786213317	WITHOUT_CLASSIFICATION	9.213786680994638E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998856971264	WITHOUT_CLASSIFICATION	1.1430287357453237E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9918522789380625	WITHOUT_CLASSIFICATION	0.00814772106193756	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995996007495	WITHOUT_CLASSIFICATION	4.0039925043707847E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995996007495	WITHOUT_CLASSIFICATION	4.0039925043707847E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999946386577	WITHOUT_CLASSIFICATION	5.36134231896392E-9	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999997561905763	WITHOUT_CLASSIFICATION	2.438094237440967E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999981171724817	WITHOUT_CLASSIFICATION	1.8828275183059577E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999751651929095	WITHOUT_CLASSIFICATION	2.4834807090399792E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9990449428084799	WITHOUT_CLASSIFICATION	9.550571915200799E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999390935945	WITHOUT_CLASSIFICATION	6.090640542829931E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999879877115082	WITHOUT_CLASSIFICATION	1.2012288491925244E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999866434729	WITHOUT_CLASSIFICATION	1.335652707863393E-8	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.999999995230993	WITHOUT_CLASSIFICATION	4.76900705575501E-9	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999998857276018	WITHOUT_CLASSIFICATION	1.1427239822936053E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999992924695	WITHOUT_CLASSIFICATION	7.075304323116625E-10	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999529874279569	WITHOUT_CLASSIFICATION	4.7012572043010024E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999529874279569	WITHOUT_CLASSIFICATION	4.7012572043010024E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9967514461907289	WITHOUT_CLASSIFICATION	0.003248553809271075	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995273768811271	WITHOUT_CLASSIFICATION	4.726231188728726E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995273768811271	WITHOUT_CLASSIFICATION	4.726231188728726E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999654394701054	WITHOUT_CLASSIFICATION	3.4560529894496264E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999857299362	WITHOUT_CLASSIFICATION	1.4270063780590465E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999857299362	WITHOUT_CLASSIFICATION	1.4270063780590465E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999672386249	WITHOUT_CLASSIFICATION	3.2761375094958384E-8	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999994839331913	WITHOUT_CLASSIFICATION	5.160668087700727E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9986464779025634	WITHOUT_CLASSIFICATION	0.001353522097436645	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999883211243968	WITHOUT_CLASSIFICATION	1.167887560322555E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999883211243968	WITHOUT_CLASSIFICATION	1.167887560322555E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915187501148	WITHOUT_CLASSIFICATION	8.481249885231204E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999998271040463	WITHOUT_CLASSIFICATION	1.7289595363552967E-7	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999371499853116	WITHOUT_CLASSIFICATION	6.285001468837627E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9814685707708622	DEFECT	0.018531429229137718	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999997430532757	WITHOUT_CLASSIFICATION	2.569467243329754E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999997430532757	WITHOUT_CLASSIFICATION	2.569467243329754E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.963506009816388	DEFECT	0.03649399018361202	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999709878285892	WITHOUT_CLASSIFICATION	2.9012171410816384E-5	DEFECT
// is this an error???	DEFECT	0.9999709878285892	WITHOUT_CLASSIFICATION	2.9012171410816384E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999727435488548	WITHOUT_CLASSIFICATION	2.725645114517244E-5	DEFECT
