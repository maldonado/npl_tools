// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999987986639337	WITHOUT_CLASSIFICATION	1.2013360663763586E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999967101474099	WITHOUT_CLASSIFICATION	3.2898525901666997E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999996556482443	WITHOUT_CLASSIFICATION	3.443517556518241E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9998088695125702	WITHOUT_CLASSIFICATION	1.9113048742973386E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999993084666667	WITHOUT_CLASSIFICATION	6.915333333545989E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999748640267	WITHOUT_CLASSIFICATION	2.513597327982583E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999997033751763	WITHOUT_CLASSIFICATION	2.9662482369971227E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999977466259912	WITHOUT_CLASSIFICATION	2.253374008796653E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999964722496832	WITHOUT_CLASSIFICATION	3.5277503168808936E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999973955405356	WITHOUT_CLASSIFICATION	2.6044594644834353E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999698752571874	WITHOUT_CLASSIFICATION	3.0124742812612386E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999954553067975	WITHOUT_CLASSIFICATION	4.544693202604238E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998381759354312	WITHOUT_CLASSIFICATION	1.618240645688203E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989881468595	WITHOUT_CLASSIFICATION	1.011853140537943E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990640836405	WITHOUT_CLASSIFICATION	9.359163594863728E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993983304873	WITHOUT_CLASSIFICATION	6.016695126063544E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999925178322245	WITHOUT_CLASSIFICATION	7.482167775498891E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999997033751763	WITHOUT_CLASSIFICATION	2.9662482369971227E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999943152336325	WITHOUT_CLASSIFICATION	5.68476636751849E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999986564211105	WITHOUT_CLASSIFICATION	1.3435788895091027E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999992797407448	WITHOUT_CLASSIFICATION	7.202592552495993E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999959620653515	WITHOUT_CLASSIFICATION	4.0379346485100005E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999959620653515	WITHOUT_CLASSIFICATION	4.0379346485100005E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999997486319107	WITHOUT_CLASSIFICATION	2.5136808934427316E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998107136705	WITHOUT_CLASSIFICATION	1.8928632940679715E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999982850132018	WITHOUT_CLASSIFICATION	1.7149867982161608E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.99999770378018	WITHOUT_CLASSIFICATION	2.2962198200168687E-6	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999980563432268	WITHOUT_CLASSIFICATION	1.9436567731798606E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999983347819603	WITHOUT_CLASSIFICATION	1.665218039655097E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999794959946494	WITHOUT_CLASSIFICATION	2.0504005350653306E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999997181743135	WITHOUT_CLASSIFICATION	2.8182568650990024E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999880614196326	WITHOUT_CLASSIFICATION	1.1938580367423948E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9970753615320844	WITHOUT_CLASSIFICATION	0.002924638467915599	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999936683868583	WITHOUT_CLASSIFICATION	6.331613141716569E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999968887270297	WITHOUT_CLASSIFICATION	3.1112729701504383E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999209929331553	WITHOUT_CLASSIFICATION	7.900706684471764E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999983593641194	WITHOUT_CLASSIFICATION	1.6406358806805365E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999995835317932	WITHOUT_CLASSIFICATION	4.1646820681030483E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999777067222549	WITHOUT_CLASSIFICATION	2.2293277745076353E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992400737048	WITHOUT_CLASSIFICATION	7.599262951641299E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999201350135	WITHOUT_CLASSIFICATION	7.986498649403048E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995599410574681	WITHOUT_CLASSIFICATION	4.4005894253191374E-4	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999983329439709	WITHOUT_CLASSIFICATION	1.667056029124155E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999993338351	WITHOUT_CLASSIFICATION	6.661649297779824E-10	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999954293019165	WITHOUT_CLASSIFICATION	4.570698083438713E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999949571077347	WITHOUT_CLASSIFICATION	5.042892265337618E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999928473314539	WITHOUT_CLASSIFICATION	7.15266854603947E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994397401378	WITHOUT_CLASSIFICATION	5.602598622065606E-7	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9999549117644684	WITHOUT_CLASSIFICATION	4.5088235531592066E-5	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999712969496954	WITHOUT_CLASSIFICATION	2.8703050304648674E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999928473314539	WITHOUT_CLASSIFICATION	7.15266854603947E-6	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999276553090856	WITHOUT_CLASSIFICATION	7.234469091447712E-5	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999569259129861	WITHOUT_CLASSIFICATION	4.307408701386357E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999579388568778	WITHOUT_CLASSIFICATION	4.2061143122244094E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999664883940574	WITHOUT_CLASSIFICATION	3.351160594263659E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999495581679055	WITHOUT_CLASSIFICATION	5.044183209461367E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999474676340374	WITHOUT_CLASSIFICATION	5.253236596252793E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999992526316702	WITHOUT_CLASSIFICATION	7.473683298010459E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9998896093189404	WITHOUT_CLASSIFICATION	1.1039068105955717E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999869596123834	WITHOUT_CLASSIFICATION	1.3040387616636375E-5	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999685837582767	WITHOUT_CLASSIFICATION	3.141624172335508E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9974488259223543	WITHOUT_CLASSIFICATION	0.002551174077645717	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999702566283951	WITHOUT_CLASSIFICATION	2.9743371604901652E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9941007703768563	WITHOUT_CLASSIFICATION	0.005899229623143691	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9995136670308382	WITHOUT_CLASSIFICATION	4.863329691617345E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999998004880787	WITHOUT_CLASSIFICATION	1.9951192131883336E-7	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.999999835957404	WITHOUT_CLASSIFICATION	1.6404259591817635E-7	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999407048231342	WITHOUT_CLASSIFICATION	5.929517686574008E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9990004157126386	WITHOUT_CLASSIFICATION	9.995842873613625E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999954553067975	WITHOUT_CLASSIFICATION	4.544693202604238E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998381759354312	WITHOUT_CLASSIFICATION	1.618240645688203E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989881468595	WITHOUT_CLASSIFICATION	1.011853140537943E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999946772555608	WITHOUT_CLASSIFICATION	5.3227444391970536E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999963409467753	WITHOUT_CLASSIFICATION	3.6590532247343238E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990640836405	WITHOUT_CLASSIFICATION	9.359163594863728E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993983304873	WITHOUT_CLASSIFICATION	6.016695126063544E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999925178322245	WITHOUT_CLASSIFICATION	7.482167775498891E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999895392413454	WITHOUT_CLASSIFICATION	1.0460758654717264E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999895392413454	WITHOUT_CLASSIFICATION	1.0460758654717264E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999895392413454	WITHOUT_CLASSIFICATION	1.0460758654717264E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999748640267	WITHOUT_CLASSIFICATION	2.513597327982583E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999959363676775	WITHOUT_CLASSIFICATION	4.063632322461165E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999797621159	WITHOUT_CLASSIFICATION	2.0237884132947692E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999999673389989	WITHOUT_CLASSIFICATION	3.2661001176574626E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999992797407448	WITHOUT_CLASSIFICATION	7.202592552495993E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993904143962	WITHOUT_CLASSIFICATION	6.095856038011569E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999794959946494	WITHOUT_CLASSIFICATION	2.0504005350653306E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999997181743135	WITHOUT_CLASSIFICATION	2.8182568650990024E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9970753615320844	WITHOUT_CLASSIFICATION	0.002924638467915599	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999209929331553	WITHOUT_CLASSIFICATION	7.900706684471764E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999879147340441	WITHOUT_CLASSIFICATION	1.2085265955821141E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999990809155245	WITHOUT_CLASSIFICATION	9.190844755059548E-7	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999997555592054	WITHOUT_CLASSIFICATION	2.44440794689572E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999987499615814	WITHOUT_CLASSIFICATION	1.250038418557483E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999960395230294	WITHOUT_CLASSIFICATION	3.960476970646919E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992400737048	WITHOUT_CLASSIFICATION	7.599262951641299E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995599410574681	WITHOUT_CLASSIFICATION	4.4005894253191374E-4	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999989829871906	WITHOUT_CLASSIFICATION	1.0170128093727883E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999738716864686	WITHOUT_CLASSIFICATION	2.6128313531431708E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999961373260757	WITHOUT_CLASSIFICATION	3.862673924291315E-6	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999999667668326	WITHOUT_CLASSIFICATION	3.3233167373418704E-8	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999980678787624	WITHOUT_CLASSIFICATION	1.9321212375206084E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999804419732908	WITHOUT_CLASSIFICATION	1.9558026709256166E-5	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999990287285399	WITHOUT_CLASSIFICATION	9.71271460213886E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999983560479412	WITHOUT_CLASSIFICATION	1.643952058927901E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999917198342855	WITHOUT_CLASSIFICATION	8.280165714537196E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999987783107051	WITHOUT_CLASSIFICATION	1.2216892948904786E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999528120083	WITHOUT_CLASSIFICATION	4.718799166755863E-8	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999917198342855	WITHOUT_CLASSIFICATION	8.280165714537196E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999855380360549	WITHOUT_CLASSIFICATION	1.446196394507857E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998007426484	WITHOUT_CLASSIFICATION	1.9925735160620083E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999517293977	WITHOUT_CLASSIFICATION	4.827060224058907E-8	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999990139455541	WITHOUT_CLASSIFICATION	9.860544458394272E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999917198342855	WITHOUT_CLASSIFICATION	8.280165714537196E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999987783107051	WITHOUT_CLASSIFICATION	1.2216892948904786E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999992894783355	WITHOUT_CLASSIFICATION	7.105216644627273E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999794125217	WITHOUT_CLASSIFICATION	2.0587478221850685E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999991621926136	WITHOUT_CLASSIFICATION	8.378073863375936E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999996424387241	WITHOUT_CLASSIFICATION	3.5756127589535983E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999485100476	WITHOUT_CLASSIFICATION	5.148995239806488E-8	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.999993777816188	WITHOUT_CLASSIFICATION	6.222183811954621E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999997148751295	WITHOUT_CLASSIFICATION	2.851248704841253E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9997622466236975	WITHOUT_CLASSIFICATION	2.3775337630248358E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999283212129348	WITHOUT_CLASSIFICATION	7.167878706513008E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9998587960501782	WITHOUT_CLASSIFICATION	1.4120394982174319E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9967251877129426	WITHOUT_CLASSIFICATION	0.003274812287057358	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998893602864	WITHOUT_CLASSIFICATION	1.1063971363068309E-7	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999562216303	WITHOUT_CLASSIFICATION	4.377836968618224E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994397401378	WITHOUT_CLASSIFICATION	5.602598622065606E-7	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999751804672	WITHOUT_CLASSIFICATION	2.4819532689035372E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999990723625671	WITHOUT_CLASSIFICATION	9.276374327777406E-7	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.999663004109261	WITHOUT_CLASSIFICATION	3.369958907389633E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999839421825439	WITHOUT_CLASSIFICATION	1.6057817456113812E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999977048141745	WITHOUT_CLASSIFICATION	2.29518582559228E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999698007239438	WITHOUT_CLASSIFICATION	3.0199276056097256E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999690315954707	WITHOUT_CLASSIFICATION	3.0968404529265146E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999751804672	WITHOUT_CLASSIFICATION	2.4819532689035372E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999990723625671	WITHOUT_CLASSIFICATION	9.276374327777406E-7	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999919708078655	WITHOUT_CLASSIFICATION	8.029192134414599E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999919708078655	WITHOUT_CLASSIFICATION	8.029192134414599E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999983212924357	WITHOUT_CLASSIFICATION	1.6787075642290445E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9994522802517517	WITHOUT_CLASSIFICATION	5.477197482482246E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9982229728244206	WITHOUT_CLASSIFICATION	0.001777027175579331	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999983212924357	WITHOUT_CLASSIFICATION	1.6787075642290445E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9994522802517517	WITHOUT_CLASSIFICATION	5.477197482482246E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999973572515313	WITHOUT_CLASSIFICATION	2.6427484686854104E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556684722	WITHOUT_CLASSIFICATION	3.3443315278427703E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999638170959	WITHOUT_CLASSIFICATION	3.618290406258771E-8	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999996665241868	WITHOUT_CLASSIFICATION	3.3347581322629676E-7	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999638170959	WITHOUT_CLASSIFICATION	3.618290406258771E-8	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999993843688046	WITHOUT_CLASSIFICATION	6.156311953831122E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999879873654	WITHOUT_CLASSIFICATION	1.2012634526403844E-8	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999879873654	WITHOUT_CLASSIFICATION	1.2012634526403844E-8	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999806221946521	WITHOUT_CLASSIFICATION	1.9377805347845135E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999995832775196	WITHOUT_CLASSIFICATION	4.167224803409097E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9987141062795155	WITHOUT_CLASSIFICATION	0.0012858937204845659	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999519885907198	WITHOUT_CLASSIFICATION	4.8011409280154904E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.999999926604533	WITHOUT_CLASSIFICATION	7.33954669972015E-8	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999983867171917	WITHOUT_CLASSIFICATION	1.6132828083158232E-6	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999954274061322	WITHOUT_CLASSIFICATION	4.57259386774245E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999994094221238	WITHOUT_CLASSIFICATION	5.905778760993968E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999574927803	WITHOUT_CLASSIFICATION	4.25072197389164E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999990479753342	WITHOUT_CLASSIFICATION	9.520246657822846E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999997723214262	WITHOUT_CLASSIFICATION	2.2767857381127733E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999835912204532	WITHOUT_CLASSIFICATION	1.640877954674968E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999957432090295	WITHOUT_CLASSIFICATION	4.256790970459432E-6	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999852078392631	WITHOUT_CLASSIFICATION	1.4792160736834699E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999967638546888	WITHOUT_CLASSIFICATION	3.2361453111807094E-6	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9998829380409164	WITHOUT_CLASSIFICATION	1.170619590835251E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999930301940975	WITHOUT_CLASSIFICATION	6.96980590260561E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999205482702	WITHOUT_CLASSIFICATION	7.945172984982528E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999941813384334	WITHOUT_CLASSIFICATION	5.818661566579013E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999941813384334	WITHOUT_CLASSIFICATION	5.818661566579013E-6	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999999212594306	WITHOUT_CLASSIFICATION	7.874056939678621E-8	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999999434932982	WITHOUT_CLASSIFICATION	5.650670179224218E-8	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999168044880256	WITHOUT_CLASSIFICATION	8.319551197452514E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9998607474613191	WITHOUT_CLASSIFICATION	1.3925253868091343E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999654651020538	WITHOUT_CLASSIFICATION	3.453489794617121E-5	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999989856608255	WITHOUT_CLASSIFICATION	1.0143391746085944E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999967638546888	WITHOUT_CLASSIFICATION	3.2361453111807094E-6	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999913306076165	WITHOUT_CLASSIFICATION	8.669392383474848E-6	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999999636446607	WITHOUT_CLASSIFICATION	3.635533926684898E-8	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999998055733691	WITHOUT_CLASSIFICATION	1.9442663085027357E-7	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999985134989788	WITHOUT_CLASSIFICATION	1.486501021157619E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.999992851255507	WITHOUT_CLASSIFICATION	7.148744492963474E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999896349131	WITHOUT_CLASSIFICATION	1.0365086939488846E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999849154650076	WITHOUT_CLASSIFICATION	1.5084534992413714E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9998851380775616	WITHOUT_CLASSIFICATION	1.1486192243835519E-4	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999875590967	WITHOUT_CLASSIFICATION	1.2440903182740803E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967099179584	WITHOUT_CLASSIFICATION	3.290082041601931E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999975790417	WITHOUT_CLASSIFICATION	2.4209582519704846E-9	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999976906319331	WITHOUT_CLASSIFICATION	2.3093680669586684E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999976906319331	WITHOUT_CLASSIFICATION	2.3093680669586684E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999998159688981	WITHOUT_CLASSIFICATION	1.8403110195850601E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999987480143745	WITHOUT_CLASSIFICATION	1.251985625474385E-6	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999659726665172	WITHOUT_CLASSIFICATION	3.402733348276399E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9964574337588402	WITHOUT_CLASSIFICATION	0.0035425662411597437	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999995313079647	WITHOUT_CLASSIFICATION	4.686920352748503E-7	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9998357380885712	WITHOUT_CLASSIFICATION	1.6426191142889472E-4	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9996109563332614	WITHOUT_CLASSIFICATION	3.8904366673864915E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999984746689135	WITHOUT_CLASSIFICATION	1.5253310865497645E-6	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999991105771109	WITHOUT_CLASSIFICATION	8.894228890805049E-7	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9999312035955343	WITHOUT_CLASSIFICATION	6.879640446570242E-5	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999997972381302	WITHOUT_CLASSIFICATION	2.0276186977198742E-7	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9998391152212129	WITHOUT_CLASSIFICATION	1.608847787870437E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999621433238713	WITHOUT_CLASSIFICATION	3.7856676128557864E-5	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.999999848328514	WITHOUT_CLASSIFICATION	1.5167148612238204E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9302498262496105	WITHOUT_CLASSIFICATION	0.06975017375038954	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999674157851042	WITHOUT_CLASSIFICATION	3.25842148958456E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999990753447231	WITHOUT_CLASSIFICATION	9.246552768878249E-7	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999998664852028	WITHOUT_CLASSIFICATION	1.3351479727487621E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999966687773626	WITHOUT_CLASSIFICATION	3.3312226374298415E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.99999964140427	WITHOUT_CLASSIFICATION	3.5859573009103314E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999993087787203	WITHOUT_CLASSIFICATION	6.912212795512387E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999632014712931	WITHOUT_CLASSIFICATION	3.6798528706948944E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999773528138474	WITHOUT_CLASSIFICATION	2.2647186152650994E-5	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999997544575426	WITHOUT_CLASSIFICATION	2.455424574358422E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999601554591281	WITHOUT_CLASSIFICATION	3.9844540871850197E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999961971630308	WITHOUT_CLASSIFICATION	3.8028369690658606E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.999999658513767	WITHOUT_CLASSIFICATION	3.414862329417792E-7	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999990561431411	WITHOUT_CLASSIFICATION	9.438568588580924E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999620324980586	WITHOUT_CLASSIFICATION	3.7967501941426104E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.999999024730552	WITHOUT_CLASSIFICATION	9.75269447928134E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999997912661013	WITHOUT_CLASSIFICATION	2.08733898675152E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999997912661013	WITHOUT_CLASSIFICATION	2.08733898675152E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999989994497096	WITHOUT_CLASSIFICATION	1.000550290378984E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999989994497096	WITHOUT_CLASSIFICATION	1.000550290378984E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999583611540312	WITHOUT_CLASSIFICATION	4.1638845968711014E-5	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9998611021453776	WITHOUT_CLASSIFICATION	1.3889785462238254E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999984641046616	WITHOUT_CLASSIFICATION	1.535895338325202E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999984641046616	WITHOUT_CLASSIFICATION	1.535895338325202E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999961162476904	WITHOUT_CLASSIFICATION	3.883752309602738E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999624548545812	WITHOUT_CLASSIFICATION	3.754514541871693E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999957432090295	WITHOUT_CLASSIFICATION	4.256790970459432E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999965868736019	WITHOUT_CLASSIFICATION	3.413126398101469E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999965868736019	WITHOUT_CLASSIFICATION	3.413126398101469E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999965868736019	WITHOUT_CLASSIFICATION	3.413126398101469E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999624548545812	WITHOUT_CLASSIFICATION	3.754514541871693E-5	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999999205566208	WITHOUT_CLASSIFICATION	7.944337915179764E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999773937020776	WITHOUT_CLASSIFICATION	2.2606297922404984E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9362646954883186	WITHOUT_CLASSIFICATION	0.06373530451168152	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999959953440116	WITHOUT_CLASSIFICATION	4.004655988344211E-6	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999999665279322	WITHOUT_CLASSIFICATION	3.347206782210117E-8	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999991536639737	WITHOUT_CLASSIFICATION	8.463360261888199E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999996556482443	WITHOUT_CLASSIFICATION	3.443517556518241E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9998088695125702	WITHOUT_CLASSIFICATION	1.9113048742973386E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999993084666667	WITHOUT_CLASSIFICATION	6.915333333545989E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999748640267	WITHOUT_CLASSIFICATION	2.513597327982583E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999977466259912	WITHOUT_CLASSIFICATION	2.253374008796653E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999964722496832	WITHOUT_CLASSIFICATION	3.5277503168808936E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999973955405356	WITHOUT_CLASSIFICATION	2.6044594644834353E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999954553067975	WITHOUT_CLASSIFICATION	4.544693202604238E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998381759354312	WITHOUT_CLASSIFICATION	1.618240645688203E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989881468595	WITHOUT_CLASSIFICATION	1.011853140537943E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999961879896624	WITHOUT_CLASSIFICATION	3.8120103375745994E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990640836405	WITHOUT_CLASSIFICATION	9.359163594863728E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993983304873	WITHOUT_CLASSIFICATION	6.016695126063544E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999925178322245	WITHOUT_CLASSIFICATION	7.482167775498891E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999943152336325	WITHOUT_CLASSIFICATION	5.68476636751849E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999986564211105	WITHOUT_CLASSIFICATION	1.3435788895091027E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998378659786	WITHOUT_CLASSIFICATION	1.621340214283067E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995167699582	WITHOUT_CLASSIFICATION	4.832300417772684E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999992797407448	WITHOUT_CLASSIFICATION	7.202592552495993E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999997486319107	WITHOUT_CLASSIFICATION	2.5136808934427316E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998107136705	WITHOUT_CLASSIFICATION	1.8928632940679715E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993904143962	WITHOUT_CLASSIFICATION	6.095856038011569E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999794959946494	WITHOUT_CLASSIFICATION	2.0504005350653306E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999997181743135	WITHOUT_CLASSIFICATION	2.8182568650990024E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999880614196326	WITHOUT_CLASSIFICATION	1.1938580367423948E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9970753615320844	WITHOUT_CLASSIFICATION	0.002924638467915599	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999995043069586	WITHOUT_CLASSIFICATION	4.956930412909474E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999747337339	WITHOUT_CLASSIFICATION	2.52662660609312E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999995835317932	WITHOUT_CLASSIFICATION	4.1646820681030483E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999936683868583	WITHOUT_CLASSIFICATION	6.331613141716569E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999209929331553	WITHOUT_CLASSIFICATION	7.900706684471764E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999968887270297	WITHOUT_CLASSIFICATION	3.1112729701504383E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999978193403599	WITHOUT_CLASSIFICATION	2.1806596401029238E-5	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999998904541514	WITHOUT_CLASSIFICATION	1.0954584861442114E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999209929331553	WITHOUT_CLASSIFICATION	7.900706684471764E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992400737048	WITHOUT_CLASSIFICATION	7.599262951641299E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999777067222549	WITHOUT_CLASSIFICATION	2.2293277745076353E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.999998054630772	WITHOUT_CLASSIFICATION	1.9453692280299996E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995599410574681	WITHOUT_CLASSIFICATION	4.4005894253191374E-4	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999986145766657	WITHOUT_CLASSIFICATION	1.3854233343623012E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999978193403599	WITHOUT_CLASSIFICATION	2.1806596401029238E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995599410574681	WITHOUT_CLASSIFICATION	4.4005894253191374E-4	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999954045945995	WITHOUT_CLASSIFICATION	4.595405400572782E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999998364353694	WITHOUT_CLASSIFICATION	1.6356463065204843E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999894050386162	WITHOUT_CLASSIFICATION	1.0594961383729125E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999988395746754	WITHOUT_CLASSIFICATION	1.1604253245472387E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999998189294715	WITHOUT_CLASSIFICATION	1.8107052840999955E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9998039549594012	WITHOUT_CLASSIFICATION	1.9604504059885094E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999992416536455	WITHOUT_CLASSIFICATION	7.58346354507731E-7	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999951814960198	WITHOUT_CLASSIFICATION	4.81850398017144E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999869700021545	WITHOUT_CLASSIFICATION	1.3029997845487831E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9998421255446054	WITHOUT_CLASSIFICATION	1.578744553946133E-4	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999959613620658	WITHOUT_CLASSIFICATION	4.038637934188196E-6	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.999994695565678	WITHOUT_CLASSIFICATION	5.304434322020824E-6	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999986282085188	WITHOUT_CLASSIFICATION	1.3717914812020572E-6	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9997260573448858	WITHOUT_CLASSIFICATION	2.739426551140903E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.999971836995259	WITHOUT_CLASSIFICATION	2.816300474090424E-5	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999999102907635	WITHOUT_CLASSIFICATION	8.970923655865461E-8	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9997808851824188	WITHOUT_CLASSIFICATION	2.1911481758123122E-4	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.998471163133302	WITHOUT_CLASSIFICATION	0.0015288368666980376	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999991362622228	WITHOUT_CLASSIFICATION	8.637377772247879E-7	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999632745153648	WITHOUT_CLASSIFICATION	3.672548463510792E-5	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999974560738325	WITHOUT_CLASSIFICATION	2.5439261675540363E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999997597972132	WITHOUT_CLASSIFICATION	2.4020278671331634E-7	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999994507581929	WITHOUT_CLASSIFICATION	5.492418071458544E-7	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999991131753578	WITHOUT_CLASSIFICATION	8.868246421698667E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999925442612199	WITHOUT_CLASSIFICATION	7.455738780142007E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9473139453439571	WITHOUT_CLASSIFICATION	0.05268605465604281	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999987299110413	WITHOUT_CLASSIFICATION	1.2700889587157914E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999997785220667	WITHOUT_CLASSIFICATION	2.2147793344306251E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999994319318012	WITHOUT_CLASSIFICATION	5.68068198772315E-7	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.999999497798557	WITHOUT_CLASSIFICATION	5.022014430034936E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999983329439709	WITHOUT_CLASSIFICATION	1.667056029124155E-6	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999997478853958	WITHOUT_CLASSIFICATION	2.5211460415465215E-7	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999990097888909	WITHOUT_CLASSIFICATION	9.902111090941465E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999201322359	WITHOUT_CLASSIFICATION	7.98677640363008E-8	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999354590215147	WITHOUT_CLASSIFICATION	6.454097848532882E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999990000951482	WITHOUT_CLASSIFICATION	9.999048517221088E-7	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999844795627064	WITHOUT_CLASSIFICATION	1.552043729361537E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999977620700713	WITHOUT_CLASSIFICATION	2.237929928588486E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999998293735687	WITHOUT_CLASSIFICATION	1.7062643124160176E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999903617604459	WITHOUT_CLASSIFICATION	9.638239554091151E-6	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999993985820517	WITHOUT_CLASSIFICATION	6.014179483225366E-7	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999920221840489	WITHOUT_CLASSIFICATION	7.977815950991674E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999990273047505	WITHOUT_CLASSIFICATION	9.726952494603396E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999999444991999	WITHOUT_CLASSIFICATION	5.55008000195873E-8	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999980987850554	WITHOUT_CLASSIFICATION	1.9012149444967127E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999920915081655	WITHOUT_CLASSIFICATION	7.908491834579026E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999643919184263	WITHOUT_CLASSIFICATION	3.5608081573612274E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999729438354109	WITHOUT_CLASSIFICATION	2.705616458905728E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999997559708269	WITHOUT_CLASSIFICATION	2.440291730940485E-7	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999996782611524	WITHOUT_CLASSIFICATION	3.217388474679403E-7	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999997124262202	WITHOUT_CLASSIFICATION	2.875737797970893E-7	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9997425449914104	WITHOUT_CLASSIFICATION	2.574550085896519E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999630158993018	WITHOUT_CLASSIFICATION	3.69841006982316E-5	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999828277298	WITHOUT_CLASSIFICATION	1.7172270200044956E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999967989278279	WITHOUT_CLASSIFICATION	3.2010721722569568E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999995832775196	WITHOUT_CLASSIFICATION	4.167224803409097E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999998136169982	WITHOUT_CLASSIFICATION	1.8638300169050543E-7	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999976183722894	WITHOUT_CLASSIFICATION	2.3816277106612296E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999964334711082	WITHOUT_CLASSIFICATION	3.566528891788764E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999997709322951	WITHOUT_CLASSIFICATION	2.2906770488590375E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999997841021986	WITHOUT_CLASSIFICATION	2.1589780150361933E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999505716455114	WITHOUT_CLASSIFICATION	4.942835448865071E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999942219943129	WITHOUT_CLASSIFICATION	5.778005687138764E-6	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999861392954333	WITHOUT_CLASSIFICATION	1.3860704566574885E-5	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999750615814	WITHOUT_CLASSIFICATION	2.493841853466239E-8	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999996143008826	WITHOUT_CLASSIFICATION	3.856991174720297E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999998199272796	WITHOUT_CLASSIFICATION	1.8007272047855815E-7	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999930301940975	WITHOUT_CLASSIFICATION	6.96980590260561E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999205482702	WITHOUT_CLASSIFICATION	7.945172984982528E-8	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999989856608255	WITHOUT_CLASSIFICATION	1.0143391746085944E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999505716455114	WITHOUT_CLASSIFICATION	4.942835448865071E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999996143008826	WITHOUT_CLASSIFICATION	3.856991174720297E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999998199272796	WITHOUT_CLASSIFICATION	1.8007272047855815E-7	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999949819095	WITHOUT_CLASSIFICATION	5.018090476355002E-9	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999626617030534	WITHOUT_CLASSIFICATION	3.7338296946717094E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999520146073175	WITHOUT_CLASSIFICATION	4.7985392682466434E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999971946138823	WITHOUT_CLASSIFICATION	2.8053861177698943E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999997283171633	WITHOUT_CLASSIFICATION	2.716828366505572E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999843352995	WITHOUT_CLASSIFICATION	1.566470047586362E-8	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999832594105	WITHOUT_CLASSIFICATION	1.6740589419628267E-8	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999929865668411	WITHOUT_CLASSIFICATION	7.013433158867601E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999999762605402	WITHOUT_CLASSIFICATION	2.373945988855553E-8	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9982269548363479	WITHOUT_CLASSIFICATION	0.001773045163652011	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999628458497916	WITHOUT_CLASSIFICATION	3.71541502083549E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9987994346005468	WITHOUT_CLASSIFICATION	0.0012005653994533177	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999999130756531	WITHOUT_CLASSIFICATION	8.692434689525334E-8	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999998842801651	WITHOUT_CLASSIFICATION	1.1571983493386126E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999997513390823	WITHOUT_CLASSIFICATION	2.4866091776225553E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.999998890940233	WITHOUT_CLASSIFICATION	1.1090597669845556E-6	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999058371848901	WITHOUT_CLASSIFICATION	9.416281510980783E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999998769383173	WITHOUT_CLASSIFICATION	1.2306168283827582E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999229357326	WITHOUT_CLASSIFICATION	7.706426744155855E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999994234570097	WITHOUT_CLASSIFICATION	5.765429902845132E-7	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.999999873141064	WITHOUT_CLASSIFICATION	1.268589360544379E-7	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999993346457	WITHOUT_CLASSIFICATION	6.653543276334036E-10	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999997709322951	WITHOUT_CLASSIFICATION	2.2906770488590375E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999997841021986	WITHOUT_CLASSIFICATION	2.1589780150361933E-7	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999387556204	WITHOUT_CLASSIFICATION	6.12443796331936E-8	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999855304741	WITHOUT_CLASSIFICATION	1.4469525827350326E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999096906672	WITHOUT_CLASSIFICATION	9.030933281945279E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999979621588869	WITHOUT_CLASSIFICATION	2.0378411131944764E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999723227238302	WITHOUT_CLASSIFICATION	2.7677276169849138E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999995922294308	WITHOUT_CLASSIFICATION	4.0777056911018925E-7	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9998157482085556	WITHOUT_CLASSIFICATION	1.8425179144437872E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999946717611853	WITHOUT_CLASSIFICATION	5.328238814773772E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999992462578012	WITHOUT_CLASSIFICATION	7.5374219880539685E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999992462578012	WITHOUT_CLASSIFICATION	7.5374219880539685E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999673778668	WITHOUT_CLASSIFICATION	3.262213312659807E-8	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999809822673261	WITHOUT_CLASSIFICATION	1.901773267391646E-5	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999557292325	WITHOUT_CLASSIFICATION	4.427076749760331E-8	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.999923215495119	WITHOUT_CLASSIFICATION	7.67845048810972E-5	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999998687826755	WITHOUT_CLASSIFICATION	1.3121732451419295E-7	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999996218634855	WITHOUT_CLASSIFICATION	3.781365145419136E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999999645110075	WITHOUT_CLASSIFICATION	3.548899252495364E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999999645110075	WITHOUT_CLASSIFICATION	3.548899252495364E-8	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999992455320205	WITHOUT_CLASSIFICATION	7.544679794335189E-7	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999977504429206	WITHOUT_CLASSIFICATION	2.2495570794747894E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999997315134905	WITHOUT_CLASSIFICATION	2.684865094411988E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999994218902115	WITHOUT_CLASSIFICATION	5.781097883692E-7	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999996321032947	WITHOUT_CLASSIFICATION	3.678967054355876E-7	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999964227478938	WITHOUT_CLASSIFICATION	3.5772521061491555E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999542790555	WITHOUT_CLASSIFICATION	4.5720944448583763E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999999481955829	WITHOUT_CLASSIFICATION	5.180441713493208E-8	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999997855308491	WITHOUT_CLASSIFICATION	2.1446915099873335E-7	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999994927826689	WITHOUT_CLASSIFICATION	5.07217331184801E-7	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999475227155274	WITHOUT_CLASSIFICATION	5.247728447251844E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.999999957645598	WITHOUT_CLASSIFICATION	4.235440195592768E-8	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.999988102807367	WITHOUT_CLASSIFICATION	1.1897192632981198E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999996716011443	WITHOUT_CLASSIFICATION	3.2839885563850527E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999982978939006	WITHOUT_CLASSIFICATION	1.7021060993554756E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.999996990372875	WITHOUT_CLASSIFICATION	3.009627124938392E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999997883263138	WITHOUT_CLASSIFICATION	2.1167368618799461E-7	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999999896899631	WITHOUT_CLASSIFICATION	1.0310037046234888E-8	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999994421147265	WITHOUT_CLASSIFICATION	5.578852734614508E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999937843310627	WITHOUT_CLASSIFICATION	6.2156689373599245E-6	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999997508806737	WITHOUT_CLASSIFICATION	2.491193263062644E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999051859321	WITHOUT_CLASSIFICATION	9.48140679606849E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.999999994956016	WITHOUT_CLASSIFICATION	5.0439839961245755E-9	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999996974736162	WITHOUT_CLASSIFICATION	3.0252638386693203E-7	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999998822570151	WITHOUT_CLASSIFICATION	1.1774298500420185E-7	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999995355772167	WITHOUT_CLASSIFICATION	4.644227834560551E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999996922488416	WITHOUT_CLASSIFICATION	3.0775115846058163E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999774709407163	WITHOUT_CLASSIFICATION	2.2529059283652857E-5	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999998569273763	WITHOUT_CLASSIFICATION	1.430726238451334E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.999999653745395	WITHOUT_CLASSIFICATION	3.4625460506409445E-7	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999997704530087	WITHOUT_CLASSIFICATION	2.29546991358646E-7	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999121469338145	WITHOUT_CLASSIFICATION	8.785306618551182E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999991498782903	WITHOUT_CLASSIFICATION	8.501217097104094E-7	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999943367588973	WITHOUT_CLASSIFICATION	5.663241102689854E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9999967843598342	WITHOUT_CLASSIFICATION	3.21564016584381E-6	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999789830644783	WITHOUT_CLASSIFICATION	2.1016935521711656E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999994720107725	WITHOUT_CLASSIFICATION	5.279892274296519E-7	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999994470531108	WITHOUT_CLASSIFICATION	5.529468891215333E-7	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.999999368150228	WITHOUT_CLASSIFICATION	6.31849772031953E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999614685110525	WITHOUT_CLASSIFICATION	3.8531488947580816E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999994607046714	WITHOUT_CLASSIFICATION	5.39295328528734E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999968767450476	WITHOUT_CLASSIFICATION	3.123254952393199E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999969117722177	WITHOUT_CLASSIFICATION	3.0882277823984897E-6	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999995995688752	WITHOUT_CLASSIFICATION	4.0043112482121755E-7	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9996980751142397	WITHOUT_CLASSIFICATION	3.0192488576030323E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999994607046714	WITHOUT_CLASSIFICATION	5.39295328528734E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999969117722177	WITHOUT_CLASSIFICATION	3.0882277823984897E-6	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.999870128089939	WITHOUT_CLASSIFICATION	1.2987191006100287E-4	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999972900241828	WITHOUT_CLASSIFICATION	2.70997581720752E-6	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999907224079789	WITHOUT_CLASSIFICATION	9.277592021062413E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999512415823	WITHOUT_CLASSIFICATION	4.875841769126074E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999614685110525	WITHOUT_CLASSIFICATION	3.8531488947580816E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999614685110525	WITHOUT_CLASSIFICATION	3.8531488947580816E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999994607046714	WITHOUT_CLASSIFICATION	5.39295328528734E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999996850306178	WITHOUT_CLASSIFICATION	3.1496938227446197E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999979213256758	WITHOUT_CLASSIFICATION	2.0786743241105633E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999996890713856	WITHOUT_CLASSIFICATION	3.10928614517107E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999996890713856	WITHOUT_CLASSIFICATION	3.10928614517107E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999991537357	WITHOUT_CLASSIFICATION	8.462643078305823E-9	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999975431502734	WITHOUT_CLASSIFICATION	2.456849726481702E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999977951816948	WITHOUT_CLASSIFICATION	2.204818305123257E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999977951816948	WITHOUT_CLASSIFICATION	2.204818305123257E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999996635516033	WITHOUT_CLASSIFICATION	3.364483967090518E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999975431502734	WITHOUT_CLASSIFICATION	2.456849726481702E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999977951816948	WITHOUT_CLASSIFICATION	2.204818305123257E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999996635516033	WITHOUT_CLASSIFICATION	3.364483967090518E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.999999577262957	WITHOUT_CLASSIFICATION	4.227370430599643E-7	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999986055252676	WITHOUT_CLASSIFICATION	1.394474732403742E-6	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999784743209	WITHOUT_CLASSIFICATION	2.1525679075955976E-8	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999999220723467	WITHOUT_CLASSIFICATION	7.792765333818725E-8	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999913478868204	WITHOUT_CLASSIFICATION	8.652113179647618E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999992671090877	WITHOUT_CLASSIFICATION	7.328909123858155E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999983330342055	WITHOUT_CLASSIFICATION	1.66696579447994E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.99999326539285	WITHOUT_CLASSIFICATION	6.734607149923959E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999995599121626	WITHOUT_CLASSIFICATION	4.400878374280153E-7	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999300515504069	WITHOUT_CLASSIFICATION	6.994844959304441E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999956578222088	WITHOUT_CLASSIFICATION	4.342177791269118E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999981751404744	WITHOUT_CLASSIFICATION	1.824859525642672E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999998677468646	WITHOUT_CLASSIFICATION	1.3225313545734395E-7	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.999999957665791	WITHOUT_CLASSIFICATION	4.2334209067785536E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999851250505	WITHOUT_CLASSIFICATION	1.487494949765894E-8	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999985128550395	WITHOUT_CLASSIFICATION	1.4871449604020003E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999999058295272	WITHOUT_CLASSIFICATION	9.417047269759495E-8	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999999663979605	WITHOUT_CLASSIFICATION	3.360203946725861E-8	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999996528401958	WITHOUT_CLASSIFICATION	3.471598041679945E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999993109438551	WITHOUT_CLASSIFICATION	6.890561449306981E-7	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.999999997851016	WITHOUT_CLASSIFICATION	2.1489839766602675E-9	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999999367469176	WITHOUT_CLASSIFICATION	6.325308248368491E-8	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999727376986	WITHOUT_CLASSIFICATION	2.726230148538571E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999530144693	WITHOUT_CLASSIFICATION	4.6985530648960775E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999999367536121	WITHOUT_CLASSIFICATION	6.324638795714614E-8	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999127771783	WITHOUT_CLASSIFICATION	8.722282183510852E-8	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999838376814	WITHOUT_CLASSIFICATION	1.616231865535765E-8	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999937692167117	WITHOUT_CLASSIFICATION	6.230783288262695E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999942998952	WITHOUT_CLASSIFICATION	5.700104894594706E-9	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999993057075478	WITHOUT_CLASSIFICATION	6.942924521304446E-7	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999988879871633	WITHOUT_CLASSIFICATION	1.1120128366979116E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999981553332637	WITHOUT_CLASSIFICATION	1.8446667361824269E-6	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999922364035266	WITHOUT_CLASSIFICATION	7.763596473446584E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.999999775826528	WITHOUT_CLASSIFICATION	2.241734720165981E-7	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999977352939471	WITHOUT_CLASSIFICATION	2.2647060529742078E-6	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999999149763189	WITHOUT_CLASSIFICATION	8.5023681109934E-8	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.999999998062619	WITHOUT_CLASSIFICATION	1.937381083998082E-9	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999816791625624	WITHOUT_CLASSIFICATION	1.8320837437591092E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999788768924005	WITHOUT_CLASSIFICATION	2.1123107599527098E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999788768924005	WITHOUT_CLASSIFICATION	2.1123107599527098E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999788768924005	WITHOUT_CLASSIFICATION	2.1123107599527098E-5	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999900913792604	WITHOUT_CLASSIFICATION	9.908620739563704E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999998034334819	WITHOUT_CLASSIFICATION	1.9656651793801078E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999899438615452	WITHOUT_CLASSIFICATION	1.0056138454828696E-5	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999993049443332	WITHOUT_CLASSIFICATION	6.950556666964098E-7	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999988096962935	WITHOUT_CLASSIFICATION	1.1903037064742666E-6	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9993787095724143	WITHOUT_CLASSIFICATION	6.212904275856212E-4	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999873078612	WITHOUT_CLASSIFICATION	1.2692138673113924E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999998579890474	WITHOUT_CLASSIFICATION	1.4201095250899552E-7	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999999438581634	WITHOUT_CLASSIFICATION	5.61418366451716E-8	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999975518846388	WITHOUT_CLASSIFICATION	2.448115361194532E-6	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999995560559259	WITHOUT_CLASSIFICATION	4.439440740543197E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9996105245105416	WITHOUT_CLASSIFICATION	3.8947548945838086E-4	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999999260320409	WITHOUT_CLASSIFICATION	7.396795908845719E-8	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999936326328015	WITHOUT_CLASSIFICATION	6.367367198433945E-6	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999705798459039	WITHOUT_CLASSIFICATION	2.942015409619516E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999989560162	WITHOUT_CLASSIFICATION	1.0439838410142453E-9	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9997381526671156	WITHOUT_CLASSIFICATION	2.6184733288438206E-4	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999973441737908	WITHOUT_CLASSIFICATION	2.655826209213041E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999988973196566	WITHOUT_CLASSIFICATION	1.1026803434366273E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999669953763272	WITHOUT_CLASSIFICATION	3.300462367282908E-5	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9996952121785896	WITHOUT_CLASSIFICATION	3.047878214104161E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999985214318354	WITHOUT_CLASSIFICATION	1.4785681645068694E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9998870044454276	WITHOUT_CLASSIFICATION	1.1299555457242266E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999983198356118	WITHOUT_CLASSIFICATION	1.6801643881375793E-6	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999998611737878	WITHOUT_CLASSIFICATION	1.3882621221946537E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.999994666365416	WITHOUT_CLASSIFICATION	5.3336345840625595E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999859428361	WITHOUT_CLASSIFICATION	1.4057163945785801E-8	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999991285336458	WITHOUT_CLASSIFICATION	8.714663541045376E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999999902847398	WITHOUT_CLASSIFICATION	9.715260148543587E-9	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999996716875481	WITHOUT_CLASSIFICATION	3.2831245190344307E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999975101029395	WITHOUT_CLASSIFICATION	2.4898970605634556E-6	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999998876738637	WITHOUT_CLASSIFICATION	1.1232613619159542E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9998855242516242	WITHOUT_CLASSIFICATION	1.1447574837572591E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999681616976033	WITHOUT_CLASSIFICATION	3.183830239675647E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9998458838581181	WITHOUT_CLASSIFICATION	1.541161418818236E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999927185727	WITHOUT_CLASSIFICATION	7.281427427991993E-9	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999601186398811	WITHOUT_CLASSIFICATION	3.9881360118995665E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999725135290327	WITHOUT_CLASSIFICATION	2.748647096727987E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999922850365774	WITHOUT_CLASSIFICATION	7.714963422553767E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999965306680745	WITHOUT_CLASSIFICATION	3.469331925616867E-6	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999638189067888	WITHOUT_CLASSIFICATION	3.6181093211317894E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999620488012798	WITHOUT_CLASSIFICATION	3.795119872009718E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999995922294308	WITHOUT_CLASSIFICATION	4.0777056911018925E-7	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998517734812828	WITHOUT_CLASSIFICATION	1.4822651871705214E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9983152109673715	WITHOUT_CLASSIFICATION	0.001684789032628425	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9997559593344769	WITHOUT_CLASSIFICATION	2.4404066552305773E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9998924329646394	WITHOUT_CLASSIFICATION	1.075670353605714E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999341366742249	WITHOUT_CLASSIFICATION	6.586332577505815E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.999568491379391	WITHOUT_CLASSIFICATION	4.3150862060899826E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999959476984376	WITHOUT_CLASSIFICATION	4.052301562376039E-6	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999843462665	WITHOUT_CLASSIFICATION	1.5653733487630892E-8	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999506082040512	WITHOUT_CLASSIFICATION	4.939179594880571E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999984280287345	WITHOUT_CLASSIFICATION	1.5719712654238576E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999906319917978	WITHOUT_CLASSIFICATION	9.368008202167746E-6	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999934995389247	WITHOUT_CLASSIFICATION	6.50046107537017E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999995476686373	WITHOUT_CLASSIFICATION	4.5233136269270025E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.999997364189114	WITHOUT_CLASSIFICATION	2.6358108860495376E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999953663839072	WITHOUT_CLASSIFICATION	4.633616092864153E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999997825368109	WITHOUT_CLASSIFICATION	2.174631890944061E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999999672979231	WITHOUT_CLASSIFICATION	3.270207693632134E-8	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999995036188601	WITHOUT_CLASSIFICATION	4.963811398327392E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999849989437702	WITHOUT_CLASSIFICATION	1.5001056229650628E-5	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999755668776258	WITHOUT_CLASSIFICATION	2.443312237432233E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999999413653038	WITHOUT_CLASSIFICATION	5.863469619573928E-8	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999974232564508	WITHOUT_CLASSIFICATION	2.5767435491827136E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999953915696632	WITHOUT_CLASSIFICATION	4.608430336876393E-6	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999988476930689	WITHOUT_CLASSIFICATION	1.1523069310791262E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998669521203	WITHOUT_CLASSIFICATION	1.3304787967030887E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998669521203	WITHOUT_CLASSIFICATION	1.3304787967030887E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999990014891875	WITHOUT_CLASSIFICATION	9.985108124623738E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999990014891875	WITHOUT_CLASSIFICATION	9.985108124623738E-7	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999953915696632	WITHOUT_CLASSIFICATION	4.608430336876393E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999990014891875	WITHOUT_CLASSIFICATION	9.985108124623738E-7	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999992941201498	WITHOUT_CLASSIFICATION	7.058798502289915E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999990917234803	WITHOUT_CLASSIFICATION	9.082765196166111E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999990917234803	WITHOUT_CLASSIFICATION	9.082765196166111E-7	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999963215870231	WITHOUT_CLASSIFICATION	3.678412976947019E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999999900481881	WITHOUT_CLASSIFICATION	9.951811888924545E-9	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999993414211	WITHOUT_CLASSIFICATION	6.585788570570168E-10	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9998026741547207	WITHOUT_CLASSIFICATION	1.973258452794371E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999989457993568	WITHOUT_CLASSIFICATION	1.0542006432201378E-6	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999981219825378	WITHOUT_CLASSIFICATION	1.8780174621017952E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999994211861696	WITHOUT_CLASSIFICATION	5.788138304360065E-7	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999534360937274	WITHOUT_CLASSIFICATION	4.656390627254529E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999288741832597	WITHOUT_CLASSIFICATION	7.112581674026538E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999945703800038	WITHOUT_CLASSIFICATION	5.429619996132478E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999737578045	WITHOUT_CLASSIFICATION	2.6242195508080806E-8	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999998064269381	WITHOUT_CLASSIFICATION	1.9357306188020053E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999948986709492	WITHOUT_CLASSIFICATION	5.10132905080215E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999899801341	WITHOUT_CLASSIFICATION	1.0019865892301144E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999996447196144	WITHOUT_CLASSIFICATION	3.5528038565394237E-7	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999968644272	WITHOUT_CLASSIFICATION	3.135572833070617E-9	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999999923521379	WITHOUT_CLASSIFICATION	7.647862170583728E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9999923629065504	WITHOUT_CLASSIFICATION	7.637093449598103E-6	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999988433215555	WITHOUT_CLASSIFICATION	1.1566784444563208E-6	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.99999985231873	WITHOUT_CLASSIFICATION	1.4768126996446695E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999898176032	WITHOUT_CLASSIFICATION	1.0182396881232206E-8	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999929300513001	WITHOUT_CLASSIFICATION	7.069948699990508E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999155326494	WITHOUT_CLASSIFICATION	8.446735057850964E-8	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999973440421017	WITHOUT_CLASSIFICATION	2.6559578982267368E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999973440421017	WITHOUT_CLASSIFICATION	2.6559578982267368E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999999184644212	WITHOUT_CLASSIFICATION	8.153557885264095E-8	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999999961342382	WITHOUT_CLASSIFICATION	3.865761864635597E-9	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999799781839878	WITHOUT_CLASSIFICATION	2.0021816012269803E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999992799125396	WITHOUT_CLASSIFICATION	7.200874604974242E-7	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.999999460360047	WITHOUT_CLASSIFICATION	5.396399529709045E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999907569649105	WITHOUT_CLASSIFICATION	9.243035089400508E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999998627418512	WITHOUT_CLASSIFICATION	1.3725814891405078E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999941983569359	WITHOUT_CLASSIFICATION	5.801643064067773E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999763250845357	WITHOUT_CLASSIFICATION	2.3674915464382595E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999716336173898	WITHOUT_CLASSIFICATION	2.8366382610106333E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999949171611238	WITHOUT_CLASSIFICATION	5.082838876218222E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999985894591092	WITHOUT_CLASSIFICATION	1.4105408907576474E-6	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999998876178166	WITHOUT_CLASSIFICATION	1.1238218351288727E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999953538852239	WITHOUT_CLASSIFICATION	4.646114776117403E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.999999998020795	WITHOUT_CLASSIFICATION	1.9792049513696596E-9	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999318846756	WITHOUT_CLASSIFICATION	6.81153243629324E-8	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999555859273475	WITHOUT_CLASSIFICATION	4.4414072652674945E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999900832272	WITHOUT_CLASSIFICATION	9.916772774722107E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999998426808964	WITHOUT_CLASSIFICATION	1.5731910358702854E-7	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999920370263352	WITHOUT_CLASSIFICATION	7.962973664784897E-6	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999994749237069	WITHOUT_CLASSIFICATION	5.250762931298771E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999996836110676	WITHOUT_CLASSIFICATION	3.16388932409622E-7	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.999999676009863	WITHOUT_CLASSIFICATION	3.2399013697364436E-7	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999964729074446	WITHOUT_CLASSIFICATION	3.527092555483748E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999998242685443	WITHOUT_CLASSIFICATION	1.7573145572250008E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.999999786823447	WITHOUT_CLASSIFICATION	2.1317655285071708E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999671142711	WITHOUT_CLASSIFICATION	3.288572888398561E-8	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999982711028874	WITHOUT_CLASSIFICATION	1.7288971125264972E-6	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999880889285	WITHOUT_CLASSIFICATION	1.1911071541794984E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999997382613965	WITHOUT_CLASSIFICATION	2.6173860352969256E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999984698854101	WITHOUT_CLASSIFICATION	1.5301145899696213E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999987191215552	WITHOUT_CLASSIFICATION	1.2808784447016703E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999965231425606	WITHOUT_CLASSIFICATION	3.47685743927689E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999872216498465	WITHOUT_CLASSIFICATION	1.2778350153486887E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9985322580559045	WITHOUT_CLASSIFICATION	0.0014677419440954158	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999950823374677	WITHOUT_CLASSIFICATION	4.917662532259003E-6	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999993848208724	WITHOUT_CLASSIFICATION	6.151791276339977E-7	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.999999071038365	WITHOUT_CLASSIFICATION	9.289616349720925E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999953616226238	WITHOUT_CLASSIFICATION	4.638377376182307E-6	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9999721738159165	WITHOUT_CLASSIFICATION	2.7826184083434288E-5	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999995089140713	WITHOUT_CLASSIFICATION	4.910859286661765E-7	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999997527898116	WITHOUT_CLASSIFICATION	2.4721018842363145E-7	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999993344578111	WITHOUT_CLASSIFICATION	6.655421889952634E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999996556482443	WITHOUT_CLASSIFICATION	3.443517556518241E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9998088695125702	WITHOUT_CLASSIFICATION	1.9113048742973386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999763250845357	WITHOUT_CLASSIFICATION	2.3674915464382595E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999716336173898	WITHOUT_CLASSIFICATION	2.8366382610106333E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999949171611238	WITHOUT_CLASSIFICATION	5.082838876218222E-6	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999988609327257	WITHOUT_CLASSIFICATION	1.1390672743071535E-6	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.999999928061803	WITHOUT_CLASSIFICATION	7.193819695421862E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999998589482967	WITHOUT_CLASSIFICATION	1.4105170328335337E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999996646878376	WITHOUT_CLASSIFICATION	3.353121624369645E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.999995691278684	WITHOUT_CLASSIFICATION	4.308721315940684E-6	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999943487003856	WITHOUT_CLASSIFICATION	5.651299614461875E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999935475874467	WITHOUT_CLASSIFICATION	6.452412553170834E-6	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999416144120971	WITHOUT_CLASSIFICATION	5.838558790299139E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999994064424128	WITHOUT_CLASSIFICATION	5.935575871644802E-7	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999986223513723	WITHOUT_CLASSIFICATION	1.3776486276678193E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999959179933962	WITHOUT_CLASSIFICATION	4.08200660382569E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999959179933962	WITHOUT_CLASSIFICATION	4.08200660382569E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999912130155976	WITHOUT_CLASSIFICATION	8.786984402347091E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99975773352977	WITHOUT_CLASSIFICATION	2.4226647023002033E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999707247337	WITHOUT_CLASSIFICATION	2.9275266260115365E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999989878302493	WITHOUT_CLASSIFICATION	1.0121697506399084E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999944155538321	WITHOUT_CLASSIFICATION	5.5844461678461306E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999495011619	WITHOUT_CLASSIFICATION	5.04988381085627E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999998819747896	WITHOUT_CLASSIFICATION	1.1802521031409882E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999950251884699	WITHOUT_CLASSIFICATION	4.974811529969135E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999992643785479	WITHOUT_CLASSIFICATION	7.356214520596566E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999992955439934	WITHOUT_CLASSIFICATION	7.044560065599049E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.999999852702181	WITHOUT_CLASSIFICATION	1.472978191445868E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960177413062	WITHOUT_CLASSIFICATION	3.9822586938143594E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999090840306	WITHOUT_CLASSIFICATION	9.09159693937587E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999555878377687	WITHOUT_CLASSIFICATION	4.4412162231348785E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999965098171496	WITHOUT_CLASSIFICATION	3.490182850386372E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996345028314005	WITHOUT_CLASSIFICATION	3.654971685993915E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999698752571874	WITHOUT_CLASSIFICATION	3.0124742812612386E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999993084666667	WITHOUT_CLASSIFICATION	6.915333333545989E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999748640267	WITHOUT_CLASSIFICATION	2.513597327982583E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999977466259912	WITHOUT_CLASSIFICATION	2.253374008796653E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999964722496832	WITHOUT_CLASSIFICATION	3.5277503168808936E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999973955405356	WITHOUT_CLASSIFICATION	2.6044594644834353E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999954553067975	WITHOUT_CLASSIFICATION	4.544693202604238E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998381759354312	WITHOUT_CLASSIFICATION	1.618240645688203E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989881468595	WITHOUT_CLASSIFICATION	1.011853140537943E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999961879896624	WITHOUT_CLASSIFICATION	3.8120103375745994E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990640836405	WITHOUT_CLASSIFICATION	9.359163594863728E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993983304873	WITHOUT_CLASSIFICATION	6.016695126063544E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999925178322245	WITHOUT_CLASSIFICATION	7.482167775498891E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999943152336325	WITHOUT_CLASSIFICATION	5.68476636751849E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999986564211105	WITHOUT_CLASSIFICATION	1.3435788895091027E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999992797407448	WITHOUT_CLASSIFICATION	7.202592552495993E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999997486319107	WITHOUT_CLASSIFICATION	2.5136808934427316E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998107136705	WITHOUT_CLASSIFICATION	1.8928632940679715E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993904143962	WITHOUT_CLASSIFICATION	6.095856038011569E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999794959946494	WITHOUT_CLASSIFICATION	2.0504005350653306E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999997181743135	WITHOUT_CLASSIFICATION	2.8182568650990024E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999880614196326	WITHOUT_CLASSIFICATION	1.1938580367423948E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999995043069586	WITHOUT_CLASSIFICATION	4.956930412909474E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999936683868583	WITHOUT_CLASSIFICATION	6.331613141716569E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999968887270297	WITHOUT_CLASSIFICATION	3.1112729701504383E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999978193403599	WITHOUT_CLASSIFICATION	2.1806596401029238E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999995835317932	WITHOUT_CLASSIFICATION	4.1646820681030483E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999777067222549	WITHOUT_CLASSIFICATION	2.2293277745076353E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992400737048	WITHOUT_CLASSIFICATION	7.599262951641299E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9995599410574681	WITHOUT_CLASSIFICATION	4.4005894253191374E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999912130155976	WITHOUT_CLASSIFICATION	8.786984402347091E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99975773352977	WITHOUT_CLASSIFICATION	2.4226647023002033E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999707247337	WITHOUT_CLASSIFICATION	2.9275266260115365E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999989878302493	WITHOUT_CLASSIFICATION	1.0121697506399084E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999998819747896	WITHOUT_CLASSIFICATION	1.1802521031409882E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999950251884699	WITHOUT_CLASSIFICATION	4.974811529969135E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.99941575918527	WITHOUT_CLASSIFICATION	5.842408147299302E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999894050386162	WITHOUT_CLASSIFICATION	1.0594961383729125E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999988395746754	WITHOUT_CLASSIFICATION	1.1604253245472387E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.999999852702181	WITHOUT_CLASSIFICATION	1.472978191445868E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960177413062	WITHOUT_CLASSIFICATION	3.9822586938143594E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999090840306	WITHOUT_CLASSIFICATION	9.09159693937587E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999555878377687	WITHOUT_CLASSIFICATION	4.4412162231348785E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996345028314005	WITHOUT_CLASSIFICATION	3.654971685993915E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999899192919919	WITHOUT_CLASSIFICATION	1.0080708008067464E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999856042032778	WITHOUT_CLASSIFICATION	1.4395796722262729E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999958320919645	WITHOUT_CLASSIFICATION	4.167908035405039E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9995225831478589	WITHOUT_CLASSIFICATION	4.77416852141021E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999988001742854	WITHOUT_CLASSIFICATION	1.1998257145242694E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999888180335024	WITHOUT_CLASSIFICATION	1.1181966497728663E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999994507484256	WITHOUT_CLASSIFICATION	5.492515744830266E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999987986639337	WITHOUT_CLASSIFICATION	1.2013360663763586E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999992616657682	WITHOUT_CLASSIFICATION	7.383342317907143E-7	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999997495013809	WITHOUT_CLASSIFICATION	2.504986190864792E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999992616657682	WITHOUT_CLASSIFICATION	7.383342317907143E-7	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9613519593362376	WITHOUT_CLASSIFICATION	0.03864804066376245	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999996022540343	WITHOUT_CLASSIFICATION	3.97745965688574E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999524481603841	WITHOUT_CLASSIFICATION	4.755183961590001E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999524481603841	WITHOUT_CLASSIFICATION	4.755183961590001E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999997562972951	WITHOUT_CLASSIFICATION	2.4370270488057694E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999998569230291	WITHOUT_CLASSIFICATION	1.43076970866104E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999999867903405	WITHOUT_CLASSIFICATION	1.3209659526657648E-8	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999978554712732	WITHOUT_CLASSIFICATION	2.1445287267845407E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9997669428799854	WITHOUT_CLASSIFICATION	2.330571200145131E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.999999950136867	WITHOUT_CLASSIFICATION	4.9863132891155996E-8	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999612900934407	WITHOUT_CLASSIFICATION	3.8709906559299436E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999798847024497	WITHOUT_CLASSIFICATION	2.011529755036077E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999984089778245	WITHOUT_CLASSIFICATION	1.5910221754165892E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999974827736996	WITHOUT_CLASSIFICATION	2.5172263004299085E-6	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.999999975513042	WITHOUT_CLASSIFICATION	2.4486957898816746E-8	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9994547187756523	WITHOUT_CLASSIFICATION	5.452812243476693E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999771558987252	WITHOUT_CLASSIFICATION	2.2844101274859454E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999771558987252	WITHOUT_CLASSIFICATION	2.2844101274859454E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999981607178101	WITHOUT_CLASSIFICATION	1.8392821897926356E-6	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999590993174363	WITHOUT_CLASSIFICATION	4.09006825638109E-5	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999988126759046	WITHOUT_CLASSIFICATION	1.18732409539729E-6	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999524126915966	WITHOUT_CLASSIFICATION	4.758730840344663E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999844090111116	WITHOUT_CLASSIFICATION	1.5590988888453818E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999868432525431	WITHOUT_CLASSIFICATION	1.3156747456964073E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999908680473961	WITHOUT_CLASSIFICATION	9.131952603886982E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999867473701208	WITHOUT_CLASSIFICATION	1.3252629879120758E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999996973085842	WITHOUT_CLASSIFICATION	3.0269141579502535E-7	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999432655406	WITHOUT_CLASSIFICATION	5.673445936437958E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999559374438604	WITHOUT_CLASSIFICATION	4.406255613964161E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999659888376193	WITHOUT_CLASSIFICATION	3.401116238072037E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999895904436501	WITHOUT_CLASSIFICATION	1.0409556349856323E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999954008984214	WITHOUT_CLASSIFICATION	4.599101578571908E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999992799125396	WITHOUT_CLASSIFICATION	7.200874604974242E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999995078523622	WITHOUT_CLASSIFICATION	4.921476377449986E-7	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9995687860146468	WITHOUT_CLASSIFICATION	4.3121398535324855E-4	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999996481538459	WITHOUT_CLASSIFICATION	3.5184615404141397E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999798095748	WITHOUT_CLASSIFICATION	2.0190425300143627E-8	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999928400439076	WITHOUT_CLASSIFICATION	7.159956092340551E-6	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9996798806981534	WITHOUT_CLASSIFICATION	3.201193018466432E-4	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999760112143941	WITHOUT_CLASSIFICATION	2.398878560588786E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999995804368208	WITHOUT_CLASSIFICATION	4.1956317924223085E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999948516458771	WITHOUT_CLASSIFICATION	5.148354122908046E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999982139199004	WITHOUT_CLASSIFICATION	1.7860800996931314E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999999776699028	WITHOUT_CLASSIFICATION	2.2330097197615425E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999999776699028	WITHOUT_CLASSIFICATION	2.2330097197615425E-7	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999974711410186	WITHOUT_CLASSIFICATION	2.528858981565856E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999981451775644	WITHOUT_CLASSIFICATION	1.8548224356847558E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999312548788	WITHOUT_CLASSIFICATION	6.87451211606376E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999771530025786	WITHOUT_CLASSIFICATION	2.284699742140793E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999483577610834	WITHOUT_CLASSIFICATION	5.164223891656464E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902591869068	WITHOUT_CLASSIFICATION	9.740813093128344E-6	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.999998193967224	WITHOUT_CLASSIFICATION	1.8060327760338028E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999657829676777	WITHOUT_CLASSIFICATION	3.4217032322403266E-5	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999999704183961	WITHOUT_CLASSIFICATION	2.9581603885119846E-8	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998218107497294	WITHOUT_CLASSIFICATION	1.781892502706394E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999998105697026	WITHOUT_CLASSIFICATION	1.894302974067368E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999996425445553	WITHOUT_CLASSIFICATION	3.574554447354025E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999997762530912	WITHOUT_CLASSIFICATION	2.2374690872886985E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999990398757478	WITHOUT_CLASSIFICATION	9.601242522526195E-7	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999845261431	WITHOUT_CLASSIFICATION	1.5473856815767426E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.99996829748513	WITHOUT_CLASSIFICATION	3.170251487004209E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999991825139	WITHOUT_CLASSIFICATION	8.174862163737086E-10	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9844010779142268	WITHOUT_CLASSIFICATION	0.015598922085773174	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9999972913331592	WITHOUT_CLASSIFICATION	2.708666840866294E-6	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999890294250827	WITHOUT_CLASSIFICATION	1.0970574917345366E-5	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999700586051586	WITHOUT_CLASSIFICATION	2.9941394841283875E-5	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999850949232	WITHOUT_CLASSIFICATION	1.4905076810269416E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999961879896624	WITHOUT_CLASSIFICATION	3.8120103375745994E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998378659786	WITHOUT_CLASSIFICATION	1.621340214283067E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999978193403599	WITHOUT_CLASSIFICATION	2.1806596401029238E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999888180335024	WITHOUT_CLASSIFICATION	1.1181966497728663E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999988332888542	WITHOUT_CLASSIFICATION	1.16671114578819E-6	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999985384456829	WITHOUT_CLASSIFICATION	1.4615543171105767E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999973955405356	WITHOUT_CLASSIFICATION	2.6044594644834353E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999994482698003	WITHOUT_CLASSIFICATION	5.517301996470528E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999994988812388	WITHOUT_CLASSIFICATION	5.01118761084086E-7	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999990970537659	WITHOUT_CLASSIFICATION	9.02946234106961E-6	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999359049246936	WITHOUT_CLASSIFICATION	6.409507530640921E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999978193403599	WITHOUT_CLASSIFICATION	2.1806596401029238E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999987783107051	WITHOUT_CLASSIFICATION	1.2216892948904786E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999855380360549	WITHOUT_CLASSIFICATION	1.446196394507857E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999946717611853	WITHOUT_CLASSIFICATION	5.328238814773772E-6	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999998077107014	WITHOUT_CLASSIFICATION	1.9228929849021625E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999999805545515	WITHOUT_CLASSIFICATION	1.9445448436879858E-8	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.995192101406779	WITHOUT_CLASSIFICATION	0.004807898593220909	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999410826769	WITHOUT_CLASSIFICATION	5.891732309290683E-8	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999996103632656	WITHOUT_CLASSIFICATION	3.8963673448548514E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999614685110525	WITHOUT_CLASSIFICATION	3.8531488947580816E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999999463293439	WITHOUT_CLASSIFICATION	5.3670656030551235E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999991537357	WITHOUT_CLASSIFICATION	8.462643078305823E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999991537357	WITHOUT_CLASSIFICATION	8.462643078305823E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999991537357	WITHOUT_CLASSIFICATION	8.462643078305823E-9	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999977951816948	WITHOUT_CLASSIFICATION	2.204818305123257E-6	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999805057210255	WITHOUT_CLASSIFICATION	1.949427897441793E-5	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999999419668839	WITHOUT_CLASSIFICATION	5.803311610745618E-8	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999828491212	WITHOUT_CLASSIFICATION	1.715087888868228E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.99999326539285	WITHOUT_CLASSIFICATION	6.734607149923959E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999848934024	WITHOUT_CLASSIFICATION	1.5106597583929444E-8	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999989826019605	WITHOUT_CLASSIFICATION	1.017398039460993E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999999622638431	WITHOUT_CLASSIFICATION	3.773615689530552E-8	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999998216562892	WITHOUT_CLASSIFICATION	1.7834371082263213E-7	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999982190461838	WITHOUT_CLASSIFICATION	1.7809538161225146E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999965897738	WITHOUT_CLASSIFICATION	3.4102263228211155E-9	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999998494057294	WITHOUT_CLASSIFICATION	1.5059427065192434E-7	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.999999866888811	WITHOUT_CLASSIFICATION	1.3311118899264943E-7	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999998688279575	WITHOUT_CLASSIFICATION	1.3117204254108832E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.999994913162115	WITHOUT_CLASSIFICATION	5.086837884960181E-6	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.999999999960599	WITHOUT_CLASSIFICATION	3.9400934483554306E-11	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999994812540275	WITHOUT_CLASSIFICATION	5.187459724886705E-7	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999994750484266	WITHOUT_CLASSIFICATION	5.249515733025442E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999431706356	WITHOUT_CLASSIFICATION	5.682936440969871E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999945174705436	WITHOUT_CLASSIFICATION	5.482529456406222E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999808431311	WITHOUT_CLASSIFICATION	1.9156868837458446E-8	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999788768924005	WITHOUT_CLASSIFICATION	2.1123107599527098E-5	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999871195234624	WITHOUT_CLASSIFICATION	1.2880476537572927E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999996531979571	WITHOUT_CLASSIFICATION	3.4680204285845037E-7	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999998763789559	WITHOUT_CLASSIFICATION	1.2362104408891354E-7	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999595814839	WITHOUT_CLASSIFICATION	4.041851620413655E-8	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.999998800633273	WITHOUT_CLASSIFICATION	1.1993667271109704E-6	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999851508548	WITHOUT_CLASSIFICATION	1.4849145248060955E-8	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999845472051855	WITHOUT_CLASSIFICATION	1.545279481450735E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999935086201	WITHOUT_CLASSIFICATION	6.491379810790053E-9	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9977905270053659	WITHOUT_CLASSIFICATION	0.0022094729946340757	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9998804779989385	WITHOUT_CLASSIFICATION	1.195220010614543E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999360277451	WITHOUT_CLASSIFICATION	6.397225498851389E-8	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999596142292	WITHOUT_CLASSIFICATION	4.038577085042003E-8	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999021062499	WITHOUT_CLASSIFICATION	9.789375010528881E-8	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9992154816235614	WITHOUT_CLASSIFICATION	7.845183764385845E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999909230313931	WITHOUT_CLASSIFICATION	9.076968606904742E-5	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999005218403402	WITHOUT_CLASSIFICATION	9.947815965974835E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999990014891875	WITHOUT_CLASSIFICATION	9.985108124623738E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999990014891875	WITHOUT_CLASSIFICATION	9.985108124623738E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999948986709492	WITHOUT_CLASSIFICATION	5.10132905080215E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999948986709492	WITHOUT_CLASSIFICATION	5.10132905080215E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999906210323	WITHOUT_CLASSIFICATION	9.378967789584632E-9	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999995451186859	WITHOUT_CLASSIFICATION	4.5488131408415194E-7	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999998052489686	WITHOUT_CLASSIFICATION	1.9475103140652767E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999990919477145	WITHOUT_CLASSIFICATION	9.080522853734472E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999990919477145	WITHOUT_CLASSIFICATION	9.080522853734472E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999990919477145	WITHOUT_CLASSIFICATION	9.080522853734472E-7	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999895903033424	WITHOUT_CLASSIFICATION	1.0409696657532902E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999992094096	WITHOUT_CLASSIFICATION	7.905904328015273E-10	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999985894591092	WITHOUT_CLASSIFICATION	1.4105408907576474E-6	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999943921414549	WITHOUT_CLASSIFICATION	5.60785854515665E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999996802556484	WITHOUT_CLASSIFICATION	3.197443515438922E-7	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999997588515243	WITHOUT_CLASSIFICATION	2.4114847581843154E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999987955591157	WITHOUT_CLASSIFICATION	1.2044408842151342E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999505539429518	WITHOUT_CLASSIFICATION	4.944605704824829E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999505539429518	WITHOUT_CLASSIFICATION	4.944605704824829E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999689171358	WITHOUT_CLASSIFICATION	3.10828642518473E-8	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999967595820547	WITHOUT_CLASSIFICATION	3.2404179453369037E-6	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999817808718038	WITHOUT_CLASSIFICATION	1.8219128196136154E-5	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.999998288498424	WITHOUT_CLASSIFICATION	1.7115015759452906E-6	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999997033882299	WITHOUT_CLASSIFICATION	2.966117701949552E-7	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9998783842241277	WITHOUT_CLASSIFICATION	1.2161577587234262E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999987551367558	WITHOUT_CLASSIFICATION	1.2448632441821697E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999959179933962	WITHOUT_CLASSIFICATION	4.08200660382569E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999944155538321	WITHOUT_CLASSIFICATION	5.5844461678461306E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999495011619	WITHOUT_CLASSIFICATION	5.04988381085627E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999992955439934	WITHOUT_CLASSIFICATION	7.044560065599049E-7	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999965098171496	WITHOUT_CLASSIFICATION	3.490182850386372E-5	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999999530159853	WITHOUT_CLASSIFICATION	4.698401474804958E-8	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999742366015212	WITHOUT_CLASSIFICATION	2.57633984788541E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999996254635654	WITHOUT_CLASSIFICATION	3.7453643456617085E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999994507484256	WITHOUT_CLASSIFICATION	5.492515744830266E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999936245701574	WITHOUT_CLASSIFICATION	6.375429842497065E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.999999993776817	WITHOUT_CLASSIFICATION	6.223183024506836E-9	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999981607178101	WITHOUT_CLASSIFICATION	1.8392821897926356E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999578524524	WITHOUT_CLASSIFICATION	4.2147547452294834E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.999996880140264	WITHOUT_CLASSIFICATION	3.1198597359310177E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999940138672053	WITHOUT_CLASSIFICATION	5.986132794736203E-6	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999388430143359	WITHOUT_CLASSIFICATION	6.115698566412966E-5	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.999999997016431	WITHOUT_CLASSIFICATION	2.9835689152550856E-9	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999954437392722	WITHOUT_CLASSIFICATION	4.556260727834494E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999969973946392	WITHOUT_CLASSIFICATION	3.0026053608397737E-6	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999999754151467	WITHOUT_CLASSIFICATION	2.4584853222775582E-8	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999997463236562	WITHOUT_CLASSIFICATION	2.536763438043232E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999994763723593	WITHOUT_CLASSIFICATION	5.23627640683462E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999994763723593	WITHOUT_CLASSIFICATION	5.23627640683462E-7	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999982412404	WITHOUT_CLASSIFICATION	1.7587595168686968E-9	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999232278516144	WITHOUT_CLASSIFICATION	7.677214838567135E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999834082901	WITHOUT_CLASSIFICATION	1.659170989169096E-7	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999117061969958	WITHOUT_CLASSIFICATION	8.829380300428832E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999117061969958	WITHOUT_CLASSIFICATION	8.829380300428832E-5	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9997134324088573	WITHOUT_CLASSIFICATION	2.865675911426533E-4	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9763437147421034	WITHOUT_CLASSIFICATION	0.02365628525789666	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999938564190314	WITHOUT_CLASSIFICATION	6.143580968689053E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.999999915085063	WITHOUT_CLASSIFICATION	8.491493704997077E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999894522977919	WITHOUT_CLASSIFICATION	1.0547702208014574E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.999999729000654	WITHOUT_CLASSIFICATION	2.709993459030083E-7	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999854560532	WITHOUT_CLASSIFICATION	1.4543946937610363E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999997920849877	WITHOUT_CLASSIFICATION	2.0791501232032942E-7	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999998419309676	WITHOUT_CLASSIFICATION	1.580690323618296E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999902123255723	WITHOUT_CLASSIFICATION	9.787674427790702E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999996094823095	WITHOUT_CLASSIFICATION	3.905176904641401E-7	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999960521028526	WITHOUT_CLASSIFICATION	3.947897147409865E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999815811560643	WITHOUT_CLASSIFICATION	1.841884393569494E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999947916071	WITHOUT_CLASSIFICATION	5.208392933975259E-9	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999969898100464	WITHOUT_CLASSIFICATION	3.010189953617705E-6	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999987799377601	WITHOUT_CLASSIFICATION	1.2200622398141527E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999780115627	WITHOUT_CLASSIFICATION	2.1988437253595942E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999997885076148	WITHOUT_CLASSIFICATION	2.1149238508968876E-7	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999933195625	WITHOUT_CLASSIFICATION	6.680437595651605E-9	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999045051474	WITHOUT_CLASSIFICATION	9.5494852545047E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999795050818036	WITHOUT_CLASSIFICATION	2.0494918196490636E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.999987645256042	WITHOUT_CLASSIFICATION	1.2354743958026923E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999834747922847	WITHOUT_CLASSIFICATION	1.6525207715330537E-5	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9997919529639002	WITHOUT_CLASSIFICATION	2.080470360998789E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999576161571	WITHOUT_CLASSIFICATION	4.238384293097517E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999576161571	WITHOUT_CLASSIFICATION	4.238384293097517E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999576161571	WITHOUT_CLASSIFICATION	4.238384293097517E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999576161571	WITHOUT_CLASSIFICATION	4.238384293097517E-8	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999983474642095	WITHOUT_CLASSIFICATION	1.652535790505983E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999997412624099	WITHOUT_CLASSIFICATION	2.5873759020563513E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999959346380558	WITHOUT_CLASSIFICATION	4.065361944164159E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999959346380558	WITHOUT_CLASSIFICATION	4.065361944164159E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999959346380558	WITHOUT_CLASSIFICATION	4.065361944164159E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999801718171872	WITHOUT_CLASSIFICATION	1.9828182812789213E-5	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999956128376339	WITHOUT_CLASSIFICATION	4.387162366075862E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999985578841906	WITHOUT_CLASSIFICATION	1.4421158094471622E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999957277006322	WITHOUT_CLASSIFICATION	4.2722993677528095E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999957277006322	WITHOUT_CLASSIFICATION	4.2722993677528095E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999798095748	WITHOUT_CLASSIFICATION	2.0190425300143627E-8	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999798095748	WITHOUT_CLASSIFICATION	2.0190425300143627E-8	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9992963459193133	WITHOUT_CLASSIFICATION	7.036540806868395E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9992963459193133	WITHOUT_CLASSIFICATION	7.036540806868395E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998382911791948	WITHOUT_CLASSIFICATION	1.6170882080533415E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999964378605437	WITHOUT_CLASSIFICATION	3.5621394562502293E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999941171342227	WITHOUT_CLASSIFICATION	5.8828657772989746E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999986794828337	WITHOUT_CLASSIFICATION	1.320517166300165E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.999998027214726	WITHOUT_CLASSIFICATION	1.9727852740211052E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.999993757407598	WITHOUT_CLASSIFICATION	6.242592401948068E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999780467307327	WITHOUT_CLASSIFICATION	2.1953269267340272E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999992409568441	WITHOUT_CLASSIFICATION	7.590431560116732E-7	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999997206810706	WITHOUT_CLASSIFICATION	2.7931892947365947E-7	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999865292511696	WITHOUT_CLASSIFICATION	1.347074883037807E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999880378657973	WITHOUT_CLASSIFICATION	1.196213420278128E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999995465244206	WITHOUT_CLASSIFICATION	4.5347557939679477E-7	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999997869862038	WITHOUT_CLASSIFICATION	2.1301379610086535E-7	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999998201810024	WITHOUT_CLASSIFICATION	1.798189975970381E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999905847271442	WITHOUT_CLASSIFICATION	9.415272855766336E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999582080628737	WITHOUT_CLASSIFICATION	4.179193712636247E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999989642368697	WITHOUT_CLASSIFICATION	1.0357631302940307E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999992575084212	WITHOUT_CLASSIFICATION	7.424915788508839E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999268521602659	WITHOUT_CLASSIFICATION	7.314783973410848E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999981840438089	WITHOUT_CLASSIFICATION	1.8159561910028764E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950859859399	WITHOUT_CLASSIFICATION	4.91401406006074E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950859859399	WITHOUT_CLASSIFICATION	4.91401406006074E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999683640816659	WITHOUT_CLASSIFICATION	3.16359183342179E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999992638541599	WITHOUT_CLASSIFICATION	7.361458400947612E-7	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.998972461319905	WITHOUT_CLASSIFICATION	0.0010275386800949122	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9989053814756802	WITHOUT_CLASSIFICATION	0.0010946185243197232	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9982419772182557	WITHOUT_CLASSIFICATION	0.0017580227817443012	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9994030805703147	WITHOUT_CLASSIFICATION	5.96919429685321E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9992750835163658	WITHOUT_CLASSIFICATION	7.249164836340447E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9974241123728873	WITHOUT_CLASSIFICATION	0.0025758876271127756	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9990476060058596	WITHOUT_CLASSIFICATION	9.523939941404053E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9980128307542414	WITHOUT_CLASSIFICATION	0.001987169245758625	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9990987109192186	WITHOUT_CLASSIFICATION	9.012890807814416E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9990135508019752	WITHOUT_CLASSIFICATION	9.86449198024821E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9989802645051924	WITHOUT_CLASSIFICATION	0.0010197354948076392	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9977704897576084	WITHOUT_CLASSIFICATION	0.0022295102423915154	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9990842959132491	WITHOUT_CLASSIFICATION	9.157040867509775E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9979743249755798	WITHOUT_CLASSIFICATION	0.0020256750244201475	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999229665027358	WITHOUT_CLASSIFICATION	7.703349726414172E-5	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999860823507566	WITHOUT_CLASSIFICATION	1.3917649243342696E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999990634543154	WITHOUT_CLASSIFICATION	9.365456845829148E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999981749032938	WITHOUT_CLASSIFICATION	1.825096706255931E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999900378209338	WITHOUT_CLASSIFICATION	9.962179066122467E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999900378209338	WITHOUT_CLASSIFICATION	9.962179066122467E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999900378209338	WITHOUT_CLASSIFICATION	9.962179066122467E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999900378209338	WITHOUT_CLASSIFICATION	9.962179066122467E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9912211015288316	WITHOUT_CLASSIFICATION	0.0087788984711685	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999884219074	WITHOUT_CLASSIFICATION	1.1578092539651481E-8	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999993954971338	WITHOUT_CLASSIFICATION	6.045028661971391E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999941183141994	WITHOUT_CLASSIFICATION	5.881685800584708E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999941183141994	WITHOUT_CLASSIFICATION	5.881685800584708E-6	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999985264766766	WITHOUT_CLASSIFICATION	1.4735233233741795E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999999274922954	WITHOUT_CLASSIFICATION	7.250770459852287E-8	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999999274922954	WITHOUT_CLASSIFICATION	7.250770459852287E-8	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999967347010525	WITHOUT_CLASSIFICATION	3.265298947326611E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999967347010525	WITHOUT_CLASSIFICATION	3.265298947326611E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999986051305559	WITHOUT_CLASSIFICATION	1.394869444120832E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999983808148657	WITHOUT_CLASSIFICATION	1.619185134215671E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999957875154727	WITHOUT_CLASSIFICATION	4.2124845272349265E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999997453535078	WITHOUT_CLASSIFICATION	2.5464649217257756E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998724766226	WITHOUT_CLASSIFICATION	1.2752337739552046E-7	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999671796912	WITHOUT_CLASSIFICATION	3.282030880662884E-8	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999665798217	WITHOUT_CLASSIFICATION	3.3420178355896915E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999998870784689	WITHOUT_CLASSIFICATION	1.1292153118605461E-7	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9959733986894088	WITHOUT_CLASSIFICATION	0.00402660131059113	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9959733986894088	WITHOUT_CLASSIFICATION	0.00402660131059113	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999956682225232	WITHOUT_CLASSIFICATION	4.3317774767987925E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999995952910044	WITHOUT_CLASSIFICATION	4.04708995627283E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999914307691818	WITHOUT_CLASSIFICATION	8.569230818108547E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999201081531	WITHOUT_CLASSIFICATION	7.989184682552433E-8	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999976901829337	WITHOUT_CLASSIFICATION	2.3098170662732217E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999998873959003	WITHOUT_CLASSIFICATION	1.1260409976344409E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999998873959003	WITHOUT_CLASSIFICATION	1.1260409976344409E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999998873959003	WITHOUT_CLASSIFICATION	1.1260409976344409E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999997699580717	WITHOUT_CLASSIFICATION	2.3004192835984508E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999997699580717	WITHOUT_CLASSIFICATION	2.3004192835984508E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999823286652	WITHOUT_CLASSIFICATION	1.767133484862809E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999874383244	WITHOUT_CLASSIFICATION	1.2561675660912364E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999874383244	WITHOUT_CLASSIFICATION	1.2561675660912364E-8	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999985628072	WITHOUT_CLASSIFICATION	1.4371927809961813E-9	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999994536301354	WITHOUT_CLASSIFICATION	5.46369864486853E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999771530025786	WITHOUT_CLASSIFICATION	2.284699742140793E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999593842172	WITHOUT_CLASSIFICATION	4.0615782800053555E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998824308606534	WITHOUT_CLASSIFICATION	1.1756913934664448E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998824308606534	WITHOUT_CLASSIFICATION	1.1756913934664448E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999804455839029	WITHOUT_CLASSIFICATION	1.955441609717925E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999846360762256	WITHOUT_CLASSIFICATION	1.5363923774496122E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999698918697185	WITHOUT_CLASSIFICATION	3.010813028152472E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999799060977937	WITHOUT_CLASSIFICATION	2.0093902206279373E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999722058702614	WITHOUT_CLASSIFICATION	2.7794129738577447E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999823959485684	WITHOUT_CLASSIFICATION	1.7604051431660884E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999853415117688	WITHOUT_CLASSIFICATION	1.4658488231261996E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999940751474777	WITHOUT_CLASSIFICATION	5.924852522230206E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999713217865498	WITHOUT_CLASSIFICATION	2.867821345017494E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999768937934417	WITHOUT_CLASSIFICATION	2.3106206558247542E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999021615469	WITHOUT_CLASSIFICATION	9.783845309969495E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999862567353676	WITHOUT_CLASSIFICATION	1.3743264632342288E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.999999434578246	WITHOUT_CLASSIFICATION	5.654217539680547E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9982229728244206	WITHOUT_CLASSIFICATION	0.001777027175579331	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.999999399119572	WITHOUT_CLASSIFICATION	6.008804280404233E-7	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999990916667196	WITHOUT_CLASSIFICATION	9.0833328034149E-7	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9998412593131997	WITHOUT_CLASSIFICATION	1.5874068680036283E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9994521510779151	WITHOUT_CLASSIFICATION	5.478489220848493E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999952091708967	WITHOUT_CLASSIFICATION	4.79082910330291E-6	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999990137885418	WITHOUT_CLASSIFICATION	9.862114581962036E-7	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999965885466673	WITHOUT_CLASSIFICATION	3.4114533328070708E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.999983924926778	WITHOUT_CLASSIFICATION	1.607507322203926E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999981553179067	WITHOUT_CLASSIFICATION	1.8446820932740637E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999991573856151	WITHOUT_CLASSIFICATION	8.426143850354334E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999952320983784	WITHOUT_CLASSIFICATION	4.767901621607107E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.999999958980577	WITHOUT_CLASSIFICATION	4.101942288731125E-8	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999990148190208	WITHOUT_CLASSIFICATION	9.851809792066397E-7	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999881406970906	WITHOUT_CLASSIFICATION	1.1859302909413311E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999988243268795	WITHOUT_CLASSIFICATION	1.1756731204954272E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999999658820737	WITHOUT_CLASSIFICATION	3.411792633886244E-8	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999996376724094	WITHOUT_CLASSIFICATION	3.623275905493741E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999998213930884	WITHOUT_CLASSIFICATION	1.7860691151425461E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999997464729441	WITHOUT_CLASSIFICATION	2.535270559318315E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.999998806887549	WITHOUT_CLASSIFICATION	1.1931124509302884E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999881165261978	WITHOUT_CLASSIFICATION	1.1883473802125952E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999841989064091	WITHOUT_CLASSIFICATION	1.5801093590907864E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999997759063438	WITHOUT_CLASSIFICATION	2.240936560534291E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999990907714205	WITHOUT_CLASSIFICATION	9.09228579660583E-7	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999907689606038	WITHOUT_CLASSIFICATION	9.231039396194965E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999992526316702	WITHOUT_CLASSIFICATION	7.473683298010459E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997539953313	WITHOUT_CLASSIFICATION	2.4600466870436396E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999849495589627	WITHOUT_CLASSIFICATION	1.5050441037444155E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999661820111129	WITHOUT_CLASSIFICATION	3.3817988887140744E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999915246390862	WITHOUT_CLASSIFICATION	8.475360913789968E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999977033847763	WITHOUT_CLASSIFICATION	2.296615223673624E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999898302652652	WITHOUT_CLASSIFICATION	1.0169734734753241E-5	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999986139262163	WITHOUT_CLASSIFICATION	1.386073783796979E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999972797928065	WITHOUT_CLASSIFICATION	2.7202071934651553E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999442066456179	WITHOUT_CLASSIFICATION	5.5793354382047815E-5	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999984364786537	WITHOUT_CLASSIFICATION	1.5635213462658301E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999442066456179	WITHOUT_CLASSIFICATION	5.5793354382047815E-5	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.999997917932192	WITHOUT_CLASSIFICATION	2.0820678080765435E-6	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999997028306817	WITHOUT_CLASSIFICATION	2.971693182313839E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999938208721854	WITHOUT_CLASSIFICATION	6.179127814647181E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999847976016786	WITHOUT_CLASSIFICATION	1.5202398321543908E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.99998597642991	WITHOUT_CLASSIFICATION	1.4023570090068788E-5	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999968290974436	WITHOUT_CLASSIFICATION	3.170902556487983E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999579708928	WITHOUT_CLASSIFICATION	4.2029107223713667E-8	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999964321462668	WITHOUT_CLASSIFICATION	3.567853733228613E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9994521510779151	WITHOUT_CLASSIFICATION	5.478489220848493E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999903437522348	WITHOUT_CLASSIFICATION	9.656247765223576E-6	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999817979047247	WITHOUT_CLASSIFICATION	1.8202095275298267E-5	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999998740276416	WITHOUT_CLASSIFICATION	1.259723584724493E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999169880253	WITHOUT_CLASSIFICATION	8.301197474652389E-8	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999911952807071	WITHOUT_CLASSIFICATION	8.804719292933727E-6	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999592439784168	WITHOUT_CLASSIFICATION	4.075602158316029E-5	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998974688787972	WITHOUT_CLASSIFICATION	1.0253112120280219E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999993066037721	WITHOUT_CLASSIFICATION	6.933962278756369E-7	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999998900593089	WITHOUT_CLASSIFICATION	1.0994069112927484E-7	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999996599869492	WITHOUT_CLASSIFICATION	3.400130508015764E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999467783759	WITHOUT_CLASSIFICATION	5.322162417443703E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.999999345922756	WITHOUT_CLASSIFICATION	6.540772439286268E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999986677832216	WITHOUT_CLASSIFICATION	1.3322167783776463E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999952386499673	WITHOUT_CLASSIFICATION	4.761350032702806E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.999995875749295	WITHOUT_CLASSIFICATION	4.1242507049704935E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999971609074588	WITHOUT_CLASSIFICATION	2.839092541267655E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998650095094	WITHOUT_CLASSIFICATION	1.349904905463511E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998805269396286	WITHOUT_CLASSIFICATION	1.1947306037138743E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998805269396286	WITHOUT_CLASSIFICATION	1.1947306037138743E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999810232470696	WITHOUT_CLASSIFICATION	1.897675293036132E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9840524390221955	WITHOUT_CLASSIFICATION	0.015947560977804528	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9952618730365878	WITHOUT_CLASSIFICATION	0.004738126963412334	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999859953292429	WITHOUT_CLASSIFICATION	1.4004670757129571E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996131452356	WITHOUT_CLASSIFICATION	3.8685476448645274E-7	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999567121432822	WITHOUT_CLASSIFICATION	4.328785671771703E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9990004157126386	WITHOUT_CLASSIFICATION	9.995842873613625E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999985741770838	WITHOUT_CLASSIFICATION	1.4258229162767512E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989044311164	WITHOUT_CLASSIFICATION	1.0955688836127847E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9976565619792022	WITHOUT_CLASSIFICATION	0.0023434380207979335	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999067808821049	WITHOUT_CLASSIFICATION	9.321911789506315E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999990476230438	WITHOUT_CLASSIFICATION	9.523769561952246E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999864564900302	WITHOUT_CLASSIFICATION	1.3543509969786324E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999904953349411	WITHOUT_CLASSIFICATION	9.504665058874489E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994397401378	WITHOUT_CLASSIFICATION	5.602598622065606E-7	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999965982755153	WITHOUT_CLASSIFICATION	3.4017244846537543E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995488577924	WITHOUT_CLASSIFICATION	4.511422075300847E-7	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999875750821501	WITHOUT_CLASSIFICATION	1.2424917849825817E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999981191016957	WITHOUT_CLASSIFICATION	1.8808983043818366E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996131452356	WITHOUT_CLASSIFICATION	3.8685476448645274E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995488577924	WITHOUT_CLASSIFICATION	4.511422075300847E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999985741770838	WITHOUT_CLASSIFICATION	1.4258229162767512E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989044311164	WITHOUT_CLASSIFICATION	1.0955688836127847E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999999285476359	WITHOUT_CLASSIFICATION	7.145236420581063E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999993166778803	WITHOUT_CLASSIFICATION	6.833221195821051E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.999995050270582	WITHOUT_CLASSIFICATION	4.949729418073717E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998616494108	WITHOUT_CLASSIFICATION	1.38350589201909E-7	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997715720013	WITHOUT_CLASSIFICATION	2.284279986627116E-7	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999691400677697	WITHOUT_CLASSIFICATION	3.085993223029868E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999691400677697	WITHOUT_CLASSIFICATION	3.085993223029868E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999920427370282	WITHOUT_CLASSIFICATION	7.957262971868397E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999383652989	WITHOUT_CLASSIFICATION	6.163470109413516E-7	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997500614874	WITHOUT_CLASSIFICATION	2.499385125603864E-7	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995705234324	WITHOUT_CLASSIFICATION	4.2947656753046687E-7	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999983769169684	WITHOUT_CLASSIFICATION	1.623083031539511E-6	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999995693394957	WITHOUT_CLASSIFICATION	4.3066050428757213E-7	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999988659019085	WITHOUT_CLASSIFICATION	1.1340980915948382E-6	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996999116059	WITHOUT_CLASSIFICATION	3.000883941288344E-7	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999995832459758	WITHOUT_CLASSIFICATION	4.167540241752579E-7	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989025231023	WITHOUT_CLASSIFICATION	1.0974768977234155E-6	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997096017766	WITHOUT_CLASSIFICATION	2.9039822340120406E-7	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998466164328	WITHOUT_CLASSIFICATION	1.5338356724453088E-7	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999995575951964	WITHOUT_CLASSIFICATION	4.4240480369132743E-7	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990039374291	WITHOUT_CLASSIFICATION	9.960625708426443E-7	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997364365665	WITHOUT_CLASSIFICATION	2.635634335416511E-7	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997316247069	WITHOUT_CLASSIFICATION	2.6837529319602073E-7	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999991619175966	WITHOUT_CLASSIFICATION	8.380824033609666E-7	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998356634224	WITHOUT_CLASSIFICATION	1.643365775606561E-7	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995819499372	WITHOUT_CLASSIFICATION	4.180500627539568E-7	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999991306556976	WITHOUT_CLASSIFICATION	8.693443024709379E-7	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999972852149533	WITHOUT_CLASSIFICATION	2.7147850467460704E-6	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992816525854	WITHOUT_CLASSIFICATION	7.183474146771096E-7	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997709901622	WITHOUT_CLASSIFICATION	2.290098378630032E-7	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999994352629695	WITHOUT_CLASSIFICATION	5.647370304309482E-7	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999985128261314	WITHOUT_CLASSIFICATION	1.4871738685721926E-6	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999606485773	WITHOUT_CLASSIFICATION	3.935142270280412E-7	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989534093447	WITHOUT_CLASSIFICATION	1.0465906551842135E-6	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999970859491315	WITHOUT_CLASSIFICATION	2.9140508685486294E-6	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999865931014463	WITHOUT_CLASSIFICATION	1.3406898553666274E-5	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999982771741718	WITHOUT_CLASSIFICATION	1.7228258281681637E-6	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999462458153109	WITHOUT_CLASSIFICATION	5.375418468898975E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.999997132506205	WITHOUT_CLASSIFICATION	2.867493794916868E-6	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997947436557	WITHOUT_CLASSIFICATION	2.052563443593836E-7	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995378706988	WITHOUT_CLASSIFICATION	4.6212930107377083E-7	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998777181864	WITHOUT_CLASSIFICATION	1.2228181348387535E-7	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998526345452	WITHOUT_CLASSIFICATION	1.4736545478778164E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996682105016	WITHOUT_CLASSIFICATION	3.317894984925177E-7	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999122067837	WITHOUT_CLASSIFICATION	8.779321628695907E-8	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997105420142	WITHOUT_CLASSIFICATION	2.894579858013887E-7	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990960806016	WITHOUT_CLASSIFICATION	9.039193983416433E-7	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997608181543	WITHOUT_CLASSIFICATION	2.39181845701456E-7	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998128025027	WITHOUT_CLASSIFICATION	1.8719749732544693E-7	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999578529712	WITHOUT_CLASSIFICATION	4.2147028793140665E-7	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999994724019264	WITHOUT_CLASSIFICATION	5.275980735698109E-7	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999990295591046	WITHOUT_CLASSIFICATION	9.704408954409379E-7	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999952637209173	WITHOUT_CLASSIFICATION	4.736279082690528E-6	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999987497485733	WITHOUT_CLASSIFICATION	1.2502514267304227E-6	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999990475816738	WITHOUT_CLASSIFICATION	9.524183261397653E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999998498428766	WITHOUT_CLASSIFICATION	1.5015712345161902E-7	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999990298037339	WITHOUT_CLASSIFICATION	9.70196266122658E-7	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999884634704	WITHOUT_CLASSIFICATION	1.1536529676922308E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999243669839	WITHOUT_CLASSIFICATION	7.563301607483961E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.999989457394912	WITHOUT_CLASSIFICATION	1.0542605087996213E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999914444004074	WITHOUT_CLASSIFICATION	8.5555995924666E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999990476230438	WITHOUT_CLASSIFICATION	9.523769561952246E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999995922068089	WITHOUT_CLASSIFICATION	4.0779319104016017E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999996517213813	WITHOUT_CLASSIFICATION	3.4827861873777216E-7	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999985019755077	WITHOUT_CLASSIFICATION	1.4980244923521224E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999955954171799	WITHOUT_CLASSIFICATION	4.404582820076204E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999996088536599	WITHOUT_CLASSIFICATION	3.9114633998318027E-7	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999983059317408	WITHOUT_CLASSIFICATION	1.6940682592809134E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999996661476015	WITHOUT_CLASSIFICATION	3.3385239847694043E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999067808821049	WITHOUT_CLASSIFICATION	9.321911789506315E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999904208720528	WITHOUT_CLASSIFICATION	9.579127947111088E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.999999940852533	WITHOUT_CLASSIFICATION	5.9147467025386583E-8	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999921813330859	WITHOUT_CLASSIFICATION	7.818666914002029E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999946002729722	WITHOUT_CLASSIFICATION	5.399727027866878E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999916663017344	WITHOUT_CLASSIFICATION	8.333698265629469E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996284531657	WITHOUT_CLASSIFICATION	3.7154683429576643E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999861921771782	WITHOUT_CLASSIFICATION	1.3807822821756914E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.99999363240591	WITHOUT_CLASSIFICATION	6.367594090017024E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999967099179584	WITHOUT_CLASSIFICATION	3.290082041601931E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999987480143745	WITHOUT_CLASSIFICATION	1.251985625474385E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999997961224832	WITHOUT_CLASSIFICATION	2.0387751686746316E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999733014245	WITHOUT_CLASSIFICATION	2.6698575461055352E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999952743039305	WITHOUT_CLASSIFICATION	4.725696069405764E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999937962241608	WITHOUT_CLASSIFICATION	6.203775839112208E-6	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999998245204378	WITHOUT_CLASSIFICATION	1.7547956214776676E-7	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999997413126523	WITHOUT_CLASSIFICATION	2.586873476237321E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999985125591477	WITHOUT_CLASSIFICATION	1.487440852213286E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999978187000031	WITHOUT_CLASSIFICATION	2.1812999968247883E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999067808821049	WITHOUT_CLASSIFICATION	9.321911789506315E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999997961224832	WITHOUT_CLASSIFICATION	2.0387751686746316E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999733014245	WITHOUT_CLASSIFICATION	2.6698575461055352E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999952743039305	WITHOUT_CLASSIFICATION	4.725696069405764E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999991142309314	WITHOUT_CLASSIFICATION	8.85769068664042E-7	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9998037620699737	WITHOUT_CLASSIFICATION	1.9623793002630639E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999624548545812	WITHOUT_CLASSIFICATION	3.754514541871693E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999499953958	WITHOUT_CLASSIFICATION	5.000460437562233E-8	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999873412487665	WITHOUT_CLASSIFICATION	1.265875123340141E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999873412487665	WITHOUT_CLASSIFICATION	1.265875123340141E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999873412487665	WITHOUT_CLASSIFICATION	1.265875123340141E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999999282568324	WITHOUT_CLASSIFICATION	7.17431676870084E-8	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999935817879912	WITHOUT_CLASSIFICATION	6.418212008801182E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999963819348795	WITHOUT_CLASSIFICATION	3.6180651206447837E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999996565570127	WITHOUT_CLASSIFICATION	3.4344298723821816E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999876312228789	WITHOUT_CLASSIFICATION	1.23687771210037E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999823014981	WITHOUT_CLASSIFICATION	1.7698501916221406E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999779252753314	WITHOUT_CLASSIFICATION	2.207472466864614E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999668227004784	WITHOUT_CLASSIFICATION	3.3177299521529714E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999747337339	WITHOUT_CLASSIFICATION	2.52662660609312E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999999038010757	WITHOUT_CLASSIFICATION	9.619892424994677E-8	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999378891007574	WITHOUT_CLASSIFICATION	6.211089924251255E-5	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999800089476	WITHOUT_CLASSIFICATION	1.9991052401239762E-8	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999654999949461	WITHOUT_CLASSIFICATION	3.4500005053835366E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999947764633	WITHOUT_CLASSIFICATION	5.2235367142324826E-9	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999953800962391	WITHOUT_CLASSIFICATION	4.6199037608782145E-6	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999952839547952	WITHOUT_CLASSIFICATION	4.716045204808678E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9999241696274183	WITHOUT_CLASSIFICATION	7.583037258167208E-5	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9999953452452097	WITHOUT_CLASSIFICATION	4.654754790341544E-6	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999993629779924	WITHOUT_CLASSIFICATION	6.370220075735958E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999984070987782	WITHOUT_CLASSIFICATION	1.5929012218590338E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999980924821572	WITHOUT_CLASSIFICATION	1.907517842743121E-6	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999996631180842	WITHOUT_CLASSIFICATION	3.368819157879799E-7	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999975818243928	WITHOUT_CLASSIFICATION	2.418175607289033E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999978105832	WITHOUT_CLASSIFICATION	2.1894168542238773E-9	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999588424994	WITHOUT_CLASSIFICATION	4.1157500633608765E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9998421255446054	WITHOUT_CLASSIFICATION	1.578744553946133E-4	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.999990421444832	WITHOUT_CLASSIFICATION	9.578555167982287E-6	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999919681474411	WITHOUT_CLASSIFICATION	8.031852558930507E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999970879293606	WITHOUT_CLASSIFICATION	2.912070639366018E-6	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999905031300838	WITHOUT_CLASSIFICATION	9.49686991622724E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999989241149525	WITHOUT_CLASSIFICATION	1.0758850475246124E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999938631012463	WITHOUT_CLASSIFICATION	6.136898753671301E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999489867335	WITHOUT_CLASSIFICATION	5.101326645243212E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999287010653726	WITHOUT_CLASSIFICATION	7.12989346273591E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999450048036519	WITHOUT_CLASSIFICATION	5.499519634817779E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999995288067494	WITHOUT_CLASSIFICATION	4.7119325063642054E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999999658820737	WITHOUT_CLASSIFICATION	3.411792633886244E-8	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999232211988172	WITHOUT_CLASSIFICATION	7.677880118285018E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999934323326	WITHOUT_CLASSIFICATION	6.567667348782329E-9	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994512846715	WITHOUT_CLASSIFICATION	5.487153286041143E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999993468223874	WITHOUT_CLASSIFICATION	6.531776126110317E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999764784988774	WITHOUT_CLASSIFICATION	2.3521501122690725E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999702507238858	WITHOUT_CLASSIFICATION	2.974927611430714E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999764784988774	WITHOUT_CLASSIFICATION	2.3521501122690725E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999998643738113	WITHOUT_CLASSIFICATION	1.3562618868346214E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999966120151004	WITHOUT_CLASSIFICATION	3.387984899728711E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999631526116056	WITHOUT_CLASSIFICATION	3.684738839445327E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999998938940948	WITHOUT_CLASSIFICATION	1.0610590521015831E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999999308094146	WITHOUT_CLASSIFICATION	6.91905854019168E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999999902467418	WITHOUT_CLASSIFICATION	9.75325823269124E-9	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999949176752833	WITHOUT_CLASSIFICATION	5.082324716816732E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999999185673131	WITHOUT_CLASSIFICATION	8.143268690803529E-8	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999999467241982	WITHOUT_CLASSIFICATION	5.32758016723042E-8	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999999840013816	WITHOUT_CLASSIFICATION	1.5998618384710808E-8	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999999087387261	WITHOUT_CLASSIFICATION	9.12612738027822E-8	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999866502609494	WITHOUT_CLASSIFICATION	1.3349739050611074E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999998196622092	WITHOUT_CLASSIFICATION	1.8033779071006326E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999995633632772	WITHOUT_CLASSIFICATION	4.366367228276173E-7	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999998400283879	WITHOUT_CLASSIFICATION	1.599716120119129E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999997007847935	WITHOUT_CLASSIFICATION	2.9921520646674515E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.999999948472678	WITHOUT_CLASSIFICATION	5.15273219868758E-8	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999993004569516	WITHOUT_CLASSIFICATION	6.995430485140579E-7	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999985239382359	WITHOUT_CLASSIFICATION	1.4760617642698996E-6	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999996757100755	WITHOUT_CLASSIFICATION	3.242899245165054E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999964737484881	WITHOUT_CLASSIFICATION	3.52625151188054E-6	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999998150315765	WITHOUT_CLASSIFICATION	1.8496842338112792E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999995097374015	WITHOUT_CLASSIFICATION	4.902625984829563E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999991285336458	WITHOUT_CLASSIFICATION	8.714663541045376E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999999081999481	WITHOUT_CLASSIFICATION	9.180005188017575E-8	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999982701943121	WITHOUT_CLASSIFICATION	1.7298056877925737E-6	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999270951443	WITHOUT_CLASSIFICATION	7.290485559751515E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.999999543897046	WITHOUT_CLASSIFICATION	4.561029539147272E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999798139008493	WITHOUT_CLASSIFICATION	2.0186099150676726E-5	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999999092781474	WITHOUT_CLASSIFICATION	9.072185266299647E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999756344882994	WITHOUT_CLASSIFICATION	2.4365511700615817E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999975101029395	WITHOUT_CLASSIFICATION	2.4898970605634556E-6	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.99999998508132	WITHOUT_CLASSIFICATION	1.4918679969020157E-8	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999585885255783	WITHOUT_CLASSIFICATION	4.141147442171316E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999996809941686	WITHOUT_CLASSIFICATION	3.1900583144974703E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.999999744016975	WITHOUT_CLASSIFICATION	2.5598302493379025E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999990610066385	WITHOUT_CLASSIFICATION	9.389933614818448E-7	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999987716796481	WITHOUT_CLASSIFICATION	1.2283203518924405E-6	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994512846715	WITHOUT_CLASSIFICATION	5.487153286041143E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999997732778796	WITHOUT_CLASSIFICATION	2.267221203324512E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999686044609053	WITHOUT_CLASSIFICATION	3.139553909475547E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999973754865741	WITHOUT_CLASSIFICATION	2.6245134260114487E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999995678825864	WITHOUT_CLASSIFICATION	4.321174135731859E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999702507238858	WITHOUT_CLASSIFICATION	2.974927611430714E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999725135290327	WITHOUT_CLASSIFICATION	2.748647096727987E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999901842316727	WITHOUT_CLASSIFICATION	9.815768327177961E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999966676444706	WITHOUT_CLASSIFICATION	3.3323555293670727E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999943626192851	WITHOUT_CLASSIFICATION	5.637380714923096E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999999526144486	WITHOUT_CLASSIFICATION	4.73855513273918E-8	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999991514310268	WITHOUT_CLASSIFICATION	8.485689731557064E-7	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999987621237099	WITHOUT_CLASSIFICATION	1.2378762901978186E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.999995358035517	WITHOUT_CLASSIFICATION	4.641964482964111E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.999999201818466	WITHOUT_CLASSIFICATION	7.981815340355995E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999700593418763	WITHOUT_CLASSIFICATION	2.994065812363205E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999996376724094	WITHOUT_CLASSIFICATION	3.623275905493741E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999620488012798	WITHOUT_CLASSIFICATION	3.795119872009718E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999998209563767	WITHOUT_CLASSIFICATION	1.7904362319806977E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999995976594714	WITHOUT_CLASSIFICATION	4.023405285383753E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.99998561055982	WITHOUT_CLASSIFICATION	1.4389440179902808E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999999295918776	WITHOUT_CLASSIFICATION	7.040812252410162E-8	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999674643379949	WITHOUT_CLASSIFICATION	3.25356620052111E-5	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.999999896818119	WITHOUT_CLASSIFICATION	1.0318188106250101E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999958681000363	WITHOUT_CLASSIFICATION	4.13189996378483E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.999999838724479	WITHOUT_CLASSIFICATION	1.6127552103559312E-7	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999996701204238	WITHOUT_CLASSIFICATION	3.2987957623479175E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999958681000363	WITHOUT_CLASSIFICATION	4.13189996378483E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999932613919	WITHOUT_CLASSIFICATION	6.738608116767338E-9	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999931352487198	WITHOUT_CLASSIFICATION	6.864751280186288E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999996496657568	WITHOUT_CLASSIFICATION	3.503342432599462E-7	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.999997873527271	WITHOUT_CLASSIFICATION	2.1264727290320678E-6	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999758575809	WITHOUT_CLASSIFICATION	2.4142419140901247E-8	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999998360645829	WITHOUT_CLASSIFICATION	1.6393541709958902E-7	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999637395015	WITHOUT_CLASSIFICATION	3.626049855146891E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999997946716499	WITHOUT_CLASSIFICATION	2.0532835016493862E-7	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999994893092252	WITHOUT_CLASSIFICATION	5.106907747583517E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999816048696	WITHOUT_CLASSIFICATION	1.839513048689434E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999987552180049	WITHOUT_CLASSIFICATION	1.2447819951000553E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999992409418614	WITHOUT_CLASSIFICATION	7.590581385925575E-7	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999698931908	WITHOUT_CLASSIFICATION	3.01068091397935E-8	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.99999999453197	WITHOUT_CLASSIFICATION	5.468030065845723E-9	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999998314705854	WITHOUT_CLASSIFICATION	1.685294146922048E-7	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999970280188283	WITHOUT_CLASSIFICATION	2.9719811717639154E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999999523335835	WITHOUT_CLASSIFICATION	4.766641648645207E-8	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999999297929559	WITHOUT_CLASSIFICATION	7.020704406716739E-8	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999999882655753	WITHOUT_CLASSIFICATION	1.1734424699000343E-7	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999999333822269	WITHOUT_CLASSIFICATION	6.661777304026315E-8	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999994213033826	WITHOUT_CLASSIFICATION	5.786966173834916E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999938208721854	WITHOUT_CLASSIFICATION	6.179127814647181E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995966663802	WITHOUT_CLASSIFICATION	4.0333361984611767E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.999999962312417	WITHOUT_CLASSIFICATION	3.768758306391339E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999999884865483	WITHOUT_CLASSIFICATION	1.1513451709472107E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999999884865483	WITHOUT_CLASSIFICATION	1.1513451709472107E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999155326494	WITHOUT_CLASSIFICATION	8.446735057850964E-8	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999938448495	WITHOUT_CLASSIFICATION	6.155150446503618E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999900559898	WITHOUT_CLASSIFICATION	9.944010186989443E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999334022275	WITHOUT_CLASSIFICATION	6.659777252593555E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999932432902978	WITHOUT_CLASSIFICATION	6.7567097021541175E-6	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999327570918555	WITHOUT_CLASSIFICATION	6.724290814452767E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999919758181754	WITHOUT_CLASSIFICATION	8.024181824507729E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999997173698296	WITHOUT_CLASSIFICATION	2.826301703697815E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999998818723369	WITHOUT_CLASSIFICATION	1.1812766306025113E-7	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999998818723369	WITHOUT_CLASSIFICATION	1.1812766306025113E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999931268417891	WITHOUT_CLASSIFICATION	6.873158210924369E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999931268417891	WITHOUT_CLASSIFICATION	6.873158210924369E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999965306680745	WITHOUT_CLASSIFICATION	3.469331925616867E-6	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999951687665988	WITHOUT_CLASSIFICATION	4.831233401236388E-6	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999995635839118	WITHOUT_CLASSIFICATION	4.364160882394593E-7	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999953227261276	WITHOUT_CLASSIFICATION	4.677273872390033E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999997918977189	WITHOUT_CLASSIFICATION	2.081022810684211E-7	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999711926535	WITHOUT_CLASSIFICATION	2.880734654162522E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999998684452046	WITHOUT_CLASSIFICATION	1.3155479543125792E-7	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999994832862087	WITHOUT_CLASSIFICATION	5.167137913323056E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.99999709121955	WITHOUT_CLASSIFICATION	2.9087804500039065E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999166858468432	WITHOUT_CLASSIFICATION	8.33141531568559E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999502903311	WITHOUT_CLASSIFICATION	4.970966896780563E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999998280959365	WITHOUT_CLASSIFICATION	1.719040634211921E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999998280959365	WITHOUT_CLASSIFICATION	1.719040634211921E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999969072108092	WITHOUT_CLASSIFICATION	3.0927891907971205E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999969072108092	WITHOUT_CLASSIFICATION	3.0927891907971205E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999975882473658	WITHOUT_CLASSIFICATION	2.4117526341603093E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999702460802226	WITHOUT_CLASSIFICATION	2.9753919777445933E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999969625717047	WITHOUT_CLASSIFICATION	3.037428295293305E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999274505126682	WITHOUT_CLASSIFICATION	7.254948733190503E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999978855592151	WITHOUT_CLASSIFICATION	2.1144407848115462E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.999991823383794	WITHOUT_CLASSIFICATION	8.176616205992156E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999828491212	WITHOUT_CLASSIFICATION	1.715087888868228E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999996545745061	WITHOUT_CLASSIFICATION	3.4542549384942777E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999996545745061	WITHOUT_CLASSIFICATION	3.4542549384942777E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999983165301919	WITHOUT_CLASSIFICATION	1.6834698079905994E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999983165301919	WITHOUT_CLASSIFICATION	1.6834698079905994E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999960550909543	WITHOUT_CLASSIFICATION	3.944909045675318E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999965342364634	WITHOUT_CLASSIFICATION	3.4657635364861065E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999948292569751	WITHOUT_CLASSIFICATION	5.170743024925243E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999948292569751	WITHOUT_CLASSIFICATION	5.170743024925243E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999948292569751	WITHOUT_CLASSIFICATION	5.170743024925243E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999998740391142	WITHOUT_CLASSIFICATION	1.259608859096842E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999995488831426	WITHOUT_CLASSIFICATION	4.5111685742753116E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999988351483647	WITHOUT_CLASSIFICATION	1.1648516352144101E-6	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999037662849	WITHOUT_CLASSIFICATION	9.623371512273172E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.999999142098666	WITHOUT_CLASSIFICATION	8.579013340260184E-7	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999939983920078	WITHOUT_CLASSIFICATION	6.001607992262117E-6	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999983927252448	WITHOUT_CLASSIFICATION	1.6072747551131317E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999999559844751	WITHOUT_CLASSIFICATION	4.401552500354825E-8	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999994293241973	WITHOUT_CLASSIFICATION	5.706758027753447E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999988591991581	WITHOUT_CLASSIFICATION	1.140800841926473E-6	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999978575169837	WITHOUT_CLASSIFICATION	2.142483016362376E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999998503677385	WITHOUT_CLASSIFICATION	1.496322615636503E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999998494057294	WITHOUT_CLASSIFICATION	1.5059427065192434E-7	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.999999813104792	WITHOUT_CLASSIFICATION	1.86895208011622E-7	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999999742321046	WITHOUT_CLASSIFICATION	2.576789541371752E-8	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999999457077045	WITHOUT_CLASSIFICATION	5.4292295457130326E-8	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999977645153952	WITHOUT_CLASSIFICATION	2.2354846048037878E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999824628548705	WITHOUT_CLASSIFICATION	1.753714512954581E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999333558646	WITHOUT_CLASSIFICATION	6.66441353640057E-8	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999597258739	WITHOUT_CLASSIFICATION	4.0274126268045026E-8	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999513142488	WITHOUT_CLASSIFICATION	4.868575129285182E-8	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999995902275975	WITHOUT_CLASSIFICATION	4.097724024828487E-7	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999991789842636	WITHOUT_CLASSIFICATION	8.210157363508902E-7	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999991336058603	WITHOUT_CLASSIFICATION	8.66394139748824E-7	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999996908543161	WITHOUT_CLASSIFICATION	3.091456838761701E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.999999506124935	WITHOUT_CLASSIFICATION	4.938750649343211E-7	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999974612640944	WITHOUT_CLASSIFICATION	2.5387359056877345E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999087566026	WITHOUT_CLASSIFICATION	9.124339731028225E-8	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999924604250694	WITHOUT_CLASSIFICATION	7.539574930670216E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999945174705436	WITHOUT_CLASSIFICATION	5.482529456406222E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999872391678	WITHOUT_CLASSIFICATION	1.2760832163917078E-8	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999834529564178	WITHOUT_CLASSIFICATION	1.654704358219231E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999894704444223	WITHOUT_CLASSIFICATION	1.052955557774126E-5	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999949788954677	WITHOUT_CLASSIFICATION	5.02110453219838E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999301591159727	WITHOUT_CLASSIFICATION	6.984088402732623E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999996327249304	WITHOUT_CLASSIFICATION	3.672750696443171E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999890027319527	WITHOUT_CLASSIFICATION	1.0997268047331982E-5	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999991853691946	WITHOUT_CLASSIFICATION	8.146308053812707E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999985618424784	WITHOUT_CLASSIFICATION	1.4381575215562391E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999996531979571	WITHOUT_CLASSIFICATION	3.4680204285845037E-7	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999886108109622	WITHOUT_CLASSIFICATION	1.1389189037829424E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999998763789559	WITHOUT_CLASSIFICATION	1.2362104408891354E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9996216165607138	WITHOUT_CLASSIFICATION	3.7838343928619893E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.999999864483773	WITHOUT_CLASSIFICATION	1.3551622698144456E-7	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999913771219283	WITHOUT_CLASSIFICATION	8.62287807161541E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999998555120351	WITHOUT_CLASSIFICATION	1.4448796499468304E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999989907909707	WITHOUT_CLASSIFICATION	1.0092090292928195E-6	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999991756371712	WITHOUT_CLASSIFICATION	8.243628288287296E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999655329538645	WITHOUT_CLASSIFICATION	3.446704613545133E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999871869228922	WITHOUT_CLASSIFICATION	1.2813077107717507E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999971431419055	WITHOUT_CLASSIFICATION	2.8568580945897204E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999950516796	WITHOUT_CLASSIFICATION	4.948320477584559E-9	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999997410339213	WITHOUT_CLASSIFICATION	2.5896607860179505E-7	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999956080930497	WITHOUT_CLASSIFICATION	4.391906950389633E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999990824901714	WITHOUT_CLASSIFICATION	9.175098285977453E-7	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999985378080779	WITHOUT_CLASSIFICATION	1.4621919220959867E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9996216165607138	WITHOUT_CLASSIFICATION	3.7838343928619893E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9996216165607138	WITHOUT_CLASSIFICATION	3.7838343928619893E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999973835091175	WITHOUT_CLASSIFICATION	2.6164908824487856E-6	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999996560245558	WITHOUT_CLASSIFICATION	3.439754442015436E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999360277451	WITHOUT_CLASSIFICATION	6.397225498851389E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999972525541652	WITHOUT_CLASSIFICATION	2.7474458347685233E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999972525541652	WITHOUT_CLASSIFICATION	2.7474458347685233E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999998618358618	WITHOUT_CLASSIFICATION	1.3816413829558752E-7	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999968392853	WITHOUT_CLASSIFICATION	3.1607146336351417E-9	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999998857608086	WITHOUT_CLASSIFICATION	1.1423919144450742E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.999992697460034	WITHOUT_CLASSIFICATION	7.3025399659228525E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999723574452326	WITHOUT_CLASSIFICATION	2.764255476729752E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999937502494	WITHOUT_CLASSIFICATION	6.249750512332004E-9	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999999419273012	WITHOUT_CLASSIFICATION	5.807269874973117E-8	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999992136304172	WITHOUT_CLASSIFICATION	7.863695828096751E-7	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999841436908202	WITHOUT_CLASSIFICATION	1.5856309179805356E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999878455045358	WITHOUT_CLASSIFICATION	1.215449546417758E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999273325814	WITHOUT_CLASSIFICATION	7.266741860754938E-8	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.999999980899184	WITHOUT_CLASSIFICATION	1.9100815957807497E-8	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999723574452326	WITHOUT_CLASSIFICATION	2.764255476729752E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998818723369	WITHOUT_CLASSIFICATION	1.1812766306025113E-7	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998818723369	WITHOUT_CLASSIFICATION	1.1812766306025113E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999962158962725	WITHOUT_CLASSIFICATION	3.7841037275028936E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.999971935778152	WITHOUT_CLASSIFICATION	2.806422184800039E-5	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999996174026685	WITHOUT_CLASSIFICATION	3.8259733160500446E-7	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.999997606614314	WITHOUT_CLASSIFICATION	2.3933856859396377E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999889396772756	WITHOUT_CLASSIFICATION	1.1060322724364975E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999801653925928	WITHOUT_CLASSIFICATION	1.9834607407112773E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999801653925928	WITHOUT_CLASSIFICATION	1.9834607407112773E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999803172648059	WITHOUT_CLASSIFICATION	1.9682735194084826E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999356285064047	WITHOUT_CLASSIFICATION	6.437149359532488E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999999171782606	WITHOUT_CLASSIFICATION	8.282173938760534E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999524547983458	WITHOUT_CLASSIFICATION	4.7545201654189054E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999887961336171	WITHOUT_CLASSIFICATION	1.1203866382890019E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999981837670733	WITHOUT_CLASSIFICATION	1.8162329267117945E-6	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.99999231749335	WITHOUT_CLASSIFICATION	7.68250665002493E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999891079242621	WITHOUT_CLASSIFICATION	1.0892075737831966E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999992526316702	WITHOUT_CLASSIFICATION	7.473683298010459E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997539953313	WITHOUT_CLASSIFICATION	2.4600466870436396E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999849495589627	WITHOUT_CLASSIFICATION	1.5050441037444155E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999995934810444	WITHOUT_CLASSIFICATION	4.065189555861521E-7	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999993394318778	WITHOUT_CLASSIFICATION	6.605681223285346E-7	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999995198681214	WITHOUT_CLASSIFICATION	4.80131878635576E-7	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999998352361567	WITHOUT_CLASSIFICATION	1.6476384325705533E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999950157470219	WITHOUT_CLASSIFICATION	4.98425297818262E-6	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999919158139736	WITHOUT_CLASSIFICATION	8.08418602645517E-6	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.999999648302782	WITHOUT_CLASSIFICATION	3.516972180779715E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.999984621826805	WITHOUT_CLASSIFICATION	1.5378173194984546E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999990906091172	WITHOUT_CLASSIFICATION	9.093908828042995E-7	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999936012289256	WITHOUT_CLASSIFICATION	6.39877107445892E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999986110403166	WITHOUT_CLASSIFICATION	1.3889596834238804E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999986110403166	WITHOUT_CLASSIFICATION	1.3889596834238804E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999984278599403	WITHOUT_CLASSIFICATION	1.5721400597229791E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999906210323	WITHOUT_CLASSIFICATION	9.378967789584632E-9	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.999992617678783	WITHOUT_CLASSIFICATION	7.38232121699899E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999964558004033	WITHOUT_CLASSIFICATION	3.5441995965895647E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999964558004033	WITHOUT_CLASSIFICATION	3.5441995965895647E-6	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999993436900311	WITHOUT_CLASSIFICATION	6.563099689959395E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999998516752171	WITHOUT_CLASSIFICATION	1.483247829318015E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999990919477145	WITHOUT_CLASSIFICATION	9.080522853734472E-7	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999980266704753	WITHOUT_CLASSIFICATION	1.973329524548735E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999930827526214	WITHOUT_CLASSIFICATION	6.917247378549735E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996465292089	WITHOUT_CLASSIFICATION	3.5347079104812117E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994397401378	WITHOUT_CLASSIFICATION	5.602598622065606E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999969072108092	WITHOUT_CLASSIFICATION	3.0927891907971205E-6	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999951903980628	WITHOUT_CLASSIFICATION	4.809601937201266E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999952425854536	WITHOUT_CLASSIFICATION	4.757414546383832E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999976064227839	WITHOUT_CLASSIFICATION	2.3935772161463366E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999995880623713	WITHOUT_CLASSIFICATION	4.119376286882505E-7	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.999999600823446	WITHOUT_CLASSIFICATION	3.991765539308022E-7	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999993587720714	WITHOUT_CLASSIFICATION	6.412279286899632E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.999905571946085	WITHOUT_CLASSIFICATION	9.442805391499147E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999906929317001	WITHOUT_CLASSIFICATION	9.307068300012475E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999997759765826	WITHOUT_CLASSIFICATION	2.240234173646326E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999967740003565	WITHOUT_CLASSIFICATION	3.2259996435475066E-6	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999993214657621	WITHOUT_CLASSIFICATION	6.785342378836333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999754088579548	WITHOUT_CLASSIFICATION	2.4591142045234396E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999884647143614	WITHOUT_CLASSIFICATION	1.15352856384907E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999744011660556	WITHOUT_CLASSIFICATION	2.5598833944359645E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999997072095598	WITHOUT_CLASSIFICATION	2.927904401838051E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999962343292454	WITHOUT_CLASSIFICATION	3.7656707546518272E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999094129793774	WITHOUT_CLASSIFICATION	9.05870206225881E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999943921414549	WITHOUT_CLASSIFICATION	5.60785854515665E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999986425237427	WITHOUT_CLASSIFICATION	1.357476257283681E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999986425237427	WITHOUT_CLASSIFICATION	1.357476257283681E-6	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999996390495609	WITHOUT_CLASSIFICATION	3.6095043912810343E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999844510844919	WITHOUT_CLASSIFICATION	1.5548915508197434E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999505539429518	WITHOUT_CLASSIFICATION	4.944605704824829E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999505539429518	WITHOUT_CLASSIFICATION	4.944605704824829E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9997951866389746	WITHOUT_CLASSIFICATION	2.0481336102549865E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.999999886085997	WITHOUT_CLASSIFICATION	1.1391400299875496E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999999708807953	WITHOUT_CLASSIFICATION	2.9119204748430388E-8	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999977131419	WITHOUT_CLASSIFICATION	2.2868582131644024E-9	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999997171024991	WITHOUT_CLASSIFICATION	2.8289750088395285E-7	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999997475180401	WITHOUT_CLASSIFICATION	2.524819599158093E-7	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999993932092922	WITHOUT_CLASSIFICATION	6.067907078112414E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999992656645765	WITHOUT_CLASSIFICATION	7.343354234106646E-7	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999995428229367	WITHOUT_CLASSIFICATION	4.571770633007945E-7	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999999465075532	WITHOUT_CLASSIFICATION	5.349244672783526E-8	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.999985932748893	WITHOUT_CLASSIFICATION	1.4067251107010696E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999744011660556	WITHOUT_CLASSIFICATION	2.5598833944359645E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999253026598144	WITHOUT_CLASSIFICATION	7.46973401855314E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999067808821049	WITHOUT_CLASSIFICATION	9.321911789506315E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999990476230438	WITHOUT_CLASSIFICATION	9.523769561952246E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999782992756	WITHOUT_CLASSIFICATION	2.1700724439754557E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999919933752469	WITHOUT_CLASSIFICATION	8.006624753183094E-6	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999873210108822	WITHOUT_CLASSIFICATION	1.267898911781292E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999838129953	WITHOUT_CLASSIFICATION	1.6187004836125614E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999933842306764	WITHOUT_CLASSIFICATION	6.615769323610952E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999933842306764	WITHOUT_CLASSIFICATION	6.615769323610952E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999456151583109	WITHOUT_CLASSIFICATION	5.438484168914381E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998467239728	WITHOUT_CLASSIFICATION	1.5327602713405426E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999992656645765	WITHOUT_CLASSIFICATION	7.343354234106646E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999992656645765	WITHOUT_CLASSIFICATION	7.343354234106646E-7	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999987879788819	WITHOUT_CLASSIFICATION	1.2120211180741867E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9998792686914837	WITHOUT_CLASSIFICATION	1.2073130851625865E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999995623132389	WITHOUT_CLASSIFICATION	4.376867610933152E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999947482868947	WITHOUT_CLASSIFICATION	5.25171310527108E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.999998420987567	WITHOUT_CLASSIFICATION	1.5790124329592714E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999989220018655	WITHOUT_CLASSIFICATION	1.0779981345099372E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999956651631651	WITHOUT_CLASSIFICATION	4.334836834872856E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.999995806302704	WITHOUT_CLASSIFICATION	4.193697296072448E-6	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.999999153134009	WITHOUT_CLASSIFICATION	8.46865991129345E-7	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999452866119528	WITHOUT_CLASSIFICATION	5.47133880471398E-5	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999538744919	WITHOUT_CLASSIFICATION	4.6125508059219714E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999980173333768	WITHOUT_CLASSIFICATION	1.9826666231949007E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999980173333768	WITHOUT_CLASSIFICATION	1.9826666231949007E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999992283596036	WITHOUT_CLASSIFICATION	7.716403964087044E-7	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999964284976974	WITHOUT_CLASSIFICATION	3.571502302464759E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999964284976974	WITHOUT_CLASSIFICATION	3.571502302464759E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999969734724606	WITHOUT_CLASSIFICATION	3.0265275394025962E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999969734724606	WITHOUT_CLASSIFICATION	3.0265275394025962E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999933030860191	WITHOUT_CLASSIFICATION	6.696913980939298E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999867430545	WITHOUT_CLASSIFICATION	1.3256945504967729E-8	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999867430545	WITHOUT_CLASSIFICATION	1.3256945504967729E-8	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999998633980057	WITHOUT_CLASSIFICATION	1.3660199436659435E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999710389300662	WITHOUT_CLASSIFICATION	2.8961069933807317E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9976565619792022	WITHOUT_CLASSIFICATION	0.0023434380207979335	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999868432525431	WITHOUT_CLASSIFICATION	1.3156747456964073E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999578524524	WITHOUT_CLASSIFICATION	4.2147547452294834E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999978327476087	WITHOUT_CLASSIFICATION	2.167252391376875E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.999996880140264	WITHOUT_CLASSIFICATION	3.1198597359310177E-6	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999932679117048	WITHOUT_CLASSIFICATION	6.732088295079513E-6	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.999998061683772	WITHOUT_CLASSIFICATION	1.938316228036859E-6	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999999581695111	WITHOUT_CLASSIFICATION	4.1830488830318084E-8	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.999803449353958	WITHOUT_CLASSIFICATION	1.9655064604199974E-4	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999997072656318	WITHOUT_CLASSIFICATION	2.927343682528428E-7	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891501031476	WITHOUT_CLASSIFICATION	1.0849896852462603E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999710389300662	WITHOUT_CLASSIFICATION	2.8961069933807317E-5	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999985421426503	WITHOUT_CLASSIFICATION	1.4578573497200674E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999940138672053	WITHOUT_CLASSIFICATION	5.986132794736203E-6	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999995054880932	WITHOUT_CLASSIFICATION	4.94511906672972E-7	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999996197454227	WITHOUT_CLASSIFICATION	3.8025457723769E-7	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999991135442043	WITHOUT_CLASSIFICATION	8.864557956271753E-7	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999979388182151	WITHOUT_CLASSIFICATION	2.0611817849775546E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999445561622539	WITHOUT_CLASSIFICATION	5.5443837746198656E-5	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999557678197	WITHOUT_CLASSIFICATION	4.423218026027635E-8	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9998969222937262	WITHOUT_CLASSIFICATION	1.0307770627386128E-4	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999138607084347	WITHOUT_CLASSIFICATION	8.613929156533912E-5	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999981656911978	WITHOUT_CLASSIFICATION	1.8343088022053762E-6	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999752304206094	WITHOUT_CLASSIFICATION	2.4769579390617968E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999990822139706	WITHOUT_CLASSIFICATION	9.177860293536152E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999808698863507	WITHOUT_CLASSIFICATION	1.9130113649313628E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999997887984898	WITHOUT_CLASSIFICATION	2.1120151013224928E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999974295749002	WITHOUT_CLASSIFICATION	2.570425099901258E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999936865930994	WITHOUT_CLASSIFICATION	6.313406900650425E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9997704102620962	WITHOUT_CLASSIFICATION	2.2958973790382318E-4	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999996985335217	WITHOUT_CLASSIFICATION	3.0146647834006324E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999957175013553	WITHOUT_CLASSIFICATION	4.282498644644671E-6	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999989635003274	WITHOUT_CLASSIFICATION	1.0364996726582304E-6	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999951533686589	WITHOUT_CLASSIFICATION	4.846631341122574E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999969973946392	WITHOUT_CLASSIFICATION	3.0026053608397737E-6	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.99993764887561	WITHOUT_CLASSIFICATION	6.235112439004953E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9997854462463157	WITHOUT_CLASSIFICATION	2.1455375368434045E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999983518786267	WITHOUT_CLASSIFICATION	1.6481213732979772E-6	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999935173769198	WITHOUT_CLASSIFICATION	6.482623080161753E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999920744932039	WITHOUT_CLASSIFICATION	7.925506796077456E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999916027655982	WITHOUT_CLASSIFICATION	8.397234401890541E-6	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999798011433844	WITHOUT_CLASSIFICATION	2.0198856615663147E-5	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999794049475956	WITHOUT_CLASSIFICATION	2.059505240429175E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.999997014291283	WITHOUT_CLASSIFICATION	2.9857087171022655E-6	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999997891996767	WITHOUT_CLASSIFICATION	2.1080032318895364E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.999999869429335	WITHOUT_CLASSIFICATION	1.305706649142179E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999938086649949	WITHOUT_CLASSIFICATION	6.191335005051215E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999375619596612	WITHOUT_CLASSIFICATION	6.243804033887832E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999998197747535	WITHOUT_CLASSIFICATION	1.8022524647256093E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.99993764887561	WITHOUT_CLASSIFICATION	6.235112439004953E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999996973085842	WITHOUT_CLASSIFICATION	3.0269141579502535E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997315898598	WITHOUT_CLASSIFICATION	2.68410140273311E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997315898598	WITHOUT_CLASSIFICATION	2.68410140273311E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999853046082818	WITHOUT_CLASSIFICATION	1.469539171822564E-5	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999853046082818	WITHOUT_CLASSIFICATION	1.469539171822564E-5	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9997132686307111	WITHOUT_CLASSIFICATION	2.867313692889804E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999990455198001	WITHOUT_CLASSIFICATION	9.54480199932754E-7	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.999999426574255	WITHOUT_CLASSIFICATION	5.734257449387375E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999662884401163	WITHOUT_CLASSIFICATION	3.37115598836363E-5	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9982144381340875	WITHOUT_CLASSIFICATION	0.001785561865912582	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9981774948099216	WITHOUT_CLASSIFICATION	0.0018225051900783924	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.999637888132088	WITHOUT_CLASSIFICATION	3.621118679120378E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.999999853766558	WITHOUT_CLASSIFICATION	1.462334419490955E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999981485806942	WITHOUT_CLASSIFICATION	1.8514193057537308E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999995719657838	WITHOUT_CLASSIFICATION	4.2803421624249955E-7	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999956238846665	WITHOUT_CLASSIFICATION	4.376115333520363E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999935992857121	WITHOUT_CLASSIFICATION	6.400714287868241E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999999237280384	WITHOUT_CLASSIFICATION	7.627196169275183E-8	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999996072663652	WITHOUT_CLASSIFICATION	3.927336347881913E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999997957000685	WITHOUT_CLASSIFICATION	2.042999315776925E-7	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9998732262929612	WITHOUT_CLASSIFICATION	1.2677370703881468E-4	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999997473534846	WITHOUT_CLASSIFICATION	2.526465153555914E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999782992756	WITHOUT_CLASSIFICATION	2.1700724439754557E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999996092130903	WITHOUT_CLASSIFICATION	3.9078690962088487E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999999861401257	WITHOUT_CLASSIFICATION	1.3859874304535714E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994397401378	WITHOUT_CLASSIFICATION	5.602598622065606E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999999861401257	WITHOUT_CLASSIFICATION	1.3859874304535714E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999389413574095	WITHOUT_CLASSIFICATION	6.105864259059014E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999894728236512	WITHOUT_CLASSIFICATION	1.0527176348828343E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999839010146033	WITHOUT_CLASSIFICATION	1.609898539670388E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.999999834082901	WITHOUT_CLASSIFICATION	1.659170989169096E-7	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999989618886309	WITHOUT_CLASSIFICATION	1.0381113691033904E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999649507867109	WITHOUT_CLASSIFICATION	3.5049213289136484E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999649507867109	WITHOUT_CLASSIFICATION	3.5049213289136484E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999478430244312	WITHOUT_CLASSIFICATION	5.215697556887339E-5	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999983047958467	WITHOUT_CLASSIFICATION	1.6952041532983674E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999882242084	WITHOUT_CLASSIFICATION	1.1775791686531793E-8	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999996275756605	WITHOUT_CLASSIFICATION	3.724243395343318E-7	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.999999750883423	WITHOUT_CLASSIFICATION	2.4911657707321755E-7	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999996396904985	WITHOUT_CLASSIFICATION	3.603095014695666E-7	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999989618886309	WITHOUT_CLASSIFICATION	1.0381113691033904E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999649507867109	WITHOUT_CLASSIFICATION	3.5049213289136484E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999649507867109	WITHOUT_CLASSIFICATION	3.5049213289136484E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999478430244312	WITHOUT_CLASSIFICATION	5.215697556887339E-5	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999583899309	WITHOUT_CLASSIFICATION	4.1610069057190975E-8	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999998743687065	WITHOUT_CLASSIFICATION	1.2563129348964653E-7	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999995568499378	WITHOUT_CLASSIFICATION	4.431500622168186E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999990415772352	WITHOUT_CLASSIFICATION	9.58422764808758E-7	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999675486263644	WITHOUT_CLASSIFICATION	3.24513736356955E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9993091599071561	WITHOUT_CLASSIFICATION	6.908400928438871E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999151058011	WITHOUT_CLASSIFICATION	8.48941989530461E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999873923262984	WITHOUT_CLASSIFICATION	1.2607673701527189E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999873923262984	WITHOUT_CLASSIFICATION	1.2607673701527189E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999946001831691	WITHOUT_CLASSIFICATION	5.399816830971075E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999998168807786	WITHOUT_CLASSIFICATION	1.8311922140031417E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999984959135964	WITHOUT_CLASSIFICATION	1.5040864036116707E-6	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9992183502739375	WITHOUT_CLASSIFICATION	7.816497260625806E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999985429494628	WITHOUT_CLASSIFICATION	1.457050537162914E-6	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999911015524678	WITHOUT_CLASSIFICATION	8.898447532163826E-6	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999756842758601	WITHOUT_CLASSIFICATION	2.43157241398575E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999981977122084	WITHOUT_CLASSIFICATION	1.8022877915412775E-6	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9997033281241938	WITHOUT_CLASSIFICATION	2.966718758061579E-4	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999997486614001	WITHOUT_CLASSIFICATION	2.513385999517599E-7	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999983914418571	WITHOUT_CLASSIFICATION	1.6085581429187194E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999810541085357	WITHOUT_CLASSIFICATION	1.8945891464358396E-5	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999934467939839	WITHOUT_CLASSIFICATION	6.5532060161084744E-6	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9996651601120219	WITHOUT_CLASSIFICATION	3.3483988797811977E-4	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999998079924521	WITHOUT_CLASSIFICATION	1.9200754786003605E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999966169641574	WITHOUT_CLASSIFICATION	3.3830358426018985E-6	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999640941804089	WITHOUT_CLASSIFICATION	3.5905819591084354E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999985874696459	WITHOUT_CLASSIFICATION	1.4125303541606786E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999550491006495	WITHOUT_CLASSIFICATION	4.495089935047361E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999979886510321	WITHOUT_CLASSIFICATION	2.0113489678329087E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999661270739986	WITHOUT_CLASSIFICATION	3.3872926001322364E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999996656258981	WITHOUT_CLASSIFICATION	3.3437410192602554E-7	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999967995873638	WITHOUT_CLASSIFICATION	3.200412636349526E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999948843969455	WITHOUT_CLASSIFICATION	5.1156030545741995E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999996665325988	WITHOUT_CLASSIFICATION	3.3346740117561034E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999998080222097	WITHOUT_CLASSIFICATION	1.919777903469261E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999979831960523	WITHOUT_CLASSIFICATION	2.0168039477022173E-6	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999788763481815	WITHOUT_CLASSIFICATION	2.1123651818476605E-5	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.999999999752572	WITHOUT_CLASSIFICATION	2.4742801649545424E-10	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999994900019983	WITHOUT_CLASSIFICATION	5.099980016730451E-7	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999983632584726	WITHOUT_CLASSIFICATION	1.6367415273519823E-6	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999991086030654	WITHOUT_CLASSIFICATION	8.913969347179192E-7	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999977028950747	WITHOUT_CLASSIFICATION	2.2971049251776384E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999989520174295	WITHOUT_CLASSIFICATION	1.0479825705715874E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999991944548815	WITHOUT_CLASSIFICATION	8.055451184766736E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999991944548815	WITHOUT_CLASSIFICATION	8.055451184766736E-7	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999814794732346	WITHOUT_CLASSIFICATION	1.8520526765483347E-5	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999979367708888	WITHOUT_CLASSIFICATION	2.0632291112301167E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999910190142222	WITHOUT_CLASSIFICATION	8.980985777876832E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999948852119485	WITHOUT_CLASSIFICATION	5.114788051583766E-6	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999965859934504	WITHOUT_CLASSIFICATION	3.414006549590623E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999999568403517	WITHOUT_CLASSIFICATION	4.315964820474042E-8	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999994419639451	WITHOUT_CLASSIFICATION	5.580360548967851E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909370327059	WITHOUT_CLASSIFICATION	9.06296729394574E-6	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999156172617114	WITHOUT_CLASSIFICATION	8.438273828860684E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999986292512741	WITHOUT_CLASSIFICATION	1.3707487258938352E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998570880845	WITHOUT_CLASSIFICATION	1.429119155682407E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9997847395453967	WITHOUT_CLASSIFICATION	2.152604546033529E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999536264136507	WITHOUT_CLASSIFICATION	4.6373586349345574E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999698466238297	WITHOUT_CLASSIFICATION	3.0153376170190426E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.99993279080863	WITHOUT_CLASSIFICATION	6.72091913700943E-5	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999873935714577	WITHOUT_CLASSIFICATION	1.2606428542211822E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999963398415805	WITHOUT_CLASSIFICATION	3.660158419501242E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.999999770333434	WITHOUT_CLASSIFICATION	2.2966656597381393E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999997187581652	WITHOUT_CLASSIFICATION	2.8124183479478275E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999996615444007	WITHOUT_CLASSIFICATION	3.384555992561577E-7	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999997649367941	WITHOUT_CLASSIFICATION	2.350632058148562E-7	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999999347036804	WITHOUT_CLASSIFICATION	6.529631956310648E-8	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999730815004559	WITHOUT_CLASSIFICATION	2.691849954396884E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999996094823095	WITHOUT_CLASSIFICATION	3.905176904641401E-7	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999640194267	WITHOUT_CLASSIFICATION	3.598057333542879E-8	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999986894814065	WITHOUT_CLASSIFICATION	1.3105185935257262E-6	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999989612346045	WITHOUT_CLASSIFICATION	1.0387653954527152E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999966507295591	WITHOUT_CLASSIFICATION	3.3492704408966676E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999696169622355	WITHOUT_CLASSIFICATION	3.038303776445499E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999892469952342	WITHOUT_CLASSIFICATION	1.0753004765761836E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999674288248162	WITHOUT_CLASSIFICATION	3.2571175183843814E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999994225591523	WITHOUT_CLASSIFICATION	5.774408476211428E-7	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999976990581516	WITHOUT_CLASSIFICATION	2.3009418483907605E-6	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999998698449758	WITHOUT_CLASSIFICATION	1.3015502421736588E-7	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999264104589524	WITHOUT_CLASSIFICATION	7.358954104768607E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999998052074772	WITHOUT_CLASSIFICATION	1.9479252283725615E-7	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999743585557773	WITHOUT_CLASSIFICATION	2.5641444222630893E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999926278861954	WITHOUT_CLASSIFICATION	7.372113804684853E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999924999032035	WITHOUT_CLASSIFICATION	7.500096796413039E-6	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.999988828296903	WITHOUT_CLASSIFICATION	1.1171703096906317E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.99999998003895	WITHOUT_CLASSIFICATION	1.9961049929342135E-8	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999998944788712	WITHOUT_CLASSIFICATION	1.0552112884786496E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999999775890962	WITHOUT_CLASSIFICATION	2.241090374838128E-8	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999995519052788	WITHOUT_CLASSIFICATION	4.4809472112392575E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999945466834153	WITHOUT_CLASSIFICATION	5.453316584747831E-6	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999301735228	WITHOUT_CLASSIFICATION	6.982647717397968E-8	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999693852922	WITHOUT_CLASSIFICATION	3.061470772009168E-8	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999301735228	WITHOUT_CLASSIFICATION	6.982647717397968E-8	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999733087087573	WITHOUT_CLASSIFICATION	2.669129124274118E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9999997988878498	WITHOUT_CLASSIFICATION	2.0111215022387835E-7	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999995395291829	WITHOUT_CLASSIFICATION	4.604708171616836E-7	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999983198604846	WITHOUT_CLASSIFICATION	1.6801395154773324E-6	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.999997059900977	WITHOUT_CLASSIFICATION	2.94009902312568E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999283847081	WITHOUT_CLASSIFICATION	7.16152919148615E-8	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999979668980763	WITHOUT_CLASSIFICATION	2.0331019236826196E-6	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9950087463879497	WITHOUT_CLASSIFICATION	0.004991253612050313	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999751466931992	WITHOUT_CLASSIFICATION	2.4853306800799942E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999821475684909	WITHOUT_CLASSIFICATION	1.7852431509146365E-5	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999998241814144	WITHOUT_CLASSIFICATION	1.7581858569147376E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999995329730598	WITHOUT_CLASSIFICATION	4.6702694015565124E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999973565667726	WITHOUT_CLASSIFICATION	2.643433227349199E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9804271346466463	WITHOUT_CLASSIFICATION	0.019572865353353657	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999594410663467	WITHOUT_CLASSIFICATION	4.05589336533273E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999969898100464	WITHOUT_CLASSIFICATION	3.010189953617705E-6	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999831872711759	WITHOUT_CLASSIFICATION	1.6812728824115836E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9998943640934068	WITHOUT_CLASSIFICATION	1.0563590659317452E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999769298146676	WITHOUT_CLASSIFICATION	2.3070185332486643E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999996871033476	WITHOUT_CLASSIFICATION	3.12896652376597E-7	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999997249233862	WITHOUT_CLASSIFICATION	2.750766138794211E-7	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999991686633452	WITHOUT_CLASSIFICATION	8.313366547944511E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994266553893	WITHOUT_CLASSIFICATION	5.733446107323386E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999979668980763	WITHOUT_CLASSIFICATION	2.0331019236826196E-6	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999989358324622	WITHOUT_CLASSIFICATION	1.0641675377470807E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999999675644742	WITHOUT_CLASSIFICATION	3.243552575680182E-8	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999999675644742	WITHOUT_CLASSIFICATION	3.243552575680182E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999780115627	WITHOUT_CLASSIFICATION	2.1988437253595942E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.999999788298413	WITHOUT_CLASSIFICATION	2.117015870621061E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.999999788298413	WITHOUT_CLASSIFICATION	2.117015870621061E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999995549681161	WITHOUT_CLASSIFICATION	4.4503188401506116E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999995549681161	WITHOUT_CLASSIFICATION	4.4503188401506116E-7	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9982836163690354	WITHOUT_CLASSIFICATION	0.0017163836309645392	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999998168117986	WITHOUT_CLASSIFICATION	1.8318820134262022E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999997885076148	WITHOUT_CLASSIFICATION	2.1149238508968876E-7	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999949857165076	WITHOUT_CLASSIFICATION	5.0142834923790534E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999988294294955	WITHOUT_CLASSIFICATION	1.17057050446782E-6	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999955325714995	WITHOUT_CLASSIFICATION	4.467428500423257E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999505704581301	WITHOUT_CLASSIFICATION	4.942954186986372E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999999425130155	WITHOUT_CLASSIFICATION	5.7486984612131625E-8	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999992168658997	WITHOUT_CLASSIFICATION	7.831341004445657E-7	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999997161779105	WITHOUT_CLASSIFICATION	2.83822089530022E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999745322243	WITHOUT_CLASSIFICATION	2.5467775624227E-8	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999891279755325	WITHOUT_CLASSIFICATION	1.0872024467486212E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999933195625	WITHOUT_CLASSIFICATION	6.680437595651605E-9	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999635365757	WITHOUT_CLASSIFICATION	3.646342432507932E-8	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999999348368427	WITHOUT_CLASSIFICATION	6.516315739195065E-8	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999965820218943	WITHOUT_CLASSIFICATION	3.4179781055569324E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999995159860721	WITHOUT_CLASSIFICATION	4.840139278933889E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999960853566007	WITHOUT_CLASSIFICATION	3.914643399301099E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999960853566007	WITHOUT_CLASSIFICATION	3.914643399301099E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999045051474	WITHOUT_CLASSIFICATION	9.5494852545047E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9994591727021587	WITHOUT_CLASSIFICATION	5.408272978414543E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999998905006797	WITHOUT_CLASSIFICATION	1.0949932033936186E-7	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999988723551875	WITHOUT_CLASSIFICATION	1.127644812495395E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999998668540413	WITHOUT_CLASSIFICATION	1.3314595863849087E-7	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999870680149062	WITHOUT_CLASSIFICATION	1.2931985093791799E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999985012922102	WITHOUT_CLASSIFICATION	1.4987077898149098E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999980368487548	WITHOUT_CLASSIFICATION	1.9631512452148535E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999973926623666	WITHOUT_CLASSIFICATION	2.607337633258866E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999996990095589	WITHOUT_CLASSIFICATION	3.009904411621829E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999904148142	WITHOUT_CLASSIFICATION	9.585185655964286E-9	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999994626210218	WITHOUT_CLASSIFICATION	5.373789781584307E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999998273220118	WITHOUT_CLASSIFICATION	1.7267798828641635E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999998490956171	WITHOUT_CLASSIFICATION	1.5090438293491722E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999995518166269	WITHOUT_CLASSIFICATION	4.481833732064927E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999991951530911	WITHOUT_CLASSIFICATION	8.048469088476368E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999734171799266	WITHOUT_CLASSIFICATION	2.6582820073389324E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999693800084725	WITHOUT_CLASSIFICATION	3.061999152754494E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999767262582865	WITHOUT_CLASSIFICATION	2.327374171351433E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999963100664894	WITHOUT_CLASSIFICATION	3.689933510653808E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999979872500099	WITHOUT_CLASSIFICATION	2.012749990145862E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999973662196479	WITHOUT_CLASSIFICATION	2.6337803520124768E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999887428207334	WITHOUT_CLASSIFICATION	1.125717926666163E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.999999548587758	WITHOUT_CLASSIFICATION	4.514122420745391E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999550866049	WITHOUT_CLASSIFICATION	4.491339510562693E-8	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999859532174	WITHOUT_CLASSIFICATION	1.4046782648722937E-8	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.999999965667272	WITHOUT_CLASSIFICATION	3.433272791767074E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999541769246	WITHOUT_CLASSIFICATION	4.582307557337822E-8	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999931184644939	WITHOUT_CLASSIFICATION	6.881535506153428E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999735417604263	WITHOUT_CLASSIFICATION	2.6458239573651478E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999934749638183	WITHOUT_CLASSIFICATION	6.52503618176329E-6	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999992544582529	WITHOUT_CLASSIFICATION	7.455417472166365E-7	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999590335298528	WITHOUT_CLASSIFICATION	4.0966470147198584E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.999999201580654	WITHOUT_CLASSIFICATION	7.984193459768616E-7	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999755159886572	WITHOUT_CLASSIFICATION	2.448401134276261E-5	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999931654588866	WITHOUT_CLASSIFICATION	6.834541113397577E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9999909145768334	WITHOUT_CLASSIFICATION	9.085423166608981E-6	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9998619074851828	WITHOUT_CLASSIFICATION	1.380925148172859E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999987397264563	WITHOUT_CLASSIFICATION	1.260273543788393E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999999576161571	WITHOUT_CLASSIFICATION	4.238384293097517E-8	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.999999746674874	WITHOUT_CLASSIFICATION	2.5332512602505244E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999948949898021	WITHOUT_CLASSIFICATION	5.1050101979149284E-6	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999999545234682	WITHOUT_CLASSIFICATION	4.547653184455715E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999997455443068	WITHOUT_CLASSIFICATION	2.5445569316481134E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999940552662477	WITHOUT_CLASSIFICATION	5.944733752252388E-6	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999983474642095	WITHOUT_CLASSIFICATION	1.652535790505983E-6	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999947359612248	WITHOUT_CLASSIFICATION	5.264038775242279E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999997455443068	WITHOUT_CLASSIFICATION	2.5445569316481134E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999959749949897	WITHOUT_CLASSIFICATION	4.025005010350741E-6	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999799230722923	WITHOUT_CLASSIFICATION	2.0076927707691428E-5	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999986177001807	WITHOUT_CLASSIFICATION	1.382299819331581E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999685522902458	WITHOUT_CLASSIFICATION	3.144770975413882E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999914244568079	WITHOUT_CLASSIFICATION	8.575543191979804E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999940552662477	WITHOUT_CLASSIFICATION	5.944733752252388E-6	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999947359612248	WITHOUT_CLASSIFICATION	5.264038775242279E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999557734355736	WITHOUT_CLASSIFICATION	4.422656442641794E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999997412624099	WITHOUT_CLASSIFICATION	2.5873759020563513E-7	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999934781097687	WITHOUT_CLASSIFICATION	6.521890231344559E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999998992906655	WITHOUT_CLASSIFICATION	1.0070933456006647E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999405018893129	WITHOUT_CLASSIFICATION	5.9498110687126096E-5	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999827339860522	WITHOUT_CLASSIFICATION	1.7266013947810904E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9989739090833086	WITHOUT_CLASSIFICATION	0.0010260909166914358	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999992193670725	WITHOUT_CLASSIFICATION	7.806329275503063E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999959346380558	WITHOUT_CLASSIFICATION	4.065361944164159E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999959346380558	WITHOUT_CLASSIFICATION	4.065361944164159E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999987799754306	WITHOUT_CLASSIFICATION	1.2200245693037973E-6	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999837019968133	WITHOUT_CLASSIFICATION	1.629800318661358E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999994655589689	WITHOUT_CLASSIFICATION	5.344410311257735E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999999410095238	WITHOUT_CLASSIFICATION	5.899047608997564E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999992526316702	WITHOUT_CLASSIFICATION	7.473683298010459E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996465292089	WITHOUT_CLASSIFICATION	3.5347079104812117E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996465292089	WITHOUT_CLASSIFICATION	3.5347079104812117E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997539953313	WITHOUT_CLASSIFICATION	2.4600466870436396E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999849495589627	WITHOUT_CLASSIFICATION	1.5050441037444155E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999997759765826	WITHOUT_CLASSIFICATION	2.240234173646326E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999967740003565	WITHOUT_CLASSIFICATION	3.2259996435475066E-6	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999995642893434	WITHOUT_CLASSIFICATION	4.3571065664751166E-7	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.999934394834757	WITHOUT_CLASSIFICATION	6.5605165243029E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999866466769349	WITHOUT_CLASSIFICATION	1.3353323065157592E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999882031365686	WITHOUT_CLASSIFICATION	1.1796863431303862E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999998556652645	WITHOUT_CLASSIFICATION	1.4433473544993002E-7	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999984862973745	WITHOUT_CLASSIFICATION	1.513702625555208E-6	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999616305715	WITHOUT_CLASSIFICATION	3.8369428451951775E-8	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999938955723	WITHOUT_CLASSIFICATION	6.104427658937263E-9	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999941463265629	WITHOUT_CLASSIFICATION	5.853673437086714E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999640482543308	WITHOUT_CLASSIFICATION	3.5951745669173274E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999985578841906	WITHOUT_CLASSIFICATION	1.4421158094471622E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999506575386581	WITHOUT_CLASSIFICATION	4.934246134187043E-5	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.999901310507836	WITHOUT_CLASSIFICATION	9.868949216405871E-5	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999996776933022	WITHOUT_CLASSIFICATION	3.2230669776442586E-7	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998849980654926	WITHOUT_CLASSIFICATION	1.15001934507379E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999678988649269	WITHOUT_CLASSIFICATION	3.210113507307461E-5	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999388657831916	WITHOUT_CLASSIFICATION	6.113421680845704E-5	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.999985008137588	WITHOUT_CLASSIFICATION	1.4991862412023237E-5	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999916620482832	WITHOUT_CLASSIFICATION	8.337951716956527E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.999969449645024	WITHOUT_CLASSIFICATION	3.055035497606526E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999996157928566	WITHOUT_CLASSIFICATION	3.84207143375068E-7	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999623270333348	WITHOUT_CLASSIFICATION	3.7672966665203376E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9998843988911673	WITHOUT_CLASSIFICATION	1.1560110883268542E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999997759765826	WITHOUT_CLASSIFICATION	2.240234173646326E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999967740003565	WITHOUT_CLASSIFICATION	3.2259996435475066E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999873923262984	WITHOUT_CLASSIFICATION	1.2607673701527189E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999844584449652	WITHOUT_CLASSIFICATION	1.5541555034736808E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999165392566682	WITHOUT_CLASSIFICATION	8.346074333167568E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9997570810716794	WITHOUT_CLASSIFICATION	2.4291892832061505E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998826631172197	WITHOUT_CLASSIFICATION	1.1733688278028331E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999961581261401	WITHOUT_CLASSIFICATION	3.84187385994961E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999986356842452	WITHOUT_CLASSIFICATION	1.3643157548531614E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999986356842452	WITHOUT_CLASSIFICATION	1.3643157548531614E-6	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999422385336943	WITHOUT_CLASSIFICATION	5.776146630554942E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999789898048065	WITHOUT_CLASSIFICATION	2.101019519347591E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998905641041476	WITHOUT_CLASSIFICATION	1.0943589585236598E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999989601715747	WITHOUT_CLASSIFICATION	1.039828425255415E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999989601715747	WITHOUT_CLASSIFICATION	1.039828425255415E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999938668124395	WITHOUT_CLASSIFICATION	6.133187560446297E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999964097416365	WITHOUT_CLASSIFICATION	3.590258363548994E-6	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999988850077175	WITHOUT_CLASSIFICATION	1.1149922824373448E-6	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999994907882663	WITHOUT_CLASSIFICATION	5.092117336621532E-7	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999545592735	WITHOUT_CLASSIFICATION	4.544072646551298E-8	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999950109060466	WITHOUT_CLASSIFICATION	4.989093953467754E-6	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999982440961361	WITHOUT_CLASSIFICATION	1.7559038638789158E-6	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999909489925799	WITHOUT_CLASSIFICATION	9.051007420140007E-6	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999074985508247	WITHOUT_CLASSIFICATION	9.250144917535059E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999186177930226	WITHOUT_CLASSIFICATION	8.138220697741917E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999935706776691	WITHOUT_CLASSIFICATION	6.429322330840234E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999935706776691	WITHOUT_CLASSIFICATION	6.429322330840234E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9992963459193133	WITHOUT_CLASSIFICATION	7.036540806868395E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999571126756128	WITHOUT_CLASSIFICATION	4.288732438714895E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999571126756128	WITHOUT_CLASSIFICATION	4.288732438714895E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999571126756128	WITHOUT_CLASSIFICATION	4.288732438714895E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998382911791948	WITHOUT_CLASSIFICATION	1.6170882080533415E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998382911791948	WITHOUT_CLASSIFICATION	1.6170882080533415E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999982495591242	WITHOUT_CLASSIFICATION	1.7504408758472654E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999982495591242	WITHOUT_CLASSIFICATION	1.7504408758472654E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999982495591242	WITHOUT_CLASSIFICATION	1.7504408758472654E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999921538346075	WITHOUT_CLASSIFICATION	7.846165392409025E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999921538346075	WITHOUT_CLASSIFICATION	7.846165392409025E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999921538346075	WITHOUT_CLASSIFICATION	7.846165392409025E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999997282852463	WITHOUT_CLASSIFICATION	2.717147536194552E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999997282852463	WITHOUT_CLASSIFICATION	2.717147536194552E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999886658913233	WITHOUT_CLASSIFICATION	1.1334108676599407E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999886658913233	WITHOUT_CLASSIFICATION	1.1334108676599407E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.999998177490048	WITHOUT_CLASSIFICATION	1.822509951938462E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.999998177490048	WITHOUT_CLASSIFICATION	1.822509951938462E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999995078523622	WITHOUT_CLASSIFICATION	4.921476377449986E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999995078523622	WITHOUT_CLASSIFICATION	4.921476377449986E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999985170284684	WITHOUT_CLASSIFICATION	1.482971531563111E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999985170284684	WITHOUT_CLASSIFICATION	1.482971531563111E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999461095930551	WITHOUT_CLASSIFICATION	5.389040694494926E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999461095930551	WITHOUT_CLASSIFICATION	5.389040694494926E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999991985627873	WITHOUT_CLASSIFICATION	8.014372126461058E-7	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999991985627873	WITHOUT_CLASSIFICATION	8.014372126461058E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999997282852463	WITHOUT_CLASSIFICATION	2.717147536194552E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999886658913233	WITHOUT_CLASSIFICATION	1.1334108676599407E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.999998177490048	WITHOUT_CLASSIFICATION	1.822509951938462E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999985170284684	WITHOUT_CLASSIFICATION	1.482971531563111E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999461095930551	WITHOUT_CLASSIFICATION	5.389040694494926E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999991985627873	WITHOUT_CLASSIFICATION	8.014372126461058E-7	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999942790464602	WITHOUT_CLASSIFICATION	5.720953539778744E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999920000875963	WITHOUT_CLASSIFICATION	7.999912403794584E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999950781225022	WITHOUT_CLASSIFICATION	4.9218774978066695E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9999793088484098	WITHOUT_CLASSIFICATION	2.069115159021029E-5	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.999990515048713	WITHOUT_CLASSIFICATION	9.484951287158873E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999963309817961	WITHOUT_CLASSIFICATION	3.6690182039393595E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999898534066519	WITHOUT_CLASSIFICATION	1.0146593348058516E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999913127656548	WITHOUT_CLASSIFICATION	8.68723434530838E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999556050970863	WITHOUT_CLASSIFICATION	4.439490291366744E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999996426266525	WITHOUT_CLASSIFICATION	3.573733474812311E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999992781604691	WITHOUT_CLASSIFICATION	7.218395309056029E-7	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.999999409135712	WITHOUT_CLASSIFICATION	5.908642880270377E-7	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999982822341416	WITHOUT_CLASSIFICATION	1.7177658584501437E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999993060416539	WITHOUT_CLASSIFICATION	6.939583461409732E-7	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999989858858508	WITHOUT_CLASSIFICATION	1.0141141493010418E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999941171342227	WITHOUT_CLASSIFICATION	5.8828657772989746E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999911487497748	WITHOUT_CLASSIFICATION	8.851250225134401E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.999996936829219	WITHOUT_CLASSIFICATION	3.0631707810227513E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999986794828337	WITHOUT_CLASSIFICATION	1.320517166300165E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9998970126747093	WITHOUT_CLASSIFICATION	1.02987325290706E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999988676926904	WITHOUT_CLASSIFICATION	1.1323073095739301E-6	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999999045092403	WITHOUT_CLASSIFICATION	9.549075978650625E-8	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999982075844303	WITHOUT_CLASSIFICATION	1.7924155697459608E-6	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999967053247231	WITHOUT_CLASSIFICATION	3.2946752769465255E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999900620265813	WITHOUT_CLASSIFICATION	9.937973418810814E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999907344496561	WITHOUT_CLASSIFICATION	9.265550343915937E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999917005942642	WITHOUT_CLASSIFICATION	8.299405735795713E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999992909414932	WITHOUT_CLASSIFICATION	7.090585068032905E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.999993757407598	WITHOUT_CLASSIFICATION	6.242592401948068E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999804500314216	WITHOUT_CLASSIFICATION	1.954996857848041E-5	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999921806061919	WITHOUT_CLASSIFICATION	7.819393808075382E-6	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999780467307327	WITHOUT_CLASSIFICATION	2.1953269267340272E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999994665205088	WITHOUT_CLASSIFICATION	5.334794912263396E-7	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999994665205088	WITHOUT_CLASSIFICATION	5.334794912263396E-7	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999971899009958	WITHOUT_CLASSIFICATION	2.8100990041786128E-6	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999998259155732	WITHOUT_CLASSIFICATION	1.7408442662937565E-7	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999831170512717	WITHOUT_CLASSIFICATION	1.6882948728239506E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999926551914284	WITHOUT_CLASSIFICATION	7.344808571661411E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999992409568441	WITHOUT_CLASSIFICATION	7.590431560116732E-7	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999979179874906	WITHOUT_CLASSIFICATION	2.0820125093510372E-6	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.99999991766865	WITHOUT_CLASSIFICATION	8.233135001461023E-8	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999780771841379	WITHOUT_CLASSIFICATION	2.1922815862117785E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999965335470762	WITHOUT_CLASSIFICATION	3.4664529237991207E-6	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.999994973860885	WITHOUT_CLASSIFICATION	5.0261391149666825E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999876880750072	WITHOUT_CLASSIFICATION	1.231192499294391E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999973819823584	WITHOUT_CLASSIFICATION	2.618017641603169E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950859859399	WITHOUT_CLASSIFICATION	4.91401406006074E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950859859399	WITHOUT_CLASSIFICATION	4.91401406006074E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999865292511696	WITHOUT_CLASSIFICATION	1.347074883037807E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999865292511696	WITHOUT_CLASSIFICATION	1.347074883037807E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999865292511696	WITHOUT_CLASSIFICATION	1.347074883037807E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999954116708589	WITHOUT_CLASSIFICATION	4.5883291410919505E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999645497382265	WITHOUT_CLASSIFICATION	3.5450261773631134E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999880378657973	WITHOUT_CLASSIFICATION	1.196213420278128E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999880378657973	WITHOUT_CLASSIFICATION	1.196213420278128E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999996870807503	WITHOUT_CLASSIFICATION	3.129192496727259E-7	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999597512551021	WITHOUT_CLASSIFICATION	4.02487448979315E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999989882798802	WITHOUT_CLASSIFICATION	1.011720119894168E-6	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999708669128604	WITHOUT_CLASSIFICATION	2.913308713954125E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999996845173956	WITHOUT_CLASSIFICATION	3.154826044718346E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999713652700735	WITHOUT_CLASSIFICATION	2.8634729926600957E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999335894876975	WITHOUT_CLASSIFICATION	6.641051230257816E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999990076649301	WITHOUT_CLASSIFICATION	9.923350699303E-7	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999988095580897	WITHOUT_CLASSIFICATION	1.190441910262894E-6	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999895313933153	WITHOUT_CLASSIFICATION	1.0468606684841955E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999997893165783	WITHOUT_CLASSIFICATION	2.106834217466089E-7	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999975969637381	WITHOUT_CLASSIFICATION	2.403036261899319E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999995458593861	WITHOUT_CLASSIFICATION	4.5414061399179984E-7	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999969956343568	WITHOUT_CLASSIFICATION	3.004365643159719E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999650511667354	WITHOUT_CLASSIFICATION	3.494883326458971E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999918433913295	WITHOUT_CLASSIFICATION	8.156608670527964E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999996345427217	WITHOUT_CLASSIFICATION	3.6545727827487756E-7	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999894774865883	WITHOUT_CLASSIFICATION	1.0522513411603858E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999875254765469	WITHOUT_CLASSIFICATION	1.24745234531138E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9997484790177005	WITHOUT_CLASSIFICATION	2.5152098229951384E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999720464554313	WITHOUT_CLASSIFICATION	2.7953544568796146E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999998201810024	WITHOUT_CLASSIFICATION	1.798189975970381E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9982447443538224	WITHOUT_CLASSIFICATION	0.0017552556461777151	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999989642368697	WITHOUT_CLASSIFICATION	1.0357631302940307E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999989642368697	WITHOUT_CLASSIFICATION	1.0357631302940307E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999989642368697	WITHOUT_CLASSIFICATION	1.0357631302940307E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999992575084212	WITHOUT_CLASSIFICATION	7.424915788508839E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999992575084212	WITHOUT_CLASSIFICATION	7.424915788508839E-7	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999268521602659	WITHOUT_CLASSIFICATION	7.314783973410848E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9993972747547374	WITHOUT_CLASSIFICATION	6.027252452625985E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9993972747547374	WITHOUT_CLASSIFICATION	6.027252452625985E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999974823714788	WITHOUT_CLASSIFICATION	2.517628521260829E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999889394064307	WITHOUT_CLASSIFICATION	1.1060593569359917E-5	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999268521602659	WITHOUT_CLASSIFICATION	7.314783973410848E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999964402004164	WITHOUT_CLASSIFICATION	3.559799583433783E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999268521602659	WITHOUT_CLASSIFICATION	7.314783973410848E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999898483150222	WITHOUT_CLASSIFICATION	1.0151684977684016E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999898483150222	WITHOUT_CLASSIFICATION	1.0151684977684016E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950859859399	WITHOUT_CLASSIFICATION	4.91401406006074E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9999262767575986	WITHOUT_CLASSIFICATION	7.372324240142842E-5	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9987293585851413	WITHOUT_CLASSIFICATION	0.0012706414148586625	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.999115385775039	WITHOUT_CLASSIFICATION	8.84614224961062E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9988905482700275	WITHOUT_CLASSIFICATION	0.0011094517299724464	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9993715924684382	WITHOUT_CLASSIFICATION	6.284075315617035E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9989670179661918	WITHOUT_CLASSIFICATION	0.0010329820338082223	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9986864020717126	WITHOUT_CLASSIFICATION	0.001313597928287431	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9983197325894575	WITHOUT_CLASSIFICATION	0.0016802674105424354	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9987204127493683	WITHOUT_CLASSIFICATION	0.0012795872506317898	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9987226038255396	WITHOUT_CLASSIFICATION	0.0012773961744605314	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9991773927561067	WITHOUT_CLASSIFICATION	8.226072438933575E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9987049452297315	WITHOUT_CLASSIFICATION	0.0012950547702685084	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9983139010773614	WITHOUT_CLASSIFICATION	0.001686098922638593	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9990300658754837	WITHOUT_CLASSIFICATION	9.699341245162437E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.998191868864692	WITHOUT_CLASSIFICATION	0.001808131135307853	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9991704241861195	WITHOUT_CLASSIFICATION	8.29575813880564E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9993466732621671	WITHOUT_CLASSIFICATION	6.533267378329288E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.99806553342144	WITHOUT_CLASSIFICATION	0.0019344665785599145	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9990237767963634	WITHOUT_CLASSIFICATION	9.762232036365386E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9987693466209456	WITHOUT_CLASSIFICATION	0.0012306533790542931	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9993767346839395	WITHOUT_CLASSIFICATION	6.23265316060542E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.999116659470381	WITHOUT_CLASSIFICATION	8.833405296189664E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9990017992315452	WITHOUT_CLASSIFICATION	9.98200768454858E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.999504171451751	WITHOUT_CLASSIFICATION	4.958285482490269E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9988438218379465	WITHOUT_CLASSIFICATION	0.0011561781620535523	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9985992465019331	WITHOUT_CLASSIFICATION	0.0014007534980669178	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9991777154581736	WITHOUT_CLASSIFICATION	8.222845418263947E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9975512804739982	WITHOUT_CLASSIFICATION	0.002448719526001833	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9992667275660537	WITHOUT_CLASSIFICATION	7.33272433946282E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9986032009747713	WITHOUT_CLASSIFICATION	0.0013967990252286547	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9992327173157396	WITHOUT_CLASSIFICATION	7.672826842603694E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9992652269510762	WITHOUT_CLASSIFICATION	7.347730489237564E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9991514311914955	WITHOUT_CLASSIFICATION	8.485688085045371E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9991351415594897	WITHOUT_CLASSIFICATION	8.648584405103035E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9988874270307769	WITHOUT_CLASSIFICATION	0.0011125729692231104	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9981685195403313	WITHOUT_CLASSIFICATION	0.0018314804596687734	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9990340052328269	WITHOUT_CLASSIFICATION	9.659947671732057E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9984262508085288	WITHOUT_CLASSIFICATION	0.0015737491914712466	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9989817246261218	WITHOUT_CLASSIFICATION	0.0010182753738782974	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9992441992215043	WITHOUT_CLASSIFICATION	7.558007784957867E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9979966144466856	WITHOUT_CLASSIFICATION	0.0020033855533144484	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9985998116342161	WITHOUT_CLASSIFICATION	0.0014001883657839827	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9984565186004897	WITHOUT_CLASSIFICATION	0.001543481399510373	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9989110965458928	WITHOUT_CLASSIFICATION	0.0010889034541072089	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9988362339651337	WITHOUT_CLASSIFICATION	0.0011637660348663445	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9990551519717106	WITHOUT_CLASSIFICATION	9.448480282894178E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9990927848123414	WITHOUT_CLASSIFICATION	9.072151876586095E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9984040390921558	WITHOUT_CLASSIFICATION	0.0015959609078442243	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9971624341330387	WITHOUT_CLASSIFICATION	0.002837565866961166	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9989637082583722	WITHOUT_CLASSIFICATION	0.0010362917416277303	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9994265315747264	WITHOUT_CLASSIFICATION	5.734684252736755E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9982073143532181	WITHOUT_CLASSIFICATION	0.001792685646781917	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9982053039469756	WITHOUT_CLASSIFICATION	0.0017946960530244116	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9985339089254529	WITHOUT_CLASSIFICATION	0.001466091074547187	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9991425121601539	WITHOUT_CLASSIFICATION	8.574878398461256E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9988064923751017	WITHOUT_CLASSIFICATION	0.0011935076248982461	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9993316196777979	WITHOUT_CLASSIFICATION	6.68380322202087E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9988031206506632	WITHOUT_CLASSIFICATION	0.0011968793493368252	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9975883224486519	WITHOUT_CLASSIFICATION	0.0024116775513479986	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9986543893134842	WITHOUT_CLASSIFICATION	0.0013456106865157862	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9972446522666678	WITHOUT_CLASSIFICATION	0.0027553477333321905	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9987034357563942	WITHOUT_CLASSIFICATION	0.0012965642436057845	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9991355333074146	WITHOUT_CLASSIFICATION	8.644666925854519E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9986826648392632	WITHOUT_CLASSIFICATION	0.0013173351607368062	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9991058386304723	WITHOUT_CLASSIFICATION	8.941613695278024E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.998468486095903	WITHOUT_CLASSIFICATION	0.0015315139040971038	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9980594374184134	WITHOUT_CLASSIFICATION	0.001940562581586548	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9991503534434446	WITHOUT_CLASSIFICATION	8.496465565554998E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9992085132660672	WITHOUT_CLASSIFICATION	7.914867339327508E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9991294839432371	WITHOUT_CLASSIFICATION	8.705160567629297E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9992277215205471	WITHOUT_CLASSIFICATION	7.7227847945289E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9994612784411735	WITHOUT_CLASSIFICATION	5.387215588265542E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9986173695732403	WITHOUT_CLASSIFICATION	0.0013826304267595833	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9991591703999482	WITHOUT_CLASSIFICATION	8.408296000517883E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9989084848781176	WITHOUT_CLASSIFICATION	0.0010915151218823665	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9982088040837429	WITHOUT_CLASSIFICATION	0.0017911959162570563	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9986869526152347	WITHOUT_CLASSIFICATION	0.0013130473847653157	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9976505951488941	WITHOUT_CLASSIFICATION	0.0023494048511059377	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9990786865179925	WITHOUT_CLASSIFICATION	9.213134820073984E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9989171234395897	WITHOUT_CLASSIFICATION	0.001082876560410253	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999900890407882	WITHOUT_CLASSIFICATION	9.910959211672265E-6	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999892333111805	WITHOUT_CLASSIFICATION	1.076668881936186E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999989941142151	WITHOUT_CLASSIFICATION	1.0058857848747797E-6	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999989811734417	WITHOUT_CLASSIFICATION	1.0188265583333059E-6	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999601422533	WITHOUT_CLASSIFICATION	3.9857746575887825E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999995755354528	WITHOUT_CLASSIFICATION	4.2446454719553783E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999672050002335	WITHOUT_CLASSIFICATION	3.279499976660885E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999889208228852	WITHOUT_CLASSIFICATION	1.1079177114855576E-5	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999980502745841	WITHOUT_CLASSIFICATION	1.9497254157867065E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.99999692621422	WITHOUT_CLASSIFICATION	3.0737857800764737E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999979179874906	WITHOUT_CLASSIFICATION	2.0820125093510372E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999954116708589	WITHOUT_CLASSIFICATION	4.5883291410919505E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999645497382265	WITHOUT_CLASSIFICATION	3.5450261773631134E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999880378657973	WITHOUT_CLASSIFICATION	1.196213420278128E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999894774865883	WITHOUT_CLASSIFICATION	1.0522513411603858E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999875254765469	WITHOUT_CLASSIFICATION	1.24745234531138E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999905847271442	WITHOUT_CLASSIFICATION	9.415272855766336E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999992575084212	WITHOUT_CLASSIFICATION	7.424915788508839E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950859859399	WITHOUT_CLASSIFICATION	4.91401406006074E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999600085116654	WITHOUT_CLASSIFICATION	3.999148833451889E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999938503190706	WITHOUT_CLASSIFICATION	6.149680929407475E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999986263984314	WITHOUT_CLASSIFICATION	1.3736015686509773E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999991156427077	WITHOUT_CLASSIFICATION	8.84357292262519E-7	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999740666613375	WITHOUT_CLASSIFICATION	2.5933338662575895E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999969822458519	WITHOUT_CLASSIFICATION	3.017754148140568E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999994175684903	WITHOUT_CLASSIFICATION	5.824315097095124E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999990480383107	WITHOUT_CLASSIFICATION	9.519616892242871E-7	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.999996936829219	WITHOUT_CLASSIFICATION	3.0631707810227513E-6	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.999990545454428	WITHOUT_CLASSIFICATION	9.454545571931837E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999985056230553	WITHOUT_CLASSIFICATION	1.4943769447501727E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999992854377575	WITHOUT_CLASSIFICATION	7.145622425539655E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9998974261392443	WITHOUT_CLASSIFICATION	1.0257386075565993E-4	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999972158785666	WITHOUT_CLASSIFICATION	2.7841214333350493E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999951329990664	WITHOUT_CLASSIFICATION	4.867000933705434E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999960577713516	WITHOUT_CLASSIFICATION	3.94222864835583E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999970013944047	WITHOUT_CLASSIFICATION	2.998605595200335E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999996580161407	WITHOUT_CLASSIFICATION	3.419838593902123E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.99999966894569	WITHOUT_CLASSIFICATION	3.3105430990941756E-7	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.999979702965924	WITHOUT_CLASSIFICATION	2.0297034076010438E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999914899646264	WITHOUT_CLASSIFICATION	8.510035373590101E-6	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999840246918764	WITHOUT_CLASSIFICATION	1.597530812357481E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999994785265226	WITHOUT_CLASSIFICATION	5.214734773685335E-7	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999990681165845	WITHOUT_CLASSIFICATION	9.318834155755523E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9998216929975438	WITHOUT_CLASSIFICATION	1.7830700245621663E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999979395281862	WITHOUT_CLASSIFICATION	2.0604718138805582E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999648826631626	WITHOUT_CLASSIFICATION	3.511733683728143E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999979687484	WITHOUT_CLASSIFICATION	2.0312515887874763E-9	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.999998689863601	WITHOUT_CLASSIFICATION	1.3101363990216048E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999997714887601	WITHOUT_CLASSIFICATION	2.2851123988562557E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999946495108551	WITHOUT_CLASSIFICATION	5.350489144878762E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999884219074	WITHOUT_CLASSIFICATION	1.1578092539651481E-8	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999884219074	WITHOUT_CLASSIFICATION	1.1578092539651481E-8	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999995804368208	WITHOUT_CLASSIFICATION	4.1956317924223085E-7	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999928450507692	WITHOUT_CLASSIFICATION	7.154949230747792E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999931082742107	WITHOUT_CLASSIFICATION	6.891725789252639E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999126321856997	WITHOUT_CLASSIFICATION	8.736781430038158E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999911957661337	WITHOUT_CLASSIFICATION	8.804233866290434E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999996286684213	WITHOUT_CLASSIFICATION	3.713315787461673E-7	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9998990222487173	WITHOUT_CLASSIFICATION	1.0097775128267301E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999985264766766	WITHOUT_CLASSIFICATION	1.4735233233741795E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999517114660409	WITHOUT_CLASSIFICATION	4.8288533959131694E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999998798467093	WITHOUT_CLASSIFICATION	1.201532907056786E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999967347010525	WITHOUT_CLASSIFICATION	3.265298947326611E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999981574759823	WITHOUT_CLASSIFICATION	1.842524017711304E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999944296202521	WITHOUT_CLASSIFICATION	5.570379747877778E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999984154058158	WITHOUT_CLASSIFICATION	1.5845941841928198E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999986051305559	WITHOUT_CLASSIFICATION	1.394869444120832E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999983808148657	WITHOUT_CLASSIFICATION	1.619185134215671E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999999022469501	WITHOUT_CLASSIFICATION	9.775304992653405E-8	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9993841557625323	WITHOUT_CLASSIFICATION	6.158442374677835E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999972079096369	WITHOUT_CLASSIFICATION	2.792090363003117E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999995854869218	WITHOUT_CLASSIFICATION	4.145130782383216E-7	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999957875154727	WITHOUT_CLASSIFICATION	4.2124845272349265E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999812960586931	WITHOUT_CLASSIFICATION	1.870394130690766E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999998734048843	WITHOUT_CLASSIFICATION	1.2659511580243618E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999588439843	WITHOUT_CLASSIFICATION	4.115601565958466E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999237386616	WITHOUT_CLASSIFICATION	7.6261338368062E-8	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999997453535078	WITHOUT_CLASSIFICATION	2.5464649217257756E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999784284049	WITHOUT_CLASSIFICATION	2.157159515638387E-8	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998724766226	WITHOUT_CLASSIFICATION	1.2752337739552046E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999358745397	WITHOUT_CLASSIFICATION	6.412546030189694E-8	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999015007747	WITHOUT_CLASSIFICATION	9.849922532571932E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999963482937938	WITHOUT_CLASSIFICATION	3.6517062061665343E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999665798217	WITHOUT_CLASSIFICATION	3.3420178355896915E-8	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999879507082	WITHOUT_CLASSIFICATION	1.2049291710563118E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999999946854333	WITHOUT_CLASSIFICATION	5.314566687689939E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999988439670812	WITHOUT_CLASSIFICATION	1.156032918835121E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999996109967744	WITHOUT_CLASSIFICATION	3.890032255732731E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999885864891292	WITHOUT_CLASSIFICATION	1.1413510870747775E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999994627108902	WITHOUT_CLASSIFICATION	5.372891097040083E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999987755741783	WITHOUT_CLASSIFICATION	1.2244258216756395E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999201081531	WITHOUT_CLASSIFICATION	7.989184682552433E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999982600866699	WITHOUT_CLASSIFICATION	1.7399133300903362E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999976901829337	WITHOUT_CLASSIFICATION	2.3098170662732217E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999855525076584	WITHOUT_CLASSIFICATION	1.4447492341562041E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999990974503907	WITHOUT_CLASSIFICATION	9.025496093040927E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999979291034126	WITHOUT_CLASSIFICATION	2.070896587441536E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999542262605278	WITHOUT_CLASSIFICATION	4.5773739472295954E-5	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999983772683236	WITHOUT_CLASSIFICATION	1.6227316764422895E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999996933523984	WITHOUT_CLASSIFICATION	3.0664760167723433E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999948241887916	WITHOUT_CLASSIFICATION	5.175811208438281E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999985200298841	WITHOUT_CLASSIFICATION	1.4799701158803494E-6	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999662511459009	WITHOUT_CLASSIFICATION	3.3748854099140455E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999996485789001	WITHOUT_CLASSIFICATION	3.5142109996985275E-7	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999998633454531	WITHOUT_CLASSIFICATION	1.3665454687651255E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999998873959003	WITHOUT_CLASSIFICATION	1.1260409976344409E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999653712447	WITHOUT_CLASSIFICATION	3.462875537119029E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999994232855569	WITHOUT_CLASSIFICATION	5.767144430388846E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999841369276627	WITHOUT_CLASSIFICATION	1.5863072337230803E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999997857959321	WITHOUT_CLASSIFICATION	2.142040677969241E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999948516458771	WITHOUT_CLASSIFICATION	5.148354122908046E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999995476911405	WITHOUT_CLASSIFICATION	4.5230885952987104E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999985235448455	WITHOUT_CLASSIFICATION	1.4764551544069484E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999992981097694	WITHOUT_CLASSIFICATION	7.018902305780876E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997865487782	WITHOUT_CLASSIFICATION	2.1345122191342644E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999999687688705	WITHOUT_CLASSIFICATION	3.1231129506746814E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999995197324644	WITHOUT_CLASSIFICATION	4.802675355424261E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999997409680436	WITHOUT_CLASSIFICATION	2.590319564140749E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999997563240129	WITHOUT_CLASSIFICATION	2.436759870964439E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999947374660013	WITHOUT_CLASSIFICATION	5.262533998649661E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.999985139408494	WITHOUT_CLASSIFICATION	1.4860591506071908E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999064747532	WITHOUT_CLASSIFICATION	9.352524678767478E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999823286652	WITHOUT_CLASSIFICATION	1.767133484862809E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999932632960601	WITHOUT_CLASSIFICATION	6.736703939944854E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999847000131307	WITHOUT_CLASSIFICATION	1.529998686929141E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999902115367811	WITHOUT_CLASSIFICATION	9.788463218886592E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999670986125889	WITHOUT_CLASSIFICATION	3.2901387411118006E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998938750675019	WITHOUT_CLASSIFICATION	1.0612493249806717E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999975080856397	WITHOUT_CLASSIFICATION	2.4919143602869606E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997942984867	WITHOUT_CLASSIFICATION	2.0570151317622532E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999949688402052	WITHOUT_CLASSIFICATION	5.031159794723933E-6	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999850935591	WITHOUT_CLASSIFICATION	1.490644081403428E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.999999944881224	WITHOUT_CLASSIFICATION	5.5118776133600283E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999996176094856	WITHOUT_CLASSIFICATION	3.823905143735089E-7	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999981451775644	WITHOUT_CLASSIFICATION	1.8548224356847558E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999989441150204	WITHOUT_CLASSIFICATION	1.0558849795928704E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999985628072	WITHOUT_CLASSIFICATION	1.4371927809961813E-9	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998903986967118	WITHOUT_CLASSIFICATION	1.096013032881631E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999254580166975	WITHOUT_CLASSIFICATION	7.454198330245857E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999427065816019	WITHOUT_CLASSIFICATION	5.729341839810039E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999890602703	WITHOUT_CLASSIFICATION	1.0939729700446038E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999941183141994	WITHOUT_CLASSIFICATION	5.881685800584708E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999998798951488	WITHOUT_CLASSIFICATION	1.201048511621669E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999997501757518	WITHOUT_CLASSIFICATION	2.498242481601893E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999990404711192	WITHOUT_CLASSIFICATION	9.595288808108143E-7	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.999999608484485	WITHOUT_CLASSIFICATION	3.915155149782585E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99999981291726	WITHOUT_CLASSIFICATION	1.870827399290473E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999998596615775	WITHOUT_CLASSIFICATION	1.4033842250562562E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999997038050545	WITHOUT_CLASSIFICATION	2.9619494548302874E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.999999623145241	WITHOUT_CLASSIFICATION	3.7685475898911075E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999999062487382	WITHOUT_CLASSIFICATION	9.375126172382249E-8	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997975188593	WITHOUT_CLASSIFICATION	2.0248114075043175E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.99981674124331	WITHOUT_CLASSIFICATION	1.8325875669000913E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999922781084604	WITHOUT_CLASSIFICATION	7.721891539663254E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999597334128799	WITHOUT_CLASSIFICATION	4.026658712006688E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.99999037852473	WITHOUT_CLASSIFICATION	9.621475269974751E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999593842172	WITHOUT_CLASSIFICATION	4.0615782800053555E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917264244326	WITHOUT_CLASSIFICATION	8.273575567431859E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999994105386003	WITHOUT_CLASSIFICATION	5.894613996926303E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892046347604	WITHOUT_CLASSIFICATION	1.0795365239642346E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999905125484557	WITHOUT_CLASSIFICATION	9.487451544205688E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999798570780388	WITHOUT_CLASSIFICATION	2.0142921961109014E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917279521592	WITHOUT_CLASSIFICATION	8.272047840862087E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999877150754756	WITHOUT_CLASSIFICATION	1.2284924524373097E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850668487694	WITHOUT_CLASSIFICATION	1.4933151230499712E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986644122545	WITHOUT_CLASSIFICATION	1.3355877454941342E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902080228206	WITHOUT_CLASSIFICATION	9.791977179520015E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988274109198	WITHOUT_CLASSIFICATION	1.1725890801895295E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999846360762256	WITHOUT_CLASSIFICATION	1.5363923774496122E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999993541653652	WITHOUT_CLASSIFICATION	6.45834634805556E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999993806699375	WITHOUT_CLASSIFICATION	6.193300625029862E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999698918697185	WITHOUT_CLASSIFICATION	3.010813028152472E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999585946562569	WITHOUT_CLASSIFICATION	4.1405343743129116E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999869107202609	WITHOUT_CLASSIFICATION	1.3089279739092367E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886509020303	WITHOUT_CLASSIFICATION	1.1349097969713223E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917043699181	WITHOUT_CLASSIFICATION	8.295630081933146E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999843684979752	WITHOUT_CLASSIFICATION	1.5631502024778217E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999836831099005	WITHOUT_CLASSIFICATION	1.6316890099490744E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919767891822	WITHOUT_CLASSIFICATION	8.023210817878172E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919767891822	WITHOUT_CLASSIFICATION	8.023210817878172E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999722058702614	WITHOUT_CLASSIFICATION	2.7794129738577447E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999857871458768	WITHOUT_CLASSIFICATION	1.4212854123245701E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999859425193941	WITHOUT_CLASSIFICATION	1.405748060588672E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883682091032	WITHOUT_CLASSIFICATION	1.1631790896692114E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999781489290542	WITHOUT_CLASSIFICATION	2.185107094570011E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999672990536475	WITHOUT_CLASSIFICATION	3.27009463525943E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999864470293479	WITHOUT_CLASSIFICATION	1.3552970652172027E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999873158424577	WITHOUT_CLASSIFICATION	1.2684157542279704E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999889031877505	WITHOUT_CLASSIFICATION	1.1096812249487098E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927537959097	WITHOUT_CLASSIFICATION	7.246204090309937E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999813387899342	WITHOUT_CLASSIFICATION	1.866121006571998E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999938880370687	WITHOUT_CLASSIFICATION	6.111962931298654E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999985706065162	WITHOUT_CLASSIFICATION	1.4293934837951008E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999853415117688	WITHOUT_CLASSIFICATION	1.4658488231261996E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999808368423495	WITHOUT_CLASSIFICATION	1.9163157650465252E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999729253802677	WITHOUT_CLASSIFICATION	2.707461973238314E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883166170469	WITHOUT_CLASSIFICATION	1.1683382953096915E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917335905903	WITHOUT_CLASSIFICATION	8.266409409751652E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999986750085909	WITHOUT_CLASSIFICATION	1.3249914091112786E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999812251861621	WITHOUT_CLASSIFICATION	1.877481383797843E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999768937934417	WITHOUT_CLASSIFICATION	2.3106206558247542E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999941305521782	WITHOUT_CLASSIFICATION	5.869447821722076E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999941305521782	WITHOUT_CLASSIFICATION	5.869447821722076E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992450576232	WITHOUT_CLASSIFICATION	7.549423767928817E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992450576232	WITHOUT_CLASSIFICATION	7.549423767928817E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999021615469	WITHOUT_CLASSIFICATION	9.783845309969495E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999862567353676	WITHOUT_CLASSIFICATION	1.3743264632342288E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999993806699375	WITHOUT_CLASSIFICATION	6.193300625029862E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999812251861621	WITHOUT_CLASSIFICATION	1.877481383797843E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999941305521782	WITHOUT_CLASSIFICATION	5.869447821722076E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992450576232	WITHOUT_CLASSIFICATION	7.549423767928817E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999862567353676	WITHOUT_CLASSIFICATION	1.3743264632342288E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999888879148695	WITHOUT_CLASSIFICATION	1.1112085130533024E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999802359980017	WITHOUT_CLASSIFICATION	1.9764001998251007E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999669339586608	WITHOUT_CLASSIFICATION	3.3066041339119775E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999719337746796	WITHOUT_CLASSIFICATION	2.8066225320341824E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999590706014821	WITHOUT_CLASSIFICATION	4.092939851777089E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999877248511181	WITHOUT_CLASSIFICATION	1.2275148881999243E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916537650292	WITHOUT_CLASSIFICATION	8.346234970787708E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902591869068	WITHOUT_CLASSIFICATION	9.740813093128344E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916537650292	WITHOUT_CLASSIFICATION	8.346234970787708E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999678122741115	WITHOUT_CLASSIFICATION	3.218772588846764E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999706666074327	WITHOUT_CLASSIFICATION	2.9333392567222536E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865877655023	WITHOUT_CLASSIFICATION	1.3412234497695187E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897435156548	WITHOUT_CLASSIFICATION	1.0256484345172321E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999758063442763	WITHOUT_CLASSIFICATION	2.4193655723698125E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999740977970045	WITHOUT_CLASSIFICATION	2.5902202995404828E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999935201237101	WITHOUT_CLASSIFICATION	6.47987628996021E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999803172648059	WITHOUT_CLASSIFICATION	1.9682735194084826E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999845132714101	WITHOUT_CLASSIFICATION	1.5486728589919645E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926628018323	WITHOUT_CLASSIFICATION	7.3371981676583645E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880977215928	WITHOUT_CLASSIFICATION	1.1902278407216581E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875210957767	WITHOUT_CLASSIFICATION	1.2478904223417951E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902159820782	WITHOUT_CLASSIFICATION	9.784017921819571E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858278697521	WITHOUT_CLASSIFICATION	1.4172130247968655E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999875219912482	WITHOUT_CLASSIFICATION	1.2478008751802373E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892493346465	WITHOUT_CLASSIFICATION	1.0750665353509735E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999754818758552	WITHOUT_CLASSIFICATION	2.4518124144858654E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904363150356	WITHOUT_CLASSIFICATION	9.563684964342265E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999932333565811	WITHOUT_CLASSIFICATION	6.766643418902707E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905746022459	WITHOUT_CLASSIFICATION	9.425397754142083E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999995854869218	WITHOUT_CLASSIFICATION	4.145130782383216E-7	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891501031476	WITHOUT_CLASSIFICATION	1.0849896852462603E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999405018893129	WITHOUT_CLASSIFICATION	5.9498110687126096E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874136232083	WITHOUT_CLASSIFICATION	1.2586376791702214E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880977215928	WITHOUT_CLASSIFICATION	1.1902278407216581E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999890472203524	WITHOUT_CLASSIFICATION	1.0952779647702263E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999573074037008	WITHOUT_CLASSIFICATION	4.2692596299132424E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999799050699127	WITHOUT_CLASSIFICATION	2.0094930087178303E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997567559414	WITHOUT_CLASSIFICATION	2.432440585516617E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999999861140899	WITHOUT_CLASSIFICATION	1.3885910099610286E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999997859231634	WITHOUT_CLASSIFICATION	2.1407683663557038E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999998508702443	WITHOUT_CLASSIFICATION	1.491297555745854E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999997656110886	WITHOUT_CLASSIFICATION	2.343889113912172E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999168609839	WITHOUT_CLASSIFICATION	8.313901612036319E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999999745952836	WITHOUT_CLASSIFICATION	2.5404716398371024E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999104237767	WITHOUT_CLASSIFICATION	8.957622331199471E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997262827219	WITHOUT_CLASSIFICATION	2.737172780431087E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999998747260914	WITHOUT_CLASSIFICATION	1.252739086257791E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999966391264893	WITHOUT_CLASSIFICATION	3.360873510852182E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99999981291726	WITHOUT_CLASSIFICATION	1.870827399290473E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999962778045968	WITHOUT_CLASSIFICATION	3.7221954032131144E-6	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997425897066	WITHOUT_CLASSIFICATION	2.5741029346391087E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999492561402405	WITHOUT_CLASSIFICATION	5.074385975957842E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999982396034895	WITHOUT_CLASSIFICATION	1.7603965104998375E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998890360202	WITHOUT_CLASSIFICATION	1.109639797418908E-7	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.999973766732398	WITHOUT_CLASSIFICATION	2.6233267601959432E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999999692421589	WITHOUT_CLASSIFICATION	3.0757841092370024E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999996687691542	WITHOUT_CLASSIFICATION	3.312308457673853E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999995113742577	WITHOUT_CLASSIFICATION	4.886257422048858E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999648826631626	WITHOUT_CLASSIFICATION	3.511733683728143E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999979687484	WITHOUT_CLASSIFICATION	2.0312515887874763E-9	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.999998689863601	WITHOUT_CLASSIFICATION	1.3101363990216048E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999997714887601	WITHOUT_CLASSIFICATION	2.2851123988562557E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999946495108551	WITHOUT_CLASSIFICATION	5.350489144878762E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999884219074	WITHOUT_CLASSIFICATION	1.1578092539651481E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999928450507692	WITHOUT_CLASSIFICATION	7.154949230747792E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999931082742107	WITHOUT_CLASSIFICATION	6.891725789252639E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999126321856997	WITHOUT_CLASSIFICATION	8.736781430038158E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999911957661337	WITHOUT_CLASSIFICATION	8.804233866290434E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999996286684213	WITHOUT_CLASSIFICATION	3.713315787461673E-7	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999982139199004	WITHOUT_CLASSIFICATION	1.7860800996931314E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999941183141994	WITHOUT_CLASSIFICATION	5.881685800584708E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999998798467093	WITHOUT_CLASSIFICATION	1.201532907056786E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999981574759823	WITHOUT_CLASSIFICATION	1.842524017711304E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999999022469501	WITHOUT_CLASSIFICATION	9.775304992653405E-8	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9993841557625323	WITHOUT_CLASSIFICATION	6.158442374677835E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999972079096369	WITHOUT_CLASSIFICATION	2.792090363003117E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999517114660409	WITHOUT_CLASSIFICATION	4.8288533959131694E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999967347010525	WITHOUT_CLASSIFICATION	3.265298947326611E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999995854869218	WITHOUT_CLASSIFICATION	4.145130782383216E-7	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999984154058158	WITHOUT_CLASSIFICATION	1.5845941841928198E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999979395281862	WITHOUT_CLASSIFICATION	2.0604718138805582E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999944296202521	WITHOUT_CLASSIFICATION	5.570379747877778E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999998734048843	WITHOUT_CLASSIFICATION	1.2659511580243618E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999588439843	WITHOUT_CLASSIFICATION	4.115601565958466E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999237386616	WITHOUT_CLASSIFICATION	7.6261338368062E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99999981291726	WITHOUT_CLASSIFICATION	1.870827399290473E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998831319898221	WITHOUT_CLASSIFICATION	1.1686801017779905E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999993120252	WITHOUT_CLASSIFICATION	6.87974652853582E-10	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999784284049	WITHOUT_CLASSIFICATION	2.157159515638387E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999358745397	WITHOUT_CLASSIFICATION	6.412546030189694E-8	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999671796912	WITHOUT_CLASSIFICATION	3.282030880662884E-8	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999015007747	WITHOUT_CLASSIFICATION	9.849922532571932E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999963482937938	WITHOUT_CLASSIFICATION	3.6517062061665343E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999879507082	WITHOUT_CLASSIFICATION	1.2049291710563118E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999998870784689	WITHOUT_CLASSIFICATION	1.1292153118605461E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999999946854333	WITHOUT_CLASSIFICATION	5.314566687689939E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999988439670812	WITHOUT_CLASSIFICATION	1.156032918835121E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999996109967744	WITHOUT_CLASSIFICATION	3.890032255732731E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999956682225232	WITHOUT_CLASSIFICATION	4.3317774767987925E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999885864891292	WITHOUT_CLASSIFICATION	1.1413510870747775E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999914307691818	WITHOUT_CLASSIFICATION	8.569230818108547E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999982600866699	WITHOUT_CLASSIFICATION	1.7399133300903362E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999994627108902	WITHOUT_CLASSIFICATION	5.372891097040083E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999987755741783	WITHOUT_CLASSIFICATION	1.2244258216756395E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999855525076584	WITHOUT_CLASSIFICATION	1.4447492341562041E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999990974503907	WITHOUT_CLASSIFICATION	9.025496093040927E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999979291034126	WITHOUT_CLASSIFICATION	2.070896587441536E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999974711410186	WITHOUT_CLASSIFICATION	2.528858981565856E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999542262605278	WITHOUT_CLASSIFICATION	4.5773739472295954E-5	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999983772683236	WITHOUT_CLASSIFICATION	1.6227316764422895E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999996933523984	WITHOUT_CLASSIFICATION	3.0664760167723433E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999948241887916	WITHOUT_CLASSIFICATION	5.175811208438281E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999985200298841	WITHOUT_CLASSIFICATION	1.4799701158803494E-6	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999662511459009	WITHOUT_CLASSIFICATION	3.3748854099140455E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999996485789001	WITHOUT_CLASSIFICATION	3.5142109996985275E-7	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999998633454531	WITHOUT_CLASSIFICATION	1.3665454687651255E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999998873959003	WITHOUT_CLASSIFICATION	1.1260409976344409E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999998873959003	WITHOUT_CLASSIFICATION	1.1260409976344409E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999653712447	WITHOUT_CLASSIFICATION	3.462875537119029E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999994232855569	WITHOUT_CLASSIFICATION	5.767144430388846E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999841369276627	WITHOUT_CLASSIFICATION	1.5863072337230803E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999997857959321	WITHOUT_CLASSIFICATION	2.142040677969241E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999995476911405	WITHOUT_CLASSIFICATION	4.5230885952987104E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999985235448455	WITHOUT_CLASSIFICATION	1.4764551544069484E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999992981097694	WITHOUT_CLASSIFICATION	7.018902305780876E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997865487782	WITHOUT_CLASSIFICATION	2.1345122191342644E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999995197324644	WITHOUT_CLASSIFICATION	4.802675355424261E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999312548788	WITHOUT_CLASSIFICATION	6.87451211606376E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999997409680436	WITHOUT_CLASSIFICATION	2.590319564140749E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999997563240129	WITHOUT_CLASSIFICATION	2.436759870964439E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999947374660013	WITHOUT_CLASSIFICATION	5.262533998649661E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.999985139408494	WITHOUT_CLASSIFICATION	1.4860591506071908E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999064747532	WITHOUT_CLASSIFICATION	9.352524678767478E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999932632960601	WITHOUT_CLASSIFICATION	6.736703939944854E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999847000131307	WITHOUT_CLASSIFICATION	1.529998686929141E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999902115367811	WITHOUT_CLASSIFICATION	9.788463218886592E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999670986125889	WITHOUT_CLASSIFICATION	3.2901387411118006E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998938750675019	WITHOUT_CLASSIFICATION	1.0612493249806717E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999975080856397	WITHOUT_CLASSIFICATION	2.4919143602869606E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997942984867	WITHOUT_CLASSIFICATION	2.0570151317622532E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999949688402052	WITHOUT_CLASSIFICATION	5.031159794723933E-6	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999850935591	WITHOUT_CLASSIFICATION	1.490644081403428E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.999999944881224	WITHOUT_CLASSIFICATION	5.5118776133600283E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999996176094856	WITHOUT_CLASSIFICATION	3.823905143735089E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999989441150204	WITHOUT_CLASSIFICATION	1.0558849795928704E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998903986967118	WITHOUT_CLASSIFICATION	1.096013032881631E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999254580166975	WITHOUT_CLASSIFICATION	7.454198330245857E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999427065816019	WITHOUT_CLASSIFICATION	5.729341839810039E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999890602703	WITHOUT_CLASSIFICATION	1.0939729700446038E-8	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999483577610834	WITHOUT_CLASSIFICATION	5.164223891656464E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999848328519818	WITHOUT_CLASSIFICATION	1.5167148018113582E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999994372966354	WITHOUT_CLASSIFICATION	5.627033646915819E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999998798951488	WITHOUT_CLASSIFICATION	1.201048511621669E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999572904179	WITHOUT_CLASSIFICATION	4.270958194928662E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999997501757518	WITHOUT_CLASSIFICATION	2.498242481601893E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999990404711192	WITHOUT_CLASSIFICATION	9.595288808108143E-7	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.999999608484485	WITHOUT_CLASSIFICATION	3.915155149782585E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999994536301354	WITHOUT_CLASSIFICATION	5.46369864486853E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999998596615775	WITHOUT_CLASSIFICATION	1.4033842250562562E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999997038050545	WITHOUT_CLASSIFICATION	2.9619494548302874E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.999999623145241	WITHOUT_CLASSIFICATION	3.7685475898911075E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999999062487382	WITHOUT_CLASSIFICATION	9.375126172382249E-8	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997975188593	WITHOUT_CLASSIFICATION	2.0248114075043175E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.99981674124331	WITHOUT_CLASSIFICATION	1.8325875669000913E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999922781084604	WITHOUT_CLASSIFICATION	7.721891539663254E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999597334128799	WITHOUT_CLASSIFICATION	4.026658712006688E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.99999037852473	WITHOUT_CLASSIFICATION	9.621475269974751E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917264244326	WITHOUT_CLASSIFICATION	8.273575567431859E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999994105386003	WITHOUT_CLASSIFICATION	5.894613996926303E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892046347604	WITHOUT_CLASSIFICATION	1.0795365239642346E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999905125484557	WITHOUT_CLASSIFICATION	9.487451544205688E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999936004356597	WITHOUT_CLASSIFICATION	6.399564340332025E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999798570780388	WITHOUT_CLASSIFICATION	2.0142921961109014E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917279521592	WITHOUT_CLASSIFICATION	8.272047840862087E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999877150754756	WITHOUT_CLASSIFICATION	1.2284924524373097E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999850668487694	WITHOUT_CLASSIFICATION	1.4933151230499712E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986644122545	WITHOUT_CLASSIFICATION	1.3355877454941342E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902080228206	WITHOUT_CLASSIFICATION	9.791977179520015E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988274109198	WITHOUT_CLASSIFICATION	1.1725890801895295E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999804455839029	WITHOUT_CLASSIFICATION	1.955441609717925E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999993541653652	WITHOUT_CLASSIFICATION	6.45834634805556E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999993806699375	WITHOUT_CLASSIFICATION	6.193300625029862E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999585946562569	WITHOUT_CLASSIFICATION	4.1405343743129116E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999869107202609	WITHOUT_CLASSIFICATION	1.3089279739092367E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886509020303	WITHOUT_CLASSIFICATION	1.1349097969713223E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917043699181	WITHOUT_CLASSIFICATION	8.295630081933146E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999843684979752	WITHOUT_CLASSIFICATION	1.5631502024778217E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999799060977937	WITHOUT_CLASSIFICATION	2.0093902206279373E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999836831099005	WITHOUT_CLASSIFICATION	1.6316890099490744E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919767891822	WITHOUT_CLASSIFICATION	8.023210817878172E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999857871458768	WITHOUT_CLASSIFICATION	1.4212854123245701E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999873158424577	WITHOUT_CLASSIFICATION	1.2684157542279704E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919767891822	WITHOUT_CLASSIFICATION	8.023210817878172E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999859425193941	WITHOUT_CLASSIFICATION	1.405748060588672E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883682091032	WITHOUT_CLASSIFICATION	1.1631790896692114E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999781489290542	WITHOUT_CLASSIFICATION	2.185107094570011E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999672990536475	WITHOUT_CLASSIFICATION	3.27009463525943E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999864470293479	WITHOUT_CLASSIFICATION	1.3552970652172027E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999889031877505	WITHOUT_CLASSIFICATION	1.1096812249487098E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927537959097	WITHOUT_CLASSIFICATION	7.246204090309937E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999813387899342	WITHOUT_CLASSIFICATION	1.866121006571998E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999938880370687	WITHOUT_CLASSIFICATION	6.111962931298654E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999985706065162	WITHOUT_CLASSIFICATION	1.4293934837951008E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999823959485684	WITHOUT_CLASSIFICATION	1.7604051431660884E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999713217865498	WITHOUT_CLASSIFICATION	2.867821345017494E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999808368423495	WITHOUT_CLASSIFICATION	1.9163157650465252E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999729253802677	WITHOUT_CLASSIFICATION	2.707461973238314E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917335905903	WITHOUT_CLASSIFICATION	8.266409409751652E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999945253310202	WITHOUT_CLASSIFICATION	5.474668979851941E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883166170469	WITHOUT_CLASSIFICATION	1.1683382953096915E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999986750085909	WITHOUT_CLASSIFICATION	1.3249914091112786E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999812251861621	WITHOUT_CLASSIFICATION	1.877481383797843E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999941305521782	WITHOUT_CLASSIFICATION	5.869447821722076E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999941305521782	WITHOUT_CLASSIFICATION	5.869447821722076E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992450576232	WITHOUT_CLASSIFICATION	7.549423767928817E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992450576232	WITHOUT_CLASSIFICATION	7.549423767928817E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999021615469	WITHOUT_CLASSIFICATION	9.783845309969495E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999021615469	WITHOUT_CLASSIFICATION	9.783845309969495E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999862567353676	WITHOUT_CLASSIFICATION	1.3743264632342288E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999888879148695	WITHOUT_CLASSIFICATION	1.1112085130533024E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999993806699375	WITHOUT_CLASSIFICATION	6.193300625029862E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999812251861621	WITHOUT_CLASSIFICATION	1.877481383797843E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999941305521782	WITHOUT_CLASSIFICATION	5.869447821722076E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992450576232	WITHOUT_CLASSIFICATION	7.549423767928817E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999802359980017	WITHOUT_CLASSIFICATION	1.9764001998251007E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999669339586608	WITHOUT_CLASSIFICATION	3.3066041339119775E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999719337746796	WITHOUT_CLASSIFICATION	2.8066225320341824E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999590706014821	WITHOUT_CLASSIFICATION	4.092939851777089E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999877248511181	WITHOUT_CLASSIFICATION	1.2275148881999243E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902591869068	WITHOUT_CLASSIFICATION	9.740813093128344E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902591869068	WITHOUT_CLASSIFICATION	9.740813093128344E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916537650292	WITHOUT_CLASSIFICATION	8.346234970787708E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999678122741115	WITHOUT_CLASSIFICATION	3.218772588846764E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999706666074327	WITHOUT_CLASSIFICATION	2.9333392567222536E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865877655023	WITHOUT_CLASSIFICATION	1.3412234497695187E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897435156548	WITHOUT_CLASSIFICATION	1.0256484345172321E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925986998842	WITHOUT_CLASSIFICATION	7.4013001156569285E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927603986355	WITHOUT_CLASSIFICATION	7.239601364551526E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916537650292	WITHOUT_CLASSIFICATION	8.346234970787708E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999758063442763	WITHOUT_CLASSIFICATION	2.4193655723698125E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999740977970045	WITHOUT_CLASSIFICATION	2.5902202995404828E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999935201237101	WITHOUT_CLASSIFICATION	6.47987628996021E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999845132714101	WITHOUT_CLASSIFICATION	1.5486728589919645E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926628018323	WITHOUT_CLASSIFICATION	7.3371981676583645E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880977215928	WITHOUT_CLASSIFICATION	1.1902278407216581E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875210957767	WITHOUT_CLASSIFICATION	1.2478904223417951E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902159820782	WITHOUT_CLASSIFICATION	9.784017921819571E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858278697521	WITHOUT_CLASSIFICATION	1.4172130247968655E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999875219912482	WITHOUT_CLASSIFICATION	1.2478008751802373E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892493346465	WITHOUT_CLASSIFICATION	1.0750665353509735E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999754818758552	WITHOUT_CLASSIFICATION	2.4518124144858654E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904363150356	WITHOUT_CLASSIFICATION	9.563684964342265E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999932333565811	WITHOUT_CLASSIFICATION	6.766643418902707E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905746022459	WITHOUT_CLASSIFICATION	9.425397754142083E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909370327059	WITHOUT_CLASSIFICATION	9.06296729394574E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874136232083	WITHOUT_CLASSIFICATION	1.2586376791702214E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880977215928	WITHOUT_CLASSIFICATION	1.1902278407216581E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999890472203524	WITHOUT_CLASSIFICATION	1.0952779647702263E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999573074037008	WITHOUT_CLASSIFICATION	4.2692596299132424E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999799050699127	WITHOUT_CLASSIFICATION	2.0094930087178303E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998831319898221	WITHOUT_CLASSIFICATION	1.1686801017779905E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997567559414	WITHOUT_CLASSIFICATION	2.432440585516617E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999999861140899	WITHOUT_CLASSIFICATION	1.3885910099610286E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999997859231634	WITHOUT_CLASSIFICATION	2.1407683663557038E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999998508702443	WITHOUT_CLASSIFICATION	1.491297555745854E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999997656110886	WITHOUT_CLASSIFICATION	2.343889113912172E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999168609839	WITHOUT_CLASSIFICATION	8.313901612036319E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999999745952836	WITHOUT_CLASSIFICATION	2.5404716398371024E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999104237767	WITHOUT_CLASSIFICATION	8.957622331199471E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997262827219	WITHOUT_CLASSIFICATION	2.737172780431087E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999998747260914	WITHOUT_CLASSIFICATION	1.252739086257791E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999966391264893	WITHOUT_CLASSIFICATION	3.360873510852182E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99999981291726	WITHOUT_CLASSIFICATION	1.870827399290473E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999962778045968	WITHOUT_CLASSIFICATION	3.7221954032131144E-6	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997425897066	WITHOUT_CLASSIFICATION	2.5741029346391087E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999492561402405	WITHOUT_CLASSIFICATION	5.074385975957842E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999982396034895	WITHOUT_CLASSIFICATION	1.7603965104998375E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999995854869218	WITHOUT_CLASSIFICATION	4.145130782383216E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998890360202	WITHOUT_CLASSIFICATION	1.109639797418908E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998890360202	WITHOUT_CLASSIFICATION	1.109639797418908E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999999692421589	WITHOUT_CLASSIFICATION	3.0757841092370024E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999996687691542	WITHOUT_CLASSIFICATION	3.312308457673853E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999993120252	WITHOUT_CLASSIFICATION	6.87974652853582E-10	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999994214326406	WITHOUT_CLASSIFICATION	5.785673592744588E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999994214326406	WITHOUT_CLASSIFICATION	5.785673592744588E-7	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999655498012351	WITHOUT_CLASSIFICATION	3.445019876490172E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999717091789565	WITHOUT_CLASSIFICATION	2.829082104355547E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999997448066067	WITHOUT_CLASSIFICATION	2.551933932019814E-7	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999945644141464	WITHOUT_CLASSIFICATION	5.4355858537049435E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9942737771709884	WITHOUT_CLASSIFICATION	0.005726222829011569	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.999997218228227	WITHOUT_CLASSIFICATION	2.781771773043906E-6	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997728880596	WITHOUT_CLASSIFICATION	2.271119403202423E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999996878199974	WITHOUT_CLASSIFICATION	3.121800025675696E-7	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9972621464288591	WITHOUT_CLASSIFICATION	0.002737853571140841	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999970901687777	WITHOUT_CLASSIFICATION	2.9098312222740453E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.999988057283013	WITHOUT_CLASSIFICATION	1.1942716986926182E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999772648077188	WITHOUT_CLASSIFICATION	2.273519228123622E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.999995808358417	WITHOUT_CLASSIFICATION	4.1916415830648814E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999903989722643	WITHOUT_CLASSIFICATION	9.601027735801913E-6	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.999994334897271	WITHOUT_CLASSIFICATION	5.665102729011274E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999997976820777	WITHOUT_CLASSIFICATION	2.0231792223532048E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999609560847025	WITHOUT_CLASSIFICATION	3.90439152975568E-5	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9998444558369847	WITHOUT_CLASSIFICATION	1.5554416301532373E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999803358587123	WITHOUT_CLASSIFICATION	1.9664141287776746E-5	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.999995035823076	WITHOUT_CLASSIFICATION	4.96417692387154E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999996068612775	WITHOUT_CLASSIFICATION	3.93138722540335E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999989341096204	WITHOUT_CLASSIFICATION	1.0658903795422514E-6	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999962577691293	WITHOUT_CLASSIFICATION	3.742230870596898E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999866834524683	WITHOUT_CLASSIFICATION	1.3316547531757646E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999946663152469	WITHOUT_CLASSIFICATION	5.333684753054566E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999995086436777	WITHOUT_CLASSIFICATION	4.91356322315783E-7	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999997660702119	WITHOUT_CLASSIFICATION	2.3392978814762043E-7	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999920000206464	WITHOUT_CLASSIFICATION	7.999979353558427E-6	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.999998028373348	WITHOUT_CLASSIFICATION	1.9716266520279673E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999997596825809	WITHOUT_CLASSIFICATION	2.403174190834142E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999997596825809	WITHOUT_CLASSIFICATION	2.403174190834142E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999965517401355	WITHOUT_CLASSIFICATION	3.448259864688575E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999996334549577	WITHOUT_CLASSIFICATION	3.665450422520104E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999359771509	WITHOUT_CLASSIFICATION	6.402284916082093E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9998866028038654	WITHOUT_CLASSIFICATION	1.13397196134581E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999943220804763	WITHOUT_CLASSIFICATION	5.67791952364652E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999982503948059	WITHOUT_CLASSIFICATION	1.7496051940062527E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999635650629877	WITHOUT_CLASSIFICATION	3.643493701237828E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.999948840980366	WITHOUT_CLASSIFICATION	5.115901963407046E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999999636196982	WITHOUT_CLASSIFICATION	3.6380301808831165E-8	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999888030171659	WITHOUT_CLASSIFICATION	1.1196982834052525E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999888030171659	WITHOUT_CLASSIFICATION	1.1196982834052525E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999757520310674	WITHOUT_CLASSIFICATION	2.424796893259228E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999757520310674	WITHOUT_CLASSIFICATION	2.424796893259228E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999956126513875	WITHOUT_CLASSIFICATION	4.387348612461918E-6	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999638054298962	WITHOUT_CLASSIFICATION	3.6194570103833546E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999999181334499	WITHOUT_CLASSIFICATION	8.186655010513788E-8	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999999598012052	WITHOUT_CLASSIFICATION	4.019879493517377E-8	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999960384666581	WITHOUT_CLASSIFICATION	3.96153334190772E-6	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999998154156331	WITHOUT_CLASSIFICATION	1.8458436697505783E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999796783515	WITHOUT_CLASSIFICATION	2.032164842041205E-8	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999990769197651	WITHOUT_CLASSIFICATION	9.230802349638406E-7	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999561726747016	WITHOUT_CLASSIFICATION	4.3827325298453795E-5	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999998647080959	WITHOUT_CLASSIFICATION	1.352919040705393E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999602902874103	WITHOUT_CLASSIFICATION	3.970971258972314E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999996882493519	WITHOUT_CLASSIFICATION	3.1175064809024606E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.999999165900693	WITHOUT_CLASSIFICATION	8.340993070489054E-7	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999995615075556	WITHOUT_CLASSIFICATION	4.384924442549382E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999998627124977	WITHOUT_CLASSIFICATION	1.3728750214186425E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999916845376577	WITHOUT_CLASSIFICATION	8.315462342380974E-6	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999784039812191	WITHOUT_CLASSIFICATION	2.159601878085048E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999984804028159	WITHOUT_CLASSIFICATION	1.5195971840972495E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.999993830750707	WITHOUT_CLASSIFICATION	6.169249293090041E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999962485808387	WITHOUT_CLASSIFICATION	3.751419161331077E-6	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9999961494711787	WITHOUT_CLASSIFICATION	3.850528821301106E-6	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999658685461189	WITHOUT_CLASSIFICATION	3.413145388112887E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999983611793583	WITHOUT_CLASSIFICATION	1.6388206417313932E-6	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999979339150562	WITHOUT_CLASSIFICATION	2.066084943739467E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999977740618	WITHOUT_CLASSIFICATION	2.2259382643070227E-9	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999182817763625	WITHOUT_CLASSIFICATION	8.171822363747205E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999887062358077	WITHOUT_CLASSIFICATION	1.1293764192170004E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.999998833468604	WITHOUT_CLASSIFICATION	1.166531395995188E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.999998833468604	WITHOUT_CLASSIFICATION	1.166531395995188E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999923189587292	WITHOUT_CLASSIFICATION	7.681041270835882E-6	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999857052580792	WITHOUT_CLASSIFICATION	1.4294741920766756E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999963560603198	WITHOUT_CLASSIFICATION	3.6439396801659942E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999989390609283	WITHOUT_CLASSIFICATION	1.0609390717992343E-6	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999941589328867	WITHOUT_CLASSIFICATION	5.84106711334223E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999849659523328	WITHOUT_CLASSIFICATION	1.503404766722845E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999979916809	WITHOUT_CLASSIFICATION	2.008319100061705E-6	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999996253267213	WITHOUT_CLASSIFICATION	3.746732787012264E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999182817763625	WITHOUT_CLASSIFICATION	8.171822363747205E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998218107497294	WITHOUT_CLASSIFICATION	1.781892502706394E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999945416709849	WITHOUT_CLASSIFICATION	5.458329015027618E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999956280816993	WITHOUT_CLASSIFICATION	4.371918300687698E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999998628481619	WITHOUT_CLASSIFICATION	1.3715183823378539E-7	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999995698200885	WITHOUT_CLASSIFICATION	4.3017991146480986E-7	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999969025705411	WITHOUT_CLASSIFICATION	3.0974294590328505E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999776864711	WITHOUT_CLASSIFICATION	2.2313528916065483E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999994237946159	WITHOUT_CLASSIFICATION	5.762053840468197E-7	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999846234482465	WITHOUT_CLASSIFICATION	1.5376551753575862E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999994984066835	WITHOUT_CLASSIFICATION	5.015933165999653E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999997551872578	WITHOUT_CLASSIFICATION	2.4481274215418067E-7	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999664857123	WITHOUT_CLASSIFICATION	3.351428769943099E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.999998982492564	WITHOUT_CLASSIFICATION	1.0175074360610968E-6	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999999092677574	WITHOUT_CLASSIFICATION	9.073224262738523E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999982691806533	WITHOUT_CLASSIFICATION	1.7308193466990632E-6	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.999993321088992	WITHOUT_CLASSIFICATION	6.678911008127284E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999975320685816	WITHOUT_CLASSIFICATION	2.4679314185072253E-6	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999999906786111	WITHOUT_CLASSIFICATION	9.321388842234212E-9	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999990480268062	WITHOUT_CLASSIFICATION	9.519731937596952E-7	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999961995782246	WITHOUT_CLASSIFICATION	3.8004217752816685E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999094538604429	WITHOUT_CLASSIFICATION	9.05461395569872E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9998966276550716	WITHOUT_CLASSIFICATION	1.0337234492846684E-4	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999951315792112	WITHOUT_CLASSIFICATION	4.868420788914297E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999969919132844	WITHOUT_CLASSIFICATION	3.0080867155924994E-6	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.999962922120501	WITHOUT_CLASSIFICATION	3.707787949901689E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999776864711	WITHOUT_CLASSIFICATION	2.2313528916065483E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999982691806533	WITHOUT_CLASSIFICATION	1.7308193466990632E-6	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999997048905113	WITHOUT_CLASSIFICATION	2.9510948868734336E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999060098137	WITHOUT_CLASSIFICATION	9.39901862386154E-8	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999932914773941	WITHOUT_CLASSIFICATION	6.708522605784816E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999966779969236	WITHOUT_CLASSIFICATION	3.3220030763736125E-6	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999916464796436	WITHOUT_CLASSIFICATION	8.353520356491033E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999986980970212	WITHOUT_CLASSIFICATION	1.3019029787309085E-6	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999998543219781	WITHOUT_CLASSIFICATION	1.4567802181933064E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999989566364991	WITHOUT_CLASSIFICATION	1.043363500851558E-6	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.999841773448086	WITHOUT_CLASSIFICATION	1.5822655191403772E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999652162488113	WITHOUT_CLASSIFICATION	3.4783751188604405E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999855927191788	WITHOUT_CLASSIFICATION	1.4407280821141107E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999855927191788	WITHOUT_CLASSIFICATION	1.4407280821141107E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999256762357878	WITHOUT_CLASSIFICATION	7.432376421222132E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999956338447267	WITHOUT_CLASSIFICATION	4.366155273311853E-6	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999982962514601	WITHOUT_CLASSIFICATION	1.7037485399762212E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999982638174021	WITHOUT_CLASSIFICATION	1.7361825979946889E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999943252139037	WITHOUT_CLASSIFICATION	5.674786096306543E-6	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9997528984460536	WITHOUT_CLASSIFICATION	2.4710155394640535E-4	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999982230830461	WITHOUT_CLASSIFICATION	1.7769169538551876E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999996582479881	WITHOUT_CLASSIFICATION	3.417520118309424E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999977494587173	WITHOUT_CLASSIFICATION	2.2505412826317984E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999997359524085	WITHOUT_CLASSIFICATION	2.640475914850294E-7	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999618122720078	WITHOUT_CLASSIFICATION	3.818772799222036E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999757520310674	WITHOUT_CLASSIFICATION	2.424796893259228E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999796783515	WITHOUT_CLASSIFICATION	2.032164842041205E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999982691806533	WITHOUT_CLASSIFICATION	1.7308193466990632E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999943252139037	WITHOUT_CLASSIFICATION	5.674786096306543E-6	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9997528984460536	WITHOUT_CLASSIFICATION	2.4710155394640535E-4	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.999999931191366	WITHOUT_CLASSIFICATION	6.880863400187391E-8	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999999881725352	WITHOUT_CLASSIFICATION	1.1827464781021449E-8	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999915474701684	WITHOUT_CLASSIFICATION	8.452529831621295E-6	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999866175594712	WITHOUT_CLASSIFICATION	1.338244052882126E-5	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999727013780995	WITHOUT_CLASSIFICATION	2.7298621900600887E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999991649324378	WITHOUT_CLASSIFICATION	8.35067562265619E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9998446774977504	WITHOUT_CLASSIFICATION	1.5532250224967813E-4	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.999999596387266	WITHOUT_CLASSIFICATION	4.0361273404243976E-7	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999999861463242	WITHOUT_CLASSIFICATION	1.3853675630084096E-8	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999993643704029	WITHOUT_CLASSIFICATION	6.356295971691143E-7	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999995878291659	WITHOUT_CLASSIFICATION	4.121708340535664E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999998673029006	WITHOUT_CLASSIFICATION	1.3269709942677274E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9962182177370817	WITHOUT_CLASSIFICATION	0.0037817822629182115	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999997358281714	WITHOUT_CLASSIFICATION	2.6417182859005276E-7	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999484970328486	WITHOUT_CLASSIFICATION	5.150296715129324E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999849590049	WITHOUT_CLASSIFICATION	1.5040995048884777E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9962182177370817	WITHOUT_CLASSIFICATION	0.0037817822629182115	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9962182177370817	WITHOUT_CLASSIFICATION	0.0037817822629182115	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9962182177370817	WITHOUT_CLASSIFICATION	0.0037817822629182115	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999520150943736	WITHOUT_CLASSIFICATION	4.7984905626481406E-5	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999968359174118	WITHOUT_CLASSIFICATION	3.164082588054802E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999995228686438	WITHOUT_CLASSIFICATION	4.771313561274852E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999941273096288	WITHOUT_CLASSIFICATION	5.872690371227322E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999954880119766	WITHOUT_CLASSIFICATION	4.511988023389369E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9998543771891223	WITHOUT_CLASSIFICATION	1.4562281087778458E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999942850518626	WITHOUT_CLASSIFICATION	5.714948137424592E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999999307321895	WITHOUT_CLASSIFICATION	6.926781047517494E-8	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999973716955256	WITHOUT_CLASSIFICATION	2.628304474315318E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999968331550707	WITHOUT_CLASSIFICATION	3.1668449292200915E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999981724622066	WITHOUT_CLASSIFICATION	1.8275377934585566E-6	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999895610886824	WITHOUT_CLASSIFICATION	1.043891131761786E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999989878302493	WITHOUT_CLASSIFICATION	1.0121697506399084E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998890360202	WITHOUT_CLASSIFICATION	1.109639797418908E-7	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999978336979577	WITHOUT_CLASSIFICATION	2.166302042387378E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9998763341242238	WITHOUT_CLASSIFICATION	1.2366587577609418E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999999689999645	WITHOUT_CLASSIFICATION	3.1000035551232704E-8	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.999999648173677	WITHOUT_CLASSIFICATION	3.5182632302115803E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999943194212859	WITHOUT_CLASSIFICATION	5.680578714070476E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999943194212859	WITHOUT_CLASSIFICATION	5.680578714070476E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999909752984355	WITHOUT_CLASSIFICATION	9.02470156451298E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999963297193293	WITHOUT_CLASSIFICATION	3.6702806707202103E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999909752984355	WITHOUT_CLASSIFICATION	9.02470156451298E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999868819244025	WITHOUT_CLASSIFICATION	1.311807559737996E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999999768795018	WITHOUT_CLASSIFICATION	2.3120498213402743E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999744290009254	WITHOUT_CLASSIFICATION	2.5570999074602535E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998588043882	WITHOUT_CLASSIFICATION	1.4119561188804616E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998588043882	WITHOUT_CLASSIFICATION	1.4119561188804616E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999944745776556	WITHOUT_CLASSIFICATION	5.5254223444189216E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999944745776556	WITHOUT_CLASSIFICATION	5.5254223444189216E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999892292442589	WITHOUT_CLASSIFICATION	1.0770755741057078E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999892292442589	WITHOUT_CLASSIFICATION	1.0770755741057078E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999994909611372	WITHOUT_CLASSIFICATION	5.090388628169367E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999999586338079	WITHOUT_CLASSIFICATION	4.13661921995652E-8	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999944768470356	WITHOUT_CLASSIFICATION	5.523152964334908E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999999210251804	WITHOUT_CLASSIFICATION	7.897481956818386E-8	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999941705793867	WITHOUT_CLASSIFICATION	5.829420613391932E-6	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999945463850268	WITHOUT_CLASSIFICATION	5.453614973215261E-6	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999977591766139	WITHOUT_CLASSIFICATION	2.2408233860380455E-6	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.999992693845982	WITHOUT_CLASSIFICATION	7.3061540178916665E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.99999927329502	WITHOUT_CLASSIFICATION	7.267049800155482E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9996084902733156	WITHOUT_CLASSIFICATION	3.9150972668449785E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999894771885	WITHOUT_CLASSIFICATION	1.0522811485477323E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999976329023217	WITHOUT_CLASSIFICATION	2.367097678207902E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999999619794105	WITHOUT_CLASSIFICATION	3.802058937780145E-8	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999999471312436	WITHOUT_CLASSIFICATION	5.286875636201674E-8	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999994675086011	WITHOUT_CLASSIFICATION	5.324913988265194E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999918564743643	WITHOUT_CLASSIFICATION	8.143525635660796E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999990822367285	WITHOUT_CLASSIFICATION	9.177632715631243E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999993872283226	WITHOUT_CLASSIFICATION	6.127716774079217E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999996948945535	WITHOUT_CLASSIFICATION	3.0510544642022253E-7	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999997627251374	WITHOUT_CLASSIFICATION	2.3727486274467305E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999979578011855	WITHOUT_CLASSIFICATION	2.042198814518916E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999995680077511	WITHOUT_CLASSIFICATION	4.319922489066166E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9972434617991117	WITHOUT_CLASSIFICATION	0.0027565382008883396	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9972434617991117	WITHOUT_CLASSIFICATION	0.0027565382008883396	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9997436800111038	WITHOUT_CLASSIFICATION	2.563199888962156E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9997436800111038	WITHOUT_CLASSIFICATION	2.563199888962156E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999997762530912	WITHOUT_CLASSIFICATION	2.2374690872886985E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999942182187681	WITHOUT_CLASSIFICATION	5.781781231869862E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999769981244	WITHOUT_CLASSIFICATION	2.3001875663120207E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999996552758862	WITHOUT_CLASSIFICATION	3.447241137808031E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999949363662077	WITHOUT_CLASSIFICATION	5.063633792202682E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999913700932146	WITHOUT_CLASSIFICATION	8.629906785449681E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999999476987801	WITHOUT_CLASSIFICATION	5.2301220063393736E-8	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9986764037105246	WITHOUT_CLASSIFICATION	0.001323596289475452	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999986300786416	WITHOUT_CLASSIFICATION	1.3699213583496755E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999804725888338	WITHOUT_CLASSIFICATION	1.9527411166203743E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999998005898119	WITHOUT_CLASSIFICATION	1.9941018810506136E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.999998802142034	WITHOUT_CLASSIFICATION	1.1978579660880048E-6	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999998599603004	WITHOUT_CLASSIFICATION	1.4003969952480597E-7	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999979504623	WITHOUT_CLASSIFICATION	2.049537549804415E-9	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999992753352785	WITHOUT_CLASSIFICATION	7.246647213299726E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999995241424022	WITHOUT_CLASSIFICATION	4.7585759769951326E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999223695902	WITHOUT_CLASSIFICATION	7.763040973959925E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9998529274979014	WITHOUT_CLASSIFICATION	1.470725020985193E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999967689182933	WITHOUT_CLASSIFICATION	3.2310817066387363E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999622602830142	WITHOUT_CLASSIFICATION	3.773971698592016E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999560044759	WITHOUT_CLASSIFICATION	4.3995524082018326E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999998602288718	WITHOUT_CLASSIFICATION	1.3977112817525718E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999972192115113	WITHOUT_CLASSIFICATION	2.780788488586857E-6	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9997690974495413	WITHOUT_CLASSIFICATION	2.3090255045867157E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999994240398722	WITHOUT_CLASSIFICATION	5.759601278182165E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999927935400552	WITHOUT_CLASSIFICATION	7.206459944794531E-6	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999987623365383	WITHOUT_CLASSIFICATION	1.2376634616659711E-6	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9998523378783143	WITHOUT_CLASSIFICATION	1.4766212168560052E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999999256427896	WITHOUT_CLASSIFICATION	7.435721035177698E-8	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9987592524859671	WITHOUT_CLASSIFICATION	0.0012407475140329212	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999992526316702	WITHOUT_CLASSIFICATION	7.473683298010459E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994397401378	WITHOUT_CLASSIFICATION	5.602598622065606E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999994214326406	WITHOUT_CLASSIFICATION	5.785673592744588E-7	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999694818647299	WITHOUT_CLASSIFICATION	3.051813527010901E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.99999998670343	WITHOUT_CLASSIFICATION	1.329656995935445E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999166169957836	WITHOUT_CLASSIFICATION	8.338300421634073E-5	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999955973512945	WITHOUT_CLASSIFICATION	4.4026487055677975E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999992141418723	WITHOUT_CLASSIFICATION	7.858581277486509E-7	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9989674642769405	WITHOUT_CLASSIFICATION	0.0010325357230593975	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999421651395	WITHOUT_CLASSIFICATION	5.7834860511944566E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.99999998117231	WITHOUT_CLASSIFICATION	1.882768998634091E-8	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999976608886558	WITHOUT_CLASSIFICATION	2.3391113442466283E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999913666057623	WITHOUT_CLASSIFICATION	8.633394237734411E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999928425738908	WITHOUT_CLASSIFICATION	7.157426109262323E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.999993331259392	WITHOUT_CLASSIFICATION	6.668740607959896E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999900667872434	WITHOUT_CLASSIFICATION	9.933212756496773E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999753331060733	WITHOUT_CLASSIFICATION	2.4666893926703616E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999873143469612	WITHOUT_CLASSIFICATION	1.2685653038763239E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999999411050889	WITHOUT_CLASSIFICATION	5.889491114067718E-8	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999951246372338	WITHOUT_CLASSIFICATION	4.875362766197983E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999952667753882	WITHOUT_CLASSIFICATION	4.733224611862732E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999967634009	WITHOUT_CLASSIFICATION	3.2365990702896422E-9	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999345327707151	WITHOUT_CLASSIFICATION	6.546722928485197E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9956436915297359	WITHOUT_CLASSIFICATION	0.004356308470264121	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999999577041467	WITHOUT_CLASSIFICATION	4.229585338933538E-8	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999998785903447	WITHOUT_CLASSIFICATION	1.2140965530556443E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.8692990483266874	WITHOUT_CLASSIFICATION	0.13070095167331255	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9994868447988381	WITHOUT_CLASSIFICATION	5.131552011619235E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999948197687778	WITHOUT_CLASSIFICATION	5.180231222111487E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999998460243624	WITHOUT_CLASSIFICATION	1.539756375066755E-7	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999950827879	WITHOUT_CLASSIFICATION	4.917212121683177E-9	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999993145071812	WITHOUT_CLASSIFICATION	6.854928188356194E-7	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999995164750859	WITHOUT_CLASSIFICATION	4.835249140270647E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999990488950807	WITHOUT_CLASSIFICATION	9.511049192473006E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999719189761511	WITHOUT_CLASSIFICATION	2.808102384888592E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999995495396529	WITHOUT_CLASSIFICATION	4.504603471504609E-7	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.999999951126275	WITHOUT_CLASSIFICATION	4.8873724930868354E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999823548041145	WITHOUT_CLASSIFICATION	1.7645195885475393E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999992303073	WITHOUT_CLASSIFICATION	7.696927000148158E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999995205695702	WITHOUT_CLASSIFICATION	4.794304298551375E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999999344153706	WITHOUT_CLASSIFICATION	6.5584629427351E-8	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999486351967211	WITHOUT_CLASSIFICATION	5.136480327904733E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999999771629803	WITHOUT_CLASSIFICATION	2.2837019709748227E-8	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999999035339768	WITHOUT_CLASSIFICATION	9.646602312111404E-8	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999999623552667	WITHOUT_CLASSIFICATION	3.764473336717037E-8	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999996144534117	WITHOUT_CLASSIFICATION	3.855465884229794E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.999999871655108	WITHOUT_CLASSIFICATION	1.2834489210310385E-7	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999995759135947	WITHOUT_CLASSIFICATION	4.240864053621796E-7	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999997133210833	WITHOUT_CLASSIFICATION	2.8667891668751346E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999996224372054	WITHOUT_CLASSIFICATION	3.775627946290795E-7	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999995162103887	WITHOUT_CLASSIFICATION	4.837896113641614E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9992714229213036	WITHOUT_CLASSIFICATION	7.285770786965217E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.999998745152935	WITHOUT_CLASSIFICATION	1.2548470650757732E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999709269955496	WITHOUT_CLASSIFICATION	2.9073004450463026E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999966851653387	WITHOUT_CLASSIFICATION	3.3148346613214887E-6	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999980224894925	WITHOUT_CLASSIFICATION	1.977510507538294E-6	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999999777128	WITHOUT_CLASSIFICATION	2.2287199985225125E-8	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999997750358303	WITHOUT_CLASSIFICATION	2.2496416981761812E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999997750358303	WITHOUT_CLASSIFICATION	2.2496416981761812E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999991985892	WITHOUT_CLASSIFICATION	8.014108233340014E-10	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999996712299964	WITHOUT_CLASSIFICATION	3.28770003550202E-7	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999999119831154	WITHOUT_CLASSIFICATION	8.80168845164558E-8	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999998976387171	WITHOUT_CLASSIFICATION	1.0236128282147946E-7	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999991208739805	WITHOUT_CLASSIFICATION	8.791260195416935E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999974044118273	WITHOUT_CLASSIFICATION	2.5955881728204675E-6	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999791600875	WITHOUT_CLASSIFICATION	2.0839912427057136E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999998624713932	WITHOUT_CLASSIFICATION	1.3752860686918181E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999968287238	WITHOUT_CLASSIFICATION	3.1712761557112667E-9	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.999997288197017	WITHOUT_CLASSIFICATION	2.7118029830119456E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999045901111	WITHOUT_CLASSIFICATION	9.540988893949544E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999724147157777	WITHOUT_CLASSIFICATION	2.7585284222327315E-5	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.999999207177275	WITHOUT_CLASSIFICATION	7.928227249258758E-7	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.999949762662018	WITHOUT_CLASSIFICATION	5.0237337982034036E-5	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999996882893801	WITHOUT_CLASSIFICATION	3.117106199292832E-7	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9994268091229257	WITHOUT_CLASSIFICATION	5.73190877074189E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999993033744117	WITHOUT_CLASSIFICATION	6.966255882476657E-7	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.99999998967708	WITHOUT_CLASSIFICATION	1.0322920045254415E-8	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999986241499178	WITHOUT_CLASSIFICATION	1.3758500821295545E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9999099617243604	WITHOUT_CLASSIFICATION	9.003827563967169E-5	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.99999992827819	WITHOUT_CLASSIFICATION	7.172181008485222E-8	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999999501201122	WITHOUT_CLASSIFICATION	4.987988779693959E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999999791396036	WITHOUT_CLASSIFICATION	2.0860396396585283E-7	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999992651400003	WITHOUT_CLASSIFICATION	7.34859999835886E-7	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999998261877068	WITHOUT_CLASSIFICATION	1.7381229330883544E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999938208721854	WITHOUT_CLASSIFICATION	6.179127814647181E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999940751474777	WITHOUT_CLASSIFICATION	5.924852522230206E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999993362125378	WITHOUT_CLASSIFICATION	6.637874622548977E-7	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999979807065225	WITHOUT_CLASSIFICATION	2.019293477477036E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999994363185053	WITHOUT_CLASSIFICATION	5.636814947441608E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999501510443378	WITHOUT_CLASSIFICATION	4.984895566224077E-5	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999936235793291	WITHOUT_CLASSIFICATION	6.376420670926713E-6	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999977876695268	WITHOUT_CLASSIFICATION	2.2123304732582234E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.999998078553532	WITHOUT_CLASSIFICATION	1.921446468057411E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999775499577	WITHOUT_CLASSIFICATION	2.2450042264640154E-8	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999999718065816	WITHOUT_CLASSIFICATION	2.819341835705556E-8	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999995651285576	WITHOUT_CLASSIFICATION	4.3487144242586595E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999967456811	WITHOUT_CLASSIFICATION	3.254318982854937E-9	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999982543264332	WITHOUT_CLASSIFICATION	1.7456735668515757E-6	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999909538684957	WITHOUT_CLASSIFICATION	9.04613150441878E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999963299967988	WITHOUT_CLASSIFICATION	3.670003201272334E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9995022348335666	WITHOUT_CLASSIFICATION	4.97765166433345E-4	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999993549744605	WITHOUT_CLASSIFICATION	6.450255394591348E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999943194212859	WITHOUT_CLASSIFICATION	5.680578714070476E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999943194212859	WITHOUT_CLASSIFICATION	5.680578714070476E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999909752984355	WITHOUT_CLASSIFICATION	9.02470156451298E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999909752984355	WITHOUT_CLASSIFICATION	9.02470156451298E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999996425445553	WITHOUT_CLASSIFICATION	3.574554447354025E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999529667752839	WITHOUT_CLASSIFICATION	4.703322471611843E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.999999628837545	WITHOUT_CLASSIFICATION	3.7116245489667263E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999976753772583	WITHOUT_CLASSIFICATION	2.324622741843828E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999827484417612	WITHOUT_CLASSIFICATION	1.7251558238830316E-5	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.999999587845799	WITHOUT_CLASSIFICATION	4.121542010058943E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999998573999804	WITHOUT_CLASSIFICATION	1.426000195051289E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999989798002633	WITHOUT_CLASSIFICATION	1.0201997367023933E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999990907714205	WITHOUT_CLASSIFICATION	9.09228579660583E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999990907714205	WITHOUT_CLASSIFICATION	9.09228579660583E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999980173333768	WITHOUT_CLASSIFICATION	1.9826666231949007E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999980173333768	WITHOUT_CLASSIFICATION	1.9826666231949007E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999849590049	WITHOUT_CLASSIFICATION	1.5040995048884777E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999999768795018	WITHOUT_CLASSIFICATION	2.3120498213402743E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999868819244025	WITHOUT_CLASSIFICATION	1.311807559737996E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999744290009254	WITHOUT_CLASSIFICATION	2.5570999074602535E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998588043882	WITHOUT_CLASSIFICATION	1.4119561188804616E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999998588043882	WITHOUT_CLASSIFICATION	1.4119561188804616E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999944745776556	WITHOUT_CLASSIFICATION	5.5254223444189216E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999944745776556	WITHOUT_CLASSIFICATION	5.5254223444189216E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999892292442589	WITHOUT_CLASSIFICATION	1.0770755741057078E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999892292442589	WITHOUT_CLASSIFICATION	1.0770755741057078E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999329137170057	WITHOUT_CLASSIFICATION	6.708628299440409E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999999266468529	WITHOUT_CLASSIFICATION	7.335314709683553E-8	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999803436164015	WITHOUT_CLASSIFICATION	1.9656383598394707E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999021939867996	WITHOUT_CLASSIFICATION	9.780601320041429E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.999999454121069	WITHOUT_CLASSIFICATION	5.45878930870144E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999996254055358	WITHOUT_CLASSIFICATION	3.7459446428420837E-7	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999989128707729	WITHOUT_CLASSIFICATION	1.0871292270327022E-6	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999999144104768	WITHOUT_CLASSIFICATION	8.558952327722833E-8	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.999999740918326	WITHOUT_CLASSIFICATION	2.5908167394513847E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999999507611643	WITHOUT_CLASSIFICATION	4.9238835675982034E-8	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999273791412	WITHOUT_CLASSIFICATION	7.262085875736109E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999975411569156	WITHOUT_CLASSIFICATION	2.458843084373449E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999948414342414	WITHOUT_CLASSIFICATION	5.1585657585039996E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999999198459955	WITHOUT_CLASSIFICATION	8.015400462012327E-8	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999999385390445	WITHOUT_CLASSIFICATION	6.146095560504144E-8	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999903612098237	WITHOUT_CLASSIFICATION	9.638790176473315E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999836157466754	WITHOUT_CLASSIFICATION	1.638425332466141E-5	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999986938135935	WITHOUT_CLASSIFICATION	1.3061864064001957E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999995841423	WITHOUT_CLASSIFICATION	4.158576324935765E-10	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999920806413133	WITHOUT_CLASSIFICATION	7.919358686758472E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.999994643179534	WITHOUT_CLASSIFICATION	5.3568204659760955E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999964364053392	WITHOUT_CLASSIFICATION	3.5635946608335E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999994666995555	WITHOUT_CLASSIFICATION	5.333004445414727E-7	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999828571214243	WITHOUT_CLASSIFICATION	1.7142878575709908E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999607283796852	WITHOUT_CLASSIFICATION	3.927162031474187E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999997945355432	WITHOUT_CLASSIFICATION	2.0546445668334585E-7	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.999988707571033	WITHOUT_CLASSIFICATION	1.1292428967023926E-5	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999638336877822	WITHOUT_CLASSIFICATION	3.616631221775757E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9991610318012858	WITHOUT_CLASSIFICATION	8.38968198714336E-4	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.999994888476201	WITHOUT_CLASSIFICATION	5.111523799044909E-6	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.999999963975796	WITHOUT_CLASSIFICATION	3.602420386944409E-8	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999988064156015	WITHOUT_CLASSIFICATION	1.1935843985552013E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999894478949861	WITHOUT_CLASSIFICATION	1.0552105013977023E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999994614728822	WITHOUT_CLASSIFICATION	5.38527117770837E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999659310127075	WITHOUT_CLASSIFICATION	3.406898729250579E-5	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999998399789255	WITHOUT_CLASSIFICATION	1.6002107446649842E-7	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999998906689747	WITHOUT_CLASSIFICATION	1.0933102543301605E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999996301120927	WITHOUT_CLASSIFICATION	3.698879073407076E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999353162298	WITHOUT_CLASSIFICATION	6.468377025149161E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999980783782512	WITHOUT_CLASSIFICATION	1.9216217488842495E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999657966038914	WITHOUT_CLASSIFICATION	3.4203396108483265E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999998942788724	WITHOUT_CLASSIFICATION	1.0572112760262522E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.999999974742862	WITHOUT_CLASSIFICATION	2.525713801079644E-8	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999996487835996	WITHOUT_CLASSIFICATION	3.5121640046445427E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999772371153	WITHOUT_CLASSIFICATION	2.276288465505909E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999999177694083	WITHOUT_CLASSIFICATION	8.223059164532608E-8	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9996546995713571	WITHOUT_CLASSIFICATION	3.4530042864282777E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999841380587307	WITHOUT_CLASSIFICATION	1.5861941269421902E-5	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999996801271278	WITHOUT_CLASSIFICATION	3.19872872159126E-7	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999996385887744	WITHOUT_CLASSIFICATION	3.6141122562830914E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999999188594209	WITHOUT_CLASSIFICATION	8.114057921302755E-8	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999982354274991	WITHOUT_CLASSIFICATION	1.7645725009411195E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9992028374607829	WITHOUT_CLASSIFICATION	7.971625392171651E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9997263627672105	WITHOUT_CLASSIFICATION	2.7363723278957236E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9994987085949446	WITHOUT_CLASSIFICATION	5.012914050554423E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.999999973843307	WITHOUT_CLASSIFICATION	2.61566930680357E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999769324810978	WITHOUT_CLASSIFICATION	2.3067518902215692E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.999997497594296	WITHOUT_CLASSIFICATION	2.5024057039403247E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999998840547858	WITHOUT_CLASSIFICATION	1.1594521409690268E-7	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999989643539132	WITHOUT_CLASSIFICATION	1.035646086803552E-6	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.999998691288733	WITHOUT_CLASSIFICATION	1.3087112670155225E-6	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999646952684	WITHOUT_CLASSIFICATION	3.530473166705948E-8	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.999999615148784	WITHOUT_CLASSIFICATION	3.8485121599629394E-7	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999992125165736	WITHOUT_CLASSIFICATION	7.874834263420324E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999980517448946	WITHOUT_CLASSIFICATION	1.9482551053546422E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999832066000024	WITHOUT_CLASSIFICATION	1.679339999763088E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999912210611	WITHOUT_CLASSIFICATION	8.77893881282238E-9	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999998378684274	WITHOUT_CLASSIFICATION	1.6213157254369295E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999998132809083	WITHOUT_CLASSIFICATION	1.8671909184674652E-7	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999992135798502	WITHOUT_CLASSIFICATION	7.864201497934045E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999996427981	WITHOUT_CLASSIFICATION	3.572019725201472E-10	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999992062228198	WITHOUT_CLASSIFICATION	7.937771801879659E-7	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999964994178324	WITHOUT_CLASSIFICATION	3.500582167679701E-6	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999996644689372	WITHOUT_CLASSIFICATION	3.355310628295959E-7	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999218455452918	WITHOUT_CLASSIFICATION	7.815445470805831E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999999073345113	WITHOUT_CLASSIFICATION	9.266548870120772E-8	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999728477532802	WITHOUT_CLASSIFICATION	2.7152246719760023E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9969523506769056	WITHOUT_CLASSIFICATION	0.0030476493230944287	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.999984026204985	WITHOUT_CLASSIFICATION	1.597379501492357E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999336799191045	WITHOUT_CLASSIFICATION	6.632008089545998E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999961293131386	WITHOUT_CLASSIFICATION	3.870686861438731E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999998831313186	WITHOUT_CLASSIFICATION	1.1686868142515043E-7	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.99983334866142	WITHOUT_CLASSIFICATION	1.666513385799999E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999994531663773	WITHOUT_CLASSIFICATION	5.468336228144253E-7	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.999995170953209	WITHOUT_CLASSIFICATION	4.829046790924577E-6	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999825495016886	WITHOUT_CLASSIFICATION	1.7450498311419093E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999012583284094	WITHOUT_CLASSIFICATION	9.874167159064465E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999924666916414	WITHOUT_CLASSIFICATION	7.533308358515261E-6	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999851744296646	WITHOUT_CLASSIFICATION	1.482557033522508E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999985261396	WITHOUT_CLASSIFICATION	1.4738604378970267E-9	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999909571585078	WITHOUT_CLASSIFICATION	9.042841492235955E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999698527619096	WITHOUT_CLASSIFICATION	3.0147238090428074E-5	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999877297141968	WITHOUT_CLASSIFICATION	1.227028580315336E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999986955039993	WITHOUT_CLASSIFICATION	1.3044960007192128E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999986100150356	WITHOUT_CLASSIFICATION	1.389984964455934E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999993382273752	WITHOUT_CLASSIFICATION	6.617726247517234E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999998206088948	WITHOUT_CLASSIFICATION	1.7939110519407786E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999925513261705	WITHOUT_CLASSIFICATION	7.448673829560002E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999951128120145	WITHOUT_CLASSIFICATION	4.8871879855254056E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999951128120145	WITHOUT_CLASSIFICATION	4.8871879855254056E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999988144886759	WITHOUT_CLASSIFICATION	1.1855113241270667E-6	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.99999935781302	WITHOUT_CLASSIFICATION	6.421869799769973E-7	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999994874776099	WITHOUT_CLASSIFICATION	5.125223901129085E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999999265936856	WITHOUT_CLASSIFICATION	7.340631435293907E-8	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999999107910295	WITHOUT_CLASSIFICATION	8.920897056410564E-8	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999995946575231	WITHOUT_CLASSIFICATION	4.0534247687156163E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999998235081006	WITHOUT_CLASSIFICATION	1.7649189934496583E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999983864019588	WITHOUT_CLASSIFICATION	1.6135980411324271E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999994640695234	WITHOUT_CLASSIFICATION	5.359304765986929E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999998151567548	WITHOUT_CLASSIFICATION	1.8484324513948345E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999998702207119	WITHOUT_CLASSIFICATION	1.2977928809514493E-7	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999892085388	WITHOUT_CLASSIFICATION	1.0791461156460922E-8	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999995346312543	WITHOUT_CLASSIFICATION	4.653687455650119E-7	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999996340991364	WITHOUT_CLASSIFICATION	3.6590086356076823E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999961204873595	WITHOUT_CLASSIFICATION	3.879512640432071E-6	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999991081025615	WITHOUT_CLASSIFICATION	8.918974383084142E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.999999844817207	WITHOUT_CLASSIFICATION	1.5518279294315756E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999798694317946	WITHOUT_CLASSIFICATION	2.0130568205381057E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.999999924747111	WITHOUT_CLASSIFICATION	7.525288904271697E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999989930982713	WITHOUT_CLASSIFICATION	1.0069017286539545E-6	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999997678547502	WITHOUT_CLASSIFICATION	2.3214524993106743E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999311540990071	WITHOUT_CLASSIFICATION	6.8845900992949E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999976935480078	WITHOUT_CLASSIFICATION	2.3064519921747808E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999997012000206	WITHOUT_CLASSIFICATION	2.987999794377601E-7	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999929377125306	WITHOUT_CLASSIFICATION	7.062287469374619E-6	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999028670707	WITHOUT_CLASSIFICATION	9.713292926280868E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999994956656693	WITHOUT_CLASSIFICATION	5.043343306704098E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.999997274579939	WITHOUT_CLASSIFICATION	2.7254200609154403E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999999082098325	WITHOUT_CLASSIFICATION	9.17901674166932E-8	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999936812152895	WITHOUT_CLASSIFICATION	6.318784710488682E-6	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999992491230858	WITHOUT_CLASSIFICATION	7.508769141818629E-7	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999986057188085	WITHOUT_CLASSIFICATION	1.394281191561754E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999973886770742	WITHOUT_CLASSIFICATION	2.6113229257627506E-6	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999956597263885	WITHOUT_CLASSIFICATION	4.3402736114867075E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999950843958706	WITHOUT_CLASSIFICATION	4.915604129387473E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999791240918152	WITHOUT_CLASSIFICATION	2.0875908184708707E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.99984230681421	WITHOUT_CLASSIFICATION	1.576931857898788E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999999082098325	WITHOUT_CLASSIFICATION	9.17901674166932E-8	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999999560582921	WITHOUT_CLASSIFICATION	4.394170784744937E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999988575944703	WITHOUT_CLASSIFICATION	1.1424055296805233E-6	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999994139505405	WITHOUT_CLASSIFICATION	5.860494594682045E-7	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999717049579765	WITHOUT_CLASSIFICATION	2.829504202351811E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999969548285114	WITHOUT_CLASSIFICATION	3.0451714886562117E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999899609915228	WITHOUT_CLASSIFICATION	1.0039008477191671E-5	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999993207658008	WITHOUT_CLASSIFICATION	6.792341992732533E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999778726604726	WITHOUT_CLASSIFICATION	2.2127339527395924E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999979309112426	WITHOUT_CLASSIFICATION	2.0690887575614854E-6	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999992980865247	WITHOUT_CLASSIFICATION	7.019134753355745E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999948342519543	WITHOUT_CLASSIFICATION	5.165748045737697E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999932347420408	WITHOUT_CLASSIFICATION	6.765257959131473E-6	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999979724801379	WITHOUT_CLASSIFICATION	2.027519862084042E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999719065242174	WITHOUT_CLASSIFICATION	2.809347578257851E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999924892160593	WITHOUT_CLASSIFICATION	7.51078394062797E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9999521446727299	WITHOUT_CLASSIFICATION	4.785532727006578E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9999521446727299	WITHOUT_CLASSIFICATION	4.785532727006578E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999952425719222	WITHOUT_CLASSIFICATION	4.757428077858494E-6	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999400817300194	WITHOUT_CLASSIFICATION	5.991826998061104E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999998565656741	WITHOUT_CLASSIFICATION	1.4343432588499863E-7	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999999093882355	WITHOUT_CLASSIFICATION	9.06117645067685E-7	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999991784845	WITHOUT_CLASSIFICATION	8.215155244753872E-10	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999993182749589	WITHOUT_CLASSIFICATION	6.817250410933417E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999999749164459	WITHOUT_CLASSIFICATION	2.5083554177075386E-8	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999885258936059	WITHOUT_CLASSIFICATION	1.147410639411361E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999987245976953	WITHOUT_CLASSIFICATION	1.2754023046559237E-6	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999999750716334	WITHOUT_CLASSIFICATION	2.49283665791179E-8	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999932741323678	WITHOUT_CLASSIFICATION	6.725867632177643E-6	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9999864077653916	WITHOUT_CLASSIFICATION	1.3592234608311946E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999952449523	WITHOUT_CLASSIFICATION	4.755047679501221E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999963297193293	WITHOUT_CLASSIFICATION	3.6702806707202103E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999963297193293	WITHOUT_CLASSIFICATION	3.6702806707202103E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999998565656741	WITHOUT_CLASSIFICATION	1.4343432588499863E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999932741323678	WITHOUT_CLASSIFICATION	6.725867632177643E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999998965800435	WITHOUT_CLASSIFICATION	1.0341995647570002E-7	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999080056402287	WITHOUT_CLASSIFICATION	9.199435977129911E-5	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999870032396884	WITHOUT_CLASSIFICATION	1.2996760311666482E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.999991449841031	WITHOUT_CLASSIFICATION	8.550158969067408E-6	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999951433274824	WITHOUT_CLASSIFICATION	4.8566725176423675E-6	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999950868377593	WITHOUT_CLASSIFICATION	4.913162240746367E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999953566471127	WITHOUT_CLASSIFICATION	4.643352887282441E-6	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.999999551155606	WITHOUT_CLASSIFICATION	4.488443939951845E-7	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.999999956703682	WITHOUT_CLASSIFICATION	4.329631807265001E-8	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999997591265977	WITHOUT_CLASSIFICATION	2.408734022939768E-7	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999081990534671	WITHOUT_CLASSIFICATION	9.180094653297346E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9998413989563634	WITHOUT_CLASSIFICATION	1.5860104363656547E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999999159973849	WITHOUT_CLASSIFICATION	8.400261505138195E-8	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999927436455187	WITHOUT_CLASSIFICATION	7.256354481219974E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999996782981581	WITHOUT_CLASSIFICATION	3.2170184189695393E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.999997011824388	WITHOUT_CLASSIFICATION	2.9881756120107976E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999576002089408	WITHOUT_CLASSIFICATION	4.239979105927556E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999985229666888	WITHOUT_CLASSIFICATION	1.4770333111951685E-6	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999974127649904	WITHOUT_CLASSIFICATION	2.587235009624321E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.999999977781691	WITHOUT_CLASSIFICATION	2.2218308907325497E-8	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9998112384302997	WITHOUT_CLASSIFICATION	1.8876156970021045E-4	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999998206322339	WITHOUT_CLASSIFICATION	1.7936776604060106E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9996045990766798	WITHOUT_CLASSIFICATION	3.954009233201806E-4	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999931431266633	WITHOUT_CLASSIFICATION	6.856873336675598E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999940004498	WITHOUT_CLASSIFICATION	5.999550267082048E-9	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994266553893	WITHOUT_CLASSIFICATION	5.733446107323386E-7	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999999593716491	WITHOUT_CLASSIFICATION	4.0628350897456654E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999915575382289	WITHOUT_CLASSIFICATION	8.442461771131969E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999997026656693	WITHOUT_CLASSIFICATION	2.9733433069638476E-7	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999999309015289	WITHOUT_CLASSIFICATION	6.90984710589633E-8	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999951250965322	WITHOUT_CLASSIFICATION	4.874903467813908E-6	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999976097059561	WITHOUT_CLASSIFICATION	2.3902940439054332E-6	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.99999996482145	WITHOUT_CLASSIFICATION	3.51785499934823E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999868379058	WITHOUT_CLASSIFICATION	1.3162094273248874E-8	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999973148542	WITHOUT_CLASSIFICATION	2.6851458069342256E-9	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999796207603655	WITHOUT_CLASSIFICATION	2.0379239634472614E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.999999777685142	WITHOUT_CLASSIFICATION	2.223148579507554E-7	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999178820023	WITHOUT_CLASSIFICATION	8.21179978098078E-8	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999996096274447	WITHOUT_CLASSIFICATION	3.903725553278875E-7	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.999999840693967	WITHOUT_CLASSIFICATION	1.5930603301098935E-7	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999998498975797	WITHOUT_CLASSIFICATION	1.5010242024034456E-7	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.999999906345186	WITHOUT_CLASSIFICATION	9.365481402770829E-8	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999988321413122	WITHOUT_CLASSIFICATION	1.1678586877556176E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999997569163019	WITHOUT_CLASSIFICATION	2.430836980803415E-7	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999879006834289	WITHOUT_CLASSIFICATION	1.2099316571072872E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999973536096175	WITHOUT_CLASSIFICATION	2.646390382434226E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999875543353935	WITHOUT_CLASSIFICATION	1.2445664606523514E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.99999996622837	WITHOUT_CLASSIFICATION	3.3771630053665176E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999795871775	WITHOUT_CLASSIFICATION	2.0412822573481038E-8	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999997033751763	WITHOUT_CLASSIFICATION	2.9662482369971227E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999994397401378	WITHOUT_CLASSIFICATION	5.602598622065606E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999948986709492	WITHOUT_CLASSIFICATION	5.10132905080215E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999912130155976	WITHOUT_CLASSIFICATION	8.786984402347091E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99975773352977	WITHOUT_CLASSIFICATION	2.4226647023002033E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999707247337	WITHOUT_CLASSIFICATION	2.9275266260115365E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999989878302493	WITHOUT_CLASSIFICATION	1.0121697506399084E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999944155538321	WITHOUT_CLASSIFICATION	5.5844461678461306E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999495011619	WITHOUT_CLASSIFICATION	5.04988381085627E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999998819747896	WITHOUT_CLASSIFICATION	1.1802521031409882E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999950251884699	WITHOUT_CLASSIFICATION	4.974811529969135E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999935634126841	WITHOUT_CLASSIFICATION	6.436587315980588E-6	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999682710808034	WITHOUT_CLASSIFICATION	3.1728919196639484E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999761889485161	WITHOUT_CLASSIFICATION	2.3811051483807065E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9999635971367841	WITHOUT_CLASSIFICATION	3.640286321596101E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999973426903652	WITHOUT_CLASSIFICATION	2.657309634738148E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999973426903652	WITHOUT_CLASSIFICATION	2.657309634738148E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999988306026559	WITHOUT_CLASSIFICATION	1.1693973440992633E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999925217463609	WITHOUT_CLASSIFICATION	7.478253639080106E-6	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999929784882249	WITHOUT_CLASSIFICATION	7.021511775084171E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999959620653515	WITHOUT_CLASSIFICATION	4.0379346485100005E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999959620653515	WITHOUT_CLASSIFICATION	4.0379346485100005E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999959620653515	WITHOUT_CLASSIFICATION	4.0379346485100005E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966423857172	WITHOUT_CLASSIFICATION	3.3576142828127745E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999992526316702	WITHOUT_CLASSIFICATION	7.473683298010459E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999968302723	WITHOUT_CLASSIFICATION	3.1697277791475205E-9	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999994266553893	WITHOUT_CLASSIFICATION	5.733446107323386E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999989787339791	WITHOUT_CLASSIFICATION	1.0212660208660116E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999945925840604	WITHOUT_CLASSIFICATION	5.4074159396750255E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990020780566	WITHOUT_CLASSIFICATION	9.979219434723078E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999144342435	WITHOUT_CLASSIFICATION	8.556575646228848E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999912130155976	WITHOUT_CLASSIFICATION	8.786984402347091E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99975773352977	WITHOUT_CLASSIFICATION	2.4226647023002033E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999707247337	WITHOUT_CLASSIFICATION	2.9275266260115365E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999992955439934	WITHOUT_CLASSIFICATION	7.044560065599049E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.999999852702181	WITHOUT_CLASSIFICATION	1.472978191445868E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960177413062	WITHOUT_CLASSIFICATION	3.9822586938143594E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999090840306	WITHOUT_CLASSIFICATION	9.09159693937587E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999555878377687	WITHOUT_CLASSIFICATION	4.4412162231348785E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999965098171496	WITHOUT_CLASSIFICATION	3.490182850386372E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996345028314005	WITHOUT_CLASSIFICATION	3.654971685993915E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999490884832819	WITHOUT_CLASSIFICATION	5.09115167181299E-5	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999661067093162	WITHOUT_CLASSIFICATION	3.389329068383186E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999557113975801	WITHOUT_CLASSIFICATION	4.42886024199197E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999491703787496	WITHOUT_CLASSIFICATION	5.082962125039007E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999310746286039	WITHOUT_CLASSIFICATION	6.892537139607596E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999998852426141	WITHOUT_CLASSIFICATION	1.1475738598706907E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999992508504918	WITHOUT_CLASSIFICATION	7.491495082414518E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9997769433398354	WITHOUT_CLASSIFICATION	2.2305666016472065E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999705969104278	WITHOUT_CLASSIFICATION	2.9403089572185192E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9999152694885542	WITHOUT_CLASSIFICATION	8.47305114458026E-5	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9999111222975173	WITHOUT_CLASSIFICATION	8.887770248268389E-5	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9998463518824312	WITHOUT_CLASSIFICATION	1.536481175687437E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999894050386162	WITHOUT_CLASSIFICATION	1.0594961383729125E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999988395746754	WITHOUT_CLASSIFICATION	1.1604253245472387E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999948986709492	WITHOUT_CLASSIFICATION	5.10132905080215E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999495011619	WITHOUT_CLASSIFICATION	5.04988381085627E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999998819747896	WITHOUT_CLASSIFICATION	1.1802521031409882E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999950251884699	WITHOUT_CLASSIFICATION	4.974811529969135E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.999999852702181	WITHOUT_CLASSIFICATION	1.472978191445868E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960177413062	WITHOUT_CLASSIFICATION	3.9822586938143594E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999090840306	WITHOUT_CLASSIFICATION	9.09159693937587E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999555878377687	WITHOUT_CLASSIFICATION	4.4412162231348785E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999965098171496	WITHOUT_CLASSIFICATION	3.490182850386372E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999958320919645	WITHOUT_CLASSIFICATION	4.167908035405039E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9995225831478589	WITHOUT_CLASSIFICATION	4.77416852141021E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999988001742854	WITHOUT_CLASSIFICATION	1.1998257145242694E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999803358587123	WITHOUT_CLASSIFICATION	1.9664141287776746E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999803358587123	WITHOUT_CLASSIFICATION	1.9664141287776746E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999803358587123	WITHOUT_CLASSIFICATION	1.9664141287776746E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999803358587123	WITHOUT_CLASSIFICATION	1.9664141287776746E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999803358587123	WITHOUT_CLASSIFICATION	1.9664141287776746E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999946663152469	WITHOUT_CLASSIFICATION	5.333684753054566E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999896577632	WITHOUT_CLASSIFICATION	1.034223679360448E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999994031216103	WITHOUT_CLASSIFICATION	5.968783895966119E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.999992023248318	WITHOUT_CLASSIFICATION	7.976751681908184E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999986040835112	WITHOUT_CLASSIFICATION	1.3959164888277879E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999974850675547	WITHOUT_CLASSIFICATION	2.5149324453618378E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.999999941054877	WITHOUT_CLASSIFICATION	5.894512297730646E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999940057109824	WITHOUT_CLASSIFICATION	5.994289017605191E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999946077292128	WITHOUT_CLASSIFICATION	5.392270787129891E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999990907714205	WITHOUT_CLASSIFICATION	9.09228579660583E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999990907714205	WITHOUT_CLASSIFICATION	9.09228579660583E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999990907714205	WITHOUT_CLASSIFICATION	9.09228579660583E-7	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999887062358077	WITHOUT_CLASSIFICATION	1.1293764192170004E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999690315954707	WITHOUT_CLASSIFICATION	3.0968404529265146E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.999995489682277	WITHOUT_CLASSIFICATION	4.510317723032132E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556684722	WITHOUT_CLASSIFICATION	3.3443315278427703E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556684722	WITHOUT_CLASSIFICATION	3.3443315278427703E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999982691806533	WITHOUT_CLASSIFICATION	1.7308193466990632E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556684722	WITHOUT_CLASSIFICATION	3.3443315278427703E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999961995782246	WITHOUT_CLASSIFICATION	3.8004217752816685E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999094538604429	WITHOUT_CLASSIFICATION	9.05461395569872E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9998966276550716	WITHOUT_CLASSIFICATION	1.0337234492846684E-4	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999992236424959	WITHOUT_CLASSIFICATION	7.763575040015418E-7	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999992236424959	WITHOUT_CLASSIFICATION	7.763575040015418E-7	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999994709190677	WITHOUT_CLASSIFICATION	5.290809322193276E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999921490319497	WITHOUT_CLASSIFICATION	7.850968050381497E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999562885806887	WITHOUT_CLASSIFICATION	4.3711419311253906E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999808039911325	WITHOUT_CLASSIFICATION	1.919600886743539E-5	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999289110796291	WITHOUT_CLASSIFICATION	7.108892037093518E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999999081927143	WITHOUT_CLASSIFICATION	9.180728563645871E-8	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999896814566825	WITHOUT_CLASSIFICATION	1.0318543317449892E-5	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.999998657262024	WITHOUT_CLASSIFICATION	1.3427379760775154E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.999999833565591	WITHOUT_CLASSIFICATION	1.6643440907934136E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999949571077347	WITHOUT_CLASSIFICATION	5.042892265337618E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999987536088275	WITHOUT_CLASSIFICATION	1.2463911725353341E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999949571077347	WITHOUT_CLASSIFICATION	5.042892265337618E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966423857172	WITHOUT_CLASSIFICATION	3.3576142828127745E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999959620653515	WITHOUT_CLASSIFICATION	4.0379346485100005E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999998998441483	WITHOUT_CLASSIFICATION	1.001558516542443E-7	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999989471539132	WITHOUT_CLASSIFICATION	1.052846086726588E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999967101474099	WITHOUT_CLASSIFICATION	3.2898525901666997E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999727979157903	WITHOUT_CLASSIFICATION	2.7202084209656614E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966423857172	WITHOUT_CLASSIFICATION	3.3576142828127745E-6	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999984603760459	WITHOUT_CLASSIFICATION	1.5396239540934639E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999982611847352	WITHOUT_CLASSIFICATION	1.7388152648119165E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996739757429	WITHOUT_CLASSIFICATION	3.2602425725782575E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999945463850268	WITHOUT_CLASSIFICATION	5.453614973215261E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999966102354821	WITHOUT_CLASSIFICATION	3.3897645177712236E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999966102354821	WITHOUT_CLASSIFICATION	3.3897645177712236E-6	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999995625727948	WITHOUT_CLASSIFICATION	4.374272052212427E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999993061932	WITHOUT_CLASSIFICATION	6.938067623610631E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.999999999225054	WITHOUT_CLASSIFICATION	7.749460211054209E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999977872374	WITHOUT_CLASSIFICATION	2.212762613924058E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999999998486207	WITHOUT_CLASSIFICATION	1.5137929351735828E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999994927666	WITHOUT_CLASSIFICATION	5.072333914644493E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999998207058	WITHOUT_CLASSIFICATION	1.7929431789969642E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999799847065516	WITHOUT_CLASSIFICATION	2.0015293448448288E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999994585774198	WITHOUT_CLASSIFICATION	5.414225802013077E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999248325547507	WITHOUT_CLASSIFICATION	7.516744524934527E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999819662655413	WITHOUT_CLASSIFICATION	1.80337344588136E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999459865875321	WITHOUT_CLASSIFICATION	5.401341246787749E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999961032214	WITHOUT_CLASSIFICATION	3.896778530975477E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999836408114186	WITHOUT_CLASSIFICATION	1.6359188581544258E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947820521152	WITHOUT_CLASSIFICATION	5.217947884756662E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999993253706	WITHOUT_CLASSIFICATION	6.74629406105741E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999992801721	WITHOUT_CLASSIFICATION	7.198278989102814E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.999999959561524	WITHOUT_CLASSIFICATION	4.043847601906499E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999733471935	WITHOUT_CLASSIFICATION	2.6652806472731276E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999093193838	WITHOUT_CLASSIFICATION	9.068061623941643E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999997181719	WITHOUT_CLASSIFICATION	2.818281341616695E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999499953958	WITHOUT_CLASSIFICATION	5.000460437562233E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999993253706	WITHOUT_CLASSIFICATION	6.74629406105741E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999664122576	WITHOUT_CLASSIFICATION	3.358774236094086E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999931247591	WITHOUT_CLASSIFICATION	6.8752408744693725E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999490396215	WITHOUT_CLASSIFICATION	5.096037861960666E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999866941917	WITHOUT_CLASSIFICATION	1.3305808361001412E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999952882382	WITHOUT_CLASSIFICATION	4.711761820392001E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999888296435	WITHOUT_CLASSIFICATION	1.1170356617883249E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999862727069	WITHOUT_CLASSIFICATION	1.3727293021517248E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999524642116	WITHOUT_CLASSIFICATION	4.753578846108714E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999996011547	WITHOUT_CLASSIFICATION	3.988452974744418E-9	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9998471310474232	WITHOUT_CLASSIFICATION	1.5286895257680087E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9998471310474232	WITHOUT_CLASSIFICATION	1.5286895257680087E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999997181719	WITHOUT_CLASSIFICATION	2.818281341616695E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999982806752	WITHOUT_CLASSIFICATION	1.719324787001605E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999992625541	WITHOUT_CLASSIFICATION	7.374457753910913E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999976461905	WITHOUT_CLASSIFICATION	2.353809449144904E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999974809392	WITHOUT_CLASSIFICATION	2.519060838066508E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999877535768101	WITHOUT_CLASSIFICATION	1.2246423189828122E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999962644937392	WITHOUT_CLASSIFICATION	3.7355062607125566E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999991238730283	WITHOUT_CLASSIFICATION	8.761269718077996E-7	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999999439764495	WITHOUT_CLASSIFICATION	5.602355053070507E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999680207110715	WITHOUT_CLASSIFICATION	3.1979288928501255E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999915033865622	WITHOUT_CLASSIFICATION	8.496613437857082E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999973818859	WITHOUT_CLASSIFICATION	2.6181139670445936E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999787170297963	WITHOUT_CLASSIFICATION	2.128297020361154E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999673926081004	WITHOUT_CLASSIFICATION	3.260739189959976E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999974321192	WITHOUT_CLASSIFICATION	2.567880816681117E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999968302723	WITHOUT_CLASSIFICATION	3.1697277791475205E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999995416496	WITHOUT_CLASSIFICATION	4.5835030664379496E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999749897645	WITHOUT_CLASSIFICATION	2.5010235529498228E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999720844146445	WITHOUT_CLASSIFICATION	2.7915585355592803E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998989515580351	WITHOUT_CLASSIFICATION	1.0104844196488485E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999995416496	WITHOUT_CLASSIFICATION	4.5835030664379496E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999877110015	WITHOUT_CLASSIFICATION	1.2288998541025895E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999918980774	WITHOUT_CLASSIFICATION	8.101922551598984E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999843022408	WITHOUT_CLASSIFICATION	1.569775918863685E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.999999985808988	WITHOUT_CLASSIFICATION	1.4191012191624583E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999894968665	WITHOUT_CLASSIFICATION	1.0503133400642333E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999631526116056	WITHOUT_CLASSIFICATION	3.684738839445327E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999631526116056	WITHOUT_CLASSIFICATION	3.684738839445327E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999631526116056	WITHOUT_CLASSIFICATION	3.684738839445327E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999631526116056	WITHOUT_CLASSIFICATION	3.684738839445327E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999631526116056	WITHOUT_CLASSIFICATION	3.684738839445327E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999631526116056	WITHOUT_CLASSIFICATION	3.684738839445327E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999956298603702	WITHOUT_CLASSIFICATION	4.370139629923118E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999996103656061	WITHOUT_CLASSIFICATION	3.896343938359467E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999412905007417	WITHOUT_CLASSIFICATION	5.870949925819186E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999803564290637	WITHOUT_CLASSIFICATION	1.9643570936316936E-5	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999752010128	WITHOUT_CLASSIFICATION	2.4798987163854932E-8	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999997539850284	WITHOUT_CLASSIFICATION	2.460149716394249E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999967634009	WITHOUT_CLASSIFICATION	3.2365990702896422E-9	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999952843150586	WITHOUT_CLASSIFICATION	4.715684941489604E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9869369591197216	WITHOUT_CLASSIFICATION	0.013063040880278504	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999675709297676	WITHOUT_CLASSIFICATION	3.242907023241603E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999930947022	WITHOUT_CLASSIFICATION	6.90529772381667E-9	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999967638546888	WITHOUT_CLASSIFICATION	3.2361453111807094E-6	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999844777755	WITHOUT_CLASSIFICATION	1.552222453872853E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999993872120312	WITHOUT_CLASSIFICATION	6.127879688804251E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999931555404	WITHOUT_CLASSIFICATION	6.844459564617489E-9	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999998760601199	WITHOUT_CLASSIFICATION	1.2393988005605444E-7	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999999992419214	WITHOUT_CLASSIFICATION	7.580785010406616E-10	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999961336020858	WITHOUT_CLASSIFICATION	3.866397914240634E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999961336020858	WITHOUT_CLASSIFICATION	3.866397914240634E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999961336020858	WITHOUT_CLASSIFICATION	3.866397914240634E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999999791396036	WITHOUT_CLASSIFICATION	2.0860396396585283E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999941813384334	WITHOUT_CLASSIFICATION	5.818661566579013E-6	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999999539355534	WITHOUT_CLASSIFICATION	4.6064446476344315E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999501216473	WITHOUT_CLASSIFICATION	4.987835274820941E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.5731303034527249	WITHOUT_CLASSIFICATION	0.42686969654727525	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999992526316702	WITHOUT_CLASSIFICATION	7.473683298010459E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.99999999996988	WITHOUT_CLASSIFICATION	3.012012910337396E-11	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999814818253	WITHOUT_CLASSIFICATION	1.851817470891133E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999607283796852	WITHOUT_CLASSIFICATION	3.927162031474187E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999998791647924	WITHOUT_CLASSIFICATION	1.2083520759308704E-6	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999967617285559	WITHOUT_CLASSIFICATION	3.2382714441053677E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999996465292089	WITHOUT_CLASSIFICATION	3.5347079104812117E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999999226729731	WITHOUT_CLASSIFICATION	7.732702684101739E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999949571077347	WITHOUT_CLASSIFICATION	5.042892265337618E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999949571077347	WITHOUT_CLASSIFICATION	5.042892265337618E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999954293019165	WITHOUT_CLASSIFICATION	4.570698083438713E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999978834258494	WITHOUT_CLASSIFICATION	2.1165741505477176E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999894478949861	WITHOUT_CLASSIFICATION	1.0552105013977023E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999908306164	WITHOUT_CLASSIFICATION	9.169383606306738E-9	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.999999643351678	WITHOUT_CLASSIFICATION	3.5664832209588054E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999973670485155	WITHOUT_CLASSIFICATION	2.6329514845193606E-6	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999987423282356	WITHOUT_CLASSIFICATION	1.257671764435779E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999972609598766	WITHOUT_CLASSIFICATION	2.7390401232844467E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999142226929	WITHOUT_CLASSIFICATION	8.577730714445426E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999949571077347	WITHOUT_CLASSIFICATION	5.042892265337618E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999959620653515	WITHOUT_CLASSIFICATION	4.0379346485100005E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999941478286469	WITHOUT_CLASSIFICATION	5.852171353033538E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999998745996637	WITHOUT_CLASSIFICATION	1.2540033635957366E-7	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999990402057711	WITHOUT_CLASSIFICATION	9.597942288863212E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999987689016132	WITHOUT_CLASSIFICATION	1.2310983868309845E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999994872625259	WITHOUT_CLASSIFICATION	5.127374741036275E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999994872625259	WITHOUT_CLASSIFICATION	5.127374741036275E-7	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999988507418346	WITHOUT_CLASSIFICATION	1.1492581654502602E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9998607474613191	WITHOUT_CLASSIFICATION	1.3925253868091343E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999976790591004	WITHOUT_CLASSIFICATION	2.320940899652319E-6	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.999999909062667	WITHOUT_CLASSIFICATION	9.093733297954599E-8	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999998206088948	WITHOUT_CLASSIFICATION	1.7939110519407786E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999998206088948	WITHOUT_CLASSIFICATION	1.7939110519407786E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999442066456179	WITHOUT_CLASSIFICATION	5.5793354382047815E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999442066456179	WITHOUT_CLASSIFICATION	5.5793354382047815E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999988144886759	WITHOUT_CLASSIFICATION	1.1855113241270667E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999938208721854	WITHOUT_CLASSIFICATION	6.179127814647181E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999640662449587	WITHOUT_CLASSIFICATION	3.593375504127965E-5	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999970216062738	WITHOUT_CLASSIFICATION	2.9783937261814985E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999928004311223	WITHOUT_CLASSIFICATION	7.199568877779199E-6	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9998192132813203	WITHOUT_CLASSIFICATION	1.807867186795974E-4	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9998192132813203	WITHOUT_CLASSIFICATION	1.807867186795974E-4	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.99996897701721	WITHOUT_CLASSIFICATION	3.102298279005998E-5	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999945222634	WITHOUT_CLASSIFICATION	5.4777365253479364E-9	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999998541836985	WITHOUT_CLASSIFICATION	1.4581630146859527E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999321232494	WITHOUT_CLASSIFICATION	6.787675058428681E-8	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999999082098325	WITHOUT_CLASSIFICATION	9.17901674166932E-8	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999998159688981	WITHOUT_CLASSIFICATION	1.8403110195850601E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9829377209967494	WITHOUT_CLASSIFICATION	0.017062279003250552	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999946240990144	WITHOUT_CLASSIFICATION	5.375900985627096E-6	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999952425719222	WITHOUT_CLASSIFICATION	4.757428077858494E-6	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9998591286278147	WITHOUT_CLASSIFICATION	1.4087137218530462E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999999430668446	WITHOUT_CLASSIFICATION	5.6933155415539525E-8	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999992779488596	WITHOUT_CLASSIFICATION	7.220511404468091E-7	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9930762565306734	WITHOUT_CLASSIFICATION	0.006923743469326514	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999890662652365	WITHOUT_CLASSIFICATION	1.0933734763384137E-5	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999485537282095	WITHOUT_CLASSIFICATION	5.144627179058188E-5	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999970775709748	WITHOUT_CLASSIFICATION	2.9224290253352424E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999782068929	WITHOUT_CLASSIFICATION	2.1793107117633583E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999998965800435	WITHOUT_CLASSIFICATION	1.0341995647570002E-7	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999995968374902	WITHOUT_CLASSIFICATION	4.031625097742216E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999954192154619	WITHOUT_CLASSIFICATION	4.5807845380791974E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999954192154619	WITHOUT_CLASSIFICATION	4.5807845380791974E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999996503271076	WITHOUT_CLASSIFICATION	3.4967289237746E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999443947703062	WITHOUT_CLASSIFICATION	5.5605229693768075E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999986677832216	WITHOUT_CLASSIFICATION	1.3322167783776463E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999794164820252	WITHOUT_CLASSIFICATION	2.058351797480167E-5	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999994520319849	WITHOUT_CLASSIFICATION	5.479680151568635E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999534978242034	WITHOUT_CLASSIFICATION	4.650217579656103E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.999920072865185	WITHOUT_CLASSIFICATION	7.992713481496417E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.999997407708358	WITHOUT_CLASSIFICATION	2.5922916419825788E-6	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999984342692394	WITHOUT_CLASSIFICATION	1.5657307606745608E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.999999986952877	WITHOUT_CLASSIFICATION	1.304712306202551E-8	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999913467689168	WITHOUT_CLASSIFICATION	8.65323108317512E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999984641046616	WITHOUT_CLASSIFICATION	1.535895338325202E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999895392413454	WITHOUT_CLASSIFICATION	1.0460758654717264E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9951010698736893	WITHOUT_CLASSIFICATION	0.004898930126310729	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999932629301714	WITHOUT_CLASSIFICATION	6.737069828550948E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999995882611161	WITHOUT_CLASSIFICATION	4.11738883786071E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999965831166064	WITHOUT_CLASSIFICATION	3.416883393471749E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999965671601143	WITHOUT_CLASSIFICATION	3.432839885753393E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999873412487665	WITHOUT_CLASSIFICATION	1.265875123340141E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999873412487665	WITHOUT_CLASSIFICATION	1.265875123340141E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999873412487665	WITHOUT_CLASSIFICATION	1.265875123340141E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999873412487665	WITHOUT_CLASSIFICATION	1.265875123340141E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999997378526339	WITHOUT_CLASSIFICATION	2.6214736609395615E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999478030551	WITHOUT_CLASSIFICATION	5.2196944820733576E-8	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999478030551	WITHOUT_CLASSIFICATION	5.2196944820733576E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999999687688705	WITHOUT_CLASSIFICATION	3.1231129506746814E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999848328519818	WITHOUT_CLASSIFICATION	1.5167148018113582E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999994372966354	WITHOUT_CLASSIFICATION	5.627033646915819E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999572904179	WITHOUT_CLASSIFICATION	4.270958194928662E-8	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999988915124935	WITHOUT_CLASSIFICATION	1.1084875064098761E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999977466259912	WITHOUT_CLASSIFICATION	2.253374008796653E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999779252753314	WITHOUT_CLASSIFICATION	2.207472466864614E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999963297193293	WITHOUT_CLASSIFICATION	3.6702806707202103E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999963297193293	WITHOUT_CLASSIFICATION	3.6702806707202103E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999963297193293	WITHOUT_CLASSIFICATION	3.6702806707202103E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.999999551998714	WITHOUT_CLASSIFICATION	4.4800128592057414E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998378659786	WITHOUT_CLASSIFICATION	1.621340214283067E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.999865069209877	WITHOUT_CLASSIFICATION	1.3493079012295538E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995167699582	WITHOUT_CLASSIFICATION	4.832300417772684E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995167699582	WITHOUT_CLASSIFICATION	4.832300417772684E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.999999988813688	WITHOUT_CLASSIFICATION	1.11863118780537E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998107136705	WITHOUT_CLASSIFICATION	1.8928632940679715E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993904143962	WITHOUT_CLASSIFICATION	6.095856038011569E-7	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999997181743135	WITHOUT_CLASSIFICATION	2.8182568650990024E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9970753615320844	WITHOUT_CLASSIFICATION	0.002924638467915599	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999995043069586	WITHOUT_CLASSIFICATION	4.956930412909474E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999209929331553	WITHOUT_CLASSIFICATION	7.900706684471764E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999997631661474	WITHOUT_CLASSIFICATION	2.3683385269766055E-7	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.999999913208974	WITHOUT_CLASSIFICATION	8.67910259652299E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999990691834102	WITHOUT_CLASSIFICATION	9.308165897209441E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999998696296	WITHOUT_CLASSIFICATION	1.3037034435357644E-10	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999067808821049	WITHOUT_CLASSIFICATION	9.321911789506315E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999067808821049	WITHOUT_CLASSIFICATION	9.321911789506315E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9956865237245075	WITHOUT_CLASSIFICATION	0.004313476275492528	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9976565619792022	WITHOUT_CLASSIFICATION	0.0023434380207979335	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9976565619792022	WITHOUT_CLASSIFICATION	0.0023434380207979335	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999975758572871	WITHOUT_CLASSIFICATION	2.42414271290045E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999140973461	WITHOUT_CLASSIFICATION	8.590265391462357E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999140973461	WITHOUT_CLASSIFICATION	8.590265391462357E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998884767759	WITHOUT_CLASSIFICATION	1.1152322407832554E-7	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999996680557828	WITHOUT_CLASSIFICATION	3.319442172370258E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9967811521884734	WITHOUT_CLASSIFICATION	0.003218847811526719	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999997033751763	WITHOUT_CLASSIFICATION	2.9662482369971227E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999997033751763	WITHOUT_CLASSIFICATION	2.9662482369971227E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999966183295249	WITHOUT_CLASSIFICATION	3.381670475130615E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999759400940477	WITHOUT_CLASSIFICATION	2.4059905952422023E-5	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999446535829456	WITHOUT_CLASSIFICATION	5.53464170543365E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.8043008230221391	DEFECT	0.1956991769778608	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999995566134602	WITHOUT_CLASSIFICATION	4.433865398029156E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999995566134602	WITHOUT_CLASSIFICATION	4.433865398029156E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.8928333558005891	DEFECT	0.10716664419941091	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999630131786896	WITHOUT_CLASSIFICATION	3.6986821310472826E-5	DEFECT
// is this an error???	DEFECT	0.9999630131786896	WITHOUT_CLASSIFICATION	3.6986821310472826E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999925829403539	WITHOUT_CLASSIFICATION	7.417059646042699E-6	DEFECT
