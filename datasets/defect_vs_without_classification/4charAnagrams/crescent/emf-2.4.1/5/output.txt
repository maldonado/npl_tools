// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999996086959365	WITHOUT_CLASSIFICATION	3.913040635252942E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999959727669296	WITHOUT_CLASSIFICATION	4.027233070410646E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999999319517154	WITHOUT_CLASSIFICATION	6.804828458783582E-8	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999994939184825	WITHOUT_CLASSIFICATION	5.060815174370045E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999999030048412	WITHOUT_CLASSIFICATION	9.699515881347972E-8	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999970481909	WITHOUT_CLASSIFICATION	2.95180925956041E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954748286789	WITHOUT_CLASSIFICATION	4.525171321200498E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999995994285116	WITHOUT_CLASSIFICATION	4.0057148835666645E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999997869373124	WITHOUT_CLASSIFICATION	2.1306268748710325E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986366206218	WITHOUT_CLASSIFICATION	1.3633793780861893E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999999618806968	WITHOUT_CLASSIFICATION	3.811930320722667E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999994565472597	WITHOUT_CLASSIFICATION	5.434527403710941E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999978460147293	WITHOUT_CLASSIFICATION	2.15398527062245E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998399337111	WITHOUT_CLASSIFICATION	1.600662889073341E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999951911312873	WITHOUT_CLASSIFICATION	4.808868712739055E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999997555021134	WITHOUT_CLASSIFICATION	2.444978866088126E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999993942611044	WITHOUT_CLASSIFICATION	6.057388956772936E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954748286789	WITHOUT_CLASSIFICATION	4.525171321200498E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999998555927899	WITHOUT_CLASSIFICATION	1.444072100633269E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999989804610814	WITHOUT_CLASSIFICATION	1.0195389186828005E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999755907485	WITHOUT_CLASSIFICATION	2.4409251453375263E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999926355142665	WITHOUT_CLASSIFICATION	7.364485733543427E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999926355142665	WITHOUT_CLASSIFICATION	7.364485733543427E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999997900494982	WITHOUT_CLASSIFICATION	2.099505017491523E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999003935399	WITHOUT_CLASSIFICATION	9.96064601019694E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999937602025522	WITHOUT_CLASSIFICATION	6.239797447804167E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999957175384411	WITHOUT_CLASSIFICATION	4.2824615589295735E-6	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999974382588144	WITHOUT_CLASSIFICATION	2.561741185667921E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999976547040382	WITHOUT_CLASSIFICATION	2.345295961709633E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999931395266222	WITHOUT_CLASSIFICATION	6.8604733778816E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999995967210729	WITHOUT_CLASSIFICATION	4.032789271527653E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999998723513848	WITHOUT_CLASSIFICATION	1.276486152017946E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997876956102723	WITHOUT_CLASSIFICATION	2.123043897276837E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999996978321565	WITHOUT_CLASSIFICATION	3.0216784349742843E-7	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999925697325815	WITHOUT_CLASSIFICATION	7.430267418432842E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999850480168104	WITHOUT_CLASSIFICATION	1.4951983189422903E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999987882463995	WITHOUT_CLASSIFICATION	1.2117536004041144E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999997988420516	WITHOUT_CLASSIFICATION	2.0115794841578256E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999936545932014	WITHOUT_CLASSIFICATION	6.345406798552748E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996252627507	WITHOUT_CLASSIFICATION	3.747372492330864E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999995856620814	WITHOUT_CLASSIFICATION	4.1433791858893085E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999054929320705	WITHOUT_CLASSIFICATION	9.450706792941691E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999982194623112	WITHOUT_CLASSIFICATION	1.7805376888279955E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999386224405	WITHOUT_CLASSIFICATION	6.137755940571071E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999938971847784	WITHOUT_CLASSIFICATION	6.102815221625185E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999932427973972	WITHOUT_CLASSIFICATION	6.7572026028586705E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999210240657842	WITHOUT_CLASSIFICATION	7.897593421586044E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998955483403729	WITHOUT_CLASSIFICATION	1.0445165962707828E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9996328424670576	WITHOUT_CLASSIFICATION	3.6715753294236044E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999384316819501	WITHOUT_CLASSIFICATION	6.156831805001225E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999210240657842	WITHOUT_CLASSIFICATION	7.897593421586044E-5	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998824770948075	WITHOUT_CLASSIFICATION	1.1752290519248433E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.99992922370858	WITHOUT_CLASSIFICATION	7.077629142004025E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.999474392493329	WITHOUT_CLASSIFICATION	5.256075066708499E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999494549333509	WITHOUT_CLASSIFICATION	5.0545066649247446E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998783966171647	WITHOUT_CLASSIFICATION	1.2160338283527088E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999621090229663	WITHOUT_CLASSIFICATION	3.789097703358686E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999977002197502	WITHOUT_CLASSIFICATION	2.299780249717504E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999089708695456	WITHOUT_CLASSIFICATION	9.102913045450755E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999929739181471	WITHOUT_CLASSIFICATION	7.026081852777991E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998157170549127	WITHOUT_CLASSIFICATION	1.8428294508739958E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9992978168115502	WITHOUT_CLASSIFICATION	7.021831884498255E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.999999398388243	WITHOUT_CLASSIFICATION	6.016117570079071E-7	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.999936600075996	WITHOUT_CLASSIFICATION	6.3399924003923E-5	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.999996134089082	WITHOUT_CLASSIFICATION	3.865910918053783E-6	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999992080177486	WITHOUT_CLASSIFICATION	7.919822514029238E-7	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999993818644799	WITHOUT_CLASSIFICATION	6.181355200913239E-7	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999429341970137	WITHOUT_CLASSIFICATION	5.7065802986301377E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9990089005401895	WITHOUT_CLASSIFICATION	9.910994598104845E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999994565472597	WITHOUT_CLASSIFICATION	5.434527403710941E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999978460147293	WITHOUT_CLASSIFICATION	2.15398527062245E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998399337111	WITHOUT_CLASSIFICATION	1.600662889073341E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999971533566245	WITHOUT_CLASSIFICATION	2.8466433755189037E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999982182621728	WITHOUT_CLASSIFICATION	1.7817378272371825E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999951911312873	WITHOUT_CLASSIFICATION	4.808868712739055E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999997555021134	WITHOUT_CLASSIFICATION	2.444978866088126E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999993942611044	WITHOUT_CLASSIFICATION	6.057388956772936E-7	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999279185186377	WITHOUT_CLASSIFICATION	7.208148136236699E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999279185186377	WITHOUT_CLASSIFICATION	7.208148136236699E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999279185186377	WITHOUT_CLASSIFICATION	7.208148136236699E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999970481909	WITHOUT_CLASSIFICATION	2.95180925956041E-9	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999993545879509	WITHOUT_CLASSIFICATION	6.454120490745876E-7	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999700065614	WITHOUT_CLASSIFICATION	2.999343864257061E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999999720374187	WITHOUT_CLASSIFICATION	2.7962581246876096E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999755907485	WITHOUT_CLASSIFICATION	2.4409251453375263E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984740171968	WITHOUT_CLASSIFICATION	1.5259828032908928E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999931395266222	WITHOUT_CLASSIFICATION	6.8604733778816E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999995967210729	WITHOUT_CLASSIFICATION	4.032789271527653E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997876956102723	WITHOUT_CLASSIFICATION	2.123043897276837E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999850480168104	WITHOUT_CLASSIFICATION	1.4951983189422903E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999992406280573	WITHOUT_CLASSIFICATION	7.593719427294734E-7	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.999998202328172	WITHOUT_CLASSIFICATION	1.797671828041564E-6	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999998545150512	WITHOUT_CLASSIFICATION	1.4548494875413858E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999998363077899	WITHOUT_CLASSIFICATION	1.6369221017473263E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.999999756357015	WITHOUT_CLASSIFICATION	2.4364298502009824E-7	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996252627507	WITHOUT_CLASSIFICATION	3.747372492330864E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999054929320705	WITHOUT_CLASSIFICATION	9.450706792941691E-5	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999969885463391	WITHOUT_CLASSIFICATION	3.0114536609620206E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999996302936512	WITHOUT_CLASSIFICATION	3.6970634886241907E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999899487135565	WITHOUT_CLASSIFICATION	1.005128644359249E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999999752226555	WITHOUT_CLASSIFICATION	2.477734462219465E-8	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999988886069329	WITHOUT_CLASSIFICATION	1.111393067159242E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999985196952593	WITHOUT_CLASSIFICATION	1.4803047407491637E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999994427513721	WITHOUT_CLASSIFICATION	5.572486279063779E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999932730362159	WITHOUT_CLASSIFICATION	6.726963784192958E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999869792653368	WITHOUT_CLASSIFICATION	1.3020734663330537E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999905886267767	WITHOUT_CLASSIFICATION	9.411373223312985E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998353940384	WITHOUT_CLASSIFICATION	1.6460596174152372E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999869792653368	WITHOUT_CLASSIFICATION	1.3020734663330537E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999868886958833	WITHOUT_CLASSIFICATION	1.3111304116758801E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999993170525062	WITHOUT_CLASSIFICATION	6.829474937058061E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999996524425755	WITHOUT_CLASSIFICATION	3.475574244686719E-7	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999978113818466	WITHOUT_CLASSIFICATION	2.1886181532913435E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999869792653368	WITHOUT_CLASSIFICATION	1.3020734663330537E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999905886267767	WITHOUT_CLASSIFICATION	9.411373223312985E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999974973317977	WITHOUT_CLASSIFICATION	2.502668202223618E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999181211996	WITHOUT_CLASSIFICATION	8.187880040722458E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999984919228672	WITHOUT_CLASSIFICATION	1.5080771328634527E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999987317984014	WITHOUT_CLASSIFICATION	1.2682015986298716E-6	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999996171526192	WITHOUT_CLASSIFICATION	3.8284738079005017E-7	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999989722930944	WITHOUT_CLASSIFICATION	1.0277069055560762E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.999999977773344	WITHOUT_CLASSIFICATION	2.22266559207562E-8	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999372748019545	WITHOUT_CLASSIFICATION	6.272519804551833E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999789387454721	WITHOUT_CLASSIFICATION	2.1061254528030943E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.999936986077878	WITHOUT_CLASSIFICATION	6.301392212204466E-5	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9987165947219503	WITHOUT_CLASSIFICATION	0.001283405278049635	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999993012842339	WITHOUT_CLASSIFICATION	6.98715766151631E-7	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999999620588368	WITHOUT_CLASSIFICATION	3.794116320296179E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998955483403729	WITHOUT_CLASSIFICATION	1.0445165962707828E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999893833105	WITHOUT_CLASSIFICATION	1.0616689528299007E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999931366974816	WITHOUT_CLASSIFICATION	6.863302518443781E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999774277075898	WITHOUT_CLASSIFICATION	2.2572292410299123E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998956282623965	WITHOUT_CLASSIFICATION	1.0437173760358179E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999895607001852	WITHOUT_CLASSIFICATION	1.0439299814741314E-5	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999725814019449	WITHOUT_CLASSIFICATION	2.741859805522613E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999883522307592	WITHOUT_CLASSIFICATION	1.1647769240797261E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999893833105	WITHOUT_CLASSIFICATION	1.0616689528299007E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999931366974816	WITHOUT_CLASSIFICATION	6.863302518443781E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999541219479539	WITHOUT_CLASSIFICATION	4.587805204619085E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999541219479539	WITHOUT_CLASSIFICATION	4.587805204619085E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999970831668732	WITHOUT_CLASSIFICATION	2.9168331268326764E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999984594617994	WITHOUT_CLASSIFICATION	1.5405382005947202E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999909438313781	WITHOUT_CLASSIFICATION	9.056168621894423E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999970831668732	WITHOUT_CLASSIFICATION	2.9168331268326764E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999984594617994	WITHOUT_CLASSIFICATION	1.5405382005947202E-6	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999995855175189	WITHOUT_CLASSIFICATION	4.1448248112460087E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999984695310533	WITHOUT_CLASSIFICATION	1.5304689466707343E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999997534870616	WITHOUT_CLASSIFICATION	2.4651293846250023E-7	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999985275269352	WITHOUT_CLASSIFICATION	1.4724730647506006E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999997534870616	WITHOUT_CLASSIFICATION	2.4651293846250023E-7	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999996070972966	WITHOUT_CLASSIFICATION	3.929027033738547E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999998984959667	WITHOUT_CLASSIFICATION	1.015040332414511E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999998984959667	WITHOUT_CLASSIFICATION	1.015040332414511E-7	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999986571053515	WITHOUT_CLASSIFICATION	1.3428946484251823E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999809606268	WITHOUT_CLASSIFICATION	1.903937315271344E-8	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9998636813540552	WITHOUT_CLASSIFICATION	1.363186459447626E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999628130479505	WITHOUT_CLASSIFICATION	3.718695204944069E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.999999995429688	WITHOUT_CLASSIFICATION	4.570311993347108E-9	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999990618648108	WITHOUT_CLASSIFICATION	9.381351892684356E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999887838980133	WITHOUT_CLASSIFICATION	1.1216101986751137E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999986979919242	WITHOUT_CLASSIFICATION	1.3020080757463823E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999971390879172	WITHOUT_CLASSIFICATION	2.8609120828434326E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999957115510286	WITHOUT_CLASSIFICATION	4.28844897140452E-6	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999874372845063	WITHOUT_CLASSIFICATION	1.2562715493673518E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999968345525654	WITHOUT_CLASSIFICATION	3.165447434565109E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999968360912412	WITHOUT_CLASSIFICATION	3.1639087587727046E-6	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999990924952584	WITHOUT_CLASSIFICATION	9.075047416120869E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999978096152786	WITHOUT_CLASSIFICATION	2.1903847214794814E-6	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999883776715891	WITHOUT_CLASSIFICATION	1.1622328410913071E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999951437608249	WITHOUT_CLASSIFICATION	4.856239175088808E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.999999957902996	WITHOUT_CLASSIFICATION	4.209700402888251E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999963984658532	WITHOUT_CLASSIFICATION	3.6015341467673464E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999963984658532	WITHOUT_CLASSIFICATION	3.6015341467673464E-6	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999999847677119	WITHOUT_CLASSIFICATION	1.5232288098822028E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999999863586863	WITHOUT_CLASSIFICATION	1.3641313697173185E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999974225612571	WITHOUT_CLASSIFICATION	2.5774387428192492E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999787985740758	WITHOUT_CLASSIFICATION	2.1201425924240233E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999779839853344	WITHOUT_CLASSIFICATION	2.201601466551887E-5	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998605531571	WITHOUT_CLASSIFICATION	1.3944684284948172E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999978096152786	WITHOUT_CLASSIFICATION	2.1903847214794814E-6	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999735843238378	WITHOUT_CLASSIFICATION	2.641567616233288E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999947399318121	WITHOUT_CLASSIFICATION	5.260068187850705E-6	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999997425806425	WITHOUT_CLASSIFICATION	2.574193575257828E-7	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999988674547804	WITHOUT_CLASSIFICATION	1.132545219563033E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999971898688521	WITHOUT_CLASSIFICATION	2.810131147846277E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999552153436	WITHOUT_CLASSIFICATION	4.478465634676265E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999996563937519	WITHOUT_CLASSIFICATION	3.436062481725359E-7	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999990377952622	WITHOUT_CLASSIFICATION	9.622047377713088E-7	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999693937794	WITHOUT_CLASSIFICATION	3.060622046558832E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952526842265	WITHOUT_CLASSIFICATION	4.747315773466261E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.999998689369028	WITHOUT_CLASSIFICATION	1.310630971871466E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999999896467028	WITHOUT_CLASSIFICATION	1.0353297200832666E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999999896467028	WITHOUT_CLASSIFICATION	1.0353297200832666E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999999517877579	WITHOUT_CLASSIFICATION	4.821224219947253E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999950390637308	WITHOUT_CLASSIFICATION	4.960936269248573E-6	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999865364578124	WITHOUT_CLASSIFICATION	1.3463542187492067E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999978675237524	WITHOUT_CLASSIFICATION	2.1324762475970674E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999419802648	WITHOUT_CLASSIFICATION	5.801973523290508E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999992227448377	WITHOUT_CLASSIFICATION	7.772551624084748E-7	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999982530433256	WITHOUT_CLASSIFICATION	1.7469566744638604E-6	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999997584792949	WITHOUT_CLASSIFICATION	2.4152070503264997E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999895548038775	WITHOUT_CLASSIFICATION	1.0445196122452247E-5	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9998972998331362	WITHOUT_CLASSIFICATION	1.0270016686376292E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999876835806891	WITHOUT_CLASSIFICATION	1.231641931091562E-5	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9998517000498631	WITHOUT_CLASSIFICATION	1.4829995013686747E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999987362529378	WITHOUT_CLASSIFICATION	1.263747062232049E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999957968730413	WITHOUT_CLASSIFICATION	4.203126958598737E-6	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9433161886950481	WITHOUT_CLASSIFICATION	0.056683811304951974	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999993803302021	WITHOUT_CLASSIFICATION	6.196697980182615E-7	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999972447286467	WITHOUT_CLASSIFICATION	2.7552713532480865E-6	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999972943683848	WITHOUT_CLASSIFICATION	2.7056316152629385E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999978387934362	WITHOUT_CLASSIFICATION	2.1612065638536143E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999995827517233	WITHOUT_CLASSIFICATION	4.172482766867986E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.999992342843873	WITHOUT_CLASSIFICATION	7.657156127028025E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999979366416059	WITHOUT_CLASSIFICATION	2.063358394196587E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999992070192403	WITHOUT_CLASSIFICATION	7.929807597789777E-7	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999998484612799	WITHOUT_CLASSIFICATION	1.5153872022245143E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.999623499176191	WITHOUT_CLASSIFICATION	3.76500823808995E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999985681527855	WITHOUT_CLASSIFICATION	1.4318472144918796E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999975123686828	WITHOUT_CLASSIFICATION	2.487631317085051E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999991602681126	WITHOUT_CLASSIFICATION	8.397318873834366E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.999999850389574	WITHOUT_CLASSIFICATION	1.496104261355304E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999861138442843	WITHOUT_CLASSIFICATION	1.38861557158816E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999982934686381	WITHOUT_CLASSIFICATION	1.7065313619750332E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999982934686381	WITHOUT_CLASSIFICATION	1.7065313619750332E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999977359451396	WITHOUT_CLASSIFICATION	2.264054860424689E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999977359451396	WITHOUT_CLASSIFICATION	2.264054860424689E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999980241691699	WITHOUT_CLASSIFICATION	1.9758308301052808E-5	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999992559487098	WITHOUT_CLASSIFICATION	7.440512903266365E-7	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999791570259464	WITHOUT_CLASSIFICATION	2.0842974053582175E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999791570259464	WITHOUT_CLASSIFICATION	2.0842974053582175E-5	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999977054356399	WITHOUT_CLASSIFICATION	2.2945643600530386E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998746258527443	WITHOUT_CLASSIFICATION	1.253741472556562E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999968360912412	WITHOUT_CLASSIFICATION	3.1639087587727046E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999931052117447	WITHOUT_CLASSIFICATION	6.8947882552505895E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999931052117447	WITHOUT_CLASSIFICATION	6.8947882552505895E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999931052117447	WITHOUT_CLASSIFICATION	6.8947882552505895E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998746258527443	WITHOUT_CLASSIFICATION	1.253741472556562E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999998030460133	WITHOUT_CLASSIFICATION	1.9695398671587845E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999086021252074	WITHOUT_CLASSIFICATION	9.139787479265938E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9999692850542358	WITHOUT_CLASSIFICATION	3.0714945764279654E-5	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999786811815121	WITHOUT_CLASSIFICATION	2.1318818487846287E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.999999764095013	WITHOUT_CLASSIFICATION	2.3590498693885195E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999984261025532	WITHOUT_CLASSIFICATION	1.573897446808131E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999999319517154	WITHOUT_CLASSIFICATION	6.804828458783582E-8	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999994939184825	WITHOUT_CLASSIFICATION	5.060815174370045E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999999030048412	WITHOUT_CLASSIFICATION	9.699515881347972E-8	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999970481909	WITHOUT_CLASSIFICATION	2.95180925956041E-9	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999995994285116	WITHOUT_CLASSIFICATION	4.0057148835666645E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999997869373124	WITHOUT_CLASSIFICATION	2.1306268748710325E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986366206218	WITHOUT_CLASSIFICATION	1.3633793780861893E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999994565472597	WITHOUT_CLASSIFICATION	5.434527403710941E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999978460147293	WITHOUT_CLASSIFICATION	2.15398527062245E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998399337111	WITHOUT_CLASSIFICATION	1.600662889073341E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999945325322714	WITHOUT_CLASSIFICATION	5.4674677285767155E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999951911312873	WITHOUT_CLASSIFICATION	4.808868712739055E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999997555021134	WITHOUT_CLASSIFICATION	2.444978866088126E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999993942611044	WITHOUT_CLASSIFICATION	6.057388956772936E-7	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999998555927899	WITHOUT_CLASSIFICATION	1.444072100633269E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999989804610814	WITHOUT_CLASSIFICATION	1.0195389186828005E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998487012722	WITHOUT_CLASSIFICATION	1.5129872768846136E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999991498187518	WITHOUT_CLASSIFICATION	8.501812480583558E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999755907485	WITHOUT_CLASSIFICATION	2.4409251453375263E-8	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999997900494982	WITHOUT_CLASSIFICATION	2.099505017491523E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999003935399	WITHOUT_CLASSIFICATION	9.96064601019694E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984740171968	WITHOUT_CLASSIFICATION	1.5259828032908928E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999931395266222	WITHOUT_CLASSIFICATION	6.8604733778816E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999995967210729	WITHOUT_CLASSIFICATION	4.032789271527653E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999998723513848	WITHOUT_CLASSIFICATION	1.276486152017946E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997876956102723	WITHOUT_CLASSIFICATION	2.123043897276837E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999998818730909	WITHOUT_CLASSIFICATION	1.1812690902931059E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999791372871	WITHOUT_CLASSIFICATION	2.086271289596344E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999997988420516	WITHOUT_CLASSIFICATION	2.0115794841578256E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999996978321565	WITHOUT_CLASSIFICATION	3.0216784349742843E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999850480168104	WITHOUT_CLASSIFICATION	1.4951983189422903E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999925697325815	WITHOUT_CLASSIFICATION	7.430267418432842E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999071865598971	WITHOUT_CLASSIFICATION	9.281344010289447E-5	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999996154387149	WITHOUT_CLASSIFICATION	3.845612850961407E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999850480168104	WITHOUT_CLASSIFICATION	1.4951983189422903E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996252627507	WITHOUT_CLASSIFICATION	3.747372492330864E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999936545932014	WITHOUT_CLASSIFICATION	6.345406798552748E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999995282313004	WITHOUT_CLASSIFICATION	4.717686995829212E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999054929320705	WITHOUT_CLASSIFICATION	9.450706792941691E-5	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999956519319297	WITHOUT_CLASSIFICATION	4.348068070250077E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999071865598971	WITHOUT_CLASSIFICATION	9.281344010289447E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999054929320705	WITHOUT_CLASSIFICATION	9.450706792941691E-5	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999954224616837	WITHOUT_CLASSIFICATION	4.577538316274601E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999990832212309	WITHOUT_CLASSIFICATION	9.16778769029851E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999999271237996	WITHOUT_CLASSIFICATION	7.287620039818575E-8	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999999353081729	WITHOUT_CLASSIFICATION	6.46918271286036E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999991396069963	WITHOUT_CLASSIFICATION	8.603930037267289E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.999915025068843	WITHOUT_CLASSIFICATION	8.497493115707318E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999967504482603	WITHOUT_CLASSIFICATION	3.2495517396636327E-6	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999991012267371	WITHOUT_CLASSIFICATION	8.987732629517902E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999881011657441	WITHOUT_CLASSIFICATION	1.1898834255798136E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999938390380462	WITHOUT_CLASSIFICATION	6.160961953857495E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999936844923281	WITHOUT_CLASSIFICATION	6.315507671921985E-6	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9998106380625739	WITHOUT_CLASSIFICATION	1.8936193742617169E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999993063866848	WITHOUT_CLASSIFICATION	6.936133152952758E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.999998780389492	WITHOUT_CLASSIFICATION	1.2196105079988213E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999987808764763	WITHOUT_CLASSIFICATION	1.2191235237075448E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999998154741544	WITHOUT_CLASSIFICATION	1.8452584570990447E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999977946194991	WITHOUT_CLASSIFICATION	2.205380500864676E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999966907621546	WITHOUT_CLASSIFICATION	3.3092378454207907E-6	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.999999895649814	WITHOUT_CLASSIFICATION	1.0435018607230033E-7	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999980545485371	WITHOUT_CLASSIFICATION	1.945451462910629E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999956323878805	WITHOUT_CLASSIFICATION	4.3676121194816415E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999999955955184	WITHOUT_CLASSIFICATION	4.404481503684132E-9	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999348147672	WITHOUT_CLASSIFICATION	6.518523269306543E-8	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999988734458732	WITHOUT_CLASSIFICATION	1.126554126744634E-6	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999861720316984	WITHOUT_CLASSIFICATION	1.3827968301516473E-5	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9959669146843764	WITHOUT_CLASSIFICATION	0.0040330853156236935	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999975819477097	WITHOUT_CLASSIFICATION	2.4180522902098284E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999994652577004	WITHOUT_CLASSIFICATION	5.347422994849678E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999998295589797	WITHOUT_CLASSIFICATION	1.7044102031209742E-7	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999995473885595	WITHOUT_CLASSIFICATION	4.526114406493618E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999982194623112	WITHOUT_CLASSIFICATION	1.7805376888279955E-6	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999944674489175	WITHOUT_CLASSIFICATION	5.532551082435294E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999987247813541	WITHOUT_CLASSIFICATION	1.2752186459272549E-6	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999849684473	WITHOUT_CLASSIFICATION	1.5031552618653927E-8	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999994771786321	WITHOUT_CLASSIFICATION	5.228213679696863E-7	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999983931386646	WITHOUT_CLASSIFICATION	1.6068613354244311E-6	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999962719087512	WITHOUT_CLASSIFICATION	3.7280912489543596E-6	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999964374739949	WITHOUT_CLASSIFICATION	3.5625260051833424E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999983825199454	WITHOUT_CLASSIFICATION	1.6174800545694489E-6	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999903017388796	WITHOUT_CLASSIFICATION	9.69826112042855E-6	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999983759720419	WITHOUT_CLASSIFICATION	1.6240279581981604E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999943810777823	WITHOUT_CLASSIFICATION	5.618922217729756E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999996647336282	WITHOUT_CLASSIFICATION	3.352663717421816E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999999044460101	WITHOUT_CLASSIFICATION	9.555398991164126E-8	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999969115918307	WITHOUT_CLASSIFICATION	3.0884081693533138E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999942653285153	WITHOUT_CLASSIFICATION	5.734671484711281E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999973703329225	WITHOUT_CLASSIFICATION	2.6296670775068136E-6	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999990673920369	WITHOUT_CLASSIFICATION	9.326079629679035E-7	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999997397474196	WITHOUT_CLASSIFICATION	2.6025258036403386E-7	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999688192455	WITHOUT_CLASSIFICATION	3.1180754572220705E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999855332219741	WITHOUT_CLASSIFICATION	1.4466778025848886E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9999309150262318	WITHOUT_CLASSIFICATION	6.908497376826233E-5	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999974947828124	WITHOUT_CLASSIFICATION	2.505217187574418E-6	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999872118819738	WITHOUT_CLASSIFICATION	1.278811802617807E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999912416785633	WITHOUT_CLASSIFICATION	8.75832143671997E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999809606268	WITHOUT_CLASSIFICATION	1.903937315271344E-8	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999992737481073	WITHOUT_CLASSIFICATION	7.262518927105008E-7	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999994189044427	WITHOUT_CLASSIFICATION	5.810955573548628E-7	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999643181247	WITHOUT_CLASSIFICATION	3.568187538343587E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998456638141	WITHOUT_CLASSIFICATION	1.5433618589322557E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999997496989909	WITHOUT_CLASSIFICATION	2.503010091271063E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999976349126217	WITHOUT_CLASSIFICATION	2.365087378325734E-6	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999826358203623	WITHOUT_CLASSIFICATION	1.7364179637707008E-5	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999970421727312	WITHOUT_CLASSIFICATION	2.957827268843461E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999997476109265	WITHOUT_CLASSIFICATION	2.5238907352148083E-7	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999982019116813	WITHOUT_CLASSIFICATION	1.7980883186624564E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999998589507343	WITHOUT_CLASSIFICATION	1.410492657068997E-7	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999951437608249	WITHOUT_CLASSIFICATION	4.856239175088808E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.999999957902996	WITHOUT_CLASSIFICATION	4.209700402888251E-8	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998605531571	WITHOUT_CLASSIFICATION	1.3944684284948172E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999976349126217	WITHOUT_CLASSIFICATION	2.365087378325734E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999982019116813	WITHOUT_CLASSIFICATION	1.7980883186624564E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999998589507343	WITHOUT_CLASSIFICATION	1.410492657068997E-7	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999981348704003	WITHOUT_CLASSIFICATION	1.865129599615912E-6	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999990611624233	WITHOUT_CLASSIFICATION	9.388375766424633E-7	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9997230337057794	WITHOUT_CLASSIFICATION	2.7696629422053944E-4	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999924868478799	WITHOUT_CLASSIFICATION	7.513152120052312E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999997491133595	WITHOUT_CLASSIFICATION	2.5088664049934014E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999844253421	WITHOUT_CLASSIFICATION	1.5574657938007097E-8	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999998621784966	WITHOUT_CLASSIFICATION	1.3782150335140684E-7	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999973207577882	WITHOUT_CLASSIFICATION	2.6792422117716208E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.999999924147316	WITHOUT_CLASSIFICATION	7.585268408991338E-8	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999887211903755	WITHOUT_CLASSIFICATION	1.12788096244768E-5	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999997218666752	WITHOUT_CLASSIFICATION	2.781333248067002E-7	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9998942794765848	WITHOUT_CLASSIFICATION	1.0572052341517727E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999999695608242	WITHOUT_CLASSIFICATION	3.0439175839734844E-8	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999998433161734	WITHOUT_CLASSIFICATION	1.566838265799571E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999996519711004	WITHOUT_CLASSIFICATION	3.480288995094125E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999999488530844	WITHOUT_CLASSIFICATION	5.11469156241031E-8	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999847954505192	WITHOUT_CLASSIFICATION	1.5204549480733919E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.999997428513473	WITHOUT_CLASSIFICATION	2.571486527013088E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999997804728539	WITHOUT_CLASSIFICATION	2.1952714608517353E-7	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999999473263893	WITHOUT_CLASSIFICATION	5.2673610656199826E-8	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999677971694	WITHOUT_CLASSIFICATION	3.220283055678789E-8	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999351853167	WITHOUT_CLASSIFICATION	6.481468320776711E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998456638141	WITHOUT_CLASSIFICATION	1.5433618589322557E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999997496989909	WITHOUT_CLASSIFICATION	2.503010091271063E-7	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999998833779565	WITHOUT_CLASSIFICATION	1.1662204345696587E-7	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999994217687878	WITHOUT_CLASSIFICATION	5.78231212205042E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999998088124001	WITHOUT_CLASSIFICATION	1.9118759973522288E-7	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999989337580671	WITHOUT_CLASSIFICATION	1.066241932885618E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999973544030004	WITHOUT_CLASSIFICATION	2.6455969995640815E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999993621569406	WITHOUT_CLASSIFICATION	6.378430593785696E-7	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9996748345944013	WITHOUT_CLASSIFICATION	3.251654055987465E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999999303460051	WITHOUT_CLASSIFICATION	6.965399490967642E-7	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999892096780381	WITHOUT_CLASSIFICATION	1.0790321961962089E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999892096780381	WITHOUT_CLASSIFICATION	1.0790321961962089E-5	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999228815414	WITHOUT_CLASSIFICATION	7.711845861795454E-8	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999750267393537	WITHOUT_CLASSIFICATION	2.4973260646339808E-5	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999767990911	WITHOUT_CLASSIFICATION	2.320090884002909E-8	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999976503389089	WITHOUT_CLASSIFICATION	2.349661091157188E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999997386385882	WITHOUT_CLASSIFICATION	2.613614118033753E-7	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.999999786977447	WITHOUT_CLASSIFICATION	2.130225531119447E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.999999695581261	WITHOUT_CLASSIFICATION	3.0441873895196603E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.999999695581261	WITHOUT_CLASSIFICATION	3.0441873895196603E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999997473676814	WITHOUT_CLASSIFICATION	2.526323186846178E-7	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.999996081161304	WITHOUT_CLASSIFICATION	3.918838696070379E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999996716693756	WITHOUT_CLASSIFICATION	3.2833062442269106E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999976899488414	WITHOUT_CLASSIFICATION	2.310051158516446E-6	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999994392252776	WITHOUT_CLASSIFICATION	5.607747224892635E-7	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999980254307549	WITHOUT_CLASSIFICATION	1.9745692451776506E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999378649019	WITHOUT_CLASSIFICATION	6.213509814509793E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999998326677221	WITHOUT_CLASSIFICATION	1.6733227796780987E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999998135214812	WITHOUT_CLASSIFICATION	1.8647851879208117E-7	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999999698964827	WITHOUT_CLASSIFICATION	3.010351746529789E-8	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999957733621899	WITHOUT_CLASSIFICATION	4.226637810103713E-6	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999978655884	WITHOUT_CLASSIFICATION	2.134411684292372E-9	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9992863285849981	WITHOUT_CLASSIFICATION	7.136714150018893E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999994260861408	WITHOUT_CLASSIFICATION	5.739138591996323E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999999546610864	WITHOUT_CLASSIFICATION	4.5338913594930836E-7	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999960593863465	WITHOUT_CLASSIFICATION	3.940613653544978E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999994606514655	WITHOUT_CLASSIFICATION	5.39348534629085E-7	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999999433372747	WITHOUT_CLASSIFICATION	5.6662725415508814E-8	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999998960731488	WITHOUT_CLASSIFICATION	1.0392685134926814E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999996602725769	WITHOUT_CLASSIFICATION	3.397274230524924E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999997391472842	WITHOUT_CLASSIFICATION	2.608527157349493E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999997251389727	WITHOUT_CLASSIFICATION	2.7486102721782266E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999935245389	WITHOUT_CLASSIFICATION	6.475461117964079E-9	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999889539734019	WITHOUT_CLASSIFICATION	1.1046026598020767E-5	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999994925250235	WITHOUT_CLASSIFICATION	5.074749764759785E-7	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999978336289688	WITHOUT_CLASSIFICATION	2.166371031287225E-6	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999999089553453	WITHOUT_CLASSIFICATION	9.104465470992704E-8	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999928878515827	WITHOUT_CLASSIFICATION	7.1121484173420775E-6	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999993765879891	WITHOUT_CLASSIFICATION	6.234120109303656E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999995238900748	WITHOUT_CLASSIFICATION	4.761099252253858E-7	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999999640438954	WITHOUT_CLASSIFICATION	3.595610468810904E-8	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999961144814391	WITHOUT_CLASSIFICATION	3.885518560908933E-6	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999900455294821	WITHOUT_CLASSIFICATION	9.954470517869056E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999941367018935	WITHOUT_CLASSIFICATION	5.863298106490892E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9999854664188801	WITHOUT_CLASSIFICATION	1.4533581119944818E-5	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999824696555948	WITHOUT_CLASSIFICATION	1.7530344405152902E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999989310053631	WITHOUT_CLASSIFICATION	1.0689946368640836E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999981612579538	WITHOUT_CLASSIFICATION	1.8387420461585312E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999999269522746	WITHOUT_CLASSIFICATION	7.304772540761004E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999996151195789	WITHOUT_CLASSIFICATION	3.84880421097286E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999998478313437	WITHOUT_CLASSIFICATION	1.52168656405852E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.99999992824176	WITHOUT_CLASSIFICATION	7.175823994945847E-8	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999989200300121	WITHOUT_CLASSIFICATION	1.0799699879309636E-6	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.999999920628268	WITHOUT_CLASSIFICATION	7.937173202804502E-8	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9984437598156095	WITHOUT_CLASSIFICATION	0.0015562401843905403	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999998478313437	WITHOUT_CLASSIFICATION	1.52168656405852E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999989200300121	WITHOUT_CLASSIFICATION	1.0799699879309636E-6	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9996566527715639	WITHOUT_CLASSIFICATION	3.433472284360069E-4	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999987554986823	WITHOUT_CLASSIFICATION	1.2445013176145367E-6	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999963231100929	WITHOUT_CLASSIFICATION	3.6768899071942406E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999994298776139	WITHOUT_CLASSIFICATION	5.70122386085849E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999996151195789	WITHOUT_CLASSIFICATION	3.84880421097286E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999996151195789	WITHOUT_CLASSIFICATION	3.84880421097286E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999998478313437	WITHOUT_CLASSIFICATION	1.52168656405852E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999996691676631	WITHOUT_CLASSIFICATION	3.308323369183368E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999998262062306	WITHOUT_CLASSIFICATION	1.7379376931887245E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999994008860287	WITHOUT_CLASSIFICATION	5.991139713577315E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999994008860287	WITHOUT_CLASSIFICATION	5.991139713577315E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998645344658	WITHOUT_CLASSIFICATION	1.354655343147008E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999996089998093	WITHOUT_CLASSIFICATION	3.9100019070784685E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999979342588867	WITHOUT_CLASSIFICATION	2.0657411132215117E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999979342588867	WITHOUT_CLASSIFICATION	2.0657411132215117E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999999835707641	WITHOUT_CLASSIFICATION	1.6429235907564944E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999996089998093	WITHOUT_CLASSIFICATION	3.9100019070784685E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999979342588867	WITHOUT_CLASSIFICATION	2.0657411132215117E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999999835707641	WITHOUT_CLASSIFICATION	1.6429235907564944E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999999216899759	WITHOUT_CLASSIFICATION	7.831002414748252E-8	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999991249165001	WITHOUT_CLASSIFICATION	8.750834999592566E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999997557339854	WITHOUT_CLASSIFICATION	2.442660145688287E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.999999383391016	WITHOUT_CLASSIFICATION	6.166089840090092E-7	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999962361383429	WITHOUT_CLASSIFICATION	3.763861657099742E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999996782629131	WITHOUT_CLASSIFICATION	3.217370868704464E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999998733897164	WITHOUT_CLASSIFICATION	1.2661028365493703E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999971973934283	WITHOUT_CLASSIFICATION	2.802606571702825E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999980692456895	WITHOUT_CLASSIFICATION	1.9307543104824923E-6	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999900990466054	WITHOUT_CLASSIFICATION	9.900953394668378E-6	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999992353826312	WITHOUT_CLASSIFICATION	7.646173687902304E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999986337912623	WITHOUT_CLASSIFICATION	1.3662087377455414E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999749261389	WITHOUT_CLASSIFICATION	2.5073861064379175E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.999999972938072	WITHOUT_CLASSIFICATION	2.706192802090124E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999994282087314	WITHOUT_CLASSIFICATION	5.71791268624345E-7	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999998165956026	WITHOUT_CLASSIFICATION	1.8340439738945935E-7	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999999448732411	WITHOUT_CLASSIFICATION	5.512675906995238E-8	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999998046509958	WITHOUT_CLASSIFICATION	1.9534900427519756E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999999476447402	WITHOUT_CLASSIFICATION	5.23552597382695E-8	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999986419015595	WITHOUT_CLASSIFICATION	1.3580984404720263E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999995754888	WITHOUT_CLASSIFICATION	4.245112177900903E-10	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999996866742197	WITHOUT_CLASSIFICATION	3.133257803212089E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999756277425	WITHOUT_CLASSIFICATION	2.437225757741476E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999658280542	WITHOUT_CLASSIFICATION	3.417194577586017E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999996305902203	WITHOUT_CLASSIFICATION	3.6940977962782264E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999208987924	WITHOUT_CLASSIFICATION	7.910120757278349E-8	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999037624081	WITHOUT_CLASSIFICATION	9.623759180342302E-8	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999989403663031	WITHOUT_CLASSIFICATION	1.0596336968226643E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999408955557	WITHOUT_CLASSIFICATION	5.9104444463396764E-8	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999998753562912	WITHOUT_CLASSIFICATION	1.2464370873829844E-7	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.999997262692238	WITHOUT_CLASSIFICATION	2.7373077619247433E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999988307559062	WITHOUT_CLASSIFICATION	1.169244093718337E-6	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999458154402888	WITHOUT_CLASSIFICATION	5.418455971118168E-5	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999968264949615	WITHOUT_CLASSIFICATION	3.1735050384768906E-6	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999959028127022	WITHOUT_CLASSIFICATION	4.09718729780338E-6	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999994865909122	WITHOUT_CLASSIFICATION	5.134090879038259E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999993726099806	WITHOUT_CLASSIFICATION	6.273900193566226E-7	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999918296814855	WITHOUT_CLASSIFICATION	8.170318514570807E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999945698512452	WITHOUT_CLASSIFICATION	5.430148754695326E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999945698512452	WITHOUT_CLASSIFICATION	5.430148754695326E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999945698512452	WITHOUT_CLASSIFICATION	5.430148754695326E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999987801896957	WITHOUT_CLASSIFICATION	1.2198103043283276E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.999999317621636	WITHOUT_CLASSIFICATION	6.823783640338704E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999889051842189	WITHOUT_CLASSIFICATION	1.1094815781118614E-5	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999981438984715	WITHOUT_CLASSIFICATION	1.8561015284383475E-6	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999998999603452	WITHOUT_CLASSIFICATION	1.0003965471092121E-7	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999596334528447	WITHOUT_CLASSIFICATION	4.036654715530679E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999948489992	WITHOUT_CLASSIFICATION	5.151000884063289E-9	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999999118094143	WITHOUT_CLASSIFICATION	8.819058573402001E-8	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999999076983258	WITHOUT_CLASSIFICATION	9.230167424393688E-8	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999996872121957	WITHOUT_CLASSIFICATION	3.127878043939144E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999995097766137	WITHOUT_CLASSIFICATION	4.902233863653041E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999924731627883	WITHOUT_CLASSIFICATION	7.526837211822867E-6	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999999698146494	WITHOUT_CLASSIFICATION	3.0185350540145685E-8	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999901593066849	WITHOUT_CLASSIFICATION	9.840693315062553E-6	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999611512318913	WITHOUT_CLASSIFICATION	3.884876810876411E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999487447989	WITHOUT_CLASSIFICATION	5.125520123327114E-8	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9998690748226987	WITHOUT_CLASSIFICATION	1.3092517730121483E-4	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999998004713128	WITHOUT_CLASSIFICATION	1.9952868726413393E-7	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999995158555173	WITHOUT_CLASSIFICATION	4.841444828276421E-7	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999961367956877	WITHOUT_CLASSIFICATION	3.863204312344843E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.999903670674347	WITHOUT_CLASSIFICATION	9.63293256529774E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999986905202861	WITHOUT_CLASSIFICATION	1.3094797139617777E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9998918315936492	WITHOUT_CLASSIFICATION	1.0816840635081543E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999873300403079	WITHOUT_CLASSIFICATION	1.2669959692186377E-5	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999999837376199	WITHOUT_CLASSIFICATION	1.6262380117341432E-8	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999014327775824	WITHOUT_CLASSIFICATION	9.856722241766018E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999994377142861	WITHOUT_CLASSIFICATION	5.622857138423534E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999997374290089	WITHOUT_CLASSIFICATION	2.625709911522329E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999996483823065	WITHOUT_CLASSIFICATION	3.516176935741077E-7	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999981741578035	WITHOUT_CLASSIFICATION	1.8258421965360176E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999920512287706	WITHOUT_CLASSIFICATION	7.948771229504038E-6	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999996962633916	WITHOUT_CLASSIFICATION	3.037366084296381E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9999945459868904	WITHOUT_CLASSIFICATION	5.4540131096460335E-6	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999989118525299	WITHOUT_CLASSIFICATION	1.0881474701129197E-6	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999873431464026	WITHOUT_CLASSIFICATION	1.2656853597445193E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999702761707	WITHOUT_CLASSIFICATION	2.972382928837198E-8	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.999955758287489	WITHOUT_CLASSIFICATION	4.4241712511060236E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.999986523853255	WITHOUT_CLASSIFICATION	1.3476146744903417E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999991096871297	WITHOUT_CLASSIFICATION	8.903128702961516E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.999996374776498	WITHOUT_CLASSIFICATION	3.6252235018929566E-6	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999893675653138	WITHOUT_CLASSIFICATION	1.063243468627781E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999501623747543	WITHOUT_CLASSIFICATION	4.983762524573271E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999993621569406	WITHOUT_CLASSIFICATION	6.378430593785696E-7	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999984275162043	WITHOUT_CLASSIFICATION	1.5724837957012884E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999869337379884	WITHOUT_CLASSIFICATION	1.3066262011644441E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999630379056671	WITHOUT_CLASSIFICATION	3.696209433285059E-5	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9998634501396226	WITHOUT_CLASSIFICATION	1.365498603774658E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.999862288438975	WITHOUT_CLASSIFICATION	1.3771156102498604E-4	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9999957976546802	WITHOUT_CLASSIFICATION	4.202345319920476E-6	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999999309499177	WITHOUT_CLASSIFICATION	6.90500823730868E-8	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999263899205	WITHOUT_CLASSIFICATION	7.361007945310302E-8	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999704804102575	WITHOUT_CLASSIFICATION	2.9519589742574484E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999998941036594	WITHOUT_CLASSIFICATION	1.0589634064098877E-7	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999862766955396	WITHOUT_CLASSIFICATION	1.372330446038474E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999995368896409	WITHOUT_CLASSIFICATION	4.6311035913263975E-7	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999993227127527	WITHOUT_CLASSIFICATION	6.772872472640302E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999980007320234	WITHOUT_CLASSIFICATION	1.9992679766066475E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999999725468971	WITHOUT_CLASSIFICATION	2.7453102909508285E-8	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999996741835863	WITHOUT_CLASSIFICATION	3.2581641384221666E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999998773268713	WITHOUT_CLASSIFICATION	1.2267312869857525E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999994306688306	WITHOUT_CLASSIFICATION	5.693311693548383E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999863037866626	WITHOUT_CLASSIFICATION	1.3696213337448582E-5	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999978227639227	WITHOUT_CLASSIFICATION	2.177236077260848E-6	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999998816396086	WITHOUT_CLASSIFICATION	1.1836039130998752E-7	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999979710826219	WITHOUT_CLASSIFICATION	2.028917378068522E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999997029155855	WITHOUT_CLASSIFICATION	2.9708441455198525E-7	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999985111754416	WITHOUT_CLASSIFICATION	1.4888245583486705E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999992395418041	WITHOUT_CLASSIFICATION	7.604581957783857E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999992395418041	WITHOUT_CLASSIFICATION	7.604581957783857E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999984040559864	WITHOUT_CLASSIFICATION	1.595944013643365E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999984040559864	WITHOUT_CLASSIFICATION	1.595944013643365E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999997029155855	WITHOUT_CLASSIFICATION	2.9708441455198525E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999984040559864	WITHOUT_CLASSIFICATION	1.595944013643365E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999990892167325	WITHOUT_CLASSIFICATION	9.107832675917636E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999994121605454	WITHOUT_CLASSIFICATION	5.878394545974011E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999994121605454	WITHOUT_CLASSIFICATION	5.878394545974011E-7	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999986297176566	WITHOUT_CLASSIFICATION	1.370282343372789E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999998552635008	WITHOUT_CLASSIFICATION	1.447364993148616E-7	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999996637002091	WITHOUT_CLASSIFICATION	3.3629979093151304E-7	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999672752903219	WITHOUT_CLASSIFICATION	3.2724709678059605E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999996605495652	WITHOUT_CLASSIFICATION	3.394504347857209E-7	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999999644430758	WITHOUT_CLASSIFICATION	3.555692422237194E-8	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999995080919847	WITHOUT_CLASSIFICATION	4.919080153250634E-7	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999428385833489	WITHOUT_CLASSIFICATION	5.716141665115861E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999356172178233	WITHOUT_CLASSIFICATION	6.438278217662265E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999973424069672	WITHOUT_CLASSIFICATION	2.657593032759393E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999998925167696	WITHOUT_CLASSIFICATION	1.0748323038639172E-7	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999994127370464	WITHOUT_CLASSIFICATION	5.872629536799096E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999998518379875	WITHOUT_CLASSIFICATION	1.4816201250842861E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999788531624	WITHOUT_CLASSIFICATION	2.1146837577693227E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999994660719352	WITHOUT_CLASSIFICATION	5.339280646438342E-7	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999798249296	WITHOUT_CLASSIFICATION	2.01750703211235E-8	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999999176061038	WITHOUT_CLASSIFICATION	8.239389615741678E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9997989302469792	WITHOUT_CLASSIFICATION	2.0106975302085437E-4	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999634726429337	WITHOUT_CLASSIFICATION	3.6527357066250026E-5	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999999531607846	WITHOUT_CLASSIFICATION	4.683921541891759E-8	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999663442023	WITHOUT_CLASSIFICATION	3.365579765386575E-8	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999398731977394	WITHOUT_CLASSIFICATION	6.0126802260650334E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999996728316659	WITHOUT_CLASSIFICATION	3.2716833402983417E-7	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999995161541692	WITHOUT_CLASSIFICATION	4.838458308341354E-7	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999995161541692	WITHOUT_CLASSIFICATION	4.838458308341354E-7	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999957636831286	WITHOUT_CLASSIFICATION	4.236316871367154E-6	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999999343565757	WITHOUT_CLASSIFICATION	6.564342420856511E-8	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999864584211466	WITHOUT_CLASSIFICATION	1.3541578853347599E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999994223813201	WITHOUT_CLASSIFICATION	5.776186799099738E-7	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999955836581941	WITHOUT_CLASSIFICATION	4.416341805929173E-6	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999992866857874	WITHOUT_CLASSIFICATION	7.133142126012353E-7	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999976806390112	WITHOUT_CLASSIFICATION	2.319360988832976E-6	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999937016056005	WITHOUT_CLASSIFICATION	6.298394399483444E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999721597851959	WITHOUT_CLASSIFICATION	2.7840214804046723E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998678406656247	WITHOUT_CLASSIFICATION	1.321593343752581E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999999199622679	WITHOUT_CLASSIFICATION	8.003773205584397E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999770036208032	WITHOUT_CLASSIFICATION	2.2996379196750922E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999926623746789	WITHOUT_CLASSIFICATION	7.337625321182014E-6	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999520057816061	WITHOUT_CLASSIFICATION	4.7994218393884576E-5	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999996404688766	WITHOUT_CLASSIFICATION	3.595311233567338E-7	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999995339123171	WITHOUT_CLASSIFICATION	4.6608768286267873E-7	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.999968757809154	WITHOUT_CLASSIFICATION	3.124219084601121E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999997982531029	WITHOUT_CLASSIFICATION	2.0174689712345064E-7	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999984378661382	WITHOUT_CLASSIFICATION	1.562133861808368E-6	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9998685815410485	WITHOUT_CLASSIFICATION	1.3141845895153287E-4	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999987425269822	WITHOUT_CLASSIFICATION	1.257473017735829E-6	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999911933180867	WITHOUT_CLASSIFICATION	8.806681913380338E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999997585878255	WITHOUT_CLASSIFICATION	2.4141217443886454E-7	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999994077226314	WITHOUT_CLASSIFICATION	5.922773685735983E-7	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999977318720145	WITHOUT_CLASSIFICATION	2.2681279855447643E-6	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999999054517265	WITHOUT_CLASSIFICATION	9.454827351039399E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999997342671824	WITHOUT_CLASSIFICATION	2.6573281763275737E-7	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999992266748954	WITHOUT_CLASSIFICATION	7.733251046074139E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999660582178	WITHOUT_CLASSIFICATION	3.394178218737751E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999996015155508	WITHOUT_CLASSIFICATION	3.9848444922696703E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999981416894224	WITHOUT_CLASSIFICATION	1.8583105775987788E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999252940107	WITHOUT_CLASSIFICATION	7.470598932476794E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.999998648818633	WITHOUT_CLASSIFICATION	1.3511813670375625E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999789893247382	WITHOUT_CLASSIFICATION	2.101067526179218E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9999015717925347	WITHOUT_CLASSIFICATION	9.842820746534377E-5	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999985938359534	WITHOUT_CLASSIFICATION	1.406164046580181E-6	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999989757774435	WITHOUT_CLASSIFICATION	1.0242225565218019E-6	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999990260511562	WITHOUT_CLASSIFICATION	9.739488438953582E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999875914054748	WITHOUT_CLASSIFICATION	1.240859452515045E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9999967020709586	WITHOUT_CLASSIFICATION	3.297929041475146E-6	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999998050435494	WITHOUT_CLASSIFICATION	1.9495645067573452E-7	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999995691426995	WITHOUT_CLASSIFICATION	4.3085730051509565E-7	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999996026810831	WITHOUT_CLASSIFICATION	3.9731891687782656E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999999319517154	WITHOUT_CLASSIFICATION	6.804828458783582E-8	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999994939184825	WITHOUT_CLASSIFICATION	5.060815174370045E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999721597851959	WITHOUT_CLASSIFICATION	2.7840214804046723E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998678406656247	WITHOUT_CLASSIFICATION	1.321593343752581E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999999199622679	WITHOUT_CLASSIFICATION	8.003773205584397E-8	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999956987833628	WITHOUT_CLASSIFICATION	4.301216637153316E-6	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999995835067239	WITHOUT_CLASSIFICATION	4.1649327609268766E-7	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999987751201914	WITHOUT_CLASSIFICATION	1.2248798086220938E-6	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999999491068366	WITHOUT_CLASSIFICATION	5.089316329512239E-8	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999988298411097	WITHOUT_CLASSIFICATION	1.1701588902840948E-6	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999996540097927	WITHOUT_CLASSIFICATION	3.459902072809284E-7	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999948257980725	WITHOUT_CLASSIFICATION	5.1742019275615806E-6	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9998715595073967	WITHOUT_CLASSIFICATION	1.2844049260324445E-4	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999215653111	WITHOUT_CLASSIFICATION	7.843468889180334E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999894168197107	WITHOUT_CLASSIFICATION	1.0583180289300408E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999990641346672	WITHOUT_CLASSIFICATION	9.358653329432861E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999990641346672	WITHOUT_CLASSIFICATION	9.358653329432861E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999998795354743	WITHOUT_CLASSIFICATION	1.2046452569875114E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999034873015888	WITHOUT_CLASSIFICATION	9.651269841109981E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999998030822114	WITHOUT_CLASSIFICATION	1.9691778862085902E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999992478960205	WITHOUT_CLASSIFICATION	7.521039795389698E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999997628143268	WITHOUT_CLASSIFICATION	2.3718567319706044E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999912806483	WITHOUT_CLASSIFICATION	8.719351659076576E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999984559798	WITHOUT_CLASSIFICATION	1.5440201953344505E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999991210094272	WITHOUT_CLASSIFICATION	8.789905727953776E-7	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999997406679191	WITHOUT_CLASSIFICATION	2.593320809318967E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999998898574228	WITHOUT_CLASSIFICATION	1.1014257717944389E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999277750843	WITHOUT_CLASSIFICATION	7.222491571887669E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999998425398228	WITHOUT_CLASSIFICATION	1.5746017720000172E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999902880059	WITHOUT_CLASSIFICATION	9.711994099142008E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999979950165357	WITHOUT_CLASSIFICATION	2.0049834642959737E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913381136912	WITHOUT_CLASSIFICATION	8.661886308857165E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999882215701427	WITHOUT_CLASSIFICATION	1.1778429857346381E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999999618806968	WITHOUT_CLASSIFICATION	3.811930320722667E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999999030048412	WITHOUT_CLASSIFICATION	9.699515881347972E-8	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999970481909	WITHOUT_CLASSIFICATION	2.95180925956041E-9	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999995994285116	WITHOUT_CLASSIFICATION	4.0057148835666645E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999997869373124	WITHOUT_CLASSIFICATION	2.1306268748710325E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986366206218	WITHOUT_CLASSIFICATION	1.3633793780861893E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999994565472597	WITHOUT_CLASSIFICATION	5.434527403710941E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999978460147293	WITHOUT_CLASSIFICATION	2.15398527062245E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998399337111	WITHOUT_CLASSIFICATION	1.600662889073341E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999945325322714	WITHOUT_CLASSIFICATION	5.4674677285767155E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999951911312873	WITHOUT_CLASSIFICATION	4.808868712739055E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999997555021134	WITHOUT_CLASSIFICATION	2.444978866088126E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999993942611044	WITHOUT_CLASSIFICATION	6.057388956772936E-7	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999998555927899	WITHOUT_CLASSIFICATION	1.444072100633269E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999989804610814	WITHOUT_CLASSIFICATION	1.0195389186828005E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999755907485	WITHOUT_CLASSIFICATION	2.4409251453375263E-8	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999997900494982	WITHOUT_CLASSIFICATION	2.099505017491523E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999003935399	WITHOUT_CLASSIFICATION	9.96064601019694E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984740171968	WITHOUT_CLASSIFICATION	1.5259828032908928E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999931395266222	WITHOUT_CLASSIFICATION	6.8604733778816E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999995967210729	WITHOUT_CLASSIFICATION	4.032789271527653E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999998723513848	WITHOUT_CLASSIFICATION	1.276486152017946E-6	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999998818730909	WITHOUT_CLASSIFICATION	1.1812690902931059E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999996978321565	WITHOUT_CLASSIFICATION	3.0216784349742843E-7	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999925697325815	WITHOUT_CLASSIFICATION	7.430267418432842E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999071865598971	WITHOUT_CLASSIFICATION	9.281344010289447E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999997988420516	WITHOUT_CLASSIFICATION	2.0115794841578256E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999936545932014	WITHOUT_CLASSIFICATION	6.345406798552748E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996252627507	WITHOUT_CLASSIFICATION	3.747372492330864E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999054929320705	WITHOUT_CLASSIFICATION	9.450706792941691E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999998795354743	WITHOUT_CLASSIFICATION	1.2046452569875114E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999034873015888	WITHOUT_CLASSIFICATION	9.651269841109981E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999998030822114	WITHOUT_CLASSIFICATION	1.9691778862085902E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999992478960205	WITHOUT_CLASSIFICATION	7.521039795389698E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999984559798	WITHOUT_CLASSIFICATION	1.5440201953344505E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999991210094272	WITHOUT_CLASSIFICATION	8.789905727953776E-7	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9842807426993118	WITHOUT_CLASSIFICATION	0.015719257300688357	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999999271237996	WITHOUT_CLASSIFICATION	7.287620039818575E-8	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999999353081729	WITHOUT_CLASSIFICATION	6.46918271286036E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999277750843	WITHOUT_CLASSIFICATION	7.222491571887669E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999998425398228	WITHOUT_CLASSIFICATION	1.5746017720000172E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999902880059	WITHOUT_CLASSIFICATION	9.711994099142008E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999979950165357	WITHOUT_CLASSIFICATION	2.0049834642959737E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999882215701427	WITHOUT_CLASSIFICATION	1.1778429857346381E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999994785226604	WITHOUT_CLASSIFICATION	5.21477339597224E-7	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999993752082103	WITHOUT_CLASSIFICATION	6.247917898560793E-7	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.999999490565577	WITHOUT_CLASSIFICATION	5.094344229677137E-7	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999990525214252	WITHOUT_CLASSIFICATION	9.474785748583556E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999996973539208	WITHOUT_CLASSIFICATION	3.02646079172837E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999999916379383	WITHOUT_CLASSIFICATION	8.36206169344922E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999994614208104	WITHOUT_CLASSIFICATION	5.38579189648064E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999996086959365	WITHOUT_CLASSIFICATION	3.913040635252942E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999998070740525	WITHOUT_CLASSIFICATION	1.9292594749243845E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999997665114755	WITHOUT_CLASSIFICATION	2.334885245578798E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999998070740525	WITHOUT_CLASSIFICATION	1.9292594749243845E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9977398818263004	WITHOUT_CLASSIFICATION	0.002260118173699639	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999996486369105	WITHOUT_CLASSIFICATION	3.513630894952028E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999505755239313	WITHOUT_CLASSIFICATION	4.942447606859692E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999505755239313	WITHOUT_CLASSIFICATION	4.942447606859692E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999993319727458	WITHOUT_CLASSIFICATION	6.680272540830744E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999993499740681	WITHOUT_CLASSIFICATION	6.500259317711028E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999999963200974	WITHOUT_CLASSIFICATION	3.679902621609312E-9	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999999113346161	WITHOUT_CLASSIFICATION	8.866538395043531E-8	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999889307668018	WITHOUT_CLASSIFICATION	1.106923319813324E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.999999796067881	WITHOUT_CLASSIFICATION	2.0393211889950328E-7	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999842838342632	WITHOUT_CLASSIFICATION	1.5716165736862216E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.999990593400722	WITHOUT_CLASSIFICATION	9.40659927797193E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999984535936098	WITHOUT_CLASSIFICATION	1.5464063901660587E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999955565596381	WITHOUT_CLASSIFICATION	4.443440361939035E-6	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999999563323635	WITHOUT_CLASSIFICATION	4.366763657959712E-8	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999809423021645	WITHOUT_CLASSIFICATION	1.9057697835458497E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999987080842252	WITHOUT_CLASSIFICATION	1.2919157748534754E-6	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999987080842252	WITHOUT_CLASSIFICATION	1.2919157748534754E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999479452754	WITHOUT_CLASSIFICATION	5.2054724569934394E-8	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999876321659172	WITHOUT_CLASSIFICATION	1.2367834082700951E-5	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999959069976213	WITHOUT_CLASSIFICATION	4.093002378711704E-6	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999488913112566	WITHOUT_CLASSIFICATION	5.110868874341447E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999780532468795	WITHOUT_CLASSIFICATION	2.194675312048401E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999613521442601	WITHOUT_CLASSIFICATION	3.864785573989696E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999861809236357	WITHOUT_CLASSIFICATION	1.3819076364277495E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999911478971749	WITHOUT_CLASSIFICATION	8.852102825170212E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999319326126	WITHOUT_CLASSIFICATION	6.806738730212416E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999989010811036	WITHOUT_CLASSIFICATION	1.09891889641338E-6	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999965264599051	WITHOUT_CLASSIFICATION	3.4735400948368845E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999960424089644	WITHOUT_CLASSIFICATION	3.957591035542877E-6	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999804815561265	WITHOUT_CLASSIFICATION	1.951844387345251E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999994516155658	WITHOUT_CLASSIFICATION	5.483844342840211E-7	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999994223813201	WITHOUT_CLASSIFICATION	5.776186799099738E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999927016936283	WITHOUT_CLASSIFICATION	7.298306371730248E-6	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999853032783765	WITHOUT_CLASSIFICATION	1.4696721623608331E-5	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.999996320775704	WITHOUT_CLASSIFICATION	3.6792242959409143E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995395367228	WITHOUT_CLASSIFICATION	4.604632770787499E-7	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999972655576599	WITHOUT_CLASSIFICATION	2.7344423401618594E-6	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999343526146401	WITHOUT_CLASSIFICATION	6.56473853598326E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.999954544313784	WITHOUT_CLASSIFICATION	4.545568621589608E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999975123290055	WITHOUT_CLASSIFICATION	2.487670994600826E-6	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999963096930348	WITHOUT_CLASSIFICATION	3.6903069651042183E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999981308921633	WITHOUT_CLASSIFICATION	1.8691078367912066E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999911970634122	WITHOUT_CLASSIFICATION	8.802936587765429E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999911970634122	WITHOUT_CLASSIFICATION	8.802936587765429E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999777541576369	WITHOUT_CLASSIFICATION	2.2245842363183226E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999995855508339	WITHOUT_CLASSIFICATION	4.144491660642969E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999973842112648	WITHOUT_CLASSIFICATION	2.6157887352353E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998842708409845	WITHOUT_CLASSIFICATION	1.1572915901551918E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999721801212201	WITHOUT_CLASSIFICATION	2.781987877989474E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529057903868	WITHOUT_CLASSIFICATION	4.709420961326263E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.999998378147074	WITHOUT_CLASSIFICATION	1.6218529259388804E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999987927771399	WITHOUT_CLASSIFICATION	1.2072228602325717E-6	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999999646456211	WITHOUT_CLASSIFICATION	3.535437883434605E-8	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999896788018368	WITHOUT_CLASSIFICATION	1.0321198163319507E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999998839919274	WITHOUT_CLASSIFICATION	1.1600807252500886E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999985297898836	WITHOUT_CLASSIFICATION	1.470210116369598E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999999734926248	WITHOUT_CLASSIFICATION	2.6507375116536458E-8	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999997720540661	WITHOUT_CLASSIFICATION	2.2794593392363264E-7	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999811241949	WITHOUT_CLASSIFICATION	1.8875805156406328E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.999997407216566	WITHOUT_CLASSIFICATION	2.592783433879297E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999990442394	WITHOUT_CLASSIFICATION	9.557605723909954E-10	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9996508925176912	WITHOUT_CLASSIFICATION	3.491074823087594E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9999658242422946	WITHOUT_CLASSIFICATION	3.41757577054745E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999995844812173	WITHOUT_CLASSIFICATION	4.1551878276321785E-7	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999966724480323	WITHOUT_CLASSIFICATION	3.3275519677965854E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999260467177	WITHOUT_CLASSIFICATION	7.395328228013128E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999945325322714	WITHOUT_CLASSIFICATION	5.4674677285767155E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998487012722	WITHOUT_CLASSIFICATION	1.5129872768846136E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999071865598971	WITHOUT_CLASSIFICATION	9.281344010289447E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999999916379383	WITHOUT_CLASSIFICATION	8.36206169344922E-8	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999527683075952	WITHOUT_CLASSIFICATION	4.723169240488846E-5	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999998503054698	WITHOUT_CLASSIFICATION	1.4969453024596027E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986366206218	WITHOUT_CLASSIFICATION	1.3633793780861893E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999997120652053	WITHOUT_CLASSIFICATION	2.8793479464515327E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999997338412389	WITHOUT_CLASSIFICATION	2.661587611578099E-7	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999998473879853	WITHOUT_CLASSIFICATION	1.5261201468333982E-7	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.999993958897629	WITHOUT_CLASSIFICATION	6.041102371019422E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999071865598971	WITHOUT_CLASSIFICATION	9.281344010289447E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999905886267767	WITHOUT_CLASSIFICATION	9.411373223312985E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999868886958833	WITHOUT_CLASSIFICATION	1.3111304116758801E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999999303460051	WITHOUT_CLASSIFICATION	6.965399490967642E-7	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999995411585673	WITHOUT_CLASSIFICATION	4.588414327224398E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999994221679926	WITHOUT_CLASSIFICATION	5.778320073128857E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999882906880119	WITHOUT_CLASSIFICATION	1.1709311988130896E-5	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999807286347	WITHOUT_CLASSIFICATION	1.9271365228769198E-8	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999999481526639	WITHOUT_CLASSIFICATION	5.1847335986604295E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999996151195789	WITHOUT_CLASSIFICATION	3.84880421097286E-6	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999982867008352	WITHOUT_CLASSIFICATION	1.7132991646889888E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998645344658	WITHOUT_CLASSIFICATION	1.354655343147008E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998645344658	WITHOUT_CLASSIFICATION	1.354655343147008E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999998645344658	WITHOUT_CLASSIFICATION	1.354655343147008E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999979342588867	WITHOUT_CLASSIFICATION	2.0657411132215117E-6	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999996089610449	WITHOUT_CLASSIFICATION	3.91038955128438E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999990404408192	WITHOUT_CLASSIFICATION	9.59559180782145E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999998902906597	WITHOUT_CLASSIFICATION	1.097093403983785E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999971973934283	WITHOUT_CLASSIFICATION	2.802606571702825E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999998216126593	WITHOUT_CLASSIFICATION	1.7838734070467494E-7	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999939170099379	WITHOUT_CLASSIFICATION	6.082990062142483E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999985953121893	WITHOUT_CLASSIFICATION	1.4046878107473896E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.999998497272533	WITHOUT_CLASSIFICATION	1.5027274669594092E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999950881362756	WITHOUT_CLASSIFICATION	4.911863724447199E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999137169181	WITHOUT_CLASSIFICATION	8.628308189151164E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999993493939281	WITHOUT_CLASSIFICATION	6.506060719091365E-7	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999872782603986	WITHOUT_CLASSIFICATION	1.2721739601536277E-5	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999994434692054	WITHOUT_CLASSIFICATION	5.565307944283835E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999824760886209	WITHOUT_CLASSIFICATION	1.7523911379135708E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.999999972245568	WITHOUT_CLASSIFICATION	2.7754431981541227E-8	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.999993051765341	WITHOUT_CLASSIFICATION	6.948234658965916E-6	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999985950962876	WITHOUT_CLASSIFICATION	1.4049037123832964E-6	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999988921323716	WITHOUT_CLASSIFICATION	1.1078676284102012E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998973734021561	WITHOUT_CLASSIFICATION	1.0262659784384683E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999970197446184	WITHOUT_CLASSIFICATION	2.980255381588587E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999945698512452	WITHOUT_CLASSIFICATION	5.430148754695326E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999882814363952	WITHOUT_CLASSIFICATION	1.171856360477319E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999968556742593	WITHOUT_CLASSIFICATION	3.14432574063022E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999980749029128	WITHOUT_CLASSIFICATION	1.925097087195875E-6	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999997668594992	WITHOUT_CLASSIFICATION	2.3314050075063628E-7	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999998177845231	WITHOUT_CLASSIFICATION	1.8221547697506746E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999997371868034	WITHOUT_CLASSIFICATION	2.6281319662522494E-7	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999626950690306	WITHOUT_CLASSIFICATION	3.7304930969475874E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999896864645	WITHOUT_CLASSIFICATION	1.0313535475369177E-8	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999532509599502	WITHOUT_CLASSIFICATION	4.67490400497958E-5	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999997672856398	WITHOUT_CLASSIFICATION	2.327143601386867E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999995407272935	WITHOUT_CLASSIFICATION	4.5927270650415616E-7	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999996666304808	WITHOUT_CLASSIFICATION	3.333695192836203E-7	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999997557300887	WITHOUT_CLASSIFICATION	2.4426991129728045E-7	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.999999468187566	WITHOUT_CLASSIFICATION	5.318124339529591E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999971530660702	WITHOUT_CLASSIFICATION	2.846933929855008E-6	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9979193325573437	WITHOUT_CLASSIFICATION	0.0020806674426563716	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999984040559864	WITHOUT_CLASSIFICATION	1.595944013643365E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999984040559864	WITHOUT_CLASSIFICATION	1.595944013643365E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999998518379875	WITHOUT_CLASSIFICATION	1.4816201250842861E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999998518379875	WITHOUT_CLASSIFICATION	1.4816201250842861E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999992495104076	WITHOUT_CLASSIFICATION	7.504895924416258E-7	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999993333088357	WITHOUT_CLASSIFICATION	6.666911642909888E-7	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999912184879	WITHOUT_CLASSIFICATION	8.781512121878805E-9	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999985986978229	WITHOUT_CLASSIFICATION	1.4013021771715002E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999985986978229	WITHOUT_CLASSIFICATION	1.4013021771715002E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999985986978229	WITHOUT_CLASSIFICATION	1.4013021771715002E-6	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999914823353525	WITHOUT_CLASSIFICATION	8.517664647529905E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999985148668032	WITHOUT_CLASSIFICATION	1.4851331968310862E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999770036208032	WITHOUT_CLASSIFICATION	2.2996379196750922E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999822442673008	WITHOUT_CLASSIFICATION	1.7755732699257188E-5	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999913794230402	WITHOUT_CLASSIFICATION	8.620576959758724E-6	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999989813627134	WITHOUT_CLASSIFICATION	1.0186372866625435E-6	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999970078350519	WITHOUT_CLASSIFICATION	2.9921649482339846E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999893663481874	WITHOUT_CLASSIFICATION	1.063365181259213E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999893663481874	WITHOUT_CLASSIFICATION	1.063365181259213E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999683156581	WITHOUT_CLASSIFICATION	3.168434187844654E-8	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.999993513526258	WITHOUT_CLASSIFICATION	6.486473741994318E-6	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9996825329318136	WITHOUT_CLASSIFICATION	3.1746706818632837E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999995026729167	WITHOUT_CLASSIFICATION	4.973270832489292E-7	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999986152820226	WITHOUT_CLASSIFICATION	1.3847179774144938E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9992217635837667	WITHOUT_CLASSIFICATION	7.782364162332046E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999958450331098	WITHOUT_CLASSIFICATION	4.154966890237351E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999990641346672	WITHOUT_CLASSIFICATION	9.358653329432861E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999997628143268	WITHOUT_CLASSIFICATION	2.3718567319706044E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999912806483	WITHOUT_CLASSIFICATION	8.719351659076576E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999998898574228	WITHOUT_CLASSIFICATION	1.1014257717944389E-7	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913381136912	WITHOUT_CLASSIFICATION	8.661886308857165E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999998832091681	WITHOUT_CLASSIFICATION	1.1679083184437161E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999705688566416	WITHOUT_CLASSIFICATION	2.9431143358409108E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999977478242057	WITHOUT_CLASSIFICATION	2.2521757943799856E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999994614208104	WITHOUT_CLASSIFICATION	5.38579189648064E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999043208583511	WITHOUT_CLASSIFICATION	9.567914164882738E-5	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999999011708937	WITHOUT_CLASSIFICATION	9.882910639272158E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999479452754	WITHOUT_CLASSIFICATION	5.2054724569934394E-8	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999980424929438	WITHOUT_CLASSIFICATION	1.957507056177568E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999939415023256	WITHOUT_CLASSIFICATION	6.0584976744188116E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999997894499243	WITHOUT_CLASSIFICATION	2.105500756305253E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999964636752089	WITHOUT_CLASSIFICATION	3.5363247909972723E-6	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999997662721793	WITHOUT_CLASSIFICATION	2.3372782059949185E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999994285497668	WITHOUT_CLASSIFICATION	5.714502333389975E-7	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996619049468	WITHOUT_CLASSIFICATION	3.380950530607355E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999996918008287	WITHOUT_CLASSIFICATION	3.081991711968797E-7	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999145790549	WITHOUT_CLASSIFICATION	8.542094505644622E-8	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999992772687832	WITHOUT_CLASSIFICATION	7.227312167353976E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999992772687832	WITHOUT_CLASSIFICATION	7.227312167353976E-7	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.999999909117556	WITHOUT_CLASSIFICATION	9.088244408662071E-8	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999951946122867	WITHOUT_CLASSIFICATION	4.805387713249948E-6	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999599297669628	WITHOUT_CLASSIFICATION	4.0070233037233086E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9977966022896312	WITHOUT_CLASSIFICATION	0.0022033977103688997	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9977966022896312	WITHOUT_CLASSIFICATION	0.0022033977103688997	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999831817530228	WITHOUT_CLASSIFICATION	1.6818246977173173E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997754331419316	WITHOUT_CLASSIFICATION	2.2456685806829637E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999928578187248	WITHOUT_CLASSIFICATION	7.142181275209206E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999998634044757	WITHOUT_CLASSIFICATION	1.3659552434876844E-7	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999947318955761	WITHOUT_CLASSIFICATION	5.26810442392652E-6	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.999998522315129	WITHOUT_CLASSIFICATION	1.4776848710162187E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999042584153	WITHOUT_CLASSIFICATION	9.574158466793508E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.999999461003432	WITHOUT_CLASSIFICATION	5.389965679861142E-7	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.999999431682195	WITHOUT_CLASSIFICATION	5.683178050723838E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999951226001906	WITHOUT_CLASSIFICATION	4.877399809363206E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999860425381789	WITHOUT_CLASSIFICATION	1.3957461821096813E-5	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.999992844530153	WITHOUT_CLASSIFICATION	7.155469847031939E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999947107495067	WITHOUT_CLASSIFICATION	5.2892504933262155E-6	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999934393587	WITHOUT_CLASSIFICATION	6.560641296016507E-9	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999990475307153	WITHOUT_CLASSIFICATION	9.524692845324673E-7	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999996653531182	WITHOUT_CLASSIFICATION	3.346468817384656E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999997332205779	WITHOUT_CLASSIFICATION	2.6677942202625906E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999993192955511	WITHOUT_CLASSIFICATION	6.807044490065442E-7	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999981635491281	WITHOUT_CLASSIFICATION	1.8364508719410073E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999984290429468	WITHOUT_CLASSIFICATION	1.5709570531722624E-6	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999759472486528	WITHOUT_CLASSIFICATION	2.4052751347280822E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999987887451027	WITHOUT_CLASSIFICATION	1.2112548972160096E-6	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999996831924961	WITHOUT_CLASSIFICATION	3.1680750389274984E-7	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9995362143203004	WITHOUT_CLASSIFICATION	4.637856796996325E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999825319055	WITHOUT_CLASSIFICATION	1.746809451866733E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999825319055	WITHOUT_CLASSIFICATION	1.746809451866733E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999825319055	WITHOUT_CLASSIFICATION	1.746809451866733E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999825319055	WITHOUT_CLASSIFICATION	1.746809451866733E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999180964793	WITHOUT_CLASSIFICATION	8.19035207284394E-8	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999275675612	WITHOUT_CLASSIFICATION	7.243243880414895E-8	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999949972669088	WITHOUT_CLASSIFICATION	5.002733091200854E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999949972669088	WITHOUT_CLASSIFICATION	5.002733091200854E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999949972669088	WITHOUT_CLASSIFICATION	5.002733091200854E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999968870377616	WITHOUT_CLASSIFICATION	3.1129622383882762E-6	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999998677130517	WITHOUT_CLASSIFICATION	1.3228694819152891E-7	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.999997351361128	WITHOUT_CLASSIFICATION	2.6486388720563534E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999956630401301	WITHOUT_CLASSIFICATION	4.336959869886236E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999956630401301	WITHOUT_CLASSIFICATION	4.336959869886236E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995395367228	WITHOUT_CLASSIFICATION	4.604632770787499E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995395367228	WITHOUT_CLASSIFICATION	4.604632770787499E-7	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995959462510102	WITHOUT_CLASSIFICATION	4.040537489897645E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995959462510102	WITHOUT_CLASSIFICATION	4.040537489897645E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995955454223343	WITHOUT_CLASSIFICATION	4.0445457766577817E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999993175891645	WITHOUT_CLASSIFICATION	6.82410835493663E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999952980270411	WITHOUT_CLASSIFICATION	4.701972958837571E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999977552646304	WITHOUT_CLASSIFICATION	2.244735369615078E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999901953354983	WITHOUT_CLASSIFICATION	9.804664501705746E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999995719869239	WITHOUT_CLASSIFICATION	4.2801307616198565E-7	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999910997343274	WITHOUT_CLASSIFICATION	8.900265672650862E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999765843749383	WITHOUT_CLASSIFICATION	2.3415625061738803E-5	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999814449181628	WITHOUT_CLASSIFICATION	1.85550818373009E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999949194507455	WITHOUT_CLASSIFICATION	5.080549254424454E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999932217748384	WITHOUT_CLASSIFICATION	6.778225161516102E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999981924521398	WITHOUT_CLASSIFICATION	1.8075478601870833E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999999232124209	WITHOUT_CLASSIFICATION	7.678757907477389E-8	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999969975366123	WITHOUT_CLASSIFICATION	3.0024633877539685E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999993494324376	WITHOUT_CLASSIFICATION	6.505675623996857E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999485263322953	WITHOUT_CLASSIFICATION	5.147366770467093E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999985677891183	WITHOUT_CLASSIFICATION	1.4322108817017012E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987509518898	WITHOUT_CLASSIFICATION	1.2490481100959454E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999249376746406	WITHOUT_CLASSIFICATION	7.506232535931082E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999512324631222	WITHOUT_CLASSIFICATION	4.876753687776767E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999994482267457	WITHOUT_CLASSIFICATION	5.517732542968874E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999994482267457	WITHOUT_CLASSIFICATION	5.517732542968874E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999851990548534	WITHOUT_CLASSIFICATION	1.480094514671045E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999951483215629	WITHOUT_CLASSIFICATION	4.85167843707567E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9989897804272021	WITHOUT_CLASSIFICATION	0.0010102195727978872	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.99883515501096	WITHOUT_CLASSIFICATION	0.0011648449890400163	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9985422057812688	WITHOUT_CLASSIFICATION	0.0014577942187312457	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9991851559858189	WITHOUT_CLASSIFICATION	8.148440141810449E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9990045192405569	WITHOUT_CLASSIFICATION	9.954807594431262E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.99870429722778	WITHOUT_CLASSIFICATION	0.0012957027722200684	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9989326362506435	WITHOUT_CLASSIFICATION	0.0010673637493563955	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9984583501979912	WITHOUT_CLASSIFICATION	0.0015416498020088061	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9990913259615749	WITHOUT_CLASSIFICATION	9.086740384250926E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9990462458214865	WITHOUT_CLASSIFICATION	9.53754178513478E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9990467689390043	WITHOUT_CLASSIFICATION	9.53231060995615E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9986659148697574	WITHOUT_CLASSIFICATION	0.001334085130242662	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9992259042378207	WITHOUT_CLASSIFICATION	7.740957621792946E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9983675192332019	WITHOUT_CLASSIFICATION	0.0016324807667980937	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999678234396694	WITHOUT_CLASSIFICATION	3.2176560330614656E-5	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999918034527238	WITHOUT_CLASSIFICATION	8.196547276210746E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999984144365144	WITHOUT_CLASSIFICATION	1.5855634855926833E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.999967890739781	WITHOUT_CLASSIFICATION	3.210926021903183E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999912775885332	WITHOUT_CLASSIFICATION	8.722411466813642E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999912775885332	WITHOUT_CLASSIFICATION	8.722411466813642E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999912775885332	WITHOUT_CLASSIFICATION	8.722411466813642E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999912775885332	WITHOUT_CLASSIFICATION	8.722411466813642E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9999347723338223	WITHOUT_CLASSIFICATION	6.522766617765701E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999943187278785	WITHOUT_CLASSIFICATION	5.681272121433981E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999958054030714	WITHOUT_CLASSIFICATION	4.1945969285879666E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999870595525049	WITHOUT_CLASSIFICATION	1.2940447495060401E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999870595525049	WITHOUT_CLASSIFICATION	1.2940447495060401E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999997849624947	WITHOUT_CLASSIFICATION	2.1503750529768318E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999997578358594	WITHOUT_CLASSIFICATION	2.4216414064327205E-7	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999997578358594	WITHOUT_CLASSIFICATION	2.4216414064327205E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999988635749151	WITHOUT_CLASSIFICATION	1.1364250848350053E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999988635749151	WITHOUT_CLASSIFICATION	1.1364250848350053E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999976472369365	WITHOUT_CLASSIFICATION	2.3527630635211685E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999951059220485	WITHOUT_CLASSIFICATION	4.894077951412593E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999941482972328	WITHOUT_CLASSIFICATION	5.851702767288934E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999990087703553	WITHOUT_CLASSIFICATION	9.912296446632726E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999991837464254	WITHOUT_CLASSIFICATION	8.162535744839103E-7	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999995066306543	WITHOUT_CLASSIFICATION	4.933693457072061E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999996784318591	WITHOUT_CLASSIFICATION	3.215681408632189E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999969804873	WITHOUT_CLASSIFICATION	3.0195127000378086E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9979339992971795	WITHOUT_CLASSIFICATION	0.002066000702820591	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9979339992971795	WITHOUT_CLASSIFICATION	0.002066000702820591	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999961020190126	WITHOUT_CLASSIFICATION	3.897980987343198E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999989849872397	WITHOUT_CLASSIFICATION	1.0150127602323536E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9985856309721953	WITHOUT_CLASSIFICATION	0.001414369027804649	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999991129107559	WITHOUT_CLASSIFICATION	8.870892440472192E-7	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999976207038159	WITHOUT_CLASSIFICATION	2.379296184134401E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999990939627585	WITHOUT_CLASSIFICATION	9.060372415101998E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999990939627585	WITHOUT_CLASSIFICATION	9.060372415101998E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999990939627585	WITHOUT_CLASSIFICATION	9.060372415101998E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999956379538664	WITHOUT_CLASSIFICATION	4.36204613364433E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999956379538664	WITHOUT_CLASSIFICATION	4.36204613364433E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.999998841996266	WITHOUT_CLASSIFICATION	1.1580037339924042E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999968550322422	WITHOUT_CLASSIFICATION	3.144967757693394E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999968550322422	WITHOUT_CLASSIFICATION	3.144967757693394E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999692666203	WITHOUT_CLASSIFICATION	3.073337963825683E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999998782822774	WITHOUT_CLASSIFICATION	1.217177225215914E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998842708409845	WITHOUT_CLASSIFICATION	1.1572915901551918E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998672442780984	WITHOUT_CLASSIFICATION	1.327557219016757E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997707581933742	WITHOUT_CLASSIFICATION	2.292418066256978E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997707581933742	WITHOUT_CLASSIFICATION	2.292418066256978E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999258772516423	WITHOUT_CLASSIFICATION	7.412274835767807E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999318616341075	WITHOUT_CLASSIFICATION	6.813836589250129E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998215109566944	WITHOUT_CLASSIFICATION	1.7848904330552745E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999235962903024	WITHOUT_CLASSIFICATION	7.640370969761878E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998517547178108	WITHOUT_CLASSIFICATION	1.4824528218917882E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999920383943416	WITHOUT_CLASSIFICATION	7.961605658402993E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999940486051826	WITHOUT_CLASSIFICATION	5.951394817401293E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.999993380004162	WITHOUT_CLASSIFICATION	6.619995837983097E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998359996664405	WITHOUT_CLASSIFICATION	1.6400033355950099E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998924921152995	WITHOUT_CLASSIFICATION	1.0750788470053219E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999496137352769	WITHOUT_CLASSIFICATION	5.038626472306491E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999410223553187	WITHOUT_CLASSIFICATION	5.897764468135082E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999994347233533	WITHOUT_CLASSIFICATION	5.652766468035714E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999909438313781	WITHOUT_CLASSIFICATION	9.056168621894423E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999895522727508	WITHOUT_CLASSIFICATION	1.0447727249268805E-5	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999996403228429	WITHOUT_CLASSIFICATION	3.5967715703121233E-7	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999773009404473	WITHOUT_CLASSIFICATION	2.269905955264961E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999997859979394	WITHOUT_CLASSIFICATION	2.1400206058706971E-7	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999950747638229	WITHOUT_CLASSIFICATION	4.925236177218722E-6	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.999996948569948	WITHOUT_CLASSIFICATION	3.0514300520008134E-6	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.999960826898851	WITHOUT_CLASSIFICATION	3.917310114906372E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999736359180484	WITHOUT_CLASSIFICATION	2.6364081951533877E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999914404613162	WITHOUT_CLASSIFICATION	8.559538683799248E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.999996768025387	WITHOUT_CLASSIFICATION	3.2319746130958793E-6	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999986232360683	WITHOUT_CLASSIFICATION	1.3767639316899304E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.999999230048053	WITHOUT_CLASSIFICATION	7.6995194696883E-7	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999901421841335	WITHOUT_CLASSIFICATION	9.85781586657792E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999748035265533	WITHOUT_CLASSIFICATION	2.519647344663519E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999960370978417	WITHOUT_CLASSIFICATION	3.962902158302392E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997504955335	WITHOUT_CLASSIFICATION	2.495044665188416E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999953229744946	WITHOUT_CLASSIFICATION	4.6770255055132824E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999998108166658	WITHOUT_CLASSIFICATION	1.8918333431802617E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.999993654296435	WITHOUT_CLASSIFICATION	6.345703564993389E-6	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999978171151872	WITHOUT_CLASSIFICATION	2.182884812769373E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999624834748085	WITHOUT_CLASSIFICATION	3.7516525191436555E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999758822694178	WITHOUT_CLASSIFICATION	2.4117730582201713E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999952410154966	WITHOUT_CLASSIFICATION	4.758984503381035E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999991305577959	WITHOUT_CLASSIFICATION	8.694422041701052E-7	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999606228171352	WITHOUT_CLASSIFICATION	3.937718286493262E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999977002197502	WITHOUT_CLASSIFICATION	2.299780249717504E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997908421883	WITHOUT_CLASSIFICATION	2.091578117191556E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999950021462973	WITHOUT_CLASSIFICATION	4.9978537027713345E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.999942996958526	WITHOUT_CLASSIFICATION	5.700304147395252E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.999993320973603	WITHOUT_CLASSIFICATION	6.679026396947944E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999996826873149	WITHOUT_CLASSIFICATION	3.173126851690519E-7	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999975360801152	WITHOUT_CLASSIFICATION	2.463919884824772E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999997478751028	WITHOUT_CLASSIFICATION	2.5212489721011715E-7	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999992679475544	WITHOUT_CLASSIFICATION	7.320524455845077E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999937445558996	WITHOUT_CLASSIFICATION	6.2554441002988965E-6	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999993611924869	WITHOUT_CLASSIFICATION	6.388075130848841E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999937445558996	WITHOUT_CLASSIFICATION	6.2554441002988965E-6	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999609215529951	WITHOUT_CLASSIFICATION	3.9078447004990864E-5	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.999998718677296	WITHOUT_CLASSIFICATION	1.2813227040913638E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999971365327042	WITHOUT_CLASSIFICATION	2.863467295768403E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999682767567843	WITHOUT_CLASSIFICATION	3.172324321559024E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999957944636703	WITHOUT_CLASSIFICATION	4.205536329726006E-6	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999947178290116	WITHOUT_CLASSIFICATION	5.282170988299456E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999997859838677	WITHOUT_CLASSIFICATION	2.140161321825529E-7	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999818093171247	WITHOUT_CLASSIFICATION	1.81906828752975E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999997859979394	WITHOUT_CLASSIFICATION	2.1400206058706971E-7	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999591026003446	WITHOUT_CLASSIFICATION	4.0897399655387775E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999318220405395	WITHOUT_CLASSIFICATION	6.81779594605015E-5	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999998101718198	WITHOUT_CLASSIFICATION	1.8982818027144787E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999637876005	WITHOUT_CLASSIFICATION	3.621239962870666E-8	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999688428079453	WITHOUT_CLASSIFICATION	3.115719205481846E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9997454852112904	WITHOUT_CLASSIFICATION	2.5451478870958116E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9997613946210675	WITHOUT_CLASSIFICATION	2.386053789325868E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999920424185581	WITHOUT_CLASSIFICATION	7.957581441826364E-6	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.999995301412538	WITHOUT_CLASSIFICATION	4.698587461977521E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999999847470342	WITHOUT_CLASSIFICATION	1.5252965773119456E-8	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999964960584	WITHOUT_CLASSIFICATION	3.5039415153825686E-9	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999996795569078	WITHOUT_CLASSIFICATION	3.204430922116671E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999975467266424	WITHOUT_CLASSIFICATION	2.4532733576035255E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.999996394167616	WITHOUT_CLASSIFICATION	3.605832384082833E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999994693624676	WITHOUT_CLASSIFICATION	5.306375324193536E-7	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999965893578339	WITHOUT_CLASSIFICATION	3.4106421661039016E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999994350954392	WITHOUT_CLASSIFICATION	5.649045608762529E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999695303144585	WITHOUT_CLASSIFICATION	3.0469685541553984E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999695303144585	WITHOUT_CLASSIFICATION	3.0469685541553984E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999757385844015	WITHOUT_CLASSIFICATION	2.42614155986284E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999864882241726	WITHOUT_CLASSIFICATION	1.351177582740232E-5	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.999990713520717	WITHOUT_CLASSIFICATION	9.286479282957838E-6	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999986356084583	WITHOUT_CLASSIFICATION	1.3643915417999853E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999980624818888	WITHOUT_CLASSIFICATION	1.937518111274529E-6	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.999940074437043	WITHOUT_CLASSIFICATION	5.9925562957060085E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9990089005401895	WITHOUT_CLASSIFICATION	9.910994598104845E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999990857989032	WITHOUT_CLASSIFICATION	9.142010968609185E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999996060953529	WITHOUT_CLASSIFICATION	3.939046470980077E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998636115996185	WITHOUT_CLASSIFICATION	1.3638840038167807E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999025037293301	WITHOUT_CLASSIFICATION	9.749627066995142E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999994886003105	WITHOUT_CLASSIFICATION	5.113996894867168E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999841159622768	WITHOUT_CLASSIFICATION	1.5884037723193488E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999389700890593	WITHOUT_CLASSIFICATION	6.102991094070344E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998955483403729	WITHOUT_CLASSIFICATION	1.0445165962707828E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.999986642921234	WITHOUT_CLASSIFICATION	1.3357078765966894E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999998461037118	WITHOUT_CLASSIFICATION	1.5389628820617138E-6	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999904145356164	WITHOUT_CLASSIFICATION	9.585464383473828E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999885724005753	WITHOUT_CLASSIFICATION	1.1427599424828715E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999980624818888	WITHOUT_CLASSIFICATION	1.937518111274529E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999998461037118	WITHOUT_CLASSIFICATION	1.5389628820617138E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999990857989032	WITHOUT_CLASSIFICATION	9.142010968609185E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999996060953529	WITHOUT_CLASSIFICATION	3.939046470980077E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999975859133042	WITHOUT_CLASSIFICATION	2.4140866958258415E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999954738610828	WITHOUT_CLASSIFICATION	4.526138917219562E-6	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999966186507383	WITHOUT_CLASSIFICATION	3.381349261773435E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999981492084333	WITHOUT_CLASSIFICATION	1.8507915667509254E-6	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999987476416338	WITHOUT_CLASSIFICATION	1.2523583661925888E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999001583964467	WITHOUT_CLASSIFICATION	9.984160355323572E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999001583964467	WITHOUT_CLASSIFICATION	9.984160355323572E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999709539248043	WITHOUT_CLASSIFICATION	2.9046075195671615E-5	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999966196047747	WITHOUT_CLASSIFICATION	3.3803952251692556E-6	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999965892047435	WITHOUT_CLASSIFICATION	3.4107952565074843E-6	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999969966716391	WITHOUT_CLASSIFICATION	3.003328360932318E-6	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999851249665959	WITHOUT_CLASSIFICATION	1.4875033404235074E-5	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999969702682898	WITHOUT_CLASSIFICATION	3.0297317100683115E-6	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999866680044406	WITHOUT_CLASSIFICATION	1.3331995559485396E-5	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999973082204272	WITHOUT_CLASSIFICATION	2.6917795727541187E-6	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999972200539851	WITHOUT_CLASSIFICATION	2.779946014985944E-6	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999877671480667	WITHOUT_CLASSIFICATION	1.2232851933338527E-5	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999975301437869	WITHOUT_CLASSIFICATION	2.469856213055449E-6	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999974197122041	WITHOUT_CLASSIFICATION	2.5802877958834604E-6	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999972905154171	WITHOUT_CLASSIFICATION	2.709484582814518E-6	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999887469134285	WITHOUT_CLASSIFICATION	1.1253086571409557E-5	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999977279636667	WITHOUT_CLASSIFICATION	2.2720363331951987E-6	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999980589634705	WITHOUT_CLASSIFICATION	1.9410365294392937E-6	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999915540347347	WITHOUT_CLASSIFICATION	8.445965265217586E-6	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999985896906028	WITHOUT_CLASSIFICATION	1.4103093972470073E-6	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999965292893436	WITHOUT_CLASSIFICATION	3.4707106564566386E-6	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999965213777003	WITHOUT_CLASSIFICATION	3.4786222997005553E-6	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999848636688304	WITHOUT_CLASSIFICATION	1.5136331169624498E-5	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999969439139444	WITHOUT_CLASSIFICATION	3.056086055546406E-6	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999965353521469	WITHOUT_CLASSIFICATION	3.4646478531183353E-6	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999965662321586	WITHOUT_CLASSIFICATION	3.43376784134152E-6	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999848901093895	WITHOUT_CLASSIFICATION	1.5109890610454595E-5	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999969492524639	WITHOUT_CLASSIFICATION	3.0507475360780074E-6	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999840130804393	WITHOUT_CLASSIFICATION	1.5986919560747808E-5	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999863298367524	WITHOUT_CLASSIFICATION	1.3670163247675955E-5	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999169419406904	WITHOUT_CLASSIFICATION	8.305805930954233E-5	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999956580723166	WITHOUT_CLASSIFICATION	4.341927683441403E-6	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9998047393184657	WITHOUT_CLASSIFICATION	1.9526068153425253E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999935170215397	WITHOUT_CLASSIFICATION	6.482978460179191E-6	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999946083370678	WITHOUT_CLASSIFICATION	5.3916629322207785E-6	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999776074250478	WITHOUT_CLASSIFICATION	2.239257495219794E-5	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999954788229979	WITHOUT_CLASSIFICATION	4.5211770020105305E-6	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999956781411293	WITHOUT_CLASSIFICATION	4.321858870695725E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999820504589451	WITHOUT_CLASSIFICATION	1.7949541054980174E-5	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999963759074328	WITHOUT_CLASSIFICATION	3.6240925671375836E-6	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999944531497412	WITHOUT_CLASSIFICATION	5.546850258862456E-6	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999758644735461	WITHOUT_CLASSIFICATION	2.413552645391403E-5	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999951269052727	WITHOUT_CLASSIFICATION	4.873094727298011E-6	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999945239343757	WITHOUT_CLASSIFICATION	5.476065624363619E-6	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999772568910847	WITHOUT_CLASSIFICATION	2.2743108915272826E-5	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999939989455424	WITHOUT_CLASSIFICATION	6.0010544575631535E-6	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999781964958785	WITHOUT_CLASSIFICATION	2.180350412154628E-5	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998891274569681	WITHOUT_CLASSIFICATION	1.1087254303191344E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999777376706835	WITHOUT_CLASSIFICATION	2.226232931650871E-5	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999959719193142	WITHOUT_CLASSIFICATION	4.028080685803424E-6	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999997379128506	WITHOUT_CLASSIFICATION	2.620871494982161E-7	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999940431313442	WITHOUT_CLASSIFICATION	5.9568686557667E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999993519588922	WITHOUT_CLASSIFICATION	6.48041107662085E-7	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.999999448032561	WITHOUT_CLASSIFICATION	5.519674389726005E-7	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999992523262226	WITHOUT_CLASSIFICATION	7.476737773563799E-7	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999907612808251	WITHOUT_CLASSIFICATION	9.238719174970375E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999994886003105	WITHOUT_CLASSIFICATION	5.113996894867168E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999976981008697	WITHOUT_CLASSIFICATION	2.3018991303601656E-6	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999978817044808	WITHOUT_CLASSIFICATION	2.1182955191741534E-6	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.999995334952852	WITHOUT_CLASSIFICATION	4.665047147993551E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999986720852718	WITHOUT_CLASSIFICATION	1.3279147281974403E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999967675171023	WITHOUT_CLASSIFICATION	3.2324828976985892E-6	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999846992420375	WITHOUT_CLASSIFICATION	1.5300757962453434E-5	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999989128531966	WITHOUT_CLASSIFICATION	1.0871468032897365E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999025037293301	WITHOUT_CLASSIFICATION	9.749627066995142E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999955643959345	WITHOUT_CLASSIFICATION	4.435604065407916E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999998066624232	WITHOUT_CLASSIFICATION	1.9333757684194009E-7	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99999549834998	WITHOUT_CLASSIFICATION	4.501650019985899E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999942833159654	WITHOUT_CLASSIFICATION	5.7166840346174906E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999901037751843	WITHOUT_CLASSIFICATION	9.896224815752928E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999910226234383	WITHOUT_CLASSIFICATION	8.97737656170717E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999940094646724	WITHOUT_CLASSIFICATION	5.9905353275676345E-6	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999827472545975	WITHOUT_CLASSIFICATION	1.725274540258053E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952526842265	WITHOUT_CLASSIFICATION	4.747315773466261E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999950390637308	WITHOUT_CLASSIFICATION	4.960936269248573E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999964466921806	WITHOUT_CLASSIFICATION	3.553307819512148E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999995886921955	WITHOUT_CLASSIFICATION	4.1130780441314336E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999958135449248	WITHOUT_CLASSIFICATION	4.1864550751600344E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999897505362507	WITHOUT_CLASSIFICATION	1.0249463749251902E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999931889437403	WITHOUT_CLASSIFICATION	6.811056259614813E-6	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999996574530263	WITHOUT_CLASSIFICATION	3.425469736578154E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999921403239512	WITHOUT_CLASSIFICATION	7.859676048739263E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999999581225175	WITHOUT_CLASSIFICATION	4.187748243197992E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999025037293301	WITHOUT_CLASSIFICATION	9.749627066995142E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999964466921806	WITHOUT_CLASSIFICATION	3.553307819512148E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999995886921955	WITHOUT_CLASSIFICATION	4.1130780441314336E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999958135449248	WITHOUT_CLASSIFICATION	4.1864550751600344E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999992834017073	WITHOUT_CLASSIFICATION	7.16598292581362E-7	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999890070967833	WITHOUT_CLASSIFICATION	1.0992903216708906E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998746258527443	WITHOUT_CLASSIFICATION	1.253741472556562E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999996929202462	WITHOUT_CLASSIFICATION	3.070797537805892E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999923186811678	WITHOUT_CLASSIFICATION	7.68131883213921E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999923186811678	WITHOUT_CLASSIFICATION	7.68131883213921E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999923186811678	WITHOUT_CLASSIFICATION	7.68131883213921E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999997030883522	WITHOUT_CLASSIFICATION	2.9691164775265354E-7	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999969174908532	WITHOUT_CLASSIFICATION	3.082509146836281E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999956139080988	WITHOUT_CLASSIFICATION	4.3860919011837E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999994831322451	WITHOUT_CLASSIFICATION	5.168677549331943E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999945263974612	WITHOUT_CLASSIFICATION	5.4736025387612515E-6	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999412761632	WITHOUT_CLASSIFICATION	5.872383677812738E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999518707227814	WITHOUT_CLASSIFICATION	4.812927721877214E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999777926822824	WITHOUT_CLASSIFICATION	2.2207317717653743E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999791372871	WITHOUT_CLASSIFICATION	2.086271289596344E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999998832627497	WITHOUT_CLASSIFICATION	1.1673725031689737E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999911171992358	WITHOUT_CLASSIFICATION	8.882800764205816E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999894873788	WITHOUT_CLASSIFICATION	1.051262125753527E-8	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999831462795206	WITHOUT_CLASSIFICATION	1.6853720479410022E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999996535259119	WITHOUT_CLASSIFICATION	3.4647408809576487E-7	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999946491138009	WITHOUT_CLASSIFICATION	5.35088619912171E-6	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999881549099982	WITHOUT_CLASSIFICATION	1.1845090001860286E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9999550737947455	WITHOUT_CLASSIFICATION	4.492620525453495E-5	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9999939758942749	WITHOUT_CLASSIFICATION	6.0241057251984174E-6	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999995393553167	WITHOUT_CLASSIFICATION	4.6064468329422295E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999976851157993	WITHOUT_CLASSIFICATION	2.314884200644021E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999992372861617	WITHOUT_CLASSIFICATION	7.62713838261833E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999999281261437	WITHOUT_CLASSIFICATION	7.18738563503466E-8	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.999999169592259	WITHOUT_CLASSIFICATION	8.304077409858738E-7	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999853305163	WITHOUT_CLASSIFICATION	1.4669483696787132E-8	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999998864002726	WITHOUT_CLASSIFICATION	1.1359972747232384E-7	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999938390380462	WITHOUT_CLASSIFICATION	6.160961953857495E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999995390725512	WITHOUT_CLASSIFICATION	4.6092744879191693E-7	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999990215524364	WITHOUT_CLASSIFICATION	9.784475636609035E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999874900508963	WITHOUT_CLASSIFICATION	1.2509949103824234E-5	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999426278603494	WITHOUT_CLASSIFICATION	5.737213965064709E-5	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999997021367393	WITHOUT_CLASSIFICATION	2.9786326069827783E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999981516806907	WITHOUT_CLASSIFICATION	1.8483193091589142E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.999998630019028	WITHOUT_CLASSIFICATION	1.369980972037819E-6	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.999980849474625	WITHOUT_CLASSIFICATION	1.9150525375052288E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999976423559401	WITHOUT_CLASSIFICATION	2.3576440599082784E-6	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999979057116725	WITHOUT_CLASSIFICATION	2.094288327487091E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997504955335	WITHOUT_CLASSIFICATION	2.495044665188416E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999247316659999	WITHOUT_CLASSIFICATION	7.526833400002309E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999450239564	WITHOUT_CLASSIFICATION	5.4976043654248274E-8	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999981764758984	WITHOUT_CLASSIFICATION	1.8235241016119746E-6	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999986007301519	WITHOUT_CLASSIFICATION	1.3992698480473487E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999489449199217	WITHOUT_CLASSIFICATION	5.105508007838854E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999968600040864	WITHOUT_CLASSIFICATION	3.139995913694482E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999489449199217	WITHOUT_CLASSIFICATION	5.105508007838854E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999999472741152	WITHOUT_CLASSIFICATION	5.2725884738944894E-8	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999978466402331	WITHOUT_CLASSIFICATION	2.153359766968251E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999495389791735	WITHOUT_CLASSIFICATION	5.0461020826544885E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999999335596245	WITHOUT_CLASSIFICATION	6.644037548125314E-8	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999996346908692	WITHOUT_CLASSIFICATION	3.6530913079864047E-7	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999999839927877	WITHOUT_CLASSIFICATION	1.6007212249796177E-8	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999990043273045	WITHOUT_CLASSIFICATION	9.956726955714076E-7	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999995033522461	WITHOUT_CLASSIFICATION	4.966477539483113E-7	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999998996352737	WITHOUT_CLASSIFICATION	1.0036472631225446E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999999183059627	WITHOUT_CLASSIFICATION	8.16940372902766E-8	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999989642104159	WITHOUT_CLASSIFICATION	1.0357895841101958E-6	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999992213137261	WITHOUT_CLASSIFICATION	7.78686273803095E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999996273815087	WITHOUT_CLASSIFICATION	3.7261849134456436E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999996020514342	WITHOUT_CLASSIFICATION	3.9794856581984395E-7	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.999999972316856	WITHOUT_CLASSIFICATION	2.7683144018192527E-8	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999996310906661	WITHOUT_CLASSIFICATION	3.689093337851737E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999943414214	WITHOUT_CLASSIFICATION	5.658578541937846E-9	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999944370285395	WITHOUT_CLASSIFICATION	5.562971460409686E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999990410983081	WITHOUT_CLASSIFICATION	9.589016919848813E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.999999725302045	WITHOUT_CLASSIFICATION	2.746979550648874E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999834633260538	WITHOUT_CLASSIFICATION	1.6536673946197276E-5	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999994674828123	WITHOUT_CLASSIFICATION	5.325171876565743E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999992852730937	WITHOUT_CLASSIFICATION	7.147269063852349E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999997374290089	WITHOUT_CLASSIFICATION	2.625709911522329E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999999628573053	WITHOUT_CLASSIFICATION	3.714269473924803E-8	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999916159746699	WITHOUT_CLASSIFICATION	8.384025330193187E-6	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999947627976	WITHOUT_CLASSIFICATION	5.237202401442907E-9	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999612798406	WITHOUT_CLASSIFICATION	3.8720159528257146E-8	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999991983598012	WITHOUT_CLASSIFICATION	8.016401987679282E-7	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999999603448402	WITHOUT_CLASSIFICATION	3.965515971873451E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999990173095411	WITHOUT_CLASSIFICATION	9.826904589002262E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999920512287706	WITHOUT_CLASSIFICATION	7.948771229504038E-6	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999998578813969	WITHOUT_CLASSIFICATION	1.4211860304558431E-7	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999997781584679	WITHOUT_CLASSIFICATION	2.2184153205975953E-7	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999995946488056	WITHOUT_CLASSIFICATION	4.0535119440765536E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999993148072788	WITHOUT_CLASSIFICATION	6.851927213291424E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999971245426305	WITHOUT_CLASSIFICATION	2.875457369512985E-6	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.999999342874837	WITHOUT_CLASSIFICATION	6.571251629507409E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999981764758984	WITHOUT_CLASSIFICATION	1.8235241016119746E-6	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999999061740644	WITHOUT_CLASSIFICATION	9.382593556202195E-8	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999958450805602	WITHOUT_CLASSIFICATION	4.154919439897582E-6	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999987398861611	WITHOUT_CLASSIFICATION	1.2601138388935815E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999985149604365	WITHOUT_CLASSIFICATION	1.4850395635291216E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999968600040864	WITHOUT_CLASSIFICATION	3.139995913694482E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.999986523853255	WITHOUT_CLASSIFICATION	1.3476146744903417E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999966649712451	WITHOUT_CLASSIFICATION	3.3350287549844485E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999982118659261	WITHOUT_CLASSIFICATION	1.7881340739725225E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999959197451841	WITHOUT_CLASSIFICATION	4.080254815947149E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999992204441291	WITHOUT_CLASSIFICATION	7.795558708089006E-7	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999948425667243	WITHOUT_CLASSIFICATION	5.157433275680077E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999912715832674	WITHOUT_CLASSIFICATION	8.728416732623417E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999953540604994	WITHOUT_CLASSIFICATION	4.645939500562599E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999987068838259	WITHOUT_CLASSIFICATION	1.2931161741077254E-6	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999544458867176	WITHOUT_CLASSIFICATION	4.5554113282522656E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999953229744946	WITHOUT_CLASSIFICATION	4.6770255055132824E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999501623747543	WITHOUT_CLASSIFICATION	4.983762524573271E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999998926817651	WITHOUT_CLASSIFICATION	1.0731823481821289E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.999999764673155	WITHOUT_CLASSIFICATION	2.3532684495267827E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999837767808479	WITHOUT_CLASSIFICATION	1.6223219152047245E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999996987943995	WITHOUT_CLASSIFICATION	3.0120560043356505E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999992557700901	WITHOUT_CLASSIFICATION	7.442299099190566E-7	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999997700550117	WITHOUT_CLASSIFICATION	2.299449882992393E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999977958249148	WITHOUT_CLASSIFICATION	2.2041750852313253E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999133918515	WITHOUT_CLASSIFICATION	8.660814860930628E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999987470265898	WITHOUT_CLASSIFICATION	1.2529734102231161E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999977958249148	WITHOUT_CLASSIFICATION	2.2041750852313253E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999909490704	WITHOUT_CLASSIFICATION	9.05092955856631E-9	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999912221070172	WITHOUT_CLASSIFICATION	8.777892982798648E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999973080247035	WITHOUT_CLASSIFICATION	2.6919752964878833E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999956902006619	WITHOUT_CLASSIFICATION	4.309799338127827E-6	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999469370772	WITHOUT_CLASSIFICATION	5.3062922917880204E-8	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999995579624431	WITHOUT_CLASSIFICATION	4.4203755697690124E-7	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999231860556	WITHOUT_CLASSIFICATION	7.681394447169167E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.999999961505704	WITHOUT_CLASSIFICATION	3.849429594386575E-8	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999995107703414	WITHOUT_CLASSIFICATION	4.892296585424743E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999473541482	WITHOUT_CLASSIFICATION	5.264585187672814E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999981005662675	WITHOUT_CLASSIFICATION	1.899433732438693E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999935797117732	WITHOUT_CLASSIFICATION	6.420288226845024E-6	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999987628122804	WITHOUT_CLASSIFICATION	1.2371877195935135E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.999999906877265	WITHOUT_CLASSIFICATION	9.31227349833004E-8	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999993202828424	WITHOUT_CLASSIFICATION	6.797171574674759E-7	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999967938419158	WITHOUT_CLASSIFICATION	3.2061580842152517E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999999352413016	WITHOUT_CLASSIFICATION	6.475869841263527E-8	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999993914374317	WITHOUT_CLASSIFICATION	6.085625682672823E-7	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999995441245708	WITHOUT_CLASSIFICATION	4.5587542926048314E-7	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999992477795998	WITHOUT_CLASSIFICATION	7.522204001627128E-7	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.999999614179232	WITHOUT_CLASSIFICATION	3.858207679338145E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999971365327042	WITHOUT_CLASSIFICATION	2.863467295768403E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979038011425	WITHOUT_CLASSIFICATION	2.096198857466596E-6	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999999130155253	WITHOUT_CLASSIFICATION	8.698447467596726E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999995959069592	WITHOUT_CLASSIFICATION	4.040930407277991E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999995959069592	WITHOUT_CLASSIFICATION	4.040930407277991E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999996728316659	WITHOUT_CLASSIFICATION	3.2716833402983417E-7	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999998820908573	WITHOUT_CLASSIFICATION	1.1790914261663579E-7	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999998936580808	WITHOUT_CLASSIFICATION	1.0634191916873441E-7	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999913104836	WITHOUT_CLASSIFICATION	8.689516460369982E-9	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999555410139768	WITHOUT_CLASSIFICATION	4.445898602324334E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999997850959191	WITHOUT_CLASSIFICATION	2.149040807612061E-7	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999749928859388	WITHOUT_CLASSIFICATION	2.5007114061121404E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999988652214159	WITHOUT_CLASSIFICATION	1.1347785841519807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999957456179611	WITHOUT_CLASSIFICATION	4.254382038868104E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999957456179611	WITHOUT_CLASSIFICATION	4.254382038868104E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999998907399872	WITHOUT_CLASSIFICATION	1.0926001279747025E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999998907399872	WITHOUT_CLASSIFICATION	1.0926001279747025E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.999996374776498	WITHOUT_CLASSIFICATION	3.6252235018929566E-6	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999757131475953	WITHOUT_CLASSIFICATION	2.4286852404799653E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999981782055294	WITHOUT_CLASSIFICATION	1.8217944706020595E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999996312797557	WITHOUT_CLASSIFICATION	3.687202443211557E-7	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.999994805797478	WITHOUT_CLASSIFICATION	5.19420252200032E-6	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999997457217936	WITHOUT_CLASSIFICATION	2.542782063694083E-7	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999991659783988	WITHOUT_CLASSIFICATION	8.340216012789028E-7	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999987983011546	WITHOUT_CLASSIFICATION	1.2016988454355537E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999956848034172	WITHOUT_CLASSIFICATION	4.315196582803097E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999864685798484	WITHOUT_CLASSIFICATION	1.3531420151546219E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999994079486542	WITHOUT_CLASSIFICATION	5.920513458747078E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999890710310446	WITHOUT_CLASSIFICATION	1.092896895549698E-5	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999890710310446	WITHOUT_CLASSIFICATION	1.092896895549698E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999821838683427	WITHOUT_CLASSIFICATION	1.7816131657292243E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999821838683427	WITHOUT_CLASSIFICATION	1.7816131657292243E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999975192861249	WITHOUT_CLASSIFICATION	2.4807138750619425E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.999995616868949	WITHOUT_CLASSIFICATION	4.3831310510964064E-6	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999314198272043	WITHOUT_CLASSIFICATION	6.85801727955728E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999681547833211	WITHOUT_CLASSIFICATION	3.184521667881797E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999991789595898	WITHOUT_CLASSIFICATION	8.210404101240093E-7	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999988340978007	WITHOUT_CLASSIFICATION	1.1659021993896059E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999998902906597	WITHOUT_CLASSIFICATION	1.097093403983785E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999995702052071	WITHOUT_CLASSIFICATION	4.297947929012191E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999995702052071	WITHOUT_CLASSIFICATION	4.297947929012191E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999988375020866	WITHOUT_CLASSIFICATION	1.162497913336234E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999988375020866	WITHOUT_CLASSIFICATION	1.162497913336234E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999943289168625	WITHOUT_CLASSIFICATION	5.671083137525105E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.999999005945229	WITHOUT_CLASSIFICATION	9.940547710462822E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999908433768525	WITHOUT_CLASSIFICATION	9.156623147447397E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999908433768525	WITHOUT_CLASSIFICATION	9.156623147447397E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999908433768525	WITHOUT_CLASSIFICATION	9.156623147447397E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999999183573235	WITHOUT_CLASSIFICATION	8.164267647828535E-8	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999995612733289	WITHOUT_CLASSIFICATION	4.387266711050744E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999944477945941	WITHOUT_CLASSIFICATION	5.55220540588579E-6	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999981927350522	WITHOUT_CLASSIFICATION	1.8072649478925752E-6	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999922367317117	WITHOUT_CLASSIFICATION	7.76326828838625E-6	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999681658302627	WITHOUT_CLASSIFICATION	3.1834169737272266E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999930310701122	WITHOUT_CLASSIFICATION	6.96892988771554E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999996076492662	WITHOUT_CLASSIFICATION	3.9235073378238364E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999987611541983	WITHOUT_CLASSIFICATION	1.2388458017505012E-6	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999989555254697	WITHOUT_CLASSIFICATION	1.0444745303199672E-6	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999914083088051	WITHOUT_CLASSIFICATION	8.591691194864419E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999996182073532	WITHOUT_CLASSIFICATION	3.817926467940113E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999993493939281	WITHOUT_CLASSIFICATION	6.506060719091365E-7	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999949347905085	WITHOUT_CLASSIFICATION	5.065209491565958E-6	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999999273862941	WITHOUT_CLASSIFICATION	7.26137059127671E-8	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999998946992857	WITHOUT_CLASSIFICATION	1.053007141815179E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999873452143386	WITHOUT_CLASSIFICATION	1.265478566130911E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999845210487955	WITHOUT_CLASSIFICATION	1.5478951204523286E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999995886008565	WITHOUT_CLASSIFICATION	4.11399143602501E-7	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999996477783275	WITHOUT_CLASSIFICATION	3.522216725617187E-7	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999994911640331	WITHOUT_CLASSIFICATION	5.088359669535481E-7	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999982866470112	WITHOUT_CLASSIFICATION	1.713352988806571E-6	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999981081965005	WITHOUT_CLASSIFICATION	1.891803499611595E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999932172229448	WITHOUT_CLASSIFICATION	6.782777055246855E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999981158909867	WITHOUT_CLASSIFICATION	1.884109013146343E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999954170179565	WITHOUT_CLASSIFICATION	4.582982043621941E-6	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.999899863547889	WITHOUT_CLASSIFICATION	1.0013645211102257E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999984450356314	WITHOUT_CLASSIFICATION	1.5549643685963805E-6	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998138282189152	WITHOUT_CLASSIFICATION	1.861717810847743E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998973734021561	WITHOUT_CLASSIFICATION	1.0262659784384683E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999996637703131	WITHOUT_CLASSIFICATION	3.362296868482399E-7	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999884602719837	WITHOUT_CLASSIFICATION	1.1539728016171477E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999994015302017	WITHOUT_CLASSIFICATION	5.9846979829711116E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999979033239799	WITHOUT_CLASSIFICATION	2.0966760201742626E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999698378666948	WITHOUT_CLASSIFICATION	3.0162133305166568E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999987680271333	WITHOUT_CLASSIFICATION	1.2319728667966735E-6	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999969263752667	WITHOUT_CLASSIFICATION	3.0736247333292336E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999980789632242	WITHOUT_CLASSIFICATION	1.9210367757282086E-6	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.999998453374925	WITHOUT_CLASSIFICATION	1.5466250750139218E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999968556742593	WITHOUT_CLASSIFICATION	3.14432574063022E-6	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999888626450752	WITHOUT_CLASSIFICATION	1.1137354924827203E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999980749029128	WITHOUT_CLASSIFICATION	1.925097087195875E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9927358752658577	WITHOUT_CLASSIFICATION	0.007264124734142218	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999996195331867	WITHOUT_CLASSIFICATION	3.804668132596317E-7	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999980629548508	WITHOUT_CLASSIFICATION	1.9370451491225416E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999999119505059	WITHOUT_CLASSIFICATION	8.804949407301657E-8	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999993523368096	WITHOUT_CLASSIFICATION	6.476631903252716E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999977954361242	WITHOUT_CLASSIFICATION	2.2045638757359755E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999655922664767	WITHOUT_CLASSIFICATION	3.440773352322122E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999725066221863	WITHOUT_CLASSIFICATION	2.7493377813737512E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999988712922786	WITHOUT_CLASSIFICATION	1.1287077213304411E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999464427526	WITHOUT_CLASSIFICATION	5.3557247457180776E-8	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999985334139705	WITHOUT_CLASSIFICATION	1.466586029569703E-6	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999989888365465	WITHOUT_CLASSIFICATION	1.011163453559467E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999964140443078	WITHOUT_CLASSIFICATION	3.585955692222513E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999997435560686	WITHOUT_CLASSIFICATION	2.564439314634477E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9927358752658577	WITHOUT_CLASSIFICATION	0.007264124734142218	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9927358752658577	WITHOUT_CLASSIFICATION	0.007264124734142218	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.999998699161651	WITHOUT_CLASSIFICATION	1.3008383491479112E-6	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999995292190406	WITHOUT_CLASSIFICATION	4.707809594826475E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999995407272935	WITHOUT_CLASSIFICATION	4.5927270650415616E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999990274287456	WITHOUT_CLASSIFICATION	9.725712544016737E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999990274287456	WITHOUT_CLASSIFICATION	9.725712544016737E-7	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999993490474113	WITHOUT_CLASSIFICATION	6.50952588756879E-7	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999931675723	WITHOUT_CLASSIFICATION	6.83242768353601E-9	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999996176615413	WITHOUT_CLASSIFICATION	3.823384586282479E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999995852118729	WITHOUT_CLASSIFICATION	4.1478812701415827E-7	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998302899804887	WITHOUT_CLASSIFICATION	1.6971001951139597E-4	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999993602219189	WITHOUT_CLASSIFICATION	6.397780809790442E-7	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999997835786117	WITHOUT_CLASSIFICATION	2.1642138835519483E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999830213523163	WITHOUT_CLASSIFICATION	1.6978647683685658E-5	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999828139315521	WITHOUT_CLASSIFICATION	1.7186068447905063E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9998958466937228	WITHOUT_CLASSIFICATION	1.0415330627722928E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999982140775442	WITHOUT_CLASSIFICATION	1.7859224558315724E-6	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999995968222857	WITHOUT_CLASSIFICATION	4.0317771425285067E-7	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998302899804887	WITHOUT_CLASSIFICATION	1.6971001951139597E-4	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999957456179611	WITHOUT_CLASSIFICATION	4.254382038868104E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999957456179611	WITHOUT_CLASSIFICATION	4.254382038868104E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999666074397704	WITHOUT_CLASSIFICATION	3.339256022965153E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999962261675159	WITHOUT_CLASSIFICATION	3.7738324839706485E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.999997729081731	WITHOUT_CLASSIFICATION	2.270918269059421E-6	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999950512604698	WITHOUT_CLASSIFICATION	4.948739530179716E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9998395549233733	WITHOUT_CLASSIFICATION	1.6044507662663264E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9998610767117415	WITHOUT_CLASSIFICATION	1.389232882584409E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9998610767117415	WITHOUT_CLASSIFICATION	1.389232882584409E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999533527152193	WITHOUT_CLASSIFICATION	4.664728478070284E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9998530587616753	WITHOUT_CLASSIFICATION	1.4694123832466083E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999954128367516	WITHOUT_CLASSIFICATION	4.587163248259352E-6	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9996381937986474	WITHOUT_CLASSIFICATION	3.618062013525799E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999397780353346	WITHOUT_CLASSIFICATION	6.022196466547322E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999936196436876	WITHOUT_CLASSIFICATION	6.3803563124510966E-6	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999776673774564	WITHOUT_CLASSIFICATION	2.2332622543610523E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999561701293288	WITHOUT_CLASSIFICATION	4.382987067123143E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999977002197502	WITHOUT_CLASSIFICATION	2.299780249717504E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997908421883	WITHOUT_CLASSIFICATION	2.091578117191556E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999950021462973	WITHOUT_CLASSIFICATION	4.9978537027713345E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999991253019818	WITHOUT_CLASSIFICATION	8.746980183523006E-7	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999958484908911	WITHOUT_CLASSIFICATION	4.151509108878967E-6	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.999997075105696	WITHOUT_CLASSIFICATION	2.9248943039510976E-6	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999994181955164	WITHOUT_CLASSIFICATION	5.818044836762734E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999814019505807	WITHOUT_CLASSIFICATION	1.859804941923703E-5	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999771572332278	WITHOUT_CLASSIFICATION	2.2842766772333008E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999998269642433	WITHOUT_CLASSIFICATION	1.7303575669327998E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999808154132042	WITHOUT_CLASSIFICATION	1.9184586795840893E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999772333535407	WITHOUT_CLASSIFICATION	2.276664645933038E-5	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999853013869	WITHOUT_CLASSIFICATION	1.4698613099900219E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988484916243	WITHOUT_CLASSIFICATION	1.1515083756691805E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988484916243	WITHOUT_CLASSIFICATION	1.1515083756691805E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999957506457267	WITHOUT_CLASSIFICATION	4.249354273358418E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999992495104076	WITHOUT_CLASSIFICATION	7.504895924416258E-7	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999984743544822	WITHOUT_CLASSIFICATION	1.5256455177665556E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999863234400401	WITHOUT_CLASSIFICATION	1.367655995989429E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999863234400401	WITHOUT_CLASSIFICATION	1.367655995989429E-5	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999983505770761	WITHOUT_CLASSIFICATION	1.6494229238512316E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999983898943291	WITHOUT_CLASSIFICATION	1.6101056708694523E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999985986978229	WITHOUT_CLASSIFICATION	1.4013021771715002E-6	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999776342244758	WITHOUT_CLASSIFICATION	2.2365775524132855E-5	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999804524035882	WITHOUT_CLASSIFICATION	1.9547596411780173E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999999544664773	WITHOUT_CLASSIFICATION	4.5533522705531374E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998955483403729	WITHOUT_CLASSIFICATION	1.0445165962707828E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999821838683427	WITHOUT_CLASSIFICATION	1.7816131657292243E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999909784622039	WITHOUT_CLASSIFICATION	9.02153779619422E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999602275654322	WITHOUT_CLASSIFICATION	3.977243456764082E-5	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999970592276276	WITHOUT_CLASSIFICATION	2.9407723723563904E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999855030638205	WITHOUT_CLASSIFICATION	1.4496936179404895E-5	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999884381230505	WITHOUT_CLASSIFICATION	1.1561876949480772E-5	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999995824511473	WITHOUT_CLASSIFICATION	4.175488526616044E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9996796585462744	WITHOUT_CLASSIFICATION	3.203414537255611E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999555349700604	WITHOUT_CLASSIFICATION	4.4465029939622486E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999993869097012	WITHOUT_CLASSIFICATION	6.130902987046349E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999732293726581	WITHOUT_CLASSIFICATION	2.677062734190536E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999810296559587	WITHOUT_CLASSIFICATION	1.8970344041335852E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998498489453783	WITHOUT_CLASSIFICATION	1.5015105462165958E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999095524405641	WITHOUT_CLASSIFICATION	9.044755943594876E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999671415788632	WITHOUT_CLASSIFICATION	3.285842113677364E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999994808774492	WITHOUT_CLASSIFICATION	5.191225508239576E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999901747892816	WITHOUT_CLASSIFICATION	9.825210718402267E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9998679989361854	WITHOUT_CLASSIFICATION	1.3200106381464449E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999822442673008	WITHOUT_CLASSIFICATION	1.7755732699257188E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999998977281743	WITHOUT_CLASSIFICATION	1.0227182569621192E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999998977281743	WITHOUT_CLASSIFICATION	1.0227182569621192E-6	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999904503682808	WITHOUT_CLASSIFICATION	9.549631719183574E-6	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999367034610943	WITHOUT_CLASSIFICATION	6.329653890569969E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999893663481874	WITHOUT_CLASSIFICATION	1.063365181259213E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999893663481874	WITHOUT_CLASSIFICATION	1.063365181259213E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999812285098462	WITHOUT_CLASSIFICATION	1.8771490153849343E-5	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999995082786751	WITHOUT_CLASSIFICATION	4.917213249359264E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999998599913487	WITHOUT_CLASSIFICATION	1.4000865129082527E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999306663576	WITHOUT_CLASSIFICATION	6.933364229141642E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999951508935343	WITHOUT_CLASSIFICATION	4.849106465677632E-6	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999983842007395	WITHOUT_CLASSIFICATION	1.6157992605850153E-6	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999965946131872	WITHOUT_CLASSIFICATION	3.405386812774088E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999996108297064	WITHOUT_CLASSIFICATION	3.891702936039766E-6	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999939276014251	WITHOUT_CLASSIFICATION	6.072398574799079E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999992818649837	WITHOUT_CLASSIFICATION	7.181350163645137E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999431917536298	WITHOUT_CLASSIFICATION	5.680824637014372E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999671415788632	WITHOUT_CLASSIFICATION	3.285842113677364E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9995081614954573	WITHOUT_CLASSIFICATION	4.918385045426461E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999025037293301	WITHOUT_CLASSIFICATION	9.749627066995142E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999994886003105	WITHOUT_CLASSIFICATION	5.113996894867168E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999958308536215	WITHOUT_CLASSIFICATION	4.169146378437447E-6	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999961138278793	WITHOUT_CLASSIFICATION	3.8861721206341175E-6	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999960106553979	WITHOUT_CLASSIFICATION	3.9893446020993424E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.999999734901294	WITHOUT_CLASSIFICATION	2.650987060455277E-7	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997742552108477	WITHOUT_CLASSIFICATION	2.2574478915218706E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997742552108477	WITHOUT_CLASSIFICATION	2.2574478915218706E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999913593163271	WITHOUT_CLASSIFICATION	8.640683672840681E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999949296949222	WITHOUT_CLASSIFICATION	5.070305077828019E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999996108297064	WITHOUT_CLASSIFICATION	3.891702936039766E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999996108297064	WITHOUT_CLASSIFICATION	3.891702936039766E-6	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999985732615378	WITHOUT_CLASSIFICATION	1.4267384621734234E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9999764160296356	WITHOUT_CLASSIFICATION	2.3583970364425362E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999998180440448	WITHOUT_CLASSIFICATION	1.8195595515993905E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999971452427598	WITHOUT_CLASSIFICATION	2.8547572402190064E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999976905632717	WITHOUT_CLASSIFICATION	2.3094367282395664E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999998280321698	WITHOUT_CLASSIFICATION	1.719678302209669E-7	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999998532535281	WITHOUT_CLASSIFICATION	1.4674647180361745E-7	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.999992439890784	WITHOUT_CLASSIFICATION	7.560109216043415E-6	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999990877907506	WITHOUT_CLASSIFICATION	9.122092492798079E-7	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9997114318967995	WITHOUT_CLASSIFICATION	2.885681032004526E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999996452486714	WITHOUT_CLASSIFICATION	3.547513285996939E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999948573216	WITHOUT_CLASSIFICATION	5.142678400370788E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999948573216	WITHOUT_CLASSIFICATION	5.142678400370788E-7	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999941631289377	WITHOUT_CLASSIFICATION	5.836871062217675E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999957501993406	WITHOUT_CLASSIFICATION	4.249800659320539E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999957501993406	WITHOUT_CLASSIFICATION	4.249800659320539E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999946874473452	WITHOUT_CLASSIFICATION	5.3125526548429614E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999946874473452	WITHOUT_CLASSIFICATION	5.3125526548429614E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.999990815740977	WITHOUT_CLASSIFICATION	9.184259022907405E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999065021652	WITHOUT_CLASSIFICATION	9.349783480769854E-8	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999065021652	WITHOUT_CLASSIFICATION	9.349783480769854E-8	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999994994217997	WITHOUT_CLASSIFICATION	5.005782003438546E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999966968979812	WITHOUT_CLASSIFICATION	3.3031020188176956E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998636115996185	WITHOUT_CLASSIFICATION	1.3638840038167807E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999613521442601	WITHOUT_CLASSIFICATION	3.864785573989696E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999980424929438	WITHOUT_CLASSIFICATION	1.957507056177568E-6	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999998096871291	WITHOUT_CLASSIFICATION	1.9031287095034208E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999939415023256	WITHOUT_CLASSIFICATION	6.0584976744188116E-6	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999760868590752	WITHOUT_CLASSIFICATION	2.391314092479822E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999995305616396	WITHOUT_CLASSIFICATION	4.6943836053061054E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999988579019494	WITHOUT_CLASSIFICATION	1.1420980505497495E-6	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999996459094075	WITHOUT_CLASSIFICATION	3.540905925669508E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999979148266102	WITHOUT_CLASSIFICATION	2.085173389865349E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999527648655719	WITHOUT_CLASSIFICATION	4.723513442812023E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999966968979812	WITHOUT_CLASSIFICATION	3.3031020188176956E-6	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999997853804924	WITHOUT_CLASSIFICATION	2.1461950772842328E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999997894499243	WITHOUT_CLASSIFICATION	2.105500756305253E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999956912091587	WITHOUT_CLASSIFICATION	4.308790841257218E-6	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999974575796458	WITHOUT_CLASSIFICATION	2.542420354232323E-6	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.999999901018868	WITHOUT_CLASSIFICATION	9.898113194157103E-8	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999981031727123	WITHOUT_CLASSIFICATION	1.8968272876665332E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999978713821481	WITHOUT_CLASSIFICATION	2.1286178518949804E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999978776472916	WITHOUT_CLASSIFICATION	2.122352708340697E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999811924280905	WITHOUT_CLASSIFICATION	1.8807571909612212E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.999994708378662	WITHOUT_CLASSIFICATION	5.291621337943187E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999666831469827	WITHOUT_CLASSIFICATION	3.3316853017357356E-5	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999385392247374	WITHOUT_CLASSIFICATION	6.146077526263647E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999990613879793	WITHOUT_CLASSIFICATION	9.386120206428263E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999867963373612	WITHOUT_CLASSIFICATION	1.3203662638792108E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999993680526192	WITHOUT_CLASSIFICATION	6.319473807820092E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.999993756277178	WITHOUT_CLASSIFICATION	6.243722821926676E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999968137320266	WITHOUT_CLASSIFICATION	3.1862679734037934E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.99999383233135	WITHOUT_CLASSIFICATION	6.167668650132717E-6	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999995350884171	WITHOUT_CLASSIFICATION	4.649115828152942E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999996267818433	WITHOUT_CLASSIFICATION	3.7321815675315595E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999984518215812	WITHOUT_CLASSIFICATION	1.5481784188448835E-6	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999941326266215	WITHOUT_CLASSIFICATION	5.8673733785317085E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996619049468	WITHOUT_CLASSIFICATION	3.380950530607355E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999982102089059	WITHOUT_CLASSIFICATION	1.7897910940227817E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9999916400789698	WITHOUT_CLASSIFICATION	8.359921030130768E-6	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.999999891033806	WITHOUT_CLASSIFICATION	1.0896619391828647E-7	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999956278409582	WITHOUT_CLASSIFICATION	4.3721590417972285E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999950382500961	WITHOUT_CLASSIFICATION	4.961749903952071E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999999436801087	WITHOUT_CLASSIFICATION	5.631989127916475E-8	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999964450268721	WITHOUT_CLASSIFICATION	3.5549731278087927E-6	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999909168614345	WITHOUT_CLASSIFICATION	9.083138565503582E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999998840388558	WITHOUT_CLASSIFICATION	1.1596114423529516E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999984005186119	WITHOUT_CLASSIFICATION	1.5994813880324144E-6	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999996662846964	WITHOUT_CLASSIFICATION	3.33715303565248E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999904277010548	WITHOUT_CLASSIFICATION	9.572298945218161E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999636656942105	WITHOUT_CLASSIFICATION	3.633430578956385E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999999529759164	WITHOUT_CLASSIFICATION	4.702408352096522E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999982102089059	WITHOUT_CLASSIFICATION	1.7897910940227817E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999319326126	WITHOUT_CLASSIFICATION	6.806738730212416E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997696912784	WITHOUT_CLASSIFICATION	2.303087216463877E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997696912784	WITHOUT_CLASSIFICATION	2.303087216463877E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999996580046546	WITHOUT_CLASSIFICATION	3.4199534532740075E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999996580046546	WITHOUT_CLASSIFICATION	3.4199534532740075E-7	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999833110908309	WITHOUT_CLASSIFICATION	1.6688909169002053E-5	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999994117912232	WITHOUT_CLASSIFICATION	5.882087767985617E-7	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999991575860275	WITHOUT_CLASSIFICATION	8.424139723675929E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999917887330072	WITHOUT_CLASSIFICATION	8.211266992863971E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.999992553906383	WITHOUT_CLASSIFICATION	7.446093617110392E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999178586030052	WITHOUT_CLASSIFICATION	8.214139699485538E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999385965836626	WITHOUT_CLASSIFICATION	6.140341633747061E-5	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999989882564386	WITHOUT_CLASSIFICATION	1.0117435614552454E-6	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999954302683867	WITHOUT_CLASSIFICATION	4.56973161341909E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999965628848595	WITHOUT_CLASSIFICATION	3.437115140516396E-6	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999787544478412	WITHOUT_CLASSIFICATION	2.1245552158745078E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999967564812308	WITHOUT_CLASSIFICATION	3.2435187692332595E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999996707515598	WITHOUT_CLASSIFICATION	3.292484401733047E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999973614480472	WITHOUT_CLASSIFICATION	2.638551952833006E-6	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999854385240929	WITHOUT_CLASSIFICATION	1.4561475907044889E-5	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999986624241319	WITHOUT_CLASSIFICATION	1.3375758680731526E-6	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999995565320973	WITHOUT_CLASSIFICATION	4.434679027658968E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999958308536215	WITHOUT_CLASSIFICATION	4.169146378437447E-6	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999977894480907	WITHOUT_CLASSIFICATION	2.2105519092205195E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999997834714699	WITHOUT_CLASSIFICATION	2.165285300341757E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998955483403729	WITHOUT_CLASSIFICATION	1.0445165962707828E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999997834714699	WITHOUT_CLASSIFICATION	2.165285300341757E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999243337059277	WITHOUT_CLASSIFICATION	7.5666294072292E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999872417169566	WITHOUT_CLASSIFICATION	1.275828304339544E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998389963438561	WITHOUT_CLASSIFICATION	1.610036561437979E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999599297669628	WITHOUT_CLASSIFICATION	4.0070233037233086E-5	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999986021916633	WITHOUT_CLASSIFICATION	1.3978083367001182E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999409463891846	WITHOUT_CLASSIFICATION	5.905361081544085E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999409463891846	WITHOUT_CLASSIFICATION	5.905361081544085E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999663800878391	WITHOUT_CLASSIFICATION	3.361991216087951E-5	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999994703029679	WITHOUT_CLASSIFICATION	5.296970320843378E-7	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999998656382435	WITHOUT_CLASSIFICATION	1.343617565150372E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999964562050396	WITHOUT_CLASSIFICATION	3.543794960342632E-6	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999995073325066	WITHOUT_CLASSIFICATION	4.926674933822421E-7	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999991765904601	WITHOUT_CLASSIFICATION	8.234095399416556E-7	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999986021916633	WITHOUT_CLASSIFICATION	1.3978083367001182E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999409463891846	WITHOUT_CLASSIFICATION	5.905361081544085E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999409463891846	WITHOUT_CLASSIFICATION	5.905361081544085E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999663800878391	WITHOUT_CLASSIFICATION	3.361991216087951E-5	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.999999108695147	WITHOUT_CLASSIFICATION	8.913048530041497E-7	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.999997984083089	WITHOUT_CLASSIFICATION	2.0159169109925792E-6	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999943003199644	WITHOUT_CLASSIFICATION	5.6996800356135385E-6	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999881969276558	WITHOUT_CLASSIFICATION	1.1803072344097262E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999401283975272	WITHOUT_CLASSIFICATION	5.987160247264229E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999981107748319	WITHOUT_CLASSIFICATION	1.889225168045049E-6	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999995209523428	WITHOUT_CLASSIFICATION	4.79047657094288E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999935371084386	WITHOUT_CLASSIFICATION	6.4628915614016204E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999935371084386	WITHOUT_CLASSIFICATION	6.4628915614016204E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999970777314919	WITHOUT_CLASSIFICATION	2.9222685079792825E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999961805196371	WITHOUT_CLASSIFICATION	3.8194803628521085E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999832800019158	WITHOUT_CLASSIFICATION	1.6719998084212206E-5	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999904260432645	WITHOUT_CLASSIFICATION	9.573956735436883E-6	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.999985481962761	WITHOUT_CLASSIFICATION	1.4518037239006098E-5	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999948291029768	WITHOUT_CLASSIFICATION	5.170897023220159E-6	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999989503523832	WITHOUT_CLASSIFICATION	1.049647616780287E-6	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999980894523376	WITHOUT_CLASSIFICATION	1.9105476624224594E-6	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999698522345166	WITHOUT_CLASSIFICATION	3.0147765483411017E-5	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999991531586843	WITHOUT_CLASSIFICATION	8.468413156823293E-7	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.999992170035922	WITHOUT_CLASSIFICATION	7.829964077896702E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999950054562988	WITHOUT_CLASSIFICATION	4.9945437012757815E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999975983823217	WITHOUT_CLASSIFICATION	2.4016176782619547E-6	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999659006856664	WITHOUT_CLASSIFICATION	3.409931433362512E-5	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999891854903966	WITHOUT_CLASSIFICATION	1.0814509603423464E-5	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999402578017708	WITHOUT_CLASSIFICATION	5.974219822912973E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999129138486214	WITHOUT_CLASSIFICATION	8.708615137861873E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999995438101518	WITHOUT_CLASSIFICATION	4.5618984817687984E-7	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999557505788785	WITHOUT_CLASSIFICATION	4.4249421121352155E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999971763505544	WITHOUT_CLASSIFICATION	2.823649445673214E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999889098653773	WITHOUT_CLASSIFICATION	1.1090134622838682E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.999998464264552	WITHOUT_CLASSIFICATION	1.5357354480092179E-6	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.999998581166549	WITHOUT_CLASSIFICATION	1.4188334509588772E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.999994312348616	WITHOUT_CLASSIFICATION	5.687651383920294E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999998369300528	WITHOUT_CLASSIFICATION	1.6306994711747729E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999998176649162	WITHOUT_CLASSIFICATION	1.823350837730921E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999998975652086	WITHOUT_CLASSIFICATION	1.0243479144394813E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999827830146745	WITHOUT_CLASSIFICATION	1.7216985325553217E-5	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999030570477	WITHOUT_CLASSIFICATION	9.694295234270518E-8	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999938914704585	WITHOUT_CLASSIFICATION	6.108529541456073E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999986922257669	WITHOUT_CLASSIFICATION	1.3077742331843519E-6	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999989082344775	WITHOUT_CLASSIFICATION	1.091765522570733E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999934311561254	WITHOUT_CLASSIFICATION	6.568843874578061E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.999998256515939	WITHOUT_CLASSIFICATION	1.7434840610768386E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999965306303773	WITHOUT_CLASSIFICATION	3.4693696227029983E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999965306303773	WITHOUT_CLASSIFICATION	3.4693696227029983E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999961752144896	WITHOUT_CLASSIFICATION	3.8247855104918995E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.999997501905733	WITHOUT_CLASSIFICATION	2.4980942669027953E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999957228244482	WITHOUT_CLASSIFICATION	4.277175551865348E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999968682318654	WITHOUT_CLASSIFICATION	3.131768134587183E-6	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999809225782189	WITHOUT_CLASSIFICATION	1.907742178111911E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999985620574282	WITHOUT_CLASSIFICATION	1.4379425718253101E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999919037607402	WITHOUT_CLASSIFICATION	8.09623925987297E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999567623082045	WITHOUT_CLASSIFICATION	4.323769179561033E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999653374888035	WITHOUT_CLASSIFICATION	3.466251119646437E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999917809872735	WITHOUT_CLASSIFICATION	8.219012726529168E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998838806231	WITHOUT_CLASSIFICATION	1.1611937693567853E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999981107348146	WITHOUT_CLASSIFICATION	1.8892651853932447E-6	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999343066797832	WITHOUT_CLASSIFICATION	6.569332021686043E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999814891170143	WITHOUT_CLASSIFICATION	1.851088298564041E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9999020668368098	WITHOUT_CLASSIFICATION	9.793316319024235E-5	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999892722568653	WITHOUT_CLASSIFICATION	1.0727743134681027E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999967153311333	WITHOUT_CLASSIFICATION	3.2846688667413694E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999994822154367	WITHOUT_CLASSIFICATION	5.177845633085459E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.999999553829213	WITHOUT_CLASSIFICATION	4.4617078698597756E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999991215900602	WITHOUT_CLASSIFICATION	8.784099398521251E-7	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999993352747065	WITHOUT_CLASSIFICATION	6.647252933838445E-7	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999997790855993	WITHOUT_CLASSIFICATION	2.2091440066278357E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999732392296206	WITHOUT_CLASSIFICATION	2.676077037949825E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999860425381789	WITHOUT_CLASSIFICATION	1.3957461821096813E-5	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999992658470787	WITHOUT_CLASSIFICATION	7.341529213503719E-7	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999992631334252	WITHOUT_CLASSIFICATION	7.368665748042264E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999979394768221	WITHOUT_CLASSIFICATION	2.06052317788777E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999967443296066	WITHOUT_CLASSIFICATION	3.255670393523796E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999727405446688	WITHOUT_CLASSIFICATION	2.7259455331225548E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999838700230077	WITHOUT_CLASSIFICATION	1.612997699235006E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9998982270210606	WITHOUT_CLASSIFICATION	1.0177297893948254E-4	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999989648308999	WITHOUT_CLASSIFICATION	1.0351691001269677E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999992715883522	WITHOUT_CLASSIFICATION	7.284116477105728E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999997365768285	WITHOUT_CLASSIFICATION	2.63423171501407E-7	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999569699761284	WITHOUT_CLASSIFICATION	4.3030023871579877E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999994901374483	WITHOUT_CLASSIFICATION	5.098625518190367E-7	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9997731180886891	WITHOUT_CLASSIFICATION	2.2688191131087262E-4	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999995005787794	WITHOUT_CLASSIFICATION	4.994212206287519E-7	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999873710029208	WITHOUT_CLASSIFICATION	1.2628997079196007E-5	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999910580514305	WITHOUT_CLASSIFICATION	8.941948569402994E-6	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999996291075295	WITHOUT_CLASSIFICATION	3.7089247059004386E-7	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999998066774151	WITHOUT_CLASSIFICATION	1.933225848397354E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999999052388866	WITHOUT_CLASSIFICATION	9.476111338471102E-8	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999997966446048	WITHOUT_CLASSIFICATION	2.0335539505209627E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999792542351653	WITHOUT_CLASSIFICATION	2.0745764834708108E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999993962691464	WITHOUT_CLASSIFICATION	6.037308537051812E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999085517085	WITHOUT_CLASSIFICATION	9.144829155716505E-8	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999993962691464	WITHOUT_CLASSIFICATION	6.037308537051812E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998873671844852	WITHOUT_CLASSIFICATION	1.1263281551488635E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9999806185379428	WITHOUT_CLASSIFICATION	1.9381462057261128E-5	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999998797314226	WITHOUT_CLASSIFICATION	1.2026857741019254E-7	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999972773187693	WITHOUT_CLASSIFICATION	2.722681230685071E-6	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999990625409119	WITHOUT_CLASSIFICATION	9.374590881031135E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999997162127771	WITHOUT_CLASSIFICATION	2.837872229521519E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999992926299613	WITHOUT_CLASSIFICATION	7.073700386273608E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9990838431565419	WITHOUT_CLASSIFICATION	9.161568434581025E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999930014119245	WITHOUT_CLASSIFICATION	6.998588075425724E-6	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999918819004934	WITHOUT_CLASSIFICATION	8.118099506536565E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999998263053703	WITHOUT_CLASSIFICATION	1.736946297458121E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999453168018728	WITHOUT_CLASSIFICATION	5.4683198127311545E-5	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999928558168598	WITHOUT_CLASSIFICATION	7.14418314019994E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9991384207960794	WITHOUT_CLASSIFICATION	8.615792039206345E-4	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999777722620329	WITHOUT_CLASSIFICATION	2.222773796718231E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999990475307153	WITHOUT_CLASSIFICATION	9.524692845324673E-7	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999949703563392	WITHOUT_CLASSIFICATION	5.029643660775288E-6	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999896522337804	WITHOUT_CLASSIFICATION	1.034776621966774E-5	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999651072023984	WITHOUT_CLASSIFICATION	3.489279760164032E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999976627855973	WITHOUT_CLASSIFICATION	2.3372144027145076E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999940599992431	WITHOUT_CLASSIFICATION	5.940000756977628E-6	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999983060848113	WITHOUT_CLASSIFICATION	1.6939151886505436E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999998865426122	WITHOUT_CLASSIFICATION	1.134573878019552E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999992926299613	WITHOUT_CLASSIFICATION	7.073700386273608E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999974702067186	WITHOUT_CLASSIFICATION	2.5297932814512572E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997362355348	WITHOUT_CLASSIFICATION	2.63764465112936E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997362355348	WITHOUT_CLASSIFICATION	2.63764465112936E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999997332205779	WITHOUT_CLASSIFICATION	2.6677942202625906E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999997074873253	WITHOUT_CLASSIFICATION	2.9251267483002275E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999997074873253	WITHOUT_CLASSIFICATION	2.9251267483002275E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999996053584892	WITHOUT_CLASSIFICATION	3.946415108427778E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999996053584892	WITHOUT_CLASSIFICATION	3.946415108427778E-7	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9999598420377557	WITHOUT_CLASSIFICATION	4.015796224440288E-5	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999968092227577	WITHOUT_CLASSIFICATION	3.1907772422644003E-6	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999993192955511	WITHOUT_CLASSIFICATION	6.807044490065442E-7	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999794756332779	WITHOUT_CLASSIFICATION	2.0524366722079507E-5	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999982601636999	WITHOUT_CLASSIFICATION	1.7398363001726006E-6	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999995968837048	WITHOUT_CLASSIFICATION	4.0311629517462196E-7	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999904966121974	WITHOUT_CLASSIFICATION	9.503387802676941E-6	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999976024414605	WITHOUT_CLASSIFICATION	2.397558539523379E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999997748911912	WITHOUT_CLASSIFICATION	2.2510880889827587E-7	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999995790578604	WITHOUT_CLASSIFICATION	4.209421396866589E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999998998893983	WITHOUT_CLASSIFICATION	1.0011060164121057E-7	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999936480230832	WITHOUT_CLASSIFICATION	6.3519769168552475E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999981635491281	WITHOUT_CLASSIFICATION	1.8364508719410073E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999997205112378	WITHOUT_CLASSIFICATION	2.794887621991077E-7	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999998002520418	WITHOUT_CLASSIFICATION	1.9974795812319544E-7	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999973969921591	WITHOUT_CLASSIFICATION	2.603007840842697E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999991885731883	WITHOUT_CLASSIFICATION	8.114268117149693E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999559507313891	WITHOUT_CLASSIFICATION	4.4049268610993336E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999559507313891	WITHOUT_CLASSIFICATION	4.4049268610993336E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999984290429468	WITHOUT_CLASSIFICATION	1.5709570531722624E-6	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9997591411395681	WITHOUT_CLASSIFICATION	2.4085886043183604E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999996147954445	WITHOUT_CLASSIFICATION	3.852045555428406E-7	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999940587579588	WITHOUT_CLASSIFICATION	5.9412420412164545E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999999664036545	WITHOUT_CLASSIFICATION	3.359634554173182E-8	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999968101066457	WITHOUT_CLASSIFICATION	3.1898933542980815E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999998826238328	WITHOUT_CLASSIFICATION	1.1737616720808913E-7	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.999993302735595	WITHOUT_CLASSIFICATION	6.697264405053929E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999968451896513	WITHOUT_CLASSIFICATION	3.1548103488425654E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999997842250319	WITHOUT_CLASSIFICATION	2.1577496812493395E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999095896572	WITHOUT_CLASSIFICATION	9.04103428272177E-8	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999959735766123	WITHOUT_CLASSIFICATION	4.02642338763391E-6	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.999997879953555	WITHOUT_CLASSIFICATION	2.120046444900736E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.99999986453901	WITHOUT_CLASSIFICATION	1.3546098997578152E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999983434395656	WITHOUT_CLASSIFICATION	1.6565604344131854E-6	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999962146462725	WITHOUT_CLASSIFICATION	3.785353727485631E-6	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999572443213582	WITHOUT_CLASSIFICATION	4.2755678641866715E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.999908467238759	WITHOUT_CLASSIFICATION	9.153276124095938E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9998980935498221	WITHOUT_CLASSIFICATION	1.01906450177927E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999881742890664	WITHOUT_CLASSIFICATION	1.1825710933546109E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999947891375667	WITHOUT_CLASSIFICATION	5.21086243330005E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999968657645042	WITHOUT_CLASSIFICATION	3.134235495926257E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999960372393068	WITHOUT_CLASSIFICATION	3.9627606931936694E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999999761425458	WITHOUT_CLASSIFICATION	2.385745425555402E-8	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999913604847	WITHOUT_CLASSIFICATION	8.639515383700773E-9	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999950083902	WITHOUT_CLASSIFICATION	4.991609845913509E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999910484221	WITHOUT_CLASSIFICATION	8.951577920476364E-9	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999464735089	WITHOUT_CLASSIFICATION	5.3526491006298544E-8	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999978800396644	WITHOUT_CLASSIFICATION	2.1199603355873935E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.999939074690486	WITHOUT_CLASSIFICATION	6.092530951404791E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999752680723119	WITHOUT_CLASSIFICATION	2.4731927688177712E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999980647237426	WITHOUT_CLASSIFICATION	1.9352762574283984E-6	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.99971779633722	WITHOUT_CLASSIFICATION	2.822036627799587E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999992128365863	WITHOUT_CLASSIFICATION	7.871634136202246E-7	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999958040131961	WITHOUT_CLASSIFICATION	4.195986803954751E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999855291208148	WITHOUT_CLASSIFICATION	1.4470879185085965E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9999981308223604	WITHOUT_CLASSIFICATION	1.8691776394483078E-6	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.99997968579284	WITHOUT_CLASSIFICATION	2.031420716002108E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.999997828496971	WITHOUT_CLASSIFICATION	2.1715030288662782E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999825319055	WITHOUT_CLASSIFICATION	1.746809451866733E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999996303415378	WITHOUT_CLASSIFICATION	3.6965846213262357E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999990936099313	WITHOUT_CLASSIFICATION	9.063900686255147E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999998521538899	WITHOUT_CLASSIFICATION	1.4784611014880634E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999996533368767	WITHOUT_CLASSIFICATION	3.466631233094742E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999977064230957	WITHOUT_CLASSIFICATION	2.2935769043346106E-6	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999180964793	WITHOUT_CLASSIFICATION	8.19035207284394E-8	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999994816169298	WITHOUT_CLASSIFICATION	5.183830701513001E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999996533368767	WITHOUT_CLASSIFICATION	3.466631233094742E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999993434783834	WITHOUT_CLASSIFICATION	6.565216165851049E-7	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999989047478905	WITHOUT_CLASSIFICATION	1.095252109522403E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999979906704677	WITHOUT_CLASSIFICATION	2.009329532268742E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999741105013433	WITHOUT_CLASSIFICATION	2.58894986566842E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999974054158903	WITHOUT_CLASSIFICATION	2.594584109695534E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999977064230957	WITHOUT_CLASSIFICATION	2.2935769043346106E-6	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999994816169298	WITHOUT_CLASSIFICATION	5.183830701513001E-7	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999593188437486	WITHOUT_CLASSIFICATION	4.068115625155092E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999275675612	WITHOUT_CLASSIFICATION	7.243243880414895E-8	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999814827421672	WITHOUT_CLASSIFICATION	1.851725783281308E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999994654037636	WITHOUT_CLASSIFICATION	5.345962364303627E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997199434735344	WITHOUT_CLASSIFICATION	2.8005652646548995E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999638224307527	WITHOUT_CLASSIFICATION	3.617756924734392E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999950680079944	WITHOUT_CLASSIFICATION	4.931992005626439E-6	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999987769771012	WITHOUT_CLASSIFICATION	1.2230228988553403E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999949972669088	WITHOUT_CLASSIFICATION	5.002733091200854E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999949972669088	WITHOUT_CLASSIFICATION	5.002733091200854E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999981116329397	WITHOUT_CLASSIFICATION	1.8883670602384245E-6	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.999992181357374	WITHOUT_CLASSIFICATION	7.818642625986513E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.999999513436715	WITHOUT_CLASSIFICATION	4.865632849415648E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999997628128403	WITHOUT_CLASSIFICATION	2.3718715961734928E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999977002197502	WITHOUT_CLASSIFICATION	2.299780249717504E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999999544664773	WITHOUT_CLASSIFICATION	4.5533522705531374E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999999544664773	WITHOUT_CLASSIFICATION	4.5533522705531374E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997908421883	WITHOUT_CLASSIFICATION	2.091578117191556E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999950021462973	WITHOUT_CLASSIFICATION	4.9978537027713345E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999993869097012	WITHOUT_CLASSIFICATION	6.130902987046349E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999732293726581	WITHOUT_CLASSIFICATION	2.677062734190536E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999974143715972	WITHOUT_CLASSIFICATION	2.5856284028445738E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.999940810535097	WITHOUT_CLASSIFICATION	5.91894649030338E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999849230397085	WITHOUT_CLASSIFICATION	1.5076960291411228E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999818061257078	WITHOUT_CLASSIFICATION	1.819387429231269E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.999999391203259	WITHOUT_CLASSIFICATION	6.087967410124472E-7	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999632459452894	WITHOUT_CLASSIFICATION	3.6754054710536476E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999995221287935	WITHOUT_CLASSIFICATION	4.778712065540529E-7	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999552966903	WITHOUT_CLASSIFICATION	4.470330981382416E-8	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999989869584011	WITHOUT_CLASSIFICATION	1.0130415989070804E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9992854565538083	WITHOUT_CLASSIFICATION	7.14543446191662E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.999997351361128	WITHOUT_CLASSIFICATION	2.6486388720563534E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9992728782938699	WITHOUT_CLASSIFICATION	7.271217061301075E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9997787734917457	WITHOUT_CLASSIFICATION	2.212265082542015E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999989768360498	WITHOUT_CLASSIFICATION	1.0231639502019586E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9992753965673026	WITHOUT_CLASSIFICATION	7.24603432697357E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.999791976304618	WITHOUT_CLASSIFICATION	2.0802369538198452E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9991090191709493	WITHOUT_CLASSIFICATION	8.909808290506491E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9997950791824112	WITHOUT_CLASSIFICATION	2.0492081758880063E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999853921598888	WITHOUT_CLASSIFICATION	1.4607840111143837E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999725995980029	WITHOUT_CLASSIFICATION	2.7400401996985662E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999932839616398	WITHOUT_CLASSIFICATION	6.716038360209958E-6	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.999806836807079	WITHOUT_CLASSIFICATION	1.9316319292092288E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9996807503378671	WITHOUT_CLASSIFICATION	3.1924966213294647E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999993869097012	WITHOUT_CLASSIFICATION	6.130902987046349E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999732293726581	WITHOUT_CLASSIFICATION	2.677062734190536E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999935371084386	WITHOUT_CLASSIFICATION	6.4628915614016204E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999898480601507	WITHOUT_CLASSIFICATION	1.0151939849456753E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999684217375798	WITHOUT_CLASSIFICATION	3.1578262420221094E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9996885748184078	WITHOUT_CLASSIFICATION	3.114251815922873E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9997222300898424	WITHOUT_CLASSIFICATION	2.777699101576227E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999929278744172	WITHOUT_CLASSIFICATION	7.072125582788733E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999821764566681	WITHOUT_CLASSIFICATION	1.7823543331938084E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999821764566681	WITHOUT_CLASSIFICATION	1.7823543331938084E-5	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9997641966571702	WITHOUT_CLASSIFICATION	2.3580334282969834E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999701651325344	WITHOUT_CLASSIFICATION	2.9834867465526215E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9997928240043552	WITHOUT_CLASSIFICATION	2.071759956447357E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999993568542985	WITHOUT_CLASSIFICATION	6.431457014938453E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999993568542985	WITHOUT_CLASSIFICATION	6.431457014938453E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999931824106719	WITHOUT_CLASSIFICATION	6.817589328088918E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999875561440239	WITHOUT_CLASSIFICATION	1.2443855976136835E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999997084127951	WITHOUT_CLASSIFICATION	2.9158720492981607E-7	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999979509908835	WITHOUT_CLASSIFICATION	2.049009116509235E-6	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.999999611836364	WITHOUT_CLASSIFICATION	3.881636360782034E-7	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999958236331304	WITHOUT_CLASSIFICATION	4.176366869510975E-6	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999920538571833	WITHOUT_CLASSIFICATION	7.946142816692878E-6	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999937733209969	WITHOUT_CLASSIFICATION	6.226679003091092E-6	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999728455426178	WITHOUT_CLASSIFICATION	2.7154457382175626E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999831440397233	WITHOUT_CLASSIFICATION	1.685596027675213E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999991252134922	WITHOUT_CLASSIFICATION	8.747865078866425E-7	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999991252134922	WITHOUT_CLASSIFICATION	8.747865078866425E-7	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995959462510102	WITHOUT_CLASSIFICATION	4.040537489897645E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999665422818423	WITHOUT_CLASSIFICATION	3.34577181576502E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999665422818423	WITHOUT_CLASSIFICATION	3.34577181576502E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999665422818423	WITHOUT_CLASSIFICATION	3.34577181576502E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995955454223343	WITHOUT_CLASSIFICATION	4.0445457766577817E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995955454223343	WITHOUT_CLASSIFICATION	4.0445457766577817E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999930369049876	WITHOUT_CLASSIFICATION	6.963095012278808E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999930369049876	WITHOUT_CLASSIFICATION	6.963095012278808E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999930369049876	WITHOUT_CLASSIFICATION	6.963095012278808E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999956332549572	WITHOUT_CLASSIFICATION	4.366745042870813E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999956332549572	WITHOUT_CLASSIFICATION	4.366745042870813E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999956332549572	WITHOUT_CLASSIFICATION	4.366745042870813E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999969772306265	WITHOUT_CLASSIFICATION	3.0227693733865027E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999969772306265	WITHOUT_CLASSIFICATION	3.0227693733865027E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999990383431874	WITHOUT_CLASSIFICATION	9.616568126623923E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999990383431874	WITHOUT_CLASSIFICATION	9.616568126623923E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999989488719796	WITHOUT_CLASSIFICATION	1.0511280203619187E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999989488719796	WITHOUT_CLASSIFICATION	1.0511280203619187E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999927016936283	WITHOUT_CLASSIFICATION	7.298306371730248E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999927016936283	WITHOUT_CLASSIFICATION	7.298306371730248E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999985400362468	WITHOUT_CLASSIFICATION	1.4599637532311114E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999985400362468	WITHOUT_CLASSIFICATION	1.4599637532311114E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999923445782496	WITHOUT_CLASSIFICATION	7.655421750387275E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999923445782496	WITHOUT_CLASSIFICATION	7.655421750387275E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999987455924533	WITHOUT_CLASSIFICATION	1.254407546754556E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999987455924533	WITHOUT_CLASSIFICATION	1.254407546754556E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999969772306265	WITHOUT_CLASSIFICATION	3.0227693733865027E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999990383431874	WITHOUT_CLASSIFICATION	9.616568126623923E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999989488719796	WITHOUT_CLASSIFICATION	1.0511280203619187E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999985400362468	WITHOUT_CLASSIFICATION	1.4599637532311114E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999923445782496	WITHOUT_CLASSIFICATION	7.655421750387275E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999987455924533	WITHOUT_CLASSIFICATION	1.254407546754556E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999964975361283	WITHOUT_CLASSIFICATION	3.5024638716603675E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.999993637038446	WITHOUT_CLASSIFICATION	6.3629615539321704E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999038508282252	WITHOUT_CLASSIFICATION	9.61491717747834E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9992781454234549	WITHOUT_CLASSIFICATION	7.218545765450894E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999955796291391	WITHOUT_CLASSIFICATION	4.420370860862599E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999959994523309	WITHOUT_CLASSIFICATION	4.000547669124785E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999358889895555	WITHOUT_CLASSIFICATION	6.411101044446452E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999936435703991	WITHOUT_CLASSIFICATION	6.3564296008015715E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999970230303333	WITHOUT_CLASSIFICATION	2.976969666684947E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999993002027006	WITHOUT_CLASSIFICATION	6.997972994348934E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999983698294183	WITHOUT_CLASSIFICATION	1.6301705816495104E-6	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999984771990633	WITHOUT_CLASSIFICATION	1.522800936688829E-6	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.999997457506342	WITHOUT_CLASSIFICATION	2.542493657995394E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.999998435436263	WITHOUT_CLASSIFICATION	1.5645637369853907E-6	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999984744027157	WITHOUT_CLASSIFICATION	1.5255972843533105E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999952980270411	WITHOUT_CLASSIFICATION	4.701972958837571E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999988099152902	WITHOUT_CLASSIFICATION	1.190084709769193E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999802562160399	WITHOUT_CLASSIFICATION	1.974378396018402E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999977552646304	WITHOUT_CLASSIFICATION	2.244735369615078E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999958687188666	WITHOUT_CLASSIFICATION	4.131281133362017E-6	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999969035406683	WITHOUT_CLASSIFICATION	3.0964593317490913E-6	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999993342136149	WITHOUT_CLASSIFICATION	6.657863851161398E-7	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999984299832008	WITHOUT_CLASSIFICATION	1.5700167991955647E-6	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999918886136666	WITHOUT_CLASSIFICATION	8.111386333483614E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999951165413727	WITHOUT_CLASSIFICATION	4.883458627312681E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999962920182068	WITHOUT_CLASSIFICATION	3.707981793109181E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999949340703814	WITHOUT_CLASSIFICATION	5.065929618539085E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.999994733703357	WITHOUT_CLASSIFICATION	5.266296643021891E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999995719869239	WITHOUT_CLASSIFICATION	4.2801307616198565E-7	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999825823731994	WITHOUT_CLASSIFICATION	1.7417626800628707E-5	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999824667088926	WITHOUT_CLASSIFICATION	1.7533291107462452E-5	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999910997343274	WITHOUT_CLASSIFICATION	8.900265672650862E-6	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999992755090423	WITHOUT_CLASSIFICATION	7.244909575998444E-7	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999992755090423	WITHOUT_CLASSIFICATION	7.244909575998444E-7	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999905843371767	WITHOUT_CLASSIFICATION	9.415662823223654E-6	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999988819726204	WITHOUT_CLASSIFICATION	1.1180273795553053E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999926721144172	WITHOUT_CLASSIFICATION	7.327885582751094E-6	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999997979926392	WITHOUT_CLASSIFICATION	2.0200736094141325E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999765843749383	WITHOUT_CLASSIFICATION	2.3415625061738803E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999974045467828	WITHOUT_CLASSIFICATION	2.5954532172033714E-5	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999999713224756	WITHOUT_CLASSIFICATION	2.8677524280861836E-8	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999696654453366	WITHOUT_CLASSIFICATION	3.0334554663344125E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999976889634858	WITHOUT_CLASSIFICATION	2.3110365141487874E-6	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999999345443824	WITHOUT_CLASSIFICATION	6.54556175405648E-8	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999945361823529	WITHOUT_CLASSIFICATION	5.463817647063473E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999961885046594	WITHOUT_CLASSIFICATION	3.8114953406927703E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999994482267457	WITHOUT_CLASSIFICATION	5.517732542968874E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999994482267457	WITHOUT_CLASSIFICATION	5.517732542968874E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999949194507455	WITHOUT_CLASSIFICATION	5.080549254424454E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999949194507455	WITHOUT_CLASSIFICATION	5.080549254424454E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999949194507455	WITHOUT_CLASSIFICATION	5.080549254424454E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999872675050321	WITHOUT_CLASSIFICATION	1.2732494967884212E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999890782171175	WITHOUT_CLASSIFICATION	1.0921782882447119E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999932217748384	WITHOUT_CLASSIFICATION	6.778225161516102E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999932217748384	WITHOUT_CLASSIFICATION	6.778225161516102E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.999999645419488	WITHOUT_CLASSIFICATION	3.545805119253111E-7	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999969268202707	WITHOUT_CLASSIFICATION	3.073179729330201E-6	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999992794528002	WITHOUT_CLASSIFICATION	7.205471997766947E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999740009748325	WITHOUT_CLASSIFICATION	2.599902516758144E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999998787915411	WITHOUT_CLASSIFICATION	1.212084589851761E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999938386044309	WITHOUT_CLASSIFICATION	6.1613955690278796E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999829047374811	WITHOUT_CLASSIFICATION	1.7095262518923752E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999993152196002	WITHOUT_CLASSIFICATION	6.847803998989023E-7	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999816908388429	WITHOUT_CLASSIFICATION	1.8309161157085066E-5	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999955456450618	WITHOUT_CLASSIFICATION	4.454354938311954E-6	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.999998748168734	WITHOUT_CLASSIFICATION	1.251831265934982E-6	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999978646350629	WITHOUT_CLASSIFICATION	2.135364937177792E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999989636531005	WITHOUT_CLASSIFICATION	1.0363468995432983E-6	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999964439997292	WITHOUT_CLASSIFICATION	3.556000270938172E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999893893925591	WITHOUT_CLASSIFICATION	1.0610607440815555E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999935766118131	WITHOUT_CLASSIFICATION	6.423388186927262E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.999999014784241	WITHOUT_CLASSIFICATION	9.852157590588734E-7	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999951234217114	WITHOUT_CLASSIFICATION	4.876578288691994E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999944851709035	WITHOUT_CLASSIFICATION	5.5148290964221195E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999992046923084	WITHOUT_CLASSIFICATION	7.953076916617616E-7	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999962241850886	WITHOUT_CLASSIFICATION	3.7758149112669123E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999969975366123	WITHOUT_CLASSIFICATION	3.0024633877539685E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9996132939380169	WITHOUT_CLASSIFICATION	3.867060619830573E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999985677891183	WITHOUT_CLASSIFICATION	1.4322108817017012E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999985677891183	WITHOUT_CLASSIFICATION	1.4322108817017012E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999985677891183	WITHOUT_CLASSIFICATION	1.4322108817017012E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987509518898	WITHOUT_CLASSIFICATION	1.2490481100959454E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987509518898	WITHOUT_CLASSIFICATION	1.2490481100959454E-6	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999249376746406	WITHOUT_CLASSIFICATION	7.506232535931082E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999978894200025	WITHOUT_CLASSIFICATION	2.11057999749756E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999978894200025	WITHOUT_CLASSIFICATION	2.11057999749756E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999968946930109	WITHOUT_CLASSIFICATION	3.1053069890021163E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999682175806625	WITHOUT_CLASSIFICATION	3.178241933755361E-5	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999249376746406	WITHOUT_CLASSIFICATION	7.506232535931082E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999818962202698	WITHOUT_CLASSIFICATION	1.8103779730195862E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999249376746406	WITHOUT_CLASSIFICATION	7.506232535931082E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999555922983606	WITHOUT_CLASSIFICATION	4.4407701639384075E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999555922983606	WITHOUT_CLASSIFICATION	4.4407701639384075E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999994482267457	WITHOUT_CLASSIFICATION	5.517732542968874E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9999044428626981	WITHOUT_CLASSIFICATION	9.555713730192244E-5	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.998804024826247	WITHOUT_CLASSIFICATION	0.0011959751737530614	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9993225966213539	WITHOUT_CLASSIFICATION	6.774033786459471E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9987826672266255	WITHOUT_CLASSIFICATION	0.0012173327733745476	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9993314129837468	WITHOUT_CLASSIFICATION	6.685870162531839E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.998781180607514	WITHOUT_CLASSIFICATION	0.0012188193924860266	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9990542924745439	WITHOUT_CLASSIFICATION	9.457075254560649E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9988299595388855	WITHOUT_CLASSIFICATION	0.001170040461114499	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9987186843054927	WITHOUT_CLASSIFICATION	0.0012813156945072383	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9991353189270699	WITHOUT_CLASSIFICATION	8.64681072930192E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9992472541955769	WITHOUT_CLASSIFICATION	7.527458044231459E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9988918345133878	WITHOUT_CLASSIFICATION	0.0011081654866122372	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9983454671549797	WITHOUT_CLASSIFICATION	0.001654532845020238	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9991701490299549	WITHOUT_CLASSIFICATION	8.298509700449223E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9983503849397973	WITHOUT_CLASSIFICATION	0.0016496150602027105	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9991276754955436	WITHOUT_CLASSIFICATION	8.723245044563042E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.999210052028054	WITHOUT_CLASSIFICATION	7.899479719460547E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9988104694630707	WITHOUT_CLASSIFICATION	0.001189530536929346	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9993172238642959	WITHOUT_CLASSIFICATION	6.827761357040721E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9988080899878224	WITHOUT_CLASSIFICATION	0.001191910012177536	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9993121625399822	WITHOUT_CLASSIFICATION	6.878374600177739E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9991696031671605	WITHOUT_CLASSIFICATION	8.303968328394535E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9990081301761671	WITHOUT_CLASSIFICATION	9.918698238329526E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9994358158363592	WITHOUT_CLASSIFICATION	5.641841636407825E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9991424567762606	WITHOUT_CLASSIFICATION	8.575432237394509E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9986759589013801	WITHOUT_CLASSIFICATION	0.0013240410986199403	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9992334652543498	WITHOUT_CLASSIFICATION	7.665347456502686E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9987793487704056	WITHOUT_CLASSIFICATION	0.0012206512295943417	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9991163431175722	WITHOUT_CLASSIFICATION	8.836568824278745E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9985511732293681	WITHOUT_CLASSIFICATION	0.0014488267706318416	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9991020942042284	WITHOUT_CLASSIFICATION	8.979057957716425E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9990926290180663	WITHOUT_CLASSIFICATION	9.073709819336674E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.999267394764183	WITHOUT_CLASSIFICATION	7.326052358169286E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9992409603578719	WITHOUT_CLASSIFICATION	7.590396421280085E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9991545727362313	WITHOUT_CLASSIFICATION	8.454272637687249E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9981086110713278	WITHOUT_CLASSIFICATION	0.0018913889286721632	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.998940634559133	WITHOUT_CLASSIFICATION	0.0010593654408669504	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9988054724008999	WITHOUT_CLASSIFICATION	0.0011945275991000334	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9989040096775709	WITHOUT_CLASSIFICATION	0.001095990322429147	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9993017548727995	WITHOUT_CLASSIFICATION	6.982451272006099E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9990555595697883	WITHOUT_CLASSIFICATION	9.44440430211641E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9989647190037355	WITHOUT_CLASSIFICATION	0.0010352809962643936	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9987930370379822	WITHOUT_CLASSIFICATION	0.0012069629620178515	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9989026129404815	WITHOUT_CLASSIFICATION	0.0010973870595184386	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.998598375769539	WITHOUT_CLASSIFICATION	0.0014016242304609077	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.999011896895829	WITHOUT_CLASSIFICATION	9.881031041709832E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9988897751874357	WITHOUT_CLASSIFICATION	0.0011102248125642474	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9986325675372626	WITHOUT_CLASSIFICATION	0.0013674324627373905	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9980431027775177	WITHOUT_CLASSIFICATION	0.0019568972224823285	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9991840303982475	WITHOUT_CLASSIFICATION	8.159696017524377E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9993268908684164	WITHOUT_CLASSIFICATION	6.731091315835407E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9986745262370478	WITHOUT_CLASSIFICATION	0.0013254737629522628	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.998984570937641	WITHOUT_CLASSIFICATION	0.0010154290623589793	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9988191935882337	WITHOUT_CLASSIFICATION	0.0011808064117662383	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.999126149627584	WITHOUT_CLASSIFICATION	8.738503724160367E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9990660817811439	WITHOUT_CLASSIFICATION	9.339182188561116E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9994640233489356	WITHOUT_CLASSIFICATION	5.359766510643782E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9990345754920643	WITHOUT_CLASSIFICATION	9.654245079356733E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9990087644576002	WITHOUT_CLASSIFICATION	9.91235542399712E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9991124314985292	WITHOUT_CLASSIFICATION	8.875685014707705E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9986038859016878	WITHOUT_CLASSIFICATION	0.0013961140983122127	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.998888850347828	WITHOUT_CLASSIFICATION	0.001111149652171954	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9988009699787123	WITHOUT_CLASSIFICATION	0.0011990300212876865	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9986076028435465	WITHOUT_CLASSIFICATION	0.001392397156453445	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9992569985732975	WITHOUT_CLASSIFICATION	7.430014267024305E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9986219678144901	WITHOUT_CLASSIFICATION	0.0013780321855099077	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9989378140594598	WITHOUT_CLASSIFICATION	0.0010621859405400963	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9992244589101734	WITHOUT_CLASSIFICATION	7.755410898266028E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9991408756758068	WITHOUT_CLASSIFICATION	8.59124324193136E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9989990160222334	WITHOUT_CLASSIFICATION	0.0010009839777666142	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.998969173556774	WITHOUT_CLASSIFICATION	0.0010308264432261187	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9993370055034247	WITHOUT_CLASSIFICATION	6.629944965752706E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9989863381197216	WITHOUT_CLASSIFICATION	0.0010136618802784345	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9991134634707985	WITHOUT_CLASSIFICATION	8.865365292013846E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9991513474017903	WITHOUT_CLASSIFICATION	8.486525982095432E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9987006788322934	WITHOUT_CLASSIFICATION	0.0012993211677066348	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.998908024581675	WITHOUT_CLASSIFICATION	0.0010919754183249613	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9986265211502867	WITHOUT_CLASSIFICATION	0.0013734788497133227	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9990708182617516	WITHOUT_CLASSIFICATION	9.291817382483351E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9988934695058194	WITHOUT_CLASSIFICATION	0.0011065304941806824	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999805271464638	WITHOUT_CLASSIFICATION	1.9472853536307407E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999939509237056	WITHOUT_CLASSIFICATION	6.049076294507518E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999971808089492	WITHOUT_CLASSIFICATION	2.8191910507973206E-6	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999971281048421	WITHOUT_CLASSIFICATION	2.8718951578508405E-6	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999997641796876	WITHOUT_CLASSIFICATION	2.3582031232366923E-7	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999993846064533	WITHOUT_CLASSIFICATION	6.153935467078308E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999577378053789	WITHOUT_CLASSIFICATION	4.22621946211466E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999943402801634	WITHOUT_CLASSIFICATION	5.6597198364821224E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999973781545951	WITHOUT_CLASSIFICATION	2.6218454048735743E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999970095278107	WITHOUT_CLASSIFICATION	2.990472189328491E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999974045467828	WITHOUT_CLASSIFICATION	2.5954532172033714E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999872675050321	WITHOUT_CLASSIFICATION	1.2732494967884212E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999890782171175	WITHOUT_CLASSIFICATION	1.0921782882447119E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999932217748384	WITHOUT_CLASSIFICATION	6.778225161516102E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999951234217114	WITHOUT_CLASSIFICATION	4.876578288691994E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999944851709035	WITHOUT_CLASSIFICATION	5.5148290964221195E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999993494324376	WITHOUT_CLASSIFICATION	6.505675623996857E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987509518898	WITHOUT_CLASSIFICATION	1.2490481100959454E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999994482267457	WITHOUT_CLASSIFICATION	5.517732542968874E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999822862599411	WITHOUT_CLASSIFICATION	1.7713740058869605E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999942584048195	WITHOUT_CLASSIFICATION	5.741595180527789E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999977599998895	WITHOUT_CLASSIFICATION	2.240000110454607E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999892882987044	WITHOUT_CLASSIFICATION	1.0711701295651784E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999912880307972	WITHOUT_CLASSIFICATION	8.711969202750305E-6	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999929243548958	WITHOUT_CLASSIFICATION	7.075645104106019E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999996015170998	WITHOUT_CLASSIFICATION	3.984829001264654E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999995117881472	WITHOUT_CLASSIFICATION	4.88211852879216E-7	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999802562160399	WITHOUT_CLASSIFICATION	1.974378396018402E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999852443537062	WITHOUT_CLASSIFICATION	1.4755646293755763E-5	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999983280380866	WITHOUT_CLASSIFICATION	1.6719619134856398E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999990437393845	WITHOUT_CLASSIFICATION	9.56260615482914E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.999998420881301	WITHOUT_CLASSIFICATION	1.5791186990640361E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999961083435176	WITHOUT_CLASSIFICATION	3.891656482388894E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999968139721592	WITHOUT_CLASSIFICATION	3.186027840693085E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.999997905792666	WITHOUT_CLASSIFICATION	2.094207333984391E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999976579305284	WITHOUT_CLASSIFICATION	2.342069471684164E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999996404999539	WITHOUT_CLASSIFICATION	3.5950004604664295E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999998931660888	WITHOUT_CLASSIFICATION	1.0683391115952124E-7	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999815099922464	WITHOUT_CLASSIFICATION	1.849000775358622E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.999987860047525	WITHOUT_CLASSIFICATION	1.2139952474876904E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999770965597383	WITHOUT_CLASSIFICATION	2.29034402616831E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999971978531529	WITHOUT_CLASSIFICATION	2.8021468471242293E-6	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999984392077788	WITHOUT_CLASSIFICATION	1.5607922212410973E-6	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999292657771699	WITHOUT_CLASSIFICATION	7.07342228301233E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999994717936006	WITHOUT_CLASSIFICATION	5.282063994066322E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999901271125893	WITHOUT_CLASSIFICATION	9.872887410745281E-6	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999590917157	WITHOUT_CLASSIFICATION	4.0908284320692215E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.999994504492729	WITHOUT_CLASSIFICATION	5.4955072710000465E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999964385881546	WITHOUT_CLASSIFICATION	3.561411845427019E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999411704474159	WITHOUT_CLASSIFICATION	5.8829552584018794E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999943187278785	WITHOUT_CLASSIFICATION	5.681272121433981E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999943187278785	WITHOUT_CLASSIFICATION	5.681272121433981E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999975123290055	WITHOUT_CLASSIFICATION	2.487670994600826E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999766624983482	WITHOUT_CLASSIFICATION	2.3337501651877814E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.99997372058705	WITHOUT_CLASSIFICATION	2.6279412949968146E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999905104617033	WITHOUT_CLASSIFICATION	9.489538296779205E-6	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999797239526735	WITHOUT_CLASSIFICATION	2.027604732643602E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999974583887027	WITHOUT_CLASSIFICATION	2.541611297210713E-6	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999911809867996	WITHOUT_CLASSIFICATION	8.819013200442822E-6	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999997849624947	WITHOUT_CLASSIFICATION	2.1503750529768318E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999647724025635	WITHOUT_CLASSIFICATION	3.522759743644667E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999999515381538	WITHOUT_CLASSIFICATION	4.846184620052511E-8	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999988635749151	WITHOUT_CLASSIFICATION	1.1364250848350053E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999942803310328	WITHOUT_CLASSIFICATION	5.719668967212419E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999935438589649	WITHOUT_CLASSIFICATION	6.456141035121771E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999974288381562	WITHOUT_CLASSIFICATION	2.5711618437694407E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999976472369365	WITHOUT_CLASSIFICATION	2.3527630635211685E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999951059220485	WITHOUT_CLASSIFICATION	4.894077951412593E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999986417700043	WITHOUT_CLASSIFICATION	1.3582299956320338E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999363358410612	WITHOUT_CLASSIFICATION	6.366415893881439E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999985048159508	WITHOUT_CLASSIFICATION	1.495184049243351E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999955134804072	WITHOUT_CLASSIFICATION	4.486519592828991E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999941482972328	WITHOUT_CLASSIFICATION	5.851702767288934E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999994914872603	WITHOUT_CLASSIFICATION	5.085127397700347E-7	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999979771858457	WITHOUT_CLASSIFICATION	2.0228141542985074E-6	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998716930504	WITHOUT_CLASSIFICATION	1.2830694971445314E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999995281354607	WITHOUT_CLASSIFICATION	4.718645392969238E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999990087703553	WITHOUT_CLASSIFICATION	9.912296446632726E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999998240048024	WITHOUT_CLASSIFICATION	1.7599519771696517E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999991837464254	WITHOUT_CLASSIFICATION	8.162535744839103E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999996729332721	WITHOUT_CLASSIFICATION	3.270667279005932E-7	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999996369831475	WITHOUT_CLASSIFICATION	3.6301685246957574E-7	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999811742950584	WITHOUT_CLASSIFICATION	1.8825704941555427E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999996784318591	WITHOUT_CLASSIFICATION	3.215681408632189E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999039860834	WITHOUT_CLASSIFICATION	9.601391650819773E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999268503772	WITHOUT_CLASSIFICATION	7.314962271223849E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999878600052268	WITHOUT_CLASSIFICATION	1.2139994773269074E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999997006758753	WITHOUT_CLASSIFICATION	2.9932412469295457E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999672417496348	WITHOUT_CLASSIFICATION	3.275825036530564E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999949966911332	WITHOUT_CLASSIFICATION	5.003308866794882E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999968459400075	WITHOUT_CLASSIFICATION	3.1540599924992473E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999991129107559	WITHOUT_CLASSIFICATION	8.870892440472192E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999611031785341	WITHOUT_CLASSIFICATION	3.889682146574102E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999976207038159	WITHOUT_CLASSIFICATION	2.379296184134401E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999870089484176	WITHOUT_CLASSIFICATION	1.2991051582419373E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999702615056744	WITHOUT_CLASSIFICATION	2.9738494325590412E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999992424900261	WITHOUT_CLASSIFICATION	7.575099738292669E-7	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999945226539139	WITHOUT_CLASSIFICATION	5.477346086085441E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999835276540411	WITHOUT_CLASSIFICATION	1.6472345958964897E-5	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999975477549542	WITHOUT_CLASSIFICATION	2.4522450457248847E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999955607718135	WITHOUT_CLASSIFICATION	4.4392281864348804E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999715662445859	WITHOUT_CLASSIFICATION	2.84337554140845E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999548578521643	WITHOUT_CLASSIFICATION	4.5142147835738086E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999945264447859	WITHOUT_CLASSIFICATION	5.473555214146562E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999958748576552	WITHOUT_CLASSIFICATION	4.1251423447621365E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999990939627585	WITHOUT_CLASSIFICATION	9.060372415101998E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999986564513075	WITHOUT_CLASSIFICATION	1.3435486924191212E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999884407653438	WITHOUT_CLASSIFICATION	1.1559234656133489E-5	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999845541962747	WITHOUT_CLASSIFICATION	1.5445803725155276E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999989674637482	WITHOUT_CLASSIFICATION	1.0325362518808204E-6	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999963096930348	WITHOUT_CLASSIFICATION	3.6903069651042183E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999987205621909	WITHOUT_CLASSIFICATION	1.27943780917997E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999995602533395	WITHOUT_CLASSIFICATION	4.3974666052190174E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999988047095426	WITHOUT_CLASSIFICATION	1.1952904573442823E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999989856376541	WITHOUT_CLASSIFICATION	1.0143623458724895E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999600402046	WITHOUT_CLASSIFICATION	3.995979530550335E-8	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.99999934640518	WITHOUT_CLASSIFICATION	6.535948201438552E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999988494822379	WITHOUT_CLASSIFICATION	1.1505177621456584E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999948743503196	WITHOUT_CLASSIFICATION	5.125649680281135E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999821906419126	WITHOUT_CLASSIFICATION	1.7809358087397606E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999996423602251	WITHOUT_CLASSIFICATION	3.576397749497694E-7	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999995007917863	WITHOUT_CLASSIFICATION	4.992082136334452E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.999998841996266	WITHOUT_CLASSIFICATION	1.1580037339924042E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999872792008696	WITHOUT_CLASSIFICATION	1.2720799130311566E-5	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999972238629439	WITHOUT_CLASSIFICATION	2.776137056039336E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999949835248708	WITHOUT_CLASSIFICATION	5.016475129257954E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999914202575196	WITHOUT_CLASSIFICATION	8.57974248041778E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999837682134542	WITHOUT_CLASSIFICATION	1.623178654568251E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999980414594164	WITHOUT_CLASSIFICATION	1.958540583582848E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999996399075738	WITHOUT_CLASSIFICATION	3.6009242611898553E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999995789483746	WITHOUT_CLASSIFICATION	4.210516253926409E-6	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999991570893327	WITHOUT_CLASSIFICATION	8.429106672294283E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999998018854989	WITHOUT_CLASSIFICATION	1.9811450111794562E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999955212169345	WITHOUT_CLASSIFICATION	4.478783065477387E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999995855508339	WITHOUT_CLASSIFICATION	4.144491660642969E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999882834196697	WITHOUT_CLASSIFICATION	1.1716580330220813E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999692666203	WITHOUT_CLASSIFICATION	3.073337963825683E-8	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999964076595195	WITHOUT_CLASSIFICATION	3.5923404806294647E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9997633640639471	WITHOUT_CLASSIFICATION	2.3663593605288216E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999755286525722	WITHOUT_CLASSIFICATION	2.4471347427713646E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999998621947188	WITHOUT_CLASSIFICATION	1.3780528122630438E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999870595525049	WITHOUT_CLASSIFICATION	1.2940447495060401E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999995059100895	WITHOUT_CLASSIFICATION	4.940899105723146E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.999999676727913	WITHOUT_CLASSIFICATION	3.232720869974214E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999991422814043	WITHOUT_CLASSIFICATION	8.577185957465168E-7	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999900366765158	WITHOUT_CLASSIFICATION	9.963323484292524E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987218526813	WITHOUT_CLASSIFICATION	1.278147318732263E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999977555603904	WITHOUT_CLASSIFICATION	2.2444396096670237E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999980058010368	WITHOUT_CLASSIFICATION	1.9941989632079564E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999996995569436	WITHOUT_CLASSIFICATION	3.004430564454545E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999983427731296	WITHOUT_CLASSIFICATION	1.6572268704196039E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997996787344	WITHOUT_CLASSIFICATION	2.0032126561276552E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999765520860239	WITHOUT_CLASSIFICATION	2.344791397611036E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999437264100645	WITHOUT_CLASSIFICATION	5.62735899355648E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9997913339538997	WITHOUT_CLASSIFICATION	2.0866604610038134E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999430373608518	WITHOUT_CLASSIFICATION	5.696263914810955E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998672442780984	WITHOUT_CLASSIFICATION	1.327557219016757E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999644501329517	WITHOUT_CLASSIFICATION	3.5549867048413936E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956358737316	WITHOUT_CLASSIFICATION	4.3641262684051266E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999539941716933	WITHOUT_CLASSIFICATION	4.6005828306829624E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999486680588049	WITHOUT_CLASSIFICATION	5.1331941195163494E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999525393779714	WITHOUT_CLASSIFICATION	4.746062202856479E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529159582277	WITHOUT_CLASSIFICATION	4.708404177242279E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999324266103035	WITHOUT_CLASSIFICATION	6.757338969653356E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999632849357037	WITHOUT_CLASSIFICATION	3.6715064296216886E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999073993956262	WITHOUT_CLASSIFICATION	9.26006043737995E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999435953367918	WITHOUT_CLASSIFICATION	5.640466320811813E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999121662476792	WITHOUT_CLASSIFICATION	8.783375232080228E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999318616341075	WITHOUT_CLASSIFICATION	6.813836589250129E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999959334955001	WITHOUT_CLASSIFICATION	4.066504499888968E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999577665455951	WITHOUT_CLASSIFICATION	4.223345440490092E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998215109566944	WITHOUT_CLASSIFICATION	1.7848904330552745E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998069624182527	WITHOUT_CLASSIFICATION	1.9303758174728637E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999328857244054	WITHOUT_CLASSIFICATION	6.711427559455538E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999320608543807	WITHOUT_CLASSIFICATION	6.793914561931041E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999534531160674	WITHOUT_CLASSIFICATION	4.654688393258892E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999257574786359	WITHOUT_CLASSIFICATION	7.424252136409935E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999368157150417	WITHOUT_CLASSIFICATION	6.31842849583086E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999634751479043	WITHOUT_CLASSIFICATION	3.652485209575607E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999634751479043	WITHOUT_CLASSIFICATION	3.652485209575607E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998517547178108	WITHOUT_CLASSIFICATION	1.4824528218917882E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999413270838334	WITHOUT_CLASSIFICATION	5.867291616647879E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999364004593533	WITHOUT_CLASSIFICATION	6.359954064671342E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999491881855483	WITHOUT_CLASSIFICATION	5.081181445170612E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998792189875875	WITHOUT_CLASSIFICATION	1.2078101241249515E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998521448284156	WITHOUT_CLASSIFICATION	1.478551715844823E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999409716959203	WITHOUT_CLASSIFICATION	5.9028304079702036E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999305594589692	WITHOUT_CLASSIFICATION	6.944054103071341E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999421673447624	WITHOUT_CLASSIFICATION	5.78326552376262E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999533389801486	WITHOUT_CLASSIFICATION	4.666101985136869E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999281598801324	WITHOUT_CLASSIFICATION	7.184011986758917E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999606968043	WITHOUT_CLASSIFICATION	3.930319570002606E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999515798979203	WITHOUT_CLASSIFICATION	4.842010207978283E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999940486051826	WITHOUT_CLASSIFICATION	5.951394817401293E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999950338798968	WITHOUT_CLASSIFICATION	4.966120103198908E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998719774162247	WITHOUT_CLASSIFICATION	1.280225837753441E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999517821241565	WITHOUT_CLASSIFICATION	4.821787584353169E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999633601313627	WITHOUT_CLASSIFICATION	3.663986863735305E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999415816876509	WITHOUT_CLASSIFICATION	5.841831234909144E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999302347801801	WITHOUT_CLASSIFICATION	6.976521982001752E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998924921152995	WITHOUT_CLASSIFICATION	1.0750788470053219E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646299012844	WITHOUT_CLASSIFICATION	3.537009871552195E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646299012844	WITHOUT_CLASSIFICATION	3.537009871552195E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553951735882	WITHOUT_CLASSIFICATION	4.46048264116956E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553951735882	WITHOUT_CLASSIFICATION	4.46048264116956E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999496137352769	WITHOUT_CLASSIFICATION	5.038626472306491E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999410223553187	WITHOUT_CLASSIFICATION	5.897764468135082E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999577665455951	WITHOUT_CLASSIFICATION	4.223345440490092E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999302347801801	WITHOUT_CLASSIFICATION	6.976521982001752E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646299012844	WITHOUT_CLASSIFICATION	3.537009871552195E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553951735882	WITHOUT_CLASSIFICATION	4.46048264116956E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999410223553187	WITHOUT_CLASSIFICATION	5.897764468135082E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999428931081596	WITHOUT_CLASSIFICATION	5.710689184032189E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999496269365937	WITHOUT_CLASSIFICATION	5.0373063406256123E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998155600864578	WITHOUT_CLASSIFICATION	1.8443991354219556E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607192098968	WITHOUT_CLASSIFICATION	1.392807901030725E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998161428553967	WITHOUT_CLASSIFICATION	1.8385714460322664E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999434940354506	WITHOUT_CLASSIFICATION	5.650596454951014E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999419750897116	WITHOUT_CLASSIFICATION	5.802491028833904E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529057903868	WITHOUT_CLASSIFICATION	4.709420961326263E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999419750897116	WITHOUT_CLASSIFICATION	5.802491028833904E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998544421832642	WITHOUT_CLASSIFICATION	1.455578167357727E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998581936372355	WITHOUT_CLASSIFICATION	1.4180636276449313E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999426840652056	WITHOUT_CLASSIFICATION	5.731593479449847E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999459199960513	WITHOUT_CLASSIFICATION	5.4080003948639325E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999508850311545	WITHOUT_CLASSIFICATION	4.911496884544273E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999864292202826	WITHOUT_CLASSIFICATION	1.357077971739253E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999607805772642	WITHOUT_CLASSIFICATION	3.921942273573382E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999533527152193	WITHOUT_CLASSIFICATION	4.664728478070284E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999933203777658	WITHOUT_CLASSIFICATION	6.679622234197143E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999417840731664	WITHOUT_CLASSIFICATION	5.8215926833733755E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99994561980847	WITHOUT_CLASSIFICATION	5.4380191530156506E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999473775901865	WITHOUT_CLASSIFICATION	5.26224098134342E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553099540804	WITHOUT_CLASSIFICATION	4.4690045919559314E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999400363449363	WITHOUT_CLASSIFICATION	5.9963655063531666E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999341380816416	WITHOUT_CLASSIFICATION	6.586191835843488E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999399212863345	WITHOUT_CLASSIFICATION	6.007871366561442E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999191536633216	WITHOUT_CLASSIFICATION	8.084633667843409E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999416973989419	WITHOUT_CLASSIFICATION	5.830260105822024E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999556968286191	WITHOUT_CLASSIFICATION	4.4303171380966824E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999362353464387	WITHOUT_CLASSIFICATION	6.37646535613088E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999955134804072	WITHOUT_CLASSIFICATION	4.486519592828991E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999527648655719	WITHOUT_CLASSIFICATION	4.723513442812023E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997199434735344	WITHOUT_CLASSIFICATION	2.8005652646548995E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999352282294899	WITHOUT_CLASSIFICATION	6.477177051013648E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99994561980847	WITHOUT_CLASSIFICATION	5.4380191530156506E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999356949712812	WITHOUT_CLASSIFICATION	6.430502871877645E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998271929891618	WITHOUT_CLASSIFICATION	1.7280701083827358E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999287529098655	WITHOUT_CLASSIFICATION	7.124709013459382E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999993400118878	WITHOUT_CLASSIFICATION	6.599881122265209E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999995226286119	WITHOUT_CLASSIFICATION	4.77371388102571E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999992555609247	WITHOUT_CLASSIFICATION	7.44439075244935E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999990894671206	WITHOUT_CLASSIFICATION	9.105328794478226E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999993349710733	WITHOUT_CLASSIFICATION	6.650289267146679E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999994867560797	WITHOUT_CLASSIFICATION	5.13243920242269E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999985031947838	WITHOUT_CLASSIFICATION	1.496805216224539E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999994209606597	WITHOUT_CLASSIFICATION	5.790393403226327E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999983113117146	WITHOUT_CLASSIFICATION	1.688688285490993E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999999543289701	WITHOUT_CLASSIFICATION	4.567102989938544E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999885928542229	WITHOUT_CLASSIFICATION	1.1407145777120609E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987218526813	WITHOUT_CLASSIFICATION	1.278147318732263E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999846968149941	WITHOUT_CLASSIFICATION	1.530318500588367E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987905164254	WITHOUT_CLASSIFICATION	1.209483574551639E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999942182701793	WITHOUT_CLASSIFICATION	5.781729820716802E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999991112439724	WITHOUT_CLASSIFICATION	8.887560276629056E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999994758352448	WITHOUT_CLASSIFICATION	5.241647551853114E-7	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999997591051154	WITHOUT_CLASSIFICATION	2.4089488458639177E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999992302612813	WITHOUT_CLASSIFICATION	7.697387187739716E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999993561372665	WITHOUT_CLASSIFICATION	6.438627334653471E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999960280160477	WITHOUT_CLASSIFICATION	3.97198395228334E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999901271125893	WITHOUT_CLASSIFICATION	9.872887410745281E-6	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999590917157	WITHOUT_CLASSIFICATION	4.0908284320692215E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.999994504492729	WITHOUT_CLASSIFICATION	5.4955072710000465E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999964385881546	WITHOUT_CLASSIFICATION	3.561411845427019E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999411704474159	WITHOUT_CLASSIFICATION	5.8829552584018794E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999943187278785	WITHOUT_CLASSIFICATION	5.681272121433981E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999766624983482	WITHOUT_CLASSIFICATION	2.3337501651877814E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.99997372058705	WITHOUT_CLASSIFICATION	2.6279412949968146E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999905104617033	WITHOUT_CLASSIFICATION	9.489538296779205E-6	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999797239526735	WITHOUT_CLASSIFICATION	2.027604732643602E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999974583887027	WITHOUT_CLASSIFICATION	2.541611297210713E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999981308921633	WITHOUT_CLASSIFICATION	1.8691078367912066E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999870595525049	WITHOUT_CLASSIFICATION	1.2940447495060401E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999999515381538	WITHOUT_CLASSIFICATION	4.846184620052511E-8	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999942803310328	WITHOUT_CLASSIFICATION	5.719668967212419E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999986417700043	WITHOUT_CLASSIFICATION	1.3582299956320338E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999363358410612	WITHOUT_CLASSIFICATION	6.366415893881439E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999985048159508	WITHOUT_CLASSIFICATION	1.495184049243351E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999647724025635	WITHOUT_CLASSIFICATION	3.522759743644667E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999988635749151	WITHOUT_CLASSIFICATION	1.1364250848350053E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999955134804072	WITHOUT_CLASSIFICATION	4.486519592828991E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999974288381562	WITHOUT_CLASSIFICATION	2.5711618437694407E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999994717936006	WITHOUT_CLASSIFICATION	5.282063994066322E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999935438589649	WITHOUT_CLASSIFICATION	6.456141035121771E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999979771858457	WITHOUT_CLASSIFICATION	2.0228141542985074E-6	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998716930504	WITHOUT_CLASSIFICATION	1.2830694971445314E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999995281354607	WITHOUT_CLASSIFICATION	4.718645392969238E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987218526813	WITHOUT_CLASSIFICATION	1.278147318732263E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997086787931726	WITHOUT_CLASSIFICATION	2.9132120682739943E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999909591365	WITHOUT_CLASSIFICATION	9.04086348187028E-9	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999998240048024	WITHOUT_CLASSIFICATION	1.7599519771696517E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999996729332721	WITHOUT_CLASSIFICATION	3.270667279005932E-7	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999995066306543	WITHOUT_CLASSIFICATION	4.933693457072061E-7	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999996369831475	WITHOUT_CLASSIFICATION	3.6301685246957574E-7	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999811742950584	WITHOUT_CLASSIFICATION	1.8825704941555427E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999039860834	WITHOUT_CLASSIFICATION	9.601391650819773E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999969804873	WITHOUT_CLASSIFICATION	3.0195127000378086E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999268503772	WITHOUT_CLASSIFICATION	7.314962271223849E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999878600052268	WITHOUT_CLASSIFICATION	1.2139994773269074E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999997006758753	WITHOUT_CLASSIFICATION	2.9932412469295457E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999961020190126	WITHOUT_CLASSIFICATION	3.897980987343198E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999672417496348	WITHOUT_CLASSIFICATION	3.275825036530564E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9985856309721953	WITHOUT_CLASSIFICATION	0.001414369027804649	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999611031785341	WITHOUT_CLASSIFICATION	3.889682146574102E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999949966911332	WITHOUT_CLASSIFICATION	5.003308866794882E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999968459400075	WITHOUT_CLASSIFICATION	3.1540599924992473E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999870089484176	WITHOUT_CLASSIFICATION	1.2991051582419373E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999702615056744	WITHOUT_CLASSIFICATION	2.9738494325590412E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999992424900261	WITHOUT_CLASSIFICATION	7.575099738292669E-7	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999777541576369	WITHOUT_CLASSIFICATION	2.2245842363183226E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999945226539139	WITHOUT_CLASSIFICATION	5.477346086085441E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999835276540411	WITHOUT_CLASSIFICATION	1.6472345958964897E-5	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999975477549542	WITHOUT_CLASSIFICATION	2.4522450457248847E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999955607718135	WITHOUT_CLASSIFICATION	4.4392281864348804E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999715662445859	WITHOUT_CLASSIFICATION	2.84337554140845E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999548578521643	WITHOUT_CLASSIFICATION	4.5142147835738086E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999945264447859	WITHOUT_CLASSIFICATION	5.473555214146562E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999958748576552	WITHOUT_CLASSIFICATION	4.1251423447621365E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999990939627585	WITHOUT_CLASSIFICATION	9.060372415101998E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999990939627585	WITHOUT_CLASSIFICATION	9.060372415101998E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999986564513075	WITHOUT_CLASSIFICATION	1.3435486924191212E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999884407653438	WITHOUT_CLASSIFICATION	1.1559234656133489E-5	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999845541962747	WITHOUT_CLASSIFICATION	1.5445803725155276E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999989674637482	WITHOUT_CLASSIFICATION	1.0325362518808204E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999987205621909	WITHOUT_CLASSIFICATION	1.27943780917997E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999995602533395	WITHOUT_CLASSIFICATION	4.3974666052190174E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999988047095426	WITHOUT_CLASSIFICATION	1.1952904573442823E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999989856376541	WITHOUT_CLASSIFICATION	1.0143623458724895E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.99999934640518	WITHOUT_CLASSIFICATION	6.535948201438552E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999973842112648	WITHOUT_CLASSIFICATION	2.6157887352353E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999988494822379	WITHOUT_CLASSIFICATION	1.1505177621456584E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999948743503196	WITHOUT_CLASSIFICATION	5.125649680281135E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999821906419126	WITHOUT_CLASSIFICATION	1.7809358087397606E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999996423602251	WITHOUT_CLASSIFICATION	3.576397749497694E-7	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999995007917863	WITHOUT_CLASSIFICATION	4.992082136334452E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999872792008696	WITHOUT_CLASSIFICATION	1.2720799130311566E-5	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999972238629439	WITHOUT_CLASSIFICATION	2.776137056039336E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999949835248708	WITHOUT_CLASSIFICATION	5.016475129257954E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999914202575196	WITHOUT_CLASSIFICATION	8.57974248041778E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999837682134542	WITHOUT_CLASSIFICATION	1.623178654568251E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999980414594164	WITHOUT_CLASSIFICATION	1.958540583582848E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999996399075738	WITHOUT_CLASSIFICATION	3.6009242611898553E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999995789483746	WITHOUT_CLASSIFICATION	4.210516253926409E-6	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999991570893327	WITHOUT_CLASSIFICATION	8.429106672294283E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999998018854989	WITHOUT_CLASSIFICATION	1.9811450111794562E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999955212169345	WITHOUT_CLASSIFICATION	4.478783065477387E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999882834196697	WITHOUT_CLASSIFICATION	1.1716580330220813E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999964076595195	WITHOUT_CLASSIFICATION	3.5923404806294647E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9997633640639471	WITHOUT_CLASSIFICATION	2.3663593605288216E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999755286525722	WITHOUT_CLASSIFICATION	2.4471347427713646E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999998621947188	WITHOUT_CLASSIFICATION	1.3780528122630438E-7	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999721801212201	WITHOUT_CLASSIFICATION	2.781987877989474E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999617363648682	WITHOUT_CLASSIFICATION	3.8263635131760406E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999998765126167	WITHOUT_CLASSIFICATION	1.234873833215352E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999995059100895	WITHOUT_CLASSIFICATION	4.940899105723146E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999995890667951	WITHOUT_CLASSIFICATION	4.109332048796596E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.999999676727913	WITHOUT_CLASSIFICATION	3.232720869974214E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999991422814043	WITHOUT_CLASSIFICATION	8.577185957465168E-7	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999900366765158	WITHOUT_CLASSIFICATION	9.963323484292524E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999998782822774	WITHOUT_CLASSIFICATION	1.217177225215914E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999977555603904	WITHOUT_CLASSIFICATION	2.2444396096670237E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999980058010368	WITHOUT_CLASSIFICATION	1.9941989632079564E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999996995569436	WITHOUT_CLASSIFICATION	3.004430564454545E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999983427731296	WITHOUT_CLASSIFICATION	1.6572268704196039E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997996787344	WITHOUT_CLASSIFICATION	2.0032126561276552E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999765520860239	WITHOUT_CLASSIFICATION	2.344791397611036E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999437264100645	WITHOUT_CLASSIFICATION	5.62735899355648E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9997913339538997	WITHOUT_CLASSIFICATION	2.0866604610038134E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999430373608518	WITHOUT_CLASSIFICATION	5.696263914810955E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999644501329517	WITHOUT_CLASSIFICATION	3.5549867048413936E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956358737316	WITHOUT_CLASSIFICATION	4.3641262684051266E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999539941716933	WITHOUT_CLASSIFICATION	4.6005828306829624E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999486680588049	WITHOUT_CLASSIFICATION	5.1331941195163494E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999558030621732	WITHOUT_CLASSIFICATION	4.419693782674036E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999525393779714	WITHOUT_CLASSIFICATION	4.746062202856479E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529159582277	WITHOUT_CLASSIFICATION	4.708404177242279E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999324266103035	WITHOUT_CLASSIFICATION	6.757338969653356E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999632849357037	WITHOUT_CLASSIFICATION	3.6715064296216886E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999073993956262	WITHOUT_CLASSIFICATION	9.26006043737995E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999435953367918	WITHOUT_CLASSIFICATION	5.640466320811813E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999121662476792	WITHOUT_CLASSIFICATION	8.783375232080228E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999258772516423	WITHOUT_CLASSIFICATION	7.412274835767807E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999959334955001	WITHOUT_CLASSIFICATION	4.066504499888968E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999577665455951	WITHOUT_CLASSIFICATION	4.223345440490092E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998069624182527	WITHOUT_CLASSIFICATION	1.9303758174728637E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999328857244054	WITHOUT_CLASSIFICATION	6.711427559455538E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999320608543807	WITHOUT_CLASSIFICATION	6.793914561931041E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999534531160674	WITHOUT_CLASSIFICATION	4.654688393258892E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999257574786359	WITHOUT_CLASSIFICATION	7.424252136409935E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999235962903024	WITHOUT_CLASSIFICATION	7.640370969761878E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999368157150417	WITHOUT_CLASSIFICATION	6.31842849583086E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999634751479043	WITHOUT_CLASSIFICATION	3.652485209575607E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999413270838334	WITHOUT_CLASSIFICATION	5.867291616647879E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999305594589692	WITHOUT_CLASSIFICATION	6.944054103071341E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999634751479043	WITHOUT_CLASSIFICATION	3.652485209575607E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999364004593533	WITHOUT_CLASSIFICATION	6.359954064671342E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999491881855483	WITHOUT_CLASSIFICATION	5.081181445170612E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998792189875875	WITHOUT_CLASSIFICATION	1.2078101241249515E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998521448284156	WITHOUT_CLASSIFICATION	1.478551715844823E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999409716959203	WITHOUT_CLASSIFICATION	5.9028304079702036E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999421673447624	WITHOUT_CLASSIFICATION	5.78326552376262E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999533389801486	WITHOUT_CLASSIFICATION	4.666101985136869E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999281598801324	WITHOUT_CLASSIFICATION	7.184011986758917E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999606968043	WITHOUT_CLASSIFICATION	3.930319570002606E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999515798979203	WITHOUT_CLASSIFICATION	4.842010207978283E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999920383943416	WITHOUT_CLASSIFICATION	7.961605658402993E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998359996664405	WITHOUT_CLASSIFICATION	1.6400033355950099E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999950338798968	WITHOUT_CLASSIFICATION	4.966120103198908E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998719774162247	WITHOUT_CLASSIFICATION	1.280225837753441E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999633601313627	WITHOUT_CLASSIFICATION	3.663986863735305E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999597068177287	WITHOUT_CLASSIFICATION	4.029318227124779E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999517821241565	WITHOUT_CLASSIFICATION	4.821787584353169E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999415816876509	WITHOUT_CLASSIFICATION	5.841831234909144E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999302347801801	WITHOUT_CLASSIFICATION	6.976521982001752E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646299012844	WITHOUT_CLASSIFICATION	3.537009871552195E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646299012844	WITHOUT_CLASSIFICATION	3.537009871552195E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553951735882	WITHOUT_CLASSIFICATION	4.46048264116956E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553951735882	WITHOUT_CLASSIFICATION	4.46048264116956E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999496137352769	WITHOUT_CLASSIFICATION	5.038626472306491E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999496137352769	WITHOUT_CLASSIFICATION	5.038626472306491E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999410223553187	WITHOUT_CLASSIFICATION	5.897764468135082E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999428931081596	WITHOUT_CLASSIFICATION	5.710689184032189E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999577665455951	WITHOUT_CLASSIFICATION	4.223345440490092E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999302347801801	WITHOUT_CLASSIFICATION	6.976521982001752E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646299012844	WITHOUT_CLASSIFICATION	3.537009871552195E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553951735882	WITHOUT_CLASSIFICATION	4.46048264116956E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999496269365937	WITHOUT_CLASSIFICATION	5.0373063406256123E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998155600864578	WITHOUT_CLASSIFICATION	1.8443991354219556E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607192098968	WITHOUT_CLASSIFICATION	1.392807901030725E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998161428553967	WITHOUT_CLASSIFICATION	1.8385714460322664E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999434940354506	WITHOUT_CLASSIFICATION	5.650596454951014E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529057903868	WITHOUT_CLASSIFICATION	4.709420961326263E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529057903868	WITHOUT_CLASSIFICATION	4.709420961326263E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999419750897116	WITHOUT_CLASSIFICATION	5.802491028833904E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998544421832642	WITHOUT_CLASSIFICATION	1.455578167357727E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998581936372355	WITHOUT_CLASSIFICATION	1.4180636276449313E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999426840652056	WITHOUT_CLASSIFICATION	5.731593479449847E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999459199960513	WITHOUT_CLASSIFICATION	5.4080003948639325E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428228841715	WITHOUT_CLASSIFICATION	5.717711582847578E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536748178618	WITHOUT_CLASSIFICATION	4.632518213823572E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999419750897116	WITHOUT_CLASSIFICATION	5.802491028833904E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999508850311545	WITHOUT_CLASSIFICATION	4.911496884544273E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999864292202826	WITHOUT_CLASSIFICATION	1.357077971739253E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999607805772642	WITHOUT_CLASSIFICATION	3.921942273573382E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999933203777658	WITHOUT_CLASSIFICATION	6.679622234197143E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999417840731664	WITHOUT_CLASSIFICATION	5.8215926833733755E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99994561980847	WITHOUT_CLASSIFICATION	5.4380191530156506E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999473775901865	WITHOUT_CLASSIFICATION	5.26224098134342E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999553099540804	WITHOUT_CLASSIFICATION	4.4690045919559314E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999400363449363	WITHOUT_CLASSIFICATION	5.9963655063531666E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999341380816416	WITHOUT_CLASSIFICATION	6.586191835843488E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999399212863345	WITHOUT_CLASSIFICATION	6.007871366561442E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999191536633216	WITHOUT_CLASSIFICATION	8.084633667843409E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999416973989419	WITHOUT_CLASSIFICATION	5.830260105822024E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999556968286191	WITHOUT_CLASSIFICATION	4.4303171380966824E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999362353464387	WITHOUT_CLASSIFICATION	6.37646535613088E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999567623082045	WITHOUT_CLASSIFICATION	4.323769179561033E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999352282294899	WITHOUT_CLASSIFICATION	6.477177051013648E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99994561980847	WITHOUT_CLASSIFICATION	5.4380191530156506E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999356949712812	WITHOUT_CLASSIFICATION	6.430502871877645E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998271929891618	WITHOUT_CLASSIFICATION	1.7280701083827358E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999287529098655	WITHOUT_CLASSIFICATION	7.124709013459382E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997086787931726	WITHOUT_CLASSIFICATION	2.9132120682739943E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999993400118878	WITHOUT_CLASSIFICATION	6.599881122265209E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999995226286119	WITHOUT_CLASSIFICATION	4.77371388102571E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999992555609247	WITHOUT_CLASSIFICATION	7.44439075244935E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999990894671206	WITHOUT_CLASSIFICATION	9.105328794478226E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999993349710733	WITHOUT_CLASSIFICATION	6.650289267146679E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999994867560797	WITHOUT_CLASSIFICATION	5.13243920242269E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999985031947838	WITHOUT_CLASSIFICATION	1.496805216224539E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999994209606597	WITHOUT_CLASSIFICATION	5.790393403226327E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999983113117146	WITHOUT_CLASSIFICATION	1.688688285490993E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999999543289701	WITHOUT_CLASSIFICATION	4.567102989938544E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999885928542229	WITHOUT_CLASSIFICATION	1.1407145777120609E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987218526813	WITHOUT_CLASSIFICATION	1.278147318732263E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999846968149941	WITHOUT_CLASSIFICATION	1.530318500588367E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987905164254	WITHOUT_CLASSIFICATION	1.209483574551639E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999942182701793	WITHOUT_CLASSIFICATION	5.781729820716802E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999991112439724	WITHOUT_CLASSIFICATION	8.887560276629056E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999955134804072	WITHOUT_CLASSIFICATION	4.486519592828991E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999994758352448	WITHOUT_CLASSIFICATION	5.241647551853114E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999994758352448	WITHOUT_CLASSIFICATION	5.241647551853114E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999992302612813	WITHOUT_CLASSIFICATION	7.697387187739716E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999993561372665	WITHOUT_CLASSIFICATION	6.438627334653471E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999909591365	WITHOUT_CLASSIFICATION	9.04086348187028E-9	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999984093867988	WITHOUT_CLASSIFICATION	1.5906132011684753E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999984093867988	WITHOUT_CLASSIFICATION	1.5906132011684753E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9997812101103155	WITHOUT_CLASSIFICATION	2.1878988968444677E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9998945815989239	WITHOUT_CLASSIFICATION	1.0541840107613847E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999999979915833	WITHOUT_CLASSIFICATION	2.0084166629616834E-9	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999943134375788	WITHOUT_CLASSIFICATION	5.6865624212267565E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9997691723250611	WITHOUT_CLASSIFICATION	2.3082767493885057E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999997293177527	WITHOUT_CLASSIFICATION	2.706822473587295E-7	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997027167763	WITHOUT_CLASSIFICATION	2.9728322373702567E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999952880777424	WITHOUT_CLASSIFICATION	4.711922257635094E-6	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999950994277568	WITHOUT_CLASSIFICATION	4.900572243247722E-6	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999953694865615	WITHOUT_CLASSIFICATION	4.630513438451894E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999989400824953	WITHOUT_CLASSIFICATION	1.0599175046451013E-6	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.99998459524752	WITHOUT_CLASSIFICATION	1.540475247998172E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999952231333715	WITHOUT_CLASSIFICATION	4.776866628435753E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999995452428199	WITHOUT_CLASSIFICATION	4.54757180200843E-7	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.999999223705114	WITHOUT_CLASSIFICATION	7.762948859548782E-7	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999996845638801	WITHOUT_CLASSIFICATION	3.1543611986278795E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.999997076737677	WITHOUT_CLASSIFICATION	2.9232623228503E-6	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999878088783619	WITHOUT_CLASSIFICATION	1.2191121638119223E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999951528091184	WITHOUT_CLASSIFICATION	4.847190881523662E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999977188156077	WITHOUT_CLASSIFICATION	2.2811843921714115E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999995663300579	WITHOUT_CLASSIFICATION	4.3366994199483574E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999993966499628	WITHOUT_CLASSIFICATION	6.033500371464753E-7	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999847732896137	WITHOUT_CLASSIFICATION	1.5226710386369068E-5	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999107743090457	WITHOUT_CLASSIFICATION	8.922569095424829E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999984586537829	WITHOUT_CLASSIFICATION	1.541346217158195E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.999998404702772	WITHOUT_CLASSIFICATION	1.595297228018855E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999990535374464	WITHOUT_CLASSIFICATION	9.464625536312498E-7	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999979031282715	WITHOUT_CLASSIFICATION	2.096871728511017E-6	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999993635490475	WITHOUT_CLASSIFICATION	6.364509524339434E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999999865442031	WITHOUT_CLASSIFICATION	1.3455796892824604E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999999865442031	WITHOUT_CLASSIFICATION	1.3455796892824604E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999994133897258	WITHOUT_CLASSIFICATION	5.866102742180669E-7	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999999854766086	WITHOUT_CLASSIFICATION	1.4523391371857006E-8	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999974201083	WITHOUT_CLASSIFICATION	2.5798917167302796E-9	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999932375176354	WITHOUT_CLASSIFICATION	6.762482364744188E-6	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999979165783681	WITHOUT_CLASSIFICATION	2.0834216318686514E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999944926645989	WITHOUT_CLASSIFICATION	5.507335401012518E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9998606723597468	WITHOUT_CLASSIFICATION	1.393276402531316E-4	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999943493080056	WITHOUT_CLASSIFICATION	5.650691994433238E-6	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.999998976685898	WITHOUT_CLASSIFICATION	1.0233141019733171E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999992170662184	WITHOUT_CLASSIFICATION	7.829337816599046E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999992170662184	WITHOUT_CLASSIFICATION	7.829337816599046E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999998488242895	WITHOUT_CLASSIFICATION	1.511757105649205E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999998488242895	WITHOUT_CLASSIFICATION	1.511757105649205E-7	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999996074622475	WITHOUT_CLASSIFICATION	3.925377524233222E-7	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999956606037224	WITHOUT_CLASSIFICATION	4.339396277673906E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999996478224605	WITHOUT_CLASSIFICATION	3.521775394932807E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999999372283929	WITHOUT_CLASSIFICATION	6.27716071359961E-8	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999904353048354	WITHOUT_CLASSIFICATION	9.564695164540048E-6	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999997302852562	WITHOUT_CLASSIFICATION	2.697147437673989E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999923447208	WITHOUT_CLASSIFICATION	7.65527920574265E-9	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999953460555937	WITHOUT_CLASSIFICATION	4.653944406361655E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999995826755863	WITHOUT_CLASSIFICATION	4.1732441365368624E-7	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999981195313032	WITHOUT_CLASSIFICATION	1.880468696684257E-6	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999515644657921	WITHOUT_CLASSIFICATION	4.843553420789213E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999992104927314	WITHOUT_CLASSIFICATION	7.89507268662344E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999934171473923	WITHOUT_CLASSIFICATION	6.5828526076696564E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999992578846694	WITHOUT_CLASSIFICATION	7.4211533062316E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999973569028634	WITHOUT_CLASSIFICATION	2.6430971364906416E-6	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999661632519484	WITHOUT_CLASSIFICATION	3.383674805159892E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999757481955425	WITHOUT_CLASSIFICATION	2.4251804457520718E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999964192516084	WITHOUT_CLASSIFICATION	3.5807483915740276E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999961709775342	WITHOUT_CLASSIFICATION	3.829022465809524E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999593381617811	WITHOUT_CLASSIFICATION	4.066183821899047E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.999996962644541	WITHOUT_CLASSIFICATION	3.0373554590746522E-6	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999887318849339	WITHOUT_CLASSIFICATION	1.126811506612365E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999992988305499	WITHOUT_CLASSIFICATION	7.011694500571206E-7	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999981952508439	WITHOUT_CLASSIFICATION	1.8047491561207478E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999998439394219	WITHOUT_CLASSIFICATION	1.5606057815159792E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999902990706583	WITHOUT_CLASSIFICATION	9.700929341768194E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.99999026438494	WITHOUT_CLASSIFICATION	9.735615060109969E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999982570152418	WITHOUT_CLASSIFICATION	1.7429847582673935E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999982570152418	WITHOUT_CLASSIFICATION	1.7429847582673935E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999968051928149	WITHOUT_CLASSIFICATION	3.194807185082006E-6	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999998158421427	WITHOUT_CLASSIFICATION	1.8415785738938638E-7	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999995623065092	WITHOUT_CLASSIFICATION	4.376934907626566E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999980985417519	WITHOUT_CLASSIFICATION	1.9014582481351558E-6	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999974007594564	WITHOUT_CLASSIFICATION	2.5992405436750122E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999974020354105	WITHOUT_CLASSIFICATION	2.597964589482823E-6	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999919635282979	WITHOUT_CLASSIFICATION	8.036471702090996E-6	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999972767008493	WITHOUT_CLASSIFICATION	2.723299150835117E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999902990706583	WITHOUT_CLASSIFICATION	9.700929341768194E-6	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999896788018368	WITHOUT_CLASSIFICATION	1.0321198163319507E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.999998530036114	WITHOUT_CLASSIFICATION	1.4699638859242619E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999405053864793	WITHOUT_CLASSIFICATION	5.949461352064865E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999999496968676	WITHOUT_CLASSIFICATION	5.030313242448046E-8	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999991554918606	WITHOUT_CLASSIFICATION	8.445081393749616E-7	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999985591758747	WITHOUT_CLASSIFICATION	1.4408241253422885E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999842072342	WITHOUT_CLASSIFICATION	1.5792765766075235E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.999999055835646	WITHOUT_CLASSIFICATION	9.441643540948964E-7	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999996574049167	WITHOUT_CLASSIFICATION	3.42595083396614E-7	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999997436977789	WITHOUT_CLASSIFICATION	2.563022210559378E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999994396754784	WITHOUT_CLASSIFICATION	5.603245214995031E-7	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.999999965873129	WITHOUT_CLASSIFICATION	3.4126870940169815E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.999993541414658	WITHOUT_CLASSIFICATION	6.458585342054273E-6	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999999072864261	WITHOUT_CLASSIFICATION	9.271357396183339E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999925181863442	WITHOUT_CLASSIFICATION	7.4818136559147E-6	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999985654550815	WITHOUT_CLASSIFICATION	1.4345449185501317E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.999998624007354	WITHOUT_CLASSIFICATION	1.3759926460286067E-6	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999999433744619	WITHOUT_CLASSIFICATION	5.662553810783207E-8	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999998036032437	WITHOUT_CLASSIFICATION	1.9639675616544504E-7	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999980756524988	WITHOUT_CLASSIFICATION	1.924347501306111E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999984533609342	WITHOUT_CLASSIFICATION	1.5466390658644167E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999991432260618	WITHOUT_CLASSIFICATION	8.567739381991616E-7	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999999221858087	WITHOUT_CLASSIFICATION	7.781419129791701E-8	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999986998341671	WITHOUT_CLASSIFICATION	1.300165832795037E-6	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999977711495589	WITHOUT_CLASSIFICATION	2.2288504410245644E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999842072342	WITHOUT_CLASSIFICATION	1.5792765766075235E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999925181863442	WITHOUT_CLASSIFICATION	7.4818136559147E-6	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999996619769467	WITHOUT_CLASSIFICATION	3.3802305341233327E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999297654665	WITHOUT_CLASSIFICATION	7.0234533542121E-8	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999992508761716	WITHOUT_CLASSIFICATION	7.491238285039311E-7	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999937011816331	WITHOUT_CLASSIFICATION	6.298818366831551E-6	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999956333751284	WITHOUT_CLASSIFICATION	4.366624871558401E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999936608324583	WITHOUT_CLASSIFICATION	6.339167541743458E-6	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999960085175132	WITHOUT_CLASSIFICATION	3.991482486724298E-6	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999999209181437	WITHOUT_CLASSIFICATION	7.908185627231324E-8	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999926113437979	WITHOUT_CLASSIFICATION	7.388656201985883E-6	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999999612216804	WITHOUT_CLASSIFICATION	3.8778319637502226E-8	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999985832981244	WITHOUT_CLASSIFICATION	1.4167018755962981E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999985832981244	WITHOUT_CLASSIFICATION	1.4167018755962981E-6	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.999997888877906	WITHOUT_CLASSIFICATION	2.1111220939632234E-6	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999982572421212	WITHOUT_CLASSIFICATION	1.7427578788385806E-6	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999999559074882	WITHOUT_CLASSIFICATION	4.4092511709055326E-8	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.999998865717173	WITHOUT_CLASSIFICATION	1.1342828270375212E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999999910740253	WITHOUT_CLASSIFICATION	8.925974704765457E-8	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.999993466610205	WITHOUT_CLASSIFICATION	6.533389794886598E-6	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999982899918499	WITHOUT_CLASSIFICATION	1.7100081499566938E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999998200680106	WITHOUT_CLASSIFICATION	1.7993198947367873E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999990544850413	WITHOUT_CLASSIFICATION	9.455149587159852E-7	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999981485098032	WITHOUT_CLASSIFICATION	1.8514901967532247E-6	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999994403020301	WITHOUT_CLASSIFICATION	5.596979697542752E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999998488242895	WITHOUT_CLASSIFICATION	1.511757105649205E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999923447208	WITHOUT_CLASSIFICATION	7.65527920574265E-9	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999925181863442	WITHOUT_CLASSIFICATION	7.4818136559147E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999999910740253	WITHOUT_CLASSIFICATION	8.925974704765457E-8	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.999993466610205	WITHOUT_CLASSIFICATION	6.533389794886598E-6	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999999703717839	WITHOUT_CLASSIFICATION	2.962821614845864E-8	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999999948334976	WITHOUT_CLASSIFICATION	5.166502475078604E-9	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999991416087335	WITHOUT_CLASSIFICATION	8.583912666141607E-7	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999966565156768	WITHOUT_CLASSIFICATION	3.343484323108296E-6	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999957723118311	WITHOUT_CLASSIFICATION	4.227688168937074E-6	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999993299861194	WITHOUT_CLASSIFICATION	6.700138807078931E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999840912954195	WITHOUT_CLASSIFICATION	1.590870458041197E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999848071366808	WITHOUT_CLASSIFICATION	1.5192863319189106E-5	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999999882098088	WITHOUT_CLASSIFICATION	1.1790191064868155E-8	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.999998164865305	WITHOUT_CLASSIFICATION	1.8351346949704118E-6	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999991003748242	WITHOUT_CLASSIFICATION	8.996251756924052E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999999379515734	WITHOUT_CLASSIFICATION	6.204842663928419E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999568441851987	WITHOUT_CLASSIFICATION	4.315581480131255E-5	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.999999823077067	WITHOUT_CLASSIFICATION	1.7692293290675427E-7	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999984311909397	WITHOUT_CLASSIFICATION	1.5688090603563954E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999162444029	WITHOUT_CLASSIFICATION	8.375559715505947E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999568441851987	WITHOUT_CLASSIFICATION	4.315581480131255E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999568441851987	WITHOUT_CLASSIFICATION	4.315581480131255E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999568441851987	WITHOUT_CLASSIFICATION	4.315581480131255E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999961847810743	WITHOUT_CLASSIFICATION	3.815218925696456E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999992451705391	WITHOUT_CLASSIFICATION	7.548294610150394E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999997180473676	WITHOUT_CLASSIFICATION	2.8195263235163204E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999999376040983	WITHOUT_CLASSIFICATION	6.23959016710539E-8	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999995087407203	WITHOUT_CLASSIFICATION	4.912592796321582E-7	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999997693992141	WITHOUT_CLASSIFICATION	2.306007859796454E-7	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999970925194659	WITHOUT_CLASSIFICATION	2.9074805340598725E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999996967618543	WITHOUT_CLASSIFICATION	3.0323814571407E-7	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999999402084099	WITHOUT_CLASSIFICATION	5.979159005883632E-8	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999985687351736	WITHOUT_CLASSIFICATION	1.4312648263906277E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999550770092697	WITHOUT_CLASSIFICATION	4.4922990730420284E-5	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999992331943393	WITHOUT_CLASSIFICATION	7.668056606637818E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999992478960205	WITHOUT_CLASSIFICATION	7.521039795389698E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999994758352448	WITHOUT_CLASSIFICATION	5.241647551853114E-7	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.999999928478122	WITHOUT_CLASSIFICATION	7.152187792122935E-8	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999945769213083	WITHOUT_CLASSIFICATION	5.4230786916173664E-6	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999999733749318	WITHOUT_CLASSIFICATION	2.662506814105864E-8	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.999999406283114	WITHOUT_CLASSIFICATION	5.937168860141799E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999994967441798	WITHOUT_CLASSIFICATION	5.032558202742455E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999994967441798	WITHOUT_CLASSIFICATION	5.032558202742455E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999020763287	WITHOUT_CLASSIFICATION	9.792367130980872E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999977781944881	WITHOUT_CLASSIFICATION	2.221805511910867E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999020763287	WITHOUT_CLASSIFICATION	9.792367130980872E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.999998265872674	WITHOUT_CLASSIFICATION	1.7341273259994883E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999972207652021	WITHOUT_CLASSIFICATION	2.77923479781344E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999963099141829	WITHOUT_CLASSIFICATION	3.690085817181122E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999991424776479	WITHOUT_CLASSIFICATION	8.575223519894873E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999991424776479	WITHOUT_CLASSIFICATION	8.575223519894873E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999983901206112	WITHOUT_CLASSIFICATION	1.6098793887828124E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999983901206112	WITHOUT_CLASSIFICATION	1.6098793887828124E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999965743034878	WITHOUT_CLASSIFICATION	3.425696512234464E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999965743034878	WITHOUT_CLASSIFICATION	3.425696512234464E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999914242159866	WITHOUT_CLASSIFICATION	8.57578401343247E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999997156724826	WITHOUT_CLASSIFICATION	2.8432751740381284E-7	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999994272659273	WITHOUT_CLASSIFICATION	5.727340727670749E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999996999574293	WITHOUT_CLASSIFICATION	3.000425705991584E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999998831347944	WITHOUT_CLASSIFICATION	1.1686520556645204E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999999985230747	WITHOUT_CLASSIFICATION	1.4769252910772765E-8	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999972941615732	WITHOUT_CLASSIFICATION	2.705838426865962E-6	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999843377664512	WITHOUT_CLASSIFICATION	1.5662233548699392E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999995083537035	WITHOUT_CLASSIFICATION	4.916462965395707E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9999961935658656	WITHOUT_CLASSIFICATION	3.806434134435318E-6	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999999944804171	WITHOUT_CLASSIFICATION	5.519582906514991E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999977929604215	WITHOUT_CLASSIFICATION	2.207039578615422E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999998041867436	WITHOUT_CLASSIFICATION	1.958132563558213E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.99999994026637	WITHOUT_CLASSIFICATION	5.973363010320553E-8	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999993594953858	WITHOUT_CLASSIFICATION	6.405046143329824E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.999999644238175	WITHOUT_CLASSIFICATION	3.5576182502234924E-7	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999996091876403	WITHOUT_CLASSIFICATION	3.9081235967865055E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999999242625432	WITHOUT_CLASSIFICATION	7.57374567894307E-8	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999987347148872	WITHOUT_CLASSIFICATION	1.265285112831553E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999993563601877	WITHOUT_CLASSIFICATION	6.436398122763849E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999983088125894	WITHOUT_CLASSIFICATION	1.6911874106389494E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999995074535556	WITHOUT_CLASSIFICATION	4.92546444509713E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9998974618625446	WITHOUT_CLASSIFICATION	1.025381374553317E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9998974618625446	WITHOUT_CLASSIFICATION	1.025381374553317E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999735940704406	WITHOUT_CLASSIFICATION	2.640592955937633E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999735940704406	WITHOUT_CLASSIFICATION	2.640592955937633E-5	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999999734926248	WITHOUT_CLASSIFICATION	2.6507375116536458E-8	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999989065638996	WITHOUT_CLASSIFICATION	1.093436100408033E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999992072838901	WITHOUT_CLASSIFICATION	7.927161099787152E-7	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.999999889706148	WITHOUT_CLASSIFICATION	1.1029385200640784E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999961541315426	WITHOUT_CLASSIFICATION	3.845868457288389E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999963860338166	WITHOUT_CLASSIFICATION	3.613966183481763E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999998626661484	WITHOUT_CLASSIFICATION	1.3733385170944745E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9999582835865621	WITHOUT_CLASSIFICATION	4.171641343787416E-5	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.999999092849107	WITHOUT_CLASSIFICATION	9.071508929689225E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999900930983868	WITHOUT_CLASSIFICATION	9.90690161317712E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999997888776568	WITHOUT_CLASSIFICATION	2.1112234322073192E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999994350331605	WITHOUT_CLASSIFICATION	5.649668395332072E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999986359604536	WITHOUT_CLASSIFICATION	1.3640395464371767E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999634936093	WITHOUT_CLASSIFICATION	3.650639068725464E-8	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.999998122405361	WITHOUT_CLASSIFICATION	1.8775946390170999E-6	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.999999506032643	WITHOUT_CLASSIFICATION	4.939673569274424E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999280601226	WITHOUT_CLASSIFICATION	7.193987740596191E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999987128553744	WITHOUT_CLASSIFICATION	1.2871446255133567E-6	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999982591560898	WITHOUT_CLASSIFICATION	1.7408439102380056E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999938408887281	WITHOUT_CLASSIFICATION	6.1591112719373605E-6	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999814261942	WITHOUT_CLASSIFICATION	1.8573805797401252E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999998866247836	WITHOUT_CLASSIFICATION	1.1337521645222063E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999986962787557	WITHOUT_CLASSIFICATION	1.3037212442587756E-6	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999796607194473	WITHOUT_CLASSIFICATION	2.0339280552679083E-5	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999990428127074	WITHOUT_CLASSIFICATION	9.57187292707301E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.999968146947667	WITHOUT_CLASSIFICATION	3.185305233300373E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999989205903888	WITHOUT_CLASSIFICATION	1.0794096112243985E-6	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999477874614227	WITHOUT_CLASSIFICATION	5.221253857729231E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999996990210321	WITHOUT_CLASSIFICATION	3.0097896794965903E-7	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999694303181731	WITHOUT_CLASSIFICATION	3.056968182692513E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999977002197502	WITHOUT_CLASSIFICATION	2.299780249717504E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998955483403729	WITHOUT_CLASSIFICATION	1.0445165962707828E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999984093867988	WITHOUT_CLASSIFICATION	1.5906132011684753E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999989016462916	WITHOUT_CLASSIFICATION	1.0983537084698351E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999367472814	WITHOUT_CLASSIFICATION	6.32527186921527E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999639656750574	WITHOUT_CLASSIFICATION	3.603432494259015E-5	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999922462378784	WITHOUT_CLASSIFICATION	7.753762121554864E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.999998282671851	WITHOUT_CLASSIFICATION	1.7173281491098206E-6	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999657935629833	WITHOUT_CLASSIFICATION	3.420643701667682E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.999999976874048	WITHOUT_CLASSIFICATION	2.3125952097428025E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999563993369	WITHOUT_CLASSIFICATION	4.36006631322615E-8	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999965257919433	WITHOUT_CLASSIFICATION	3.4742080567964944E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999857844710377	WITHOUT_CLASSIFICATION	1.421552896234552E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999693970559411	WITHOUT_CLASSIFICATION	3.060294405889838E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999785912938342	WITHOUT_CLASSIFICATION	2.140870616580575E-5	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999678346035478	WITHOUT_CLASSIFICATION	3.216539645226907E-5	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999662917527283	WITHOUT_CLASSIFICATION	3.3708247271670265E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.999982019818729	WITHOUT_CLASSIFICATION	1.798018127098748E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999991930408795	WITHOUT_CLASSIFICATION	8.069591205976451E-7	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999716563914028	WITHOUT_CLASSIFICATION	2.8343608597133246E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999882243702969	WITHOUT_CLASSIFICATION	1.1775629703165257E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999325598181	WITHOUT_CLASSIFICATION	6.744018189317902E-8	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999966268599351	WITHOUT_CLASSIFICATION	3.3731400648769586E-6	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9998208079469644	WITHOUT_CLASSIFICATION	1.7919205303558886E-4	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999999879039831	WITHOUT_CLASSIFICATION	1.2096016838514443E-8	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999996654504582	WITHOUT_CLASSIFICATION	3.345495418556852E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9987030299448374	WITHOUT_CLASSIFICATION	0.0012969700551626355	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9999391143927594	WITHOUT_CLASSIFICATION	6.088560724070217E-5	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999994498841891	WITHOUT_CLASSIFICATION	5.50115810875159E-7	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999485287163	WITHOUT_CLASSIFICATION	5.147128358481974E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999995005209478	WITHOUT_CLASSIFICATION	4.994790522496444E-7	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999893670805524	WITHOUT_CLASSIFICATION	1.0632919447465729E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999985288189915	WITHOUT_CLASSIFICATION	1.471181008384553E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999977599124942	WITHOUT_CLASSIFICATION	2.2400875058008237E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999670484768904	WITHOUT_CLASSIFICATION	3.295152310968061E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.999999850532251	WITHOUT_CLASSIFICATION	1.494677488581762E-7	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999764693593	WITHOUT_CLASSIFICATION	2.3530640629330963E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999962643275907	WITHOUT_CLASSIFICATION	3.7356724092693068E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999991141427186	WITHOUT_CLASSIFICATION	8.858572815268718E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999996049636881	WITHOUT_CLASSIFICATION	3.9503631192519443E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999996315131418	WITHOUT_CLASSIFICATION	3.6848685826627044E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999980224413259	WITHOUT_CLASSIFICATION	1.9775586741279606E-6	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999999086415449	WITHOUT_CLASSIFICATION	9.135845517828328E-8	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999996063245823	WITHOUT_CLASSIFICATION	3.9367541778441266E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999999229450316	WITHOUT_CLASSIFICATION	7.705496847566211E-8	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999953951664865	WITHOUT_CLASSIFICATION	4.604833513459038E-6	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999999865703706	WITHOUT_CLASSIFICATION	1.3429629280553164E-8	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999960145222135	WITHOUT_CLASSIFICATION	3.985477786374088E-6	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999966456582969	WITHOUT_CLASSIFICATION	3.354341703167246E-6	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999998495507648	WITHOUT_CLASSIFICATION	1.5044923520300466E-7	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999995335998948	WITHOUT_CLASSIFICATION	4.664001051458882E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9999479110925804	WITHOUT_CLASSIFICATION	5.2088907419710464E-5	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999988634113304	WITHOUT_CLASSIFICATION	1.1365886695896126E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999957082766402	WITHOUT_CLASSIFICATION	4.29172335980154E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999981561519223	WITHOUT_CLASSIFICATION	1.8438480777015498E-6	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999992596601985	WITHOUT_CLASSIFICATION	7.403398014222669E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999998298865204	WITHOUT_CLASSIFICATION	1.7011347961961416E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993021161163	WITHOUT_CLASSIFICATION	6.978838835478606E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993021161163	WITHOUT_CLASSIFICATION	6.978838835478606E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.99999997981803	WITHOUT_CLASSIFICATION	2.0181970043338165E-8	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999998477075928	WITHOUT_CLASSIFICATION	1.5229240719715713E-7	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999997553710116	WITHOUT_CLASSIFICATION	2.446289884069886E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999998655173971	WITHOUT_CLASSIFICATION	1.3448260284405042E-7	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999994541095828	WITHOUT_CLASSIFICATION	5.458904171810997E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999996673294893	WITHOUT_CLASSIFICATION	3.326705107005762E-7	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999436626009	WITHOUT_CLASSIFICATION	5.633739912743387E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999991291536284	WITHOUT_CLASSIFICATION	8.708463716566617E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.999999999533219	WITHOUT_CLASSIFICATION	4.667809624215086E-10	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999998699280281	WITHOUT_CLASSIFICATION	1.3007197184307437E-7	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999998099410946	WITHOUT_CLASSIFICATION	1.9005890531443427E-7	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999996222533757	WITHOUT_CLASSIFICATION	3.777466243172979E-7	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.999999385977911	WITHOUT_CLASSIFICATION	6.140220889675793E-7	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.999987614905005	WITHOUT_CLASSIFICATION	1.2385094994990053E-5	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999996695993841	WITHOUT_CLASSIFICATION	3.3040061587485756E-7	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999959021137595	WITHOUT_CLASSIFICATION	4.097886240440274E-6	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.999998131587166	WITHOUT_CLASSIFICATION	1.868412834002925E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999920417241	WITHOUT_CLASSIFICATION	7.958275873709968E-9	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999994033921811	WITHOUT_CLASSIFICATION	5.966078189236476E-7	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9999593619121714	WITHOUT_CLASSIFICATION	4.063808782860387E-5	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999999989700504	WITHOUT_CLASSIFICATION	1.0299495825351383E-9	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999998635827198	WITHOUT_CLASSIFICATION	1.364172801811794E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999917554855977	WITHOUT_CLASSIFICATION	8.244514402237395E-6	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999992914631557	WITHOUT_CLASSIFICATION	7.08536844197997E-7	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999998000743594	WITHOUT_CLASSIFICATION	1.999256406016789E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999971365327042	WITHOUT_CLASSIFICATION	2.863467295768403E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.999993380004162	WITHOUT_CLASSIFICATION	6.619995837983097E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999997555396819	WITHOUT_CLASSIFICATION	2.4446031817342396E-7	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999999298491747	WITHOUT_CLASSIFICATION	7.015082534744109E-8	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999998618390181	WITHOUT_CLASSIFICATION	1.3816098192223727E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999968881268101	WITHOUT_CLASSIFICATION	3.111873189850576E-6	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999994869208683	WITHOUT_CLASSIFICATION	5.130791316385919E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999977846110841	WITHOUT_CLASSIFICATION	2.2153889158596594E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999945624214535	WITHOUT_CLASSIFICATION	5.437578546637136E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999610241485	WITHOUT_CLASSIFICATION	3.897585160458496E-8	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999999709357578	WITHOUT_CLASSIFICATION	2.906424222834367E-8	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999996484094652	WITHOUT_CLASSIFICATION	3.5159053475669245E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.999999943468437	WITHOUT_CLASSIFICATION	5.6531563003373066E-8	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999993360191796	WITHOUT_CLASSIFICATION	6.639808203553606E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999902637674927	WITHOUT_CLASSIFICATION	9.736232507350813E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999956910886055	WITHOUT_CLASSIFICATION	4.308911394493924E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999960590408791	WITHOUT_CLASSIFICATION	3.940959120871011E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999976444706512	WITHOUT_CLASSIFICATION	2.3555293488513984E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999994967441798	WITHOUT_CLASSIFICATION	5.032558202742455E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999994967441798	WITHOUT_CLASSIFICATION	5.032558202742455E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999020763287	WITHOUT_CLASSIFICATION	9.792367130980872E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999020763287	WITHOUT_CLASSIFICATION	9.792367130980872E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999985297898836	WITHOUT_CLASSIFICATION	1.470210116369598E-6	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999959314371613	WITHOUT_CLASSIFICATION	4.068562838788743E-6	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999995235801418	WITHOUT_CLASSIFICATION	4.7641985816983735E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999994621123826	WITHOUT_CLASSIFICATION	5.378876174722555E-7	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999919618944638	WITHOUT_CLASSIFICATION	8.038105536179371E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999944107414697	WITHOUT_CLASSIFICATION	5.589258530425249E-6	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999998583672434	WITHOUT_CLASSIFICATION	1.4163275657105206E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999998266914116	WITHOUT_CLASSIFICATION	1.7330858826519802E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999991305577959	WITHOUT_CLASSIFICATION	8.694422041701052E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999991305577959	WITHOUT_CLASSIFICATION	8.694422041701052E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999948573216	WITHOUT_CLASSIFICATION	5.142678400370788E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999948573216	WITHOUT_CLASSIFICATION	5.142678400370788E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999162444029	WITHOUT_CLASSIFICATION	8.375559715505947E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999972207652021	WITHOUT_CLASSIFICATION	2.77923479781344E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.999998265872674	WITHOUT_CLASSIFICATION	1.7341273259994883E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999963099141829	WITHOUT_CLASSIFICATION	3.690085817181122E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999991424776479	WITHOUT_CLASSIFICATION	8.575223519894873E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999991424776479	WITHOUT_CLASSIFICATION	8.575223519894873E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999983901206112	WITHOUT_CLASSIFICATION	1.6098793887828124E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999983901206112	WITHOUT_CLASSIFICATION	1.6098793887828124E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999965743034878	WITHOUT_CLASSIFICATION	3.425696512234464E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999965743034878	WITHOUT_CLASSIFICATION	3.425696512234464E-6	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999924345113815	WITHOUT_CLASSIFICATION	7.565488618398408E-6	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999993956863505	WITHOUT_CLASSIFICATION	6.043136495129676E-7	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999090622811109	WITHOUT_CLASSIFICATION	9.093771888906858E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999941890752512	WITHOUT_CLASSIFICATION	5.810924748883032E-6	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999997773052094	WITHOUT_CLASSIFICATION	2.2269479063051018E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999977577803966	WITHOUT_CLASSIFICATION	2.2422196034058253E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999986390690662	WITHOUT_CLASSIFICATION	1.360930933780083E-6	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999942454995169	WITHOUT_CLASSIFICATION	5.7545004830952945E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999978839391608	WITHOUT_CLASSIFICATION	2.116060839112092E-6	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999999333049935	WITHOUT_CLASSIFICATION	6.669500653060466E-8	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999996975734611	WITHOUT_CLASSIFICATION	3.0242653889909035E-7	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999989257773791	WITHOUT_CLASSIFICATION	1.074222620904258E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999996406793668	WITHOUT_CLASSIFICATION	3.59320633265493E-7	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999997075101458	WITHOUT_CLASSIFICATION	2.924898542191569E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999999629492663	WITHOUT_CLASSIFICATION	3.7050733727178423E-8	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999964507902727	WITHOUT_CLASSIFICATION	3.549209727390342E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.999995094388251	WITHOUT_CLASSIFICATION	4.905611749030264E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999991467858346	WITHOUT_CLASSIFICATION	8.532141654560715E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999141840485	WITHOUT_CLASSIFICATION	8.581595139832334E-8	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999977824699972	WITHOUT_CLASSIFICATION	2.2175300028697603E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999999752189068	WITHOUT_CLASSIFICATION	2.4781093153695215E-8	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999926682142676	WITHOUT_CLASSIFICATION	7.331785732478183E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999983253130776	WITHOUT_CLASSIFICATION	1.6746869223370423E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999995371301656	WITHOUT_CLASSIFICATION	4.6286983434416976E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999977648214581	WITHOUT_CLASSIFICATION	2.2351785419050625E-6	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999997263701678	WITHOUT_CLASSIFICATION	2.736298322605607E-7	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999998034352479	WITHOUT_CLASSIFICATION	1.9656475204196637E-7	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.999999170638983	WITHOUT_CLASSIFICATION	8.293610169457717E-7	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9999971159354224	WITHOUT_CLASSIFICATION	2.884064577584454E-6	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999998775119486	WITHOUT_CLASSIFICATION	1.2248805131678972E-7	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.999999828030541	WITHOUT_CLASSIFICATION	1.719694590267277E-7	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999979542320324	WITHOUT_CLASSIFICATION	2.045767967571546E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999969705670149	WITHOUT_CLASSIFICATION	3.0294329850826106E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999998459807724	WITHOUT_CLASSIFICATION	1.5401922757599784E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999979762727298	WITHOUT_CLASSIFICATION	2.0237272702208366E-6	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999626117789	WITHOUT_CLASSIFICATION	3.738822111578328E-8	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999998706548483	WITHOUT_CLASSIFICATION	1.2934515162701618E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999998299149429	WITHOUT_CLASSIFICATION	1.700850570381512E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999671963129	WITHOUT_CLASSIFICATION	3.2803687118171026E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999995922585674	WITHOUT_CLASSIFICATION	4.0774143255191177E-7	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999580896633877	WITHOUT_CLASSIFICATION	4.1910336612186384E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999994370457468	WITHOUT_CLASSIFICATION	5.629542531417907E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999995573514384	WITHOUT_CLASSIFICATION	4.4264856167018944E-7	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999985594045794	WITHOUT_CLASSIFICATION	1.4405954206102353E-6	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999606194883	WITHOUT_CLASSIFICATION	3.938051179018985E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999998438848406	WITHOUT_CLASSIFICATION	1.5611515931721208E-7	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9998310508452771	WITHOUT_CLASSIFICATION	1.6894915472277233E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999978680412379	WITHOUT_CLASSIFICATION	2.1319587620776126E-6	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999997346850117	WITHOUT_CLASSIFICATION	2.6531498828916257E-7	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999980332180602	WITHOUT_CLASSIFICATION	1.966781939734051E-6	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999994358450562	WITHOUT_CLASSIFICATION	5.641549437039372E-7	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999990739593466	WITHOUT_CLASSIFICATION	9.260406533031576E-7	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9997542123449544	WITHOUT_CLASSIFICATION	2.457876550455671E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999927611964149	WITHOUT_CLASSIFICATION	7.23880358512109E-6	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9997399059845107	WITHOUT_CLASSIFICATION	2.600940154893136E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999998704645251	WITHOUT_CLASSIFICATION	1.2953547484681468E-7	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.999914072130734	WITHOUT_CLASSIFICATION	8.592786926601028E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999968062817464	WITHOUT_CLASSIFICATION	3.1937182536243883E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999998716326386	WITHOUT_CLASSIFICATION	1.2836736144996898E-7	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999988872215213	WITHOUT_CLASSIFICATION	1.1127784786268834E-6	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999965217086879	WITHOUT_CLASSIFICATION	3.4782913120545596E-6	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999670145202	WITHOUT_CLASSIFICATION	3.2985479794701946E-8	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999979065703906	WITHOUT_CLASSIFICATION	2.0934296093814997E-6	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.999999287536844	WITHOUT_CLASSIFICATION	7.124631560286099E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999979711210879	WITHOUT_CLASSIFICATION	2.0288789121802803E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999881345828169	WITHOUT_CLASSIFICATION	1.18654171830226E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999995825579424	WITHOUT_CLASSIFICATION	4.174420575253582E-7	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.99999946128176	WITHOUT_CLASSIFICATION	5.387182399647953E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999998898216599	WITHOUT_CLASSIFICATION	1.1017834005788679E-7	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999991196280994	WITHOUT_CLASSIFICATION	8.803719005495485E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999914127639	WITHOUT_CLASSIFICATION	8.587236130319957E-9	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999972215974509	WITHOUT_CLASSIFICATION	2.778402549259645E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999967842808906	WITHOUT_CLASSIFICATION	3.2157191094686012E-6	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999954649856957	WITHOUT_CLASSIFICATION	4.5350143042589956E-6	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999991007325952	WITHOUT_CLASSIFICATION	8.99267404825797E-7	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999998694687083	WITHOUT_CLASSIFICATION	1.305312915838394E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999996796755233	WITHOUT_CLASSIFICATION	3.203244766502234E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9998833907943647	WITHOUT_CLASSIFICATION	1.166092056352511E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999995549556772	WITHOUT_CLASSIFICATION	4.450443229202627E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.999982991109818	WITHOUT_CLASSIFICATION	1.700889018201977E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999792139001226	WITHOUT_CLASSIFICATION	2.0786099877434394E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999537800736471	WITHOUT_CLASSIFICATION	4.6219926352825705E-5	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9999349365881348	WITHOUT_CLASSIFICATION	6.506341186522737E-5	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999974638887323	WITHOUT_CLASSIFICATION	2.5361112675262904E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999988215844144	WITHOUT_CLASSIFICATION	1.178415585526662E-6	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.999781274832132	WITHOUT_CLASSIFICATION	2.187251678680118E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999713930820919	WITHOUT_CLASSIFICATION	2.860691790807876E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.999999753214468	WITHOUT_CLASSIFICATION	2.4678553194044193E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999913005028691	WITHOUT_CLASSIFICATION	8.69949713087391E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999980259366957	WITHOUT_CLASSIFICATION	1.974063304227276E-6	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999197947848291	WITHOUT_CLASSIFICATION	8.020521517089345E-5	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998458174130895	WITHOUT_CLASSIFICATION	1.5418258691048196E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999847172989853	WITHOUT_CLASSIFICATION	1.5282701014798697E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999995005014428	WITHOUT_CLASSIFICATION	4.99498557229543E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999963771567899	WITHOUT_CLASSIFICATION	3.6228432101494976E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999988423663588	WITHOUT_CLASSIFICATION	1.1576336411535314E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999989311871483	WITHOUT_CLASSIFICATION	1.0688128516941816E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999820652395153	WITHOUT_CLASSIFICATION	1.7934760484807687E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999777060859547	WITHOUT_CLASSIFICATION	2.229391404532671E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999777060859547	WITHOUT_CLASSIFICATION	2.229391404532671E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999991834399563	WITHOUT_CLASSIFICATION	8.165600437696462E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999866304702085	WITHOUT_CLASSIFICATION	1.336952979133614E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999997462925783	WITHOUT_CLASSIFICATION	2.537074217515779E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999987542850167	WITHOUT_CLASSIFICATION	1.2457149831943162E-6	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999983345878065	WITHOUT_CLASSIFICATION	1.665412193467272E-6	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999993588494585	WITHOUT_CLASSIFICATION	6.411505415571985E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.999996676092904	WITHOUT_CLASSIFICATION	3.3239070960335408E-6	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999976538051086	WITHOUT_CLASSIFICATION	2.3461948914064795E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999996752627326	WITHOUT_CLASSIFICATION	3.2473726743552154E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.999999872981828	WITHOUT_CLASSIFICATION	1.2701817196904827E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999994051331638	WITHOUT_CLASSIFICATION	5.948668362876577E-7	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999998001440907	WITHOUT_CLASSIFICATION	1.998559092182009E-7	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999978736432177	WITHOUT_CLASSIFICATION	2.1263567823087315E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999996691627212	WITHOUT_CLASSIFICATION	3.308372788433595E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999886636821989	WITHOUT_CLASSIFICATION	1.1336317801099935E-5	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999973893211339	WITHOUT_CLASSIFICATION	2.610678865975564E-6	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999997504024932	WITHOUT_CLASSIFICATION	2.49597506805122E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999908283438085	WITHOUT_CLASSIFICATION	9.17165619146749E-6	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.999999439462224	WITHOUT_CLASSIFICATION	5.605377759720666E-7	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999990167760443	WITHOUT_CLASSIFICATION	9.832239557377815E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999998860641627	WITHOUT_CLASSIFICATION	1.1393583739655491E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999988845049199	WITHOUT_CLASSIFICATION	1.1154950800861804E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999981073784994	WITHOUT_CLASSIFICATION	1.8926215005597826E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999996203786576	WITHOUT_CLASSIFICATION	3.7962134242945635E-7	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.999997916990335	WITHOUT_CLASSIFICATION	2.0830096649620737E-6	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999997974669778	WITHOUT_CLASSIFICATION	2.025330222364815E-7	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999953417500872	WITHOUT_CLASSIFICATION	4.6582499128186924E-6	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999977625218543	WITHOUT_CLASSIFICATION	2.237478145661508E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998570745402	WITHOUT_CLASSIFICATION	1.4292545978511332E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999946506133542	WITHOUT_CLASSIFICATION	5.349386645650683E-6	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999911830891915	WITHOUT_CLASSIFICATION	8.816910808465868E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999979414666965	WITHOUT_CLASSIFICATION	2.0585333034005065E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999850649994914	WITHOUT_CLASSIFICATION	1.4935000508721512E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999825159388416	WITHOUT_CLASSIFICATION	1.748406115838828E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999747080900317	WITHOUT_CLASSIFICATION	2.529190996834945E-5	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999545722030865	WITHOUT_CLASSIFICATION	4.542779691350965E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9998953865308472	WITHOUT_CLASSIFICATION	1.0461346915278904E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998570745402	WITHOUT_CLASSIFICATION	1.4292545978511332E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999999768729673	WITHOUT_CLASSIFICATION	2.312703272367374E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999999796836766	WITHOUT_CLASSIFICATION	2.03163234575679E-8	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999987331960826	WITHOUT_CLASSIFICATION	1.2668039173834707E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999993464528187	WITHOUT_CLASSIFICATION	6.535471811556389E-7	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999851322194054	WITHOUT_CLASSIFICATION	1.4867780594633096E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999860502981215	WITHOUT_CLASSIFICATION	1.3949701878492724E-5	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999995072241675	WITHOUT_CLASSIFICATION	4.927758325402783E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.999944949488494	WITHOUT_CLASSIFICATION	5.505051150599916E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999899420307179	WITHOUT_CLASSIFICATION	1.0057969282243829E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.999995937101802	WITHOUT_CLASSIFICATION	4.062898197936231E-6	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999967891256117	WITHOUT_CLASSIFICATION	3.2108743883703917E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999916493372648	WITHOUT_CLASSIFICATION	8.350662735154615E-6	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999987507005956	WITHOUT_CLASSIFICATION	1.2492994044616236E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999420238652756	WITHOUT_CLASSIFICATION	5.797613472446095E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999937204018063	WITHOUT_CLASSIFICATION	6.279598193704478E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9999445733416279	WITHOUT_CLASSIFICATION	5.542665837218253E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9999445733416279	WITHOUT_CLASSIFICATION	5.542665837218253E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999956166127668	WITHOUT_CLASSIFICATION	4.383387233163283E-6	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999982652597728	WITHOUT_CLASSIFICATION	1.7347402272234649E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999996926888005	WITHOUT_CLASSIFICATION	3.073111994186408E-7	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999994818421656	WITHOUT_CLASSIFICATION	5.181578343983476E-7	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999088089635	WITHOUT_CLASSIFICATION	9.119103653458803E-8	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999929890583561	WITHOUT_CLASSIFICATION	7.010941643820504E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999999462367992	WITHOUT_CLASSIFICATION	5.376320080541198E-8	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.999997456182716	WITHOUT_CLASSIFICATION	2.5438172839874035E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999999384303631	WITHOUT_CLASSIFICATION	6.156963696388999E-8	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999999460802547	WITHOUT_CLASSIFICATION	5.391974523185445E-8	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999937675007982	WITHOUT_CLASSIFICATION	6.232499201871125E-6	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9997641365174124	WITHOUT_CLASSIFICATION	2.3586348258770087E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999998201415408	WITHOUT_CLASSIFICATION	1.7985845922534427E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999977781944881	WITHOUT_CLASSIFICATION	2.221805511910867E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999977781944881	WITHOUT_CLASSIFICATION	2.221805511910867E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999996926888005	WITHOUT_CLASSIFICATION	3.073111994186408E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999937675007982	WITHOUT_CLASSIFICATION	6.232499201871125E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999948804426589	WITHOUT_CLASSIFICATION	5.119557341013499E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999939266417014	WITHOUT_CLASSIFICATION	6.073358298685004E-6	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999961237830897	WITHOUT_CLASSIFICATION	3.876216910267352E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.999999819253404	WITHOUT_CLASSIFICATION	1.8074659591728674E-7	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999995856478896	WITHOUT_CLASSIFICATION	4.1435211037246853E-7	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999994609951217	WITHOUT_CLASSIFICATION	5.390048783830031E-7	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999999624356453	WITHOUT_CLASSIFICATION	3.7564354709329903E-7	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.999993764117046	WITHOUT_CLASSIFICATION	6.235882954018425E-6	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999987568571936	WITHOUT_CLASSIFICATION	1.2431428063696226E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999998216466461	WITHOUT_CLASSIFICATION	1.7835335388229429E-7	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999734119373646	WITHOUT_CLASSIFICATION	2.658806263542763E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9999778188735783	WITHOUT_CLASSIFICATION	2.2181126421792783E-5	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.999999237010351	WITHOUT_CLASSIFICATION	7.629896489018108E-7	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999140857412443	WITHOUT_CLASSIFICATION	8.591425875563384E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999998546762097	WITHOUT_CLASSIFICATION	1.453237902012522E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999987250368515	WITHOUT_CLASSIFICATION	1.2749631485807076E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999872380622884	WITHOUT_CLASSIFICATION	1.2761937711689044E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999985310502384	WITHOUT_CLASSIFICATION	1.4689497616724178E-6	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999981014414983	WITHOUT_CLASSIFICATION	1.898558501801138E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999988765630483	WITHOUT_CLASSIFICATION	1.1234369516238948E-6	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999984787797911	WITHOUT_CLASSIFICATION	1.5212202089427767E-6	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.999999722163757	WITHOUT_CLASSIFICATION	2.7783624293409833E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999460861683162	WITHOUT_CLASSIFICATION	5.39138316838501E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999815850389648	WITHOUT_CLASSIFICATION	1.841496103516434E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999998336468509	WITHOUT_CLASSIFICATION	1.663531490309887E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999998865426122	WITHOUT_CLASSIFICATION	1.134573878019552E-6	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999984908674749	WITHOUT_CLASSIFICATION	1.5091325249898864E-6	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999953237177589	WITHOUT_CLASSIFICATION	4.676282241147719E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999997553221646	WITHOUT_CLASSIFICATION	2.4467783553018563E-7	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999991524515532	WITHOUT_CLASSIFICATION	8.475484467682875E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999996441918654	WITHOUT_CLASSIFICATION	3.5580813452096853E-7	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.999993946408777	WITHOUT_CLASSIFICATION	6.053591222963447E-6	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999998886456735	WITHOUT_CLASSIFICATION	1.1135432649633649E-7	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999998288019148	WITHOUT_CLASSIFICATION	1.7119808514352898E-7	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999998738753515	WITHOUT_CLASSIFICATION	1.2612464850174213E-7	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999979242383843	WITHOUT_CLASSIFICATION	2.0757616156848806E-6	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999987147140994	WITHOUT_CLASSIFICATION	1.2852859006104697E-6	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999991099010958	WITHOUT_CLASSIFICATION	8.900989042912795E-7	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999993475090793	WITHOUT_CLASSIFICATION	6.524909207314282E-7	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999994751555547	WITHOUT_CLASSIFICATION	5.248444453930941E-7	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999996650244611	WITHOUT_CLASSIFICATION	3.3497553891777885E-7	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999993715071263	WITHOUT_CLASSIFICATION	6.284928738062689E-7	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999982060031601	WITHOUT_CLASSIFICATION	1.7939968398868521E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999968269854931	WITHOUT_CLASSIFICATION	3.1730145068913495E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999498040697947	WITHOUT_CLASSIFICATION	5.019593020539066E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999933017466677	WITHOUT_CLASSIFICATION	6.698253332405726E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999310312740723	WITHOUT_CLASSIFICATION	6.896872592762669E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999991841031857	WITHOUT_CLASSIFICATION	8.158968143363977E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999988651596627	WITHOUT_CLASSIFICATION	1.1348403372659629E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954748286789	WITHOUT_CLASSIFICATION	4.525171321200498E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998955483403729	WITHOUT_CLASSIFICATION	1.0445165962707828E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999998518379875	WITHOUT_CLASSIFICATION	1.4816201250842861E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999998795354743	WITHOUT_CLASSIFICATION	1.2046452569875114E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999034873015888	WITHOUT_CLASSIFICATION	9.651269841109981E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999998030822114	WITHOUT_CLASSIFICATION	1.9691778862085902E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999992478960205	WITHOUT_CLASSIFICATION	7.521039795389698E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999997628143268	WITHOUT_CLASSIFICATION	2.3718567319706044E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999912806483	WITHOUT_CLASSIFICATION	8.719351659076576E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999984559798	WITHOUT_CLASSIFICATION	1.5440201953344505E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999991210094272	WITHOUT_CLASSIFICATION	8.789905727953776E-7	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999994728348691	WITHOUT_CLASSIFICATION	5.271651309213991E-7	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.999903748020423	WITHOUT_CLASSIFICATION	9.625197957700152E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999834500888694	WITHOUT_CLASSIFICATION	1.6549911130591001E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998998327660163	WITHOUT_CLASSIFICATION	1.0016723398359555E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999667574225755	WITHOUT_CLASSIFICATION	3.3242577424625595E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999667574225755	WITHOUT_CLASSIFICATION	3.3242577424625595E-5	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998538882080409	WITHOUT_CLASSIFICATION	1.4611179195901728E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999726135211675	WITHOUT_CLASSIFICATION	2.7386478832444698E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999974083615758	WITHOUT_CLASSIFICATION	2.591638424309533E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999926355142665	WITHOUT_CLASSIFICATION	7.364485733543427E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999926355142665	WITHOUT_CLASSIFICATION	7.364485733543427E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999926355142665	WITHOUT_CLASSIFICATION	7.364485733543427E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999962500747526	WITHOUT_CLASSIFICATION	3.7499252473693306E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999977002197502	WITHOUT_CLASSIFICATION	2.299780249717504E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.999999847868492	WITHOUT_CLASSIFICATION	1.5213150793712897E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999998865426122	WITHOUT_CLASSIFICATION	1.134573878019552E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999147670646	WITHOUT_CLASSIFICATION	8.523293534764905E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999567758002672	WITHOUT_CLASSIFICATION	4.3224199732808714E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.99999961206937	WITHOUT_CLASSIFICATION	3.8793062995629873E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999996683060395	WITHOUT_CLASSIFICATION	3.3169396051139296E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999998795354743	WITHOUT_CLASSIFICATION	1.2046452569875114E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999034873015888	WITHOUT_CLASSIFICATION	9.651269841109981E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999998030822114	WITHOUT_CLASSIFICATION	1.9691778862085902E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999998898574228	WITHOUT_CLASSIFICATION	1.1014257717944389E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999277750843	WITHOUT_CLASSIFICATION	7.222491571887669E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999998425398228	WITHOUT_CLASSIFICATION	1.5746017720000172E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999902880059	WITHOUT_CLASSIFICATION	9.711994099142008E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999979950165357	WITHOUT_CLASSIFICATION	2.0049834642959737E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913381136912	WITHOUT_CLASSIFICATION	8.661886308857165E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999882215701427	WITHOUT_CLASSIFICATION	1.1778429857346381E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999998215889214	WITHOUT_CLASSIFICATION	1.7841107855090857E-7	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9998879138845449	WITHOUT_CLASSIFICATION	1.1208611545507475E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9998409983800971	WITHOUT_CLASSIFICATION	1.5900161990292078E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999872317713617	WITHOUT_CLASSIFICATION	1.2768228638237424E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999904759253099	WITHOUT_CLASSIFICATION	9.524074690216208E-6	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999984729029202	WITHOUT_CLASSIFICATION	1.5270970797709805E-6	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999993361500766	WITHOUT_CLASSIFICATION	6.638499232685864E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998025982189286	WITHOUT_CLASSIFICATION	1.974017810714801E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998699016405661	WITHOUT_CLASSIFICATION	1.3009835943396825E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9996185037398049	WITHOUT_CLASSIFICATION	3.814962601950083E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9997850842125836	WITHOUT_CLASSIFICATION	2.149157874163931E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9997659534447411	WITHOUT_CLASSIFICATION	2.3404655525901882E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999999271237996	WITHOUT_CLASSIFICATION	7.287620039818575E-8	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999999353081729	WITHOUT_CLASSIFICATION	6.46918271286036E-8	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999998518379875	WITHOUT_CLASSIFICATION	1.4816201250842861E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999912806483	WITHOUT_CLASSIFICATION	8.719351659076576E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999984559798	WITHOUT_CLASSIFICATION	1.5440201953344505E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999991210094272	WITHOUT_CLASSIFICATION	8.789905727953776E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999277750843	WITHOUT_CLASSIFICATION	7.222491571887669E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999998425398228	WITHOUT_CLASSIFICATION	1.5746017720000172E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999902880059	WITHOUT_CLASSIFICATION	9.711994099142008E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999979950165357	WITHOUT_CLASSIFICATION	2.0049834642959737E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999913381136912	WITHOUT_CLASSIFICATION	8.661886308857165E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.999999490565577	WITHOUT_CLASSIFICATION	5.094344229677137E-7	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999990525214252	WITHOUT_CLASSIFICATION	9.474785748583556E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999996973539208	WITHOUT_CLASSIFICATION	3.02646079172837E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999951528091184	WITHOUT_CLASSIFICATION	4.847190881523662E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999951528091184	WITHOUT_CLASSIFICATION	4.847190881523662E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999951528091184	WITHOUT_CLASSIFICATION	4.847190881523662E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999951528091184	WITHOUT_CLASSIFICATION	4.847190881523662E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999951528091184	WITHOUT_CLASSIFICATION	4.847190881523662E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999984586537829	WITHOUT_CLASSIFICATION	1.541346217158195E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998992619445	WITHOUT_CLASSIFICATION	1.0073805540179797E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999994135598106	WITHOUT_CLASSIFICATION	5.86440189478852E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999971332224875	WITHOUT_CLASSIFICATION	2.866777512494627E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999998557426556	WITHOUT_CLASSIFICATION	1.4425734440296857E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989920118592	WITHOUT_CLASSIFICATION	1.007988140851094E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999997028375565	WITHOUT_CLASSIFICATION	2.9716244358578916E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999971323729921	WITHOUT_CLASSIFICATION	2.8676270078868775E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999997427872759	WITHOUT_CLASSIFICATION	2.5721272412136076E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999991305577959	WITHOUT_CLASSIFICATION	8.694422041701052E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999991305577959	WITHOUT_CLASSIFICATION	8.694422041701052E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999991305577959	WITHOUT_CLASSIFICATION	8.694422041701052E-7	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.99999026438494	WITHOUT_CLASSIFICATION	9.735615060109969E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999883522307592	WITHOUT_CLASSIFICATION	1.1647769240797261E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999998006581508	WITHOUT_CLASSIFICATION	1.9934184923218247E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999984695310533	WITHOUT_CLASSIFICATION	1.5304689466707343E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999984695310533	WITHOUT_CLASSIFICATION	1.5304689466707343E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999925181863442	WITHOUT_CLASSIFICATION	7.4818136559147E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999984695310533	WITHOUT_CLASSIFICATION	1.5304689466707343E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999980756524988	WITHOUT_CLASSIFICATION	1.924347501306111E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999984533609342	WITHOUT_CLASSIFICATION	1.5466390658644167E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999991432260618	WITHOUT_CLASSIFICATION	8.567739381991616E-7	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999904556337285	WITHOUT_CLASSIFICATION	9.544366271582275E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999904556337285	WITHOUT_CLASSIFICATION	9.544366271582275E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999993473439245	WITHOUT_CLASSIFICATION	6.526560755518708E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999994883667978	WITHOUT_CLASSIFICATION	5.116332022728232E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999994876910014	WITHOUT_CLASSIFICATION	5.123089986027766E-6	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.999999603666714	WITHOUT_CLASSIFICATION	3.963332860367554E-7	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.999271508817461	WITHOUT_CLASSIFICATION	7.284911825390404E-4	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999999696599896	WITHOUT_CLASSIFICATION	3.0340010410055025E-8	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999988332548133	WITHOUT_CLASSIFICATION	1.1667451866812764E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999958702597836	WITHOUT_CLASSIFICATION	4.129740216309142E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999999584469103	WITHOUT_CLASSIFICATION	4.1553089754363195E-8	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999932427973972	WITHOUT_CLASSIFICATION	6.7572026028586705E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999980907129495	WITHOUT_CLASSIFICATION	1.909287050496205E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999932427973972	WITHOUT_CLASSIFICATION	6.7572026028586705E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999962500747526	WITHOUT_CLASSIFICATION	3.7499252473693306E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999926355142665	WITHOUT_CLASSIFICATION	7.364485733543427E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999743635224	WITHOUT_CLASSIFICATION	2.5636477656525412E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999999254186763	WITHOUT_CLASSIFICATION	7.458132367344295E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999959727669296	WITHOUT_CLASSIFICATION	4.027233070410646E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999988700705168	WITHOUT_CLASSIFICATION	1.1299294831887379E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999962500747526	WITHOUT_CLASSIFICATION	3.7499252473693306E-6	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999998951216673	WITHOUT_CLASSIFICATION	1.048783327127415E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994709508111	WITHOUT_CLASSIFICATION	5.290491889391324E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999998795153786	WITHOUT_CLASSIFICATION	1.2048462141073124E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999999985230747	WITHOUT_CLASSIFICATION	1.4769252910772765E-8	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.999989172800751	WITHOUT_CLASSIFICATION	1.0827199249069934E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.999989172800751	WITHOUT_CLASSIFICATION	1.0827199249069934E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999995855716393	WITHOUT_CLASSIFICATION	4.1442836077826887E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999359252751	WITHOUT_CLASSIFICATION	6.407472495152606E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999998042777308	WITHOUT_CLASSIFICATION	1.9572226918351083E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999993323469962	WITHOUT_CLASSIFICATION	6.676530037772309E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999998309717986	WITHOUT_CLASSIFICATION	1.6902820132067276E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999998835287277	WITHOUT_CLASSIFICATION	1.164712723300581E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999245336445	WITHOUT_CLASSIFICATION	7.54663555215454E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.999972589012947	WITHOUT_CLASSIFICATION	2.741098705300334E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999960731009604	WITHOUT_CLASSIFICATION	3.926899039672474E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998922352937621	WITHOUT_CLASSIFICATION	1.0776470623780784E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999795089087378	WITHOUT_CLASSIFICATION	2.0491091262236694E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999175244917277	WITHOUT_CLASSIFICATION	8.24755082723779E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999018686037	WITHOUT_CLASSIFICATION	9.813139638649472E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999383513484333	WITHOUT_CLASSIFICATION	6.164865156659707E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999984935753741	WITHOUT_CLASSIFICATION	1.5064246258990532E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999665487764	WITHOUT_CLASSIFICATION	3.3451223580666186E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999943277121	WITHOUT_CLASSIFICATION	5.672287883926845E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999995656864885	WITHOUT_CLASSIFICATION	4.3431351150006534E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999997043958877	WITHOUT_CLASSIFICATION	2.956041123678633E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999978980249528	WITHOUT_CLASSIFICATION	2.1019750472331346E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.999999907920724	WITHOUT_CLASSIFICATION	9.20792759475601E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999996929202462	WITHOUT_CLASSIFICATION	3.070797537805892E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999665487764	WITHOUT_CLASSIFICATION	3.3451223580666186E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999997877510718	WITHOUT_CLASSIFICATION	2.1224892810615156E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999660297128	WITHOUT_CLASSIFICATION	3.3970287132401534E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999996881552826	WITHOUT_CLASSIFICATION	3.1184471739955775E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999993476759206	WITHOUT_CLASSIFICATION	6.523240793831338E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999351278652	WITHOUT_CLASSIFICATION	6.4872134816905E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999999734731931	WITHOUT_CLASSIFICATION	2.652680688894493E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999993807281169	WITHOUT_CLASSIFICATION	6.192718831702679E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999996105384427	WITHOUT_CLASSIFICATION	3.8946155733177267E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999622617759	WITHOUT_CLASSIFICATION	3.7738224062332614E-8	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999940201242563	WITHOUT_CLASSIFICATION	5.979875743681359E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999940201242563	WITHOUT_CLASSIFICATION	5.979875743681359E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.999999907920724	WITHOUT_CLASSIFICATION	9.20792759475601E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999413144162	WITHOUT_CLASSIFICATION	5.868558372194021E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.999999991337928	WITHOUT_CLASSIFICATION	8.662071985469811E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999997705934935	WITHOUT_CLASSIFICATION	2.2940650644863552E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999998673993794	WITHOUT_CLASSIFICATION	1.326006205934702E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999689341900235	WITHOUT_CLASSIFICATION	3.1065809976466684E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999912000098352	WITHOUT_CLASSIFICATION	8.799990164835928E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999956210743753	WITHOUT_CLASSIFICATION	4.378925624675359E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999995417960607	WITHOUT_CLASSIFICATION	4.5820393934373233E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999333636496943	WITHOUT_CLASSIFICATION	6.663635030558845E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999839775225118	WITHOUT_CLASSIFICATION	1.6022477488249704E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999154775232	WITHOUT_CLASSIFICATION	8.452247673159398E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.999983807310554	WITHOUT_CLASSIFICATION	1.6192689445965674E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999440827040428	WITHOUT_CLASSIFICATION	5.591729595721246E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999998992601046	WITHOUT_CLASSIFICATION	1.0073989538107223E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.999999847868492	WITHOUT_CLASSIFICATION	1.5213150793712897E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999908614747	WITHOUT_CLASSIFICATION	9.138525342000725E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999362863542	WITHOUT_CLASSIFICATION	6.371364577870286E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999788673245309	WITHOUT_CLASSIFICATION	2.1132675469120396E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999231102312588	WITHOUT_CLASSIFICATION	7.688976874118917E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999908614747	WITHOUT_CLASSIFICATION	9.138525342000725E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999998174619698	WITHOUT_CLASSIFICATION	1.8253803022291556E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999626285129	WITHOUT_CLASSIFICATION	3.737148714912214E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999259062894	WITHOUT_CLASSIFICATION	7.409371062129771E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999997616041522	WITHOUT_CLASSIFICATION	2.383958479695936E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.999999714361222	WITHOUT_CLASSIFICATION	2.8563877804253E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999495389791735	WITHOUT_CLASSIFICATION	5.0461020826544885E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999495389791735	WITHOUT_CLASSIFICATION	5.0461020826544885E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999495389791735	WITHOUT_CLASSIFICATION	5.0461020826544885E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999495389791735	WITHOUT_CLASSIFICATION	5.0461020826544885E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999495389791735	WITHOUT_CLASSIFICATION	5.0461020826544885E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999495389791735	WITHOUT_CLASSIFICATION	5.0461020826544885E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949840316066	WITHOUT_CLASSIFICATION	5.015968393397765E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999977108488224	WITHOUT_CLASSIFICATION	2.2891511776185025E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999964697193116	WITHOUT_CLASSIFICATION	3.530280688506258E-6	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999924369767947	WITHOUT_CLASSIFICATION	7.563023205272102E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999723229989	WITHOUT_CLASSIFICATION	2.767700117493855E-8	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999776290850502	WITHOUT_CLASSIFICATION	2.2370914949826634E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999325598181	WITHOUT_CLASSIFICATION	6.744018189317902E-8	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999978519018157	WITHOUT_CLASSIFICATION	2.1480981843489814E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9998936519872474	WITHOUT_CLASSIFICATION	1.0634801275252274E-4	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999955781065307	WITHOUT_CLASSIFICATION	4.421893469302819E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999462932624	WITHOUT_CLASSIFICATION	5.370673772531766E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999978096152786	WITHOUT_CLASSIFICATION	2.1903847214794814E-6	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999954194725	WITHOUT_CLASSIFICATION	4.580527443155415E-9	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999968706754551	WITHOUT_CLASSIFICATION	3.1293245449247117E-6	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999727894393	WITHOUT_CLASSIFICATION	2.7210560671669367E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999757400090181	WITHOUT_CLASSIFICATION	2.4259990981870842E-5	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999999892123044	WITHOUT_CLASSIFICATION	1.078769560701293E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999983201880602	WITHOUT_CLASSIFICATION	1.6798119396761949E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999983201880602	WITHOUT_CLASSIFICATION	1.6798119396761949E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999983201880602	WITHOUT_CLASSIFICATION	1.6798119396761949E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999917554855977	WITHOUT_CLASSIFICATION	8.244514402237395E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999963984658532	WITHOUT_CLASSIFICATION	3.6015341467673464E-6	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999994756460223	WITHOUT_CLASSIFICATION	5.243539776797508E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999997465653766	WITHOUT_CLASSIFICATION	2.5343462336378085E-7	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9853084675186029	WITHOUT_CLASSIFICATION	0.014691532481397094	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999977002197502	WITHOUT_CLASSIFICATION	2.299780249717504E-6	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999581027392	WITHOUT_CLASSIFICATION	4.1897260870301794E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995957468267	WITHOUT_CLASSIFICATION	4.04253173182773E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999977648214581	WITHOUT_CLASSIFICATION	2.2351785419050625E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999891525489778	WITHOUT_CLASSIFICATION	1.0847451022152625E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999998714081989	WITHOUT_CLASSIFICATION	1.285918010938355E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999999544664773	WITHOUT_CLASSIFICATION	4.5533522705531374E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999998220472169	WITHOUT_CLASSIFICATION	1.779527829722158E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999932427973972	WITHOUT_CLASSIFICATION	6.7572026028586705E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999932427973972	WITHOUT_CLASSIFICATION	6.7572026028586705E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999938971847784	WITHOUT_CLASSIFICATION	6.102815221625185E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.999996211529124	WITHOUT_CLASSIFICATION	3.7884708758857412E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999969705670149	WITHOUT_CLASSIFICATION	3.0294329850826106E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999316586079	WITHOUT_CLASSIFICATION	6.834139207107003E-8	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999952098960836	WITHOUT_CLASSIFICATION	4.790103916371392E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999950694150213	WITHOUT_CLASSIFICATION	4.930584978766936E-6	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999980686089229	WITHOUT_CLASSIFICATION	1.931391077142834E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.99999397904643	WITHOUT_CLASSIFICATION	6.020953570118272E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999578936005	WITHOUT_CLASSIFICATION	4.2106399435962383E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999932427973972	WITHOUT_CLASSIFICATION	6.7572026028586705E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999926355142665	WITHOUT_CLASSIFICATION	7.364485733543427E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999962808558827	WITHOUT_CLASSIFICATION	3.719144117280041E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.999983013241857	WITHOUT_CLASSIFICATION	1.6986758143059995E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999992710174347	WITHOUT_CLASSIFICATION	7.289825654221738E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999994390044127	WITHOUT_CLASSIFICATION	5.609955872704172E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999947373278674	WITHOUT_CLASSIFICATION	5.262672132588949E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999947373278674	WITHOUT_CLASSIFICATION	5.262672132588949E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999999613508961	WITHOUT_CLASSIFICATION	3.864910392516116E-8	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999787985740758	WITHOUT_CLASSIFICATION	2.1201425924240233E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999998813133675	WITHOUT_CLASSIFICATION	1.1868663246924245E-7	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999999983060298	WITHOUT_CLASSIFICATION	1.6939701088200115E-9	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999989311871483	WITHOUT_CLASSIFICATION	1.0688128516941816E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999989311871483	WITHOUT_CLASSIFICATION	1.0688128516941816E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999937445558996	WITHOUT_CLASSIFICATION	6.2554441002988965E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999937445558996	WITHOUT_CLASSIFICATION	6.2554441002988965E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999991834399563	WITHOUT_CLASSIFICATION	8.165600437696462E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999971365327042	WITHOUT_CLASSIFICATION	2.863467295768403E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999872146403156	WITHOUT_CLASSIFICATION	1.2785359684331878E-5	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999997299145462	WITHOUT_CLASSIFICATION	2.7008545386792817E-7	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999996469924233	WITHOUT_CLASSIFICATION	3.5300757665700884E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.999729995391357	WITHOUT_CLASSIFICATION	2.7000460864305714E-4	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.999729995391357	WITHOUT_CLASSIFICATION	2.7000460864305714E-4	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999967201153794	WITHOUT_CLASSIFICATION	3.2798846204335566E-6	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999880105837272	WITHOUT_CLASSIFICATION	1.1989416272856276E-5	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999993835582912	WITHOUT_CLASSIFICATION	6.164417088165028E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999948425438566	WITHOUT_CLASSIFICATION	5.1574561433537294E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998570745402	WITHOUT_CLASSIFICATION	1.4292545978511332E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999999517877579	WITHOUT_CLASSIFICATION	4.821224219947253E-8	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9999510378136245	WITHOUT_CLASSIFICATION	4.896218637551011E-5	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999996334785385	WITHOUT_CLASSIFICATION	3.6652146160355304E-7	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999956166127668	WITHOUT_CLASSIFICATION	4.383387233163283E-6	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999808226339463	WITHOUT_CLASSIFICATION	1.9177366053822033E-5	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999999724825599	WITHOUT_CLASSIFICATION	2.7517440093799203E-8	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999862231438	WITHOUT_CLASSIFICATION	1.3776856195495755E-8	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9999976306574478	WITHOUT_CLASSIFICATION	2.369342552088647E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999927083244037	WITHOUT_CLASSIFICATION	7.291675596347398E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999977269941515	WITHOUT_CLASSIFICATION	2.273005848528204E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999994165554507	WITHOUT_CLASSIFICATION	5.834445494092568E-7	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999996794989763	WITHOUT_CLASSIFICATION	3.2050102371935676E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999948804426589	WITHOUT_CLASSIFICATION	5.119557341013499E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999986394145057	WITHOUT_CLASSIFICATION	1.360585494248227E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.99999827438712	WITHOUT_CLASSIFICATION	1.7256128800510197E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.99999827438712	WITHOUT_CLASSIFICATION	1.7256128800510197E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999995137314677	WITHOUT_CLASSIFICATION	4.862685322460166E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9992759564380626	WITHOUT_CLASSIFICATION	7.240435619374173E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999975467266424	WITHOUT_CLASSIFICATION	2.4532733576035255E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999994147901454	WITHOUT_CLASSIFICATION	5.852098545750194E-7	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.999976684490273	WITHOUT_CLASSIFICATION	2.3315509726990962E-5	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999462990676926	WITHOUT_CLASSIFICATION	5.3700932307367515E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999977541143493	WITHOUT_CLASSIFICATION	2.245885650696695E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999947183513574	WITHOUT_CLASSIFICATION	5.2816486424642465E-6	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999967373785775	WITHOUT_CLASSIFICATION	3.2626214224564105E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999998098029	WITHOUT_CLASSIFICATION	1.90197069094609E-10	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999923136721011	WITHOUT_CLASSIFICATION	7.686327898970255E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999791570259464	WITHOUT_CLASSIFICATION	2.0842974053582175E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999279185186377	WITHOUT_CLASSIFICATION	7.208148136236699E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.999613737465875	WITHOUT_CLASSIFICATION	3.862625341250707E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999164627549	WITHOUT_CLASSIFICATION	8.353724513006062E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999967973869461	WITHOUT_CLASSIFICATION	3.202613053825081E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999964850622179	WITHOUT_CLASSIFICATION	3.5149377820613795E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999979468727273	WITHOUT_CLASSIFICATION	2.0531272726559916E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999923186811678	WITHOUT_CLASSIFICATION	7.68131883213921E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999923186811678	WITHOUT_CLASSIFICATION	7.68131883213921E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999923186811678	WITHOUT_CLASSIFICATION	7.68131883213921E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999923186811678	WITHOUT_CLASSIFICATION	7.68131883213921E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999972677127249	WITHOUT_CLASSIFICATION	2.7322872749878203E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999148479152	WITHOUT_CLASSIFICATION	8.515208491625737E-8	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999148479152	WITHOUT_CLASSIFICATION	8.515208491625737E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999600402046	WITHOUT_CLASSIFICATION	3.995979530550335E-8	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999617363648682	WITHOUT_CLASSIFICATION	3.8263635131760406E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999998765126167	WITHOUT_CLASSIFICATION	1.234873833215352E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999995890667951	WITHOUT_CLASSIFICATION	4.109332048796596E-7	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999980510557362	WITHOUT_CLASSIFICATION	1.9489442637219662E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999995994285116	WITHOUT_CLASSIFICATION	4.0057148835666645E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999518707227814	WITHOUT_CLASSIFICATION	4.812927721877214E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999977781944881	WITHOUT_CLASSIFICATION	2.221805511910867E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999977781944881	WITHOUT_CLASSIFICATION	2.221805511910867E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999977781944881	WITHOUT_CLASSIFICATION	2.221805511910867E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.999999362331793	WITHOUT_CLASSIFICATION	6.376682070507679E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998487012722	WITHOUT_CLASSIFICATION	1.5129872768846136E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999849691040885	WITHOUT_CLASSIFICATION	1.5030895911370107E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999991498187518	WITHOUT_CLASSIFICATION	8.501812480583558E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999991498187518	WITHOUT_CLASSIFICATION	8.501812480583558E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998361357509	WITHOUT_CLASSIFICATION	1.6386424897607303E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.999999003935399	WITHOUT_CLASSIFICATION	9.96064601019694E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984740171968	WITHOUT_CLASSIFICATION	1.5259828032908928E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999995967210729	WITHOUT_CLASSIFICATION	4.032789271527653E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997876956102723	WITHOUT_CLASSIFICATION	2.123043897276837E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999998818730909	WITHOUT_CLASSIFICATION	1.1812690902931059E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999850480168104	WITHOUT_CLASSIFICATION	1.4951983189422903E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999997929911343	WITHOUT_CLASSIFICATION	2.0700886581118343E-7	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999045650166	WITHOUT_CLASSIFICATION	9.543498345680931E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999996568204168	WITHOUT_CLASSIFICATION	3.43179583257153E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999528140462	WITHOUT_CLASSIFICATION	4.7185953818210346E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999025037293301	WITHOUT_CLASSIFICATION	9.749627066995142E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999025037293301	WITHOUT_CLASSIFICATION	9.749627066995142E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9996113474593633	WITHOUT_CLASSIFICATION	3.886525406367576E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998636115996185	WITHOUT_CLASSIFICATION	1.3638840038167807E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998636115996185	WITHOUT_CLASSIFICATION	1.3638840038167807E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999909938152823	WITHOUT_CLASSIFICATION	9.006184717569945E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999988533976919	WITHOUT_CLASSIFICATION	1.1466023080714098E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999988533976919	WITHOUT_CLASSIFICATION	1.1466023080714098E-6	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999954080470884	WITHOUT_CLASSIFICATION	4.5919529115582635E-6	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999999245579962	WITHOUT_CLASSIFICATION	7.544200376681404E-8	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9999773656194522	WITHOUT_CLASSIFICATION	2.2634380547838772E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954748286789	WITHOUT_CLASSIFICATION	4.525171321200498E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954748286789	WITHOUT_CLASSIFICATION	4.525171321200498E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952368538817	WITHOUT_CLASSIFICATION	4.7631461183206706E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999979003482636	WITHOUT_CLASSIFICATION	2.099651736351905E-6	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999171442971264	WITHOUT_CLASSIFICATION	8.285570287359416E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9954369575817358	WITHOUT_CLASSIFICATION	0.004563042418264197	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999385611502049	WITHOUT_CLASSIFICATION	6.143884979515208E-5	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999385611502049	WITHOUT_CLASSIFICATION	6.143884979515208E-5	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.8804938151140091	WITHOUT_CLASSIFICATION	0.11950618488599087	DEFECT
// is this an error???	DEFECT	0.999983515044135	WITHOUT_CLASSIFICATION	1.648495586502454E-5	DEFECT
// is this an error???	DEFECT	0.999983515044135	WITHOUT_CLASSIFICATION	1.648495586502454E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999892280473133	WITHOUT_CLASSIFICATION	1.0771952686718028E-5	DEFECT
