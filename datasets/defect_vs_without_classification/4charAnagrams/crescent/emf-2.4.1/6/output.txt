// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999988402440637	WITHOUT_CLASSIFICATION	1.1597559362616302E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999948555795427	WITHOUT_CLASSIFICATION	5.144420457331768E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999999080340058	WITHOUT_CLASSIFICATION	9.19659941208638E-8	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999912921851886	WITHOUT_CLASSIFICATION	8.707814811410577E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999995974250118	WITHOUT_CLASSIFICATION	4.025749882711106E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999920619463	WITHOUT_CLASSIFICATION	7.938053697739377E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964720276546	WITHOUT_CLASSIFICATION	3.527972345335862E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999994299974303	WITHOUT_CLASSIFICATION	5.700025696010303E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999989536405267	WITHOUT_CLASSIFICATION	1.0463594733078132E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999920840835993	WITHOUT_CLASSIFICATION	7.915916400594692E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999717122144137	WITHOUT_CLASSIFICATION	2.8287785586207528E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999845649502919	WITHOUT_CLASSIFICATION	1.5435049708115384E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997856772781851	WITHOUT_CLASSIFICATION	2.143227218148953E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994190032871	WITHOUT_CLASSIFICATION	5.809967129169183E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990035622859	WITHOUT_CLASSIFICATION	9.964377141344456E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984044861273	WITHOUT_CLASSIFICATION	1.59551387276114E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999932875701767	WITHOUT_CLASSIFICATION	6.7124298232791115E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964720276546	WITHOUT_CLASSIFICATION	3.527972345335862E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999911820345372	WITHOUT_CLASSIFICATION	8.817965462698227E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999961926294143	WITHOUT_CLASSIFICATION	3.807370585760438E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999995840187543	WITHOUT_CLASSIFICATION	4.159812456506144E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999942503875755	WITHOUT_CLASSIFICATION	5.749612424564404E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999942503875755	WITHOUT_CLASSIFICATION	5.749612424564404E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999996994433444	WITHOUT_CLASSIFICATION	3.005566555941473E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990273431068	WITHOUT_CLASSIFICATION	9.726568932792852E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999975439789716	WITHOUT_CLASSIFICATION	2.45602102841617E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999975152054996	WITHOUT_CLASSIFICATION	2.484794500266938E-6	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999975891172752	WITHOUT_CLASSIFICATION	2.4108827247421174E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999983198335854	WITHOUT_CLASSIFICATION	1.6801664144687876E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999715559860712	WITHOUT_CLASSIFICATION	2.8444013928791352E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999968487541252	WITHOUT_CLASSIFICATION	3.151245874775653E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999932097975316	WITHOUT_CLASSIFICATION	6.790202468388468E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9982783741528282	WITHOUT_CLASSIFICATION	0.0017216258471719132	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999968712137106	WITHOUT_CLASSIFICATION	3.128786289344966E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999807931430934	WITHOUT_CLASSIFICATION	1.9206856906592567E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999966433454515	WITHOUT_CLASSIFICATION	3.35665454849801E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.999998492935178	WITHOUT_CLASSIFICATION	1.5070648220166654E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999994944836762	WITHOUT_CLASSIFICATION	5.05516323863855E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999818551783629	WITHOUT_CLASSIFICATION	1.8144821637041042E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999985913379457	WITHOUT_CLASSIFICATION	1.4086620542604704E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999995512989245	WITHOUT_CLASSIFICATION	4.4870107556586774E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9990680232342862	WITHOUT_CLASSIFICATION	9.319767657137056E-4	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999982562959149	WITHOUT_CLASSIFICATION	1.7437040850168738E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999999992665651	WITHOUT_CLASSIFICATION	7.3343490421037315E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999927420738901	WITHOUT_CLASSIFICATION	7.257926109870504E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999915768781653	WITHOUT_CLASSIFICATION	8.423121834675805E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999690984954261	WITHOUT_CLASSIFICATION	3.090150457397483E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999965276478585	WITHOUT_CLASSIFICATION	3.472352141470749E-6	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9999273108364457	WITHOUT_CLASSIFICATION	7.268916355431413E-5	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.999970372078032	WITHOUT_CLASSIFICATION	2.9627921967962048E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999690984954261	WITHOUT_CLASSIFICATION	3.090150457397483E-5	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999425989538994	WITHOUT_CLASSIFICATION	5.740104610075249E-5	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999389952648254	WITHOUT_CLASSIFICATION	6.100473517452223E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998975700140265	WITHOUT_CLASSIFICATION	1.0242998597348641E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999579963329316	WITHOUT_CLASSIFICATION	4.2003667068416974E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999622138918276	WITHOUT_CLASSIFICATION	3.778610817230402E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999647916178782	WITHOUT_CLASSIFICATION	3.520838212186306E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999998719380472	WITHOUT_CLASSIFICATION	1.2806195279471733E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999118669237415	WITHOUT_CLASSIFICATION	8.813307625859095E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999901088335716	WITHOUT_CLASSIFICATION	9.891166428344537E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.999938437979159	WITHOUT_CLASSIFICATION	6.156202084094796E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.993549008763681	WITHOUT_CLASSIFICATION	0.006450991236319042	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999910228258733	WITHOUT_CLASSIFICATION	8.97717412672513E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9976023711513485	WITHOUT_CLASSIFICATION	0.002397628848651392	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9994552141397351	WITHOUT_CLASSIFICATION	5.447858602648494E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999983125513054	WITHOUT_CLASSIFICATION	1.6874486945744698E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999997180342243	WITHOUT_CLASSIFICATION	2.819657757581326E-7	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999532379677346	WITHOUT_CLASSIFICATION	4.6762032265270944E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9988595252086019	WITHOUT_CLASSIFICATION	0.001140474791398023	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999845649502919	WITHOUT_CLASSIFICATION	1.5435049708115384E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997856772781851	WITHOUT_CLASSIFICATION	2.143227218148953E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994190032871	WITHOUT_CLASSIFICATION	5.809967129169183E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.999996990908086	WITHOUT_CLASSIFICATION	3.0090919139242158E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999949387917124	WITHOUT_CLASSIFICATION	5.06120828752959E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990035622859	WITHOUT_CLASSIFICATION	9.964377141344456E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984044861273	WITHOUT_CLASSIFICATION	1.59551387276114E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999932875701767	WITHOUT_CLASSIFICATION	6.7124298232791115E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999796792416971	WITHOUT_CLASSIFICATION	2.0320758302960726E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999796792416971	WITHOUT_CLASSIFICATION	2.0320758302960726E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999796792416971	WITHOUT_CLASSIFICATION	2.0320758302960726E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999920619463	WITHOUT_CLASSIFICATION	7.938053697739377E-9	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999977648700098	WITHOUT_CLASSIFICATION	2.2351299901923618E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999998038287246	WITHOUT_CLASSIFICATION	1.961712754209112E-7	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999999626204944	WITHOUT_CLASSIFICATION	3.737950562535369E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999995840187543	WITHOUT_CLASSIFICATION	4.159812456506144E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984706732438	WITHOUT_CLASSIFICATION	1.5293267563062077E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999715559860712	WITHOUT_CLASSIFICATION	2.8444013928791352E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999968487541252	WITHOUT_CLASSIFICATION	3.151245874775653E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9982783741528282	WITHOUT_CLASSIFICATION	0.0017216258471719132	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999966433454515	WITHOUT_CLASSIFICATION	3.35665454849801E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999925197874207	WITHOUT_CLASSIFICATION	7.480212579258283E-6	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999989873645241	WITHOUT_CLASSIFICATION	1.0126354760241402E-6	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999995668899345	WITHOUT_CLASSIFICATION	4.3311006548167933E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999989829347119	WITHOUT_CLASSIFICATION	1.017065288033872E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999977076475246	WITHOUT_CLASSIFICATION	2.2923524753549855E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999985913379457	WITHOUT_CLASSIFICATION	1.4086620542604704E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9990680232342862	WITHOUT_CLASSIFICATION	9.319767657137056E-4	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999984640472063	WITHOUT_CLASSIFICATION	1.5359527937834616E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.999998451829385	WITHOUT_CLASSIFICATION	1.5481706150910085E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999578130479245	WITHOUT_CLASSIFICATION	4.2186952075414314E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.999999975249365	WITHOUT_CLASSIFICATION	2.4750634936159614E-8	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999914752866464	WITHOUT_CLASSIFICATION	8.524713353555012E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999960162939915	WITHOUT_CLASSIFICATION	3.983706008588982E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999994773871637	WITHOUT_CLASSIFICATION	5.226128363944078E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999953950507254	WITHOUT_CLASSIFICATION	4.604949274593937E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999632691831855	WITHOUT_CLASSIFICATION	3.673081681456517E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999656408529631	WITHOUT_CLASSIFICATION	3.435914703694427E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998475358796	WITHOUT_CLASSIFICATION	1.524641205025344E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999632691831855	WITHOUT_CLASSIFICATION	3.673081681456517E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999474212238357	WITHOUT_CLASSIFICATION	5.257877616425446E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999996343594968	WITHOUT_CLASSIFICATION	3.6564050316167017E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998732089469	WITHOUT_CLASSIFICATION	1.2679105303172087E-7	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999981111471414	WITHOUT_CLASSIFICATION	1.8888528585823772E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999632691831855	WITHOUT_CLASSIFICATION	3.673081681456517E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999656408529631	WITHOUT_CLASSIFICATION	3.435914703694427E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999989919957015	WITHOUT_CLASSIFICATION	1.008004298482127E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999481861096	WITHOUT_CLASSIFICATION	5.1813890302087096E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999984889669844	WITHOUT_CLASSIFICATION	1.5110330156597673E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999995383906001	WITHOUT_CLASSIFICATION	4.6160939991229594E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998710892213	WITHOUT_CLASSIFICATION	1.2891077867860306E-7	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999955534242186	WITHOUT_CLASSIFICATION	4.446575781340163E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999998738143534	WITHOUT_CLASSIFICATION	1.2618564668241413E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9997802509033109	WITHOUT_CLASSIFICATION	2.1974909668913956E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9996889181366531	WITHOUT_CLASSIFICATION	3.110818633469521E-4	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9995600657821462	WITHOUT_CLASSIFICATION	4.399342178539173E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9975166914883467	WITHOUT_CLASSIFICATION	0.0024833085116532996	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999996269131026	WITHOUT_CLASSIFICATION	3.7308689735277533E-7	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998569610625	WITHOUT_CLASSIFICATION	1.4303893742251853E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999965276478585	WITHOUT_CLASSIFICATION	3.472352141470749E-6	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999562308697	WITHOUT_CLASSIFICATION	4.376913028176196E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999986837306954	WITHOUT_CLASSIFICATION	1.3162693045212971E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.999362041278541	WITHOUT_CLASSIFICATION	6.37958721459056E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999799780330961	WITHOUT_CLASSIFICATION	2.0021966903841945E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999962176631055	WITHOUT_CLASSIFICATION	3.782336894401089E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999839851523626	WITHOUT_CLASSIFICATION	1.6014847637372E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999974595477775	WITHOUT_CLASSIFICATION	2.540452222487613E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999562308697	WITHOUT_CLASSIFICATION	4.376913028176196E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999986837306954	WITHOUT_CLASSIFICATION	1.3162693045212971E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.999973985199904	WITHOUT_CLASSIFICATION	2.6014800096037948E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.999973985199904	WITHOUT_CLASSIFICATION	2.6014800096037948E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999982183979653	WITHOUT_CLASSIFICATION	1.7816020346242457E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9998037264176227	WITHOUT_CLASSIFICATION	1.9627358237741665E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9989789021921766	WITHOUT_CLASSIFICATION	0.001021097807823444	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999982183979653	WITHOUT_CLASSIFICATION	1.7816020346242457E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9998037264176227	WITHOUT_CLASSIFICATION	1.9627358237741665E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999976674167916	WITHOUT_CLASSIFICATION	2.33258320845333E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999830438660877	WITHOUT_CLASSIFICATION	1.695613391221274E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.999999872553982	WITHOUT_CLASSIFICATION	1.274460179239021E-7	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999989358799066	WITHOUT_CLASSIFICATION	1.0641200933103023E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.999999872553982	WITHOUT_CLASSIFICATION	1.274460179239021E-7	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999996504355969	WITHOUT_CLASSIFICATION	3.495644030857621E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999998969083259	WITHOUT_CLASSIFICATION	1.0309167402997389E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999998969083259	WITHOUT_CLASSIFICATION	1.0309167402997389E-7	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999690918154701	WITHOUT_CLASSIFICATION	3.090818452996978E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999986156325482	WITHOUT_CLASSIFICATION	1.3843674517492223E-6	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9979241761291868	WITHOUT_CLASSIFICATION	0.002075823870813106	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999247226951713	WITHOUT_CLASSIFICATION	7.527730482873442E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999998478937192	WITHOUT_CLASSIFICATION	1.5210628087433622E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.999997524537557	WITHOUT_CLASSIFICATION	2.475462442969172E-6	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.999990699026509	WITHOUT_CLASSIFICATION	9.300973491106922E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999984049900759	WITHOUT_CLASSIFICATION	1.5950099241293017E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999650529581	WITHOUT_CLASSIFICATION	3.494704184029852E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999963999813457	WITHOUT_CLASSIFICATION	3.600018654202775E-6	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.999999834272544	WITHOUT_CLASSIFICATION	1.657274559981942E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.99997953888681	WITHOUT_CLASSIFICATION	2.046111318995485E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.999991823185564	WITHOUT_CLASSIFICATION	8.176814435991749E-6	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999928532363802	WITHOUT_CLASSIFICATION	7.146763619857445E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999924540671613	WITHOUT_CLASSIFICATION	7.545932838682698E-6	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999791615693011	WITHOUT_CLASSIFICATION	2.0838430698826375E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999891463235462	WITHOUT_CLASSIFICATION	1.0853676453851695E-5	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999998537283523	WITHOUT_CLASSIFICATION	1.4627164764371128E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999483277306669	WITHOUT_CLASSIFICATION	5.1672269333073865E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999483277306669	WITHOUT_CLASSIFICATION	5.1672269333073865E-5	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998187434128	WITHOUT_CLASSIFICATION	1.8125658729901182E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998378060329	WITHOUT_CLASSIFICATION	1.6219396718316875E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9998394521000085	WITHOUT_CLASSIFICATION	1.605478999916521E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9998835212505225	WITHOUT_CLASSIFICATION	1.1647874947740892E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9998532904866505	WITHOUT_CLASSIFICATION	1.4670951334963363E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999988800198715	WITHOUT_CLASSIFICATION	1.119980128553616E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999924540671613	WITHOUT_CLASSIFICATION	7.545932838682698E-6	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999747226480823	WITHOUT_CLASSIFICATION	2.5277351917624506E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999999657773642	WITHOUT_CLASSIFICATION	3.4222635877926536E-8	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.999999362721916	WITHOUT_CLASSIFICATION	6.372780841074335E-7	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999980710696166	WITHOUT_CLASSIFICATION	1.928930383328545E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999867762709765	WITHOUT_CLASSIFICATION	1.3223729023429483E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999998986257306	WITHOUT_CLASSIFICATION	1.013742694575773E-7	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999820649133262	WITHOUT_CLASSIFICATION	1.793508667384342E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999969121037854	WITHOUT_CLASSIFICATION	3.0878962145729595E-6	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999867984614	WITHOUT_CLASSIFICATION	1.3201538740432863E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975984504239	WITHOUT_CLASSIFICATION	2.401549576063069E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999896718618	WITHOUT_CLASSIFICATION	1.0328138206236857E-8	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999989583569414	WITHOUT_CLASSIFICATION	1.041643058574186E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999989583569414	WITHOUT_CLASSIFICATION	1.041643058574186E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999988728411734	WITHOUT_CLASSIFICATION	1.1271588265113389E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999996749501291	WITHOUT_CLASSIFICATION	3.250498708861858E-6	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999719477262304	WITHOUT_CLASSIFICATION	2.8052273769585444E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.998936643310746	WITHOUT_CLASSIFICATION	0.0010633566892539893	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999995952302556	WITHOUT_CLASSIFICATION	4.04769744466227E-7	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9995039265085693	WITHOUT_CLASSIFICATION	4.960734914306481E-4	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9990661557234969	WITHOUT_CLASSIFICATION	9.338442765031398E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999994125633572	WITHOUT_CLASSIFICATION	5.874366428843173E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999979063483107	WITHOUT_CLASSIFICATION	2.093651689438111E-6	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9997163200984472	WITHOUT_CLASSIFICATION	2.836799015527331E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999992855061977	WITHOUT_CLASSIFICATION	7.144938023036034E-7	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9992849816225893	WITHOUT_CLASSIFICATION	7.1501837741066E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999821708415855	WITHOUT_CLASSIFICATION	1.7829158414546375E-5	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999998260632884	WITHOUT_CLASSIFICATION	1.739367116248478E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.7142293892559954	WITHOUT_CLASSIFICATION	0.28577061074400456	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999897782744765	WITHOUT_CLASSIFICATION	1.022172552347476E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999966968327161	WITHOUT_CLASSIFICATION	3.3031672838422824E-6	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999995175996002	WITHOUT_CLASSIFICATION	4.824003999541716E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999788424693411	WITHOUT_CLASSIFICATION	2.115753065892004E-5	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999992559793878	WITHOUT_CLASSIFICATION	7.440206122627637E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999989758648226	WITHOUT_CLASSIFICATION	1.0241351773763792E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999931288748571	WITHOUT_CLASSIFICATION	6.871125142884882E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.999996595627184	WITHOUT_CLASSIFICATION	3.404372816027627E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999994314397298	WITHOUT_CLASSIFICATION	5.685602702308693E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9996885787364616	WITHOUT_CLASSIFICATION	3.114212635385496E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999958942193211	WITHOUT_CLASSIFICATION	4.105780678901336E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999978504872984	WITHOUT_CLASSIFICATION	2.149512701648232E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999780793452198	WITHOUT_CLASSIFICATION	2.1920654780309437E-5	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999858385832171	WITHOUT_CLASSIFICATION	1.4161416782960361E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999742469070758	WITHOUT_CLASSIFICATION	2.5753092924261668E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.999999836724955	WITHOUT_CLASSIFICATION	1.6327504494093937E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.999999836724955	WITHOUT_CLASSIFICATION	1.6327504494093937E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999956143999807	WITHOUT_CLASSIFICATION	4.385600019254208E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999956143999807	WITHOUT_CLASSIFICATION	4.385600019254208E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998524804282448	WITHOUT_CLASSIFICATION	1.4751957175512215E-4	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999250015791751	WITHOUT_CLASSIFICATION	7.499842082496845E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999923754888154	WITHOUT_CLASSIFICATION	7.624511184654389E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999923754888154	WITHOUT_CLASSIFICATION	7.624511184654389E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999982743546201	WITHOUT_CLASSIFICATION	1.7256453799172317E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999191822968626	WITHOUT_CLASSIFICATION	8.081770313734727E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.999991823185564	WITHOUT_CLASSIFICATION	8.176814435991749E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999765866273896	WITHOUT_CLASSIFICATION	2.341337261036066E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999765866273896	WITHOUT_CLASSIFICATION	2.341337261036066E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999765866273896	WITHOUT_CLASSIFICATION	2.341337261036066E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999191822968626	WITHOUT_CLASSIFICATION	8.081770313734727E-5	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999997043982091	WITHOUT_CLASSIFICATION	2.9560179088178433E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.999846752696536	WITHOUT_CLASSIFICATION	1.5324730346397622E-4	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9730402983860661	WITHOUT_CLASSIFICATION	0.026959701613933976	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999919826863669	WITHOUT_CLASSIFICATION	8.017313632974399E-6	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999999250055951	WITHOUT_CLASSIFICATION	7.499440488290552E-8	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999786920223012	WITHOUT_CLASSIFICATION	2.1307977698852225E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999999080340058	WITHOUT_CLASSIFICATION	9.19659941208638E-8	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999912921851886	WITHOUT_CLASSIFICATION	8.707814811410577E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999995974250118	WITHOUT_CLASSIFICATION	4.025749882711106E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999920619463	WITHOUT_CLASSIFICATION	7.938053697739377E-9	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999994299974303	WITHOUT_CLASSIFICATION	5.700025696010303E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999989536405267	WITHOUT_CLASSIFICATION	1.0463594733078132E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999920840835993	WITHOUT_CLASSIFICATION	7.915916400594692E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999845649502919	WITHOUT_CLASSIFICATION	1.5435049708115384E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997856772781851	WITHOUT_CLASSIFICATION	2.143227218148953E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994190032871	WITHOUT_CLASSIFICATION	5.809967129169183E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999946276618314	WITHOUT_CLASSIFICATION	5.372338168558054E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990035622859	WITHOUT_CLASSIFICATION	9.964377141344456E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984044861273	WITHOUT_CLASSIFICATION	1.59551387276114E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999932875701767	WITHOUT_CLASSIFICATION	6.7124298232791115E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999911820345372	WITHOUT_CLASSIFICATION	8.817965462698227E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999961926294143	WITHOUT_CLASSIFICATION	3.807370585760438E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997519492565	WITHOUT_CLASSIFICATION	2.4805074340575943E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999994737192152	WITHOUT_CLASSIFICATION	5.262807849219469E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999995840187543	WITHOUT_CLASSIFICATION	4.159812456506144E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999996994433444	WITHOUT_CLASSIFICATION	3.005566555941473E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990273431068	WITHOUT_CLASSIFICATION	9.726568932792852E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984706732438	WITHOUT_CLASSIFICATION	1.5293267563062077E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999715559860712	WITHOUT_CLASSIFICATION	2.8444013928791352E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999968487541252	WITHOUT_CLASSIFICATION	3.151245874775653E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999932097975316	WITHOUT_CLASSIFICATION	6.790202468388468E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9982783741528282	WITHOUT_CLASSIFICATION	0.0017216258471719132	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999653492874	WITHOUT_CLASSIFICATION	3.4650712595453646E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999680563643	WITHOUT_CLASSIFICATION	3.1943635636792935E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999994944836762	WITHOUT_CLASSIFICATION	5.05516323863855E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999968712137106	WITHOUT_CLASSIFICATION	3.128786289344966E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999966433454515	WITHOUT_CLASSIFICATION	3.35665454849801E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999807931430934	WITHOUT_CLASSIFICATION	1.9206856906592567E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999934168976907	WITHOUT_CLASSIFICATION	6.583102309298683E-5	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999998836650117	WITHOUT_CLASSIFICATION	1.1633498823782013E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999966433454515	WITHOUT_CLASSIFICATION	3.35665454849801E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999985913379457	WITHOUT_CLASSIFICATION	1.4086620542604704E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999818551783629	WITHOUT_CLASSIFICATION	1.8144821637041042E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999965421696435	WITHOUT_CLASSIFICATION	3.4578303566201E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9990680232342862	WITHOUT_CLASSIFICATION	9.319767657137056E-4	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.999997772227155	WITHOUT_CLASSIFICATION	2.227772844996426E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999934168976907	WITHOUT_CLASSIFICATION	6.583102309298683E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9990680232342862	WITHOUT_CLASSIFICATION	9.319767657137056E-4	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999905055688032	WITHOUT_CLASSIFICATION	9.494431196660349E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999996208167568	WITHOUT_CLASSIFICATION	3.7918324321440844E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999935982080393	WITHOUT_CLASSIFICATION	6.401791960767148E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999996141478092	WITHOUT_CLASSIFICATION	3.85852190781011E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999999028096626	WITHOUT_CLASSIFICATION	9.719033740162613E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9994977796075621	WITHOUT_CLASSIFICATION	5.022203924378571E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999967179960783	WITHOUT_CLASSIFICATION	3.282003921746331E-6	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999936064555071	WITHOUT_CLASSIFICATION	6.39354449297151E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999953510688541	WITHOUT_CLASSIFICATION	4.648931145971927E-6	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999518968681981	WITHOUT_CLASSIFICATION	4.810313180205667E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999959784204594	WITHOUT_CLASSIFICATION	4.02157954065207E-6	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.999952544338009	WITHOUT_CLASSIFICATION	4.745566199106341E-5	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999982506593766	WITHOUT_CLASSIFICATION	1.749340623373124E-6	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.999872202212209	WITHOUT_CLASSIFICATION	1.2779778779111275E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999505967875152	WITHOUT_CLASSIFICATION	4.940321248472743E-5	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999999337953785	WITHOUT_CLASSIFICATION	6.620462149809106E-8	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9992745441435341	WITHOUT_CLASSIFICATION	7.254558564659978E-4	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9920355614218821	WITHOUT_CLASSIFICATION	0.007964438578117978	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999973838737339	WITHOUT_CLASSIFICATION	2.616126266130606E-6	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999549695145851	WITHOUT_CLASSIFICATION	4.503048541484835E-5	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999981133425554	WITHOUT_CLASSIFICATION	1.8866574445089544E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999992400841894	WITHOUT_CLASSIFICATION	7.599158105667958E-7	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999992930634332	WITHOUT_CLASSIFICATION	7.06936566749312E-7	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999906229207425	WITHOUT_CLASSIFICATION	9.377079257513091E-6	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999923895537047	WITHOUT_CLASSIFICATION	7.610446295261963E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.840502783953043	WITHOUT_CLASSIFICATION	0.15949721604695694	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999983436007457	WITHOUT_CLASSIFICATION	1.6563992542402676E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999994932411203	WITHOUT_CLASSIFICATION	5.067588798255071E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999997709323044	WITHOUT_CLASSIFICATION	2.2906769565601188E-7	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999992802199986	WITHOUT_CLASSIFICATION	7.197800014819573E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999982562959149	WITHOUT_CLASSIFICATION	1.7437040850168738E-6	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999985337805527	WITHOUT_CLASSIFICATION	1.4662194472352788E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999988572290397	WITHOUT_CLASSIFICATION	1.1427709602989791E-6	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999636125109	WITHOUT_CLASSIFICATION	3.6387489130462404E-8	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999322255758077	WITHOUT_CLASSIFICATION	6.777442419216813E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.999998554164573	WITHOUT_CLASSIFICATION	1.4458354270633679E-6	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999858387925857	WITHOUT_CLASSIFICATION	1.4161207414326476E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999985722416963	WITHOUT_CLASSIFICATION	1.427758303709053E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999994768074062	WITHOUT_CLASSIFICATION	5.23192593822757E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999962152674469	WITHOUT_CLASSIFICATION	3.784732553139329E-6	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.999999697816814	WITHOUT_CLASSIFICATION	3.021831859844178E-7	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999968998720689	WITHOUT_CLASSIFICATION	3.1001279311828E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999994221540917	WITHOUT_CLASSIFICATION	5.778459083807128E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.999999942210944	WITHOUT_CLASSIFICATION	5.7789055884573E-8	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999980705301971	WITHOUT_CLASSIFICATION	1.9294698028890236E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999940972046434	WITHOUT_CLASSIFICATION	5.902795356604906E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999769373003421	WITHOUT_CLASSIFICATION	2.306269965790444E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999926861201801	WITHOUT_CLASSIFICATION	7.313879819975807E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999996965104637	WITHOUT_CLASSIFICATION	3.0348953627783516E-7	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999966371130206	WITHOUT_CLASSIFICATION	3.362886979572908E-6	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999986314574565	WITHOUT_CLASSIFICATION	1.3685425434477056E-6	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9998278512381711	WITHOUT_CLASSIFICATION	1.7214876182900855E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999820985516686	WITHOUT_CLASSIFICATION	1.790144833140873E-5	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999706709542959	WITHOUT_CLASSIFICATION	2.932904570406884E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999954667542255	WITHOUT_CLASSIFICATION	4.533245774547817E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999986156325482	WITHOUT_CLASSIFICATION	1.3843674517492223E-6	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999996976425971	WITHOUT_CLASSIFICATION	3.0235740292614944E-7	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.999998396809469	WITHOUT_CLASSIFICATION	1.6031905308906783E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999899705094661	WITHOUT_CLASSIFICATION	1.00294905337728E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999996942759422	WITHOUT_CLASSIFICATION	3.0572405782593453E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999996615353697	WITHOUT_CLASSIFICATION	3.384646303991189E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999340020506519	WITHOUT_CLASSIFICATION	6.599794934811157E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999962371985623	WITHOUT_CLASSIFICATION	3.7628014376755255E-6	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999922547463638	WITHOUT_CLASSIFICATION	7.74525363623035E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999380580459	WITHOUT_CLASSIFICATION	6.194195405993419E-8	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999976443312321	WITHOUT_CLASSIFICATION	2.355668767869409E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999998987902116	WITHOUT_CLASSIFICATION	1.0120978848815114E-7	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999891463235462	WITHOUT_CLASSIFICATION	1.0853676453851695E-5	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999998537283523	WITHOUT_CLASSIFICATION	1.4627164764371128E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999988800198715	WITHOUT_CLASSIFICATION	1.119980128553616E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999340020506519	WITHOUT_CLASSIFICATION	6.599794934811157E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999976443312321	WITHOUT_CLASSIFICATION	2.355668767869409E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999998987902116	WITHOUT_CLASSIFICATION	1.0120978848815114E-7	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999463790202	WITHOUT_CLASSIFICATION	5.3620979632971155E-8	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999752255671551	WITHOUT_CLASSIFICATION	2.4774432844797873E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999085260861414	WITHOUT_CLASSIFICATION	9.147391385857578E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999966712508334	WITHOUT_CLASSIFICATION	3.3287491665932795E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.999999659098872	WITHOUT_CLASSIFICATION	3.4090112800842814E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999656266789	WITHOUT_CLASSIFICATION	3.437332111461752E-8	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999688581491	WITHOUT_CLASSIFICATION	3.1141850780292886E-8	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999910326868077	WITHOUT_CLASSIFICATION	8.967313192351614E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999998149978446	WITHOUT_CLASSIFICATION	1.850021554550575E-7	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9991317732493333	WITHOUT_CLASSIFICATION	8.682267506666942E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999901828678149	WITHOUT_CLASSIFICATION	9.817132185034488E-6	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9991367448380722	WITHOUT_CLASSIFICATION	8.632551619278215E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999996939512409	WITHOUT_CLASSIFICATION	3.0604875905033887E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999603025004	WITHOUT_CLASSIFICATION	3.969749966552007E-8	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999998960818755	WITHOUT_CLASSIFICATION	1.0391812467264611E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.999999491927715	WITHOUT_CLASSIFICATION	5.080722850659178E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999710772250575	WITHOUT_CLASSIFICATION	2.8922774942437398E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999999687418923	WITHOUT_CLASSIFICATION	3.125810772363399E-8	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999351155886	WITHOUT_CLASSIFICATION	6.488441131302945E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999988715731785	WITHOUT_CLASSIFICATION	1.1284268215793835E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.999999940979519	WITHOUT_CLASSIFICATION	5.9020481012236906E-8	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999723200892	WITHOUT_CLASSIFICATION	2.767991087659066E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999996942759422	WITHOUT_CLASSIFICATION	3.0572405782593453E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999996615353697	WITHOUT_CLASSIFICATION	3.384646303991189E-7	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999277159956	WITHOUT_CLASSIFICATION	7.228400442996948E-8	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999636131043	WITHOUT_CLASSIFICATION	3.638689582267711E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999562459443	WITHOUT_CLASSIFICATION	4.3754055791180776E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999982898376478	WITHOUT_CLASSIFICATION	1.7101623522086765E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998657435485154	WITHOUT_CLASSIFICATION	1.342564514845906E-4	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999989927897461	WITHOUT_CLASSIFICATION	1.0072102538887069E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9992792963427874	WITHOUT_CLASSIFICATION	7.207036572126208E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999862581123516	WITHOUT_CLASSIFICATION	1.3741887648296193E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999706277170809	WITHOUT_CLASSIFICATION	2.9372282919053086E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999706277170809	WITHOUT_CLASSIFICATION	2.9372282919053086E-5	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999356153443	WITHOUT_CLASSIFICATION	6.438465573520981E-8	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999536176363606	WITHOUT_CLASSIFICATION	4.6382363639450695E-5	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999633131147	WITHOUT_CLASSIFICATION	3.668688532492533E-8	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999603986433573	WITHOUT_CLASSIFICATION	3.9601356642745646E-5	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999991968442392	WITHOUT_CLASSIFICATION	8.031557607970087E-7	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999996142017215	WITHOUT_CLASSIFICATION	3.857982786106169E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999996866304401	WITHOUT_CLASSIFICATION	3.133695597845757E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999996866304401	WITHOUT_CLASSIFICATION	3.133695597845757E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999996382749826	WITHOUT_CLASSIFICATION	3.6172501729656913E-7	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999935916053077	WITHOUT_CLASSIFICATION	6.40839469235904E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999997794353114	WITHOUT_CLASSIFICATION	2.205646886184179E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999973184922846	WITHOUT_CLASSIFICATION	2.6815077153012394E-6	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999978637941371	WITHOUT_CLASSIFICATION	2.13620586290442E-6	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999953340563901	WITHOUT_CLASSIFICATION	4.665943609979294E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999997872904414	WITHOUT_CLASSIFICATION	2.1270955869643506E-7	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999992924481962	WITHOUT_CLASSIFICATION	7.075518038096723E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999998522093297	WITHOUT_CLASSIFICATION	1.4779067027749172E-7	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999977070366632	WITHOUT_CLASSIFICATION	2.2929633366735618E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999546972954652	WITHOUT_CLASSIFICATION	4.5302704534843796E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999791599955	WITHOUT_CLASSIFICATION	2.0840004547875076E-8	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999444355685045	WITHOUT_CLASSIFICATION	5.556443149537814E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999980589176268	WITHOUT_CLASSIFICATION	1.9410823731660183E-6	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999967115174518	WITHOUT_CLASSIFICATION	3.2884825480988913E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999978691896256	WITHOUT_CLASSIFICATION	2.130810374429249E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999976223930638	WITHOUT_CLASSIFICATION	2.3776069362126676E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999998636655378	WITHOUT_CLASSIFICATION	1.3633446219597586E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999992203581294	WITHOUT_CLASSIFICATION	7.796418705200615E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999912314190675	WITHOUT_CLASSIFICATION	8.76858093238314E-6	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999985911098292	WITHOUT_CLASSIFICATION	1.408890170805312E-6	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.999999910411359	WITHOUT_CLASSIFICATION	8.958864104257113E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999770831156	WITHOUT_CLASSIFICATION	2.291688436022964E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999983044009977	WITHOUT_CLASSIFICATION	1.6955990024173133E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.999998877903008	WITHOUT_CLASSIFICATION	1.1220969920084482E-6	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999967317916906	WITHOUT_CLASSIFICATION	3.2682083094808338E-6	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999999152186209	WITHOUT_CLASSIFICATION	8.47813791972649E-8	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9998654124766464	WITHOUT_CLASSIFICATION	1.345875233536583E-4	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999996070591971	WITHOUT_CLASSIFICATION	3.9294080300236753E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999994518571181	WITHOUT_CLASSIFICATION	5.481428819528247E-7	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999996025578766	WITHOUT_CLASSIFICATION	3.9744212338705294E-7	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9997890044096719	WITHOUT_CLASSIFICATION	2.1099559032810062E-4	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.999996850783627	WITHOUT_CLASSIFICATION	3.149216373122055E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999861557726016	WITHOUT_CLASSIFICATION	1.3844227398335986E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9999995474455815	WITHOUT_CLASSIFICATION	4.5255441843778045E-7	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999640184191269	WITHOUT_CLASSIFICATION	3.598158087307346E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999994334696137	WITHOUT_CLASSIFICATION	5.665303863576772E-7	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999993030574512	WITHOUT_CLASSIFICATION	6.969425487066675E-7	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999999523301493	WITHOUT_CLASSIFICATION	4.7669850700058855E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999677153688716	WITHOUT_CLASSIFICATION	3.228463112842543E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999991929508318	WITHOUT_CLASSIFICATION	8.070491682364926E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999991884054155	WITHOUT_CLASSIFICATION	8.115945846068868E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999947284586475	WITHOUT_CLASSIFICATION	5.271541352596104E-6	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.999999752670704	WITHOUT_CLASSIFICATION	2.473292960771139E-7	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9995872298463528	WITHOUT_CLASSIFICATION	4.127701536471768E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999991929508318	WITHOUT_CLASSIFICATION	8.070491682364926E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999947284586475	WITHOUT_CLASSIFICATION	5.271541352596104E-6	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9997782179215139	WITHOUT_CLASSIFICATION	2.2178207848598847E-4	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999963696670273	WITHOUT_CLASSIFICATION	3.630332972613027E-6	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999862222163058	WITHOUT_CLASSIFICATION	1.3777783694101812E-5	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999995613287583	WITHOUT_CLASSIFICATION	4.386712417507718E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999677153688716	WITHOUT_CLASSIFICATION	3.228463112842543E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999677153688716	WITHOUT_CLASSIFICATION	3.228463112842543E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999991929508318	WITHOUT_CLASSIFICATION	8.070491682364926E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999996293961533	WITHOUT_CLASSIFICATION	3.706038466920579E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999997722997866	WITHOUT_CLASSIFICATION	2.2770021347892327E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999993900345212	WITHOUT_CLASSIFICATION	6.099654788869368E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999993900345212	WITHOUT_CLASSIFICATION	6.099654788869368E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999521977134	WITHOUT_CLASSIFICATION	4.7802286560955595E-8	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999948169702731	WITHOUT_CLASSIFICATION	5.1830297268053545E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999994363552008	WITHOUT_CLASSIFICATION	5.636447992087231E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999994363552008	WITHOUT_CLASSIFICATION	5.636447992087231E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999998105782507	WITHOUT_CLASSIFICATION	1.8942174929856895E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999948169702731	WITHOUT_CLASSIFICATION	5.1830297268053545E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999994363552008	WITHOUT_CLASSIFICATION	5.636447992087231E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999998105782507	WITHOUT_CLASSIFICATION	1.8942174929856895E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999996511946443	WITHOUT_CLASSIFICATION	3.4880535565738047E-7	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.99999537267512	WITHOUT_CLASSIFICATION	4.62732488003086E-6	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999436454196	WITHOUT_CLASSIFICATION	5.635458053109648E-8	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999998354457662	WITHOUT_CLASSIFICATION	1.6455423387565835E-7	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999843622050489	WITHOUT_CLASSIFICATION	1.563779495100777E-5	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999987791698524	WITHOUT_CLASSIFICATION	1.2208301476505948E-6	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999957894503492	WITHOUT_CLASSIFICATION	4.210549650859991E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999899124201674	WITHOUT_CLASSIFICATION	1.0087579832622056E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999996873168425	WITHOUT_CLASSIFICATION	3.1268315747102553E-7	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999724829114217	WITHOUT_CLASSIFICATION	2.751708857827679E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999976867256478	WITHOUT_CLASSIFICATION	2.3132743521220317E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.999999046928786	WITHOUT_CLASSIFICATION	9.530712139995656E-7	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999283042327	WITHOUT_CLASSIFICATION	7.16957673474419E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999995635365859	WITHOUT_CLASSIFICATION	4.3646341412979105E-7	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999126738348	WITHOUT_CLASSIFICATION	8.732616518510815E-8	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999924601570553	WITHOUT_CLASSIFICATION	7.539842944597454E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999999326473522	WITHOUT_CLASSIFICATION	6.735264779557628E-8	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999999672953285	WITHOUT_CLASSIFICATION	3.2704671559108864E-8	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999997869062318	WITHOUT_CLASSIFICATION	2.1309376814712393E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999988774441614	WITHOUT_CLASSIFICATION	1.122555838557342E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.999999998846654	WITHOUT_CLASSIFICATION	1.1533459340288396E-9	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999998878925576	WITHOUT_CLASSIFICATION	1.1210744235324577E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999997869587889	WITHOUT_CLASSIFICATION	2.1304121123605594E-7	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999996258983765	WITHOUT_CLASSIFICATION	3.7410162348577234E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999997338178953	WITHOUT_CLASSIFICATION	2.6618210472432014E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999994252352457	WITHOUT_CLASSIFICATION	5.747647543033893E-7	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.999999964685812	WITHOUT_CLASSIFICATION	3.531418797329761E-8	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999984348796033	WITHOUT_CLASSIFICATION	1.5651203967074762E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999816538018	WITHOUT_CLASSIFICATION	1.8346198212975355E-8	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999993087400425	WITHOUT_CLASSIFICATION	6.912599575070354E-7	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.999996385930917	WITHOUT_CLASSIFICATION	3.614069083049656E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999970740339367	WITHOUT_CLASSIFICATION	2.9259660632679587E-6	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999649040623511	WITHOUT_CLASSIFICATION	3.50959376490115E-5	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.999999240999287	WITHOUT_CLASSIFICATION	7.590007128730489E-7	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999955962109992	WITHOUT_CLASSIFICATION	4.403789000752647E-6	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999997498496497	WITHOUT_CLASSIFICATION	2.5015035029910835E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.999999939661928	WITHOUT_CLASSIFICATION	6.033807200913933E-8	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999987018788415	WITHOUT_CLASSIFICATION	1.2981211585041927E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999900027076627	WITHOUT_CLASSIFICATION	9.997292337197472E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999900027076627	WITHOUT_CLASSIFICATION	9.997292337197472E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999900027076627	WITHOUT_CLASSIFICATION	9.997292337197472E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.999940369962576	WITHOUT_CLASSIFICATION	5.963003742400535E-5	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999990594300255	WITHOUT_CLASSIFICATION	9.405699744113153E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.999995275298326	WITHOUT_CLASSIFICATION	4.724701673986818E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999983547842661	WITHOUT_CLASSIFICATION	1.645215733779391E-6	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999996767706837	WITHOUT_CLASSIFICATION	3.2322931634777275E-7	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9995477802694694	WITHOUT_CLASSIFICATION	4.522197305304454E-4	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999943579452	WITHOUT_CLASSIFICATION	5.6420548089498124E-9	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999970378630966	WITHOUT_CLASSIFICATION	2.9621369035517523E-6	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999999562686971	WITHOUT_CLASSIFICATION	4.373130298102386E-8	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999988965283947	WITHOUT_CLASSIFICATION	1.1034716053681486E-6	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999998898797644	WITHOUT_CLASSIFICATION	1.1012023562768126E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9998535866275179	WITHOUT_CLASSIFICATION	1.4641337248218116E-4	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.999999783617041	WITHOUT_CLASSIFICATION	2.1638295911345776E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.999959232792998	WITHOUT_CLASSIFICATION	4.076720700204751E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999947843064537	WITHOUT_CLASSIFICATION	5.2156935463137215E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999988265301	WITHOUT_CLASSIFICATION	1.173469872376833E-9	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9969241900349556	WITHOUT_CLASSIFICATION	0.0030758099650443817	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999995107405029	WITHOUT_CLASSIFICATION	4.892594970502822E-7	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999972813285107	WITHOUT_CLASSIFICATION	2.7186714893050324E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999782918408882	WITHOUT_CLASSIFICATION	2.1708159111819087E-5	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9997954958928884	WITHOUT_CLASSIFICATION	2.0450410711155562E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999995850415642	WITHOUT_CLASSIFICATION	4.1495843575368276E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9998700618354148	WITHOUT_CLASSIFICATION	1.2993816458513796E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999976839307546	WITHOUT_CLASSIFICATION	2.3160692454532747E-6	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999996503166572	WITHOUT_CLASSIFICATION	3.496833428603508E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999708759635836	WITHOUT_CLASSIFICATION	2.9124036416408125E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999661316064	WITHOUT_CLASSIFICATION	3.386839359525079E-8	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.99999932617912	WITHOUT_CLASSIFICATION	6.73820879947057E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999988521287501	WITHOUT_CLASSIFICATION	1.1478712499955602E-6	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999987831810694	WITHOUT_CLASSIFICATION	1.2168189306716599E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999963437073978	WITHOUT_CLASSIFICATION	3.656292602340687E-6	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999999500450666	WITHOUT_CLASSIFICATION	4.9954933369861597E-8	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9992341826141594	WITHOUT_CLASSIFICATION	7.658173858405104E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999741005326697	WITHOUT_CLASSIFICATION	2.5899467330294983E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999210341047747	WITHOUT_CLASSIFICATION	7.896589522516323E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999891773618	WITHOUT_CLASSIFICATION	1.0822638195511254E-8	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999659391900333	WITHOUT_CLASSIFICATION	3.406080996677613E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999628426593745	WITHOUT_CLASSIFICATION	3.7157340625482386E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999976112943534	WITHOUT_CLASSIFICATION	2.3887056466000653E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999883726393153	WITHOUT_CLASSIFICATION	1.1627360684662056E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9997525077497286	WITHOUT_CLASSIFICATION	2.4749225027140883E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999798778524954	WITHOUT_CLASSIFICATION	2.0122147504538926E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999989927897461	WITHOUT_CLASSIFICATION	1.0072102538887069E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9992275034656016	WITHOUT_CLASSIFICATION	7.724965343983449E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9901666410471951	WITHOUT_CLASSIFICATION	0.009833358952804811	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9980685903217478	WITHOUT_CLASSIFICATION	0.0019314096782523309	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9997638873610781	WITHOUT_CLASSIFICATION	2.3611263892191363E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9998114673917907	WITHOUT_CLASSIFICATION	1.8853260820929352E-4	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9996647226059489	WITHOUT_CLASSIFICATION	3.352773940511877E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999947085818615	WITHOUT_CLASSIFICATION	5.2914181385829E-6	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999998779317987	WITHOUT_CLASSIFICATION	1.2206820134170714E-7	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9998109477810758	WITHOUT_CLASSIFICATION	1.8905221892422209E-4	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999969921555387	WITHOUT_CLASSIFICATION	3.007844461288529E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999687576159204	WITHOUT_CLASSIFICATION	3.1242384079602226E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999923982168172	WITHOUT_CLASSIFICATION	7.601783182789145E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999987718662652	WITHOUT_CLASSIFICATION	1.2281337347605163E-6	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999959843936743	WITHOUT_CLASSIFICATION	4.0156063256463125E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999925969617927	WITHOUT_CLASSIFICATION	7.4030382073559015E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999994603558491	WITHOUT_CLASSIFICATION	5.396441508205786E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999998655451788	WITHOUT_CLASSIFICATION	1.3445482120627739E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999990880931355	WITHOUT_CLASSIFICATION	9.119068643573608E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999707270507651	WITHOUT_CLASSIFICATION	2.9272949234978032E-5	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999531994220016	WITHOUT_CLASSIFICATION	4.680057799852312E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.999999864800412	WITHOUT_CLASSIFICATION	1.3519958789704493E-7	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.999997940151588	WITHOUT_CLASSIFICATION	2.059848411939454E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999915157679108	WITHOUT_CLASSIFICATION	8.484232089129848E-6	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.999998859921011	WITHOUT_CLASSIFICATION	1.1400789889881053E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999993202006378	WITHOUT_CLASSIFICATION	6.797993622035907E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999993202006378	WITHOUT_CLASSIFICATION	6.797993622035907E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987476264165	WITHOUT_CLASSIFICATION	1.2523735835251448E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987476264165	WITHOUT_CLASSIFICATION	1.2523735835251448E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999915157679108	WITHOUT_CLASSIFICATION	8.484232089129848E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987476264165	WITHOUT_CLASSIFICATION	1.2523735835251448E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999991042682757	WITHOUT_CLASSIFICATION	8.957317243285839E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999925611325479	WITHOUT_CLASSIFICATION	7.438867452161751E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999925611325479	WITHOUT_CLASSIFICATION	7.438867452161751E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999957298062828	WITHOUT_CLASSIFICATION	4.270193717177333E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999999719390631	WITHOUT_CLASSIFICATION	2.806093692203221E-8	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999966204765	WITHOUT_CLASSIFICATION	3.3795235896634438E-9	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9998063918602176	WITHOUT_CLASSIFICATION	1.9360813978242317E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999993101462753	WITHOUT_CLASSIFICATION	6.898537247215359E-7	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999991675767367	WITHOUT_CLASSIFICATION	8.324232632930701E-7	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999994928459601	WITHOUT_CLASSIFICATION	5.071540398635647E-7	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999081490400706	WITHOUT_CLASSIFICATION	9.185095992932544E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9998683621468208	WITHOUT_CLASSIFICATION	1.316378531790863E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999806954972977	WITHOUT_CLASSIFICATION	1.9304502702287627E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999998582963804	WITHOUT_CLASSIFICATION	1.4170361959693326E-7	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999991648176241	WITHOUT_CLASSIFICATION	8.351823760007335E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999896134599026	WITHOUT_CLASSIFICATION	1.0386540097446677E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999870554586	WITHOUT_CLASSIFICATION	1.2944541490431582E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999988900650923	WITHOUT_CLASSIFICATION	1.1099349076125376E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999898679063	WITHOUT_CLASSIFICATION	1.0132093750572945E-8	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.99999996146304	WITHOUT_CLASSIFICATION	3.853695999410223E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9999931995767573	WITHOUT_CLASSIFICATION	6.800423242716747E-6	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999959064605143	WITHOUT_CLASSIFICATION	4.0935394856702816E-6	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999998056635735	WITHOUT_CLASSIFICATION	1.943364264587617E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999962687747	WITHOUT_CLASSIFICATION	3.731225264937868E-9	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999930237333452	WITHOUT_CLASSIFICATION	6.976266654892262E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999120835957	WITHOUT_CLASSIFICATION	8.791640432120945E-8	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999928265499196	WITHOUT_CLASSIFICATION	7.173450080478188E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999928265499196	WITHOUT_CLASSIFICATION	7.173450080478188E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999998429222176	WITHOUT_CLASSIFICATION	1.5707778232740306E-7	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999999759282145	WITHOUT_CLASSIFICATION	2.4071785495093947E-8	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999853207888283	WITHOUT_CLASSIFICATION	1.467921117165018E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999993406836517	WITHOUT_CLASSIFICATION	6.593163482019476E-7	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999996712063193	WITHOUT_CLASSIFICATION	3.2879368070487904E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999972850307165	WITHOUT_CLASSIFICATION	2.714969283476865E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999989274382436	WITHOUT_CLASSIFICATION	1.0725617564547486E-6	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999671121684517	WITHOUT_CLASSIFICATION	3.2887831548314085E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9996956242545071	WITHOUT_CLASSIFICATION	3.043757454929281E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999754370177282	WITHOUT_CLASSIFICATION	2.456298227187988E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999978448075862	WITHOUT_CLASSIFICATION	2.1551924137896562E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999927071959374	WITHOUT_CLASSIFICATION	7.292804062658861E-6	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999980549191136	WITHOUT_CLASSIFICATION	1.9450808864175213E-6	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999967424724431	WITHOUT_CLASSIFICATION	3.2575275569457662E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999967067094	WITHOUT_CLASSIFICATION	3.293290768002611E-9	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999334945888	WITHOUT_CLASSIFICATION	6.65054112090904E-8	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999632505075317	WITHOUT_CLASSIFICATION	3.6749492468333044E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999767068564	WITHOUT_CLASSIFICATION	2.3293143584677063E-8	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999996427861928	WITHOUT_CLASSIFICATION	3.5721380711420926E-7	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999706620299629	WITHOUT_CLASSIFICATION	2.9337970037129544E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999996277589263	WITHOUT_CLASSIFICATION	3.7224107378020245E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.99999666147218	WITHOUT_CLASSIFICATION	3.338527819978819E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999987866982143	WITHOUT_CLASSIFICATION	1.2133017857877787E-6	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999835388907372	WITHOUT_CLASSIFICATION	1.646110926281892E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999993539936225	WITHOUT_CLASSIFICATION	6.460063774358594E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999992886752023	WITHOUT_CLASSIFICATION	7.113247976310177E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999997340188187	WITHOUT_CLASSIFICATION	2.6598118138949794E-7	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999950781920135	WITHOUT_CLASSIFICATION	4.921807986458696E-6	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999599817246	WITHOUT_CLASSIFICATION	4.0018275403629576E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999996029574261	WITHOUT_CLASSIFICATION	3.970425739167366E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999981689122721	WITHOUT_CLASSIFICATION	1.8310877279121179E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999987270717279	WITHOUT_CLASSIFICATION	1.2729282721477056E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999959071681819	WITHOUT_CLASSIFICATION	4.092831818181742E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999885352740815	WITHOUT_CLASSIFICATION	1.1464725918483284E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9958787214867879	WITHOUT_CLASSIFICATION	0.004121278513212143	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999894621768833	WITHOUT_CLASSIFICATION	1.0537823116639734E-5	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999980042737644	WITHOUT_CLASSIFICATION	1.9957262355558554E-6	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999952663159815	WITHOUT_CLASSIFICATION	4.7336840185123765E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9998216551457397	WITHOUT_CLASSIFICATION	1.783448542602672E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9998805404547358	WITHOUT_CLASSIFICATION	1.1945954526410845E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999944469269958	WITHOUT_CLASSIFICATION	5.553073004173156E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999995443740648	WITHOUT_CLASSIFICATION	4.5562593510700025E-7	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999987989086472	WITHOUT_CLASSIFICATION	1.2010913527908814E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999999080340058	WITHOUT_CLASSIFICATION	9.19659941208638E-8	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999912921851886	WITHOUT_CLASSIFICATION	8.707814811410577E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9996956242545071	WITHOUT_CLASSIFICATION	3.043757454929281E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999754370177282	WITHOUT_CLASSIFICATION	2.456298227187988E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999978448075862	WITHOUT_CLASSIFICATION	2.1551924137896562E-6	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999987893945622	WITHOUT_CLASSIFICATION	1.2106054377894174E-6	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.999999677933836	WITHOUT_CLASSIFICATION	3.220661639771303E-7	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999996632064141	WITHOUT_CLASSIFICATION	3.367935858828961E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999992864731476	WITHOUT_CLASSIFICATION	7.135268523617527E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999826014885675	WITHOUT_CLASSIFICATION	1.739851143250939E-5	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999944342390797	WITHOUT_CLASSIFICATION	5.565760920251199E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999457285041279	WITHOUT_CLASSIFICATION	5.427149587212162E-5	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9998777957787656	WITHOUT_CLASSIFICATION	1.2220422123447426E-4	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999983811003996	WITHOUT_CLASSIFICATION	1.6188996003497798E-6	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999946765972453	WITHOUT_CLASSIFICATION	5.3234027546875444E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999974195784075	WITHOUT_CLASSIFICATION	2.5804215926513123E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999974195784075	WITHOUT_CLASSIFICATION	2.5804215926513123E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999991879060665	WITHOUT_CLASSIFICATION	8.120939334965788E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991562839223711	WITHOUT_CLASSIFICATION	8.437160776288822E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999044410679	WITHOUT_CLASSIFICATION	9.555893218395576E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999974315477039	WITHOUT_CLASSIFICATION	2.568452296133194E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999908389806001	WITHOUT_CLASSIFICATION	9.161019399816037E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999581077886	WITHOUT_CLASSIFICATION	4.189221139060183E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996973169313	WITHOUT_CLASSIFICATION	3.026830686717593E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999948222041979	WITHOUT_CLASSIFICATION	5.17779580210399E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999985046911232	WITHOUT_CLASSIFICATION	1.495308876872993E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999996744142936	WITHOUT_CLASSIFICATION	3.2558570641868413E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998814050549	WITHOUT_CLASSIFICATION	1.1859494508716262E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999854183687752	WITHOUT_CLASSIFICATION	1.458163122478782E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999961929979894	WITHOUT_CLASSIFICATION	3.807002010592266E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999498235316567	WITHOUT_CLASSIFICATION	5.01764683432671E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999348916277618	WITHOUT_CLASSIFICATION	6.51083722381284E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996624177631387	WITHOUT_CLASSIFICATION	3.375822368613365E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999717122144137	WITHOUT_CLASSIFICATION	2.8287785586207528E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999995974250118	WITHOUT_CLASSIFICATION	4.025749882711106E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999920619463	WITHOUT_CLASSIFICATION	7.938053697739377E-9	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999994299974303	WITHOUT_CLASSIFICATION	5.700025696010303E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999989536405267	WITHOUT_CLASSIFICATION	1.0463594733078132E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999920840835993	WITHOUT_CLASSIFICATION	7.915916400594692E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999845649502919	WITHOUT_CLASSIFICATION	1.5435049708115384E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997856772781851	WITHOUT_CLASSIFICATION	2.143227218148953E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999994190032871	WITHOUT_CLASSIFICATION	5.809967129169183E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999946276618314	WITHOUT_CLASSIFICATION	5.372338168558054E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999990035622859	WITHOUT_CLASSIFICATION	9.964377141344456E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984044861273	WITHOUT_CLASSIFICATION	1.59551387276114E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999932875701767	WITHOUT_CLASSIFICATION	6.7124298232791115E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999911820345372	WITHOUT_CLASSIFICATION	8.817965462698227E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999961926294143	WITHOUT_CLASSIFICATION	3.807370585760438E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999995840187543	WITHOUT_CLASSIFICATION	4.159812456506144E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999996994433444	WITHOUT_CLASSIFICATION	3.005566555941473E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990273431068	WITHOUT_CLASSIFICATION	9.726568932792852E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984706732438	WITHOUT_CLASSIFICATION	1.5293267563062077E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999715559860712	WITHOUT_CLASSIFICATION	2.8444013928791352E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999968487541252	WITHOUT_CLASSIFICATION	3.151245874775653E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999932097975316	WITHOUT_CLASSIFICATION	6.790202468388468E-6	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999653492874	WITHOUT_CLASSIFICATION	3.4650712595453646E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999968712137106	WITHOUT_CLASSIFICATION	3.128786289344966E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999807931430934	WITHOUT_CLASSIFICATION	1.9206856906592567E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999934168976907	WITHOUT_CLASSIFICATION	6.583102309298683E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999994944836762	WITHOUT_CLASSIFICATION	5.05516323863855E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999818551783629	WITHOUT_CLASSIFICATION	1.8144821637041042E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999985913379457	WITHOUT_CLASSIFICATION	1.4086620542604704E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9990680232342862	WITHOUT_CLASSIFICATION	9.319767657137056E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999991879060665	WITHOUT_CLASSIFICATION	8.120939334965788E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991562839223711	WITHOUT_CLASSIFICATION	8.437160776288822E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999044410679	WITHOUT_CLASSIFICATION	9.555893218395576E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999974315477039	WITHOUT_CLASSIFICATION	2.568452296133194E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996973169313	WITHOUT_CLASSIFICATION	3.026830686717593E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999948222041979	WITHOUT_CLASSIFICATION	5.17779580210399E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9982375307898357	WITHOUT_CLASSIFICATION	0.0017624692101643608	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999935982080393	WITHOUT_CLASSIFICATION	6.401791960767148E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999996141478092	WITHOUT_CLASSIFICATION	3.85852190781011E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998814050549	WITHOUT_CLASSIFICATION	1.1859494508716262E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999854183687752	WITHOUT_CLASSIFICATION	1.458163122478782E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999961929979894	WITHOUT_CLASSIFICATION	3.807002010592266E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999498235316567	WITHOUT_CLASSIFICATION	5.01764683432671E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996624177631387	WITHOUT_CLASSIFICATION	3.375822368613365E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999887777160984	WITHOUT_CLASSIFICATION	1.122228390161652E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999756559885773	WITHOUT_CLASSIFICATION	2.4344011422766964E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999979819631983	WITHOUT_CLASSIFICATION	2.018036801606362E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999084032511344	WITHOUT_CLASSIFICATION	9.15967488655842E-5	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999980527530603	WITHOUT_CLASSIFICATION	1.9472469396840523E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999995322327811	WITHOUT_CLASSIFICATION	4.677672189039348E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999989818656962	WITHOUT_CLASSIFICATION	1.0181343037245074E-6	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999988402440637	WITHOUT_CLASSIFICATION	1.1597559362616302E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999930994273664	WITHOUT_CLASSIFICATION	6.900572633592193E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999993663369942	WITHOUT_CLASSIFICATION	6.336630057912054E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999930994273664	WITHOUT_CLASSIFICATION	6.900572633592193E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9861948503176624	WITHOUT_CLASSIFICATION	0.0138051496823377	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999993530822	WITHOUT_CLASSIFICATION	6.469177999524531E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9995365142970247	WITHOUT_CLASSIFICATION	4.6348570297521767E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9995365142970247	WITHOUT_CLASSIFICATION	4.6348570297521767E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999995673315498	WITHOUT_CLASSIFICATION	4.3266845013240444E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999996916757853	WITHOUT_CLASSIFICATION	3.0832421474339474E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.999999968295735	WITHOUT_CLASSIFICATION	3.17042649470659E-8	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999961364757937	WITHOUT_CLASSIFICATION	3.863524206313617E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9997851460230586	WITHOUT_CLASSIFICATION	2.1485397694129014E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999994188984944	WITHOUT_CLASSIFICATION	5.811015055666882E-7	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9998904244181068	WITHOUT_CLASSIFICATION	1.095755818931034E-4	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999322978676604	WITHOUT_CLASSIFICATION	6.770213233966258E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999973177213836	WITHOUT_CLASSIFICATION	2.6822786164449613E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999988102398858	WITHOUT_CLASSIFICATION	1.1897601141362738E-6	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999998741247196	WITHOUT_CLASSIFICATION	1.2587528041622568E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9987208909219395	WITHOUT_CLASSIFICATION	0.0012791090780604638	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999815178563966	WITHOUT_CLASSIFICATION	1.8482143603355214E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999815178563966	WITHOUT_CLASSIFICATION	1.8482143603355214E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999999809975144	WITHOUT_CLASSIFICATION	1.9002485598293416E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9998667287915424	WITHOUT_CLASSIFICATION	1.332712084575656E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999968704872557	WITHOUT_CLASSIFICATION	3.1295127441724952E-6	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9997630483244277	WITHOUT_CLASSIFICATION	2.3695167557219072E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999776818915576	WITHOUT_CLASSIFICATION	2.2318108442376317E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999836115647477	WITHOUT_CLASSIFICATION	1.638843525233501E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999927337233503	WITHOUT_CLASSIFICATION	7.266276649707265E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999514910108669	WITHOUT_CLASSIFICATION	4.850898913302798E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999967416503377	WITHOUT_CLASSIFICATION	3.2583496623968745E-6	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999995453406515	WITHOUT_CLASSIFICATION	4.5465934853330607E-7	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.999890031661661	WITHOUT_CLASSIFICATION	1.0996833833897197E-4	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.999965082816927	WITHOUT_CLASSIFICATION	3.491718307308642E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999953714389814	WITHOUT_CLASSIFICATION	4.628561018582987E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999995100204958	WITHOUT_CLASSIFICATION	4.899795041262737E-7	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999993406836517	WITHOUT_CLASSIFICATION	6.593163482019476E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999972635920623	WITHOUT_CLASSIFICATION	2.7364079377050656E-6	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9995408716161017	WITHOUT_CLASSIFICATION	4.591283838983088E-4	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999981210366076	WITHOUT_CLASSIFICATION	1.8789633923653756E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999635052074	WITHOUT_CLASSIFICATION	3.6494792709896285E-8	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999962491991885	WITHOUT_CLASSIFICATION	3.750800811515364E-6	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9990186693514536	WITHOUT_CLASSIFICATION	9.813306485464413E-4	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.999981433773647	WITHOUT_CLASSIFICATION	1.8566226352953997E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999968284229482	WITHOUT_CLASSIFICATION	3.1715770518472783E-6	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999968234311062	WITHOUT_CLASSIFICATION	3.1765688938606045E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999979458813633	WITHOUT_CLASSIFICATION	2.0541186367866092E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999992655083594	WITHOUT_CLASSIFICATION	7.344916405909253E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999992655083594	WITHOUT_CLASSIFICATION	7.344916405909253E-7	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999960831490307	WITHOUT_CLASSIFICATION	3.916850969355259E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999973318064094	WITHOUT_CLASSIFICATION	2.668193590700915E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999994481154558	WITHOUT_CLASSIFICATION	5.518845441587884E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999472116629925	WITHOUT_CLASSIFICATION	5.278833700757369E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9997848758011691	WITHOUT_CLASSIFICATION	2.1512419883083208E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999803441497149	WITHOUT_CLASSIFICATION	1.9655850285008094E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.999999415219184	WITHOUT_CLASSIFICATION	5.847808159527226E-7	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999324011384325	WITHOUT_CLASSIFICATION	6.759886156754861E-5	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999997997868716	WITHOUT_CLASSIFICATION	2.0021312828473027E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998495666434097	WITHOUT_CLASSIFICATION	1.504333565903554E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999996677858745	WITHOUT_CLASSIFICATION	3.3221412555164716E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999992841956792	WITHOUT_CLASSIFICATION	7.158043209226622E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999995086679404	WITHOUT_CLASSIFICATION	4.913320596610341E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999992227071186	WITHOUT_CLASSIFICATION	7.772928813524313E-7	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999403242376	WITHOUT_CLASSIFICATION	5.96757624485337E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.999976380103487	WITHOUT_CLASSIFICATION	2.3619896513123005E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.999999995502367	WITHOUT_CLASSIFICATION	4.497633042711606E-9	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9982328558481989	WITHOUT_CLASSIFICATION	0.0017671441518011565	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9999388110433624	WITHOUT_CLASSIFICATION	6.118895663771959E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999871113854787	WITHOUT_CLASSIFICATION	1.2888614521319027E-5	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9998805361260849	WITHOUT_CLASSIFICATION	1.1946387391509096E-4	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999707480194	WITHOUT_CLASSIFICATION	2.925198050585503E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999946276618314	WITHOUT_CLASSIFICATION	5.372338168558054E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997519492565	WITHOUT_CLASSIFICATION	2.4805074340575943E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999934168976907	WITHOUT_CLASSIFICATION	6.583102309298683E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999995322327811	WITHOUT_CLASSIFICATION	4.677672189039348E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999980214983183	WITHOUT_CLASSIFICATION	1.97850168169917E-6	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999986029837307	WITHOUT_CLASSIFICATION	1.397016269282905E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999920840835993	WITHOUT_CLASSIFICATION	7.915916400594692E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999997992791977	WITHOUT_CLASSIFICATION	2.0072080225565748E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999990829538153	WITHOUT_CLASSIFICATION	9.170461846765965E-7	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999891555222769	WITHOUT_CLASSIFICATION	1.0844477723078642E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999628674621912	WITHOUT_CLASSIFICATION	3.713253780888438E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.999934168976907	WITHOUT_CLASSIFICATION	6.583102309298683E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999656408529631	WITHOUT_CLASSIFICATION	3.435914703694427E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999474212238357	WITHOUT_CLASSIFICATION	5.257877616425446E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999862581123516	WITHOUT_CLASSIFICATION	1.3741887648296193E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999994576092904	WITHOUT_CLASSIFICATION	5.42390709502579E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999999345673153	WITHOUT_CLASSIFICATION	6.543268474718291E-8	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9988370219771593	WITHOUT_CLASSIFICATION	0.0011629780228407864	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999997587091729	WITHOUT_CLASSIFICATION	2.412908271203631E-7	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999995290862354	WITHOUT_CLASSIFICATION	4.709137645370871E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999677153688716	WITHOUT_CLASSIFICATION	3.228463112842543E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999999739522463	WITHOUT_CLASSIFICATION	2.6047753682510413E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999521977134	WITHOUT_CLASSIFICATION	4.7802286560955595E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999521977134	WITHOUT_CLASSIFICATION	4.7802286560955595E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999521977134	WITHOUT_CLASSIFICATION	4.7802286560955595E-8	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999994363552008	WITHOUT_CLASSIFICATION	5.636447992087231E-6	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999379095124429	WITHOUT_CLASSIFICATION	6.209048755717708E-5	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999998553670755	WITHOUT_CLASSIFICATION	1.4463292453927023E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999806340165	WITHOUT_CLASSIFICATION	1.936598344847953E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999899124201674	WITHOUT_CLASSIFICATION	1.0087579832622056E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999644420964	WITHOUT_CLASSIFICATION	3.555790357467054E-8	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999997730742468	WITHOUT_CLASSIFICATION	2.2692575319551336E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999999082721129	WITHOUT_CLASSIFICATION	9.172788709359124E-7	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999998664907945	WITHOUT_CLASSIFICATION	1.3350920550002452E-7	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999981309175058	WITHOUT_CLASSIFICATION	1.8690824941596787E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999839896987	WITHOUT_CLASSIFICATION	1.601030131375376E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999996560431026	WITHOUT_CLASSIFICATION	3.4395689740482705E-7	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999967638340498	WITHOUT_CLASSIFICATION	3.236165950147954E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999994953327142	WITHOUT_CLASSIFICATION	5.046672858460017E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999976416241378	WITHOUT_CLASSIFICATION	2.358375862201534E-6	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999989502684	WITHOUT_CLASSIFICATION	1.0497315743054635E-9	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999982134130433	WITHOUT_CLASSIFICATION	1.7865869565829394E-6	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999990479606624	WITHOUT_CLASSIFICATION	9.520393376058594E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999995413480526	WITHOUT_CLASSIFICATION	4.586519474876682E-7	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999648265695533	WITHOUT_CLASSIFICATION	3.5173430446598955E-5	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999963906338633	WITHOUT_CLASSIFICATION	3.609366136613416E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999900027076627	WITHOUT_CLASSIFICATION	9.997292337197472E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999967057573287	WITHOUT_CLASSIFICATION	3.294242671336455E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999992834064035	WITHOUT_CLASSIFICATION	7.165935964510927E-7	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999997185983784	WITHOUT_CLASSIFICATION	2.814016216657491E-7	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999998221352759	WITHOUT_CLASSIFICATION	1.7786472415429178E-7	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999997648282457	WITHOUT_CLASSIFICATION	2.351717543834466E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999910150525	WITHOUT_CLASSIFICATION	8.984947403745954E-9	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999643889714478	WITHOUT_CLASSIFICATION	3.5611028552214245E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999951835455	WITHOUT_CLASSIFICATION	4.816454447230162E-9	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9994424436476204	WITHOUT_CLASSIFICATION	5.575563523795577E-4	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999882375898831	WITHOUT_CLASSIFICATION	1.176241011694224E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999998731197598	WITHOUT_CLASSIFICATION	1.268802401744407E-7	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999998783417859	WITHOUT_CLASSIFICATION	1.2165821400513995E-7	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999997946418984	WITHOUT_CLASSIFICATION	2.0535810160141134E-7	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9979513729168656	WITHOUT_CLASSIFICATION	0.0020486270831344268	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999527730143819	WITHOUT_CLASSIFICATION	4.7226985618106874E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9988127064476031	WITHOUT_CLASSIFICATION	0.0011872935523967783	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987476264165	WITHOUT_CLASSIFICATION	1.2523735835251448E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999987476264165	WITHOUT_CLASSIFICATION	1.2523735835251448E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999896134599026	WITHOUT_CLASSIFICATION	1.0386540097446677E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999896134599026	WITHOUT_CLASSIFICATION	1.0386540097446677E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999426404051	WITHOUT_CLASSIFICATION	5.735959483449501E-8	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999984184176332	WITHOUT_CLASSIFICATION	1.5815823667674896E-6	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999829755454	WITHOUT_CLASSIFICATION	1.70244546087525E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999984575195415	WITHOUT_CLASSIFICATION	1.5424804585156168E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999984575195415	WITHOUT_CLASSIFICATION	1.5424804585156168E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999984575195415	WITHOUT_CLASSIFICATION	1.5424804585156168E-6	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999863071041056	WITHOUT_CLASSIFICATION	1.3692895894317601E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999811277137	WITHOUT_CLASSIFICATION	1.8872286256002547E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999927071959374	WITHOUT_CLASSIFICATION	7.292804062658861E-6	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999887352539694	WITHOUT_CLASSIFICATION	1.1264746030692122E-5	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999990996056852	WITHOUT_CLASSIFICATION	9.003943148080762E-7	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999982716452468	WITHOUT_CLASSIFICATION	1.7283547531638839E-6	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999982012753782	WITHOUT_CLASSIFICATION	1.7987246216937508E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999947836111911	WITHOUT_CLASSIFICATION	5.216388808938986E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999947836111911	WITHOUT_CLASSIFICATION	5.216388808938986E-6	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999998667664349	WITHOUT_CLASSIFICATION	1.332335650629294E-7	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999878652724457	WITHOUT_CLASSIFICATION	1.2134727554234525E-5	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9993637930882425	WITHOUT_CLASSIFICATION	6.362069117575123E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999851550795902	WITHOUT_CLASSIFICATION	1.484492040991186E-5	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999976688858508	WITHOUT_CLASSIFICATION	2.3311141491107127E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9996238112601468	WITHOUT_CLASSIFICATION	3.7618873985331865E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999984521346078	WITHOUT_CLASSIFICATION	1.547865392196365E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999974195784075	WITHOUT_CLASSIFICATION	2.5804215926513123E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999908389806001	WITHOUT_CLASSIFICATION	9.161019399816037E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999581077886	WITHOUT_CLASSIFICATION	4.189221139060183E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999996744142936	WITHOUT_CLASSIFICATION	3.2558570641868413E-7	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999348916277618	WITHOUT_CLASSIFICATION	6.51083722381284E-5	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999999331429803	WITHOUT_CLASSIFICATION	6.685701965409833E-8	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9998023009839316	WITHOUT_CLASSIFICATION	1.9769901606839173E-4	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999988024904567	WITHOUT_CLASSIFICATION	1.1975095434044044E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999989818656962	WITHOUT_CLASSIFICATION	1.0181343037245074E-6	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999640887479451	WITHOUT_CLASSIFICATION	3.591125205492044E-5	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999999906380355	WITHOUT_CLASSIFICATION	9.361964445909229E-9	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999999809975144	WITHOUT_CLASSIFICATION	1.9002485598293416E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999997868439405	WITHOUT_CLASSIFICATION	2.131560594517371E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999790705866984	WITHOUT_CLASSIFICATION	2.0929413301606276E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999843885286557	WITHOUT_CLASSIFICATION	1.5611471344397506E-5	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999171881156774	WITHOUT_CLASSIFICATION	8.28118843225675E-5	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999999635211476	WITHOUT_CLASSIFICATION	3.647885236199318E-8	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999956175063467	WITHOUT_CLASSIFICATION	4.3824936533094556E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999899238526618	WITHOUT_CLASSIFICATION	1.0076147338216009E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999997186316126	WITHOUT_CLASSIFICATION	2.8136838736069374E-7	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999960195406732	WITHOUT_CLASSIFICATION	3.980459326796965E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999990080116777	WITHOUT_CLASSIFICATION	9.919883222203564E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999990080116777	WITHOUT_CLASSIFICATION	9.919883222203564E-7	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999787089531	WITHOUT_CLASSIFICATION	2.129104693989494E-8	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999251707310738	WITHOUT_CLASSIFICATION	7.482926892625468E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999981490762306	WITHOUT_CLASSIFICATION	1.8509237693872519E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9998970172013467	WITHOUT_CLASSIFICATION	1.0298279865327413E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9998970172013467	WITHOUT_CLASSIFICATION	1.0298279865327413E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9988123841607908	WITHOUT_CLASSIFICATION	0.0011876158392092032	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9620907377212562	WITHOUT_CLASSIFICATION	0.037909262278743756	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999655484720406	WITHOUT_CLASSIFICATION	3.445152795940046E-5	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999994366462285	WITHOUT_CLASSIFICATION	5.633537714822387E-7	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999651935104029	WITHOUT_CLASSIFICATION	3.48064895971113E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999918847190709	WITHOUT_CLASSIFICATION	8.115280929164212E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999367381892	WITHOUT_CLASSIFICATION	6.326181082903874E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999996700783956	WITHOUT_CLASSIFICATION	3.2992160433700384E-7	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999982251202114	WITHOUT_CLASSIFICATION	1.774879788638499E-6	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999890389167988	WITHOUT_CLASSIFICATION	1.0961083201136775E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999996320849063	WITHOUT_CLASSIFICATION	3.6791509373501376E-7	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999984459595931	WITHOUT_CLASSIFICATION	1.5540404069518015E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999789493687414	WITHOUT_CLASSIFICATION	2.1050631258537393E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999978489007	WITHOUT_CLASSIFICATION	2.1510994074795085E-9	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999962457051331	WITHOUT_CLASSIFICATION	3.7542948667762985E-6	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999978548491885	WITHOUT_CLASSIFICATION	2.1451508114753928E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999194222611	WITHOUT_CLASSIFICATION	8.057773890118457E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999985283275125	WITHOUT_CLASSIFICATION	1.4716724875395986E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999559383758	WITHOUT_CLASSIFICATION	4.4061624295964085E-8	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998063658879	WITHOUT_CLASSIFICATION	1.936341121516093E-7	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999449885692084	WITHOUT_CLASSIFICATION	5.501143079146343E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999827278825755	WITHOUT_CLASSIFICATION	1.7272117424475447E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999637284051499	WITHOUT_CLASSIFICATION	3.627159485002074E-5	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999174715358892	WITHOUT_CLASSIFICATION	8.252846411084415E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999916554394	WITHOUT_CLASSIFICATION	8.344560602486921E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999916554394	WITHOUT_CLASSIFICATION	8.344560602486921E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999916554394	WITHOUT_CLASSIFICATION	8.344560602486921E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999916554394	WITHOUT_CLASSIFICATION	8.344560602486921E-8	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999999859019521	WITHOUT_CLASSIFICATION	1.4098047897960813E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999469143415	WITHOUT_CLASSIFICATION	5.3085658442087684E-8	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999944391765346	WITHOUT_CLASSIFICATION	5.56082346533314E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999944391765346	WITHOUT_CLASSIFICATION	5.56082346533314E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999944391765346	WITHOUT_CLASSIFICATION	5.56082346533314E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999178334152998	WITHOUT_CLASSIFICATION	8.216658470016319E-5	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999988639938802	WITHOUT_CLASSIFICATION	1.136006119873682E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999986073321993	WITHOUT_CLASSIFICATION	1.3926678007497882E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999935964102467	WITHOUT_CLASSIFICATION	6.403589753361984E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999935964102467	WITHOUT_CLASSIFICATION	6.403589753361984E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999635052074	WITHOUT_CLASSIFICATION	3.6494792709896285E-8	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999635052074	WITHOUT_CLASSIFICATION	3.6494792709896285E-8	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.998676768431914	WITHOUT_CLASSIFICATION	0.0013232315680859388	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.998676768431914	WITHOUT_CLASSIFICATION	0.0013232315680859388	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9984656032495587	WITHOUT_CLASSIFICATION	0.0015343967504411955	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999974985789684	WITHOUT_CLASSIFICATION	2.5014210316180055E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999924374096038	WITHOUT_CLASSIFICATION	7.562590396177371E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999971585726365	WITHOUT_CLASSIFICATION	2.8414273636202677E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999949159273105	WITHOUT_CLASSIFICATION	5.084072689428469E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999948369475548	WITHOUT_CLASSIFICATION	5.1630524452347475E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999882417654614	WITHOUT_CLASSIFICATION	1.175823453864929E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999969547919051	WITHOUT_CLASSIFICATION	3.045208094861076E-6	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999929586186459	WITHOUT_CLASSIFICATION	7.0413813541140004E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999841787853698	WITHOUT_CLASSIFICATION	1.5821214630195317E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999865639381161	WITHOUT_CLASSIFICATION	1.3436061883838856E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999992789942821	WITHOUT_CLASSIFICATION	7.210057178433532E-7	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999994922142358	WITHOUT_CLASSIFICATION	5.077857641509826E-7	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999973317786257	WITHOUT_CLASSIFICATION	2.6682213741478004E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999883589217023	WITHOUT_CLASSIFICATION	1.1641078297593462E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999356437792501	WITHOUT_CLASSIFICATION	6.435622074981765E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999984697230584	WITHOUT_CLASSIFICATION	1.5302769416393115E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987949791753	WITHOUT_CLASSIFICATION	1.2050208246527863E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998614103456449	WITHOUT_CLASSIFICATION	1.3858965435513125E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999794763347949	WITHOUT_CLASSIFICATION	2.0523665205176844E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920035021322	WITHOUT_CLASSIFICATION	7.996497867711467E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920035021322	WITHOUT_CLASSIFICATION	7.996497867711467E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999437847369572	WITHOUT_CLASSIFICATION	5.62152630427845E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999989255033886	WITHOUT_CLASSIFICATION	1.0744966113767388E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9986238129044335	WITHOUT_CLASSIFICATION	0.001376187095566537	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9983818170541282	WITHOUT_CLASSIFICATION	0.0016181829458718567	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9978789917053047	WITHOUT_CLASSIFICATION	0.0021210082946952567	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.999217017628233	WITHOUT_CLASSIFICATION	7.829823717669406E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9990102020968276	WITHOUT_CLASSIFICATION	9.89797903172465E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9962784170958016	WITHOUT_CLASSIFICATION	0.0037215829041984186	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9985006909199634	WITHOUT_CLASSIFICATION	0.0014993090800366072	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9967785708585528	WITHOUT_CLASSIFICATION	0.003221429141447139	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9986938948337775	WITHOUT_CLASSIFICATION	0.0013061051662224933	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9986565151195991	WITHOUT_CLASSIFICATION	0.0013434848804009271	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9985717173073642	WITHOUT_CLASSIFICATION	0.0014282826926358188	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9978457593172637	WITHOUT_CLASSIFICATION	0.002154240682736368	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9987868902128852	WITHOUT_CLASSIFICATION	0.0012131097871147928	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9975905032464587	WITHOUT_CLASSIFICATION	0.0024094967535413553	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.999803992944424	WITHOUT_CLASSIFICATION	1.9600705557596822E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999947873597501	WITHOUT_CLASSIFICATION	5.2126402498841386E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999995392170289	WITHOUT_CLASSIFICATION	4.6078297117886425E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999985114345008	WITHOUT_CLASSIFICATION	1.488565499188813E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999834746915726	WITHOUT_CLASSIFICATION	1.6525308427424976E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999834746915726	WITHOUT_CLASSIFICATION	1.6525308427424976E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999834746915726	WITHOUT_CLASSIFICATION	1.6525308427424976E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999834746915726	WITHOUT_CLASSIFICATION	1.6525308427424976E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9878159435813624	WITHOUT_CLASSIFICATION	0.012184056418637587	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999995231231739	WITHOUT_CLASSIFICATION	4.768768261992572E-7	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999828797397661	WITHOUT_CLASSIFICATION	1.7120260233891855E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999989737770193	WITHOUT_CLASSIFICATION	1.026222980711216E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999989737770193	WITHOUT_CLASSIFICATION	1.026222980711216E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999981474331822	WITHOUT_CLASSIFICATION	1.8525668179108154E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999991865330088	WITHOUT_CLASSIFICATION	8.134669910846241E-7	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999991865330088	WITHOUT_CLASSIFICATION	8.134669910846241E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999997983263732	WITHOUT_CLASSIFICATION	2.0167362679433843E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999997983263732	WITHOUT_CLASSIFICATION	2.0167362679433843E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999981147554491	WITHOUT_CLASSIFICATION	1.8852445509150791E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999975528697125	WITHOUT_CLASSIFICATION	2.4471302875242017E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999934009383802	WITHOUT_CLASSIFICATION	6.599061619911761E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.999999345628542	WITHOUT_CLASSIFICATION	6.543714578906695E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998584650824	WITHOUT_CLASSIFICATION	1.415349176068281E-7	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999257178745	WITHOUT_CLASSIFICATION	7.428212545988208E-8	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999998643982645	WITHOUT_CLASSIFICATION	1.3560173551373664E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999998197434152	WITHOUT_CLASSIFICATION	1.8025658479553241E-7	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9558700921097273	WITHOUT_CLASSIFICATION	0.04412990789027266	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9558700921097273	WITHOUT_CLASSIFICATION	0.04412990789027266	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999958909462463	WITHOUT_CLASSIFICATION	4.109053753690264E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999992756165345	WITHOUT_CLASSIFICATION	7.243834655261002E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999919655424937	WITHOUT_CLASSIFICATION	8.03445750637084E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999998542434182	WITHOUT_CLASSIFICATION	1.4575658173147207E-7	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999960441812354	WITHOUT_CLASSIFICATION	3.955818764511469E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999995805273273	WITHOUT_CLASSIFICATION	4.1947267275729064E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999995805273273	WITHOUT_CLASSIFICATION	4.1947267275729064E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999995805273273	WITHOUT_CLASSIFICATION	4.1947267275729064E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999992820773522	WITHOUT_CLASSIFICATION	7.179226478295117E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999992820773522	WITHOUT_CLASSIFICATION	7.179226478295117E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999582425334	WITHOUT_CLASSIFICATION	4.1757466519246864E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999988755540509	WITHOUT_CLASSIFICATION	1.1244459491910948E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999988755540509	WITHOUT_CLASSIFICATION	1.1244459491910948E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999942948761	WITHOUT_CLASSIFICATION	5.705123894849288E-9	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999913134911812	WITHOUT_CLASSIFICATION	8.686508818839143E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999472116629925	WITHOUT_CLASSIFICATION	5.278833700757369E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999919659571009	WITHOUT_CLASSIFICATION	8.034042899091982E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996228910600238	WITHOUT_CLASSIFICATION	3.771089399762345E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996228910600238	WITHOUT_CLASSIFICATION	3.771089399762345E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999477700172815	WITHOUT_CLASSIFICATION	5.222998271845519E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999693050149535	WITHOUT_CLASSIFICATION	3.069498504645774E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999926536177	WITHOUT_CLASSIFICATION	7.346382300006824E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999429021929236	WITHOUT_CLASSIFICATION	5.709780707652452E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999090050179932	WITHOUT_CLASSIFICATION	9.099498200687565E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999968337016149	WITHOUT_CLASSIFICATION	3.166298385106886E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999676408106591	WITHOUT_CLASSIFICATION	3.235918934083637E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.999993008508359	WITHOUT_CLASSIFICATION	6.991491641047056E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999165412117511	WITHOUT_CLASSIFICATION	8.345878824893593E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999590817511047	WITHOUT_CLASSIFICATION	4.091824889525899E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999860063608144	WITHOUT_CLASSIFICATION	1.3993639185645688E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999735788025623	WITHOUT_CLASSIFICATION	2.642119743778693E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999994471543193	WITHOUT_CLASSIFICATION	5.528456806312772E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9989789021921766	WITHOUT_CLASSIFICATION	0.001021097807823444	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999967018041873	WITHOUT_CLASSIFICATION	3.2981958126196437E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999983993403687	WITHOUT_CLASSIFICATION	1.600659631295644E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.999778179558932	WITHOUT_CLASSIFICATION	2.218204410679519E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9996493445003475	WITHOUT_CLASSIFICATION	3.506554996525233E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999938181740026	WITHOUT_CLASSIFICATION	6.181825997329253E-6	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999965306486768	WITHOUT_CLASSIFICATION	3.4693513232797884E-6	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.999992716505078	WITHOUT_CLASSIFICATION	7.283494922010067E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999700005035129	WITHOUT_CLASSIFICATION	2.999949648709076E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999967359155929	WITHOUT_CLASSIFICATION	3.264084407060947E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999985237689254	WITHOUT_CLASSIFICATION	1.4762310745244741E-6	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999970877964701	WITHOUT_CLASSIFICATION	2.91220352990477E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999998863514244	WITHOUT_CLASSIFICATION	1.1364857558003227E-7	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999970806113613	WITHOUT_CLASSIFICATION	2.9193886387456952E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999795801158413	WITHOUT_CLASSIFICATION	2.0419884158730824E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999972639670767	WITHOUT_CLASSIFICATION	2.736032923455803E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999998933817787	WITHOUT_CLASSIFICATION	1.0661822125996934E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999983225604054	WITHOUT_CLASSIFICATION	1.6774395946050226E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999997489614979	WITHOUT_CLASSIFICATION	2.510385020575196E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999995166902627	WITHOUT_CLASSIFICATION	4.833097373561232E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999992105434357	WITHOUT_CLASSIFICATION	7.894565643893773E-7	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999966528933517	WITHOUT_CLASSIFICATION	3.347106648249473E-6	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999959391995369	WITHOUT_CLASSIFICATION	4.060800463111635E-6	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999991023290079	WITHOUT_CLASSIFICATION	8.976709920638253E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999999108494921	WITHOUT_CLASSIFICATION	8.915050781970588E-8	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999819806951062	WITHOUT_CLASSIFICATION	1.8019304893757036E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999998719380472	WITHOUT_CLASSIFICATION	1.2806195279471733E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999996229725556	WITHOUT_CLASSIFICATION	3.7702744443590266E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999700336950471	WITHOUT_CLASSIFICATION	2.9966304952990574E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999324088522945	WITHOUT_CLASSIFICATION	6.759114770548068E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999920410701463	WITHOUT_CLASSIFICATION	7.958929853760483E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999997177338931	WITHOUT_CLASSIFICATION	2.82266106938995E-7	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999874703676842	WITHOUT_CLASSIFICATION	1.2529632315727408E-5	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999957956429407	WITHOUT_CLASSIFICATION	4.204357059273236E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999992917726618	WITHOUT_CLASSIFICATION	7.082273383508948E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999782718861995	WITHOUT_CLASSIFICATION	2.1728113800568076E-5	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999935018963894	WITHOUT_CLASSIFICATION	6.498103610596681E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999782718861995	WITHOUT_CLASSIFICATION	2.1728113800568076E-5	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999929074293298	WITHOUT_CLASSIFICATION	7.0925706701579015E-6	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999977516351048	WITHOUT_CLASSIFICATION	2.2483648950692506E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999960292752634	WITHOUT_CLASSIFICATION	3.970724736567822E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999772125001647	WITHOUT_CLASSIFICATION	2.27874998352974E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999304629413166	WITHOUT_CLASSIFICATION	6.953705868339332E-5	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999553674407163	WITHOUT_CLASSIFICATION	4.463255928364764E-5	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999998457647715	WITHOUT_CLASSIFICATION	1.5423522842834526E-7	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999845201873321	WITHOUT_CLASSIFICATION	1.5479812667926113E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9996493445003475	WITHOUT_CLASSIFICATION	3.506554996525233E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999816380772557	WITHOUT_CLASSIFICATION	1.8361922744284156E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999604546761798	WITHOUT_CLASSIFICATION	3.954532382010553E-5	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999998877184312	WITHOUT_CLASSIFICATION	1.1228156875770606E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999995516856244	WITHOUT_CLASSIFICATION	4.483143755595543E-7	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999882375826239	WITHOUT_CLASSIFICATION	1.1762417375982498E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998727053260458	WITHOUT_CLASSIFICATION	1.2729467395430755E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998777394407761	WITHOUT_CLASSIFICATION	1.2226055922393944E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999971540283694	WITHOUT_CLASSIFICATION	2.845971630682829E-6	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999998421909875	WITHOUT_CLASSIFICATION	1.578090124633597E-7	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999997773851159	WITHOUT_CLASSIFICATION	2.2261488412103946E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999375062341	WITHOUT_CLASSIFICATION	6.249376593007617E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999996467343168	WITHOUT_CLASSIFICATION	3.532656831528447E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999977505443837	WITHOUT_CLASSIFICATION	2.249455616253798E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999883542791858	WITHOUT_CLASSIFICATION	1.1645720814257406E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999743111695486	WITHOUT_CLASSIFICATION	2.5688830451389508E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999916498219104	WITHOUT_CLASSIFICATION	8.350178089709903E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999969165040039	WITHOUT_CLASSIFICATION	3.08349599614033E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998715122312403	WITHOUT_CLASSIFICATION	1.2848776875974696E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998715122312403	WITHOUT_CLASSIFICATION	1.2848776875974696E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999662617868612	WITHOUT_CLASSIFICATION	3.373821313884287E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9814391593865193	WITHOUT_CLASSIFICATION	0.018560840613480713	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9899404400039383	WITHOUT_CLASSIFICATION	0.010059559996061583	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999941014864313	WITHOUT_CLASSIFICATION	5.898513568636045E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999988805277878	WITHOUT_CLASSIFICATION	1.1194722121856697E-6	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999357808735574	WITHOUT_CLASSIFICATION	6.421912644256776E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9988595252086019	WITHOUT_CLASSIFICATION	0.001140474791398023	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999963947894005	WITHOUT_CLASSIFICATION	3.6052105995634267E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999969061792222	WITHOUT_CLASSIFICATION	3.093820777796426E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9974252587397907	WITHOUT_CLASSIFICATION	0.0025747412602093326	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998932905418475	WITHOUT_CLASSIFICATION	1.0670945815240628E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999872565968033	WITHOUT_CLASSIFICATION	1.2743403196663604E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999892080274856	WITHOUT_CLASSIFICATION	1.0791972514436278E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999810374847864	WITHOUT_CLASSIFICATION	1.8962515213661846E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999965276478585	WITHOUT_CLASSIFICATION	3.472352141470749E-6	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999956469588582	WITHOUT_CLASSIFICATION	4.353041141666287E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999998906230178	WITHOUT_CLASSIFICATION	1.0937698220113674E-6	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999773529062087	WITHOUT_CLASSIFICATION	2.2647093791354053E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999931593357536	WITHOUT_CLASSIFICATION	6.840664246323564E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999988805277878	WITHOUT_CLASSIFICATION	1.1194722121856697E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999998906230178	WITHOUT_CLASSIFICATION	1.0937698220113674E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999963947894005	WITHOUT_CLASSIFICATION	3.6052105995634267E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999969061792222	WITHOUT_CLASSIFICATION	3.093820777796426E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999993734813577	WITHOUT_CLASSIFICATION	6.265186423188099E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999980470305111	WITHOUT_CLASSIFICATION	1.952969488858955E-6	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999800486468367	WITHOUT_CLASSIFICATION	1.9951353163322892E-5	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990106962875	WITHOUT_CLASSIFICATION	9.893037124501073E-7	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999978147349857	WITHOUT_CLASSIFICATION	2.18526501436862E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999602974795964	WITHOUT_CLASSIFICATION	3.970252040376775E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999602974795964	WITHOUT_CLASSIFICATION	3.970252040376775E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999843933119701	WITHOUT_CLASSIFICATION	1.5606688029896778E-5	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999991591038682	WITHOUT_CLASSIFICATION	8.408961318025685E-6	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999977331308897	WITHOUT_CLASSIFICATION	2.2668691102228495E-6	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999969691075372	WITHOUT_CLASSIFICATION	3.0308924628013805E-6	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999887713706181	WITHOUT_CLASSIFICATION	1.1228629381911247E-5	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999992058272601	WITHOUT_CLASSIFICATION	7.941727399080782E-6	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999893952743728	WITHOUT_CLASSIFICATION	1.060472562723606E-5	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999997137516322	WITHOUT_CLASSIFICATION	2.862483678090322E-6	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999934154641213	WITHOUT_CLASSIFICATION	6.584535878585521E-6	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999912075516265	WITHOUT_CLASSIFICATION	8.79244837352138E-6	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999976266989318	WITHOUT_CLASSIFICATION	2.3733010682205465E-6	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999982335333076	WITHOUT_CLASSIFICATION	1.7664666923773024E-6	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999924738360714	WITHOUT_CLASSIFICATION	7.526163928614286E-6	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999912500289699	WITHOUT_CLASSIFICATION	8.749971030070362E-6	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999976381646992	WITHOUT_CLASSIFICATION	2.361835300745086E-6	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999952194907661	WITHOUT_CLASSIFICATION	4.78050923386178E-6	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999923850837132	WITHOUT_CLASSIFICATION	7.614916286670428E-6	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999984091523715	WITHOUT_CLASSIFICATION	1.590847628555651E-6	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999963973987455	WITHOUT_CLASSIFICATION	3.6026012545189137E-6	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999988797243734	WITHOUT_CLASSIFICATION	1.1202756265984892E-5	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999982155096427	WITHOUT_CLASSIFICATION	1.7844903573070048E-5	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999951831837032	WITHOUT_CLASSIFICATION	4.816816296908912E-6	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999978070770236	WITHOUT_CLASSIFICATION	2.192922976514776E-6	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999918653405728	WITHOUT_CLASSIFICATION	8.134659427138264E-6	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999891376496094	WITHOUT_CLASSIFICATION	1.0862350390535683E-5	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999970679763306	WITHOUT_CLASSIFICATION	2.9320236694296247E-6	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999918911423854	WITHOUT_CLASSIFICATION	8.108857614593078E-6	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999792435046954	WITHOUT_CLASSIFICATION	2.0756495304723765E-5	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999935937727096	WITHOUT_CLASSIFICATION	6.406227290403043E-5	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.999995406799543	WITHOUT_CLASSIFICATION	4.593200457018271E-6	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999291173309494	WITHOUT_CLASSIFICATION	7.088266905067915E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999934870205007	WITHOUT_CLASSIFICATION	6.512979499161497E-6	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999964086185749	WITHOUT_CLASSIFICATION	3.59138142512206E-6	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999958246320659	WITHOUT_CLASSIFICATION	4.175367934062057E-6	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999988729678749	WITHOUT_CLASSIFICATION	1.1270321250915652E-6	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999996784811876	WITHOUT_CLASSIFICATION	3.2151881239711626E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999962619970906	WITHOUT_CLASSIFICATION	3.7380029094407937E-6	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989910235255	WITHOUT_CLASSIFICATION	1.0089764743961488E-6	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999952167577031	WITHOUT_CLASSIFICATION	4.7832422968664956E-6	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999923807302049	WITHOUT_CLASSIFICATION	7.619269795040597E-6	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999979433708466	WITHOUT_CLASSIFICATION	2.0566291534762423E-6	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999996528601372	WITHOUT_CLASSIFICATION	3.4713986279426013E-6	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999995964124919	WITHOUT_CLASSIFICATION	4.035875081064104E-6	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999970400369527	WITHOUT_CLASSIFICATION	2.9599630473176703E-6	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999911350503105	WITHOUT_CLASSIFICATION	8.864949689593642E-6	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999746670209518	WITHOUT_CLASSIFICATION	2.5332979048188557E-5	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999931834311122	WITHOUT_CLASSIFICATION	6.816568887749024E-6	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999994286735931	WITHOUT_CLASSIFICATION	5.713264068793034E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999994912994391	WITHOUT_CLASSIFICATION	5.087005608671656E-7	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.999998583830253	WITHOUT_CLASSIFICATION	1.4161697470003722E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999625951506	WITHOUT_CLASSIFICATION	3.7404849378286176E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999998349678757	WITHOUT_CLASSIFICATION	1.6503212420234306E-7	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999934911493106	WITHOUT_CLASSIFICATION	6.508850689532506E-6	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999539124521538	WITHOUT_CLASSIFICATION	4.608754784608005E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999872565968033	WITHOUT_CLASSIFICATION	1.2743403196663604E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999996329749843	WITHOUT_CLASSIFICATION	3.6702501577471115E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999995870716103	WITHOUT_CLASSIFICATION	4.129283897459599E-7	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999982291891029	WITHOUT_CLASSIFICATION	1.7708108972066E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999942306473926	WITHOUT_CLASSIFICATION	5.7693526074907505E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999989962667495	WITHOUT_CLASSIFICATION	1.0037332505336563E-6	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999977730306279	WITHOUT_CLASSIFICATION	2.2269693721172614E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999995479787304	WITHOUT_CLASSIFICATION	4.52021269625338E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998932905418475	WITHOUT_CLASSIFICATION	1.0670945815240628E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999918791012778	WITHOUT_CLASSIFICATION	8.120898722134014E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999997577170905	WITHOUT_CLASSIFICATION	2.422829095220749E-7	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999993097098199	WITHOUT_CLASSIFICATION	6.902901801088721E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999950971713719	WITHOUT_CLASSIFICATION	4.902828628058818E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999928803426753	WITHOUT_CLASSIFICATION	7.1196573247129235E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999957259886414	WITHOUT_CLASSIFICATION	4.27401135858952E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999836677879328	WITHOUT_CLASSIFICATION	1.6332212067172097E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999782336657261	WITHOUT_CLASSIFICATION	2.176633427387981E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975984504239	WITHOUT_CLASSIFICATION	2.401549576063069E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999996749501291	WITHOUT_CLASSIFICATION	3.250498708861858E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999995150575799	WITHOUT_CLASSIFICATION	4.849424201461153E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999303071943	WITHOUT_CLASSIFICATION	6.96928057581539E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999976598256195	WITHOUT_CLASSIFICATION	2.3401743805414754E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999721004735129	WITHOUT_CLASSIFICATION	2.7899526487022847E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999995957970613	WITHOUT_CLASSIFICATION	4.0420293862811966E-7	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999995424754822	WITHOUT_CLASSIFICATION	4.575245178763744E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999925696498291	WITHOUT_CLASSIFICATION	7.430350170847332E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999979621944631	WITHOUT_CLASSIFICATION	2.037805536858388E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998932905418475	WITHOUT_CLASSIFICATION	1.0670945815240628E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999995150575799	WITHOUT_CLASSIFICATION	4.849424201461153E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999303071943	WITHOUT_CLASSIFICATION	6.96928057581539E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999976598256195	WITHOUT_CLASSIFICATION	2.3401743805414754E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999996978377216	WITHOUT_CLASSIFICATION	3.021622784091799E-7	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.999835006913556	WITHOUT_CLASSIFICATION	1.6499308644402983E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999191822968626	WITHOUT_CLASSIFICATION	8.081770313734727E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999998411190671	WITHOUT_CLASSIFICATION	1.5888093281986582E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908004449947	WITHOUT_CLASSIFICATION	9.199555005286701E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908004449947	WITHOUT_CLASSIFICATION	9.199555005286701E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908004449947	WITHOUT_CLASSIFICATION	9.199555005286701E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999999144458855	WITHOUT_CLASSIFICATION	8.555411450642493E-8	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999846413748215	WITHOUT_CLASSIFICATION	1.5358625178574787E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999962566741111	WITHOUT_CLASSIFICATION	3.743325888938617E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999998794395073	WITHOUT_CLASSIFICATION	1.2056049272914941E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999847433005501	WITHOUT_CLASSIFICATION	1.525669944982902E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.999999911457352	WITHOUT_CLASSIFICATION	8.854264800986274E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999907762956689	WITHOUT_CLASSIFICATION	9.223704331031716E-6	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999612796360979	WITHOUT_CLASSIFICATION	3.872036390202868E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999680563643	WITHOUT_CLASSIFICATION	3.1943635636792935E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999997202101208	WITHOUT_CLASSIFICATION	2.797898791013648E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9998309380030689	WITHOUT_CLASSIFICATION	1.6906199693114658E-4	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999850840309	WITHOUT_CLASSIFICATION	1.491596915379914E-8	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999638871899751	WITHOUT_CLASSIFICATION	3.611281002491282E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999579652872	WITHOUT_CLASSIFICATION	4.2034712902697094E-8	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999877684775226	WITHOUT_CLASSIFICATION	1.2231522477363107E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999692096273171	WITHOUT_CLASSIFICATION	3.0790372682875244E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.999940088801996	WITHOUT_CLASSIFICATION	5.991119800386613E-5	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9999955140633707	WITHOUT_CLASSIFICATION	4.48593662926066E-6	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999987928943851	WITHOUT_CLASSIFICATION	1.2071056148271686E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999994882873801	WITHOUT_CLASSIFICATION	5.117126200250927E-7	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999980415223344	WITHOUT_CLASSIFICATION	1.9584776655835288E-6	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999992167312811	WITHOUT_CLASSIFICATION	7.832687188511214E-7	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999972285241192	WITHOUT_CLASSIFICATION	2.77147588072444E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.999999996426647	WITHOUT_CLASSIFICATION	3.5733529083321295E-9	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999476817594	WITHOUT_CLASSIFICATION	5.231824068883369E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999518968681981	WITHOUT_CLASSIFICATION	4.810313180205667E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999912087058261	WITHOUT_CLASSIFICATION	8.79129417389734E-6	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999953460536334	WITHOUT_CLASSIFICATION	4.653946366601174E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999982288111319	WITHOUT_CLASSIFICATION	1.7711888680572287E-6	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.999988691496112	WITHOUT_CLASSIFICATION	1.1308503887993314E-5	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.999999387710269	WITHOUT_CLASSIFICATION	6.122897310639515E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.999989586558043	WITHOUT_CLASSIFICATION	1.0413441956893513E-5	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999998167956241	WITHOUT_CLASSIFICATION	1.8320437581495024E-7	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999132103126204	WITHOUT_CLASSIFICATION	8.678968737958974E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999429866038475	WITHOUT_CLASSIFICATION	5.7013396152444254E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999986015929148	WITHOUT_CLASSIFICATION	1.3984070852154862E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999998933817787	WITHOUT_CLASSIFICATION	1.0661822125996934E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999508659509931	WITHOUT_CLASSIFICATION	4.913404900684009E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999796520342	WITHOUT_CLASSIFICATION	2.0347965699386052E-8	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999995315797146	WITHOUT_CLASSIFICATION	4.6842028550998386E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999983567092543	WITHOUT_CLASSIFICATION	1.6432907457368814E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999317548020104	WITHOUT_CLASSIFICATION	6.824519798967521E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999808319522501	WITHOUT_CLASSIFICATION	1.916804774988565E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999317548020104	WITHOUT_CLASSIFICATION	6.824519798967521E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999998324529371	WITHOUT_CLASSIFICATION	1.6754706298030307E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999930871075159	WITHOUT_CLASSIFICATION	6.912892484046821E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.99995063619803	WITHOUT_CLASSIFICATION	4.936380196995005E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999997805327936	WITHOUT_CLASSIFICATION	2.1946720645456592E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999997896536911	WITHOUT_CLASSIFICATION	2.1034630903578056E-7	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999999879885143	WITHOUT_CLASSIFICATION	1.2011485618337908E-8	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999943925443666	WITHOUT_CLASSIFICATION	5.6074556334856925E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999997504053202	WITHOUT_CLASSIFICATION	2.4959467982047453E-7	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.99999985759542	WITHOUT_CLASSIFICATION	1.4240458005201594E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999999863836251	WITHOUT_CLASSIFICATION	1.3616374831437224E-8	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999998391829302	WITHOUT_CLASSIFICATION	1.60817069784933E-7	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999983787449238	WITHOUT_CLASSIFICATION	1.6212550761976775E-6	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999996696879977	WITHOUT_CLASSIFICATION	3.3031200231091785E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999992700195967	WITHOUT_CLASSIFICATION	7.299804034501719E-7	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999995451955808	WITHOUT_CLASSIFICATION	4.5480441927798696E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999996478765883	WITHOUT_CLASSIFICATION	3.521234115730987E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999997677566622	WITHOUT_CLASSIFICATION	2.322433377727862E-7	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999997303862731	WITHOUT_CLASSIFICATION	2.6961372689891976E-7	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999986178284765	WITHOUT_CLASSIFICATION	1.382171523456669E-6	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999992754746528	WITHOUT_CLASSIFICATION	7.245253472879648E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999706533860642	WITHOUT_CLASSIFICATION	2.9346613935775654E-5	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999997569455493	WITHOUT_CLASSIFICATION	2.430544507102225E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999995910040701	WITHOUT_CLASSIFICATION	4.08995929934508E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.99999932617912	WITHOUT_CLASSIFICATION	6.73820879947057E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999999497631669	WITHOUT_CLASSIFICATION	5.023683314089742E-8	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.999998357131709	WITHOUT_CLASSIFICATION	1.642868290945702E-6	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999913661883	WITHOUT_CLASSIFICATION	8.633811552763902E-9	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999998760658005	WITHOUT_CLASSIFICATION	1.239341994166377E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999964291893979	WITHOUT_CLASSIFICATION	3.5708106021460305E-6	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.999999974093453	WITHOUT_CLASSIFICATION	2.590654697890336E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.999996831077916	WITHOUT_CLASSIFICATION	3.1689220838499684E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999963437073978	WITHOUT_CLASSIFICATION	3.656292602340687E-6	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999586829259	WITHOUT_CLASSIFICATION	4.1317074017955976E-8	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999933739818565	WITHOUT_CLASSIFICATION	6.62601814351712E-6	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999994732573306	WITHOUT_CLASSIFICATION	5.267426694610322E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999995809232145	WITHOUT_CLASSIFICATION	4.1907678553986953E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999984761932149	WITHOUT_CLASSIFICATION	1.5238067850968085E-6	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999988128745806	WITHOUT_CLASSIFICATION	1.1871254194458508E-6	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999995315797146	WITHOUT_CLASSIFICATION	4.6842028550998386E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999995120387427	WITHOUT_CLASSIFICATION	4.879612573578911E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999754862862923	WITHOUT_CLASSIFICATION	2.4513713707685014E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999942489585285	WITHOUT_CLASSIFICATION	5.7510414715318315E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999991261598169	WITHOUT_CLASSIFICATION	8.738401831858225E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999808319522501	WITHOUT_CLASSIFICATION	1.916804774988565E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999628426593745	WITHOUT_CLASSIFICATION	3.7157340625482386E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999981311333143	WITHOUT_CLASSIFICATION	1.8688666858022359E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999988986718188	WITHOUT_CLASSIFICATION	1.1013281812035041E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999774478729607	WITHOUT_CLASSIFICATION	2.2552127039246117E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999998544613609	WITHOUT_CLASSIFICATION	1.4553863923051523E-7	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999971298059757	WITHOUT_CLASSIFICATION	2.870194024369091E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999976960763679	WITHOUT_CLASSIFICATION	2.3039236322109326E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999907909608674	WITHOUT_CLASSIFICATION	9.209039132550857E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999990759443219	WITHOUT_CLASSIFICATION	9.240556779760072E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999434996489217	WITHOUT_CLASSIFICATION	5.650035107826072E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999983225604054	WITHOUT_CLASSIFICATION	1.6774395946050226E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999798778524954	WITHOUT_CLASSIFICATION	2.0122147504538926E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999998839106039	WITHOUT_CLASSIFICATION	1.1608939613533961E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999989558590093	WITHOUT_CLASSIFICATION	1.0441409906563723E-6	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999460593437387	WITHOUT_CLASSIFICATION	5.39406562613517E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999997161520414	WITHOUT_CLASSIFICATION	2.838479585683001E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999137292752572	WITHOUT_CLASSIFICATION	8.627072474285527E-5	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999999185497379	WITHOUT_CLASSIFICATION	8.145026204404679E-8	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999940009650582	WITHOUT_CLASSIFICATION	5.9990349419041315E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999272762229	WITHOUT_CLASSIFICATION	7.272377711589165E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999996359808709	WITHOUT_CLASSIFICATION	3.640191290162714E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999940009650582	WITHOUT_CLASSIFICATION	5.9990349419041315E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999911600655	WITHOUT_CLASSIFICATION	8.839934421883702E-9	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999869905234468	WITHOUT_CLASSIFICATION	1.3009476553178572E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999982713388457	WITHOUT_CLASSIFICATION	1.7286611544077324E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999910760191976	WITHOUT_CLASSIFICATION	8.923980802495025E-6	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999611401998	WITHOUT_CLASSIFICATION	3.885980017073974E-8	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999997492022952	WITHOUT_CLASSIFICATION	2.5079770488323644E-7	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999477431134	WITHOUT_CLASSIFICATION	5.225688667412313E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999999561549421	WITHOUT_CLASSIFICATION	4.384505790782129E-8	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999998472587047	WITHOUT_CLASSIFICATION	1.5274129517415555E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.999999973230421	WITHOUT_CLASSIFICATION	2.6769578931232488E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999991697921238	WITHOUT_CLASSIFICATION	8.302078762305002E-7	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999990341677942	WITHOUT_CLASSIFICATION	9.658322057995787E-7	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999995807400079	WITHOUT_CLASSIFICATION	4.192599919713374E-7	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999720710978	WITHOUT_CLASSIFICATION	2.7928902208708326E-8	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999988986549271	WITHOUT_CLASSIFICATION	1.101345072938371E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999983985711263	WITHOUT_CLASSIFICATION	1.6014288737238155E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999999406971214	WITHOUT_CLASSIFICATION	5.930287874094383E-8	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999997648966849	WITHOUT_CLASSIFICATION	2.3510331514177316E-7	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999998265761796	WITHOUT_CLASSIFICATION	1.7342382040908847E-7	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999998522859911	WITHOUT_CLASSIFICATION	1.4771400895021606E-7	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999989404619624	WITHOUT_CLASSIFICATION	1.0595380376365912E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999960292752634	WITHOUT_CLASSIFICATION	3.970724736567822E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972841532254	WITHOUT_CLASSIFICATION	2.7158467745853226E-6	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999999083907594	WITHOUT_CLASSIFICATION	9.160924068039661E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.99999985123734	WITHOUT_CLASSIFICATION	1.4876265995915054E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.99999985123734	WITHOUT_CLASSIFICATION	1.4876265995915054E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999120835957	WITHOUT_CLASSIFICATION	8.791640432120945E-8	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999501523434	WITHOUT_CLASSIFICATION	4.9847656544664036E-8	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999492935052	WITHOUT_CLASSIFICATION	5.0706494814867304E-8	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999285506335	WITHOUT_CLASSIFICATION	7.144936649415101E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999830734929633	WITHOUT_CLASSIFICATION	1.6926507036621517E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9998797225470871	WITHOUT_CLASSIFICATION	1.2027745291292197E-4	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999867275185832	WITHOUT_CLASSIFICATION	1.3272481416702475E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999995053666709	WITHOUT_CLASSIFICATION	4.946333289902552E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999987250420883	WITHOUT_CLASSIFICATION	1.2749579117020048E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999987250420883	WITHOUT_CLASSIFICATION	1.2749579117020048E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999954245683945	WITHOUT_CLASSIFICATION	4.575431605553529E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999954245683945	WITHOUT_CLASSIFICATION	4.575431605553529E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999883726393153	WITHOUT_CLASSIFICATION	1.1627360684662056E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999613740933431	WITHOUT_CLASSIFICATION	3.862590665700276E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999985138504878	WITHOUT_CLASSIFICATION	1.4861495122222312E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.999990221938942	WITHOUT_CLASSIFICATION	9.778061057837006E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999970617177447	WITHOUT_CLASSIFICATION	2.9382822553862466E-6	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999997778692473	WITHOUT_CLASSIFICATION	2.2213075256784747E-7	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999997787453738	WITHOUT_CLASSIFICATION	2.212546263119945E-7	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999976610055719	WITHOUT_CLASSIFICATION	2.3389944280862446E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999824153236762	WITHOUT_CLASSIFICATION	1.7584676323838604E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9992811195666579	WITHOUT_CLASSIFICATION	7.188804333420335E-4	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999997058402761	WITHOUT_CLASSIFICATION	2.9415972388558447E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999976208107942	WITHOUT_CLASSIFICATION	2.3791892057030485E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999976208107942	WITHOUT_CLASSIFICATION	2.3791892057030485E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999978825746539	WITHOUT_CLASSIFICATION	2.117425346053176E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999978825746539	WITHOUT_CLASSIFICATION	2.117425346053176E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999964739083558	WITHOUT_CLASSIFICATION	3.526091644299958E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.99996934536333	WITHOUT_CLASSIFICATION	3.0654636669895307E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999476104984336	WITHOUT_CLASSIFICATION	5.238950156643709E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.999905381445489	WITHOUT_CLASSIFICATION	9.461855451100202E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.999992841411664	WITHOUT_CLASSIFICATION	7.158588335907197E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999906270378778	WITHOUT_CLASSIFICATION	9.37296212214375E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999806340165	WITHOUT_CLASSIFICATION	1.936598344847953E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999993124195509	WITHOUT_CLASSIFICATION	6.875804492269542E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999993124195509	WITHOUT_CLASSIFICATION	6.875804492269542E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999946419650898	WITHOUT_CLASSIFICATION	5.358034910096295E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999946419650898	WITHOUT_CLASSIFICATION	5.358034910096295E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999977552138299	WITHOUT_CLASSIFICATION	2.244786170008646E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999951321597706	WITHOUT_CLASSIFICATION	4.86784022934655E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999940998993927	WITHOUT_CLASSIFICATION	5.900100607241732E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999940998993927	WITHOUT_CLASSIFICATION	5.900100607241732E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999940998993927	WITHOUT_CLASSIFICATION	5.900100607241732E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999999418019175	WITHOUT_CLASSIFICATION	5.8198082467064405E-8	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999995510748516	WITHOUT_CLASSIFICATION	4.4892514836043027E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999958458065937	WITHOUT_CLASSIFICATION	4.154193406225349E-6	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999997926873024	WITHOUT_CLASSIFICATION	2.0731269763899942E-7	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999973470163742	WITHOUT_CLASSIFICATION	2.652983625794437E-6	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999909334963909	WITHOUT_CLASSIFICATION	9.066503609129038E-6	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999979030990639	WITHOUT_CLASSIFICATION	2.0969009361024565E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999997755762983	WITHOUT_CLASSIFICATION	2.244237018206668E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999984945285815	WITHOUT_CLASSIFICATION	1.5054714185653637E-6	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999992502435908	WITHOUT_CLASSIFICATION	7.497564092410805E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999928996212275	WITHOUT_CLASSIFICATION	7.100378772435507E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999998820539863	WITHOUT_CLASSIFICATION	1.1794601380131451E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999996560431026	WITHOUT_CLASSIFICATION	3.4395689740482705E-7	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.999998205670451	WITHOUT_CLASSIFICATION	1.7943295490322466E-6	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.999999856525855	WITHOUT_CLASSIFICATION	1.4347414498931712E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999997328965476	WITHOUT_CLASSIFICATION	2.6710345237297034E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.999992109933928	WITHOUT_CLASSIFICATION	7.890066072018602E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999581935596983	WITHOUT_CLASSIFICATION	4.180644030181268E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999997663884268	WITHOUT_CLASSIFICATION	2.3361157324065974E-7	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999995961221931	WITHOUT_CLASSIFICATION	4.038778068731475E-7	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999997485109199	WITHOUT_CLASSIFICATION	2.5148908014096193E-7	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999992317645506	WITHOUT_CLASSIFICATION	7.68235449476565E-7	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999989118063051	WITHOUT_CLASSIFICATION	1.0881936950031375E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.999997773556912	WITHOUT_CLASSIFICATION	2.2264430880011642E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999991668511997	WITHOUT_CLASSIFICATION	8.331488003549805E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999979988981345	WITHOUT_CLASSIFICATION	2.001101865545954E-6	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999865416905752	WITHOUT_CLASSIFICATION	1.3458309424695868E-5	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999982797788731	WITHOUT_CLASSIFICATION	1.7202211267784244E-6	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999585508016134	WITHOUT_CLASSIFICATION	4.1449198386537296E-5	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999648265695533	WITHOUT_CLASSIFICATION	3.5173430446598955E-5	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999998963128119	WITHOUT_CLASSIFICATION	1.0368718810869206E-7	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.999987925003069	WITHOUT_CLASSIFICATION	1.2074996931117843E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999991595285378	WITHOUT_CLASSIFICATION	8.404714622032381E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999967863277163	WITHOUT_CLASSIFICATION	3.2136722836718574E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999126628294822	WITHOUT_CLASSIFICATION	8.733717051776357E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999995407165011	WITHOUT_CLASSIFICATION	4.592834989321374E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999913321558245	WITHOUT_CLASSIFICATION	8.667844175613205E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999991993127932	WITHOUT_CLASSIFICATION	8.006872067666581E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999989053942057	WITHOUT_CLASSIFICATION	1.0946057942608058E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999992834064035	WITHOUT_CLASSIFICATION	7.165935964510927E-7	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999833105607445	WITHOUT_CLASSIFICATION	1.6689439255439038E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999997185983784	WITHOUT_CLASSIFICATION	2.814016216657491E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9974476700890942	WITHOUT_CLASSIFICATION	0.0025523299109057296	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999997822483734	WITHOUT_CLASSIFICATION	2.1775162647151717E-7	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999926292296246	WITHOUT_CLASSIFICATION	7.37077037539271E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999998837214501	WITHOUT_CLASSIFICATION	1.1627854998601456E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999984973800337	WITHOUT_CLASSIFICATION	1.5026199664041584E-6	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999977648453799	WITHOUT_CLASSIFICATION	2.2351546199831177E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.999988052808894	WITHOUT_CLASSIFICATION	1.1947191106008918E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999833492164533	WITHOUT_CLASSIFICATION	1.665078354671522E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999971080034569	WITHOUT_CLASSIFICATION	2.8919965430697213E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999910540444	WITHOUT_CLASSIFICATION	8.945955654445983E-9	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999996090279945	WITHOUT_CLASSIFICATION	3.909720056148384E-7	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999971913034489	WITHOUT_CLASSIFICATION	2.808696551069028E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999933130564782	WITHOUT_CLASSIFICATION	6.6869435218591295E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999996753499604	WITHOUT_CLASSIFICATION	3.246500395934706E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9974476700890942	WITHOUT_CLASSIFICATION	0.0025523299109057296	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9974476700890942	WITHOUT_CLASSIFICATION	0.0025523299109057296	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999976976622571	WITHOUT_CLASSIFICATION	2.302337742898598E-6	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999992576259128	WITHOUT_CLASSIFICATION	7.423740871703668E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999998731197598	WITHOUT_CLASSIFICATION	1.268802401744407E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999973059292574	WITHOUT_CLASSIFICATION	2.694070742590438E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999973059292574	WITHOUT_CLASSIFICATION	2.694070742590438E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999998192622969	WITHOUT_CLASSIFICATION	1.8073770312793225E-7	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999983645971	WITHOUT_CLASSIFICATION	1.6354029983571627E-9	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999995567931522	WITHOUT_CLASSIFICATION	4.4320684782664974E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999876988407871	WITHOUT_CLASSIFICATION	1.2301159212914177E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999300520267116	WITHOUT_CLASSIFICATION	6.99479732884614E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999449538828	WITHOUT_CLASSIFICATION	5.504611733434208E-8	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999999242585789	WITHOUT_CLASSIFICATION	7.574142116417663E-8	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999985799485629	WITHOUT_CLASSIFICATION	1.420051437029034E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999690229093577	WITHOUT_CLASSIFICATION	3.097709064228535E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999911170871455	WITHOUT_CLASSIFICATION	8.88291285462615E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999990994603972	WITHOUT_CLASSIFICATION	9.00539602776603E-7	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999327923208	WITHOUT_CLASSIFICATION	6.720767913402841E-8	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999300520267116	WITHOUT_CLASSIFICATION	6.99479732884614E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999987250420883	WITHOUT_CLASSIFICATION	1.2749579117020048E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999987250420883	WITHOUT_CLASSIFICATION	1.2749579117020048E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999916080183698	WITHOUT_CLASSIFICATION	8.391981630214868E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999555886486792	WITHOUT_CLASSIFICATION	4.441135132079373E-5	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999997086452038	WITHOUT_CLASSIFICATION	2.913547962080582E-7	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999967674062679	WITHOUT_CLASSIFICATION	3.232593732076705E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999459752687071	WITHOUT_CLASSIFICATION	5.402473129295725E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999796214476004	WITHOUT_CLASSIFICATION	2.0378552399486956E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999796214476004	WITHOUT_CLASSIFICATION	2.0378552399486956E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999599373402074	WITHOUT_CLASSIFICATION	4.0062659792537056E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999128515383513	WITHOUT_CLASSIFICATION	8.714846164874549E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999997288277584	WITHOUT_CLASSIFICATION	2.711722415991778E-6	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999363656022724	WITHOUT_CLASSIFICATION	6.36343977276396E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999791376737329	WITHOUT_CLASSIFICATION	2.0862326267003186E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999958415288429	WITHOUT_CLASSIFICATION	4.158471157178792E-6	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999858444926089	WITHOUT_CLASSIFICATION	1.4155507391156023E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999737838046991	WITHOUT_CLASSIFICATION	2.621619530088158E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999998719380472	WITHOUT_CLASSIFICATION	1.2806195279471733E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999996229725556	WITHOUT_CLASSIFICATION	3.7702744443590266E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999700336950471	WITHOUT_CLASSIFICATION	2.9966304952990574E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999995462022189	WITHOUT_CLASSIFICATION	4.5379778123789444E-7	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999976212696868	WITHOUT_CLASSIFICATION	2.378730313242097E-6	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999987376840238	WITHOUT_CLASSIFICATION	1.262315976188428E-6	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999997014493219	WITHOUT_CLASSIFICATION	2.985506780282357E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999935850613668	WITHOUT_CLASSIFICATION	6.414938633126974E-6	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999897281756015	WITHOUT_CLASSIFICATION	1.0271824398449914E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999993876439301	WITHOUT_CLASSIFICATION	6.123560698317523E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999837665262887	WITHOUT_CLASSIFICATION	1.623347371130081E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999980331720388	WITHOUT_CLASSIFICATION	1.966827961182705E-6	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999943952601217	WITHOUT_CLASSIFICATION	5.604739878268693E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999997216233217	WITHOUT_CLASSIFICATION	2.78376678303073E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999997216233217	WITHOUT_CLASSIFICATION	2.78376678303073E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999965989660481	WITHOUT_CLASSIFICATION	3.4010339519176765E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999426404051	WITHOUT_CLASSIFICATION	5.735959483449501E-8	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999908965455191	WITHOUT_CLASSIFICATION	9.103454480972635E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999938613080368	WITHOUT_CLASSIFICATION	6.138691963161611E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999938613080368	WITHOUT_CLASSIFICATION	6.138691963161611E-6	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999988326575533	WITHOUT_CLASSIFICATION	1.1673424466430732E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999996970385403	WITHOUT_CLASSIFICATION	3.029614596114013E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999984575195415	WITHOUT_CLASSIFICATION	1.5424804585156168E-6	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999964088888412	WITHOUT_CLASSIFICATION	3.591111158869471E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999912860320341	WITHOUT_CLASSIFICATION	8.713967965893248E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999995046434531	WITHOUT_CLASSIFICATION	4.953565469955416E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999965276478585	WITHOUT_CLASSIFICATION	3.472352141470749E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999978825746539	WITHOUT_CLASSIFICATION	2.117425346053176E-6	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999973729185155	WITHOUT_CLASSIFICATION	2.6270814845402876E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999943414219691	WITHOUT_CLASSIFICATION	5.6585780308481E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999942359781328	WITHOUT_CLASSIFICATION	5.76402186728222E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999981513715157	WITHOUT_CLASSIFICATION	1.848628484264465E-6	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999980764652452	WITHOUT_CLASSIFICATION	1.923534754754247E-6	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999992122281436	WITHOUT_CLASSIFICATION	7.87771856487073E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9998368888498312	WITHOUT_CLASSIFICATION	1.6311115016879137E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999823783896804	WITHOUT_CLASSIFICATION	1.7621610319632567E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999996429387205	WITHOUT_CLASSIFICATION	3.5706127965262335E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999900356467883	WITHOUT_CLASSIFICATION	9.9643532116642E-6	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999978440008318	WITHOUT_CLASSIFICATION	2.155999168205742E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999370804343104	WITHOUT_CLASSIFICATION	6.291956568954997E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.999974222582701	WITHOUT_CLASSIFICATION	2.5777417298943214E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999663268323251	WITHOUT_CLASSIFICATION	3.3673167674977114E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.999999162868281	WITHOUT_CLASSIFICATION	8.371317190391846E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999949357317192	WITHOUT_CLASSIFICATION	5.064268280762561E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9998940533163805	WITHOUT_CLASSIFICATION	1.0594668361948753E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999887352539694	WITHOUT_CLASSIFICATION	1.1264746030692122E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999963004287632	WITHOUT_CLASSIFICATION	3.6995712368409034E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999963004287632	WITHOUT_CLASSIFICATION	3.6995712368409034E-6	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999974379675663	WITHOUT_CLASSIFICATION	2.562032433592084E-6	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999716610381022	WITHOUT_CLASSIFICATION	2.8338961897802965E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999947836111911	WITHOUT_CLASSIFICATION	5.216388808938986E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999947836111911	WITHOUT_CLASSIFICATION	5.216388808938986E-6	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999140359437972	WITHOUT_CLASSIFICATION	8.596405620274403E-5	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.999999463982511	WITHOUT_CLASSIFICATION	5.360174889209732E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999998970549864	WITHOUT_CLASSIFICATION	1.029450136343722E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999954260398	WITHOUT_CLASSIFICATION	4.5739602877611025E-9	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999987912999152	WITHOUT_CLASSIFICATION	1.2087000847376611E-6	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999995394157222	WITHOUT_CLASSIFICATION	4.605842777616897E-7	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999985614634979	WITHOUT_CLASSIFICATION	1.4385365021013832E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999951763037206	WITHOUT_CLASSIFICATION	4.823696279482277E-6	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.999997709696991	WITHOUT_CLASSIFICATION	2.2903030091055565E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.999999537856976	WITHOUT_CLASSIFICATION	4.621430239826534E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999737190306592	WITHOUT_CLASSIFICATION	2.6280969340726443E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999663268323251	WITHOUT_CLASSIFICATION	3.3673167674977114E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999197842735269	WITHOUT_CLASSIFICATION	8.021572647302065E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998932905418475	WITHOUT_CLASSIFICATION	1.0670945815240628E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999872565968033	WITHOUT_CLASSIFICATION	1.2743403196663604E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999998267850327	WITHOUT_CLASSIFICATION	1.7321496725313886E-7	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999983789729712	WITHOUT_CLASSIFICATION	1.6210270287294208E-6	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999935730945503	WITHOUT_CLASSIFICATION	6.426905449684293E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999538192443	WITHOUT_CLASSIFICATION	4.618075572740257E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997836992963096	WITHOUT_CLASSIFICATION	2.1630070369042836E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997836992963096	WITHOUT_CLASSIFICATION	2.1630070369042836E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9998566540086848	WITHOUT_CLASSIFICATION	1.433459913150918E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999983759502857	WITHOUT_CLASSIFICATION	1.6240497143210807E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999951763037206	WITHOUT_CLASSIFICATION	4.823696279482277E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999951763037206	WITHOUT_CLASSIFICATION	4.823696279482277E-6	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999987096551339	WITHOUT_CLASSIFICATION	1.290344866010467E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9999578395287441	WITHOUT_CLASSIFICATION	4.216047125585054E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999991384626357	WITHOUT_CLASSIFICATION	8.615373642735798E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.999996031561879	WITHOUT_CLASSIFICATION	3.968438121019099E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999974110287493	WITHOUT_CLASSIFICATION	2.588971250593686E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999983337137273	WITHOUT_CLASSIFICATION	1.6662862727905301E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999948509758141	WITHOUT_CLASSIFICATION	5.149024185835149E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999888732068453	WITHOUT_CLASSIFICATION	1.1126793154825121E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999979551622997	WITHOUT_CLASSIFICATION	2.044837700332368E-6	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999214237012711	WITHOUT_CLASSIFICATION	7.857629872893083E-5	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999998934275336	WITHOUT_CLASSIFICATION	1.0657246631153448E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999852792949195	WITHOUT_CLASSIFICATION	1.4720705080547822E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999852792949195	WITHOUT_CLASSIFICATION	1.4720705080547822E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999965172591949	WITHOUT_CLASSIFICATION	3.4827408049670667E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999975497653745	WITHOUT_CLASSIFICATION	2.4502346254922104E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999975497653745	WITHOUT_CLASSIFICATION	2.4502346254922104E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999976143714907	WITHOUT_CLASSIFICATION	2.3856285093814685E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999976143714907	WITHOUT_CLASSIFICATION	2.3856285093814685E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999834831809784	WITHOUT_CLASSIFICATION	1.6516819021523988E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999715292066	WITHOUT_CLASSIFICATION	2.847079341360964E-8	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999715292066	WITHOUT_CLASSIFICATION	2.847079341360964E-8	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999994482695853	WITHOUT_CLASSIFICATION	5.517304147597535E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.999941260727292	WITHOUT_CLASSIFICATION	5.873927270807813E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9974252587397907	WITHOUT_CLASSIFICATION	0.0025747412602093326	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999836115647477	WITHOUT_CLASSIFICATION	1.638843525233501E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999997868439405	WITHOUT_CLASSIFICATION	2.131560594517371E-7	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999928596399832	WITHOUT_CLASSIFICATION	7.140360016836276E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999790705866984	WITHOUT_CLASSIFICATION	2.0929413301606276E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999927143137083	WITHOUT_CLASSIFICATION	7.285686291829062E-6	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999940840012711	WITHOUT_CLASSIFICATION	5.915998728925429E-6	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999996107820551	WITHOUT_CLASSIFICATION	3.892179448959307E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999766062947452	WITHOUT_CLASSIFICATION	2.3393705254845664E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999980628949209	WITHOUT_CLASSIFICATION	1.937105079066375E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999782562480113	WITHOUT_CLASSIFICATION	2.174375198870471E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.999941260727292	WITHOUT_CLASSIFICATION	5.873927270807813E-5	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999970555219603	WITHOUT_CLASSIFICATION	2.9444780397467946E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999843885286557	WITHOUT_CLASSIFICATION	1.5611471344397506E-5	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999956103448974	WITHOUT_CLASSIFICATION	4.3896551025392394E-6	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999996727010392	WITHOUT_CLASSIFICATION	3.2729896091704807E-7	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999960440813248	WITHOUT_CLASSIFICATION	3.95591867515984E-6	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999962376087385	WITHOUT_CLASSIFICATION	3.7623912614271055E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9996479859014188	WITHOUT_CLASSIFICATION	3.520140985812027E-4	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999998972934292	WITHOUT_CLASSIFICATION	1.0270657075347012E-7	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999411712130297	WITHOUT_CLASSIFICATION	5.882878697026326E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9997493954371555	WITHOUT_CLASSIFICATION	2.5060456284448345E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999985596378442	WITHOUT_CLASSIFICATION	1.4403621557072258E-6	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999239227336155	WITHOUT_CLASSIFICATION	7.607726638447628E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999987506752019	WITHOUT_CLASSIFICATION	1.2493247980745234E-6	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999757721490063	WITHOUT_CLASSIFICATION	2.4227850993596002E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999993166963966	WITHOUT_CLASSIFICATION	6.833036033611963E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999770310545857	WITHOUT_CLASSIFICATION	2.2968945414306253E-5	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999960929871949	WITHOUT_CLASSIFICATION	3.907012805062973E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9995896120444824	WITHOUT_CLASSIFICATION	4.1038795551753354E-4	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999993478135942	WITHOUT_CLASSIFICATION	6.521864057144767E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999982575255182	WITHOUT_CLASSIFICATION	1.7424744817915429E-6	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999980948854216	WITHOUT_CLASSIFICATION	1.9051145784171476E-6	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999883092444901	WITHOUT_CLASSIFICATION	1.1690755509767349E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999899238526618	WITHOUT_CLASSIFICATION	1.0076147338216009E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997311048187371	WITHOUT_CLASSIFICATION	2.688951812628856E-4	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9993750142111464	WITHOUT_CLASSIFICATION	6.249857888536494E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999865241753932	WITHOUT_CLASSIFICATION	1.3475824606812097E-5	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999845849368365	WITHOUT_CLASSIFICATION	1.541506316350859E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999907660144186	WITHOUT_CLASSIFICATION	9.233985581445954E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999894579125855	WITHOUT_CLASSIFICATION	1.0542087414510909E-5	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9998916927072018	WITHOUT_CLASSIFICATION	1.0830729279824235E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999805185408178	WITHOUT_CLASSIFICATION	1.948145918219476E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999962126900543	WITHOUT_CLASSIFICATION	3.787309945711704E-6	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999969397258162	WITHOUT_CLASSIFICATION	3.0602741837841312E-6	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999996439564034	WITHOUT_CLASSIFICATION	3.560435966658905E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999922960885265	WITHOUT_CLASSIFICATION	7.703911473617789E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999339306099689	WITHOUT_CLASSIFICATION	6.606939003111456E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999998898095853	WITHOUT_CLASSIFICATION	1.1019041474297915E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997311048187371	WITHOUT_CLASSIFICATION	2.688951812628856E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999967416503377	WITHOUT_CLASSIFICATION	3.2583496623968745E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999998132422453	WITHOUT_CLASSIFICATION	1.8675775471453975E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999998132422453	WITHOUT_CLASSIFICATION	1.8675775471453975E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999425792818011	WITHOUT_CLASSIFICATION	5.7420718198982676E-5	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999425792818011	WITHOUT_CLASSIFICATION	5.7420718198982676E-5	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9997712123862841	WITHOUT_CLASSIFICATION	2.2878761371592377E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999983354395673	WITHOUT_CLASSIFICATION	1.6645604326953473E-6	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999974570765553	WITHOUT_CLASSIFICATION	2.5429234446799393E-6	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999751088593042	WITHOUT_CLASSIFICATION	2.4891140695875455E-5	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9970835344624464	WITHOUT_CLASSIFICATION	0.0029164655375536835	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9929992110756515	WITHOUT_CLASSIFICATION	0.007000788924348634	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9997800267342685	WITHOUT_CLASSIFICATION	2.1997326573154196E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999990589961141	WITHOUT_CLASSIFICATION	9.410038858260161E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999963289058799	WITHOUT_CLASSIFICATION	3.671094120154747E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999988741017162	WITHOUT_CLASSIFICATION	1.125898283868692E-6	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999962033820431	WITHOUT_CLASSIFICATION	3.7966179568953732E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999924599546788	WITHOUT_CLASSIFICATION	7.540045321320661E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999998181909832	WITHOUT_CLASSIFICATION	1.8180901675954619E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999987475690564	WITHOUT_CLASSIFICATION	1.252430943595309E-6	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.999997185475101	WITHOUT_CLASSIFICATION	2.8145248989212057E-6	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999557484640313	WITHOUT_CLASSIFICATION	4.425153596877908E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999993998129156	WITHOUT_CLASSIFICATION	6.001870843351879E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999998267850327	WITHOUT_CLASSIFICATION	1.7321496725313886E-7	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999989963334389	WITHOUT_CLASSIFICATION	1.0036665610598494E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999999794710446	WITHOUT_CLASSIFICATION	2.052895539795407E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999965276478585	WITHOUT_CLASSIFICATION	3.472352141470749E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999999794710446	WITHOUT_CLASSIFICATION	2.052895539795407E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9998422543394258	WITHOUT_CLASSIFICATION	1.5774566057436836E-4	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999981928974516	WITHOUT_CLASSIFICATION	1.8071025483978507E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998672952277675	WITHOUT_CLASSIFICATION	1.3270477223253465E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999981490762306	WITHOUT_CLASSIFICATION	1.8509237693872519E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.99999879486671	WITHOUT_CLASSIFICATION	1.2051332900848172E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999342530644757	WITHOUT_CLASSIFICATION	6.574693552432003E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999342530644757	WITHOUT_CLASSIFICATION	6.574693552432003E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.99990780356149	WITHOUT_CLASSIFICATION	9.219643851002534E-5	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999989258474241	WITHOUT_CLASSIFICATION	1.0741525759008552E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999599958189	WITHOUT_CLASSIFICATION	4.0004181180829014E-8	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.999999177877653	WITHOUT_CLASSIFICATION	8.221223470582578E-7	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999990668966129	WITHOUT_CLASSIFICATION	9.33103387132143E-7	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999954743109473	WITHOUT_CLASSIFICATION	4.525689052640313E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.99999879486671	WITHOUT_CLASSIFICATION	1.2051332900848172E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999342530644757	WITHOUT_CLASSIFICATION	6.574693552432003E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999342530644757	WITHOUT_CLASSIFICATION	6.574693552432003E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.99990780356149	WITHOUT_CLASSIFICATION	9.219643851002534E-5	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999046996969	WITHOUT_CLASSIFICATION	9.530030315381484E-8	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999997273548236	WITHOUT_CLASSIFICATION	2.7264517639746065E-7	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.99999853321794	WITHOUT_CLASSIFICATION	1.4667820599270118E-6	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.999997133741147	WITHOUT_CLASSIFICATION	2.866258852948154E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999311304385333	WITHOUT_CLASSIFICATION	6.886956146664665E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9996527159848558	WITHOUT_CLASSIFICATION	3.472840151441275E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999996713524786	WITHOUT_CLASSIFICATION	3.2864752137833905E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999833046888877	WITHOUT_CLASSIFICATION	1.6695311112184502E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999833046888877	WITHOUT_CLASSIFICATION	1.6695311112184502E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999879031182318	WITHOUT_CLASSIFICATION	1.2096881768236566E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999970758797739	WITHOUT_CLASSIFICATION	2.924120226163425E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999940079171706	WITHOUT_CLASSIFICATION	5.992082829282115E-6	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9988783241096938	WITHOUT_CLASSIFICATION	0.0011216758903062345	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999948540129401	WITHOUT_CLASSIFICATION	5.145987059924859E-6	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999806917239206	WITHOUT_CLASSIFICATION	1.9308276079489326E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999405317415415	WITHOUT_CLASSIFICATION	5.946825845854928E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999920006696807	WITHOUT_CLASSIFICATION	7.999330319228336E-6	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9979210684541829	WITHOUT_CLASSIFICATION	0.0020789315458170973	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999992266194108	WITHOUT_CLASSIFICATION	7.733805893194E-7	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.999998069358655	WITHOUT_CLASSIFICATION	1.930641344938498E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999677831064937	WITHOUT_CLASSIFICATION	3.221689350634702E-5	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999879760523529	WITHOUT_CLASSIFICATION	1.2023947647095262E-5	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9990032104129423	WITHOUT_CLASSIFICATION	9.96789587057715E-4	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999977349645057	WITHOUT_CLASSIFICATION	2.2650354943216893E-6	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999860221024864	WITHOUT_CLASSIFICATION	1.3977897513549248E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999579698739118	WITHOUT_CLASSIFICATION	4.203012608819798E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999986871197823	WITHOUT_CLASSIFICATION	1.3128802176438241E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999167695708675	WITHOUT_CLASSIFICATION	8.32304291325071E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999932523479009	WITHOUT_CLASSIFICATION	6.747652099047059E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9997905420454566	WITHOUT_CLASSIFICATION	2.0945795454344014E-4	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999993895934102	WITHOUT_CLASSIFICATION	6.104065897583949E-7	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.999992563373449	WITHOUT_CLASSIFICATION	7.436626550985343E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9998927420200757	WITHOUT_CLASSIFICATION	1.0725797992425327E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999998637727702	WITHOUT_CLASSIFICATION	1.362272298147043E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999999119064196	WITHOUT_CLASSIFICATION	8.809358045081824E-8	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999966668980905	WITHOUT_CLASSIFICATION	3.3331019095240126E-6	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999371973538729	WITHOUT_CLASSIFICATION	6.280264612713418E-5	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999973271682	WITHOUT_CLASSIFICATION	2.6728319689671182E-9	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999991877821035	WITHOUT_CLASSIFICATION	8.122178965472758E-7	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999976873573309	WITHOUT_CLASSIFICATION	2.3126426690982996E-6	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999984798442428	WITHOUT_CLASSIFICATION	1.5201557571861763E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999952837410541	WITHOUT_CLASSIFICATION	4.716258945924349E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999960235004762	WITHOUT_CLASSIFICATION	3.976499523759709E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999941596119262	WITHOUT_CLASSIFICATION	5.84038807386788E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999941596119262	WITHOUT_CLASSIFICATION	5.84038807386788E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999496386708923	WITHOUT_CLASSIFICATION	5.0361329107731635E-5	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999982764071328	WITHOUT_CLASSIFICATION	1.723592867264838E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999961224173067	WITHOUT_CLASSIFICATION	3.877582693248806E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999969604158443	WITHOUT_CLASSIFICATION	3.0395841556762397E-6	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999836567151091	WITHOUT_CLASSIFICATION	1.6343284890854284E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999998534296947	WITHOUT_CLASSIFICATION	1.4657030529480936E-7	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999952828732898	WITHOUT_CLASSIFICATION	4.717126710258181E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862994428299	WITHOUT_CLASSIFICATION	1.3700557170081707E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.999888897340214	WITHOUT_CLASSIFICATION	1.111026597860173E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999918976307045	WITHOUT_CLASSIFICATION	8.102369295551785E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998196819597	WITHOUT_CLASSIFICATION	1.803180403993636E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9996496162727102	WITHOUT_CLASSIFICATION	3.503837272898568E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9997916795988319	WITHOUT_CLASSIFICATION	2.0832040116808517E-4	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999717613390112	WITHOUT_CLASSIFICATION	2.8238660988803245E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.999978288073078	WITHOUT_CLASSIFICATION	2.1711926921971252E-5	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999518764231534	WITHOUT_CLASSIFICATION	4.8123576846485685E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999965150159787	WITHOUT_CLASSIFICATION	3.4849840213014167E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999992596164694	WITHOUT_CLASSIFICATION	7.403835305325735E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.999999233564737	WITHOUT_CLASSIFICATION	7.664352631431873E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999995164245601	WITHOUT_CLASSIFICATION	4.835754399865296E-7	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999998574743447	WITHOUT_CLASSIFICATION	1.425256553243322E-7	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999998578032343	WITHOUT_CLASSIFICATION	1.421967656312051E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999748245361222	WITHOUT_CLASSIFICATION	2.5175463877796793E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999996320849063	WITHOUT_CLASSIFICATION	3.6791509373501376E-7	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999998350883906	WITHOUT_CLASSIFICATION	1.6491160945370065E-7	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999982542562217	WITHOUT_CLASSIFICATION	1.7457437782812554E-6	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999981361118587	WITHOUT_CLASSIFICATION	1.8638881411816226E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.999997291821902	WITHOUT_CLASSIFICATION	2.708178097953688E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999180176527094	WITHOUT_CLASSIFICATION	8.198234729065839E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999755431888862	WITHOUT_CLASSIFICATION	2.445681111388016E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999561321586424	WITHOUT_CLASSIFICATION	4.3867841357495676E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999989270226806	WITHOUT_CLASSIFICATION	1.0729773194039574E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999993549954266	WITHOUT_CLASSIFICATION	6.450045733410359E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999990204525264	WITHOUT_CLASSIFICATION	9.79547473531243E-7	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9995595273440026	WITHOUT_CLASSIFICATION	4.404726559974716E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.999999398120858	WITHOUT_CLASSIFICATION	6.018791419930411E-7	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.999958285974632	WITHOUT_CLASSIFICATION	4.1714025368076774E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.999999328973166	WITHOUT_CLASSIFICATION	6.710268340646059E-7	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999997876949729	WITHOUT_CLASSIFICATION	2.1230502710109077E-7	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999607756735219	WITHOUT_CLASSIFICATION	3.9224326478113806E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.999999915074227	WITHOUT_CLASSIFICATION	8.492577298600932E-8	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999998493442918	WITHOUT_CLASSIFICATION	1.5065570829474742E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999997932884639	WITHOUT_CLASSIFICATION	2.0671153618167442E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999994220402735	WITHOUT_CLASSIFICATION	5.779597265628309E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999824373319955	WITHOUT_CLASSIFICATION	1.756266800445832E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999998336537449	WITHOUT_CLASSIFICATION	1.6634625518251114E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999546553519	WITHOUT_CLASSIFICATION	4.534464813801214E-8	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999998336537449	WITHOUT_CLASSIFICATION	1.6634625518251114E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999653347232071	WITHOUT_CLASSIFICATION	3.4665276792886064E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.999999558866839	WITHOUT_CLASSIFICATION	4.41133160910034E-7	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999991443701798	WITHOUT_CLASSIFICATION	8.556298201633311E-7	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999979765207327	WITHOUT_CLASSIFICATION	2.0234792672588694E-6	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999943105954597	WITHOUT_CLASSIFICATION	5.68940454021297E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999998354617187	WITHOUT_CLASSIFICATION	1.6453828134889488E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999906762910518	WITHOUT_CLASSIFICATION	9.323708948113106E-6	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9953417560308051	WITHOUT_CLASSIFICATION	0.004658243969194901	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999844102717915	WITHOUT_CLASSIFICATION	1.5589728208546875E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999940213050631	WITHOUT_CLASSIFICATION	5.978694936927287E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999997391039338	WITHOUT_CLASSIFICATION	2.6089606621613675E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999987266529855	WITHOUT_CLASSIFICATION	1.2733470144921113E-6	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999920106694596	WITHOUT_CLASSIFICATION	7.989330540383676E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9823097827699773	WITHOUT_CLASSIFICATION	0.01769021723002271	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999352600150846	WITHOUT_CLASSIFICATION	6.473998491534403E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999962457051331	WITHOUT_CLASSIFICATION	3.7542948667762985E-6	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999970343364941	WITHOUT_CLASSIFICATION	2.9656635059239112E-6	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999049045452674	WITHOUT_CLASSIFICATION	9.509545473258939E-5	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999978165366086	WITHOUT_CLASSIFICATION	2.183463391332592E-6	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999986714715012	WITHOUT_CLASSIFICATION	1.3285284988201849E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999978743433188	WITHOUT_CLASSIFICATION	2.125656681209915E-6	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999990299765753	WITHOUT_CLASSIFICATION	9.700234246579598E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999985339413644	WITHOUT_CLASSIFICATION	1.4660586356561255E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999906762910518	WITHOUT_CLASSIFICATION	9.323708948113106E-6	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999972547769553	WITHOUT_CLASSIFICATION	2.7452230446265157E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999999612619667	WITHOUT_CLASSIFICATION	3.873803323226245E-8	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999999612619667	WITHOUT_CLASSIFICATION	3.873803323226245E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999194222611	WITHOUT_CLASSIFICATION	8.057773890118457E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999998781291487	WITHOUT_CLASSIFICATION	1.2187085130356534E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999998781291487	WITHOUT_CLASSIFICATION	1.2187085130356534E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999986211231051	WITHOUT_CLASSIFICATION	1.378876894909505E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999986211231051	WITHOUT_CLASSIFICATION	1.378876894909505E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9989824635227635	WITHOUT_CLASSIFICATION	0.0010175364772364746	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.999999639980704	WITHOUT_CLASSIFICATION	3.6001929601912797E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999985283275125	WITHOUT_CLASSIFICATION	1.4716724875395986E-6	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999932593968364	WITHOUT_CLASSIFICATION	6.740603163666784E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999984736586519	WITHOUT_CLASSIFICATION	1.5263413480447034E-6	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999943455874646	WITHOUT_CLASSIFICATION	5.654412535480595E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999307886589469	WITHOUT_CLASSIFICATION	6.921134105313723E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999998977960448	WITHOUT_CLASSIFICATION	1.0220395515445907E-7	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999996696915905	WITHOUT_CLASSIFICATION	3.3030840953144896E-7	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999998196929022	WITHOUT_CLASSIFICATION	1.8030709788725953E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999737439054	WITHOUT_CLASSIFICATION	2.6256094653460783E-8	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999898069140267	WITHOUT_CLASSIFICATION	1.0193085973309024E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999559383758	WITHOUT_CLASSIFICATION	4.4061624295964085E-8	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999228888324	WITHOUT_CLASSIFICATION	7.711116763761736E-8	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999999044109413	WITHOUT_CLASSIFICATION	9.558905861780501E-8	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999966805582069	WITHOUT_CLASSIFICATION	3.31944179303093E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999979478147876	WITHOUT_CLASSIFICATION	2.052185212349953E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999905368064304	WITHOUT_CLASSIFICATION	9.463193569646859E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999905368064304	WITHOUT_CLASSIFICATION	9.463193569646859E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998063658879	WITHOUT_CLASSIFICATION	1.936341121516093E-7	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.999921413801343	WITHOUT_CLASSIFICATION	7.858619865691311E-5	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999998912995146	WITHOUT_CLASSIFICATION	1.0870048549246702E-7	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999943640401288	WITHOUT_CLASSIFICATION	5.635959871230756E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999997987188207	WITHOUT_CLASSIFICATION	2.0128117922127084E-7	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999854839180429	WITHOUT_CLASSIFICATION	1.4516081957119383E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999999158751565	WITHOUT_CLASSIFICATION	8.412484354475731E-8	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999928607377756	WITHOUT_CLASSIFICATION	7.139262224390646E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999918908840061	WITHOUT_CLASSIFICATION	8.109115993987544E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999996922036996	WITHOUT_CLASSIFICATION	3.0779630042873596E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999998811570269	WITHOUT_CLASSIFICATION	1.1884297304015842E-7	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.99999869078867	WITHOUT_CLASSIFICATION	1.3092113300724371E-6	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999995209897447	WITHOUT_CLASSIFICATION	4.790102553223828E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999998212911947	WITHOUT_CLASSIFICATION	1.787088053267339E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999985063970369	WITHOUT_CLASSIFICATION	1.4936029631956649E-6	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999983382547301	WITHOUT_CLASSIFICATION	1.6617452699233907E-6	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999612366438849	WITHOUT_CLASSIFICATION	3.8763356115126165E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999248327219399	WITHOUT_CLASSIFICATION	7.516727806012166E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999691829584624	WITHOUT_CLASSIFICATION	3.081704153767562E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999889352890745	WITHOUT_CLASSIFICATION	1.1064710925449706E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999956259212839	WITHOUT_CLASSIFICATION	4.374078716123503E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999975958637163	WITHOUT_CLASSIFICATION	2.4041362836435066E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999956498214864	WITHOUT_CLASSIFICATION	4.350178513611592E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999992239156219	WITHOUT_CLASSIFICATION	7.760843780165538E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999993898592588	WITHOUT_CLASSIFICATION	6.10140741223405E-7	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999998032083517	WITHOUT_CLASSIFICATION	1.967916483756372E-7	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999998275401519	WITHOUT_CLASSIFICATION	1.724598481704759E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999997811497567	WITHOUT_CLASSIFICATION	2.188502432487147E-7	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999942712438334	WITHOUT_CLASSIFICATION	5.7287561665408455E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999162869321339	WITHOUT_CLASSIFICATION	8.371306786609881E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999805667176526	WITHOUT_CLASSIFICATION	1.9433282347469937E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999977715458284	WITHOUT_CLASSIFICATION	2.228454171590892E-6	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9998816496448767	WITHOUT_CLASSIFICATION	1.1835035512325653E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999974176974208	WITHOUT_CLASSIFICATION	2.5823025792553618E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999558563517478	WITHOUT_CLASSIFICATION	4.414364825224261E-5	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9998524627800663	WITHOUT_CLASSIFICATION	1.4753721993360732E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9999966866994598	WITHOUT_CLASSIFICATION	3.3133005401486182E-6	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999164528055134	WITHOUT_CLASSIFICATION	8.354719448661009E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999985159379873	WITHOUT_CLASSIFICATION	1.4840620127155025E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999916554394	WITHOUT_CLASSIFICATION	8.344560602486921E-8	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999994094867831	WITHOUT_CLASSIFICATION	5.905132169088535E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999955380906805	WITHOUT_CLASSIFICATION	4.461909319492887E-6	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999999870421274	WITHOUT_CLASSIFICATION	1.295787249458472E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999999774278931	WITHOUT_CLASSIFICATION	2.257210688932043E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999948761445021	WITHOUT_CLASSIFICATION	5.1238554978828125E-6	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999999859019521	WITHOUT_CLASSIFICATION	1.4098047897960813E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999984062208026	WITHOUT_CLASSIFICATION	1.593779197360983E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999999774278931	WITHOUT_CLASSIFICATION	2.257210688932043E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999936943596004	WITHOUT_CLASSIFICATION	6.305640399552433E-6	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999255593064956	WITHOUT_CLASSIFICATION	7.444069350440664E-5	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999971017640676	WITHOUT_CLASSIFICATION	2.898235932460947E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9998648813422898	WITHOUT_CLASSIFICATION	1.3511865771017128E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999917170580158	WITHOUT_CLASSIFICATION	8.282941984202058E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999948761445021	WITHOUT_CLASSIFICATION	5.1238554978828125E-6	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999984062208026	WITHOUT_CLASSIFICATION	1.593779197360983E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999885499663692	WITHOUT_CLASSIFICATION	1.1450033630904165E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999469143415	WITHOUT_CLASSIFICATION	5.3085658442087684E-8	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999917229178543	WITHOUT_CLASSIFICATION	8.277082145615512E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999996865901501	WITHOUT_CLASSIFICATION	3.134098498577887E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999839981154129	WITHOUT_CLASSIFICATION	1.600188458709588E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999819406297403	WITHOUT_CLASSIFICATION	1.805937025966171E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9997014691084949	WITHOUT_CLASSIFICATION	2.9853089150509927E-4	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999990132954304	WITHOUT_CLASSIFICATION	9.867045696685662E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999944391765346	WITHOUT_CLASSIFICATION	5.56082346533314E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999944391765346	WITHOUT_CLASSIFICATION	5.56082346533314E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999984274803804	WITHOUT_CLASSIFICATION	1.5725196195600742E-6	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999782543146429	WITHOUT_CLASSIFICATION	2.1745685357061846E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999997699727476	WITHOUT_CLASSIFICATION	2.3002725229112045E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.99999974253339	WITHOUT_CLASSIFICATION	2.5746661001866175E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999998719380472	WITHOUT_CLASSIFICATION	1.2806195279471733E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999995046434531	WITHOUT_CLASSIFICATION	4.953565469955416E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999995046434531	WITHOUT_CLASSIFICATION	4.953565469955416E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999996229725556	WITHOUT_CLASSIFICATION	3.7702744443590266E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999700336950471	WITHOUT_CLASSIFICATION	2.9966304952990574E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999996429387205	WITHOUT_CLASSIFICATION	3.5706127965262335E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999900356467883	WITHOUT_CLASSIFICATION	9.9643532116642E-6	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999972638866134	WITHOUT_CLASSIFICATION	2.7361133866259163E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9999086904666108	WITHOUT_CLASSIFICATION	9.130953338925436E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999829563118331	WITHOUT_CLASSIFICATION	1.7043688166940583E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999864982366795	WITHOUT_CLASSIFICATION	1.3501763320410635E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999996015172231	WITHOUT_CLASSIFICATION	3.9848277686847613E-7	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999946326158832	WITHOUT_CLASSIFICATION	5.3673841168785265E-6	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999998254930289	WITHOUT_CLASSIFICATION	1.7450697114971658E-7	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999950224998	WITHOUT_CLASSIFICATION	4.9775001978390646E-9	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999985527341313	WITHOUT_CLASSIFICATION	1.4472658687000778E-5	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998921619462124	WITHOUT_CLASSIFICATION	1.0783805378757015E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999986073321993	WITHOUT_CLASSIFICATION	1.3926678007497882E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.999873787910539	WITHOUT_CLASSIFICATION	1.2621208946086895E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9998885984722858	WITHOUT_CLASSIFICATION	1.1140152771422796E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999994090319614	WITHOUT_CLASSIFICATION	5.909680385256844E-7	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9997385846512603	WITHOUT_CLASSIFICATION	2.614153487396592E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999650663819173	WITHOUT_CLASSIFICATION	3.4933618082724764E-5	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998080083544932	WITHOUT_CLASSIFICATION	1.919916455067286E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.99997819398146	WITHOUT_CLASSIFICATION	2.1806018539883188E-5	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999820597135	WITHOUT_CLASSIFICATION	1.7940286500026774E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999718986238437	WITHOUT_CLASSIFICATION	2.8101376156303013E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999986334663225	WITHOUT_CLASSIFICATION	1.3665336774479346E-6	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9998970895996705	WITHOUT_CLASSIFICATION	1.029104003294821E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9997896347664602	WITHOUT_CLASSIFICATION	2.1036523353990655E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999996429387205	WITHOUT_CLASSIFICATION	3.5706127965262335E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999900356467883	WITHOUT_CLASSIFICATION	9.9643532116642E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999833046888877	WITHOUT_CLASSIFICATION	1.6695311112184502E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999814754938812	WITHOUT_CLASSIFICATION	1.8524506118789207E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9998420481765645	WITHOUT_CLASSIFICATION	1.5795182343537146E-4	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9996429548352924	WITHOUT_CLASSIFICATION	3.570451647074809E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998114468719485	WITHOUT_CLASSIFICATION	1.885531280514602E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999837500952423	WITHOUT_CLASSIFICATION	1.6249904757686912E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999973594206766	WITHOUT_CLASSIFICATION	2.6405793234514523E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999973594206766	WITHOUT_CLASSIFICATION	2.6405793234514523E-6	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998498554241003	WITHOUT_CLASSIFICATION	1.501445758995813E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999900804136977	WITHOUT_CLASSIFICATION	9.919586302246152E-6	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998763269772197	WITHOUT_CLASSIFICATION	1.236730227802721E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999984953260252	WITHOUT_CLASSIFICATION	1.5046739748555679E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999984953260252	WITHOUT_CLASSIFICATION	1.5046739748555679E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999894624370923	WITHOUT_CLASSIFICATION	1.0537562907583196E-5	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.999994290235265	WITHOUT_CLASSIFICATION	5.70976473507632E-6	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999970889564573	WITHOUT_CLASSIFICATION	2.9110435425407208E-6	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.999999295761298	WITHOUT_CLASSIFICATION	7.042387019810469E-7	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999998416903422	WITHOUT_CLASSIFICATION	1.5830965782333958E-7	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999856143588671	WITHOUT_CLASSIFICATION	1.4385641132984905E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999962708530173	WITHOUT_CLASSIFICATION	3.729146982719716E-6	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999873758896582	WITHOUT_CLASSIFICATION	1.2624110341882915E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999210210312353	WITHOUT_CLASSIFICATION	7.897896876478949E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9998175393633015	WITHOUT_CLASSIFICATION	1.8246063669843194E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999933802991959	WITHOUT_CLASSIFICATION	6.619700804023885E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999933802991959	WITHOUT_CLASSIFICATION	6.619700804023885E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.998676768431914	WITHOUT_CLASSIFICATION	0.0013232315680859388	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999913108127239	WITHOUT_CLASSIFICATION	8.689187276094875E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999913108127239	WITHOUT_CLASSIFICATION	8.689187276094875E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999913108127239	WITHOUT_CLASSIFICATION	8.689187276094875E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9984656032495587	WITHOUT_CLASSIFICATION	0.0015343967504411955	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9984656032495587	WITHOUT_CLASSIFICATION	0.0015343967504411955	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999978791697113	WITHOUT_CLASSIFICATION	2.120830288647948E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999978791697113	WITHOUT_CLASSIFICATION	2.120830288647948E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999978791697113	WITHOUT_CLASSIFICATION	2.120830288647948E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999996251122764	WITHOUT_CLASSIFICATION	3.7488772359388965E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999996251122764	WITHOUT_CLASSIFICATION	3.7488772359388965E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999996251122764	WITHOUT_CLASSIFICATION	3.7488772359388965E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999982264796364	WITHOUT_CLASSIFICATION	1.773520363521835E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999982264796364	WITHOUT_CLASSIFICATION	1.773520363521835E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999877720353441	WITHOUT_CLASSIFICATION	1.2227964655908854E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999877720353441	WITHOUT_CLASSIFICATION	1.2227964655908854E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999954871440514	WITHOUT_CLASSIFICATION	4.512855948595923E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999954871440514	WITHOUT_CLASSIFICATION	4.512855948595923E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999972635920623	WITHOUT_CLASSIFICATION	2.7364079377050656E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999972635920623	WITHOUT_CLASSIFICATION	2.7364079377050656E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999986471959208	WITHOUT_CLASSIFICATION	1.352804079272004E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999986471959208	WITHOUT_CLASSIFICATION	1.352804079272004E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999071371884668	WITHOUT_CLASSIFICATION	9.286281153316935E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999071371884668	WITHOUT_CLASSIFICATION	9.286281153316935E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995064350118	WITHOUT_CLASSIFICATION	4.935649881060551E-7	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995064350118	WITHOUT_CLASSIFICATION	4.935649881060551E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999982264796364	WITHOUT_CLASSIFICATION	1.773520363521835E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999877720353441	WITHOUT_CLASSIFICATION	1.2227964655908854E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999954871440514	WITHOUT_CLASSIFICATION	4.512855948595923E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999986471959208	WITHOUT_CLASSIFICATION	1.352804079272004E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999071371884668	WITHOUT_CLASSIFICATION	9.286281153316935E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995064350118	WITHOUT_CLASSIFICATION	4.935649881060551E-7	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999919803381953	WITHOUT_CLASSIFICATION	8.019661804767218E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999859115026265	WITHOUT_CLASSIFICATION	1.4088497373516685E-5	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999883237835321	WITHOUT_CLASSIFICATION	1.1676216467834592E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9999496758747158	WITHOUT_CLASSIFICATION	5.032412528408185E-5	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999911874926726	WITHOUT_CLASSIFICATION	8.812507327317627E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999935946149838	WITHOUT_CLASSIFICATION	6.405385016084785E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999803670921099	WITHOUT_CLASSIFICATION	1.9632907890115078E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999890873215783	WITHOUT_CLASSIFICATION	1.0912678421636583E-5	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999774073181508	WITHOUT_CLASSIFICATION	2.2592681849224028E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999991949805815	WITHOUT_CLASSIFICATION	8.05019418446428E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999979826372386	WITHOUT_CLASSIFICATION	2.0173627614585937E-6	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999989238340327	WITHOUT_CLASSIFICATION	1.076165967349424E-6	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999976981309237	WITHOUT_CLASSIFICATION	2.3018690763163753E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999988891971476	WITHOUT_CLASSIFICATION	1.1108028522971722E-6	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999978907668815	WITHOUT_CLASSIFICATION	2.109233118569332E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999924374096038	WITHOUT_CLASSIFICATION	7.562590396177371E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999927828501701	WITHOUT_CLASSIFICATION	7.217149829915973E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999914770508219	WITHOUT_CLASSIFICATION	8.522949178045661E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999971585726365	WITHOUT_CLASSIFICATION	2.8414273636202677E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9998069412270278	WITHOUT_CLASSIFICATION	1.9305877297208333E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999953856694005	WITHOUT_CLASSIFICATION	4.614330599481812E-6	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999995785905603	WITHOUT_CLASSIFICATION	4.2140943966351134E-7	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999885322087686	WITHOUT_CLASSIFICATION	1.1467791231307741E-5	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999970168670356	WITHOUT_CLASSIFICATION	2.9831329643117263E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999956442190685	WITHOUT_CLASSIFICATION	4.35578093157439E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.999995210413379	WITHOUT_CLASSIFICATION	4.789586620985265E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999945432559882	WITHOUT_CLASSIFICATION	5.45674401178554E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999985064306051	WITHOUT_CLASSIFICATION	1.493569394936079E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999948369475548	WITHOUT_CLASSIFICATION	5.1630524452347475E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999909155527184	WITHOUT_CLASSIFICATION	9.084447281537549E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999838504666899	WITHOUT_CLASSIFICATION	1.6149533310094783E-5	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999882417654614	WITHOUT_CLASSIFICATION	1.175823453864929E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999997536308424	WITHOUT_CLASSIFICATION	2.463691577114302E-7	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999997536308424	WITHOUT_CLASSIFICATION	2.463691577114302E-7	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999952566638046	WITHOUT_CLASSIFICATION	4.743336195343742E-6	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999993196850975	WITHOUT_CLASSIFICATION	6.803149024172953E-7	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999845954624034	WITHOUT_CLASSIFICATION	1.540453759660202E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999897671579467	WITHOUT_CLASSIFICATION	1.0232842053281675E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999969547919051	WITHOUT_CLASSIFICATION	3.045208094861076E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999959847123564	WITHOUT_CLASSIFICATION	4.015287643680937E-6	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999996488239545	WITHOUT_CLASSIFICATION	3.5117604546729505E-7	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999675296999289	WITHOUT_CLASSIFICATION	3.2470300071151655E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.999987884359967	WITHOUT_CLASSIFICATION	1.2115640032958507E-5	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999891106392896	WITHOUT_CLASSIFICATION	1.0889360710479332E-5	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999833528661187	WITHOUT_CLASSIFICATION	1.6647133881218965E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999771730437602	WITHOUT_CLASSIFICATION	2.2826956239803077E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920035021322	WITHOUT_CLASSIFICATION	7.996497867711467E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920035021322	WITHOUT_CLASSIFICATION	7.996497867711467E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999841787853698	WITHOUT_CLASSIFICATION	1.5821214630195317E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999841787853698	WITHOUT_CLASSIFICATION	1.5821214630195317E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999841787853698	WITHOUT_CLASSIFICATION	1.5821214630195317E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999651404128385	WITHOUT_CLASSIFICATION	3.485958716144317E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999736777573784	WITHOUT_CLASSIFICATION	2.6322242621523437E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999865639381161	WITHOUT_CLASSIFICATION	1.3436061883838856E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999865639381161	WITHOUT_CLASSIFICATION	1.3436061883838856E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.999999252930799	WITHOUT_CLASSIFICATION	7.470692008735317E-7	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9997150456202871	WITHOUT_CLASSIFICATION	2.8495437971288773E-4	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999976742989026	WITHOUT_CLASSIFICATION	2.3257010972713437E-6	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9998906303926965	WITHOUT_CLASSIFICATION	1.0936960730344484E-4	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999995196123876	WITHOUT_CLASSIFICATION	4.803876123177587E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999668765634196	WITHOUT_CLASSIFICATION	3.3123436580396104E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999087958784935	WITHOUT_CLASSIFICATION	9.12041215065746E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999994293002352	WITHOUT_CLASSIFICATION	5.706997647118791E-7	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999976977487732	WITHOUT_CLASSIFICATION	2.3022512268069656E-6	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999922240697227	WITHOUT_CLASSIFICATION	7.775930277425557E-6	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999996142628022	WITHOUT_CLASSIFICATION	3.857371979057197E-7	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999974599682449	WITHOUT_CLASSIFICATION	2.5400317551443085E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999996074874694	WITHOUT_CLASSIFICATION	3.925125306680436E-7	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999939158834259	WITHOUT_CLASSIFICATION	6.084116573995066E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999308237980478	WITHOUT_CLASSIFICATION	6.91762019522761E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999863379300258	WITHOUT_CLASSIFICATION	1.3662069974161972E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999989459003967	WITHOUT_CLASSIFICATION	1.0540996033171231E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999863138466821	WITHOUT_CLASSIFICATION	1.3686153317903292E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999831929276074	WITHOUT_CLASSIFICATION	1.6807072392633023E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9998778444192391	WITHOUT_CLASSIFICATION	1.2215558076088994E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.99996641020441	WITHOUT_CLASSIFICATION	3.358979559001159E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999973317786257	WITHOUT_CLASSIFICATION	2.6682213741478004E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9989551593000812	WITHOUT_CLASSIFICATION	0.0010448406999187913	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999984697230584	WITHOUT_CLASSIFICATION	1.5302769416393115E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999984697230584	WITHOUT_CLASSIFICATION	1.5302769416393115E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999984697230584	WITHOUT_CLASSIFICATION	1.5302769416393115E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987949791753	WITHOUT_CLASSIFICATION	1.2050208246527863E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987949791753	WITHOUT_CLASSIFICATION	1.2050208246527863E-6	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9998614103456449	WITHOUT_CLASSIFICATION	1.3858965435513125E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9997003528662755	WITHOUT_CLASSIFICATION	2.9964713372449784E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9997003528662755	WITHOUT_CLASSIFICATION	2.9964713372449784E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999984713775131	WITHOUT_CLASSIFICATION	1.5286224869380662E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999432678365495	WITHOUT_CLASSIFICATION	5.673216345047319E-5	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9998614103456449	WITHOUT_CLASSIFICATION	1.3858965435513125E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999958861217413	WITHOUT_CLASSIFICATION	4.11387825872174E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998614103456449	WITHOUT_CLASSIFICATION	1.3858965435513125E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999786048659457	WITHOUT_CLASSIFICATION	2.1395134054305052E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999786048659457	WITHOUT_CLASSIFICATION	2.1395134054305052E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920035021322	WITHOUT_CLASSIFICATION	7.996497867711467E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9999780006636667	WITHOUT_CLASSIFICATION	2.199933633324895E-5	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9981183105521577	WITHOUT_CLASSIFICATION	0.0018816894478422977	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9988131537535427	WITHOUT_CLASSIFICATION	0.0011868462464572965	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9983575286839247	WITHOUT_CLASSIFICATION	0.00164247131607534	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9990392106937248	WITHOUT_CLASSIFICATION	9.607893062751326E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9984418454448343	WITHOUT_CLASSIFICATION	0.0015581545551657321	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9982243469126654	WITHOUT_CLASSIFICATION	0.0017756530873346528	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9976498657504471	WITHOUT_CLASSIFICATION	0.0023501342495529714	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9980826769150408	WITHOUT_CLASSIFICATION	0.0019173230849592116	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9982743149471951	WITHOUT_CLASSIFICATION	0.0017256850528049963	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9989079248289462	WITHOUT_CLASSIFICATION	0.0010920751710537138	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9982060142793014	WITHOUT_CLASSIFICATION	0.0017939857206986584	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9974441546278559	WITHOUT_CLASSIFICATION	0.0025558453721441997	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9986745483674965	WITHOUT_CLASSIFICATION	0.0013254516325035075	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.997194748930529	WITHOUT_CLASSIFICATION	0.0028052510694710564	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9988322231836523	WITHOUT_CLASSIFICATION	0.001167776816347624	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9991152354563656	WITHOUT_CLASSIFICATION	8.847645436344724E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.997454153678001	WITHOUT_CLASSIFICATION	0.0025458463219988855	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9988105798524477	WITHOUT_CLASSIFICATION	0.0011894201475522745	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9983941340545689	WITHOUT_CLASSIFICATION	0.0016058659454311044	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9992448669829384	WITHOUT_CLASSIFICATION	7.551330170616539E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9990240574276483	WITHOUT_CLASSIFICATION	9.759425723516367E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9985086722059345	WITHOUT_CLASSIFICATION	0.001491327794065461	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9993121400838438	WITHOUT_CLASSIFICATION	6.878599161562013E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9984870390551485	WITHOUT_CLASSIFICATION	0.0015129609448514625	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9980996249958393	WITHOUT_CLASSIFICATION	0.0019003750041607158	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9989538159842084	WITHOUT_CLASSIFICATION	0.0010461840157916253	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9961933263036754	WITHOUT_CLASSIFICATION	0.0038066736963245523	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9990295956887922	WITHOUT_CLASSIFICATION	9.704043112078879E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9978677043722318	WITHOUT_CLASSIFICATION	0.0021322956277682417	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9989145537980757	WITHOUT_CLASSIFICATION	0.0010854462019242778	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9989375474031087	WITHOUT_CLASSIFICATION	0.0010624525968913193	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9989146525463846	WITHOUT_CLASSIFICATION	0.0010853474536154167	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9988747868470969	WITHOUT_CLASSIFICATION	0.0011252131529031141	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9986057129240481	WITHOUT_CLASSIFICATION	0.001394287075951885	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9969988079393352	WITHOUT_CLASSIFICATION	0.003001192060664745	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9987435809612426	WITHOUT_CLASSIFICATION	0.0012564190387574171	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.998153565180317	WITHOUT_CLASSIFICATION	0.0018464348196829768	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.998442974953586	WITHOUT_CLASSIFICATION	0.0015570250464140096	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9988984180695152	WITHOUT_CLASSIFICATION	0.0011015819304848505	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9972166240568207	WITHOUT_CLASSIFICATION	0.002783375943179474	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.997898830125092	WITHOUT_CLASSIFICATION	0.0021011698749081103	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9976379124257087	WITHOUT_CLASSIFICATION	0.0023620875742914383	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9983547748600451	WITHOUT_CLASSIFICATION	0.0016452251399549803	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.998144369424073	WITHOUT_CLASSIFICATION	0.0018556305759269399	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9985507888106614	WITHOUT_CLASSIFICATION	0.0014492111893386185	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9986489515459002	WITHOUT_CLASSIFICATION	0.0013510484540997778	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9975450222788913	WITHOUT_CLASSIFICATION	0.0024549777211086304	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9956883548194935	WITHOUT_CLASSIFICATION	0.00431164518050649	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9984517177102603	WITHOUT_CLASSIFICATION	0.0015482822897397686	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9991207101154619	WITHOUT_CLASSIFICATION	8.792898845379895E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.997857484062649	WITHOUT_CLASSIFICATION	0.0021425159373510494	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9977169777512367	WITHOUT_CLASSIFICATION	0.0022830222487634	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9979980286351329	WITHOUT_CLASSIFICATION	0.002001971364867222	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9988879948831091	WITHOUT_CLASSIFICATION	0.0011120051168908706	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9982581927021369	WITHOUT_CLASSIFICATION	0.0017418072978631124	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.999159323458067	WITHOUT_CLASSIFICATION	8.406765419329236E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9985957437638738	WITHOUT_CLASSIFICATION	0.0014042562361262219	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9966766405955997	WITHOUT_CLASSIFICATION	0.0033233594044002907	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9983097595300569	WITHOUT_CLASSIFICATION	0.0016902404699431057	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9973068207122081	WITHOUT_CLASSIFICATION	0.0026931792877918316	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9981642344100119	WITHOUT_CLASSIFICATION	0.001835765589988055	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9988768440521565	WITHOUT_CLASSIFICATION	0.0011231559478435827	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9986006969242155	WITHOUT_CLASSIFICATION	0.001399303075784516	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9987823376854877	WITHOUT_CLASSIFICATION	0.0012176623145122294	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9979267919017862	WITHOUT_CLASSIFICATION	0.0020732080982138377	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.997668068355254	WITHOUT_CLASSIFICATION	0.0023319316447459664	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9987678332136092	WITHOUT_CLASSIFICATION	0.001232166786390834	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.998890464230499	WITHOUT_CLASSIFICATION	0.0011095357695010014	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9987793372260799	WITHOUT_CLASSIFICATION	0.0012206627739201922	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9988613333168194	WITHOUT_CLASSIFICATION	0.0011386666831805857	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9993315028982759	WITHOUT_CLASSIFICATION	6.684971017240371E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9979687488106649	WITHOUT_CLASSIFICATION	0.0020312511893351352	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9988560304574561	WITHOUT_CLASSIFICATION	0.0011439695425439504	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9985695023961343	WITHOUT_CLASSIFICATION	0.0014304976038657011	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9981034681892688	WITHOUT_CLASSIFICATION	0.001896531810731246	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9986013811745854	WITHOUT_CLASSIFICATION	0.0013986188254145816	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.997184042645752	WITHOUT_CLASSIFICATION	0.002815957354248066	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9986214541753475	WITHOUT_CLASSIFICATION	0.0013785458246524755	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9983910589563962	WITHOUT_CLASSIFICATION	0.0016089410436037894	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999900801118424	WITHOUT_CLASSIFICATION	9.919888157673664E-6	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999840290811403	WITHOUT_CLASSIFICATION	1.59709188597465E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.99999962444678	WITHOUT_CLASSIFICATION	3.755532199730266E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.999999626300288	WITHOUT_CLASSIFICATION	3.7369971195743504E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.99999992540883	WITHOUT_CLASSIFICATION	7.459116998574183E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999996277316032	WITHOUT_CLASSIFICATION	3.722683967176781E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999299320995519	WITHOUT_CLASSIFICATION	7.006790044813927E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999849408585404	WITHOUT_CLASSIFICATION	1.5059141459663613E-5	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999969357424737	WITHOUT_CLASSIFICATION	3.0642575263018816E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999973840255314	WITHOUT_CLASSIFICATION	2.615974468593651E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999959847123564	WITHOUT_CLASSIFICATION	4.015287643680937E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999651404128385	WITHOUT_CLASSIFICATION	3.485958716144317E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999736777573784	WITHOUT_CLASSIFICATION	2.6322242621523437E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999865639381161	WITHOUT_CLASSIFICATION	1.3436061883838856E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999863138466821	WITHOUT_CLASSIFICATION	1.3686153317903292E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999831929276074	WITHOUT_CLASSIFICATION	1.6807072392633023E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999883589217023	WITHOUT_CLASSIFICATION	1.1641078297593462E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999987949791753	WITHOUT_CLASSIFICATION	1.2050208246527863E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999920035021322	WITHOUT_CLASSIFICATION	7.996497867711467E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999533678840489	WITHOUT_CLASSIFICATION	4.663211595119435E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.999990031889268	WITHOUT_CLASSIFICATION	9.968110732067777E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999975257635024	WITHOUT_CLASSIFICATION	2.4742364976021092E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999975534166273	WITHOUT_CLASSIFICATION	2.4465833725773294E-6	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999655543639416	WITHOUT_CLASSIFICATION	3.444563605848499E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999978240585135	WITHOUT_CLASSIFICATION	2.1759414865208542E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999994587706197	WITHOUT_CLASSIFICATION	5.412293803765432E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999986663807933	WITHOUT_CLASSIFICATION	1.3336192066878084E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999914770508219	WITHOUT_CLASSIFICATION	8.522949178045661E-6	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999897580855458	WITHOUT_CLASSIFICATION	1.0241914454073461E-5	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999969133654409	WITHOUT_CLASSIFICATION	3.0866345589757023E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999993990753724	WITHOUT_CLASSIFICATION	6.009246276450169E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9998536573887302	WITHOUT_CLASSIFICATION	1.4634261126981462E-4	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999940470463744	WITHOUT_CLASSIFICATION	5.952953625625702E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999954837896624	WITHOUT_CLASSIFICATION	4.516210337612566E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999883434999105	WITHOUT_CLASSIFICATION	1.1656500089458925E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999951016591566	WITHOUT_CLASSIFICATION	4.898340843325016E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.999999772514203	WITHOUT_CLASSIFICATION	2.2748579690131662E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999995863319443	WITHOUT_CLASSIFICATION	4.136680556479282E-7	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999694458466429	WITHOUT_CLASSIFICATION	3.0554153357138145E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999873480706895	WITHOUT_CLASSIFICATION	1.2651929310613444E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.999957364359001	WITHOUT_CLASSIFICATION	4.2635640999102695E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999973909762703	WITHOUT_CLASSIFICATION	2.609023729731862E-6	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999977306791669	WITHOUT_CLASSIFICATION	2.2693208330708138E-6	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999017826582609	WITHOUT_CLASSIFICATION	9.821734173914946E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999974597733621	WITHOUT_CLASSIFICATION	2.540226637909843E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998454035425536	WITHOUT_CLASSIFICATION	1.5459645744646928E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999932106449	WITHOUT_CLASSIFICATION	6.7893551598281335E-9	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999967980752219	WITHOUT_CLASSIFICATION	3.201924778072337E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999961906943294	WITHOUT_CLASSIFICATION	3.8093056706576526E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999987651036554	WITHOUT_CLASSIFICATION	1.2348963446132957E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999995231231739	WITHOUT_CLASSIFICATION	4.768768261992572E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999995231231739	WITHOUT_CLASSIFICATION	4.768768261992572E-7	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999968284229482	WITHOUT_CLASSIFICATION	3.1715770518472783E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999901593378866	WITHOUT_CLASSIFICATION	9.840662113423063E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999816189584554	WITHOUT_CLASSIFICATION	1.838104154461797E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999771037519625	WITHOUT_CLASSIFICATION	2.289624803749581E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999858379504022	WITHOUT_CLASSIFICATION	1.4162049597743358E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999992703755791	WITHOUT_CLASSIFICATION	7.296244209641297E-7	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999050570780084	WITHOUT_CLASSIFICATION	9.49429219916606E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999981474331822	WITHOUT_CLASSIFICATION	1.8525668179108154E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9997943757512211	WITHOUT_CLASSIFICATION	2.05624248778964E-4	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999999427902111	WITHOUT_CLASSIFICATION	5.720978897625406E-8	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999997983263732	WITHOUT_CLASSIFICATION	2.0167362679433843E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999964802444459	WITHOUT_CLASSIFICATION	3.5197555540587977E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999992074946363	WITHOUT_CLASSIFICATION	7.925053637093207E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999980149185452	WITHOUT_CLASSIFICATION	1.985081454749366E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999981147554491	WITHOUT_CLASSIFICATION	1.8852445509150791E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999975528697125	WITHOUT_CLASSIFICATION	2.4471302875242017E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999992733372617	WITHOUT_CLASSIFICATION	7.266627383614742E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9996300215325652	WITHOUT_CLASSIFICATION	3.6997846743473385E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999981288809626	WITHOUT_CLASSIFICATION	1.8711190373097772E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999993162441048	WITHOUT_CLASSIFICATION	6.837558953041758E-7	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999934009383802	WITHOUT_CLASSIFICATION	6.599061619911761E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999693884756717	WITHOUT_CLASSIFICATION	3.0611524328207116E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999991298390826	WITHOUT_CLASSIFICATION	8.701609174465071E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999206564908	WITHOUT_CLASSIFICATION	7.934350927267595E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999997286720372	WITHOUT_CLASSIFICATION	2.713279628410512E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.999999345628542	WITHOUT_CLASSIFICATION	6.543714578906695E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999640813511	WITHOUT_CLASSIFICATION	3.591864883244866E-8	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998584650824	WITHOUT_CLASSIFICATION	1.415349176068281E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999143425604	WITHOUT_CLASSIFICATION	8.56574395745591E-8	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999998932432976	WITHOUT_CLASSIFICATION	1.067567022885784E-7	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999919673322664	WITHOUT_CLASSIFICATION	8.032667733670337E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999998643982645	WITHOUT_CLASSIFICATION	1.3560173551373664E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999665279604	WITHOUT_CLASSIFICATION	3.347203954859672E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999998404207249	WITHOUT_CLASSIFICATION	1.5957927505192854E-7	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999899669763762	WITHOUT_CLASSIFICATION	1.003302362381039E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999993099710959	WITHOUT_CLASSIFICATION	6.90028903989259E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999045212698483	WITHOUT_CLASSIFICATION	9.547873015172327E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999981344302029	WITHOUT_CLASSIFICATION	1.8655697971487638E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999969915897886	WITHOUT_CLASSIFICATION	3.0084102113309766E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999998542434182	WITHOUT_CLASSIFICATION	1.4575658173147207E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999927542430096	WITHOUT_CLASSIFICATION	7.24575699036071E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999960441812354	WITHOUT_CLASSIFICATION	3.955818764511469E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999699568577445	WITHOUT_CLASSIFICATION	3.0043142255559973E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999867458332188	WITHOUT_CLASSIFICATION	1.3254166781223545E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999978533575004	WITHOUT_CLASSIFICATION	2.1466424995898856E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999615575602214	WITHOUT_CLASSIFICATION	3.844243977867056E-5	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999953801997824	WITHOUT_CLASSIFICATION	4.619800217616673E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999978905972395	WITHOUT_CLASSIFICATION	2.1094027604793736E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999933743740136	WITHOUT_CLASSIFICATION	6.625625986410658E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999915473495649	WITHOUT_CLASSIFICATION	8.452650435168682E-6	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9998849491917676	WITHOUT_CLASSIFICATION	1.1505080823243691E-4	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.999997844596185	WITHOUT_CLASSIFICATION	2.1554038149866145E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999985785501488	WITHOUT_CLASSIFICATION	1.4214498512318898E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999995805273273	WITHOUT_CLASSIFICATION	4.1947267275729064E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999998248507508	WITHOUT_CLASSIFICATION	1.7514924914224317E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999969957854843	WITHOUT_CLASSIFICATION	3.004214515686755E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999604760554525	WITHOUT_CLASSIFICATION	3.9523944547616257E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999995794083313	WITHOUT_CLASSIFICATION	4.205916686995988E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999968234311062	WITHOUT_CLASSIFICATION	3.1765688938606045E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999978468110328	WITHOUT_CLASSIFICATION	2.1531889672466313E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999997497843479	WITHOUT_CLASSIFICATION	2.5021565209438983E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998116484174	WITHOUT_CLASSIFICATION	1.883515825423512E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997544832127	WITHOUT_CLASSIFICATION	2.4551678743899175E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999993901162892	WITHOUT_CLASSIFICATION	6.098837108158057E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999990438542122	WITHOUT_CLASSIFICATION	9.561457878015625E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999996326372801	WITHOUT_CLASSIFICATION	3.673627199005021E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999998749001335	WITHOUT_CLASSIFICATION	1.2509986650171172E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999922096796636	WITHOUT_CLASSIFICATION	7.790320336311767E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999983506675573	WITHOUT_CLASSIFICATION	1.6493324427585375E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999720638498	WITHOUT_CLASSIFICATION	2.7936150255776988E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999582425334	WITHOUT_CLASSIFICATION	4.1757466519246864E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999942588075273	WITHOUT_CLASSIFICATION	5.741192472568125E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999968286926857	WITHOUT_CLASSIFICATION	3.171307314335029E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999711591299585	WITHOUT_CLASSIFICATION	2.8840870041507902E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999602095970178	WITHOUT_CLASSIFICATION	3.979040298220866E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.999943380142739	WITHOUT_CLASSIFICATION	5.661985726098099E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999986439816959	WITHOUT_CLASSIFICATION	1.3560183040422904E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997923407659	WITHOUT_CLASSIFICATION	2.076592340910336E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999954634224621	WITHOUT_CLASSIFICATION	4.5365775378245155E-6	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999998322789074	WITHOUT_CLASSIFICATION	1.6772109246224275E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.999999821775911	WITHOUT_CLASSIFICATION	1.7822408907876694E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999987704831245	WITHOUT_CLASSIFICATION	1.2295168755420153E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999973318064094	WITHOUT_CLASSIFICATION	2.668193590700915E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999740487447297	WITHOUT_CLASSIFICATION	2.595125527024003E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999942948761	WITHOUT_CLASSIFICATION	5.705123894849288E-9	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9997331459001112	WITHOUT_CLASSIFICATION	2.6685409988883496E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9998693278225546	WITHOUT_CLASSIFICATION	1.3067217744551748E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9997503130140675	WITHOUT_CLASSIFICATION	2.4968698593256865E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999663187741	WITHOUT_CLASSIFICATION	3.3681225905284096E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999989737770193	WITHOUT_CLASSIFICATION	1.026222980711216E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999996933886651	WITHOUT_CLASSIFICATION	3.0661133485929273E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999995837981992	WITHOUT_CLASSIFICATION	4.1620180085362615E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999984417846449	WITHOUT_CLASSIFICATION	1.5582153550669985E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999995953721292	WITHOUT_CLASSIFICATION	4.046278707930474E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999996647703834	WITHOUT_CLASSIFICATION	3.3522961656181033E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999969735895514	WITHOUT_CLASSIFICATION	3.0264104484826298E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999984632174828	WITHOUT_CLASSIFICATION	1.53678251721933E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999995384605688	WITHOUT_CLASSIFICATION	4.6153943128571606E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999986225577597	WITHOUT_CLASSIFICATION	1.377442240295819E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997132513012	WITHOUT_CLASSIFICATION	2.8674869880344245E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9997022846047495	WITHOUT_CLASSIFICATION	2.97715395250498E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999845831308745	WITHOUT_CLASSIFICATION	1.541686912550851E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999073626887233	WITHOUT_CLASSIFICATION	9.263731127667338E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999857649421819	WITHOUT_CLASSIFICATION	1.4235057818071486E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999919659571009	WITHOUT_CLASSIFICATION	8.034042899091982E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999837481704819	WITHOUT_CLASSIFICATION	1.625182951815265E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917155412854	WITHOUT_CLASSIFICATION	8.284458714654305E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999756977970988	WITHOUT_CLASSIFICATION	2.430220290126941E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876977197617	WITHOUT_CLASSIFICATION	1.2302280238323498E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999694022188259	WITHOUT_CLASSIFICATION	3.05977811740841E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884384469659	WITHOUT_CLASSIFICATION	1.1561553034064773E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999979197310531	WITHOUT_CLASSIFICATION	2.0802689469062428E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999713690035749	WITHOUT_CLASSIFICATION	2.863099642508326E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999981411917195	WITHOUT_CLASSIFICATION	1.8588082804948874E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999838944538126	WITHOUT_CLASSIFICATION	1.6105546187411135E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999824205191211	WITHOUT_CLASSIFICATION	1.7579480878895957E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999693050149535	WITHOUT_CLASSIFICATION	3.069498504645774E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999890199953029	WITHOUT_CLASSIFICATION	1.0980004697165564E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999885556930163	WITHOUT_CLASSIFICATION	1.1444306983854687E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999926536177	WITHOUT_CLASSIFICATION	7.346382300006824E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999126705989131	WITHOUT_CLASSIFICATION	8.732940108686793E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999702107761673	WITHOUT_CLASSIFICATION	2.9789223832692912E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999852428789932	WITHOUT_CLASSIFICATION	1.4757121006767272E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988104477341	WITHOUT_CLASSIFICATION	1.1895522659058284E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999655782639671	WITHOUT_CLASSIFICATION	3.442173603296811E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999685399196792	WITHOUT_CLASSIFICATION	3.14600803207765E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982142623954	WITHOUT_CLASSIFICATION	1.7857376046032785E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982142623954	WITHOUT_CLASSIFICATION	1.7857376046032785E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999090050179932	WITHOUT_CLASSIFICATION	9.099498200687565E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999684770043964	WITHOUT_CLASSIFICATION	3.152299560352338E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999673856789264	WITHOUT_CLASSIFICATION	3.261432107369501E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999739179098532	WITHOUT_CLASSIFICATION	2.6082090146774077E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999937860688243	WITHOUT_CLASSIFICATION	6.213931175711093E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999223245513738	WITHOUT_CLASSIFICATION	7.767544862629526E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999731686663941	WITHOUT_CLASSIFICATION	2.6831333606008023E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999664375773308	WITHOUT_CLASSIFICATION	3.3562422669184864E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999749918023265	WITHOUT_CLASSIFICATION	2.500819767345235E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878968337776	WITHOUT_CLASSIFICATION	1.2103166222336033E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999638061384104	WITHOUT_CLASSIFICATION	3.6193861589491996E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999909960659247	WITHOUT_CLASSIFICATION	9.003934075265156E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999771572047557	WITHOUT_CLASSIFICATION	2.284279524433185E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999676408106591	WITHOUT_CLASSIFICATION	3.235918934083637E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999457782607754	WITHOUT_CLASSIFICATION	5.422173922453741E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999569604660538	WITHOUT_CLASSIFICATION	4.3039533946251565E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736446819187	WITHOUT_CLASSIFICATION	2.6355318081310688E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999816504591426	WITHOUT_CLASSIFICATION	1.8349540857332967E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999748299702284	WITHOUT_CLASSIFICATION	2.5170029771602668E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999646703484201	WITHOUT_CLASSIFICATION	3.5329651579917666E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999590817511047	WITHOUT_CLASSIFICATION	4.091824889525899E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917179364102	WITHOUT_CLASSIFICATION	8.282063589807807E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917179364102	WITHOUT_CLASSIFICATION	8.282063589807807E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879793312293	WITHOUT_CLASSIFICATION	1.2020668770831477E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879793312293	WITHOUT_CLASSIFICATION	1.2020668770831477E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999860063608144	WITHOUT_CLASSIFICATION	1.3993639185645688E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999735788025623	WITHOUT_CLASSIFICATION	2.642119743778693E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999885556930163	WITHOUT_CLASSIFICATION	1.1444306983854687E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999646703484201	WITHOUT_CLASSIFICATION	3.5329651579917666E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917179364102	WITHOUT_CLASSIFICATION	8.282063589807807E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879793312293	WITHOUT_CLASSIFICATION	1.2020668770831477E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999735788025623	WITHOUT_CLASSIFICATION	2.642119743778693E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999731255214063	WITHOUT_CLASSIFICATION	2.6874478593657567E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999443399830545	WITHOUT_CLASSIFICATION	5.566001694551068E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999904925165312	WITHOUT_CLASSIFICATION	9.507483468794598E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999045685162786	WITHOUT_CLASSIFICATION	9.543148372140796E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998989506748557	WITHOUT_CLASSIFICATION	1.0104932514431509E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999684029268674	WITHOUT_CLASSIFICATION	3.159707313262477E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999805428536114	WITHOUT_CLASSIFICATION	1.94571463885395E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999803441497149	WITHOUT_CLASSIFICATION	1.9655850285008094E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999805428536114	WITHOUT_CLASSIFICATION	1.94571463885395E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999434817034555	WITHOUT_CLASSIFICATION	5.6518296544560903E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999337358694833	WITHOUT_CLASSIFICATION	6.626413051665631E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999734853691432	WITHOUT_CLASSIFICATION	2.651463085675121E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999717107794073	WITHOUT_CLASSIFICATION	2.828922059267224E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999498221731987	WITHOUT_CLASSIFICATION	5.017782680122845E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999506622964107	WITHOUT_CLASSIFICATION	4.933770358932822E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868837782729	WITHOUT_CLASSIFICATION	1.3116221727024597E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999599373402074	WITHOUT_CLASSIFICATION	4.0062659792537056E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999751151676896	WITHOUT_CLASSIFICATION	2.4884832310399242E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986794688122	WITHOUT_CLASSIFICATION	1.3205311878002558E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976243770753	WITHOUT_CLASSIFICATION	2.375622924692297E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999815186844866	WITHOUT_CLASSIFICATION	1.8481315513333692E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999801382397507	WITHOUT_CLASSIFICATION	1.9861760249257935E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999720454205279	WITHOUT_CLASSIFICATION	2.7954579472131E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976986293288	WITHOUT_CLASSIFICATION	2.301370671197708E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999975240477438	WITHOUT_CLASSIFICATION	2.4759522562011916E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999953186918344	WITHOUT_CLASSIFICATION	4.681308165603716E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999815265826073	WITHOUT_CLASSIFICATION	1.847341739279951E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871381588125	WITHOUT_CLASSIFICATION	1.2861841187605268E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999820515575377	WITHOUT_CLASSIFICATION	1.7948442462293595E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999993162441048	WITHOUT_CLASSIFICATION	6.837558953041758E-7	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999782562480113	WITHOUT_CLASSIFICATION	2.174375198870471E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999839981154129	WITHOUT_CLASSIFICATION	1.600188458709588E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999699874569115	WITHOUT_CLASSIFICATION	3.001254308855167E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976243770753	WITHOUT_CLASSIFICATION	2.375622924692297E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999791841503813	WITHOUT_CLASSIFICATION	2.0815849618639477E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999907995312305	WITHOUT_CLASSIFICATION	9.200468769496142E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999397185892593	WITHOUT_CLASSIFICATION	6.028141074061884E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997511732682	WITHOUT_CLASSIFICATION	2.488267318085653E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999998459214285	WITHOUT_CLASSIFICATION	1.5407857140532334E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999997448748776	WITHOUT_CLASSIFICATION	2.551251223256536E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999997005409246	WITHOUT_CLASSIFICATION	2.994590753755127E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999996663122481	WITHOUT_CLASSIFICATION	3.3368775191300206E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998473320373	WITHOUT_CLASSIFICATION	1.5266796271852928E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999995079328785	WITHOUT_CLASSIFICATION	4.920671214741061E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998611016462	WITHOUT_CLASSIFICATION	1.3889835372874619E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999995523139631	WITHOUT_CLASSIFICATION	4.476860368866003E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999998352019209	WITHOUT_CLASSIFICATION	1.6479807901348046E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999938765824816	WITHOUT_CLASSIFICATION	6.1234175183052325E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999996647703834	WITHOUT_CLASSIFICATION	3.3522961656181033E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999924525256918	WITHOUT_CLASSIFICATION	7.547474308179471E-6	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999996034950581	WITHOUT_CLASSIFICATION	3.9650494186097205E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999080168800455	WITHOUT_CLASSIFICATION	9.198311995450746E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999970731025577	WITHOUT_CLASSIFICATION	2.9268974421988856E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998502832121	WITHOUT_CLASSIFICATION	1.4971678783513834E-7	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999807645897013	WITHOUT_CLASSIFICATION	1.923541029877054E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999992273849524	WITHOUT_CLASSIFICATION	7.726150476816447E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999993846558799	WITHOUT_CLASSIFICATION	6.153441201560765E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999985410102223	WITHOUT_CLASSIFICATION	1.4589897776508004E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998454035425536	WITHOUT_CLASSIFICATION	1.5459645744646928E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999932106449	WITHOUT_CLASSIFICATION	6.7893551598281335E-9	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999967980752219	WITHOUT_CLASSIFICATION	3.201924778072337E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999961906943294	WITHOUT_CLASSIFICATION	3.8093056706576526E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999987651036554	WITHOUT_CLASSIFICATION	1.2348963446132957E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999995231231739	WITHOUT_CLASSIFICATION	4.768768261992572E-7	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999901593378866	WITHOUT_CLASSIFICATION	9.840662113423063E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999816189584554	WITHOUT_CLASSIFICATION	1.838104154461797E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999771037519625	WITHOUT_CLASSIFICATION	2.289624803749581E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999858379504022	WITHOUT_CLASSIFICATION	1.4162049597743358E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999992703755791	WITHOUT_CLASSIFICATION	7.296244209641297E-7	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999979458813633	WITHOUT_CLASSIFICATION	2.0541186367866092E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999989737770193	WITHOUT_CLASSIFICATION	1.026222980711216E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999999427902111	WITHOUT_CLASSIFICATION	5.720978897625406E-8	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999964802444459	WITHOUT_CLASSIFICATION	3.5197555540587977E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999992733372617	WITHOUT_CLASSIFICATION	7.266627383614742E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9996300215325652	WITHOUT_CLASSIFICATION	3.6997846743473385E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999981288809626	WITHOUT_CLASSIFICATION	1.8711190373097772E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9997943757512211	WITHOUT_CLASSIFICATION	2.05624248778964E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999997983263732	WITHOUT_CLASSIFICATION	2.0167362679433843E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999993162441048	WITHOUT_CLASSIFICATION	6.837558953041758E-7	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999980149185452	WITHOUT_CLASSIFICATION	1.985081454749366E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999974597733621	WITHOUT_CLASSIFICATION	2.540226637909843E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999992074946363	WITHOUT_CLASSIFICATION	7.925053637093207E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999991298390826	WITHOUT_CLASSIFICATION	8.701609174465071E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999206564908	WITHOUT_CLASSIFICATION	7.934350927267595E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999997286720372	WITHOUT_CLASSIFICATION	2.713279628410512E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999996647703834	WITHOUT_CLASSIFICATION	3.3522961656181033E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996705868022014	WITHOUT_CLASSIFICATION	3.29413197798574E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999854951361	WITHOUT_CLASSIFICATION	1.4504863895150693E-8	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999640813511	WITHOUT_CLASSIFICATION	3.591864883244866E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999143425604	WITHOUT_CLASSIFICATION	8.56574395745591E-8	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999257178745	WITHOUT_CLASSIFICATION	7.428212545988208E-8	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999998932432976	WITHOUT_CLASSIFICATION	1.067567022885784E-7	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999919673322664	WITHOUT_CLASSIFICATION	8.032667733670337E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999665279604	WITHOUT_CLASSIFICATION	3.347203954859672E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999998197434152	WITHOUT_CLASSIFICATION	1.8025658479553241E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999998404207249	WITHOUT_CLASSIFICATION	1.5957927505192854E-7	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999899669763762	WITHOUT_CLASSIFICATION	1.003302362381039E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999993099710959	WITHOUT_CLASSIFICATION	6.90028903989259E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999958909462463	WITHOUT_CLASSIFICATION	4.109053753690264E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999045212698483	WITHOUT_CLASSIFICATION	9.547873015172327E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999919655424937	WITHOUT_CLASSIFICATION	8.03445750637084E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999927542430096	WITHOUT_CLASSIFICATION	7.24575699036071E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999981344302029	WITHOUT_CLASSIFICATION	1.8655697971487638E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999969915897886	WITHOUT_CLASSIFICATION	3.0084102113309766E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999699568577445	WITHOUT_CLASSIFICATION	3.0043142255559973E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999867458332188	WITHOUT_CLASSIFICATION	1.3254166781223545E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999978533575004	WITHOUT_CLASSIFICATION	2.1466424995898856E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999960831490307	WITHOUT_CLASSIFICATION	3.916850969355259E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999615575602214	WITHOUT_CLASSIFICATION	3.844243977867056E-5	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999953801997824	WITHOUT_CLASSIFICATION	4.619800217616673E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999978905972395	WITHOUT_CLASSIFICATION	2.1094027604793736E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999933743740136	WITHOUT_CLASSIFICATION	6.625625986410658E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999915473495649	WITHOUT_CLASSIFICATION	8.452650435168682E-6	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9998849491917676	WITHOUT_CLASSIFICATION	1.1505080823243691E-4	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.999997844596185	WITHOUT_CLASSIFICATION	2.1554038149866145E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999985785501488	WITHOUT_CLASSIFICATION	1.4214498512318898E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999995805273273	WITHOUT_CLASSIFICATION	4.1947267275729064E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999995805273273	WITHOUT_CLASSIFICATION	4.1947267275729064E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999998248507508	WITHOUT_CLASSIFICATION	1.7514924914224317E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999969957854843	WITHOUT_CLASSIFICATION	3.004214515686755E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999604760554525	WITHOUT_CLASSIFICATION	3.9523944547616257E-5	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999995794083313	WITHOUT_CLASSIFICATION	4.205916686995988E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999978468110328	WITHOUT_CLASSIFICATION	2.1531889672466313E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999997497843479	WITHOUT_CLASSIFICATION	2.5021565209438983E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998116484174	WITHOUT_CLASSIFICATION	1.883515825423512E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997544832127	WITHOUT_CLASSIFICATION	2.4551678743899175E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999990438542122	WITHOUT_CLASSIFICATION	9.561457878015625E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999994481154558	WITHOUT_CLASSIFICATION	5.518845441587884E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999996326372801	WITHOUT_CLASSIFICATION	3.673627199005021E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999998749001335	WITHOUT_CLASSIFICATION	1.2509986650171172E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999922096796636	WITHOUT_CLASSIFICATION	7.790320336311767E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999983506675573	WITHOUT_CLASSIFICATION	1.6493324427585375E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999720638498	WITHOUT_CLASSIFICATION	2.7936150255776988E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999942588075273	WITHOUT_CLASSIFICATION	5.741192472568125E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999968286926857	WITHOUT_CLASSIFICATION	3.171307314335029E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999711591299585	WITHOUT_CLASSIFICATION	2.8840870041507902E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999602095970178	WITHOUT_CLASSIFICATION	3.979040298220866E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.999943380142739	WITHOUT_CLASSIFICATION	5.661985726098099E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999986439816959	WITHOUT_CLASSIFICATION	1.3560183040422904E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997923407659	WITHOUT_CLASSIFICATION	2.076592340910336E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999954634224621	WITHOUT_CLASSIFICATION	4.5365775378245155E-6	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999998322789074	WITHOUT_CLASSIFICATION	1.6772109246224275E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.999999821775911	WITHOUT_CLASSIFICATION	1.7822408907876694E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999987704831245	WITHOUT_CLASSIFICATION	1.2295168755420153E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999740487447297	WITHOUT_CLASSIFICATION	2.595125527024003E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9997331459001112	WITHOUT_CLASSIFICATION	2.6685409988883496E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9998693278225546	WITHOUT_CLASSIFICATION	1.3067217744551748E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9997503130140675	WITHOUT_CLASSIFICATION	2.4968698593256865E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999663187741	WITHOUT_CLASSIFICATION	3.3681225905284096E-8	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9997848758011691	WITHOUT_CLASSIFICATION	2.1512419883083208E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999645342344707	WITHOUT_CLASSIFICATION	3.546576552921897E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999998353354648	WITHOUT_CLASSIFICATION	1.6466453520032065E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999996933886651	WITHOUT_CLASSIFICATION	3.0661133485929273E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999999852583068	WITHOUT_CLASSIFICATION	1.4741693195783191E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999995837981992	WITHOUT_CLASSIFICATION	4.1620180085362615E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999984417846449	WITHOUT_CLASSIFICATION	1.5582153550669985E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999995953721292	WITHOUT_CLASSIFICATION	4.046278707930474E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999913134911812	WITHOUT_CLASSIFICATION	8.686508818839143E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999969735895514	WITHOUT_CLASSIFICATION	3.0264104484826298E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999984632174828	WITHOUT_CLASSIFICATION	1.53678251721933E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999995384605688	WITHOUT_CLASSIFICATION	4.6153943128571606E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999986225577597	WITHOUT_CLASSIFICATION	1.377442240295819E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997132513012	WITHOUT_CLASSIFICATION	2.8674869880344245E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9997022846047495	WITHOUT_CLASSIFICATION	2.97715395250498E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999845831308745	WITHOUT_CLASSIFICATION	1.541686912550851E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999073626887233	WITHOUT_CLASSIFICATION	9.263731127667338E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999857649421819	WITHOUT_CLASSIFICATION	1.4235057818071486E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999837481704819	WITHOUT_CLASSIFICATION	1.625182951815265E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917155412854	WITHOUT_CLASSIFICATION	8.284458714654305E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999756977970988	WITHOUT_CLASSIFICATION	2.430220290126941E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876977197617	WITHOUT_CLASSIFICATION	1.2302280238323498E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911270937509	WITHOUT_CLASSIFICATION	8.872906249032847E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999694022188259	WITHOUT_CLASSIFICATION	3.05977811740841E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884384469659	WITHOUT_CLASSIFICATION	1.1561553034064773E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999979197310531	WITHOUT_CLASSIFICATION	2.0802689469062428E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999713690035749	WITHOUT_CLASSIFICATION	2.863099642508326E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999981411917195	WITHOUT_CLASSIFICATION	1.8588082804948874E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999838944538126	WITHOUT_CLASSIFICATION	1.6105546187411135E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999824205191211	WITHOUT_CLASSIFICATION	1.7579480878895957E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999477700172815	WITHOUT_CLASSIFICATION	5.222998271845519E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999890199953029	WITHOUT_CLASSIFICATION	1.0980004697165564E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999885556930163	WITHOUT_CLASSIFICATION	1.1444306983854687E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999126705989131	WITHOUT_CLASSIFICATION	8.732940108686793E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999702107761673	WITHOUT_CLASSIFICATION	2.9789223832692912E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999852428789932	WITHOUT_CLASSIFICATION	1.4757121006767272E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988104477341	WITHOUT_CLASSIFICATION	1.1895522659058284E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999655782639671	WITHOUT_CLASSIFICATION	3.442173603296811E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999429021929236	WITHOUT_CLASSIFICATION	5.709780707652452E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999685399196792	WITHOUT_CLASSIFICATION	3.14600803207765E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982142623954	WITHOUT_CLASSIFICATION	1.7857376046032785E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999684770043964	WITHOUT_CLASSIFICATION	3.152299560352338E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999664375773308	WITHOUT_CLASSIFICATION	3.3562422669184864E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982142623954	WITHOUT_CLASSIFICATION	1.7857376046032785E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999673856789264	WITHOUT_CLASSIFICATION	3.261432107369501E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999739179098532	WITHOUT_CLASSIFICATION	2.6082090146774077E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999937860688243	WITHOUT_CLASSIFICATION	6.213931175711093E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999223245513738	WITHOUT_CLASSIFICATION	7.767544862629526E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999731686663941	WITHOUT_CLASSIFICATION	2.6831333606008023E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999749918023265	WITHOUT_CLASSIFICATION	2.500819767345235E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878968337776	WITHOUT_CLASSIFICATION	1.2103166222336033E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999638061384104	WITHOUT_CLASSIFICATION	3.6193861589491996E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999909960659247	WITHOUT_CLASSIFICATION	9.003934075265156E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999771572047557	WITHOUT_CLASSIFICATION	2.284279524433185E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999968337016149	WITHOUT_CLASSIFICATION	3.166298385106886E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999165412117511	WITHOUT_CLASSIFICATION	8.345878824893593E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999457782607754	WITHOUT_CLASSIFICATION	5.422173922453741E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999569604660538	WITHOUT_CLASSIFICATION	4.3039533946251565E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999816504591426	WITHOUT_CLASSIFICATION	1.8349540857332967E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999918952491247	WITHOUT_CLASSIFICATION	8.104750875319744E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736446819187	WITHOUT_CLASSIFICATION	2.6355318081310688E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999748299702284	WITHOUT_CLASSIFICATION	2.5170029771602668E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999646703484201	WITHOUT_CLASSIFICATION	3.5329651579917666E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917179364102	WITHOUT_CLASSIFICATION	8.282063589807807E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917179364102	WITHOUT_CLASSIFICATION	8.282063589807807E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879793312293	WITHOUT_CLASSIFICATION	1.2020668770831477E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879793312293	WITHOUT_CLASSIFICATION	1.2020668770831477E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999860063608144	WITHOUT_CLASSIFICATION	1.3993639185645688E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999860063608144	WITHOUT_CLASSIFICATION	1.3993639185645688E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999735788025623	WITHOUT_CLASSIFICATION	2.642119743778693E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999731255214063	WITHOUT_CLASSIFICATION	2.6874478593657567E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999885556930163	WITHOUT_CLASSIFICATION	1.1444306983854687E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999646703484201	WITHOUT_CLASSIFICATION	3.5329651579917666E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917179364102	WITHOUT_CLASSIFICATION	8.282063589807807E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879793312293	WITHOUT_CLASSIFICATION	1.2020668770831477E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999443399830545	WITHOUT_CLASSIFICATION	5.566001694551068E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999904925165312	WITHOUT_CLASSIFICATION	9.507483468794598E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999045685162786	WITHOUT_CLASSIFICATION	9.543148372140796E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998989506748557	WITHOUT_CLASSIFICATION	1.0104932514431509E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999684029268674	WITHOUT_CLASSIFICATION	3.159707313262477E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999803441497149	WITHOUT_CLASSIFICATION	1.9655850285008094E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999803441497149	WITHOUT_CLASSIFICATION	1.9655850285008094E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999805428536114	WITHOUT_CLASSIFICATION	1.94571463885395E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999434817034555	WITHOUT_CLASSIFICATION	5.6518296544560903E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999337358694833	WITHOUT_CLASSIFICATION	6.626413051665631E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999734853691432	WITHOUT_CLASSIFICATION	2.651463085675121E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999717107794073	WITHOUT_CLASSIFICATION	2.828922059267224E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891135379569	WITHOUT_CLASSIFICATION	1.0886462043137324E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999874710238014	WITHOUT_CLASSIFICATION	1.2528976198552267E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999805428536114	WITHOUT_CLASSIFICATION	1.94571463885395E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999498221731987	WITHOUT_CLASSIFICATION	5.017782680122845E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999506622964107	WITHOUT_CLASSIFICATION	4.933770358932822E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868837782729	WITHOUT_CLASSIFICATION	1.3116221727024597E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999751151676896	WITHOUT_CLASSIFICATION	2.4884832310399242E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986794688122	WITHOUT_CLASSIFICATION	1.3205311878002558E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976243770753	WITHOUT_CLASSIFICATION	2.375622924692297E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999815186844866	WITHOUT_CLASSIFICATION	1.8481315513333692E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999801382397507	WITHOUT_CLASSIFICATION	1.9861760249257935E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999720454205279	WITHOUT_CLASSIFICATION	2.7954579472131E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976986293288	WITHOUT_CLASSIFICATION	2.301370671197708E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999975240477438	WITHOUT_CLASSIFICATION	2.4759522562011916E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999953186918344	WITHOUT_CLASSIFICATION	4.681308165603716E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999815265826073	WITHOUT_CLASSIFICATION	1.847341739279951E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871381588125	WITHOUT_CLASSIFICATION	1.2861841187605268E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999820515575377	WITHOUT_CLASSIFICATION	1.7948442462293595E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862994428299	WITHOUT_CLASSIFICATION	1.3700557170081707E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999699874569115	WITHOUT_CLASSIFICATION	3.001254308855167E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976243770753	WITHOUT_CLASSIFICATION	2.375622924692297E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999791841503813	WITHOUT_CLASSIFICATION	2.0815849618639477E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999907995312305	WITHOUT_CLASSIFICATION	9.200468769496142E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999397185892593	WITHOUT_CLASSIFICATION	6.028141074061884E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996705868022014	WITHOUT_CLASSIFICATION	3.29413197798574E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997511732682	WITHOUT_CLASSIFICATION	2.488267318085653E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999998459214285	WITHOUT_CLASSIFICATION	1.5407857140532334E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999997448748776	WITHOUT_CLASSIFICATION	2.551251223256536E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999997005409246	WITHOUT_CLASSIFICATION	2.994590753755127E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999996663122481	WITHOUT_CLASSIFICATION	3.3368775191300206E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998473320373	WITHOUT_CLASSIFICATION	1.5266796271852928E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999995079328785	WITHOUT_CLASSIFICATION	4.920671214741061E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998611016462	WITHOUT_CLASSIFICATION	1.3889835372874619E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999995523139631	WITHOUT_CLASSIFICATION	4.476860368866003E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999998352019209	WITHOUT_CLASSIFICATION	1.6479807901348046E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999938765824816	WITHOUT_CLASSIFICATION	6.1234175183052325E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999996647703834	WITHOUT_CLASSIFICATION	3.3522961656181033E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999924525256918	WITHOUT_CLASSIFICATION	7.547474308179471E-6	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999996034950581	WITHOUT_CLASSIFICATION	3.9650494186097205E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999080168800455	WITHOUT_CLASSIFICATION	9.198311995450746E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999970731025577	WITHOUT_CLASSIFICATION	2.9268974421988856E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999993162441048	WITHOUT_CLASSIFICATION	6.837558953041758E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998502832121	WITHOUT_CLASSIFICATION	1.4971678783513834E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998502832121	WITHOUT_CLASSIFICATION	1.4971678783513834E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999992273849524	WITHOUT_CLASSIFICATION	7.726150476816447E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999993846558799	WITHOUT_CLASSIFICATION	6.153441201560765E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999854951361	WITHOUT_CLASSIFICATION	1.4504863895150693E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999990983786948	WITHOUT_CLASSIFICATION	9.016213051814954E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999990983786948	WITHOUT_CLASSIFICATION	9.016213051814954E-7	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9998531221617669	WITHOUT_CLASSIFICATION	1.4687783823318963E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999685411990992	WITHOUT_CLASSIFICATION	3.1458800900794296E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999999891314575	WITHOUT_CLASSIFICATION	1.0868542469762574E-8	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.999998369636581	WITHOUT_CLASSIFICATION	1.6303634189965988E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9971671240654959	WITHOUT_CLASSIFICATION	0.0028328759345041515	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999939094865343	WITHOUT_CLASSIFICATION	6.090513465675358E-6	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992516825966	WITHOUT_CLASSIFICATION	7.483174034218814E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999993782402087	WITHOUT_CLASSIFICATION	6.217597912897158E-7	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999150753300844	WITHOUT_CLASSIFICATION	8.492466991550802E-5	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999988377427299	WITHOUT_CLASSIFICATION	1.1622572700965277E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.99999519211641	WITHOUT_CLASSIFICATION	4.80788359002614E-6	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.999960027622747	WITHOUT_CLASSIFICATION	3.997237725291727E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.999995579563469	WITHOUT_CLASSIFICATION	4.420436531005256E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.999995680687161	WITHOUT_CLASSIFICATION	4.3193128389626916E-6	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999984820836435	WITHOUT_CLASSIFICATION	1.517916356530953E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999926957998	WITHOUT_CLASSIFICATION	7.3042003272296084E-9	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999995080696267	WITHOUT_CLASSIFICATION	4.919303732345402E-7	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999881537026692	WITHOUT_CLASSIFICATION	1.1846297330680698E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999660607496662	WITHOUT_CLASSIFICATION	3.393925033390143E-5	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999964957414492	WITHOUT_CLASSIFICATION	3.504258550769477E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999993854755292	WITHOUT_CLASSIFICATION	6.145244708234008E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999980274652751	WITHOUT_CLASSIFICATION	1.9725347249438818E-6	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999677704559534	WITHOUT_CLASSIFICATION	3.222954404652072E-5	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999306210932367	WITHOUT_CLASSIFICATION	6.937890676328596E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999988789215486	WITHOUT_CLASSIFICATION	1.1210784513917254E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999986349892384	WITHOUT_CLASSIFICATION	1.365010761615549E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999992114634842	WITHOUT_CLASSIFICATION	7.885365156737375E-7	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999966681188566	WITHOUT_CLASSIFICATION	3.33188114345671E-6	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999994059283343	WITHOUT_CLASSIFICATION	5.94071665643808E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999991476676643	WITHOUT_CLASSIFICATION	8.523323356774445E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999991476676643	WITHOUT_CLASSIFICATION	8.523323356774445E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999985642781566	WITHOUT_CLASSIFICATION	1.4357218434452916E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999998067745226	WITHOUT_CLASSIFICATION	1.932254773811292E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999061556831	WITHOUT_CLASSIFICATION	9.384431686380086E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9996861083289028	WITHOUT_CLASSIFICATION	3.138916710971158E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999895507014102	WITHOUT_CLASSIFICATION	1.0449298589767961E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.999993044122405	WITHOUT_CLASSIFICATION	6.955877595059086E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999207396156239	WITHOUT_CLASSIFICATION	7.926038437615365E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999570342446288	WITHOUT_CLASSIFICATION	4.296575537118827E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999997789048448	WITHOUT_CLASSIFICATION	2.2109515506600336E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999876219988794	WITHOUT_CLASSIFICATION	1.2378001120714206E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999876219988794	WITHOUT_CLASSIFICATION	1.2378001120714206E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999803935466054	WITHOUT_CLASSIFICATION	1.9606453394591743E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999803935466054	WITHOUT_CLASSIFICATION	1.9606453394591743E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999873825773994	WITHOUT_CLASSIFICATION	1.2617422600688769E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999860608221975	WITHOUT_CLASSIFICATION	1.3939177802513094E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999998860853413	WITHOUT_CLASSIFICATION	1.1391465863904877E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999999604907359	WITHOUT_CLASSIFICATION	3.9509264061103016E-8	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.999991870279445	WITHOUT_CLASSIFICATION	8.129720554871188E-6	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999998844591468	WITHOUT_CLASSIFICATION	1.155408531234168E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999730533948	WITHOUT_CLASSIFICATION	2.694660518584762E-8	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999969000858042	WITHOUT_CLASSIFICATION	3.0999141958313286E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999699543590366	WITHOUT_CLASSIFICATION	3.0045640963329465E-5	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.999999504080658	WITHOUT_CLASSIFICATION	4.959193421371526E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9993757256336282	WITHOUT_CLASSIFICATION	6.242743663718864E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999996537179984	WITHOUT_CLASSIFICATION	3.4628200168321975E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999920244620993	WITHOUT_CLASSIFICATION	7.975537900739459E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.999999820289148	WITHOUT_CLASSIFICATION	1.7971085205418574E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999994228415956	WITHOUT_CLASSIFICATION	5.771584043799935E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9998812406796633	WITHOUT_CLASSIFICATION	1.187593203365987E-4	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999737132230783	WITHOUT_CLASSIFICATION	2.6286776921826636E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999826429298665	WITHOUT_CLASSIFICATION	1.7357070133425295E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999939780452257	WITHOUT_CLASSIFICATION	6.021954774288556E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999626233222768	WITHOUT_CLASSIFICATION	3.737667772323265E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9999974170475665	WITHOUT_CLASSIFICATION	2.5829524335306024E-6	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999522411760683	WITHOUT_CLASSIFICATION	4.7758823931629364E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999968338674204	WITHOUT_CLASSIFICATION	3.1661325794915935E-6	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999979433053712	WITHOUT_CLASSIFICATION	2.0566946289120933E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999857254556	WITHOUT_CLASSIFICATION	1.4274544372265422E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999144605954594	WITHOUT_CLASSIFICATION	8.553940454059695E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999605585723765	WITHOUT_CLASSIFICATION	3.9441427623426785E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999949181926268	WITHOUT_CLASSIFICATION	5.081807373196216E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999949181926268	WITHOUT_CLASSIFICATION	5.081807373196216E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999834453413938	WITHOUT_CLASSIFICATION	1.6554658606253767E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999850594877288	WITHOUT_CLASSIFICATION	1.4940512271156713E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999923351559237	WITHOUT_CLASSIFICATION	7.664844076315441E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999963025338734	WITHOUT_CLASSIFICATION	3.697466126693981E-6	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999949090777581	WITHOUT_CLASSIFICATION	5.090922241839776E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999688259871535	WITHOUT_CLASSIFICATION	3.1174012846386386E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999958953718632	WITHOUT_CLASSIFICATION	4.104628136756194E-6	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999992083177079	WITHOUT_CLASSIFICATION	7.916822920969332E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999144605954594	WITHOUT_CLASSIFICATION	8.553940454059695E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998495666434097	WITHOUT_CLASSIFICATION	1.504333565903554E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999968174594729	WITHOUT_CLASSIFICATION	3.182540527041004E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999645039244156	WITHOUT_CLASSIFICATION	3.5496075584396E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999999251123023	WITHOUT_CLASSIFICATION	7.488769774496971E-8	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999977009732616	WITHOUT_CLASSIFICATION	2.299026738441778E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999955447943065	WITHOUT_CLASSIFICATION	4.455205693471191E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999546182974	WITHOUT_CLASSIFICATION	4.538170258423857E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999945339927493	WITHOUT_CLASSIFICATION	5.466007250744846E-6	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999729418605551	WITHOUT_CLASSIFICATION	2.705813944494117E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999993762083718	WITHOUT_CLASSIFICATION	6.237916281989003E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999996654416564	WITHOUT_CLASSIFICATION	3.3455834359714173E-7	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999806453804	WITHOUT_CLASSIFICATION	1.935461958021069E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.999977349963995	WITHOUT_CLASSIFICATION	2.265003600498839E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999998886057002	WITHOUT_CLASSIFICATION	1.1139429978526998E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999965348589899	WITHOUT_CLASSIFICATION	3.4651410101754984E-6	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999980791222305	WITHOUT_CLASSIFICATION	1.920877769550529E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999968348051127	WITHOUT_CLASSIFICATION	3.1651948873353484E-6	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999995204249602	WITHOUT_CLASSIFICATION	4.795750398033812E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999995394269496	WITHOUT_CLASSIFICATION	4.6057305034236595E-7	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.999995199414196	WITHOUT_CLASSIFICATION	4.800585803940068E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998045683695284	WITHOUT_CLASSIFICATION	1.954316304716682E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999427986487356	WITHOUT_CLASSIFICATION	5.720135126443751E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999906048735077	WITHOUT_CLASSIFICATION	9.395126492282144E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999885640905931	WITHOUT_CLASSIFICATION	1.1435909406802558E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999691017666594	WITHOUT_CLASSIFICATION	3.0898233340548734E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999546182974	WITHOUT_CLASSIFICATION	4.538170258423857E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999965348589899	WITHOUT_CLASSIFICATION	3.4651410101754984E-6	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999998567291517	WITHOUT_CLASSIFICATION	1.4327084830739566E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999997996198369	WITHOUT_CLASSIFICATION	2.003801631927218E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999933968266499	WITHOUT_CLASSIFICATION	6.603173349999334E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.999997578362047	WITHOUT_CLASSIFICATION	2.4216379529674783E-6	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999985493503598	WITHOUT_CLASSIFICATION	1.4506496401958827E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999965087175743	WITHOUT_CLASSIFICATION	3.491282425821334E-6	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999996417945284	WITHOUT_CLASSIFICATION	3.5820547155450743E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999997374368137	WITHOUT_CLASSIFICATION	2.6256318634945954E-7	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.99981980923245	WITHOUT_CLASSIFICATION	1.8019076755000323E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999832096563653	WITHOUT_CLASSIFICATION	1.6790343634619932E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999903049361389	WITHOUT_CLASSIFICATION	9.695063860943954E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999903049361389	WITHOUT_CLASSIFICATION	9.695063860943954E-6	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999723303893716	WITHOUT_CLASSIFICATION	2.766961062848509E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999928091861212	WITHOUT_CLASSIFICATION	7.190813878733008E-6	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.999996357613573	WITHOUT_CLASSIFICATION	3.642386427114247E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999981259896195	WITHOUT_CLASSIFICATION	1.8740103805529636E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999972986587375	WITHOUT_CLASSIFICATION	2.701341262489351E-6	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9998957053326134	WITHOUT_CLASSIFICATION	1.0429466738666827E-4	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999985707560703	WITHOUT_CLASSIFICATION	1.429243929686718E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999990711117849	WITHOUT_CLASSIFICATION	9.288882150998955E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999882375258591	WITHOUT_CLASSIFICATION	1.1762474140999534E-5	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999991054934272	WITHOUT_CLASSIFICATION	8.94506572668569E-7	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999593007289045	WITHOUT_CLASSIFICATION	4.069927109548702E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999803935466054	WITHOUT_CLASSIFICATION	1.9606453394591743E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999730533948	WITHOUT_CLASSIFICATION	2.694660518584762E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999965348589899	WITHOUT_CLASSIFICATION	3.4651410101754984E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999972986587375	WITHOUT_CLASSIFICATION	2.701341262489351E-6	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9998957053326134	WITHOUT_CLASSIFICATION	1.0429466738666827E-4	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.999999930385466	WITHOUT_CLASSIFICATION	6.961453400232214E-8	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999999914025074	WITHOUT_CLASSIFICATION	8.597492638443749E-9	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999940339648153	WITHOUT_CLASSIFICATION	5.966035184666096E-6	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999975210569766	WITHOUT_CLASSIFICATION	2.478943023460364E-6	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999927237578998	WITHOUT_CLASSIFICATION	7.276242100270112E-6	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999997851085703	WITHOUT_CLASSIFICATION	2.1489142971074387E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999634558330398	WITHOUT_CLASSIFICATION	3.6544166960159044E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999994896265028	WITHOUT_CLASSIFICATION	5.103734972564684E-7	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999999844735987	WITHOUT_CLASSIFICATION	1.5526401203485426E-8	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999986256796429	WITHOUT_CLASSIFICATION	1.3743203571102485E-6	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999995430915106	WITHOUT_CLASSIFICATION	4.5690848925954117E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999999368920204	WITHOUT_CLASSIFICATION	6.31079796611615E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9948182251008756	WITHOUT_CLASSIFICATION	0.005181774899124375	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999997999455912	WITHOUT_CLASSIFICATION	2.0005440883372854E-7	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999815666964061	WITHOUT_CLASSIFICATION	1.843330359382631E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999655203851	WITHOUT_CLASSIFICATION	3.4479614949611586E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9948182251008756	WITHOUT_CLASSIFICATION	0.005181774899124375	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9948182251008756	WITHOUT_CLASSIFICATION	0.005181774899124375	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9948182251008756	WITHOUT_CLASSIFICATION	0.005181774899124375	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999556585290552	WITHOUT_CLASSIFICATION	4.434147094479491E-5	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999941241552398	WITHOUT_CLASSIFICATION	5.87584476022508E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999988775100204	WITHOUT_CLASSIFICATION	1.12248997967632E-6	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999953027727713	WITHOUT_CLASSIFICATION	4.697227228744368E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999672985107223	WITHOUT_CLASSIFICATION	3.270148927772796E-5	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.999885071817524	WITHOUT_CLASSIFICATION	1.1492818247601822E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999912838919763	WITHOUT_CLASSIFICATION	8.716108023587778E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999997807226002	WITHOUT_CLASSIFICATION	2.1927739978871653E-7	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999955815500462	WITHOUT_CLASSIFICATION	4.4184499537654156E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999979272378399	WITHOUT_CLASSIFICATION	2.072762160099879E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.999982928968782	WITHOUT_CLASSIFICATION	1.7071031217911804E-5	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.999983365884011	WITHOUT_CLASSIFICATION	1.663411598898585E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999974315477039	WITHOUT_CLASSIFICATION	2.568452296133194E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999998502832121	WITHOUT_CLASSIFICATION	1.4971678783513834E-7	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999968076614446	WITHOUT_CLASSIFICATION	3.1923385554807574E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999304346236003	WITHOUT_CLASSIFICATION	6.95653763996477E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999999897264008	WITHOUT_CLASSIFICATION	1.0273599105638261E-8	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999911729070862	WITHOUT_CLASSIFICATION	8.827092913886209E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999908469332353	WITHOUT_CLASSIFICATION	9.153066764645365E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999908469332353	WITHOUT_CLASSIFICATION	9.153066764645365E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999809020844304	WITHOUT_CLASSIFICATION	1.9097915569607082E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999952933765933	WITHOUT_CLASSIFICATION	4.70662340667693E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999809020844304	WITHOUT_CLASSIFICATION	1.9097915569607082E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999784653067224	WITHOUT_CLASSIFICATION	2.1534693277582017E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999990019523255	WITHOUT_CLASSIFICATION	9.980476744729264E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999454116986537	WITHOUT_CLASSIFICATION	5.4588301346210016E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999994491550352	WITHOUT_CLASSIFICATION	5.508449647959788E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999994491550352	WITHOUT_CLASSIFICATION	5.508449647959788E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999907498114352	WITHOUT_CLASSIFICATION	9.250188564795917E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999907498114352	WITHOUT_CLASSIFICATION	9.250188564795917E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999765512516998	WITHOUT_CLASSIFICATION	2.3448748300202123E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999765512516998	WITHOUT_CLASSIFICATION	2.3448748300202123E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999993446490849	WITHOUT_CLASSIFICATION	6.553509150446119E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999999517449881	WITHOUT_CLASSIFICATION	4.8255011945610944E-8	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999904630638947	WITHOUT_CLASSIFICATION	9.536936105309858E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999999031706419	WITHOUT_CLASSIFICATION	9.682935810827159E-8	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999952958792034	WITHOUT_CLASSIFICATION	4.7041207965993275E-6	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999925190450788	WITHOUT_CLASSIFICATION	7.48095492131134E-6	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999985160549172	WITHOUT_CLASSIFICATION	1.4839450829086382E-6	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999932216100688	WITHOUT_CLASSIFICATION	6.7783899313575624E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999989485209367	WITHOUT_CLASSIFICATION	1.0514790632427164E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9999030773969807	WITHOUT_CLASSIFICATION	9.69226030192949E-5	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999435293195	WITHOUT_CLASSIFICATION	5.647068033692245E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999926502332006	WITHOUT_CLASSIFICATION	7.349766799374138E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.999999883259362	WITHOUT_CLASSIFICATION	1.1674063803503374E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999998813591614	WITHOUT_CLASSIFICATION	1.1864083863862948E-7	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999990973195532	WITHOUT_CLASSIFICATION	9.026804469256119E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999900868885824	WITHOUT_CLASSIFICATION	9.91311141762305E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999967694649063	WITHOUT_CLASSIFICATION	3.230535093598964E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999989155728792	WITHOUT_CLASSIFICATION	1.0844271207941898E-6	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.999998114565525	WITHOUT_CLASSIFICATION	1.8854344750545421E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.999998080128299	WITHOUT_CLASSIFICATION	1.919871700905331E-6	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999949095099674	WITHOUT_CLASSIFICATION	5.090490032605397E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999999215861991	WITHOUT_CLASSIFICATION	7.841380090307502E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9956758627452168	WITHOUT_CLASSIFICATION	0.0043241372547831985	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9956758627452168	WITHOUT_CLASSIFICATION	0.0043241372547831985	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9988620660318723	WITHOUT_CLASSIFICATION	0.0011379339681276404	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9988620660318723	WITHOUT_CLASSIFICATION	0.0011379339681276404	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999995086679404	WITHOUT_CLASSIFICATION	4.913320596610341E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999763875937346	WITHOUT_CLASSIFICATION	2.3612406265334332E-5	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.999999898019177	WITHOUT_CLASSIFICATION	1.0198082304958322E-7	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.999999759734805	WITHOUT_CLASSIFICATION	2.402651949704909E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999932311837532	WITHOUT_CLASSIFICATION	6.768816246842694E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999826188487276	WITHOUT_CLASSIFICATION	1.738115127233854E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999998413925969	WITHOUT_CLASSIFICATION	1.586074030357655E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.997443211248742	WITHOUT_CLASSIFICATION	0.002556788751258062	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999979815331387	WITHOUT_CLASSIFICATION	2.018466861306772E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999649870595285	WITHOUT_CLASSIFICATION	3.50129404715466E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999996413157187	WITHOUT_CLASSIFICATION	3.586842813469389E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999983967058491	WITHOUT_CLASSIFICATION	1.6032941509336077E-6	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999997813741843	WITHOUT_CLASSIFICATION	2.186258157151249E-7	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999966538266	WITHOUT_CLASSIFICATION	3.346173378571774E-9	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999980690199797	WITHOUT_CLASSIFICATION	1.930980020382176E-6	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999995789296328	WITHOUT_CLASSIFICATION	4.2107036732306356E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999998542864063	WITHOUT_CLASSIFICATION	1.4571359382464228E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9998580162812621	WITHOUT_CLASSIFICATION	1.4198371873780212E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999926386722041	WITHOUT_CLASSIFICATION	7.3613277958437315E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999277392127255	WITHOUT_CLASSIFICATION	7.226078727458862E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999033386833	WITHOUT_CLASSIFICATION	9.666131676829451E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999998211134201	WITHOUT_CLASSIFICATION	1.7888657999197854E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.999993874261359	WITHOUT_CLASSIFICATION	6.12573864104366E-6	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999255752254	WITHOUT_CLASSIFICATION	7.442477459991113E-5	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999995092548477	WITHOUT_CLASSIFICATION	4.907451523192306E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999748063549749	WITHOUT_CLASSIFICATION	2.5193645025057378E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999956756999336	WITHOUT_CLASSIFICATION	4.3243000663996575E-6	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9989055135425731	WITHOUT_CLASSIFICATION	0.0010944864574269956	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999994046154276	WITHOUT_CLASSIFICATION	5.953845725454163E-7	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9995958606522916	WITHOUT_CLASSIFICATION	4.0413934770843927E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999998719380472	WITHOUT_CLASSIFICATION	1.2806195279471733E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999965276478585	WITHOUT_CLASSIFICATION	3.472352141470749E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999990983786948	WITHOUT_CLASSIFICATION	9.016213051814954E-7	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999781479096721	WITHOUT_CLASSIFICATION	2.1852090327812386E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999998627405838	WITHOUT_CLASSIFICATION	1.372594162092115E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.999962025082577	WITHOUT_CLASSIFICATION	3.7974917423027696E-5	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999867414062088	WITHOUT_CLASSIFICATION	1.3258593791140715E-5	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999985219559342	WITHOUT_CLASSIFICATION	1.4780440657513844E-6	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9990162552348767	WITHOUT_CLASSIFICATION	9.837447651233823E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999998499859938	WITHOUT_CLASSIFICATION	1.500140061203735E-7	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999754995798	WITHOUT_CLASSIFICATION	2.4500420258194154E-8	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999943186392017	WITHOUT_CLASSIFICATION	5.681360798244264E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999849509506342	WITHOUT_CLASSIFICATION	1.5049049365731452E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999872835229767	WITHOUT_CLASSIFICATION	1.2716477023247952E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999874798591284	WITHOUT_CLASSIFICATION	1.2520140871603081E-5	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999827261444728	WITHOUT_CLASSIFICATION	1.7273855527180975E-5	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999692097200997	WITHOUT_CLASSIFICATION	3.0790279900236176E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999802133384879	WITHOUT_CLASSIFICATION	1.9786661512139073E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999999214118999	WITHOUT_CLASSIFICATION	7.858810012486788E-8	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999927499831452	WITHOUT_CLASSIFICATION	7.250016854683064E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999960720014832	WITHOUT_CLASSIFICATION	3.927998516793092E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999999990380064	WITHOUT_CLASSIFICATION	9.619935983214908E-9	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.999896796744237	WITHOUT_CLASSIFICATION	1.0320325576291652E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9986293828155782	WITHOUT_CLASSIFICATION	0.0013706171844217266	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999999380750005	WITHOUT_CLASSIFICATION	6.192499947317114E-8	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999996401333521	WITHOUT_CLASSIFICATION	3.5986664789396357E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9497104683124757	WITHOUT_CLASSIFICATION	0.0502895316875243	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.99891533674916	WITHOUT_CLASSIFICATION	0.001084663250840066	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999910251042636	WITHOUT_CLASSIFICATION	8.974895736284969E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999998894052067	WITHOUT_CLASSIFICATION	1.1059479332238416E-7	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999681729699	WITHOUT_CLASSIFICATION	3.182703011184594E-8	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999965923547074	WITHOUT_CLASSIFICATION	3.407645292542708E-6	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999982346655505	WITHOUT_CLASSIFICATION	1.7653344494102223E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.999998131626739	WITHOUT_CLASSIFICATION	1.8683732609721731E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.99995000185306	WITHOUT_CLASSIFICATION	4.9998146939942545E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999991462781406	WITHOUT_CLASSIFICATION	8.537218594506706E-7	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999549851973	WITHOUT_CLASSIFICATION	4.5014802737422006E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999333169606183	WITHOUT_CLASSIFICATION	6.668303938177593E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999981029435152	WITHOUT_CLASSIFICATION	1.897056484788853E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999996737390662	WITHOUT_CLASSIFICATION	3.262609338997203E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999998516591644	WITHOUT_CLASSIFICATION	1.4834083560926188E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9998680942549126	WITHOUT_CLASSIFICATION	1.319057450874194E-4	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999999540369618	WITHOUT_CLASSIFICATION	4.5963038147639184E-8	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999998842091208	WITHOUT_CLASSIFICATION	1.1579087914499653E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999998746661366	WITHOUT_CLASSIFICATION	1.2533386348546694E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999993854058187	WITHOUT_CLASSIFICATION	6.1459418129562E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999999868446758	WITHOUT_CLASSIFICATION	1.3155324237763748E-8	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999984101796157	WITHOUT_CLASSIFICATION	1.5898203843923288E-6	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999988318792568	WITHOUT_CLASSIFICATION	1.1681207432590615E-6	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999993032321458	WITHOUT_CLASSIFICATION	6.967678541714131E-7	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999990760907382	WITHOUT_CLASSIFICATION	9.239092617625469E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9998298518525915	WITHOUT_CLASSIFICATION	1.7014814740851032E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999981544173209	WITHOUT_CLASSIFICATION	1.845582679161389E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999791063228078	WITHOUT_CLASSIFICATION	2.0893677192194998E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999950858735019	WITHOUT_CLASSIFICATION	4.914126498108056E-6	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999970938672076	WITHOUT_CLASSIFICATION	2.90613279236218E-6	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999999750635583	WITHOUT_CLASSIFICATION	2.493644161403729E-8	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999995888295026	WITHOUT_CLASSIFICATION	4.1117049744475535E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999995888295026	WITHOUT_CLASSIFICATION	4.1117049744475535E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999946334185	WITHOUT_CLASSIFICATION	5.366581559316432E-9	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999997571333225	WITHOUT_CLASSIFICATION	2.428666775784243E-7	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999991568029081	WITHOUT_CLASSIFICATION	8.431970919542025E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.999999561046935	WITHOUT_CLASSIFICATION	4.389530650889529E-7	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999988791936213	WITHOUT_CLASSIFICATION	1.1208063787074588E-6	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999997670950769	WITHOUT_CLASSIFICATION	2.3290492314642674E-7	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999812566843	WITHOUT_CLASSIFICATION	1.874331571478299E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999995970736183	WITHOUT_CLASSIFICATION	4.0292638168556885E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999912936834	WITHOUT_CLASSIFICATION	8.706316592399994E-9	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.999997885058148	WITHOUT_CLASSIFICATION	2.1149418519711908E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.999999679051274	WITHOUT_CLASSIFICATION	3.2094872604295374E-7	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999811838668669	WITHOUT_CLASSIFICATION	1.8816133133150108E-5	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999993436280918	WITHOUT_CLASSIFICATION	6.563719082421879E-7	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999582227433829	WITHOUT_CLASSIFICATION	4.177725661705953E-5	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999996547792173	WITHOUT_CLASSIFICATION	3.4522078282430244E-7	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.999792601104441	WITHOUT_CLASSIFICATION	2.0739889555907617E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999994830450518	WITHOUT_CLASSIFICATION	5.169549481380503E-7	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999921332655	WITHOUT_CLASSIFICATION	7.866734479326425E-9	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.999998291398395	WITHOUT_CLASSIFICATION	1.7086016049763496E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9998568843034196	WITHOUT_CLASSIFICATION	1.4311569658052745E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999999771442332	WITHOUT_CLASSIFICATION	2.2855766848979195E-8	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999996946394215	WITHOUT_CLASSIFICATION	3.0536057850346485E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999995739387729	WITHOUT_CLASSIFICATION	4.260612270844318E-7	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999984269707464	WITHOUT_CLASSIFICATION	1.573029253626248E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999998226150193	WITHOUT_CLASSIFICATION	1.7738498064469404E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999960292752634	WITHOUT_CLASSIFICATION	3.970724736567822E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.999993008508359	WITHOUT_CLASSIFICATION	6.991491641047056E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999953732227046	WITHOUT_CLASSIFICATION	4.626777295386943E-6	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999986171116167	WITHOUT_CLASSIFICATION	1.3828883832011845E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.999999299333455	WITHOUT_CLASSIFICATION	7.006665450452825E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9997661184388961	WITHOUT_CLASSIFICATION	2.3388156110383933E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.999998740078819	WITHOUT_CLASSIFICATION	1.2599211810219336E-6	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999995821910187	WITHOUT_CLASSIFICATION	4.178089813949166E-7	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999975699290147	WITHOUT_CLASSIFICATION	2.430070985227326E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999869858038	WITHOUT_CLASSIFICATION	1.3014196055727447E-8	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999999726300338	WITHOUT_CLASSIFICATION	2.736996620186508E-8	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999988093933116	WITHOUT_CLASSIFICATION	1.1906066883510579E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999663467303	WITHOUT_CLASSIFICATION	3.3653269759364825E-8	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999993951638408	WITHOUT_CLASSIFICATION	6.048361591015864E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999942666782559	WITHOUT_CLASSIFICATION	5.733321744040399E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999946295014913	WITHOUT_CLASSIFICATION	5.370498508677842E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9996106878439233	WITHOUT_CLASSIFICATION	3.893121560767371E-4	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999993509780875	WITHOUT_CLASSIFICATION	6.490219125394711E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999908469332353	WITHOUT_CLASSIFICATION	9.153066764645365E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999908469332353	WITHOUT_CLASSIFICATION	9.153066764645365E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999809020844304	WITHOUT_CLASSIFICATION	1.9097915569607082E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999809020844304	WITHOUT_CLASSIFICATION	1.9097915569607082E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999992841956792	WITHOUT_CLASSIFICATION	7.158043209226622E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999863548971021	WITHOUT_CLASSIFICATION	1.3645102898037773E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999997348999696	WITHOUT_CLASSIFICATION	2.6510003042216076E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999991992586579	WITHOUT_CLASSIFICATION	8.007413422213847E-7	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999752485001908	WITHOUT_CLASSIFICATION	2.4751499809227226E-5	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999987837828397	WITHOUT_CLASSIFICATION	1.2162171602912204E-6	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999996709898384	WITHOUT_CLASSIFICATION	3.2901016162643487E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999996292014859	WITHOUT_CLASSIFICATION	3.70798514174123E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999999108494921	WITHOUT_CLASSIFICATION	8.915050781970588E-8	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999999108494921	WITHOUT_CLASSIFICATION	8.915050781970588E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999852792949195	WITHOUT_CLASSIFICATION	1.4720705080547822E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999852792949195	WITHOUT_CLASSIFICATION	1.4720705080547822E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999655203851	WITHOUT_CLASSIFICATION	3.4479614949611586E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999990019523255	WITHOUT_CLASSIFICATION	9.980476744729264E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999784653067224	WITHOUT_CLASSIFICATION	2.1534693277582017E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999454116986537	WITHOUT_CLASSIFICATION	5.4588301346210016E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999994491550352	WITHOUT_CLASSIFICATION	5.508449647959788E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999994491550352	WITHOUT_CLASSIFICATION	5.508449647959788E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999907498114352	WITHOUT_CLASSIFICATION	9.250188564795917E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999907498114352	WITHOUT_CLASSIFICATION	9.250188564795917E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999765512516998	WITHOUT_CLASSIFICATION	2.3448748300202123E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999765512516998	WITHOUT_CLASSIFICATION	2.3448748300202123E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9997854791670225	WITHOUT_CLASSIFICATION	2.145208329774467E-4	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999997611232613	WITHOUT_CLASSIFICATION	2.388767387491086E-7	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.999927569340026	WITHOUT_CLASSIFICATION	7.243065997404543E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999415841014215	WITHOUT_CLASSIFICATION	5.8415898578488306E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999993430654226	WITHOUT_CLASSIFICATION	6.569345773882301E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.999999310669462	WITHOUT_CLASSIFICATION	6.893305380854143E-7	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999980555777056	WITHOUT_CLASSIFICATION	1.944422294451807E-6	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999996222238117	WITHOUT_CLASSIFICATION	3.777761883927514E-7	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999996230658954	WITHOUT_CLASSIFICATION	3.7693410460222E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999998974683335	WITHOUT_CLASSIFICATION	1.025316665897784E-7	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999996980150463	WITHOUT_CLASSIFICATION	3.0198495372762044E-7	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.999998903307838	WITHOUT_CLASSIFICATION	1.0966921619540927E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999963477283239	WITHOUT_CLASSIFICATION	3.652271676114266E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999998127428652	WITHOUT_CLASSIFICATION	1.8725713492874032E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999999753034788	WITHOUT_CLASSIFICATION	2.4696521175211514E-8	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.99999122791447	WITHOUT_CLASSIFICATION	8.772085529973972E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999934346499402	WITHOUT_CLASSIFICATION	6.565350059828597E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999954468401056	WITHOUT_CLASSIFICATION	4.55315989454983E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999994526781	WITHOUT_CLASSIFICATION	5.473218093416437E-10	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999657972208502	WITHOUT_CLASSIFICATION	3.4202779149877445E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999961790493217	WITHOUT_CLASSIFICATION	3.8209506783016246E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999957554457718	WITHOUT_CLASSIFICATION	4.244554228202145E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999988008307251	WITHOUT_CLASSIFICATION	1.1991692749238063E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999930316539354	WITHOUT_CLASSIFICATION	6.968346064645513E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999709914144047	WITHOUT_CLASSIFICATION	2.900858559531616E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999992427137179	WITHOUT_CLASSIFICATION	7.572862820183462E-7	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.999992494841747	WITHOUT_CLASSIFICATION	7.505158252999875E-6	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.999895720388207	WITHOUT_CLASSIFICATION	1.0427961179306655E-4	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9988109561039015	WITHOUT_CLASSIFICATION	0.001189043896098586	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999978978787392	WITHOUT_CLASSIFICATION	2.1021212609406447E-6	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999998554436906	WITHOUT_CLASSIFICATION	1.4455630932544178E-7	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999986850883478	WITHOUT_CLASSIFICATION	1.3149116521967357E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999857436775826	WITHOUT_CLASSIFICATION	1.4256322417434726E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999993535257755	WITHOUT_CLASSIFICATION	6.46474224519213E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9998829894274781	WITHOUT_CLASSIFICATION	1.1701057252191584E-4	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999998316302474	WITHOUT_CLASSIFICATION	1.6836975266648374E-7	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999997095091524	WITHOUT_CLASSIFICATION	2.904908476003673E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999992920492875	WITHOUT_CLASSIFICATION	7.079507125268587E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999512142164	WITHOUT_CLASSIFICATION	4.878578370453175E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999950152956044	WITHOUT_CLASSIFICATION	4.9847043955881185E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999353706902412	WITHOUT_CLASSIFICATION	6.462930975880824E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999999510850066	WITHOUT_CLASSIFICATION	4.8914993520259044E-8	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.999999981259945	WITHOUT_CLASSIFICATION	1.8740054946962435E-8	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999993553353311	WITHOUT_CLASSIFICATION	6.446646689090207E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999599780195	WITHOUT_CLASSIFICATION	4.002198061688169E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999997366457166	WITHOUT_CLASSIFICATION	2.633542833886481E-7	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9992448599420172	WITHOUT_CLASSIFICATION	7.551400579827047E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999858030940256	WITHOUT_CLASSIFICATION	1.4196905974302256E-5	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999998710776881	WITHOUT_CLASSIFICATION	1.2892231196699752E-7	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999990174449416	WITHOUT_CLASSIFICATION	9.825550583695058E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999998902591478	WITHOUT_CLASSIFICATION	1.097408522463413E-7	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999993843322316	WITHOUT_CLASSIFICATION	6.156677684177003E-7	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9978388296481105	WITHOUT_CLASSIFICATION	0.0021611703518893454	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9988909868204222	WITHOUT_CLASSIFICATION	0.0011090131795778004	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9974615636943187	WITHOUT_CLASSIFICATION	0.002538436305681373	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999997633256734	WITHOUT_CLASSIFICATION	2.3667432655832424E-7	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999039518982953	WITHOUT_CLASSIFICATION	9.604810170459548E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999978894205149	WITHOUT_CLASSIFICATION	2.1105794850466387E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999998360300923	WITHOUT_CLASSIFICATION	1.6396990765702444E-7	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999959811941826	WITHOUT_CLASSIFICATION	4.018805817279673E-6	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999977916179235	WITHOUT_CLASSIFICATION	2.2083820766076823E-6	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999996742236201	WITHOUT_CLASSIFICATION	3.2577637990876936E-7	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999988886500373	WITHOUT_CLASSIFICATION	1.111349962747165E-6	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999986775473699	WITHOUT_CLASSIFICATION	1.3224526301233593E-6	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999922474816751	WITHOUT_CLASSIFICATION	7.752518324946436E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999784585074775	WITHOUT_CLASSIFICATION	2.1541492522557148E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999793177577	WITHOUT_CLASSIFICATION	2.0682242229697412E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999996203194483	WITHOUT_CLASSIFICATION	3.7968055168613815E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999996410540948	WITHOUT_CLASSIFICATION	3.5894590518439694E-7	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999986855553316	WITHOUT_CLASSIFICATION	1.3144446684107694E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999988372908	WITHOUT_CLASSIFICATION	1.162709193127526E-9	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999971655995212	WITHOUT_CLASSIFICATION	2.8344004787069826E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999853929291695	WITHOUT_CLASSIFICATION	1.4607070830517683E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999996993505614	WITHOUT_CLASSIFICATION	3.0064943857886603E-7	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999715071973356	WITHOUT_CLASSIFICATION	2.849280266439576E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999999047124348	WITHOUT_CLASSIFICATION	9.52875651628642E-8	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999932247341261	WITHOUT_CLASSIFICATION	6.775265873905098E-6	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9962684792450831	WITHOUT_CLASSIFICATION	0.003731520754916958	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999924179429327	WITHOUT_CLASSIFICATION	7.582057067267794E-6	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999170847403348	WITHOUT_CLASSIFICATION	8.291525966511996E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999923648855276	WITHOUT_CLASSIFICATION	7.635114472423611E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.999965842936625	WITHOUT_CLASSIFICATION	3.415706337494061E-5	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9996921062295472	WITHOUT_CLASSIFICATION	3.078937704528157E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999996694341878	WITHOUT_CLASSIFICATION	3.305658122253792E-7	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999746706873145	WITHOUT_CLASSIFICATION	2.5329312685542668E-5	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.999963937679752	WITHOUT_CLASSIFICATION	3.606232024790093E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999033015926968	WITHOUT_CLASSIFICATION	9.669840730318692E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999761324253978	WITHOUT_CLASSIFICATION	2.3867574602227717E-5	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999766404032766	WITHOUT_CLASSIFICATION	2.3359596723433396E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999997201281137	WITHOUT_CLASSIFICATION	2.7987188633322985E-7	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999502264246765	WITHOUT_CLASSIFICATION	4.977357532344819E-5	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9997645646358299	WITHOUT_CLASSIFICATION	2.354353641701658E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999839094752643	WITHOUT_CLASSIFICATION	1.609052473575576E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999969200886947	WITHOUT_CLASSIFICATION	3.079911305416405E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999958633915955	WITHOUT_CLASSIFICATION	4.136608404473169E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999986768365753	WITHOUT_CLASSIFICATION	1.3231634246719258E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999961708536838	WITHOUT_CLASSIFICATION	3.8291463161957326E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999843914732077	WITHOUT_CLASSIFICATION	1.560852679227942E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999852365483998	WITHOUT_CLASSIFICATION	1.4763451600084192E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999852365483998	WITHOUT_CLASSIFICATION	1.4763451600084192E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999982248113889	WITHOUT_CLASSIFICATION	1.7751886110993572E-6	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999956691150109	WITHOUT_CLASSIFICATION	4.330884989074049E-6	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999995752491417	WITHOUT_CLASSIFICATION	4.247508583405444E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999992816941478	WITHOUT_CLASSIFICATION	7.183058522890853E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999993211798788	WITHOUT_CLASSIFICATION	6.78820121199426E-7	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999993224223263	WITHOUT_CLASSIFICATION	6.775776737620666E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999998406234641	WITHOUT_CLASSIFICATION	1.593765358823865E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999991310031382	WITHOUT_CLASSIFICATION	8.689968618015587E-7	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999999242032207	WITHOUT_CLASSIFICATION	7.579677920609364E-8	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999998151029126	WITHOUT_CLASSIFICATION	1.848970873614984E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999996938176471	WITHOUT_CLASSIFICATION	3.0618235289116597E-7	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999998951359297	WITHOUT_CLASSIFICATION	1.0486407042246073E-7	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999970612001434	WITHOUT_CLASSIFICATION	2.938799856604798E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999972488166247	WITHOUT_CLASSIFICATION	2.751183375321353E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999599149225769	WITHOUT_CLASSIFICATION	4.008507742311495E-5	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.999998291376227	WITHOUT_CLASSIFICATION	1.7086237730132751E-6	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999996917037954	WITHOUT_CLASSIFICATION	3.082962045942626E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999281184703679	WITHOUT_CLASSIFICATION	7.188152963213722E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999996795722144	WITHOUT_CLASSIFICATION	3.204277855282505E-7	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.999999230649189	WITHOUT_CLASSIFICATION	7.693508109382647E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999998802331764	WITHOUT_CLASSIFICATION	1.1976682355068765E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999378277409311	WITHOUT_CLASSIFICATION	6.217225906897362E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999975009981187	WITHOUT_CLASSIFICATION	2.4990018813939254E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999997930613652	WITHOUT_CLASSIFICATION	2.0693863479645012E-7	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999795217234129	WITHOUT_CLASSIFICATION	2.0478276587128325E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999998577119523	WITHOUT_CLASSIFICATION	1.422880477177463E-7	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.999999351092744	WITHOUT_CLASSIFICATION	6.489072559109443E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.999999189914897	WITHOUT_CLASSIFICATION	8.100851030794827E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999993814487727	WITHOUT_CLASSIFICATION	6.185512273224955E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999897611106818	WITHOUT_CLASSIFICATION	1.0238889318195438E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999989800060586	WITHOUT_CLASSIFICATION	1.0199939413756103E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999985939530467	WITHOUT_CLASSIFICATION	1.4060469533847968E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999979754281466	WITHOUT_CLASSIFICATION	2.024571853316811E-6	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999970603914589	WITHOUT_CLASSIFICATION	2.939608541105625E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999964284799828	WITHOUT_CLASSIFICATION	3.571520017092206E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999818591157982	WITHOUT_CLASSIFICATION	1.8140884201807643E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9998875866909849	WITHOUT_CLASSIFICATION	1.1241330901510956E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999993814487727	WITHOUT_CLASSIFICATION	6.185512273224955E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999999019577311	WITHOUT_CLASSIFICATION	9.804226890691548E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999990752208202	WITHOUT_CLASSIFICATION	9.247791797569454E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999981992502274	WITHOUT_CLASSIFICATION	1.8007497726289979E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.999989612029724	WITHOUT_CLASSIFICATION	1.0387970275945793E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999916692644575	WITHOUT_CLASSIFICATION	8.33073554258752E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999779581937271	WITHOUT_CLASSIFICATION	2.2041806272881313E-5	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999982800338048	WITHOUT_CLASSIFICATION	1.7199661952027146E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999707409691581	WITHOUT_CLASSIFICATION	2.925903084192656E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999947383064226	WITHOUT_CLASSIFICATION	5.261693577479255E-6	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999928791012499	WITHOUT_CLASSIFICATION	7.1208987501365474E-6	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999948165363668	WITHOUT_CLASSIFICATION	5.183463633154572E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999934902146197	WITHOUT_CLASSIFICATION	6.50978538027862E-6	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999973033878664	WITHOUT_CLASSIFICATION	2.696612133613338E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999581879957532	WITHOUT_CLASSIFICATION	4.181200424678142E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999926066591125	WITHOUT_CLASSIFICATION	7.3933408875801386E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.999940787833945	WITHOUT_CLASSIFICATION	5.921216605504391E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.999940787833945	WITHOUT_CLASSIFICATION	5.921216605504391E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999988227734287	WITHOUT_CLASSIFICATION	1.1772265712881295E-6	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999548198311775	WITHOUT_CLASSIFICATION	4.518016882255428E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999998075299454	WITHOUT_CLASSIFICATION	1.9247005454384443E-7	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999966883639028	WITHOUT_CLASSIFICATION	3.311636097236944E-6	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999934257215	WITHOUT_CLASSIFICATION	6.574278497386695E-9	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.999999225335031	WITHOUT_CLASSIFICATION	7.746649690238419E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999999700445693	WITHOUT_CLASSIFICATION	2.995543070825832E-8	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999815377784586	WITHOUT_CLASSIFICATION	1.846222154147777E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999995214346789	WITHOUT_CLASSIFICATION	4.785653210868917E-7	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999999788925178	WITHOUT_CLASSIFICATION	2.1107482222001777E-8	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999806636822034	WITHOUT_CLASSIFICATION	1.9336317796662395E-5	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9999377556917605	WITHOUT_CLASSIFICATION	6.224430823955233E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999882349961	WITHOUT_CLASSIFICATION	1.1765003887893922E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999952933765933	WITHOUT_CLASSIFICATION	4.70662340667693E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999952933765933	WITHOUT_CLASSIFICATION	4.70662340667693E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999998075299454	WITHOUT_CLASSIFICATION	1.9247005454384443E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999806636822034	WITHOUT_CLASSIFICATION	1.9336317796662395E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999999649509286	WITHOUT_CLASSIFICATION	3.504907140021903E-7	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9998958463640272	WITHOUT_CLASSIFICATION	1.0415363597292584E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999947668704708	WITHOUT_CLASSIFICATION	5.233129529193756E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999947439023688	WITHOUT_CLASSIFICATION	5.256097631167866E-6	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999950575122196	WITHOUT_CLASSIFICATION	4.942487780478862E-6	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999991183781031	WITHOUT_CLASSIFICATION	8.816218969021807E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999967446569132	WITHOUT_CLASSIFICATION	3.2553430868746375E-6	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999871172093883	WITHOUT_CLASSIFICATION	1.2882790611746584E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999149226897	WITHOUT_CLASSIFICATION	8.507731031591436E-8	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999995210653827	WITHOUT_CLASSIFICATION	4.789346173603027E-7	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9996788381004043	WITHOUT_CLASSIFICATION	3.2116189959568054E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.999713349746225	WITHOUT_CLASSIFICATION	2.8665025377497955E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999999596892487	WITHOUT_CLASSIFICATION	4.031075127810529E-8	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999844179011583	WITHOUT_CLASSIFICATION	1.5582098841640626E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999992785515998	WITHOUT_CLASSIFICATION	7.214484001976879E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999978812293002	WITHOUT_CLASSIFICATION	2.118770699698284E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999805111628397	WITHOUT_CLASSIFICATION	1.9488837160349036E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.999998871464672	WITHOUT_CLASSIFICATION	1.128535327979424E-6	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999961898652615	WITHOUT_CLASSIFICATION	3.810134738535538E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999998794242836	WITHOUT_CLASSIFICATION	1.2057571648141942E-7	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999340354344469	WITHOUT_CLASSIFICATION	6.596456555303659E-5	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.999999367331016	WITHOUT_CLASSIFICATION	6.326689840257913E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999754617816025	WITHOUT_CLASSIFICATION	2.4538218397510788E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999898962889366	WITHOUT_CLASSIFICATION	1.0103711063397988E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999896734298	WITHOUT_CLASSIFICATION	1.032657015032622E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999985339413644	WITHOUT_CLASSIFICATION	1.4660586356561255E-6	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999979594378289	WITHOUT_CLASSIFICATION	2.0405621711108945E-6	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999758394509788	WITHOUT_CLASSIFICATION	2.4160549021217136E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999996581381345	WITHOUT_CLASSIFICATION	3.4186186547596783E-7	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999998129942425	WITHOUT_CLASSIFICATION	1.870057576128313E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999970648449298	WITHOUT_CLASSIFICATION	2.9351550701450562E-6	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999722290361005	WITHOUT_CLASSIFICATION	2.777096389958532E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999115419167	WITHOUT_CLASSIFICATION	8.845808329126133E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999396595024	WITHOUT_CLASSIFICATION	6.034049759421462E-8	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999804358708	WITHOUT_CLASSIFICATION	1.9564129119550145E-8	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999950674881884	WITHOUT_CLASSIFICATION	4.932511811580618E-6	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999995084648073	WITHOUT_CLASSIFICATION	4.915351926089784E-7	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999998208648063	WITHOUT_CLASSIFICATION	1.79135193679669E-7	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999997332649428	WITHOUT_CLASSIFICATION	2.6673505713421807E-7	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999998955874317	WITHOUT_CLASSIFICATION	1.0441256830652331E-7	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.999999784216398	WITHOUT_CLASSIFICATION	2.1578360202179305E-7	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999998435956262	WITHOUT_CLASSIFICATION	1.5640437384252277E-7	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999968655199029	WITHOUT_CLASSIFICATION	3.134480097189581E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999963866842618	WITHOUT_CLASSIFICATION	3.613315738094641E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999672058076836	WITHOUT_CLASSIFICATION	3.279419231635734E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.99999598457131	WITHOUT_CLASSIFICATION	4.015428689975144E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999739029996146	WITHOUT_CLASSIFICATION	2.609700038529299E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999998598451417	WITHOUT_CLASSIFICATION	1.40154858194203E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.999999877143578	WITHOUT_CLASSIFICATION	1.2285642203460698E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964720276546	WITHOUT_CLASSIFICATION	3.527972345335862E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999965276478585	WITHOUT_CLASSIFICATION	3.472352141470749E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999896134599026	WITHOUT_CLASSIFICATION	1.0386540097446677E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999991879060665	WITHOUT_CLASSIFICATION	8.120939334965788E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991562839223711	WITHOUT_CLASSIFICATION	8.437160776288822E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999044410679	WITHOUT_CLASSIFICATION	9.555893218395576E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999974315477039	WITHOUT_CLASSIFICATION	2.568452296133194E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999908389806001	WITHOUT_CLASSIFICATION	9.161019399816037E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999581077886	WITHOUT_CLASSIFICATION	4.189221139060183E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996973169313	WITHOUT_CLASSIFICATION	3.026830686717593E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999948222041979	WITHOUT_CLASSIFICATION	5.17779580210399E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999971310956216	WITHOUT_CLASSIFICATION	2.8689043783350394E-6	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999213632840422	WITHOUT_CLASSIFICATION	7.863671595774198E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999946212062552	WITHOUT_CLASSIFICATION	5.378793744814023E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.999961020414541	WITHOUT_CLASSIFICATION	3.897958545903244E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999850458495703	WITHOUT_CLASSIFICATION	1.4954150429732552E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999850458495703	WITHOUT_CLASSIFICATION	1.4954150429732552E-5	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999773946642725	WITHOUT_CLASSIFICATION	2.2605335727579642E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999908861934543	WITHOUT_CLASSIFICATION	9.113806545675091E-6	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999925316636982	WITHOUT_CLASSIFICATION	7.468336301865006E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999942503875755	WITHOUT_CLASSIFICATION	5.749612424564404E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999942503875755	WITHOUT_CLASSIFICATION	5.749612424564404E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999942503875755	WITHOUT_CLASSIFICATION	5.749612424564404E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999995546521116	WITHOUT_CLASSIFICATION	4.453478883915654E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999998719380472	WITHOUT_CLASSIFICATION	1.2806195279471733E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999831749725	WITHOUT_CLASSIFICATION	1.6825027559859852E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999985339413644	WITHOUT_CLASSIFICATION	1.4660586356561255E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999984680775826	WITHOUT_CLASSIFICATION	1.5319224173392411E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999791909537543	WITHOUT_CLASSIFICATION	2.080904624565674E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999989438961365	WITHOUT_CLASSIFICATION	1.056103863490414E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998341438905	WITHOUT_CLASSIFICATION	1.6585610946044443E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999991879060665	WITHOUT_CLASSIFICATION	8.120939334965788E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991562839223711	WITHOUT_CLASSIFICATION	8.437160776288822E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999044410679	WITHOUT_CLASSIFICATION	9.555893218395576E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999996744142936	WITHOUT_CLASSIFICATION	3.2558570641868413E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998814050549	WITHOUT_CLASSIFICATION	1.1859494508716262E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999854183687752	WITHOUT_CLASSIFICATION	1.458163122478782E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999961929979894	WITHOUT_CLASSIFICATION	3.807002010592266E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999498235316567	WITHOUT_CLASSIFICATION	5.01764683432671E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999348916277618	WITHOUT_CLASSIFICATION	6.51083722381284E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996624177631387	WITHOUT_CLASSIFICATION	3.375822368613365E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999998953829152	WITHOUT_CLASSIFICATION	1.046170848523561E-7	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999206378384662	WITHOUT_CLASSIFICATION	7.936216153380391E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.999922093785728	WITHOUT_CLASSIFICATION	7.790621427194641E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999164362764399	WITHOUT_CLASSIFICATION	8.356372356011807E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999205566845017	WITHOUT_CLASSIFICATION	7.944331549829283E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999998550510507	WITHOUT_CLASSIFICATION	1.449489492950656E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.999999449100266	WITHOUT_CLASSIFICATION	5.508997341117107E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9997689439326524	WITHOUT_CLASSIFICATION	2.3105606734769295E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999227632160985	WITHOUT_CLASSIFICATION	7.723678390148758E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998394380900962	WITHOUT_CLASSIFICATION	1.6056190990364132E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998097110167199	WITHOUT_CLASSIFICATION	1.902889832800675E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9997592939402713	WITHOUT_CLASSIFICATION	2.4070605972875976E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999935982080393	WITHOUT_CLASSIFICATION	6.401791960767148E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999996141478092	WITHOUT_CLASSIFICATION	3.85852190781011E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999896134599026	WITHOUT_CLASSIFICATION	1.0386540097446677E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999581077886	WITHOUT_CLASSIFICATION	4.189221139060183E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996973169313	WITHOUT_CLASSIFICATION	3.026830686717593E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999948222041979	WITHOUT_CLASSIFICATION	5.17779580210399E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998814050549	WITHOUT_CLASSIFICATION	1.1859494508716262E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999854183687752	WITHOUT_CLASSIFICATION	1.458163122478782E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999961929979894	WITHOUT_CLASSIFICATION	3.807002010592266E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999498235316567	WITHOUT_CLASSIFICATION	5.01764683432671E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999348916277618	WITHOUT_CLASSIFICATION	6.51083722381284E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999979819631983	WITHOUT_CLASSIFICATION	2.018036801606362E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999084032511344	WITHOUT_CLASSIFICATION	9.15967488655842E-5	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999980527530603	WITHOUT_CLASSIFICATION	1.9472469396840523E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999660607496662	WITHOUT_CLASSIFICATION	3.393925033390143E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999660607496662	WITHOUT_CLASSIFICATION	3.393925033390143E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999660607496662	WITHOUT_CLASSIFICATION	3.393925033390143E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999660607496662	WITHOUT_CLASSIFICATION	3.393925033390143E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999660607496662	WITHOUT_CLASSIFICATION	3.393925033390143E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999988789215486	WITHOUT_CLASSIFICATION	1.1210784513917254E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999769933056	WITHOUT_CLASSIFICATION	2.3006694418212757E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999992938233806	WITHOUT_CLASSIFICATION	7.061766193055499E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999966754057038	WITHOUT_CLASSIFICATION	3.324594296192459E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999857019713492	WITHOUT_CLASSIFICATION	1.4298028650899288E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999950474979951	WITHOUT_CLASSIFICATION	4.952502004910886E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999999564699045	WITHOUT_CLASSIFICATION	4.3530095526498885E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999925086497395	WITHOUT_CLASSIFICATION	7.4913502604281256E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999856463345677	WITHOUT_CLASSIFICATION	1.4353665432220727E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999999108494921	WITHOUT_CLASSIFICATION	8.915050781970588E-8	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999999108494921	WITHOUT_CLASSIFICATION	8.915050781970588E-8	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999999108494921	WITHOUT_CLASSIFICATION	8.915050781970588E-8	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999605585723765	WITHOUT_CLASSIFICATION	3.9441427623426785E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999974595477775	WITHOUT_CLASSIFICATION	2.540452222487613E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999973366535243	WITHOUT_CLASSIFICATION	2.663346475693701E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999830438660877	WITHOUT_CLASSIFICATION	1.695613391221274E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999830438660877	WITHOUT_CLASSIFICATION	1.695613391221274E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999965348589899	WITHOUT_CLASSIFICATION	3.4651410101754984E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999830438660877	WITHOUT_CLASSIFICATION	1.695613391221274E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.999995199414196	WITHOUT_CLASSIFICATION	4.800585803940068E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998045683695284	WITHOUT_CLASSIFICATION	1.954316304716682E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999427986487356	WITHOUT_CLASSIFICATION	5.720135126443751E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999975101641871	WITHOUT_CLASSIFICATION	2.4898358128656848E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999975101641871	WITHOUT_CLASSIFICATION	2.4898358128656848E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.999999739866192	WITHOUT_CLASSIFICATION	2.6013380812740644E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999871089502544	WITHOUT_CLASSIFICATION	1.2891049745661279E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999349339866954	WITHOUT_CLASSIFICATION	6.506601330459418E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.999968453136666	WITHOUT_CLASSIFICATION	3.154686333397077E-5	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9996915531677197	WITHOUT_CLASSIFICATION	3.0844683228036017E-4	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999999110280448	WITHOUT_CLASSIFICATION	8.897195518489986E-8	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999984410030016	WITHOUT_CLASSIFICATION	1.5589969984317623E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999977389425483	WITHOUT_CLASSIFICATION	2.26105745173914E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.999999646578764	WITHOUT_CLASSIFICATION	3.534212360868415E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999915768781653	WITHOUT_CLASSIFICATION	8.423121834675805E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999972490417214	WITHOUT_CLASSIFICATION	2.750958278651249E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999915768781653	WITHOUT_CLASSIFICATION	8.423121834675805E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999995546521116	WITHOUT_CLASSIFICATION	4.453478883915654E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999942503875755	WITHOUT_CLASSIFICATION	5.749612424564404E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999437845498	WITHOUT_CLASSIFICATION	5.62154501728967E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999988110557497	WITHOUT_CLASSIFICATION	1.188944250273391E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999948555795427	WITHOUT_CLASSIFICATION	5.144420457331768E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999736500088678	WITHOUT_CLASSIFICATION	2.6349991132175197E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999995546521116	WITHOUT_CLASSIFICATION	4.453478883915654E-6	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999967598874534	WITHOUT_CLASSIFICATION	3.2401125465471025E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998512767487	WITHOUT_CLASSIFICATION	1.4872325131123225E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991148555245	WITHOUT_CLASSIFICATION	8.851444755020242E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999925190450788	WITHOUT_CLASSIFICATION	7.48095492131134E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999357737997928	WITHOUT_CLASSIFICATION	6.422620020712725E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999357737997928	WITHOUT_CLASSIFICATION	6.422620020712725E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999994144187133	WITHOUT_CLASSIFICATION	5.855812866892593E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999965394675	WITHOUT_CLASSIFICATION	3.4605324594371413E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999941819186	WITHOUT_CLASSIFICATION	5.818081333580561E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999773670506	WITHOUT_CLASSIFICATION	2.2632949435427496E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999636317591	WITHOUT_CLASSIFICATION	3.636824094718256E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999970228759	WITHOUT_CLASSIFICATION	2.9771242180406858E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999979699802	WITHOUT_CLASSIFICATION	2.030019825756616E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9997973058001774	WITHOUT_CLASSIFICATION	2.026941998225326E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999879277113014	WITHOUT_CLASSIFICATION	1.2072288698528305E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998146741700984	WITHOUT_CLASSIFICATION	1.853258299016031E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998136768158176	WITHOUT_CLASSIFICATION	1.8632318418237718E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998523116453026	WITHOUT_CLASSIFICATION	1.4768835469734746E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999525369476	WITHOUT_CLASSIFICATION	4.7463052413956426E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999069542126592	WITHOUT_CLASSIFICATION	9.304578734075068E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998931184300637	WITHOUT_CLASSIFICATION	1.0688156993636101E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999963484369	WITHOUT_CLASSIFICATION	3.6515631072278703E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999484981837	WITHOUT_CLASSIFICATION	5.150181638915592E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999998142700687	WITHOUT_CLASSIFICATION	1.8572993145578975E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999997855227765	WITHOUT_CLASSIFICATION	2.1447722345882238E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999993822004044	WITHOUT_CLASSIFICATION	6.177995956079447E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999978354375	WITHOUT_CLASSIFICATION	2.1645625774145628E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999998411190671	WITHOUT_CLASSIFICATION	1.5888093281986582E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999963484369	WITHOUT_CLASSIFICATION	3.6515631072278703E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999998126919054	WITHOUT_CLASSIFICATION	1.8730809459303068E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999627209964	WITHOUT_CLASSIFICATION	3.727900350412687E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999998377976045	WITHOUT_CLASSIFICATION	1.6220239558384122E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999312475171	WITHOUT_CLASSIFICATION	6.875248294112542E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999252612799	WITHOUT_CLASSIFICATION	7.473872010021878E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999998931207299	WITHOUT_CLASSIFICATION	1.0687927002376253E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.999999847377116	WITHOUT_CLASSIFICATION	1.5262288396061477E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999999739172794	WITHOUT_CLASSIFICATION	2.608272059927678E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999712659332	WITHOUT_CLASSIFICATION	2.8734066843357396E-8	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9996814117158228	WITHOUT_CLASSIFICATION	3.185882841772535E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9996814117158228	WITHOUT_CLASSIFICATION	3.185882841772535E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999978354375	WITHOUT_CLASSIFICATION	2.1645625774145628E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999936158797	WITHOUT_CLASSIFICATION	6.384120374956333E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999981954105	WITHOUT_CLASSIFICATION	1.8045894151510685E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999864296742	WITHOUT_CLASSIFICATION	1.3570325716151098E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.999999976786563	WITHOUT_CLASSIFICATION	2.3213436950913684E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999319094280269	WITHOUT_CLASSIFICATION	6.80905719730761E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999179596608327	WITHOUT_CLASSIFICATION	8.204033916720433E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999964779647983	WITHOUT_CLASSIFICATION	3.5220352017761236E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999998110771825	WITHOUT_CLASSIFICATION	1.889228176160201E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998200878119142	WITHOUT_CLASSIFICATION	1.7991218808579405E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998228613377165	WITHOUT_CLASSIFICATION	1.7713866228364795E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999693540974	WITHOUT_CLASSIFICATION	3.064590257807794E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9995845622212207	WITHOUT_CLASSIFICATION	4.1543777877927306E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998118890616553	WITHOUT_CLASSIFICATION	1.88110938344754E-4	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999938011257	WITHOUT_CLASSIFICATION	6.198874360581265E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999831749725	WITHOUT_CLASSIFICATION	1.6825027559859852E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.999999998524629	WITHOUT_CLASSIFICATION	1.4753710664491594E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999796836858	WITHOUT_CLASSIFICATION	2.0316314211283947E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9997231497542288	WITHOUT_CLASSIFICATION	2.7685024577118306E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9997550741739841	WITHOUT_CLASSIFICATION	2.449258260158524E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.999999998524629	WITHOUT_CLASSIFICATION	1.4753710664491594E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999274812635	WITHOUT_CLASSIFICATION	7.251873653027559E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999429783926	WITHOUT_CLASSIFICATION	5.7021607541367996E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999997619935211	WITHOUT_CLASSIFICATION	2.380064789258419E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999998376670868	WITHOUT_CLASSIFICATION	1.62332913124343E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999463473918	WITHOUT_CLASSIFICATION	5.365260821290797E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.99995063619803	WITHOUT_CLASSIFICATION	4.936380196995005E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99995063619803	WITHOUT_CLASSIFICATION	4.936380196995005E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99995063619803	WITHOUT_CLASSIFICATION	4.936380196995005E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99995063619803	WITHOUT_CLASSIFICATION	4.936380196995005E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99995063619803	WITHOUT_CLASSIFICATION	4.936380196995005E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99995063619803	WITHOUT_CLASSIFICATION	4.936380196995005E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923484836741	WITHOUT_CLASSIFICATION	7.651516325851444E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999994815899583	WITHOUT_CLASSIFICATION	5.184100417086661E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9996496853310916	WITHOUT_CLASSIFICATION	3.5031466890845186E-4	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999856925752645	WITHOUT_CLASSIFICATION	1.4307424735505183E-5	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999670847797	WITHOUT_CLASSIFICATION	3.29152203338604E-8	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999993153004498	WITHOUT_CLASSIFICATION	6.846995501039102E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999999990380064	WITHOUT_CLASSIFICATION	9.619935983214908E-9	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.999996706159821	WITHOUT_CLASSIFICATION	3.2938401790785944E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.998460524698754	WITHOUT_CLASSIFICATION	0.0015394753012460563	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999390101767363	WITHOUT_CLASSIFICATION	6.0989823263766175E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.999999990496755	WITHOUT_CLASSIFICATION	9.503244983983071E-9	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999924540671613	WITHOUT_CLASSIFICATION	7.545932838682698E-6	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999841673487	WITHOUT_CLASSIFICATION	1.5832651216416142E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999990821144221	WITHOUT_CLASSIFICATION	9.178855778152931E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999586088532	WITHOUT_CLASSIFICATION	4.139114676306996E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999994751492619	WITHOUT_CLASSIFICATION	5.248507381025352E-7	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999999986597009	WITHOUT_CLASSIFICATION	1.3402990836396272E-9	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999685431679706	WITHOUT_CLASSIFICATION	3.1456832029401294E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999685431679706	WITHOUT_CLASSIFICATION	3.1456832029401294E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999685431679706	WITHOUT_CLASSIFICATION	3.1456832029401294E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999995739387729	WITHOUT_CLASSIFICATION	4.260612270844318E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999483277306669	WITHOUT_CLASSIFICATION	5.1672269333073865E-5	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999999659788543	WITHOUT_CLASSIFICATION	3.402114563565893E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999998351853547	WITHOUT_CLASSIFICATION	1.6481464531169194E-7	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9430225215474857	WITHOUT_CLASSIFICATION	0.05697747845251431	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999998719380472	WITHOUT_CLASSIFICATION	1.2806195279471733E-6	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999992481177	WITHOUT_CLASSIFICATION	7.518824240897329E-10	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.999999722538062	WITHOUT_CLASSIFICATION	2.774619379876608E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999709914144047	WITHOUT_CLASSIFICATION	2.900858559531616E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999969767611644	WITHOUT_CLASSIFICATION	3.0232388356945726E-6	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.99999817140557	WITHOUT_CLASSIFICATION	1.8285944300127496E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999995046434531	WITHOUT_CLASSIFICATION	4.953565469955416E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.999999732334141	WITHOUT_CLASSIFICATION	2.676658589830161E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999915768781653	WITHOUT_CLASSIFICATION	8.423121834675805E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999915768781653	WITHOUT_CLASSIFICATION	8.423121834675805E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999927420738901	WITHOUT_CLASSIFICATION	7.257926109870504E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999970808871912	WITHOUT_CLASSIFICATION	2.9191128088653975E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999857436775826	WITHOUT_CLASSIFICATION	1.4256322417434726E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999723421993	WITHOUT_CLASSIFICATION	2.765780077081821E-8	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.999987388497419	WITHOUT_CLASSIFICATION	1.2611502581099915E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999924980684403	WITHOUT_CLASSIFICATION	7.50193155962603E-6	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999980562332004	WITHOUT_CLASSIFICATION	1.9437667996095167E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999857623975883	WITHOUT_CLASSIFICATION	1.4237602411704973E-5	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999735156224	WITHOUT_CLASSIFICATION	2.6484377674055517E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999915768781653	WITHOUT_CLASSIFICATION	8.423121834675805E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999942503875755	WITHOUT_CLASSIFICATION	5.749612424564404E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9998642880278462	WITHOUT_CLASSIFICATION	1.357119721537223E-4	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999985159214015	WITHOUT_CLASSIFICATION	1.4840785984455387E-6	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999753667623127	WITHOUT_CLASSIFICATION	2.4633237687246112E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999974375181127	WITHOUT_CLASSIFICATION	2.5624818873340025E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999983872434008	WITHOUT_CLASSIFICATION	1.612756599089868E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999983872434008	WITHOUT_CLASSIFICATION	1.612756599089868E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999987528375762	WITHOUT_CLASSIFICATION	1.247162423697437E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9998835212505225	WITHOUT_CLASSIFICATION	1.1647874947740892E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999982987690836	WITHOUT_CLASSIFICATION	1.7012309163422943E-6	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999999132886188	WITHOUT_CLASSIFICATION	8.67113811933853E-8	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999961708536838	WITHOUT_CLASSIFICATION	3.8291463161957326E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999961708536838	WITHOUT_CLASSIFICATION	3.8291463161957326E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999782718861995	WITHOUT_CLASSIFICATION	2.1728113800568076E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999782718861995	WITHOUT_CLASSIFICATION	2.1728113800568076E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999982248113889	WITHOUT_CLASSIFICATION	1.7751886110993572E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999960292752634	WITHOUT_CLASSIFICATION	3.970724736567822E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999132266531544	WITHOUT_CLASSIFICATION	8.677334684548724E-5	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999953068004701	WITHOUT_CLASSIFICATION	4.693199529853999E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999991463549113	WITHOUT_CLASSIFICATION	8.536450888032114E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9990608486027679	WITHOUT_CLASSIFICATION	9.391513972320923E-4	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9990608486027679	WITHOUT_CLASSIFICATION	9.391513972320923E-4	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9998561990634185	WITHOUT_CLASSIFICATION	1.4380093658147367E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999000189961	WITHOUT_CLASSIFICATION	9.998100384748333E-8	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999664900666	WITHOUT_CLASSIFICATION	3.350993350354145E-8	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.999999429400495	WITHOUT_CLASSIFICATION	5.705995050416501E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999993814487727	WITHOUT_CLASSIFICATION	6.185512273224955E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999988728411734	WITHOUT_CLASSIFICATION	1.1271588265113389E-6	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9475934345123124	WITHOUT_CLASSIFICATION	0.05240656548768765	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999991392417182	WITHOUT_CLASSIFICATION	8.607582817409476E-7	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999988227734287	WITHOUT_CLASSIFICATION	1.1772265712881295E-6	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.999026628610107	WITHOUT_CLASSIFICATION	9.733713898930031E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999997550867915	WITHOUT_CLASSIFICATION	2.449132085644046E-7	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999993548784851	WITHOUT_CLASSIFICATION	6.451215148636815E-7	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9992080840919749	WITHOUT_CLASSIFICATION	7.919159080250704E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999986660228868	WITHOUT_CLASSIFICATION	1.3339771131979517E-5	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999721429759394	WITHOUT_CLASSIFICATION	2.7857024060598655E-5	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999964047953469	WITHOUT_CLASSIFICATION	3.5952046531012862E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999527501486	WITHOUT_CLASSIFICATION	4.724985134920255E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999999649509286	WITHOUT_CLASSIFICATION	3.504907140021903E-7	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999953938744155	WITHOUT_CLASSIFICATION	4.606125584470587E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999906961492244	WITHOUT_CLASSIFICATION	9.303850775478776E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999906961492244	WITHOUT_CLASSIFICATION	9.303850775478776E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999999643607814	WITHOUT_CLASSIFICATION	3.563921856774769E-8	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999945087245422	WITHOUT_CLASSIFICATION	5.491275457771818E-6	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999977505443837	WITHOUT_CLASSIFICATION	2.249455616253798E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999593318154354	WITHOUT_CLASSIFICATION	4.0668184564644097E-5	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.999999525625624	WITHOUT_CLASSIFICATION	4.7437437599055174E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999503334511973	WITHOUT_CLASSIFICATION	4.966654880269597E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.999938641437224	WITHOUT_CLASSIFICATION	6.135856277601751E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999963088113226	WITHOUT_CLASSIFICATION	3.6911886773351237E-6	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999980408194445	WITHOUT_CLASSIFICATION	1.9591805555549587E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999998773032759	WITHOUT_CLASSIFICATION	1.2269672401288915E-7	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999814248877884	WITHOUT_CLASSIFICATION	1.8575112211570606E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999923754888154	WITHOUT_CLASSIFICATION	7.624511184654389E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999796792416971	WITHOUT_CLASSIFICATION	2.0320758302960726E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9993404425961315	WITHOUT_CLASSIFICATION	6.595574038685512E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999967909083705	WITHOUT_CLASSIFICATION	3.2090916295044504E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999989012989488	WITHOUT_CLASSIFICATION	1.098701051247974E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999972823557316	WITHOUT_CLASSIFICATION	2.717644268439453E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999878494884762	WITHOUT_CLASSIFICATION	1.2150511523732953E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908004449947	WITHOUT_CLASSIFICATION	9.199555005286701E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908004449947	WITHOUT_CLASSIFICATION	9.199555005286701E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908004449947	WITHOUT_CLASSIFICATION	9.199555005286701E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908004449947	WITHOUT_CLASSIFICATION	9.199555005286701E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999938851517547	WITHOUT_CLASSIFICATION	6.114848245265228E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999999632367144	WITHOUT_CLASSIFICATION	3.676328561142193E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999999632367144	WITHOUT_CLASSIFICATION	3.676328561142193E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999993901162892	WITHOUT_CLASSIFICATION	6.098837108158057E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999645342344707	WITHOUT_CLASSIFICATION	3.546576552921897E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999998353354648	WITHOUT_CLASSIFICATION	1.6466453520032065E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999999852583068	WITHOUT_CLASSIFICATION	1.4741693195783191E-7	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999977831072037	WITHOUT_CLASSIFICATION	2.216892796328906E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999994299974303	WITHOUT_CLASSIFICATION	5.700025696010303E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999907762956689	WITHOUT_CLASSIFICATION	9.223704331031716E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999952933765933	WITHOUT_CLASSIFICATION	4.70662340667693E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999952933765933	WITHOUT_CLASSIFICATION	4.70662340667693E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999952933765933	WITHOUT_CLASSIFICATION	4.70662340667693E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999992370932242	WITHOUT_CLASSIFICATION	7.629067758757224E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997519492565	WITHOUT_CLASSIFICATION	2.4805074340575943E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.999854805735042	WITHOUT_CLASSIFICATION	1.451942649580327E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999994737192152	WITHOUT_CLASSIFICATION	5.262807849219469E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999994737192152	WITHOUT_CLASSIFICATION	5.262807849219469E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999548225229	WITHOUT_CLASSIFICATION	4.5177477037975694E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990273431068	WITHOUT_CLASSIFICATION	9.726568932792852E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999984706732438	WITHOUT_CLASSIFICATION	1.5293267563062077E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999968487541252	WITHOUT_CLASSIFICATION	3.151245874775653E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9982783741528282	WITHOUT_CLASSIFICATION	0.0017216258471719132	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999653492874	WITHOUT_CLASSIFICATION	3.4650712595453646E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999966433454515	WITHOUT_CLASSIFICATION	3.35665454849801E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999997596948145	WITHOUT_CLASSIFICATION	2.403051854948507E-7	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999559862459	WITHOUT_CLASSIFICATION	4.4013754138554884E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999989228217583	WITHOUT_CLASSIFICATION	1.0771782417570893E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999828265539	WITHOUT_CLASSIFICATION	1.71734461344923E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998932905418475	WITHOUT_CLASSIFICATION	1.0670945815240628E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998932905418475	WITHOUT_CLASSIFICATION	1.0670945815240628E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.992549165064814	WITHOUT_CLASSIFICATION	0.00745083493518595	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9974252587397907	WITHOUT_CLASSIFICATION	0.0025747412602093326	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9974252587397907	WITHOUT_CLASSIFICATION	0.0025747412602093326	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999769814519341	WITHOUT_CLASSIFICATION	2.30185480658661E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999996995874231	WITHOUT_CLASSIFICATION	3.004125769651361E-7	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999996995874231	WITHOUT_CLASSIFICATION	3.004125769651361E-7	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989106204583	WITHOUT_CLASSIFICATION	1.0893795415920558E-6	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999996939314745	WITHOUT_CLASSIFICATION	3.0606852548251294E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9991286259920686	WITHOUT_CLASSIFICATION	8.71374007931281E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964720276546	WITHOUT_CLASSIFICATION	3.527972345335862E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964720276546	WITHOUT_CLASSIFICATION	3.527972345335862E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999963720995291	WITHOUT_CLASSIFICATION	3.6279004708913233E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9998857043937908	WITHOUT_CLASSIFICATION	1.1429560620932776E-4	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999730560814776	WITHOUT_CLASSIFICATION	2.69439185224796E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.738232298270368	WITHOUT_CLASSIFICATION	0.261767701729632	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999972551448446	WITHOUT_CLASSIFICATION	2.744855155337775E-6	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999972551448446	WITHOUT_CLASSIFICATION	2.744855155337775E-6	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.8818064169944873	DEFECT	0.11819358300551273	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999907732072988	WITHOUT_CLASSIFICATION	9.22679270116127E-6	DEFECT
// is this an error???	DEFECT	0.9999907732072988	WITHOUT_CLASSIFICATION	9.22679270116127E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999963716441065	WITHOUT_CLASSIFICATION	3.6283558935197977E-6	DEFECT
